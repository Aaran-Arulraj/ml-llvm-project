; ModuleID = 'blender/source/blender/blenkernel/intern/particle_system.c'
source_filename = "blender/source/blender/blenkernel/intern/particle_system.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.ParticleSystem = type { %struct.ParticleSystem*, %struct.ParticleSystem*, %struct.ParticleSettings*, %struct.ParticleData*, %struct.ChildParticle*, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)*, %struct.ParticleCacheKey**, %struct.ParticleCacheKey**, %struct.ListBase, %struct.ListBase, %struct.ClothModifierData*, %struct.DerivedMesh*, %struct.DerivedMesh*, %struct.Object*, %struct.LatticeDeformData*, %struct.Object*, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, i8*, %struct.PointCache*, %struct.ListBase, %struct.ListBase*, %struct.ParticleSpring*, i32, i32, %struct.KDTree*, %struct.BVHTree*, %struct.ParticleDrawData*, float, float }
%struct.ParticleSettings = type { %struct.ID, %struct.AnimData*, %struct.BoidSettings*, %struct.SPHFluidSettings*, %struct.EffectorWeights*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x %struct.MTex*], %struct.Group*, %struct.ListBase, %struct.Group*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.PartDeflect*, %struct.PartDeflect*, i16, [3 x i16] }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.BoidSettings = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.ListBase }
%struct.SPHFluidSettings = type { float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i16, [3 x i16] }
%struct.EffectorWeights = type { %struct.Group*, [14 x float], float, i16, [3 x i16], i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.bNodeTree = type opaque
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.Group = type opaque
%struct.Ipo = type opaque
%struct.PartDeflect = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.Tex*, %struct.RNG*, float, i32, %struct.Object* }
%struct.RNG = type opaque
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, %struct.HairKey*, %struct.ParticleKey*, %struct.BoidParticle*, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.HairKey = type { [3 x float], float, float, i16, i16 }
%struct.BoidParticle = type { %struct.Object*, %struct.BoidData, [3 x float], [3 x float], float }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.ChildParticle = type { i32, i32, [4 x i32], [4 x float], [4 x float], float, float }
%struct.PTCacheEdit = type { %struct.ListBase, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.PTCacheID, %struct.ParticleSystem*, %struct.ParticleData*, %struct.KDTree*, float*, i32*, %struct.ParticleCacheKey**, %struct.ListBase, i32, i32, i32, i32, [3 x i8], [3 x i8] }
%struct.PTCacheUndo = type { %struct.PTCacheUndo*, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.ParticleData*, %struct.KDTree*, float*, i32, %struct.ListBase, i32, [64 x i8] }
%struct.PTCacheEditPoint = type { %struct.PTCacheEditKey*, i32, i16 }
%struct.PTCacheEditKey = type { float*, float*, float*, float*, [3 x float], float, float, i16 }
%struct.PTCacheID = type { %struct.PTCacheID*, %struct.PTCacheID*, %struct.Scene*, %struct.Object*, i8*, i32, i32, i32, i32, i32, i32, i32, i32 (i32, i8*, i8**, i32)*, void (i32, i8*, i8**, float, float*)*, void (i32, i8*, i8**, float, float, float, float*)*, i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)*, void (i8*, %struct.PTCacheMem*, i32)*, void (i8*, %struct.PTCacheMem*, float)*, void (i8*, %struct.PTCacheMem*, float, float, float)*, i32 (i8*, i32)*, void (i8*, i8*)*, i32 (i8*, i32)*, i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)*, %struct.PointCache*, %struct.PointCache**, %struct.ListBase* }
%struct.PTCacheFile = type { %struct._IO_FILE*, i32, i32, i32, i32, i32, i32, %struct.PTCacheData, [8 x i8*] }
%struct.PTCacheData = type { i32, [3 x float], [3 x float], [4 x float], [3 x float], float, [3 x float], %struct.BoidData }
%struct.PTCacheMem = type { %struct.PTCacheMem*, %struct.PTCacheMem*, i32, i32, i32, i32, [8 x i8*], [8 x i8*], %struct.ListBase }
%struct.ParticleCacheKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float, i32 }
%struct.ClothModifierData = type { %struct.ModifierData, %struct.Scene*, %struct.Cloth*, %struct.ClothSimSettings*, %struct.ClothCollSettings*, %struct.PointCache*, %struct.ListBase }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.Cloth = type { %struct.ClothVertex*, %struct.LinkNode*, i32, i32, i32, i8, i8, i16, %struct.BVHTree*, %struct.BVHTree*, %struct.MFace*, %struct.Implicit_Data*, %struct.Implicit_Data*, %struct.EdgeSet*, i32, i32 }
%struct.ClothVertex = type { i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], float*, i32, float, float, float, float, i32, float }
%struct.LinkNode = type { %struct.LinkNode*, i8* }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.Implicit_Data = type opaque
%struct.EdgeSet = type opaque
%struct.ClothSimSettings = type { %struct.LinkNode*, float, float, float, [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i8], %struct.EffectorWeights* }
%struct.ClothCollSettings = type { %struct.LinkNode*, float, float, float, float, float, float, i32, i16, i16, %struct.Group*, i16, i16, i32 }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.GPUDrawObject = type opaque
%struct.Material = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.LatticeDeformData = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type { i32, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, float, float }
%struct.SoftBody = type { i32, i32, %struct.BodyPoint*, %struct.BodySpring*, i8, i8, i16, float, [64 x i8], float, float, float, float, float, float, float, float, float, i16, [64 x i8], i16, float, float, [64 x i8], i32, i32, i32, i16, i16, %struct.SBVertex**, i32, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.SBScratch*, float, float, %struct.PointCache*, %struct.ListBase, %struct.EffectorWeights*, [3 x float], [3 x [3 x float]], [3 x [3 x float]], i32 }
%struct.BodyPoint = type opaque
%struct.BodySpring = type opaque
%struct.SBVertex = type { [4 x float] }
%struct.SBScratch = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.PointCache = type { %struct.PointCache*, %struct.PointCache*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, [64 x i8], [64 x i8], [64 x i8], [1024 x i8], i8*, %struct.ListBase, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)* }
%struct.ParticleSpring = type { float, [2 x i32], i32 }
%struct.KDTree = type opaque
%struct.BVHTree = type opaque
%struct.ParticleDrawData = type { float*, float*, float*, float*, float*, float*, float*, float*, float*, i32, i32, i32, i32 }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type opaque
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.ParticleThread = type { %struct.ParticleThreadContext*, %struct.RNG*, %struct.RNG*, i32, i32 }
%struct.ParticleThreadContext = type { %struct.ParticleSimulationData, %struct.DerivedMesh*, %struct.Material*, %struct.KDTree*, %struct.ParticleSeam*, i32, float*, float*, float*, float, i32*, i32*, i32, i32, i32, i32, %struct.ParticleData*, i32, i32, i32, i32, i32, i32, float, float*, float*, float*, float*, float*, float*, float* }
%struct.ParticleSimulationData = type { %struct.Scene*, %struct.Object*, %struct.ParticleSystem*, %struct.ParticleSystemModifierData*, %struct.ListBase*, float }
%struct.ParticleSystemModifierData = type { %struct.ModifierData, %struct.ParticleSystem*, %struct.DerivedMesh*, i32, i32, i32, i16, i16 }
%struct.ParticleSeam = type { [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float }
%struct.ParticleTexture = type { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.BoidState = type { %struct.BoidState*, %struct.BoidState*, %struct.ListBase, %struct.ListBase, %struct.ListBase, [32 x i8], i32, i32, i32, float, i32, i32, float, float }
%struct.ParticleTarget = type { %struct.ParticleTarget*, %struct.ParticleTarget*, %struct.Object*, i32, i16, i16, float, float }
%struct.SPHData = type { [10 x %struct.ParticleSystem*], %struct.ParticleData*, float, %struct.EdgeHash*, float*, float, i32, float, [3 x float], void (i8*, %struct.ParticleKey*, float*, float*)*, void (i8*, i32, float)* }
%struct.EdgeHash = type opaque
%struct.SPHRangeData = type { [512 x %struct.SPHNeighbor], i32, float*, %struct.ParticleSystem*, %struct.ParticleData*, float, float, float, i32 }
%struct.SPHNeighbor = type { %struct.ParticleSystem*, i32 }
%struct.BVHTreeRay = type { [3 x float], [3 x float], float }
%struct.BVHTreeRayHit = type { i32, [3 x float], [3 x float], float, i32 }
%struct.ParticleCollision = type { %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.CollisionModifierData*, float, float, float, float, float, float, i32, %struct.ParticleCollisionElement, float, float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, i32 }
%struct.CollisionModifierData = type { %struct.ModifierData, %struct.MVert*, %struct.MVert*, %struct.MVert*, %struct.MVert*, %struct.MVert*, %struct.MVert*, %struct.MFace*, i32, i32, float, float, %struct.BVHTree* }
%struct.ParticleCollisionElement = type { [4 x float*], [4 x float*], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [2 x float], i32, i32, i16, i16 }
%struct.BoidRule = type { %struct.BoidRule*, %struct.BoidRule*, i32, i32, [32 x i8] }
%struct.ParticleInstanceModifierData = type { %struct.ModifierData, %struct.Object*, i16, i16, i16, i16, float, float }
%struct.BoidBrainData = type { %struct.ParticleSimulationData*, %struct.ParticleSettings*, float, float, float, [3 x float], float, %struct.Object*, [3 x float], [3 x float], float, %struct.RNG* }
%struct.EfData = type { %struct.ParticleTexture, %struct.ParticleSimulationData*, %struct.ParticleData* }
%struct.EffectedPoint = type { float*, float*, float*, float*, float, float, float, float, i32, i32, %struct.ParticleSystem* }
%struct.ColliderCache = type { %struct.ColliderCache*, %struct.ColliderCache*, %struct.Object*, %struct.CollisionModifierData* }
%struct.KDTreeNearest = type { i32, float, [3 x float] }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [16 x i8] c"psys node elems\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"psys node array\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"ParticleThread\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"ParticleThreadContext\00", align 1
@__const.psys_get_birth_coordinates.x_vec = private unnamed_addr constant [3 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], align 4
@__const.psys_get_birth_coordinates.utan = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], align 4
@__const.psys_get_birth_coordinates.vtan = private unnamed_addr constant [3 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@.str.4 = private unnamed_addr constant [10 x i8] c"Boid Data\00", align 1
@PSYS_FRAND_SEED_OFFSET = external dso_local global [1024 x i32], align 16
@PSYS_FRAND_SEED_MULTIPLIER = external dso_local global [1024 x i32], align 16
@PSYS_FRAND_BASE = external dso_local global [1024 x float], align 16
@__func__.sph_springhash_build = private unnamed_addr constant [21 x i8] c"sph_springhash_build\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"Particle Fluid Springs\00", align 1
@MEM_reallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@__func__.sph_spring_add = private unnamed_addr constant [15 x i8] c"sph_spring_add\00", align 1
@psys_bvhtree_rwlock = internal global i32 0, align 4, !dbg !0
@.str.6 = private unnamed_addr constant [14 x i8] c"Boid Settings\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"SPH Fluid Settings\00", align 1
@__const.basic_rotate.rot2 = private unnamed_addr constant [4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], align 16
@__func__.sph_spring_delete = private unnamed_addr constant [18 x i8] c"sph_spring_delete\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"HairKeys\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"deformWeight\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.10 = private unnamed_addr constant [27 x i8] c"do_hair_dynamics vertexCos\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"particles\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"boid particles\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.13 = private unnamed_addr constant [30 x i8] c"Particle distribution error!\0A\00", align 1
@.str.14 = private unnamed_addr constant [87 x i8] c"Can't create particles with the current modifier stack, disable destructive modifiers\0A\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.15 = private unnamed_addr constant [52 x i8] c"Particle distribution error: Nothing to emit from!\0A\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"particle_distribution_weights\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"particle_distribution_indexes\00", align 1
@.str.18 = private unnamed_addr constant [26 x i8] c"particle_distribution_sum\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"particle_distribution_jitoff\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"jit\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"initjit\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"child_particles\00", align 1
@.str.23 = private unnamed_addr constant [34 x i8] c"Shape emission not yet possible!\0A\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"Keyed keys\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local float @psys_get_current_display_percentage(%struct.ParticleSystem* %psys) #0 !dbg !3328 {
entry:
  %retval = alloca float, align 4
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !3332, metadata !DIExpression()), !dbg !3333
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !3334, metadata !DIExpression()), !dbg !3335
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3336
  %part1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 2, !dbg !3337
  %1 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part1, align 8, !dbg !3337
  store %struct.ParticleSettings* %1, %struct.ParticleSettings** %part, align 8, !dbg !3335
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3338
  %renderdata = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 39, !dbg !3340
  %3 = load i8*, i8** %renderdata, align 8, !dbg !3340
  %tobool = icmp ne i8* %3, null, !dbg !3338
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !3341

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3342
  %call = call i32 @particles_are_dynamic(%struct.ParticleSystem* %4), !dbg !3343
  %tobool2 = icmp ne i32 %call, 0, !dbg !3343
  br i1 %tobool2, label %lor.lhs.false, label %if.then, !dbg !3344

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %5 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !3345
  %child_nbr = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %5, i32 0, i32 89, !dbg !3346
  %6 = load i32, i32* %child_nbr, align 4, !dbg !3346
  %tobool3 = icmp ne i32 %6, 0, !dbg !3345
  br i1 %tobool3, label %land.lhs.true4, label %lor.lhs.false6, !dbg !3347

land.lhs.true4:                                   ; preds = %lor.lhs.false
  %7 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !3348
  %childtype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %7, i32 0, i32 19, !dbg !3349
  %8 = load i16, i16* %childtype, align 4, !dbg !3349
  %conv = sext i16 %8 to i32, !dbg !3348
  %tobool5 = icmp ne i32 %conv, 0, !dbg !3348
  br i1 %tobool5, label %if.then, label %lor.lhs.false6, !dbg !3350

lor.lhs.false6:                                   ; preds = %land.lhs.true4, %lor.lhs.false
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3351
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 40, !dbg !3352
  %10 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !3352
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %10, i32 0, i32 2, !dbg !3353
  %11 = load i32, i32* %flag, align 8, !dbg !3353
  %and = and i32 %11, 8, !dbg !3354
  %tobool7 = icmp ne i32 %and, 0, !dbg !3354
  br i1 %tobool7, label %if.then, label %if.end, !dbg !3355

if.then:                                          ; preds = %lor.lhs.false6, %land.lhs.true4, %land.lhs.true
  store float 1.000000e+00, float* %retval, align 4, !dbg !3356
  br label %return, !dbg !3356

if.end:                                           ; preds = %lor.lhs.false6
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3358
  %part8 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %12, i32 0, i32 2, !dbg !3359
  %13 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part8, align 8, !dbg !3359
  %disp = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %13, i32 0, i32 30, !dbg !3360
  %14 = load i16, i16* %disp, align 2, !dbg !3360
  %conv9 = sext i16 %14 to i32, !dbg !3358
  %conv10 = sitofp i32 %conv9 to float, !dbg !3358
  %div = fdiv float %conv10, 1.000000e+02, !dbg !3361
  store float %div, float* %retval, align 4, !dbg !3362
  br label %return, !dbg !3362

return:                                           ; preds = %if.end, %if.then
  %15 = load float, float* %retval, align 4, !dbg !3363
  ret float %15, !dbg !3363
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @particles_are_dynamic(%struct.ParticleSystem* %psys) #0 !dbg !3364 {
entry:
  %retval = alloca i32, align 4
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !3367, metadata !DIExpression()), !dbg !3368
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3369
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 40, !dbg !3371
  %1 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !3371
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %1, i32 0, i32 2, !dbg !3372
  %2 = load i32, i32* %flag, align 8, !dbg !3372
  %and = and i32 %2, 1, !dbg !3373
  %tobool = icmp ne i32 %and, 0, !dbg !3373
  br i1 %tobool, label %if.then, label %if.end, !dbg !3374

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3375
  br label %return, !dbg !3375

if.end:                                           ; preds = %entry
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3376
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 2, !dbg !3378
  %4 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !3378
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %4, i32 0, i32 7, !dbg !3379
  %5 = load i16, i16* %type, align 8, !dbg !3379
  %conv = sext i16 %5 to i32, !dbg !3376
  %cmp = icmp eq i32 %conv, 2, !dbg !3380
  br i1 %cmp, label %if.then2, label %if.else, !dbg !3381

if.then2:                                         ; preds = %if.end
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3382
  %flag3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 25, !dbg !3383
  %7 = load i32, i32* %flag3, align 4, !dbg !3383
  %and4 = and i32 %7, 4, !dbg !3384
  store i32 %and4, i32* %retval, align 4, !dbg !3385
  br label %return, !dbg !3385

if.else:                                          ; preds = %if.end
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3386
  %part5 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 2, !dbg !3386
  %9 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part5, align 8, !dbg !3386
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %9, i32 0, i32 11, !dbg !3386
  %10 = load i16, i16* %phystype, align 8, !dbg !3386
  %conv6 = sext i16 %10 to i32, !dbg !3386
  %cmp7 = icmp eq i32 %conv6, 1, !dbg !3386
  br i1 %cmp7, label %lor.end, label %lor.lhs.false, !dbg !3386

lor.lhs.false:                                    ; preds = %if.else
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3386
  %part9 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 2, !dbg !3386
  %12 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part9, align 8, !dbg !3386
  %phystype10 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %12, i32 0, i32 11, !dbg !3386
  %13 = load i16, i16* %phystype10, align 8, !dbg !3386
  %conv11 = sext i16 %13 to i32, !dbg !3386
  %cmp12 = icmp eq i32 %conv11, 3, !dbg !3386
  br i1 %cmp12, label %lor.end, label %lor.rhs, !dbg !3386

lor.rhs:                                          ; preds = %lor.lhs.false
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3386
  %part14 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 2, !dbg !3386
  %15 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part14, align 8, !dbg !3386
  %phystype15 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %15, i32 0, i32 11, !dbg !3386
  %16 = load i16, i16* %phystype15, align 8, !dbg !3386
  %conv16 = sext i16 %16 to i32, !dbg !3386
  %cmp17 = icmp eq i32 %conv16, 4, !dbg !3386
  br label %lor.end, !dbg !3386

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.else
  %17 = phi i1 [ true, %lor.lhs.false ], [ true, %if.else ], [ %cmp17, %lor.rhs ]
  %lor.ext = zext i1 %17 to i32, !dbg !3386
  store i32 %lor.ext, i32* %retval, align 4, !dbg !3387
  br label %return, !dbg !3387

return:                                           ; preds = %lor.end, %if.then2, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !3388
  ret i32 %18, !dbg !3388
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_reset(%struct.ParticleSystem* %psys, i32 %mode) #0 !dbg !3389 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %mode.addr = alloca i32, align 4
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !3392, metadata !DIExpression()), !dbg !3393
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3394, metadata !DIExpression()), !dbg !3395
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !3396, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.declare(metadata i32* %p, metadata !3398, metadata !DIExpression()), !dbg !3397
  %0 = load i32, i32* %mode.addr, align 4, !dbg !3399
  %cmp = icmp eq i32 %0, 1, !dbg !3399
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3399

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %mode.addr, align 4, !dbg !3399
  %cmp1 = icmp eq i32 %1, 2, !dbg !3399
  br i1 %cmp1, label %if.then, label %if.else, !dbg !3401

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32, i32* %mode.addr, align 4, !dbg !3402
  %cmp2 = icmp eq i32 %2, 1, !dbg !3405
  br i1 %cmp2, label %if.then4, label %lor.lhs.false3, !dbg !3406

lor.lhs.false3:                                   ; preds = %if.then
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3407
  %flag = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 25, !dbg !3408
  %4 = load i32, i32* %flag, align 4, !dbg !3408
  %and = and i32 %4, 2048, !dbg !3409
  %tobool = icmp ne i32 %and, 0, !dbg !3409
  br i1 %tobool, label %if.end18, label %if.then4, !dbg !3410

if.then4:                                         ; preds = %lor.lhs.false3, %if.then
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3411
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 26, !dbg !3414
  %6 = load i32, i32* %totpart, align 8, !dbg !3414
  %7 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3415
  %call = call i32 @tot_particles(%struct.ParticleSystem* %7, %struct.PTCacheID* null), !dbg !3416
  %cmp5 = icmp ne i32 %6, %call, !dbg !3417
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !3418

if.then6:                                         ; preds = %if.then4
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3419
  call void @psys_free_particles(%struct.ParticleSystem* %8), !dbg !3421
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3422
  %totpart7 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 26, !dbg !3423
  store i32 0, i32* %totpart7, align 8, !dbg !3424
  br label %if.end, !dbg !3425

if.end:                                           ; preds = %if.then6, %if.then4
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3426
  %totkeyed = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 33, !dbg !3427
  store i16 0, i16* %totkeyed, align 8, !dbg !3428
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3429
  %flag8 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 25, !dbg !3430
  %12 = load i32, i32* %flag8, align 4, !dbg !3431
  %and9 = and i32 %12, -1537, !dbg !3431
  store i32 %and9, i32* %flag8, align 4, !dbg !3431
  %13 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3432
  %edit = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %13, i32 0, i32 5, !dbg !3434
  %14 = load %struct.PTCacheEdit*, %struct.PTCacheEdit** %edit, align 8, !dbg !3434
  %tobool10 = icmp ne %struct.PTCacheEdit* %14, null, !dbg !3432
  br i1 %tobool10, label %land.lhs.true, label %if.end17, !dbg !3435

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3436
  %free_edit = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %15, i32 0, i32 6, !dbg !3437
  %16 = load void (%struct.PTCacheEdit*)*, void (%struct.PTCacheEdit*)** %free_edit, align 8, !dbg !3437
  %tobool11 = icmp ne void (%struct.PTCacheEdit*)* %16, null, !dbg !3436
  br i1 %tobool11, label %if.then12, label %if.end17, !dbg !3438

if.then12:                                        ; preds = %land.lhs.true
  %17 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3439
  %free_edit13 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %17, i32 0, i32 6, !dbg !3441
  %18 = load void (%struct.PTCacheEdit*)*, void (%struct.PTCacheEdit*)** %free_edit13, align 8, !dbg !3441
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3442
  %edit14 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %19, i32 0, i32 5, !dbg !3443
  %20 = load %struct.PTCacheEdit*, %struct.PTCacheEdit** %edit14, align 8, !dbg !3443
  call void %18(%struct.PTCacheEdit* %20), !dbg !3439
  %21 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3444
  %edit15 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %21, i32 0, i32 5, !dbg !3445
  store %struct.PTCacheEdit* null, %struct.PTCacheEdit** %edit15, align 8, !dbg !3446
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3447
  %free_edit16 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %22, i32 0, i32 6, !dbg !3448
  store void (%struct.PTCacheEdit*)* null, void (%struct.PTCacheEdit*)** %free_edit16, align 8, !dbg !3449
  br label %if.end17, !dbg !3450

if.end17:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  br label %if.end18, !dbg !3451

if.end18:                                         ; preds = %if.end17, %lor.lhs.false3
  br label %if.end26, !dbg !3452

if.else:                                          ; preds = %lor.lhs.false
  %23 = load i32, i32* %mode.addr, align 4, !dbg !3453
  %cmp19 = icmp eq i32 %23, 4, !dbg !3455
  br i1 %cmp19, label %if.then20, label %if.end25, !dbg !3456

if.then20:                                        ; preds = %if.else
  store i32 0, i32* %p, align 4, !dbg !3457
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3457
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %24, i32 0, i32 3, !dbg !3457
  %25 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !3457
  store %struct.ParticleData* %25, %struct.ParticleData** %pa, align 8, !dbg !3457
  br label %for.cond, !dbg !3457

for.cond:                                         ; preds = %for.inc, %if.then20
  %26 = load i32, i32* %p, align 4, !dbg !3460
  %27 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3460
  %totpart21 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %27, i32 0, i32 26, !dbg !3460
  %28 = load i32, i32* %totpart21, align 8, !dbg !3460
  %cmp22 = icmp slt i32 %26, %28, !dbg !3460
  br i1 %cmp22, label %for.body, label %for.end, !dbg !3457

for.body:                                         ; preds = %for.cond
  %29 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3462
  %flag23 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %29, i32 0, i32 17, !dbg !3463
  %30 = load i16, i16* %flag23, align 4, !dbg !3464
  %conv = sext i16 %30 to i32, !dbg !3464
  %or = or i32 %conv, 2, !dbg !3464
  %conv24 = trunc i32 %or to i16, !dbg !3464
  store i16 %conv24, i16* %flag23, align 4, !dbg !3464
  br label %for.inc, !dbg !3462

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %p, align 4, !dbg !3460
  %inc = add nsw i32 %31, 1, !dbg !3460
  store i32 %inc, i32* %p, align 4, !dbg !3460
  %32 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3460
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %32, i32 1, !dbg !3460
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !3460
  br label %for.cond, !dbg !3460, !llvm.loop !3465

for.end:                                          ; preds = %for.cond
  br label %if.end25, !dbg !3467

if.end25:                                         ; preds = %for.end, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end18
  %33 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3468
  %child = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %33, i32 0, i32 4, !dbg !3470
  %34 = load %struct.ChildParticle*, %struct.ChildParticle** %child, align 8, !dbg !3470
  %tobool27 = icmp ne %struct.ChildParticle* %34, null, !dbg !3468
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !3471

if.then28:                                        ; preds = %if.end26
  %35 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3472
  %36 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3474
  %child29 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %36, i32 0, i32 4, !dbg !3475
  %37 = load %struct.ChildParticle*, %struct.ChildParticle** %child29, align 8, !dbg !3475
  %38 = bitcast %struct.ChildParticle* %37 to i8*, !dbg !3474
  call void %35(i8* %38), !dbg !3472
  %39 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3476
  %child30 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %39, i32 0, i32 4, !dbg !3477
  store %struct.ChildParticle* null, %struct.ChildParticle** %child30, align 8, !dbg !3478
  br label %if.end31, !dbg !3479

if.end31:                                         ; preds = %if.then28, %if.end26
  %40 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3480
  %totchild = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %40, i32 0, i32 28, !dbg !3481
  store i32 0, i32* %totchild, align 8, !dbg !3482
  %41 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3483
  %42 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3484
  %edit32 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %42, i32 0, i32 5, !dbg !3485
  %43 = load %struct.PTCacheEdit*, %struct.PTCacheEdit** %edit32, align 8, !dbg !3485
  call void @psys_free_path_cache(%struct.ParticleSystem* %41, %struct.PTCacheEdit* %43), !dbg !3486
  %44 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3487
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %44, i32 0, i32 40, !dbg !3488
  %45 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !3488
  call void @BKE_ptcache_invalidate(%struct.PointCache* %45), !dbg !3489
  %46 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3490
  %fluid_springs = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %46, i32 0, i32 43, !dbg !3492
  %47 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs, align 8, !dbg !3492
  %tobool33 = icmp ne %struct.ParticleSpring* %47, null, !dbg !3490
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !3493

if.then34:                                        ; preds = %if.end31
  %48 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3494
  %49 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3496
  %fluid_springs35 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %49, i32 0, i32 43, !dbg !3497
  %50 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs35, align 8, !dbg !3497
  %51 = bitcast %struct.ParticleSpring* %50 to i8*, !dbg !3496
  call void %48(i8* %51), !dbg !3494
  %52 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3498
  %fluid_springs36 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %52, i32 0, i32 43, !dbg !3499
  store %struct.ParticleSpring* null, %struct.ParticleSpring** %fluid_springs36, align 8, !dbg !3500
  br label %if.end37, !dbg !3501

if.end37:                                         ; preds = %if.then34, %if.end31
  %53 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3502
  %alloc_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %53, i32 0, i32 45, !dbg !3503
  store i32 0, i32* %alloc_fluidsprings, align 4, !dbg !3504
  %54 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3505
  %tot_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %54, i32 0, i32 44, !dbg !3506
  store i32 0, i32* %tot_fluidsprings, align 8, !dbg !3507
  ret void, !dbg !3508
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @tot_particles(%struct.ParticleSystem* %psys, %struct.PTCacheID* %pid) #0 !dbg !3509 {
entry:
  %retval = alloca i32, align 4
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %pid.addr = alloca %struct.PTCacheID*, align 8
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !3514, metadata !DIExpression()), !dbg !3515
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !3516, metadata !DIExpression()), !dbg !3517
  %0 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3518
  %tobool = icmp ne %struct.PTCacheID* %0, null, !dbg !3518
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !3520

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3521
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 40, !dbg !3522
  %2 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !3522
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %2, i32 0, i32 2, !dbg !3523
  %3 = load i32, i32* %flag, align 8, !dbg !3523
  %and = and i32 %3, 512, !dbg !3524
  %tobool1 = icmp ne i32 %and, 0, !dbg !3524
  br i1 %tobool1, label %if.then, label %if.else, !dbg !3525

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !3526
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %4, i32 0, i32 25, !dbg !3527
  %5 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !3527
  %totpoint = getelementptr inbounds %struct.PointCache, %struct.PointCache* %5, i32 0, i32 11, !dbg !3528
  %6 = load i32, i32* %totpoint, align 4, !dbg !3528
  store i32 %6, i32* %retval, align 4, !dbg !3529
  br label %return, !dbg !3529

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3530
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %7, i32 0, i32 2, !dbg !3532
  %8 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !3532
  %distr = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %8, i32 0, i32 9, !dbg !3533
  %9 = load i16, i16* %distr, align 4, !dbg !3533
  %conv = sext i16 %9 to i32, !dbg !3530
  %cmp = icmp eq i32 %conv, 2, !dbg !3534
  br i1 %cmp, label %land.lhs.true3, label %if.else15, !dbg !3535

land.lhs.true3:                                   ; preds = %if.else
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3536
  %part4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 2, !dbg !3537
  %11 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part4, align 8, !dbg !3537
  %from = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %11, i32 0, i32 8, !dbg !3538
  %12 = load i16, i16* %from, align 2, !dbg !3538
  %conv5 = sext i16 %12 to i32, !dbg !3536
  %cmp6 = icmp ne i32 %conv5, 0, !dbg !3539
  br i1 %cmp6, label %if.then8, label %if.else15, !dbg !3540

if.then8:                                         ; preds = %land.lhs.true3
  %13 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3541
  %part9 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %13, i32 0, i32 2, !dbg !3542
  %14 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part9, align 8, !dbg !3542
  %grid_res = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %14, i32 0, i32 65, !dbg !3543
  %15 = load i32, i32* %grid_res, align 4, !dbg !3543
  %16 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3544
  %part10 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %16, i32 0, i32 2, !dbg !3545
  %17 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part10, align 8, !dbg !3545
  %grid_res11 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %17, i32 0, i32 65, !dbg !3546
  %18 = load i32, i32* %grid_res11, align 4, !dbg !3546
  %mul = mul nsw i32 %15, %18, !dbg !3547
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3548
  %part12 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %19, i32 0, i32 2, !dbg !3549
  %20 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part12, align 8, !dbg !3549
  %grid_res13 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %20, i32 0, i32 65, !dbg !3550
  %21 = load i32, i32* %grid_res13, align 4, !dbg !3550
  %mul14 = mul nsw i32 %mul, %21, !dbg !3551
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3552
  %totunexist = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %22, i32 0, i32 27, !dbg !3553
  %23 = load i32, i32* %totunexist, align 4, !dbg !3553
  %sub = sub nsw i32 %mul14, %23, !dbg !3554
  store i32 %sub, i32* %retval, align 4, !dbg !3555
  br label %return, !dbg !3555

if.else15:                                        ; preds = %land.lhs.true3, %if.else
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3556
  %part16 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %24, i32 0, i32 2, !dbg !3557
  %25 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part16, align 8, !dbg !3557
  %totpart = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %25, i32 0, i32 63, !dbg !3558
  %26 = load i32, i32* %totpart, align 4, !dbg !3558
  %27 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3559
  %totunexist17 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %27, i32 0, i32 27, !dbg !3560
  %28 = load i32, i32* %totunexist17, align 4, !dbg !3560
  %sub18 = sub nsw i32 %26, %28, !dbg !3561
  store i32 %sub18, i32* %retval, align 4, !dbg !3562
  br label %return, !dbg !3562

return:                                           ; preds = %if.else15, %if.then8, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !3563
  ret i32 %29, !dbg !3563
}

declare dso_local void @psys_free_particles(%struct.ParticleSystem*) #2

declare dso_local void @psys_free_path_cache(%struct.ParticleSystem*, %struct.PTCacheEdit*) #2

declare dso_local void @BKE_ptcache_invalidate(%struct.PointCache*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_calc_dmcache(%struct.Object* %ob, %struct.DerivedMesh* %dm, %struct.ParticleSystem* %psys) #0 !dbg !3564 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %me = alloca %struct.Mesh*, align 8
  %use_modifier_stack = alloca i8, align 1
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %node = alloca %struct.LinkNode*, align 8
  %nodedmelem = alloca %struct.LinkNode*, align 8
  %nodearray = alloca %struct.LinkNode**, align 8
  %totdmelem = alloca i32, align 4
  %totelem = alloca i32, align 4
  %i = alloca i32, align 4
  %origindex = alloca i32*, align 8
  %origindex_poly = alloca i32*, align 8
  %origindex_final = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3569, metadata !DIExpression()), !dbg !3570
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3571, metadata !DIExpression()), !dbg !3572
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3575, metadata !DIExpression()), !dbg !3576
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3577
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !3578
  %1 = load i8*, i8** %data, align 8, !dbg !3578
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !3579
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !3576
  call void @llvm.dbg.declare(metadata i8* %use_modifier_stack, metadata !3580, metadata !DIExpression()), !dbg !3581
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3582
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 2, !dbg !3583
  %4 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !3583
  %use_modifier_stack1 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %4, i32 0, i32 130, !dbg !3584
  %5 = load i16, i16* %use_modifier_stack1, align 8, !dbg !3584
  %conv = trunc i16 %5 to i8, !dbg !3582
  store i8 %conv, i8* %use_modifier_stack, align 1, !dbg !3581
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !3585, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.declare(metadata i32* %p, metadata !3587, metadata !DIExpression()), !dbg !3586
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3588
  %deformedOnly = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 11, !dbg !3590
  %7 = load i32, i32* %deformedOnly, align 8, !dbg !3590
  %tobool = icmp ne i32 %7, 0, !dbg !3588
  br i1 %tobool, label %if.else124, label %if.then, !dbg !3591

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %node, metadata !3592, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %nodedmelem, metadata !3597, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.declare(metadata %struct.LinkNode*** %nodearray, metadata !3599, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.declare(metadata i32* %totdmelem, metadata !3602, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.declare(metadata i32* %totelem, metadata !3604, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3606, metadata !DIExpression()), !dbg !3607
  call void @llvm.dbg.declare(metadata i32** %origindex, metadata !3608, metadata !DIExpression()), !dbg !3609
  call void @llvm.dbg.declare(metadata i32** %origindex_poly, metadata !3610, metadata !DIExpression()), !dbg !3611
  store i32* null, i32** %origindex_poly, align 8, !dbg !3611
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3612
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 2, !dbg !3614
  %9 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !3614
  %from = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %9, i32 0, i32 8, !dbg !3615
  %10 = load i16, i16* %from, align 2, !dbg !3615
  %conv3 = sext i16 %10 to i32, !dbg !3612
  %cmp = icmp eq i32 %conv3, 0, !dbg !3616
  br i1 %cmp, label %if.then5, label %if.else9, !dbg !3617

if.then5:                                         ; preds = %if.then
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3618
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %11, i32 0, i32 23, !dbg !3620
  %12 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !3620
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3621
  %call = call i32 %12(%struct.DerivedMesh* %13), !dbg !3618
  store i32 %call, i32* %totdmelem, align 4, !dbg !3622
  %14 = load i8, i8* %use_modifier_stack, align 1, !dbg !3623
  %tobool6 = icmp ne i8 %14, 0, !dbg !3623
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !3625

if.then7:                                         ; preds = %if.then5
  %15 = load i32, i32* %totdmelem, align 4, !dbg !3626
  store i32 %15, i32* %totelem, align 4, !dbg !3628
  store i32* null, i32** %origindex, align 8, !dbg !3629
  br label %if.end, !dbg !3630

if.else:                                          ; preds = %if.then5
  %16 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3631
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %16, i32 0, i32 26, !dbg !3633
  %17 = load i32, i32* %totvert, align 8, !dbg !3633
  store i32 %17, i32* %totelem, align 4, !dbg !3634
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3635
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 50, !dbg !3636
  %19 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !3636
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3637
  %call8 = call i8* %19(%struct.DerivedMesh* %20, i32 7), !dbg !3635
  %21 = bitcast i8* %call8 to i32*, !dbg !3635
  store i32* %21, i32** %origindex, align 8, !dbg !3638
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end21, !dbg !3639

if.else9:                                         ; preds = %if.then
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3640
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 25, !dbg !3642
  %23 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !3642
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3643
  %call10 = call i32 %23(%struct.DerivedMesh* %24), !dbg !3640
  store i32 %call10, i32* %totdmelem, align 4, !dbg !3644
  %25 = load i8, i8* %use_modifier_stack, align 1, !dbg !3645
  %tobool11 = icmp ne i8 %25, 0, !dbg !3645
  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !3647

if.then12:                                        ; preds = %if.else9
  %26 = load i32, i32* %totdmelem, align 4, !dbg !3648
  store i32 %26, i32* %totelem, align 4, !dbg !3650
  store i32* null, i32** %origindex, align 8, !dbg !3651
  store i32* null, i32** %origindex_poly, align 8, !dbg !3652
  br label %if.end20, !dbg !3653

if.else13:                                        ; preds = %if.else9
  %27 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3654
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %27, i32 0, i32 30, !dbg !3656
  %28 = load i32, i32* %totpoly, align 8, !dbg !3656
  store i32 %28, i32* %totelem, align 4, !dbg !3657
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3658
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %29, i32 0, i32 52, !dbg !3659
  %30 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !3659
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3660
  %call14 = call i8* %30(%struct.DerivedMesh* %31, i32 7), !dbg !3658
  %32 = bitcast i8* %call14 to i32*, !dbg !3658
  store i32* %32, i32** %origindex, align 8, !dbg !3661
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3662
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 54, !dbg !3663
  %34 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !3663
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3664
  %call15 = call i8* %34(%struct.DerivedMesh* %35, i32 7), !dbg !3662
  %36 = bitcast i8* %call15 to i32*, !dbg !3662
  store i32* %36, i32** %origindex_poly, align 8, !dbg !3665
  %37 = load i32*, i32** %origindex_poly, align 8, !dbg !3666
  %cmp16 = icmp eq i32* %37, null, !dbg !3668
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !3669

if.then18:                                        ; preds = %if.else13
  store i32* null, i32** %origindex, align 8, !dbg !3670
  br label %if.end19, !dbg !3672

if.end19:                                         ; preds = %if.then18, %if.else13
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then12
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  %38 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3673
  %39 = load i32, i32* %totdmelem, align 4, !dbg !3674
  %conv22 = sext i32 %39 to i64, !dbg !3674
  %mul = mul i64 16, %conv22, !dbg !3675
  %call23 = call i8* %38(i64 %mul, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)), !dbg !3673
  %40 = bitcast i8* %call23 to %struct.LinkNode*, !dbg !3673
  store %struct.LinkNode* %40, %struct.LinkNode** %nodedmelem, align 8, !dbg !3676
  %41 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3677
  %42 = load i32, i32* %totelem, align 4, !dbg !3678
  %conv24 = sext i32 %42 to i64, !dbg !3678
  %mul25 = mul i64 8, %conv24, !dbg !3679
  %call26 = call i8* %41(i64 %mul25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !3677
  %43 = bitcast i8* %call26 to %struct.LinkNode**, !dbg !3677
  store %struct.LinkNode** %43, %struct.LinkNode*** %nodearray, align 8, !dbg !3680
  store i32 0, i32* %i, align 4, !dbg !3681
  %44 = load %struct.LinkNode*, %struct.LinkNode** %nodedmelem, align 8, !dbg !3683
  store %struct.LinkNode* %44, %struct.LinkNode** %node, align 8, !dbg !3684
  br label %for.cond, !dbg !3685

for.cond:                                         ; preds = %for.inc, %if.end21
  %45 = load i32, i32* %i, align 4, !dbg !3686
  %46 = load i32, i32* %totdmelem, align 4, !dbg !3688
  %cmp27 = icmp slt i32 %45, %46, !dbg !3689
  br i1 %cmp27, label %for.body, label %for.end, !dbg !3690

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %origindex_final, metadata !3691, metadata !DIExpression()), !dbg !3693
  %47 = load i32, i32* %i, align 4, !dbg !3694
  %conv29 = sext i32 %47 to i64, !dbg !3694
  %48 = inttoptr i64 %conv29 to i8*, !dbg !3694
  %49 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !3695
  %link = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %49, i32 0, i32 1, !dbg !3696
  store i8* %48, i8** %link, align 8, !dbg !3697
  %50 = load i8, i8* %use_modifier_stack, align 1, !dbg !3698
  %tobool30 = icmp ne i8 %50, 0, !dbg !3698
  br i1 %tobool30, label %if.then31, label %if.else32, !dbg !3700

if.then31:                                        ; preds = %for.body
  %51 = load i32, i32* %i, align 4, !dbg !3701
  store i32 %51, i32* %origindex_final, align 4, !dbg !3703
  br label %if.end41, !dbg !3704

if.else32:                                        ; preds = %for.body
  %52 = load i32*, i32** %origindex, align 8, !dbg !3705
  %tobool33 = icmp ne i32* %52, null, !dbg !3705
  br i1 %tobool33, label %cond.true, label %cond.false, !dbg !3705

cond.true:                                        ; preds = %if.else32
  %53 = load i32*, i32** %origindex, align 8, !dbg !3707
  %54 = load i32, i32* %i, align 4, !dbg !3708
  %idxprom = sext i32 %54 to i64, !dbg !3707
  %arrayidx = getelementptr inbounds i32, i32* %53, i64 %idxprom, !dbg !3707
  %55 = load i32, i32* %arrayidx, align 4, !dbg !3707
  br label %cond.end, !dbg !3705

cond.false:                                       ; preds = %if.else32
  br label %cond.end, !dbg !3705

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %55, %cond.true ], [ -1, %cond.false ], !dbg !3705
  store i32 %cond, i32* %origindex_final, align 4, !dbg !3709
  %56 = load i32*, i32** %origindex_poly, align 8, !dbg !3710
  %tobool34 = icmp ne i32* %56, null, !dbg !3710
  br i1 %tobool34, label %land.lhs.true, label %if.end40, !dbg !3712

land.lhs.true:                                    ; preds = %cond.end
  %57 = load i32, i32* %origindex_final, align 4, !dbg !3713
  %cmp35 = icmp ne i32 %57, -1, !dbg !3714
  br i1 %cmp35, label %if.then37, label %if.end40, !dbg !3715

if.then37:                                        ; preds = %land.lhs.true
  %58 = load i32*, i32** %origindex_poly, align 8, !dbg !3716
  %59 = load i32, i32* %origindex_final, align 4, !dbg !3718
  %idxprom38 = sext i32 %59 to i64, !dbg !3716
  %arrayidx39 = getelementptr inbounds i32, i32* %58, i64 %idxprom38, !dbg !3716
  %60 = load i32, i32* %arrayidx39, align 4, !dbg !3716
  store i32 %60, i32* %origindex_final, align 4, !dbg !3719
  br label %if.end40, !dbg !3720

if.end40:                                         ; preds = %if.then37, %land.lhs.true, %cond.end
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then31
  %61 = load i32, i32* %origindex_final, align 4, !dbg !3721
  %cmp42 = icmp ne i32 %61, -1, !dbg !3723
  br i1 %cmp42, label %land.lhs.true44, label %if.end60, !dbg !3724

land.lhs.true44:                                  ; preds = %if.end41
  %62 = load i32, i32* %origindex_final, align 4, !dbg !3725
  %63 = load i32, i32* %totelem, align 4, !dbg !3726
  %cmp45 = icmp slt i32 %62, %63, !dbg !3727
  br i1 %cmp45, label %if.then47, label %if.end60, !dbg !3728

if.then47:                                        ; preds = %land.lhs.true44
  %64 = load %struct.LinkNode**, %struct.LinkNode*** %nodearray, align 8, !dbg !3729
  %65 = load i32, i32* %origindex_final, align 4, !dbg !3732
  %idxprom48 = sext i32 %65 to i64, !dbg !3729
  %arrayidx49 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %64, i64 %idxprom48, !dbg !3729
  %66 = load %struct.LinkNode*, %struct.LinkNode** %arrayidx49, align 8, !dbg !3729
  %tobool50 = icmp ne %struct.LinkNode* %66, null, !dbg !3729
  br i1 %tobool50, label %if.then51, label %if.else56, !dbg !3733

if.then51:                                        ; preds = %if.then47
  %67 = load %struct.LinkNode**, %struct.LinkNode*** %nodearray, align 8, !dbg !3734
  %68 = load i32, i32* %origindex_final, align 4, !dbg !3736
  %idxprom52 = sext i32 %68 to i64, !dbg !3734
  %arrayidx53 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %67, i64 %idxprom52, !dbg !3734
  %69 = load %struct.LinkNode*, %struct.LinkNode** %arrayidx53, align 8, !dbg !3734
  %70 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !3737
  %next = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %70, i32 0, i32 0, !dbg !3738
  store %struct.LinkNode* %69, %struct.LinkNode** %next, align 8, !dbg !3739
  %71 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !3740
  %72 = load %struct.LinkNode**, %struct.LinkNode*** %nodearray, align 8, !dbg !3741
  %73 = load i32, i32* %origindex_final, align 4, !dbg !3742
  %idxprom54 = sext i32 %73 to i64, !dbg !3741
  %arrayidx55 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %72, i64 %idxprom54, !dbg !3741
  store %struct.LinkNode* %71, %struct.LinkNode** %arrayidx55, align 8, !dbg !3743
  br label %if.end59, !dbg !3744

if.else56:                                        ; preds = %if.then47
  %74 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !3745
  %75 = load %struct.LinkNode**, %struct.LinkNode*** %nodearray, align 8, !dbg !3747
  %76 = load i32, i32* %origindex_final, align 4, !dbg !3748
  %idxprom57 = sext i32 %76 to i64, !dbg !3747
  %arrayidx58 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %75, i64 %idxprom57, !dbg !3747
  store %struct.LinkNode* %74, %struct.LinkNode** %arrayidx58, align 8, !dbg !3749
  br label %if.end59

if.end59:                                         ; preds = %if.else56, %if.then51
  br label %if.end60, !dbg !3750

if.end60:                                         ; preds = %if.end59, %land.lhs.true44, %if.end41
  br label %for.inc, !dbg !3751

for.inc:                                          ; preds = %if.end60
  %77 = load i32, i32* %i, align 4, !dbg !3752
  %inc = add nsw i32 %77, 1, !dbg !3752
  store i32 %inc, i32* %i, align 4, !dbg !3752
  %78 = load %struct.LinkNode*, %struct.LinkNode** %node, align 8, !dbg !3753
  %incdec.ptr = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %78, i32 1, !dbg !3753
  store %struct.LinkNode* %incdec.ptr, %struct.LinkNode** %node, align 8, !dbg !3753
  br label %for.cond, !dbg !3754, !llvm.loop !3755

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %p, align 4, !dbg !3757
  %79 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3757
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %79, i32 0, i32 3, !dbg !3757
  %80 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !3757
  store %struct.ParticleData* %80, %struct.ParticleData** %pa, align 8, !dbg !3757
  br label %for.cond61, !dbg !3757

for.cond61:                                       ; preds = %for.inc120, %for.end
  %81 = load i32, i32* %p, align 4, !dbg !3759
  %82 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3759
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %82, i32 0, i32 26, !dbg !3759
  %83 = load i32, i32* %totpart, align 8, !dbg !3759
  %cmp62 = icmp slt i32 %81, %83, !dbg !3759
  br i1 %cmp62, label %for.body64, label %for.end123, !dbg !3757

for.body64:                                       ; preds = %for.cond61
  %84 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3761
  %num = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %84, i32 0, i32 9, !dbg !3764
  %85 = load i32, i32* %num, align 8, !dbg !3764
  %cmp65 = icmp slt i32 %85, 0, !dbg !3765
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !3766

if.then67:                                        ; preds = %for.body64
  %86 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3767
  %num_dmcache = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %86, i32 0, i32 10, !dbg !3769
  store i32 -1, i32* %num_dmcache, align 4, !dbg !3770
  br label %for.inc120, !dbg !3771

if.end68:                                         ; preds = %for.body64
  %87 = load i8, i8* %use_modifier_stack, align 1, !dbg !3772
  %tobool69 = icmp ne i8 %87, 0, !dbg !3772
  br i1 %tobool69, label %if.then70, label %if.else79, !dbg !3774

if.then70:                                        ; preds = %if.end68
  %88 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3775
  %num71 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %88, i32 0, i32 9, !dbg !3778
  %89 = load i32, i32* %num71, align 8, !dbg !3778
  %90 = load i32, i32* %totelem, align 4, !dbg !3779
  %cmp72 = icmp slt i32 %89, %90, !dbg !3780
  br i1 %cmp72, label %if.then74, label %if.else76, !dbg !3781

if.then74:                                        ; preds = %if.then70
  %91 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3782
  %num_dmcache75 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %91, i32 0, i32 10, !dbg !3783
  store i32 -2, i32* %num_dmcache75, align 4, !dbg !3784
  br label %if.end78, !dbg !3782

if.else76:                                        ; preds = %if.then70
  %92 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3785
  %num_dmcache77 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %92, i32 0, i32 10, !dbg !3786
  store i32 -1, i32* %num_dmcache77, align 4, !dbg !3787
  br label %if.end78

if.end78:                                         ; preds = %if.else76, %if.then74
  br label %if.end119, !dbg !3788

if.else79:                                        ; preds = %if.end68
  %93 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3789
  %part80 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %93, i32 0, i32 2, !dbg !3792
  %94 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part80, align 8, !dbg !3792
  %from81 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %94, i32 0, i32 8, !dbg !3793
  %95 = load i16, i16* %from81, align 2, !dbg !3793
  %conv82 = sext i16 %95 to i32, !dbg !3789
  %cmp83 = icmp eq i32 %conv82, 0, !dbg !3794
  br i1 %cmp83, label %if.then85, label %if.else104, !dbg !3795

if.then85:                                        ; preds = %if.else79
  %96 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3796
  %num86 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %96, i32 0, i32 9, !dbg !3799
  %97 = load i32, i32* %num86, align 8, !dbg !3799
  %98 = load i32, i32* %totelem, align 4, !dbg !3800
  %cmp87 = icmp slt i32 %97, %98, !dbg !3801
  br i1 %cmp87, label %land.lhs.true89, label %if.else101, !dbg !3802

land.lhs.true89:                                  ; preds = %if.then85
  %99 = load %struct.LinkNode**, %struct.LinkNode*** %nodearray, align 8, !dbg !3803
  %100 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3804
  %num90 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %100, i32 0, i32 9, !dbg !3805
  %101 = load i32, i32* %num90, align 8, !dbg !3805
  %idxprom91 = sext i32 %101 to i64, !dbg !3803
  %arrayidx92 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %99, i64 %idxprom91, !dbg !3803
  %102 = load %struct.LinkNode*, %struct.LinkNode** %arrayidx92, align 8, !dbg !3803
  %tobool93 = icmp ne %struct.LinkNode* %102, null, !dbg !3803
  br i1 %tobool93, label %if.then94, label %if.else101, !dbg !3806

if.then94:                                        ; preds = %land.lhs.true89
  %103 = load %struct.LinkNode**, %struct.LinkNode*** %nodearray, align 8, !dbg !3807
  %104 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3807
  %num95 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %104, i32 0, i32 9, !dbg !3807
  %105 = load i32, i32* %num95, align 8, !dbg !3807
  %idxprom96 = sext i32 %105 to i64, !dbg !3807
  %arrayidx97 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %103, i64 %idxprom96, !dbg !3807
  %106 = load %struct.LinkNode*, %struct.LinkNode** %arrayidx97, align 8, !dbg !3807
  %link98 = getelementptr inbounds %struct.LinkNode, %struct.LinkNode* %106, i32 0, i32 1, !dbg !3807
  %107 = load i8*, i8** %link98, align 8, !dbg !3807
  %108 = ptrtoint i8* %107 to i64, !dbg !3807
  %conv99 = trunc i64 %108 to i32, !dbg !3807
  %109 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3808
  %num_dmcache100 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %109, i32 0, i32 10, !dbg !3809
  store i32 %conv99, i32* %num_dmcache100, align 4, !dbg !3810
  br label %if.end103, !dbg !3808

if.else101:                                       ; preds = %land.lhs.true89, %if.then85
  %110 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3811
  %num_dmcache102 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %110, i32 0, i32 10, !dbg !3812
  store i32 -1, i32* %num_dmcache102, align 4, !dbg !3813
  br label %if.end103

if.end103:                                        ; preds = %if.else101, %if.then94
  br label %if.end118, !dbg !3814

if.else104:                                       ; preds = %if.else79
  %111 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3815
  %112 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3817
  %113 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3818
  %num105 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %113, i32 0, i32 9, !dbg !3819
  %114 = load i32, i32* %num105, align 8, !dbg !3819
  %115 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3820
  %fuv = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %115, i32 0, i32 11, !dbg !3821
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %fuv, i64 0, i64 0, !dbg !3820
  %116 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3822
  %num106 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %116, i32 0, i32 9, !dbg !3823
  %117 = load i32, i32* %num106, align 8, !dbg !3823
  %118 = load i32, i32* %totelem, align 4, !dbg !3824
  %cmp107 = icmp slt i32 %117, %118, !dbg !3825
  br i1 %cmp107, label %cond.true109, label %cond.false113, !dbg !3822

cond.true109:                                     ; preds = %if.else104
  %119 = load %struct.LinkNode**, %struct.LinkNode*** %nodearray, align 8, !dbg !3826
  %120 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3827
  %num110 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %120, i32 0, i32 9, !dbg !3828
  %121 = load i32, i32* %num110, align 8, !dbg !3828
  %idxprom111 = sext i32 %121 to i64, !dbg !3826
  %arrayidx112 = getelementptr inbounds %struct.LinkNode*, %struct.LinkNode** %119, i64 %idxprom111, !dbg !3826
  %122 = load %struct.LinkNode*, %struct.LinkNode** %arrayidx112, align 8, !dbg !3826
  br label %cond.end114, !dbg !3822

cond.false113:                                    ; preds = %if.else104
  br label %cond.end114, !dbg !3822

cond.end114:                                      ; preds = %cond.false113, %cond.true109
  %cond115 = phi %struct.LinkNode* [ %122, %cond.true109 ], [ null, %cond.false113 ], !dbg !3822
  %call116 = call i32 @psys_particle_dm_face_lookup(%struct.Object* %111, %struct.DerivedMesh* %112, i32 %114, float* %arraydecay, %struct.LinkNode* %cond115), !dbg !3829
  %123 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3830
  %num_dmcache117 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %123, i32 0, i32 10, !dbg !3831
  store i32 %call116, i32* %num_dmcache117, align 4, !dbg !3832
  br label %if.end118

if.end118:                                        ; preds = %cond.end114, %if.end103
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.end78
  br label %for.inc120, !dbg !3833

for.inc120:                                       ; preds = %if.end119, %if.then67
  %124 = load i32, i32* %p, align 4, !dbg !3759
  %inc121 = add nsw i32 %124, 1, !dbg !3759
  store i32 %inc121, i32* %p, align 4, !dbg !3759
  %125 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3759
  %incdec.ptr122 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %125, i32 1, !dbg !3759
  store %struct.ParticleData* %incdec.ptr122, %struct.ParticleData** %pa, align 8, !dbg !3759
  br label %for.cond61, !dbg !3759, !llvm.loop !3834

for.end123:                                       ; preds = %for.cond61
  %126 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3836
  %127 = load %struct.LinkNode**, %struct.LinkNode*** %nodearray, align 8, !dbg !3837
  %128 = bitcast %struct.LinkNode** %127 to i8*, !dbg !3837
  call void %126(i8* %128), !dbg !3836
  %129 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3838
  %130 = load %struct.LinkNode*, %struct.LinkNode** %nodedmelem, align 8, !dbg !3839
  %131 = bitcast %struct.LinkNode* %130 to i8*, !dbg !3839
  call void %129(i8* %131), !dbg !3838
  br label %if.end136, !dbg !3840

if.else124:                                       ; preds = %entry
  store i32 0, i32* %p, align 4, !dbg !3841
  %132 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3841
  %particles125 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %132, i32 0, i32 3, !dbg !3841
  %133 = load %struct.ParticleData*, %struct.ParticleData** %particles125, align 8, !dbg !3841
  store %struct.ParticleData* %133, %struct.ParticleData** %pa, align 8, !dbg !3841
  br label %for.cond126, !dbg !3841

for.cond126:                                      ; preds = %for.inc132, %if.else124
  %134 = load i32, i32* %p, align 4, !dbg !3844
  %135 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !3844
  %totpart127 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %135, i32 0, i32 26, !dbg !3844
  %136 = load i32, i32* %totpart127, align 8, !dbg !3844
  %cmp128 = icmp slt i32 %134, %136, !dbg !3844
  br i1 %cmp128, label %for.body130, label %for.end135, !dbg !3841

for.body130:                                      ; preds = %for.cond126
  %137 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3846
  %num_dmcache131 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %137, i32 0, i32 10, !dbg !3847
  store i32 -1, i32* %num_dmcache131, align 4, !dbg !3848
  br label %for.inc132, !dbg !3846

for.inc132:                                       ; preds = %for.body130
  %138 = load i32, i32* %p, align 4, !dbg !3844
  %inc133 = add nsw i32 %138, 1, !dbg !3844
  store i32 %inc133, i32* %p, align 4, !dbg !3844
  %139 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !3844
  %incdec.ptr134 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %139, i32 1, !dbg !3844
  store %struct.ParticleData* %incdec.ptr134, %struct.ParticleData** %pa, align 8, !dbg !3844
  br label %for.cond126, !dbg !3844, !llvm.loop !3849

for.end135:                                       ; preds = %for.cond126
  br label %if.end136

if.end136:                                        ; preds = %for.end135, %for.end123
  ret void, !dbg !3851
}

declare dso_local i32 @psys_particle_dm_face_lookup(%struct.Object*, %struct.DerivedMesh*, i32, float*, %struct.LinkNode*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ParticleThread* @psys_threads_create(%struct.ParticleSimulationData* %sim) #0 !dbg !3852 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %threads = alloca %struct.ParticleThread*, align 8
  %ctx = alloca %struct.ParticleThreadContext*, align 8
  %i = alloca i32, align 4
  %totthread = alloca i32, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !3855, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.declare(metadata %struct.ParticleThread** %threads, metadata !3857, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.declare(metadata %struct.ParticleThreadContext** %ctx, metadata !3859, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3861, metadata !DIExpression()), !dbg !3862
  call void @llvm.dbg.declare(metadata i32* %totthread, metadata !3863, metadata !DIExpression()), !dbg !3864
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !3865
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 0, !dbg !3866
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3866
  %call = call i32 @BKE_scene_num_threads(%struct.Scene* %1), !dbg !3867
  store i32 %call, i32* %totthread, align 4, !dbg !3864
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3868
  %3 = load i32, i32* %totthread, align 4, !dbg !3869
  %conv = sext i32 %3 to i64, !dbg !3869
  %mul = mul i64 32, %conv, !dbg !3870
  %call1 = call i8* %2(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)), !dbg !3868
  %4 = bitcast i8* %call1 to %struct.ParticleThread*, !dbg !3868
  store %struct.ParticleThread* %4, %struct.ParticleThread** %threads, align 8, !dbg !3871
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3872
  %call2 = call i8* %5(i64 248, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)), !dbg !3872
  %6 = bitcast i8* %call2 to %struct.ParticleThreadContext*, !dbg !3872
  store %struct.ParticleThreadContext* %6, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3873
  %7 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3874
  %sim3 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %7, i32 0, i32 0, !dbg !3875
  %8 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !3876
  %9 = bitcast %struct.ParticleSimulationData* %sim3 to i8*, !dbg !3877
  %10 = bitcast %struct.ParticleSimulationData* %8 to i8*, !dbg !3877
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 48, i1 false), !dbg !3877
  %11 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3878
  %sim4 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %11, i32 0, i32 0, !dbg !3879
  %psmd = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim4, i32 0, i32 3, !dbg !3880
  %12 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !3880
  %dm = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %12, i32 0, i32 2, !dbg !3881
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3881
  %14 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3882
  %dm5 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %14, i32 0, i32 1, !dbg !3883
  store %struct.DerivedMesh* %13, %struct.DerivedMesh** %dm5, align 8, !dbg !3884
  %15 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !3885
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %15, i32 0, i32 1, !dbg !3886
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !3886
  %17 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !3887
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %17, i32 0, i32 2, !dbg !3888
  %18 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3888
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %18, i32 0, i32 2, !dbg !3889
  %19 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !3889
  %omat = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %19, i32 0, i32 31, !dbg !3890
  %20 = load i16, i16* %omat, align 4, !dbg !3890
  %call6 = call %struct.Material* @give_current_material(%struct.Object* %16, i16 signext %20), !dbg !3891
  %21 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3892
  %ma = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %21, i32 0, i32 2, !dbg !3893
  store %struct.Material* %call6, %struct.Material** %ma, align 8, !dbg !3894
  %22 = load %struct.ParticleThread*, %struct.ParticleThread** %threads, align 8, !dbg !3895
  %23 = bitcast %struct.ParticleThread* %22 to i8*, !dbg !3896
  %24 = load i32, i32* %totthread, align 4, !dbg !3897
  %conv7 = sext i32 %24 to i64, !dbg !3897
  %mul8 = mul i64 32, %conv7, !dbg !3898
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 %mul8, i1 false), !dbg !3896
  store i32 0, i32* %i, align 4, !dbg !3899
  br label %for.cond, !dbg !3901

for.cond:                                         ; preds = %for.inc, %entry
  %25 = load i32, i32* %i, align 4, !dbg !3902
  %26 = load i32, i32* %totthread, align 4, !dbg !3904
  %cmp = icmp slt i32 %25, %26, !dbg !3905
  br i1 %cmp, label %for.body, label %for.end, !dbg !3906

for.body:                                         ; preds = %for.cond
  %27 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3907
  %28 = load %struct.ParticleThread*, %struct.ParticleThread** %threads, align 8, !dbg !3909
  %29 = load i32, i32* %i, align 4, !dbg !3910
  %idxprom = sext i32 %29 to i64, !dbg !3909
  %arrayidx = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %28, i64 %idxprom, !dbg !3909
  %ctx10 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx, i32 0, i32 0, !dbg !3911
  store %struct.ParticleThreadContext* %27, %struct.ParticleThreadContext** %ctx10, align 8, !dbg !3912
  %30 = load i32, i32* %i, align 4, !dbg !3913
  %31 = load %struct.ParticleThread*, %struct.ParticleThread** %threads, align 8, !dbg !3914
  %32 = load i32, i32* %i, align 4, !dbg !3915
  %idxprom11 = sext i32 %32 to i64, !dbg !3914
  %arrayidx12 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %31, i64 %idxprom11, !dbg !3914
  %num = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx12, i32 0, i32 3, !dbg !3916
  store i32 %30, i32* %num, align 8, !dbg !3917
  %33 = load i32, i32* %totthread, align 4, !dbg !3918
  %34 = load %struct.ParticleThread*, %struct.ParticleThread** %threads, align 8, !dbg !3919
  %35 = load i32, i32* %i, align 4, !dbg !3920
  %idxprom13 = sext i32 %35 to i64, !dbg !3919
  %arrayidx14 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %34, i64 %idxprom13, !dbg !3919
  %tot = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx14, i32 0, i32 4, !dbg !3921
  store i32 %33, i32* %tot, align 4, !dbg !3922
  br label %for.inc, !dbg !3923

for.inc:                                          ; preds = %for.body
  %36 = load i32, i32* %i, align 4, !dbg !3924
  %inc = add nsw i32 %36, 1, !dbg !3924
  store i32 %inc, i32* %i, align 4, !dbg !3924
  br label %for.cond, !dbg !3925, !llvm.loop !3926

for.end:                                          ; preds = %for.cond
  %37 = load %struct.ParticleThread*, %struct.ParticleThread** %threads, align 8, !dbg !3928
  ret %struct.ParticleThread* %37, !dbg !3929
}

declare dso_local i32 @BKE_scene_num_threads(%struct.Scene*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local %struct.Material* @give_current_material(%struct.Object*, i16 signext) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_threads_free(%struct.ParticleThread* %threads) #0 !dbg !3930 {
entry:
  %threads.addr = alloca %struct.ParticleThread*, align 8
  %ctx = alloca %struct.ParticleThreadContext*, align 8
  %i = alloca i32, align 4
  %totthread = alloca i32, align 4
  store %struct.ParticleThread* %threads, %struct.ParticleThread** %threads.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleThread** %threads.addr, metadata !3933, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.declare(metadata %struct.ParticleThreadContext** %ctx, metadata !3935, metadata !DIExpression()), !dbg !3936
  %0 = load %struct.ParticleThread*, %struct.ParticleThread** %threads.addr, align 8, !dbg !3937
  %arrayidx = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %0, i64 0, !dbg !3937
  %ctx1 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx, i32 0, i32 0, !dbg !3938
  %1 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx1, align 8, !dbg !3938
  store %struct.ParticleThreadContext* %1, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3936
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3939, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.declare(metadata i32* %totthread, metadata !3941, metadata !DIExpression()), !dbg !3942
  %2 = load %struct.ParticleThread*, %struct.ParticleThread** %threads.addr, align 8, !dbg !3943
  %arrayidx2 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %2, i64 0, !dbg !3943
  %tot = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx2, i32 0, i32 4, !dbg !3944
  %3 = load i32, i32* %tot, align 4, !dbg !3944
  store i32 %3, i32* %totthread, align 4, !dbg !3942
  %4 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3945
  %vg_length = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %4, i32 0, i32 24, !dbg !3947
  %5 = load float*, float** %vg_length, align 8, !dbg !3947
  %tobool = icmp ne float* %5, null, !dbg !3945
  br i1 %tobool, label %if.then, label %if.end, !dbg !3948

if.then:                                          ; preds = %entry
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3949
  %7 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3950
  %vg_length3 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %7, i32 0, i32 24, !dbg !3951
  %8 = load float*, float** %vg_length3, align 8, !dbg !3951
  %9 = bitcast float* %8 to i8*, !dbg !3950
  call void %6(i8* %9), !dbg !3949
  br label %if.end, !dbg !3949

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3952
  %vg_clump = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %10, i32 0, i32 25, !dbg !3954
  %11 = load float*, float** %vg_clump, align 8, !dbg !3954
  %tobool4 = icmp ne float* %11, null, !dbg !3952
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !3955

if.then5:                                         ; preds = %if.end
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3956
  %13 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3957
  %vg_clump6 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %13, i32 0, i32 25, !dbg !3958
  %14 = load float*, float** %vg_clump6, align 8, !dbg !3958
  %15 = bitcast float* %14 to i8*, !dbg !3957
  call void %12(i8* %15), !dbg !3956
  br label %if.end7, !dbg !3956

if.end7:                                          ; preds = %if.then5, %if.end
  %16 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3959
  %vg_kink = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %16, i32 0, i32 26, !dbg !3961
  %17 = load float*, float** %vg_kink, align 8, !dbg !3961
  %tobool8 = icmp ne float* %17, null, !dbg !3959
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !3962

if.then9:                                         ; preds = %if.end7
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3963
  %19 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3964
  %vg_kink10 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %19, i32 0, i32 26, !dbg !3965
  %20 = load float*, float** %vg_kink10, align 8, !dbg !3965
  %21 = bitcast float* %20 to i8*, !dbg !3964
  call void %18(i8* %21), !dbg !3963
  br label %if.end11, !dbg !3963

if.end11:                                         ; preds = %if.then9, %if.end7
  %22 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3966
  %vg_rough1 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %22, i32 0, i32 27, !dbg !3968
  %23 = load float*, float** %vg_rough1, align 8, !dbg !3968
  %tobool12 = icmp ne float* %23, null, !dbg !3966
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !3969

if.then13:                                        ; preds = %if.end11
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3970
  %25 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3971
  %vg_rough114 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %25, i32 0, i32 27, !dbg !3972
  %26 = load float*, float** %vg_rough114, align 8, !dbg !3972
  %27 = bitcast float* %26 to i8*, !dbg !3971
  call void %24(i8* %27), !dbg !3970
  br label %if.end15, !dbg !3970

if.end15:                                         ; preds = %if.then13, %if.end11
  %28 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3973
  %vg_rough2 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %28, i32 0, i32 28, !dbg !3975
  %29 = load float*, float** %vg_rough2, align 8, !dbg !3975
  %tobool16 = icmp ne float* %29, null, !dbg !3973
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !3976

if.then17:                                        ; preds = %if.end15
  %30 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3977
  %31 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3978
  %vg_rough218 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %31, i32 0, i32 28, !dbg !3979
  %32 = load float*, float** %vg_rough218, align 8, !dbg !3979
  %33 = bitcast float* %32 to i8*, !dbg !3978
  call void %30(i8* %33), !dbg !3977
  br label %if.end19, !dbg !3977

if.end19:                                         ; preds = %if.then17, %if.end15
  %34 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3980
  %vg_roughe = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %34, i32 0, i32 29, !dbg !3982
  %35 = load float*, float** %vg_roughe, align 8, !dbg !3982
  %tobool20 = icmp ne float* %35, null, !dbg !3980
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !3983

if.then21:                                        ; preds = %if.end19
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3984
  %37 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3985
  %vg_roughe22 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %37, i32 0, i32 29, !dbg !3986
  %38 = load float*, float** %vg_roughe22, align 8, !dbg !3986
  %39 = bitcast float* %38 to i8*, !dbg !3985
  call void %36(i8* %39), !dbg !3984
  br label %if.end23, !dbg !3984

if.end23:                                         ; preds = %if.then21, %if.end19
  %40 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3987
  %sim = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %40, i32 0, i32 0, !dbg !3989
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 2, !dbg !3990
  %41 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !3990
  %lattice_deform_data = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %41, i32 0, i32 15, !dbg !3991
  %42 = load %struct.LatticeDeformData*, %struct.LatticeDeformData** %lattice_deform_data, align 8, !dbg !3991
  %tobool24 = icmp ne %struct.LatticeDeformData* %42, null, !dbg !3987
  br i1 %tobool24, label %if.then25, label %if.end32, !dbg !3992

if.then25:                                        ; preds = %if.end23
  %43 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3993
  %sim26 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %43, i32 0, i32 0, !dbg !3995
  %psys27 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim26, i32 0, i32 2, !dbg !3996
  %44 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys27, align 8, !dbg !3996
  %lattice_deform_data28 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %44, i32 0, i32 15, !dbg !3997
  %45 = load %struct.LatticeDeformData*, %struct.LatticeDeformData** %lattice_deform_data28, align 8, !dbg !3997
  call void @end_latt_deform(%struct.LatticeDeformData* %45), !dbg !3998
  %46 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !3999
  %sim29 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %46, i32 0, i32 0, !dbg !4000
  %psys30 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim29, i32 0, i32 2, !dbg !4001
  %47 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys30, align 8, !dbg !4001
  %lattice_deform_data31 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %47, i32 0, i32 15, !dbg !4002
  store %struct.LatticeDeformData* null, %struct.LatticeDeformData** %lattice_deform_data31, align 8, !dbg !4003
  br label %if.end32, !dbg !4004

if.end32:                                         ; preds = %if.then25, %if.end23
  %48 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4005
  %jit = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %48, i32 0, i32 6, !dbg !4007
  %49 = load float*, float** %jit, align 8, !dbg !4007
  %tobool33 = icmp ne float* %49, null, !dbg !4005
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !4008

if.then34:                                        ; preds = %if.end32
  %50 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4009
  %51 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4010
  %jit35 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %51, i32 0, i32 6, !dbg !4011
  %52 = load float*, float** %jit35, align 8, !dbg !4011
  %53 = bitcast float* %52 to i8*, !dbg !4010
  call void %50(i8* %53), !dbg !4009
  br label %if.end36, !dbg !4009

if.end36:                                         ; preds = %if.then34, %if.end32
  %54 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4012
  %jitoff = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %54, i32 0, i32 7, !dbg !4014
  %55 = load float*, float** %jitoff, align 8, !dbg !4014
  %tobool37 = icmp ne float* %55, null, !dbg !4012
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !4015

if.then38:                                        ; preds = %if.end36
  %56 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4016
  %57 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4017
  %jitoff39 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %57, i32 0, i32 7, !dbg !4018
  %58 = load float*, float** %jitoff39, align 8, !dbg !4018
  %59 = bitcast float* %58 to i8*, !dbg !4017
  call void %56(i8* %59), !dbg !4016
  br label %if.end40, !dbg !4016

if.end40:                                         ; preds = %if.then38, %if.end36
  %60 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4019
  %weight = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %60, i32 0, i32 8, !dbg !4021
  %61 = load float*, float** %weight, align 8, !dbg !4021
  %tobool41 = icmp ne float* %61, null, !dbg !4019
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !4022

if.then42:                                        ; preds = %if.end40
  %62 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4023
  %63 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4024
  %weight43 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %63, i32 0, i32 8, !dbg !4025
  %64 = load float*, float** %weight43, align 8, !dbg !4025
  %65 = bitcast float* %64 to i8*, !dbg !4024
  call void %62(i8* %65), !dbg !4023
  br label %if.end44, !dbg !4023

if.end44:                                         ; preds = %if.then42, %if.end40
  %66 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4026
  %index = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %66, i32 0, i32 10, !dbg !4028
  %67 = load i32*, i32** %index, align 8, !dbg !4028
  %tobool45 = icmp ne i32* %67, null, !dbg !4026
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !4029

if.then46:                                        ; preds = %if.end44
  %68 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4030
  %69 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4031
  %index47 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %69, i32 0, i32 10, !dbg !4032
  %70 = load i32*, i32** %index47, align 8, !dbg !4032
  %71 = bitcast i32* %70 to i8*, !dbg !4031
  call void %68(i8* %71), !dbg !4030
  br label %if.end48, !dbg !4030

if.end48:                                         ; preds = %if.then46, %if.end44
  %72 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4033
  %skip = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %72, i32 0, i32 11, !dbg !4035
  %73 = load i32*, i32** %skip, align 8, !dbg !4035
  %tobool49 = icmp ne i32* %73, null, !dbg !4033
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !4036

if.then50:                                        ; preds = %if.end48
  %74 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4037
  %75 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4038
  %skip51 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %75, i32 0, i32 11, !dbg !4039
  %76 = load i32*, i32** %skip51, align 8, !dbg !4039
  %77 = bitcast i32* %76 to i8*, !dbg !4038
  call void %74(i8* %77), !dbg !4037
  br label %if.end52, !dbg !4037

if.end52:                                         ; preds = %if.then50, %if.end48
  %78 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4040
  %seams = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %78, i32 0, i32 4, !dbg !4042
  %79 = load %struct.ParticleSeam*, %struct.ParticleSeam** %seams, align 8, !dbg !4042
  %tobool53 = icmp ne %struct.ParticleSeam* %79, null, !dbg !4040
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !4043

if.then54:                                        ; preds = %if.end52
  %80 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4044
  %81 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4045
  %seams55 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %81, i32 0, i32 4, !dbg !4046
  %82 = load %struct.ParticleSeam*, %struct.ParticleSeam** %seams55, align 8, !dbg !4046
  %83 = bitcast %struct.ParticleSeam* %82 to i8*, !dbg !4045
  call void %80(i8* %83), !dbg !4044
  br label %if.end56, !dbg !4044

if.end56:                                         ; preds = %if.then54, %if.end52
  %84 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4047
  %tree = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %84, i32 0, i32 3, !dbg !4048
  %85 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !4048
  call void @BLI_kdtree_free(%struct.KDTree* %85), !dbg !4049
  store i32 0, i32* %i, align 4, !dbg !4050
  br label %for.cond, !dbg !4052

for.cond:                                         ; preds = %for.inc, %if.end56
  %86 = load i32, i32* %i, align 4, !dbg !4053
  %87 = load i32, i32* %totthread, align 4, !dbg !4055
  %cmp = icmp slt i32 %86, %87, !dbg !4056
  br i1 %cmp, label %for.body, label %for.end, !dbg !4057

for.body:                                         ; preds = %for.cond
  %88 = load %struct.ParticleThread*, %struct.ParticleThread** %threads.addr, align 8, !dbg !4058
  %89 = load i32, i32* %i, align 4, !dbg !4061
  %idxprom = sext i32 %89 to i64, !dbg !4058
  %arrayidx57 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %88, i64 %idxprom, !dbg !4058
  %rng = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx57, i32 0, i32 1, !dbg !4062
  %90 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !4062
  %tobool58 = icmp ne %struct.RNG* %90, null, !dbg !4058
  br i1 %tobool58, label %if.then59, label %if.end63, !dbg !4063

if.then59:                                        ; preds = %for.body
  %91 = load %struct.ParticleThread*, %struct.ParticleThread** %threads.addr, align 8, !dbg !4064
  %92 = load i32, i32* %i, align 4, !dbg !4065
  %idxprom60 = sext i32 %92 to i64, !dbg !4064
  %arrayidx61 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %91, i64 %idxprom60, !dbg !4064
  %rng62 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx61, i32 0, i32 1, !dbg !4066
  %93 = load %struct.RNG*, %struct.RNG** %rng62, align 8, !dbg !4066
  call void @BLI_rng_free(%struct.RNG* %93), !dbg !4067
  br label %if.end63, !dbg !4067

if.end63:                                         ; preds = %if.then59, %for.body
  %94 = load %struct.ParticleThread*, %struct.ParticleThread** %threads.addr, align 8, !dbg !4068
  %95 = load i32, i32* %i, align 4, !dbg !4070
  %idxprom64 = sext i32 %95 to i64, !dbg !4068
  %arrayidx65 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %94, i64 %idxprom64, !dbg !4068
  %rng_path = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx65, i32 0, i32 2, !dbg !4071
  %96 = load %struct.RNG*, %struct.RNG** %rng_path, align 8, !dbg !4071
  %tobool66 = icmp ne %struct.RNG* %96, null, !dbg !4068
  br i1 %tobool66, label %if.then67, label %if.end71, !dbg !4072

if.then67:                                        ; preds = %if.end63
  %97 = load %struct.ParticleThread*, %struct.ParticleThread** %threads.addr, align 8, !dbg !4073
  %98 = load i32, i32* %i, align 4, !dbg !4074
  %idxprom68 = sext i32 %98 to i64, !dbg !4073
  %arrayidx69 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %97, i64 %idxprom68, !dbg !4073
  %rng_path70 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx69, i32 0, i32 2, !dbg !4075
  %99 = load %struct.RNG*, %struct.RNG** %rng_path70, align 8, !dbg !4075
  call void @BLI_rng_free(%struct.RNG* %99), !dbg !4076
  br label %if.end71, !dbg !4076

if.end71:                                         ; preds = %if.then67, %if.end63
  br label %for.inc, !dbg !4077

for.inc:                                          ; preds = %if.end71
  %100 = load i32, i32* %i, align 4, !dbg !4078
  %inc = add nsw i32 %100, 1, !dbg !4078
  store i32 %inc, i32* %i, align 4, !dbg !4078
  br label %for.cond, !dbg !4079, !llvm.loop !4080

for.end:                                          ; preds = %for.cond
  %101 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4082
  %102 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !4083
  %103 = bitcast %struct.ParticleThreadContext* %102 to i8*, !dbg !4083
  call void %101(i8* %103), !dbg !4082
  %104 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4084
  %105 = load %struct.ParticleThread*, %struct.ParticleThread** %threads.addr, align 8, !dbg !4085
  %106 = bitcast %struct.ParticleThread* %105 to i8*, !dbg !4085
  call void %104(i8* %106), !dbg !4084
  ret void, !dbg !4086
}

declare dso_local void @end_latt_deform(%struct.LatticeDeformData*) #2

declare dso_local void @BLI_kdtree_free(%struct.KDTree*) #2

declare dso_local void @BLI_rng_free(%struct.RNG*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @initialize_particle(%struct.ParticleSimulationData* %sim, %struct.ParticleData* %pa) #0 !dbg !4087 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %pa.addr = alloca %struct.ParticleData*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %birth_time = alloca float, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !4092, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !4094, metadata !DIExpression()), !dbg !4095
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !4096
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !4097
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4097
  %part1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 2, !dbg !4098
  %2 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part1, align 8, !dbg !4098
  store %struct.ParticleSettings* %2, %struct.ParticleSettings** %part, align 8, !dbg !4095
  call void @llvm.dbg.declare(metadata float* %birth_time, metadata !4099, metadata !DIExpression()), !dbg !4100
  %3 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4101
  %4 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !4102
  %psys2 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %4, i32 0, i32 2, !dbg !4103
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys2, align 8, !dbg !4103
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 3, !dbg !4104
  %6 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !4104
  %sub.ptr.lhs.cast = ptrtoint %struct.ParticleData* %3 to i64, !dbg !4105
  %sub.ptr.rhs.cast = ptrtoint %struct.ParticleData* %6 to i64, !dbg !4105
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4105
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 200, !dbg !4105
  %conv = sitofp i64 %sub.ptr.div to float, !dbg !4106
  %7 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !4107
  %psys3 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %7, i32 0, i32 2, !dbg !4108
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys3, align 8, !dbg !4108
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 26, !dbg !4109
  %9 = load i32, i32* %totpart, align 8, !dbg !4109
  %conv4 = sitofp i32 %9 to float, !dbg !4110
  %div = fdiv float %conv, %conv4, !dbg !4111
  store float %div, float* %birth_time, align 4, !dbg !4100
  %10 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4112
  %flag = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %10, i32 0, i32 17, !dbg !4113
  %11 = load i16, i16* %flag, align 4, !dbg !4114
  %conv5 = sext i16 %11 to i32, !dbg !4114
  %and = and i32 %conv5, -2, !dbg !4114
  %conv6 = trunc i32 %and to i16, !dbg !4114
  store i16 %conv6, i16* %flag, align 4, !dbg !4114
  %12 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4115
  %sta = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %12, i32 0, i32 53, !dbg !4116
  %13 = load float, float* %sta, align 4, !dbg !4116
  %14 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4117
  %end = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %14, i32 0, i32 54, !dbg !4118
  %15 = load float, float* %end, align 8, !dbg !4118
  %16 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4119
  %sta7 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %16, i32 0, i32 53, !dbg !4120
  %17 = load float, float* %sta7, align 4, !dbg !4120
  %sub = fsub float %15, %17, !dbg !4121
  %18 = load float, float* %birth_time, align 4, !dbg !4122
  %mul = fmul float %sub, %18, !dbg !4123
  %add = fadd float %13, %mul, !dbg !4124
  %19 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4125
  %time = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %19, i32 0, i32 6, !dbg !4126
  store float %add, float* %time, align 4, !dbg !4127
  %20 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4128
  %hair_index = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %20, i32 0, i32 16, !dbg !4129
  store i32 0, i32* %hair_index, align 8, !dbg !4130
  ret void, !dbg !4131
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_get_birth_coordinates(%struct.ParticleSimulationData* %sim, %struct.ParticleData* %pa, %struct.ParticleKey* %state, float %dtime, float %cfra) #0 !dbg !4132 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %pa.addr = alloca %struct.ParticleData*, align 8
  %state.addr = alloca %struct.ParticleKey*, align 8
  %dtime.addr = alloca float, align 4
  %cfra.addr = alloca float, align 4
  %ob = alloca %struct.Object*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %ptex = alloca %struct.ParticleTexture, align 4
  %fac = alloca float, align 4
  %phasefac = alloca float, align 4
  %nor = alloca [3 x float], align 4
  %loc = alloca [3 x float], align 4
  %vel = alloca [3 x float], align 4
  %rot = alloca [4 x float], align 16
  %q2 = alloca [4 x float], align 16
  %r_vel = alloca [3 x float], align 4
  %r_ave = alloca [3 x float], align 4
  %r_rot = alloca [4 x float], align 16
  %vec = alloca [3 x float], align 4
  %p_vel = alloca [3 x float], align 4
  %x_vec = alloca [3 x float], align 4
  %utan = alloca [3 x float], align 4
  %vtan = alloca [3 x float], align 4
  %rot_vec = alloca [3 x float], align 4
  %q_phase = alloca [4 x float], align 16
  %use_boids = alloca i8, align 1
  %use_tangents = alloca i8, align 1
  %p = alloca i32, align 4
  %phase = alloca float, align 4
  %dvec = alloca [3 x float], align 4
  %q = alloca [4 x float], align 16
  %mat = alloca [3 x [3 x float]], align 16
  %use_global_space = alloca i8, align 1
  %q_obmat = alloca [4 x float], align 16
  %q_imat = alloca [4 x float], align 16
  %rot_vec_local = alloca [3 x float], align 4
  %tmat = alloca [3 x [3 x float]], align 16
  %rot_vec_local375 = alloca float*, align 8
  %vtan_local = alloca float*, align 8
  %utan_local = alloca float*, align 8
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !4135, metadata !DIExpression()), !dbg !4136
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !4137, metadata !DIExpression()), !dbg !4138
  store %struct.ParticleKey* %state, %struct.ParticleKey** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleKey** %state.addr, metadata !4139, metadata !DIExpression()), !dbg !4140
  store float %dtime, float* %dtime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dtime.addr, metadata !4141, metadata !DIExpression()), !dbg !4142
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !4143, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !4145, metadata !DIExpression()), !dbg !4146
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !4147
  %ob1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 1, !dbg !4148
  %1 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !4148
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !4146
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !4149, metadata !DIExpression()), !dbg !4150
  %2 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !4151
  %psys2 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %2, i32 0, i32 2, !dbg !4152
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys2, align 8, !dbg !4152
  store %struct.ParticleSystem* %3, %struct.ParticleSystem** %psys, align 8, !dbg !4150
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !4153, metadata !DIExpression()), !dbg !4154
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4155
  %part3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %4, i32 0, i32 2, !dbg !4156
  %5 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part3, align 8, !dbg !4156
  store %struct.ParticleSettings* %5, %struct.ParticleSettings** %part, align 8, !dbg !4154
  call void @llvm.dbg.declare(metadata %struct.ParticleTexture* %ptex, metadata !4157, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.declare(metadata float* %fac, metadata !4159, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.declare(metadata float* %phasefac, metadata !4161, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !4163, metadata !DIExpression()), !dbg !4164
  %6 = bitcast [3 x float]* %nor to i8*, !dbg !4164
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 12, i1 false), !dbg !4164
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !4165, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.declare(metadata [3 x float]* %vel, metadata !4167, metadata !DIExpression()), !dbg !4168
  %7 = bitcast [3 x float]* %vel to i8*, !dbg !4168
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 12, i1 false), !dbg !4168
  call void @llvm.dbg.declare(metadata [4 x float]* %rot, metadata !4169, metadata !DIExpression()), !dbg !4170
  call void @llvm.dbg.declare(metadata [4 x float]* %q2, metadata !4171, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.declare(metadata [3 x float]* %r_vel, metadata !4173, metadata !DIExpression()), !dbg !4174
  call void @llvm.dbg.declare(metadata [3 x float]* %r_ave, metadata !4175, metadata !DIExpression()), !dbg !4176
  call void @llvm.dbg.declare(metadata [4 x float]* %r_rot, metadata !4177, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !4179, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.declare(metadata [3 x float]* %p_vel, metadata !4181, metadata !DIExpression()), !dbg !4182
  %8 = bitcast [3 x float]* %p_vel to i8*, !dbg !4182
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 12, i1 false), !dbg !4182
  call void @llvm.dbg.declare(metadata [3 x float]* %x_vec, metadata !4183, metadata !DIExpression()), !dbg !4184
  %9 = bitcast [3 x float]* %x_vec to i8*, !dbg !4184
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 bitcast ([3 x float]* @__const.psys_get_birth_coordinates.x_vec to i8*), i64 12, i1 false), !dbg !4184
  call void @llvm.dbg.declare(metadata [3 x float]* %utan, metadata !4185, metadata !DIExpression()), !dbg !4186
  %10 = bitcast [3 x float]* %utan to i8*, !dbg !4186
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 bitcast ([3 x float]* @__const.psys_get_birth_coordinates.utan to i8*), i64 12, i1 false), !dbg !4186
  call void @llvm.dbg.declare(metadata [3 x float]* %vtan, metadata !4187, metadata !DIExpression()), !dbg !4188
  %11 = bitcast [3 x float]* %vtan to i8*, !dbg !4188
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 bitcast ([3 x float]* @__const.psys_get_birth_coordinates.vtan to i8*), i64 12, i1 false), !dbg !4188
  call void @llvm.dbg.declare(metadata [3 x float]* %rot_vec, metadata !4189, metadata !DIExpression()), !dbg !4190
  %12 = bitcast [3 x float]* %rot_vec to i8*, !dbg !4190
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 12, i1 false), !dbg !4190
  call void @llvm.dbg.declare(metadata [4 x float]* %q_phase, metadata !4191, metadata !DIExpression()), !dbg !4192
  call void @llvm.dbg.declare(metadata i8* %use_boids, metadata !4193, metadata !DIExpression()), !dbg !4194
  %13 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4195
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %13, i32 0, i32 11, !dbg !4196
  %14 = load i16, i16* %phystype, align 8, !dbg !4196
  %conv = sext i16 %14 to i32, !dbg !4195
  %cmp = icmp eq i32 %conv, 3, !dbg !4197
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4198

land.rhs:                                         ; preds = %entry
  %15 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4199
  %boid = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %15, i32 0, i32 4, !dbg !4200
  %16 = load %struct.BoidParticle*, %struct.BoidParticle** %boid, align 8, !dbg !4200
  %cmp5 = icmp ne %struct.BoidParticle* %16, null, !dbg !4201
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %17 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !4202
  %land.ext = zext i1 %17 to i32, !dbg !4198
  %conv7 = trunc i32 %land.ext to i8, !dbg !4203
  store i8 %conv7, i8* %use_boids, align 1, !dbg !4194
  call void @llvm.dbg.declare(metadata i8* %use_tangents, metadata !4204, metadata !DIExpression()), !dbg !4205
  %18 = load i8, i8* %use_boids, align 1, !dbg !4206
  %conv8 = zext i8 %18 to i32, !dbg !4206
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !4207
  br i1 %cmp9, label %land.rhs11, label %land.end17, !dbg !4208

land.rhs11:                                       ; preds = %land.end
  %19 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4209
  %tanfac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %19, i32 0, i32 73, !dbg !4210
  %20 = load float, float* %tanfac, align 4, !dbg !4210
  %cmp12 = fcmp une float %20, 0.000000e+00, !dbg !4211
  br i1 %cmp12, label %lor.end, label %lor.rhs, !dbg !4212

lor.rhs:                                          ; preds = %land.rhs11
  %21 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4213
  %rotmode = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %21, i32 0, i32 12, !dbg !4214
  %22 = load i16, i16* %rotmode, align 2, !dbg !4214
  %conv14 = sext i16 %22 to i32, !dbg !4213
  %cmp15 = icmp eq i32 %conv14, 9, !dbg !4215
  br label %lor.end, !dbg !4212

lor.end:                                          ; preds = %lor.rhs, %land.rhs11
  %23 = phi i1 [ true, %land.rhs11 ], [ %cmp15, %lor.rhs ]
  br label %land.end17

land.end17:                                       ; preds = %lor.end, %land.end
  %24 = phi i1 [ false, %land.end ], [ %23, %lor.end ], !dbg !4202
  %land.ext18 = zext i1 %24 to i32, !dbg !4208
  %conv19 = trunc i32 %land.ext18 to i8, !dbg !4216
  store i8 %conv19, i8* %use_tangents, align 1, !dbg !4205
  call void @llvm.dbg.declare(metadata i32* %p, metadata !4217, metadata !DIExpression()), !dbg !4218
  %25 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4219
  %26 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4220
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %26, i32 0, i32 3, !dbg !4221
  %27 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !4221
  %sub.ptr.lhs.cast = ptrtoint %struct.ParticleData* %25 to i64, !dbg !4222
  %sub.ptr.rhs.cast = ptrtoint %struct.ParticleData* %27 to i64, !dbg !4222
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4222
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 200, !dbg !4222
  %conv20 = trunc i64 %sub.ptr.div to i32, !dbg !4219
  store i32 %conv20, i32* %p, align 4, !dbg !4218
  %28 = load i8, i8* %use_tangents, align 1, !dbg !4223
  %tobool = icmp ne i8 %28, 0, !dbg !4223
  br i1 %tobool, label %if.then, label %if.else, !dbg !4225

if.then:                                          ; preds = %land.end17
  %29 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !4226
  %psmd = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %29, i32 0, i32 3, !dbg !4227
  %30 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !4227
  %31 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4228
  %from = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %31, i32 0, i32 8, !dbg !4229
  %32 = load i16, i16* %from, align 2, !dbg !4229
  %conv21 = sext i16 %32 to i32, !dbg !4228
  %33 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4230
  %num = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %33, i32 0, i32 9, !dbg !4231
  %34 = load i32, i32* %num, align 8, !dbg !4231
  %35 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4232
  %num_dmcache = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %35, i32 0, i32 10, !dbg !4233
  %36 = load i32, i32* %num_dmcache, align 4, !dbg !4233
  %37 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4234
  %fuv = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %37, i32 0, i32 11, !dbg !4235
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %fuv, i64 0, i64 0, !dbg !4234
  %38 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4236
  %foffset = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %38, i32 0, i32 12, !dbg !4237
  %39 = load float, float* %foffset, align 8, !dbg !4237
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !4238
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4239
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %utan, i64 0, i64 0, !dbg !4240
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %vtan, i64 0, i64 0, !dbg !4241
  call void @psys_particle_on_emitter(%struct.ParticleSystemModifierData* %30, i32 %conv21, i32 %34, i32 %36, float* %arraydecay, float %39, float* %arraydecay22, float* %arraydecay23, float* %arraydecay24, float* %arraydecay25, float* null, float* null), !dbg !4242
  br label %if.end, !dbg !4242

if.else:                                          ; preds = %land.end17
  %40 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !4243
  %psmd26 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %40, i32 0, i32 3, !dbg !4244
  %41 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd26, align 8, !dbg !4244
  %42 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4245
  %from27 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %42, i32 0, i32 8, !dbg !4246
  %43 = load i16, i16* %from27, align 2, !dbg !4246
  %conv28 = sext i16 %43 to i32, !dbg !4245
  %44 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4247
  %num29 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %44, i32 0, i32 9, !dbg !4248
  %45 = load i32, i32* %num29, align 8, !dbg !4248
  %46 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4249
  %num_dmcache30 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %46, i32 0, i32 10, !dbg !4250
  %47 = load i32, i32* %num_dmcache30, align 4, !dbg !4250
  %48 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4251
  %fuv31 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %48, i32 0, i32 11, !dbg !4252
  %arraydecay32 = getelementptr inbounds [4 x float], [4 x float]* %fuv31, i64 0, i64 0, !dbg !4251
  %49 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4253
  %foffset33 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %49, i32 0, i32 12, !dbg !4254
  %50 = load float, float* %foffset33, align 8, !dbg !4254
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !4255
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4256
  call void @psys_particle_on_emitter(%struct.ParticleSystemModifierData* %41, i32 %conv28, i32 %45, i32 %47, float* %arraydecay32, float %50, float* %arraydecay34, float* %arraydecay35, float* null, float* null, float* null, float* null), !dbg !4257
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %51 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !4258
  %52 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4259
  %53 = load float, float* %cfra.addr, align 4, !dbg !4260
  call void @psys_get_texture(%struct.ParticleSimulationData* %51, %struct.ParticleData* %52, %struct.ParticleTexture* %ptex, i32 32, float %53), !dbg !4261
  %54 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4262
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 47, !dbg !4263
  %arraydecay36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !4262
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !4264
  call void @mul_m4_v3([4 x float]* %arraydecay36, float* %arraydecay37), !dbg !4265
  %55 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4266
  %obmat38 = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 47, !dbg !4267
  %arraydecay39 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat38, i64 0, i64 0, !dbg !4266
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4268
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay39, float* %arraydecay40), !dbg !4269
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4270
  %call = call float @normalize_v3(float* %arraydecay41), !dbg !4271
  %56 = load i8, i8* %use_tangents, align 1, !dbg !4272
  %tobool42 = icmp ne i8 %56, 0, !dbg !4272
  br i1 %tobool42, label %if.then43, label %if.end66, !dbg !4274

if.then43:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %phase, metadata !4275, metadata !DIExpression()), !dbg !4277
  store float 0.000000e+00, float* %phase, align 4, !dbg !4277
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %vtan, i64 0, i64 0, !dbg !4278
  %57 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4279
  %tanphase = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %57, i32 0, i32 74, !dbg !4280
  %58 = load float, float* %tanphase, align 8, !dbg !4280
  %59 = load float, float* %phase, align 4, !dbg !4281
  %add = fadd float %58, %59, !dbg !4282
  %mul = fmul float 0x400921FB60000000, %add, !dbg !4283
  %call45 = call float @cosf(float %mul) #5, !dbg !4284
  %fneg = fneg float %call45, !dbg !4285
  call void @mul_v3_fl(float* %arraydecay44, float %fneg), !dbg !4286
  %60 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4287
  %tanphase46 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %60, i32 0, i32 74, !dbg !4288
  %61 = load float, float* %tanphase46, align 8, !dbg !4288
  %62 = load float, float* %phase, align 4, !dbg !4289
  %add47 = fadd float %61, %62, !dbg !4290
  %mul48 = fmul float 0x400921FB60000000, %add47, !dbg !4291
  %call49 = call float @sinf(float %mul48) #5, !dbg !4292
  %fneg50 = fneg float %call49, !dbg !4293
  store float %fneg50, float* %fac, align 4, !dbg !4294
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %vtan, i64 0, i64 0, !dbg !4295
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %utan, i64 0, i64 0, !dbg !4296
  %63 = load float, float* %fac, align 4, !dbg !4297
  call void @madd_v3_v3fl(float* %arraydecay51, float* %arraydecay52, float %63), !dbg !4298
  %64 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4299
  %obmat53 = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 47, !dbg !4300
  %arraydecay54 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat53, i64 0, i64 0, !dbg !4299
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %vtan, i64 0, i64 0, !dbg !4301
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay54, float* %arraydecay55), !dbg !4302
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %utan, i64 0, i64 0, !dbg !4303
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4304
  call void @copy_v3_v3(float* %arraydecay56, float* %arraydecay57), !dbg !4305
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %utan, i64 0, i64 0, !dbg !4306
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %vtan, i64 0, i64 0, !dbg !4307
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4308
  %call61 = call float @dot_v3v3(float* %arraydecay59, float* %arraydecay60), !dbg !4309
  call void @mul_v3_fl(float* %arraydecay58, float %call61), !dbg !4310
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %vtan, i64 0, i64 0, !dbg !4311
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %utan, i64 0, i64 0, !dbg !4312
  call void @sub_v3_v3(float* %arraydecay62, float* %arraydecay63), !dbg !4313
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %vtan, i64 0, i64 0, !dbg !4314
  %call65 = call float @normalize_v3(float* %arraydecay64), !dbg !4315
  br label %if.end66, !dbg !4316

if.end66:                                         ; preds = %if.then43, %if.end
  %65 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4317
  %randfac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %65, i32 0, i32 71, !dbg !4319
  %66 = load float, float* %randfac, align 4, !dbg !4319
  %cmp67 = fcmp une float %66, 0.000000e+00, !dbg !4320
  br i1 %cmp67, label %if.then75, label %lor.lhs.false, !dbg !4321

lor.lhs.false:                                    ; preds = %if.end66
  %67 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4322
  %phystype69 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %67, i32 0, i32 11, !dbg !4323
  %68 = load i16, i16* %phystype69, align 8, !dbg !4323
  %conv70 = sext i16 %68 to i32, !dbg !4322
  %cmp71 = icmp eq i32 %conv70, 3, !dbg !4324
  br i1 %cmp71, label %land.lhs.true, label %if.end94, !dbg !4325

land.lhs.true:                                    ; preds = %lor.lhs.false
  %69 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4326
  %boid73 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %69, i32 0, i32 4, !dbg !4327
  %70 = load %struct.BoidParticle*, %struct.BoidParticle** %boid73, align 8, !dbg !4327
  %tobool74 = icmp ne %struct.BoidParticle* %70, null, !dbg !4326
  br i1 %tobool74, label %if.then75, label %if.end94, !dbg !4328

if.then75:                                        ; preds = %land.lhs.true, %if.end66
  %71 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4329
  %72 = load i32, i32* %p, align 4, !dbg !4331
  %add76 = add nsw i32 %72, 10, !dbg !4332
  %call77 = call float @psys_frand(%struct.ParticleSystem* %71, i32 %add76), !dbg !4333
  %sub = fsub float %call77, 5.000000e-01, !dbg !4334
  %mul78 = fmul float 2.000000e+00, %sub, !dbg !4335
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %r_vel, i64 0, i64 0, !dbg !4336
  store float %mul78, float* %arrayidx, align 4, !dbg !4337
  %73 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4338
  %74 = load i32, i32* %p, align 4, !dbg !4339
  %add79 = add nsw i32 %74, 11, !dbg !4340
  %call80 = call float @psys_frand(%struct.ParticleSystem* %73, i32 %add79), !dbg !4341
  %sub81 = fsub float %call80, 5.000000e-01, !dbg !4342
  %mul82 = fmul float 2.000000e+00, %sub81, !dbg !4343
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %r_vel, i64 0, i64 1, !dbg !4344
  store float %mul82, float* %arrayidx83, align 4, !dbg !4345
  %75 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4346
  %76 = load i32, i32* %p, align 4, !dbg !4347
  %add84 = add nsw i32 %76, 12, !dbg !4348
  %call85 = call float @psys_frand(%struct.ParticleSystem* %75, i32 %add84), !dbg !4349
  %sub86 = fsub float %call85, 5.000000e-01, !dbg !4350
  %mul87 = fmul float 2.000000e+00, %sub86, !dbg !4351
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %r_vel, i64 0, i64 2, !dbg !4352
  store float %mul87, float* %arrayidx88, align 4, !dbg !4353
  %77 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4354
  %obmat89 = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 47, !dbg !4355
  %arraydecay90 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat89, i64 0, i64 0, !dbg !4354
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %r_vel, i64 0, i64 0, !dbg !4356
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay90, float* %arraydecay91), !dbg !4357
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %r_vel, i64 0, i64 0, !dbg !4358
  %call93 = call float @normalize_v3(float* %arraydecay92), !dbg !4359
  br label %if.end94, !dbg !4360

if.end94:                                         ; preds = %if.then75, %land.lhs.true, %lor.lhs.false
  %78 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4361
  %avemode = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %78, i32 0, i32 13, !dbg !4363
  %79 = load i16, i16* %avemode, align 4, !dbg !4363
  %conv95 = sext i16 %79 to i32, !dbg !4361
  %cmp96 = icmp eq i32 %conv95, 2, !dbg !4364
  br i1 %cmp96, label %if.then98, label %if.end119, !dbg !4365

if.then98:                                        ; preds = %if.end94
  %80 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4366
  %81 = load i32, i32* %p, align 4, !dbg !4368
  %add99 = add nsw i32 %81, 13, !dbg !4369
  %call100 = call float @psys_frand(%struct.ParticleSystem* %80, i32 %add99), !dbg !4370
  %sub101 = fsub float %call100, 5.000000e-01, !dbg !4371
  %mul102 = fmul float 2.000000e+00, %sub101, !dbg !4372
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %r_ave, i64 0, i64 0, !dbg !4373
  store float %mul102, float* %arrayidx103, align 4, !dbg !4374
  %82 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4375
  %83 = load i32, i32* %p, align 4, !dbg !4376
  %add104 = add nsw i32 %83, 14, !dbg !4377
  %call105 = call float @psys_frand(%struct.ParticleSystem* %82, i32 %add104), !dbg !4378
  %sub106 = fsub float %call105, 5.000000e-01, !dbg !4379
  %mul107 = fmul float 2.000000e+00, %sub106, !dbg !4380
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %r_ave, i64 0, i64 1, !dbg !4381
  store float %mul107, float* %arrayidx108, align 4, !dbg !4382
  %84 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4383
  %85 = load i32, i32* %p, align 4, !dbg !4384
  %add109 = add nsw i32 %85, 15, !dbg !4385
  %call110 = call float @psys_frand(%struct.ParticleSystem* %84, i32 %add109), !dbg !4386
  %sub111 = fsub float %call110, 5.000000e-01, !dbg !4387
  %mul112 = fmul float 2.000000e+00, %sub111, !dbg !4388
  %arrayidx113 = getelementptr inbounds [3 x float], [3 x float]* %r_ave, i64 0, i64 2, !dbg !4389
  store float %mul112, float* %arrayidx113, align 4, !dbg !4390
  %86 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4391
  %obmat114 = getelementptr inbounds %struct.Object, %struct.Object* %86, i32 0, i32 47, !dbg !4392
  %arraydecay115 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat114, i64 0, i64 0, !dbg !4391
  %arraydecay116 = getelementptr inbounds [3 x float], [3 x float]* %r_ave, i64 0, i64 0, !dbg !4393
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay115, float* %arraydecay116), !dbg !4394
  %arraydecay117 = getelementptr inbounds [3 x float], [3 x float]* %r_ave, i64 0, i64 0, !dbg !4395
  %call118 = call float @normalize_v3(float* %arraydecay117), !dbg !4396
  br label %if.end119, !dbg !4397

if.end119:                                        ; preds = %if.then98, %if.end94
  %87 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4398
  %randrotfac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %87, i32 0, i32 79, !dbg !4400
  %88 = load float, float* %randrotfac, align 4, !dbg !4400
  %cmp120 = fcmp une float %88, 0.000000e+00, !dbg !4401
  br i1 %cmp120, label %if.then122, label %if.end151, !dbg !4402

if.then122:                                       ; preds = %if.end119
  %89 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4403
  %90 = load i32, i32* %p, align 4, !dbg !4405
  %add123 = add nsw i32 %90, 16, !dbg !4406
  %call124 = call float @psys_frand(%struct.ParticleSystem* %89, i32 %add123), !dbg !4407
  %sub125 = fsub float %call124, 5.000000e-01, !dbg !4408
  %mul126 = fmul float 2.000000e+00, %sub125, !dbg !4409
  %arrayidx127 = getelementptr inbounds [4 x float], [4 x float]* %r_rot, i64 0, i64 0, !dbg !4410
  store float %mul126, float* %arrayidx127, align 16, !dbg !4411
  %91 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4412
  %92 = load i32, i32* %p, align 4, !dbg !4413
  %add128 = add nsw i32 %92, 17, !dbg !4414
  %call129 = call float @psys_frand(%struct.ParticleSystem* %91, i32 %add128), !dbg !4415
  %sub130 = fsub float %call129, 5.000000e-01, !dbg !4416
  %mul131 = fmul float 2.000000e+00, %sub130, !dbg !4417
  %arrayidx132 = getelementptr inbounds [4 x float], [4 x float]* %r_rot, i64 0, i64 1, !dbg !4418
  store float %mul131, float* %arrayidx132, align 4, !dbg !4419
  %93 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4420
  %94 = load i32, i32* %p, align 4, !dbg !4421
  %add133 = add nsw i32 %94, 18, !dbg !4422
  %call134 = call float @psys_frand(%struct.ParticleSystem* %93, i32 %add133), !dbg !4423
  %sub135 = fsub float %call134, 5.000000e-01, !dbg !4424
  %mul136 = fmul float 2.000000e+00, %sub135, !dbg !4425
  %arrayidx137 = getelementptr inbounds [4 x float], [4 x float]* %r_rot, i64 0, i64 2, !dbg !4426
  store float %mul136, float* %arrayidx137, align 8, !dbg !4427
  %95 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4428
  %96 = load i32, i32* %p, align 4, !dbg !4429
  %add138 = add nsw i32 %96, 19, !dbg !4430
  %call139 = call float @psys_frand(%struct.ParticleSystem* %95, i32 %add138), !dbg !4431
  %sub140 = fsub float %call139, 5.000000e-01, !dbg !4432
  %mul141 = fmul float 2.000000e+00, %sub140, !dbg !4433
  %arrayidx142 = getelementptr inbounds [4 x float], [4 x float]* %r_rot, i64 0, i64 3, !dbg !4434
  store float %mul141, float* %arrayidx142, align 4, !dbg !4435
  %arraydecay143 = getelementptr inbounds [4 x float], [4 x float]* %r_rot, i64 0, i64 0, !dbg !4436
  %call144 = call float @normalize_qt(float* %arraydecay143), !dbg !4437
  %arraydecay145 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !4438
  %97 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4439
  %obmat146 = getelementptr inbounds %struct.Object, %struct.Object* %97, i32 0, i32 47, !dbg !4440
  %arraydecay147 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat146, i64 0, i64 0, !dbg !4439
  call void @mat4_to_quat(float* %arraydecay145, [4 x float]* %arraydecay147), !dbg !4441
  %arraydecay148 = getelementptr inbounds [4 x float], [4 x float]* %r_rot, i64 0, i64 0, !dbg !4442
  %arraydecay149 = getelementptr inbounds [4 x float], [4 x float]* %r_rot, i64 0, i64 0, !dbg !4443
  %arraydecay150 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !4444
  call void @mul_qt_qtqt(float* %arraydecay148, float* %arraydecay149, float* %arraydecay150), !dbg !4445
  br label %if.end151, !dbg !4446

if.end151:                                        ; preds = %if.then122, %if.end119
  %98 = load i8, i8* %use_boids, align 1, !dbg !4447
  %tobool152 = icmp ne i8 %98, 0, !dbg !4447
  br i1 %tobool152, label %if.then153, label %if.else204, !dbg !4449

if.then153:                                       ; preds = %if.end151
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec, metadata !4450, metadata !DIExpression()), !dbg !4452
  call void @llvm.dbg.declare(metadata [4 x float]* %q, metadata !4453, metadata !DIExpression()), !dbg !4454
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat, metadata !4455, metadata !DIExpression()), !dbg !4456
  %99 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4457
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %99, i32 0, i32 0, !dbg !4458
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4457
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !4459
  call void @copy_v3_v3(float* %arraydecay154, float* %arraydecay155), !dbg !4460
  %100 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4461
  %vel156 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %100, i32 0, i32 1, !dbg !4462
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %vel156, i64 0, i64 0, !dbg !4461
  call void @zero_v3(float* %arraydecay157), !dbg !4463
  %arrayidx158 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !4464
  %101 = load float, float* %arrayidx158, align 4, !dbg !4464
  %102 = call float @llvm.fabs.f32(float %101), !dbg !4466
  %cmp159 = fcmp oeq float %102, 1.000000e+00, !dbg !4467
  br i1 %cmp159, label %if.then161, label %if.else170, !dbg !4468

if.then161:                                       ; preds = %if.then153
  %103 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4469
  %ave = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %103, i32 0, i32 3, !dbg !4471
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %ave, i64 0, i64 0, !dbg !4469
  %arraydecay163 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !4472
  %104 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4473
  %obmat164 = getelementptr inbounds %struct.Object, %struct.Object* %104, i32 0, i32 47, !dbg !4474
  %arrayidx165 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat164, i64 0, i64 3, !dbg !4473
  %arraydecay166 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx165, i64 0, i64 0, !dbg !4473
  call void @sub_v3_v3v3(float* %arraydecay162, float* %arraydecay163, float* %arraydecay166), !dbg !4475
  %105 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4476
  %ave167 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %105, i32 0, i32 3, !dbg !4477
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %ave167, i64 0, i64 0, !dbg !4476
  %call169 = call float @normalize_v3(float* %arraydecay168), !dbg !4478
  br label %if.end174, !dbg !4479

if.else170:                                       ; preds = %if.then153
  %106 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4480
  %ave171 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %106, i32 0, i32 3, !dbg !4482
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %ave171, i64 0, i64 0, !dbg !4480
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4483
  call void @copy_v3_v3(float* %arraydecay172, float* %arraydecay173), !dbg !4484
  br label %if.end174

if.end174:                                        ; preds = %if.else170, %if.then161
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !4485
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %r_vel, i64 0, i64 0, !dbg !4486
  %107 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4487
  %ave177 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %107, i32 0, i32 3, !dbg !4488
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %ave177, i64 0, i64 0, !dbg !4487
  call void @project_v3_v3v3(float* %arraydecay175, float* %arraydecay176, float* %arraydecay178), !dbg !4489
  %arrayidx179 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !4490
  %arraydecay180 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx179, i64 0, i64 0, !dbg !4490
  %108 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4491
  %ave181 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %108, i32 0, i32 3, !dbg !4492
  %arraydecay182 = getelementptr inbounds [3 x float], [3 x float]* %ave181, i64 0, i64 0, !dbg !4491
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !4493
  call void @sub_v3_v3v3(float* %arraydecay180, float* %arraydecay182, float* %arraydecay183), !dbg !4494
  %arrayidx184 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !4495
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx184, i64 0, i64 0, !dbg !4495
  %call186 = call float @normalize_v3(float* %arraydecay185), !dbg !4496
  %arrayidx187 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 2, !dbg !4497
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx187, i64 0, i64 0, !dbg !4497
  %arraydecay189 = getelementptr inbounds [3 x float], [3 x float]* %r_vel, i64 0, i64 0, !dbg !4498
  call void @negate_v3_v3(float* %arraydecay188, float* %arraydecay189), !dbg !4499
  %arrayidx190 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 2, !dbg !4500
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx190, i64 0, i64 0, !dbg !4500
  %call192 = call float @normalize_v3(float* %arraydecay191), !dbg !4501
  %arrayidx193 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 1, !dbg !4502
  %arraydecay194 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx193, i64 0, i64 0, !dbg !4502
  %arrayidx195 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 2, !dbg !4503
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx195, i64 0, i64 0, !dbg !4503
  %arrayidx197 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !4504
  %arraydecay198 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx197, i64 0, i64 0, !dbg !4504
  call void @cross_v3_v3v3(float* %arraydecay194, float* %arraydecay196, float* %arraydecay198), !dbg !4505
  %arraydecay199 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !4506
  %arraydecay200 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !4507
  call void @mat3_to_quat_is_ok(float* %arraydecay199, [3 x float]* %arraydecay200), !dbg !4508
  %109 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4509
  %rot201 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %109, i32 0, i32 2, !dbg !4510
  %arraydecay202 = getelementptr inbounds [4 x float], [4 x float]* %rot201, i64 0, i64 0, !dbg !4509
  %arraydecay203 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !4511
  call void @copy_qt_qt(float* %arraydecay202, float* %arraydecay203), !dbg !4512
  br label %if.end450, !dbg !4513

if.else204:                                       ; preds = %if.end151
  %110 = load float, float* %dtime.addr, align 4, !dbg !4514
  %cmp205 = fcmp ogt float %110, 0.000000e+00, !dbg !4517
  br i1 %cmp205, label %if.then207, label %if.end214, !dbg !4518

if.then207:                                       ; preds = %if.else204
  %arraydecay208 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4519
  %111 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4521
  %state209 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %111, i32 0, i32 0, !dbg !4522
  %vel210 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state209, i32 0, i32 1, !dbg !4523
  %arraydecay211 = getelementptr inbounds [3 x float], [3 x float]* %vel210, i64 0, i64 0, !dbg !4521
  %112 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !4524
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %112, i32 0, i32 1, !dbg !4525
  %vel212 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 1, !dbg !4526
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %vel212, i64 0, i64 0, !dbg !4524
  call void @sub_v3_v3v3(float* %arraydecay208, float* %arraydecay211, float* %arraydecay213), !dbg !4527
  br label %if.end214, !dbg !4528

if.end214:                                        ; preds = %if.then207, %if.else204
  %113 = load float, float* %dtime.addr, align 4, !dbg !4529
  %cmp215 = fcmp une float %113, 0.000000e+00, !dbg !4531
  br i1 %cmp215, label %land.lhs.true217, label %if.end227, !dbg !4532

land.lhs.true217:                                 ; preds = %if.end214
  %114 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4533
  %obfac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %114, i32 0, i32 70, !dbg !4534
  %115 = load float, float* %obfac, align 8, !dbg !4534
  %cmp218 = fcmp une float %115, 0.000000e+00, !dbg !4535
  br i1 %cmp218, label %if.then220, label %if.end227, !dbg !4536

if.then220:                                       ; preds = %land.lhs.true217
  %arraydecay221 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4537
  %arraydecay222 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !4539
  %116 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4540
  %co223 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %116, i32 0, i32 0, !dbg !4541
  %arraydecay224 = getelementptr inbounds [3 x float], [3 x float]* %co223, i64 0, i64 0, !dbg !4540
  call void @sub_v3_v3v3(float* %arraydecay221, float* %arraydecay222, float* %arraydecay224), !dbg !4542
  %arraydecay225 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4543
  %117 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4544
  %obfac226 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %117, i32 0, i32 70, !dbg !4545
  %118 = load float, float* %obfac226, align 8, !dbg !4545
  %119 = load float, float* %dtime.addr, align 4, !dbg !4546
  %div = fdiv float %118, %119, !dbg !4547
  call void @mul_v3_fl(float* %arraydecay225, float %div), !dbg !4548
  br label %if.end227, !dbg !4549

if.end227:                                        ; preds = %if.then220, %land.lhs.true217, %if.end214
  %120 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4550
  %normfac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %120, i32 0, i32 69, !dbg !4552
  %121 = load float, float* %normfac, align 4, !dbg !4552
  %cmp228 = fcmp une float %121, 0.000000e+00, !dbg !4553
  br i1 %cmp228, label %if.then230, label %if.end234, !dbg !4554

if.then230:                                       ; preds = %if.end227
  %arraydecay231 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4555
  %arraydecay232 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4556
  %122 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4557
  %normfac233 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %122, i32 0, i32 69, !dbg !4558
  %123 = load float, float* %normfac233, align 4, !dbg !4558
  call void @madd_v3_v3fl(float* %arraydecay231, float* %arraydecay232, float %123), !dbg !4559
  br label %if.end234, !dbg !4559

if.end234:                                        ; preds = %if.then230, %if.end227
  %124 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !4560
  %psmd235 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %124, i32 0, i32 3, !dbg !4562
  %125 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd235, align 8, !dbg !4562
  %tobool236 = icmp ne %struct.ParticleSystemModifierData* %125, null, !dbg !4560
  br i1 %tobool236, label %land.lhs.true237, label %if.end245, !dbg !4563

land.lhs.true237:                                 ; preds = %if.end234
  %126 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4564
  %tanfac238 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %126, i32 0, i32 73, !dbg !4565
  %127 = load float, float* %tanfac238, align 4, !dbg !4565
  %cmp239 = fcmp une float %127, 0.000000e+00, !dbg !4566
  br i1 %cmp239, label %if.then241, label %if.end245, !dbg !4567

if.then241:                                       ; preds = %land.lhs.true237
  %arraydecay242 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4568
  %arraydecay243 = getelementptr inbounds [3 x float], [3 x float]* %vtan, i64 0, i64 0, !dbg !4569
  %128 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4570
  %tanfac244 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %128, i32 0, i32 73, !dbg !4571
  %129 = load float, float* %tanfac244, align 4, !dbg !4571
  call void @madd_v3_v3fl(float* %arraydecay242, float* %arraydecay243, float %129), !dbg !4572
  br label %if.end245, !dbg !4572

if.end245:                                        ; preds = %if.then241, %land.lhs.true237, %if.end234
  %130 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4573
  %ob_vel = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %130, i32 0, i32 76, !dbg !4575
  %arrayidx246 = getelementptr inbounds [3 x float], [3 x float]* %ob_vel, i64 0, i64 0, !dbg !4573
  %131 = load float, float* %arrayidx246, align 8, !dbg !4573
  %cmp247 = fcmp une float %131, 0.000000e+00, !dbg !4576
  br i1 %cmp247, label %if.then249, label %if.end259, !dbg !4577

if.then249:                                       ; preds = %if.end245
  %arraydecay250 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4578
  %132 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4580
  %obmat251 = getelementptr inbounds %struct.Object, %struct.Object* %132, i32 0, i32 47, !dbg !4581
  %arrayidx252 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat251, i64 0, i64 0, !dbg !4580
  %arraydecay253 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx252, i64 0, i64 0, !dbg !4580
  %call254 = call float @normalize_v3_v3(float* %arraydecay250, float* %arraydecay253), !dbg !4582
  %arraydecay255 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4583
  %arraydecay256 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4584
  %133 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4585
  %ob_vel257 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %133, i32 0, i32 76, !dbg !4586
  %arrayidx258 = getelementptr inbounds [3 x float], [3 x float]* %ob_vel257, i64 0, i64 0, !dbg !4585
  %134 = load float, float* %arrayidx258, align 8, !dbg !4585
  call void @madd_v3_v3fl(float* %arraydecay255, float* %arraydecay256, float %134), !dbg !4587
  br label %if.end259, !dbg !4588

if.end259:                                        ; preds = %if.then249, %if.end245
  %135 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4589
  %ob_vel260 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %135, i32 0, i32 76, !dbg !4591
  %arrayidx261 = getelementptr inbounds [3 x float], [3 x float]* %ob_vel260, i64 0, i64 1, !dbg !4589
  %136 = load float, float* %arrayidx261, align 4, !dbg !4589
  %cmp262 = fcmp une float %136, 0.000000e+00, !dbg !4592
  br i1 %cmp262, label %if.then264, label %if.end274, !dbg !4593

if.then264:                                       ; preds = %if.end259
  %arraydecay265 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4594
  %137 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4596
  %obmat266 = getelementptr inbounds %struct.Object, %struct.Object* %137, i32 0, i32 47, !dbg !4597
  %arrayidx267 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat266, i64 0, i64 1, !dbg !4596
  %arraydecay268 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx267, i64 0, i64 0, !dbg !4596
  %call269 = call float @normalize_v3_v3(float* %arraydecay265, float* %arraydecay268), !dbg !4598
  %arraydecay270 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4599
  %arraydecay271 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4600
  %138 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4601
  %ob_vel272 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %138, i32 0, i32 76, !dbg !4602
  %arrayidx273 = getelementptr inbounds [3 x float], [3 x float]* %ob_vel272, i64 0, i64 1, !dbg !4601
  %139 = load float, float* %arrayidx273, align 4, !dbg !4601
  call void @madd_v3_v3fl(float* %arraydecay270, float* %arraydecay271, float %139), !dbg !4603
  br label %if.end274, !dbg !4604

if.end274:                                        ; preds = %if.then264, %if.end259
  %140 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4605
  %ob_vel275 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %140, i32 0, i32 76, !dbg !4607
  %arrayidx276 = getelementptr inbounds [3 x float], [3 x float]* %ob_vel275, i64 0, i64 2, !dbg !4605
  %141 = load float, float* %arrayidx276, align 8, !dbg !4605
  %cmp277 = fcmp une float %141, 0.000000e+00, !dbg !4608
  br i1 %cmp277, label %if.then279, label %if.end289, !dbg !4609

if.then279:                                       ; preds = %if.end274
  %arraydecay280 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4610
  %142 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4612
  %obmat281 = getelementptr inbounds %struct.Object, %struct.Object* %142, i32 0, i32 47, !dbg !4613
  %arrayidx282 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat281, i64 0, i64 2, !dbg !4612
  %arraydecay283 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx282, i64 0, i64 0, !dbg !4612
  %call284 = call float @normalize_v3_v3(float* %arraydecay280, float* %arraydecay283), !dbg !4614
  %arraydecay285 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4615
  %arraydecay286 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !4616
  %143 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4617
  %ob_vel287 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %143, i32 0, i32 76, !dbg !4618
  %arrayidx288 = getelementptr inbounds [3 x float], [3 x float]* %ob_vel287, i64 0, i64 2, !dbg !4617
  %144 = load float, float* %arrayidx288, align 8, !dbg !4617
  call void @madd_v3_v3fl(float* %arraydecay285, float* %arraydecay286, float %144), !dbg !4619
  br label %if.end289, !dbg !4620

if.end289:                                        ; preds = %if.then279, %if.end274
  %145 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4621
  %randfac290 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %145, i32 0, i32 71, !dbg !4623
  %146 = load float, float* %randfac290, align 4, !dbg !4623
  %cmp291 = fcmp une float %146, 0.000000e+00, !dbg !4624
  br i1 %cmp291, label %if.then293, label %if.end297, !dbg !4625

if.then293:                                       ; preds = %if.end289
  %arraydecay294 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4626
  %arraydecay295 = getelementptr inbounds [3 x float], [3 x float]* %r_vel, i64 0, i64 0, !dbg !4627
  %147 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4628
  %randfac296 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %147, i32 0, i32 71, !dbg !4629
  %148 = load float, float* %randfac296, align 4, !dbg !4629
  call void @madd_v3_v3fl(float* %arraydecay294, float* %arraydecay295, float %148), !dbg !4630
  br label %if.end297, !dbg !4630

if.end297:                                        ; preds = %if.then293, %if.end289
  %149 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4631
  %partfac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %149, i32 0, i32 72, !dbg !4633
  %150 = load float, float* %partfac, align 8, !dbg !4633
  %cmp298 = fcmp une float %150, 0.000000e+00, !dbg !4634
  br i1 %cmp298, label %if.then300, label %if.end304, !dbg !4635

if.then300:                                       ; preds = %if.end297
  %arraydecay301 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4636
  %arraydecay302 = getelementptr inbounds [3 x float], [3 x float]* %p_vel, i64 0, i64 0, !dbg !4637
  %151 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4638
  %partfac303 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %151, i32 0, i32 72, !dbg !4639
  %152 = load float, float* %partfac303, align 8, !dbg !4639
  call void @madd_v3_v3fl(float* %arraydecay301, float* %arraydecay302, float %152), !dbg !4640
  br label %if.end304, !dbg !4640

if.end304:                                        ; preds = %if.then300, %if.end297
  %153 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4641
  %vel305 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %153, i32 0, i32 1, !dbg !4642
  %arraydecay306 = getelementptr inbounds [3 x float], [3 x float]* %vel305, i64 0, i64 0, !dbg !4641
  %arraydecay307 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4643
  %ivel = getelementptr inbounds %struct.ParticleTexture, %struct.ParticleTexture* %ptex, i32 0, i32 0, !dbg !4644
  %154 = load float, float* %ivel, align 4, !dbg !4644
  call void @mul_v3_v3fl(float* %arraydecay306, float* %arraydecay307, float %154), !dbg !4645
  %155 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4646
  %co308 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %155, i32 0, i32 0, !dbg !4647
  %arraydecay309 = getelementptr inbounds [3 x float], [3 x float]* %co308, i64 0, i64 0, !dbg !4646
  %arraydecay310 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !4648
  call void @copy_v3_v3(float* %arraydecay309, float* %arraydecay310), !dbg !4649
  %156 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4650
  %rot311 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %156, i32 0, i32 2, !dbg !4651
  %arraydecay312 = getelementptr inbounds [4 x float], [4 x float]* %rot311, i64 0, i64 0, !dbg !4650
  call void @unit_qt(float* %arraydecay312), !dbg !4652
  %157 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4653
  %rotmode313 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %157, i32 0, i32 12, !dbg !4655
  %158 = load i16, i16* %rotmode313, align 2, !dbg !4655
  %tobool314 = icmp ne i16 %158, 0, !dbg !4653
  br i1 %tobool314, label %if.then315, label %if.end425, !dbg !4656

if.then315:                                       ; preds = %if.end304
  call void @llvm.dbg.declare(metadata i8* %use_global_space, metadata !4657, metadata !DIExpression()), !dbg !4659
  %159 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4660
  %rotmode316 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %159, i32 0, i32 12, !dbg !4661
  %160 = load i16, i16* %rotmode316, align 2, !dbg !4661
  %conv317 = sext i16 %160 to i32, !dbg !4660
  switch i32 %conv317, label %sw.default [
    i32 1, label %sw.bb
    i32 9, label %sw.bb
    i32 2, label %sw.bb320
    i32 3, label %sw.bb323
    i32 4, label %sw.bb323
    i32 5, label %sw.bb323
    i32 6, label %sw.bb328
    i32 7, label %sw.bb328
    i32 8, label %sw.bb328
  ], !dbg !4662

sw.bb:                                            ; preds = %if.then315, %if.then315
  %arraydecay318 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec, i64 0, i64 0, !dbg !4663
  %arraydecay319 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !4665
  call void @copy_v3_v3(float* %arraydecay318, float* %arraydecay319), !dbg !4666
  store i8 0, i8* %use_global_space, align 1, !dbg !4667
  br label %sw.epilog, !dbg !4668

sw.bb320:                                         ; preds = %if.then315
  %arraydecay321 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec, i64 0, i64 0, !dbg !4669
  %arraydecay322 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !4670
  call void @copy_v3_v3(float* %arraydecay321, float* %arraydecay322), !dbg !4671
  store i8 1, i8* %use_global_space, align 1, !dbg !4672
  br label %sw.epilog, !dbg !4673

sw.bb323:                                         ; preds = %if.then315, %if.then315, %if.then315
  %161 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4674
  %rotmode324 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %161, i32 0, i32 12, !dbg !4675
  %162 = load i16, i16* %rotmode324, align 2, !dbg !4675
  %conv325 = sext i16 %162 to i32, !dbg !4674
  %sub326 = sub nsw i32 %conv325, 3, !dbg !4676
  %idxprom = sext i32 %sub326 to i64, !dbg !4677
  %arrayidx327 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec, i64 0, i64 %idxprom, !dbg !4677
  store float 1.000000e+00, float* %arrayidx327, align 4, !dbg !4678
  store i8 1, i8* %use_global_space, align 1, !dbg !4679
  br label %sw.epilog, !dbg !4680

sw.bb328:                                         ; preds = %if.then315, %if.then315, %if.then315
  %arraydecay329 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec, i64 0, i64 0, !dbg !4681
  %163 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4682
  %obmat330 = getelementptr inbounds %struct.Object, %struct.Object* %163, i32 0, i32 47, !dbg !4683
  %164 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4684
  %rotmode331 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %164, i32 0, i32 12, !dbg !4685
  %165 = load i16, i16* %rotmode331, align 2, !dbg !4685
  %conv332 = sext i16 %165 to i32, !dbg !4684
  %sub333 = sub nsw i32 %conv332, 6, !dbg !4686
  %idxprom334 = sext i32 %sub333 to i64, !dbg !4682
  %arrayidx335 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat330, i64 0, i64 %idxprom334, !dbg !4682
  %arraydecay336 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx335, i64 0, i64 0, !dbg !4682
  call void @copy_v3_v3(float* %arraydecay329, float* %arraydecay336), !dbg !4687
  store i8 0, i8* %use_global_space, align 1, !dbg !4688
  br label %sw.epilog, !dbg !4689

sw.default:                                       ; preds = %if.then315
  store i8 1, i8* %use_global_space, align 1, !dbg !4690
  br label %sw.epilog, !dbg !4691

sw.epilog:                                        ; preds = %sw.default, %sw.bb328, %sw.bb323, %sw.bb320, %sw.bb
  %166 = load i8, i8* %use_global_space, align 1, !dbg !4692
  %tobool337 = icmp ne i8 %166, 0, !dbg !4692
  br i1 %tobool337, label %if.then338, label %if.else354, !dbg !4694

if.then338:                                       ; preds = %sw.epilog
  %arraydecay339 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec, i64 0, i64 0, !dbg !4695
  call void @negate_v3(float* %arraydecay339), !dbg !4697
  %arraydecay340 = getelementptr inbounds [4 x float], [4 x float]* %q2, i64 0, i64 0, !dbg !4698
  %arraydecay341 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec, i64 0, i64 0, !dbg !4699
  call void @vec_to_quat(float* %arraydecay340, float* %arraydecay341, i16 signext 0, i16 signext 2), !dbg !4700
  %167 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4701
  %randrotfac342 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %167, i32 0, i32 79, !dbg !4703
  %168 = load float, float* %randrotfac342, align 4, !dbg !4703
  %cmp343 = fcmp une float %168, 0.000000e+00, !dbg !4704
  br i1 %cmp343, label %if.then345, label %if.else350, !dbg !4705

if.then345:                                       ; preds = %if.then338
  %arraydecay346 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !4706
  %arraydecay347 = getelementptr inbounds [4 x float], [4 x float]* %q2, i64 0, i64 0, !dbg !4708
  %arraydecay348 = getelementptr inbounds [4 x float], [4 x float]* %r_rot, i64 0, i64 0, !dbg !4709
  %169 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4710
  %randrotfac349 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %169, i32 0, i32 79, !dbg !4711
  %170 = load float, float* %randrotfac349, align 4, !dbg !4711
  call void @interp_qt_qtqt(float* %arraydecay346, float* %arraydecay347, float* %arraydecay348, float %170), !dbg !4712
  br label %if.end353, !dbg !4713

if.else350:                                       ; preds = %if.then338
  %arraydecay351 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !4714
  %arraydecay352 = getelementptr inbounds [4 x float], [4 x float]* %q2, i64 0, i64 0, !dbg !4716
  call void @copy_qt_qt(float* %arraydecay351, float* %arraydecay352), !dbg !4717
  br label %if.end353

if.end353:                                        ; preds = %if.else350, %if.then345
  br label %if.end407, !dbg !4718

if.else354:                                       ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata [4 x float]* %q_obmat, metadata !4719, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.declare(metadata [4 x float]* %q_imat, metadata !4722, metadata !DIExpression()), !dbg !4723
  %arraydecay355 = getelementptr inbounds [4 x float], [4 x float]* %q_obmat, i64 0, i64 0, !dbg !4724
  %171 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4725
  %obmat356 = getelementptr inbounds %struct.Object, %struct.Object* %171, i32 0, i32 47, !dbg !4726
  %arraydecay357 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat356, i64 0, i64 0, !dbg !4725
  call void @mat4_to_quat(float* %arraydecay355, [4 x float]* %arraydecay357), !dbg !4727
  %arraydecay358 = getelementptr inbounds [4 x float], [4 x float]* %q_imat, i64 0, i64 0, !dbg !4728
  %arraydecay359 = getelementptr inbounds [4 x float], [4 x float]* %q_obmat, i64 0, i64 0, !dbg !4729
  call void @invert_qt_qt(float* %arraydecay358, float* %arraydecay359), !dbg !4730
  %172 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4731
  %rotmode360 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %172, i32 0, i32 12, !dbg !4733
  %173 = load i16, i16* %rotmode360, align 2, !dbg !4733
  %conv361 = sext i16 %173 to i32, !dbg !4731
  %cmp362 = icmp ne i32 %conv361, 9, !dbg !4734
  br i1 %cmp362, label %if.then364, label %if.else374, !dbg !4735

if.then364:                                       ; preds = %if.else354
  call void @llvm.dbg.declare(metadata [3 x float]* %rot_vec_local, metadata !4736, metadata !DIExpression()), !dbg !4738
  %arraydecay365 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec, i64 0, i64 0, !dbg !4739
  call void @negate_v3(float* %arraydecay365), !dbg !4740
  %arraydecay366 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec_local, i64 0, i64 0, !dbg !4741
  %arraydecay367 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec, i64 0, i64 0, !dbg !4742
  call void @copy_v3_v3(float* %arraydecay366, float* %arraydecay367), !dbg !4743
  %arraydecay368 = getelementptr inbounds [4 x float], [4 x float]* %q_imat, i64 0, i64 0, !dbg !4744
  %arraydecay369 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec_local, i64 0, i64 0, !dbg !4745
  call void @mul_qt_v3(float* %arraydecay368, float* %arraydecay369), !dbg !4746
  %arraydecay370 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec_local, i64 0, i64 0, !dbg !4747
  %call371 = call float @normalize_v3(float* %arraydecay370), !dbg !4748
  %arraydecay372 = getelementptr inbounds [4 x float], [4 x float]* %q2, i64 0, i64 0, !dbg !4749
  %arraydecay373 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec_local, i64 0, i64 0, !dbg !4750
  call void @vec_to_quat(float* %arraydecay372, float* %arraydecay373, i16 signext 0, i16 signext 2), !dbg !4751
  br label %if.end388, !dbg !4752

if.else374:                                       ; preds = %if.else354
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !4753, metadata !DIExpression()), !dbg !4755
  call void @llvm.dbg.declare(metadata float** %rot_vec_local375, metadata !4756, metadata !DIExpression()), !dbg !4757
  %arrayidx376 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !4758
  %arraydecay377 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx376, i64 0, i64 0, !dbg !4758
  store float* %arraydecay377, float** %rot_vec_local375, align 8, !dbg !4757
  call void @llvm.dbg.declare(metadata float** %vtan_local, metadata !4759, metadata !DIExpression()), !dbg !4760
  %arrayidx378 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 1, !dbg !4761
  %arraydecay379 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx378, i64 0, i64 0, !dbg !4761
  store float* %arraydecay379, float** %vtan_local, align 8, !dbg !4760
  call void @llvm.dbg.declare(metadata float** %utan_local, metadata !4762, metadata !DIExpression()), !dbg !4763
  %arrayidx380 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 2, !dbg !4764
  %arraydecay381 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx380, i64 0, i64 0, !dbg !4764
  store float* %arraydecay381, float** %utan_local, align 8, !dbg !4763
  %174 = load float*, float** %rot_vec_local375, align 8, !dbg !4765
  %arraydecay382 = getelementptr inbounds [3 x float], [3 x float]* %rot_vec, i64 0, i64 0, !dbg !4766
  call void @copy_v3_v3(float* %174, float* %arraydecay382), !dbg !4767
  %arraydecay383 = getelementptr inbounds [4 x float], [4 x float]* %q_imat, i64 0, i64 0, !dbg !4768
  %175 = load float*, float** %rot_vec_local375, align 8, !dbg !4769
  call void @mul_qt_v3(float* %arraydecay383, float* %175), !dbg !4770
  %176 = load float*, float** %vtan_local, align 8, !dbg !4771
  %arraydecay384 = getelementptr inbounds [3 x float], [3 x float]* %vtan, i64 0, i64 0, !dbg !4772
  call void @copy_v3_v3(float* %176, float* %arraydecay384), !dbg !4773
  %arraydecay385 = getelementptr inbounds [4 x float], [4 x float]* %q_imat, i64 0, i64 0, !dbg !4774
  %177 = load float*, float** %vtan_local, align 8, !dbg !4775
  call void @mul_qt_v3(float* %arraydecay385, float* %177), !dbg !4776
  %178 = load float*, float** %utan_local, align 8, !dbg !4777
  %179 = load float*, float** %vtan_local, align 8, !dbg !4778
  %180 = load float*, float** %rot_vec_local375, align 8, !dbg !4779
  call void @cross_v3_v3v3(float* %178, float* %179, float* %180), !dbg !4780
  %181 = load float*, float** %vtan_local, align 8, !dbg !4781
  %182 = load float*, float** %utan_local, align 8, !dbg !4782
  %183 = load float*, float** %rot_vec_local375, align 8, !dbg !4783
  call void @cross_v3_v3v3(float* %181, float* %182, float* %183), !dbg !4784
  %arraydecay386 = getelementptr inbounds [4 x float], [4 x float]* %q2, i64 0, i64 0, !dbg !4785
  %arraydecay387 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !4786
  call void @mat3_to_quat(float* %arraydecay386, [3 x float]* %arraydecay387), !dbg !4787
  br label %if.end388

if.end388:                                        ; preds = %if.else374, %if.then364
  %184 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4788
  %randrotfac389 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %184, i32 0, i32 79, !dbg !4790
  %185 = load float, float* %randrotfac389, align 4, !dbg !4790
  %cmp390 = fcmp une float %185, 0.000000e+00, !dbg !4791
  br i1 %cmp390, label %if.then392, label %if.else400, !dbg !4792

if.then392:                                       ; preds = %if.end388
  %arraydecay393 = getelementptr inbounds [4 x float], [4 x float]* %r_rot, i64 0, i64 0, !dbg !4793
  %arraydecay394 = getelementptr inbounds [4 x float], [4 x float]* %r_rot, i64 0, i64 0, !dbg !4795
  %arraydecay395 = getelementptr inbounds [4 x float], [4 x float]* %q_imat, i64 0, i64 0, !dbg !4796
  call void @mul_qt_qtqt(float* %arraydecay393, float* %arraydecay394, float* %arraydecay395), !dbg !4797
  %arraydecay396 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !4798
  %arraydecay397 = getelementptr inbounds [4 x float], [4 x float]* %q2, i64 0, i64 0, !dbg !4799
  %arraydecay398 = getelementptr inbounds [4 x float], [4 x float]* %r_rot, i64 0, i64 0, !dbg !4800
  %186 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4801
  %randrotfac399 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %186, i32 0, i32 79, !dbg !4802
  %187 = load float, float* %randrotfac399, align 4, !dbg !4802
  call void @interp_qt_qtqt(float* %arraydecay396, float* %arraydecay397, float* %arraydecay398, float %187), !dbg !4803
  br label %if.end403, !dbg !4804

if.else400:                                       ; preds = %if.end388
  %arraydecay401 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !4805
  %arraydecay402 = getelementptr inbounds [4 x float], [4 x float]* %q2, i64 0, i64 0, !dbg !4807
  call void @copy_qt_qt(float* %arraydecay401, float* %arraydecay402), !dbg !4808
  br label %if.end403

if.end403:                                        ; preds = %if.else400, %if.then392
  %arraydecay404 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !4809
  %arraydecay405 = getelementptr inbounds [4 x float], [4 x float]* %q_obmat, i64 0, i64 0, !dbg !4810
  %arraydecay406 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !4811
  call void @mul_qt_qtqt(float* %arraydecay404, float* %arraydecay405, float* %arraydecay406), !dbg !4812
  br label %if.end407

if.end407:                                        ; preds = %if.end403, %if.end353
  %188 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4813
  %phasefac408 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %188, i32 0, i32 78, !dbg !4814
  %189 = load float, float* %phasefac408, align 8, !dbg !4814
  store float %189, float* %phasefac, align 4, !dbg !4815
  %190 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4816
  %randphasefac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %190, i32 0, i32 80, !dbg !4818
  %191 = load float, float* %randphasefac, align 8, !dbg !4818
  %cmp409 = fcmp une float %191, 0.000000e+00, !dbg !4819
  br i1 %cmp409, label %if.then411, label %if.end417, !dbg !4820

if.then411:                                       ; preds = %if.end407
  %192 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4821
  %randphasefac412 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %192, i32 0, i32 80, !dbg !4822
  %193 = load float, float* %randphasefac412, align 8, !dbg !4822
  %194 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4823
  %195 = load i32, i32* %p, align 4, !dbg !4824
  %add413 = add nsw i32 %195, 20, !dbg !4825
  %call414 = call float @psys_frand(%struct.ParticleSystem* %194, i32 %add413), !dbg !4826
  %mul415 = fmul float %193, %call414, !dbg !4827
  %196 = load float, float* %phasefac, align 4, !dbg !4828
  %add416 = fadd float %196, %mul415, !dbg !4828
  store float %add416, float* %phasefac, align 4, !dbg !4828
  br label %if.end417, !dbg !4829

if.end417:                                        ; preds = %if.then411, %if.end407
  %arraydecay418 = getelementptr inbounds [4 x float], [4 x float]* %q_phase, i64 0, i64 0, !dbg !4830
  %arraydecay419 = getelementptr inbounds [3 x float], [3 x float]* %x_vec, i64 0, i64 0, !dbg !4831
  %197 = load float, float* %phasefac, align 4, !dbg !4832
  %mul420 = fmul float %197, 0x400921FB60000000, !dbg !4833
  call void @axis_angle_to_quat(float* %arraydecay418, float* %arraydecay419, float %mul420), !dbg !4834
  %198 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4835
  %rot421 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %198, i32 0, i32 2, !dbg !4836
  %arraydecay422 = getelementptr inbounds [4 x float], [4 x float]* %rot421, i64 0, i64 0, !dbg !4835
  %arraydecay423 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !4837
  %arraydecay424 = getelementptr inbounds [4 x float], [4 x float]* %q_phase, i64 0, i64 0, !dbg !4838
  call void @mul_qt_qtqt(float* %arraydecay422, float* %arraydecay423, float* %arraydecay424), !dbg !4839
  br label %if.end425, !dbg !4840

if.end425:                                        ; preds = %if.end417, %if.end304
  %199 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4841
  %ave426 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %199, i32 0, i32 3, !dbg !4842
  %arraydecay427 = getelementptr inbounds [3 x float], [3 x float]* %ave426, i64 0, i64 0, !dbg !4841
  call void @zero_v3(float* %arraydecay427), !dbg !4843
  %200 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4844
  %avemode428 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %200, i32 0, i32 13, !dbg !4846
  %201 = load i16, i16* %avemode428, align 4, !dbg !4846
  %tobool429 = icmp ne i16 %201, 0, !dbg !4844
  br i1 %tobool429, label %if.then430, label %if.end449, !dbg !4847

if.then430:                                       ; preds = %if.end425
  %202 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4848
  %avemode431 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %202, i32 0, i32 13, !dbg !4851
  %203 = load i16, i16* %avemode431, align 4, !dbg !4851
  %conv432 = sext i16 %203 to i32, !dbg !4848
  %cmp433 = icmp eq i32 %conv432, 2, !dbg !4852
  br i1 %cmp433, label %if.then435, label %if.else439, !dbg !4853

if.then435:                                       ; preds = %if.then430
  %204 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4854
  %ave436 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %204, i32 0, i32 3, !dbg !4855
  %arraydecay437 = getelementptr inbounds [3 x float], [3 x float]* %ave436, i64 0, i64 0, !dbg !4854
  %arraydecay438 = getelementptr inbounds [3 x float], [3 x float]* %r_ave, i64 0, i64 0, !dbg !4856
  call void @copy_v3_v3(float* %arraydecay437, float* %arraydecay438), !dbg !4857
  br label %if.end443, !dbg !4857

if.else439:                                       ; preds = %if.then430
  %205 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4858
  %avemode440 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %205, i32 0, i32 13, !dbg !4859
  %206 = load i16, i16* %avemode440, align 4, !dbg !4859
  %207 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4860
  %208 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4861
  %ave441 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %208, i32 0, i32 3, !dbg !4862
  %arraydecay442 = getelementptr inbounds [3 x float], [3 x float]* %ave441, i64 0, i64 0, !dbg !4861
  call void @get_angular_velocity_vector(i16 signext %206, %struct.ParticleKey* %207, float* %arraydecay442), !dbg !4863
  br label %if.end443

if.end443:                                        ; preds = %if.else439, %if.then435
  %209 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4864
  %ave444 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %209, i32 0, i32 3, !dbg !4865
  %arraydecay445 = getelementptr inbounds [3 x float], [3 x float]* %ave444, i64 0, i64 0, !dbg !4864
  %call446 = call float @normalize_v3(float* %arraydecay445), !dbg !4866
  %210 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !4867
  %ave447 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %210, i32 0, i32 3, !dbg !4868
  %arraydecay448 = getelementptr inbounds [3 x float], [3 x float]* %ave447, i64 0, i64 0, !dbg !4867
  %211 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !4869
  %avefac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %211, i32 0, i32 77, !dbg !4870
  %212 = load float, float* %avefac, align 4, !dbg !4870
  call void @mul_v3_fl(float* %arraydecay448, float %212), !dbg !4871
  br label %if.end449, !dbg !4872

if.end449:                                        ; preds = %if.end443, %if.end425
  br label %if.end450

if.end450:                                        ; preds = %if.end449, %if.end174
  ret void, !dbg !4873
}

declare dso_local void @psys_particle_on_emitter(%struct.ParticleSystemModifierData*, i32, i32, i32, float*, float, float*, float*, float*, float*, float*, float*) #2

declare dso_local void @psys_get_texture(%struct.ParticleSimulationData*, %struct.ParticleData*, %struct.ParticleTexture*, i32, float) #2

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

declare dso_local void @mul_mat3_m4_v3([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !4874 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !4878, metadata !DIExpression()), !dbg !4879
  %0 = load float*, float** %n.addr, align 8, !dbg !4880
  %1 = load float*, float** %n.addr, align 8, !dbg !4881
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !4882
  ret float %call, !dbg !4883
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !4884 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4887, metadata !DIExpression()), !dbg !4888
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !4889, metadata !DIExpression()), !dbg !4890
  %0 = load float, float* %f.addr, align 4, !dbg !4891
  %1 = load float*, float** %r.addr, align 8, !dbg !4892
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !4892
  %2 = load float, float* %arrayidx, align 4, !dbg !4893
  %mul = fmul float %2, %0, !dbg !4893
  store float %mul, float* %arrayidx, align 4, !dbg !4893
  %3 = load float, float* %f.addr, align 4, !dbg !4894
  %4 = load float*, float** %r.addr, align 8, !dbg !4895
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !4895
  %5 = load float, float* %arrayidx1, align 4, !dbg !4896
  %mul2 = fmul float %5, %3, !dbg !4896
  store float %mul2, float* %arrayidx1, align 4, !dbg !4896
  %6 = load float, float* %f.addr, align 4, !dbg !4897
  %7 = load float*, float** %r.addr, align 8, !dbg !4898
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !4898
  %8 = load float, float* %arrayidx3, align 4, !dbg !4899
  %mul4 = fmul float %8, %6, !dbg !4899
  store float %mul4, float* %arrayidx3, align 4, !dbg !4899
  ret void, !dbg !4900
}

; Function Attrs: nounwind
declare dso_local float @cosf(float) #4

; Function Attrs: nounwind
declare dso_local float @sinf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !4901 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4904, metadata !DIExpression()), !dbg !4905
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4906, metadata !DIExpression()), !dbg !4907
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !4908, metadata !DIExpression()), !dbg !4909
  %0 = load float*, float** %a.addr, align 8, !dbg !4910
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4910
  %1 = load float, float* %arrayidx, align 4, !dbg !4910
  %2 = load float, float* %f.addr, align 4, !dbg !4911
  %mul = fmul float %1, %2, !dbg !4912
  %3 = load float*, float** %r.addr, align 8, !dbg !4913
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !4913
  %4 = load float, float* %arrayidx1, align 4, !dbg !4914
  %add = fadd float %4, %mul, !dbg !4914
  store float %add, float* %arrayidx1, align 4, !dbg !4914
  %5 = load float*, float** %a.addr, align 8, !dbg !4915
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !4915
  %6 = load float, float* %arrayidx2, align 4, !dbg !4915
  %7 = load float, float* %f.addr, align 4, !dbg !4916
  %mul3 = fmul float %6, %7, !dbg !4917
  %8 = load float*, float** %r.addr, align 8, !dbg !4918
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !4918
  %9 = load float, float* %arrayidx4, align 4, !dbg !4919
  %add5 = fadd float %9, %mul3, !dbg !4919
  store float %add5, float* %arrayidx4, align 4, !dbg !4919
  %10 = load float*, float** %a.addr, align 8, !dbg !4920
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !4920
  %11 = load float, float* %arrayidx6, align 4, !dbg !4920
  %12 = load float, float* %f.addr, align 4, !dbg !4921
  %mul7 = fmul float %11, %12, !dbg !4922
  %13 = load float*, float** %r.addr, align 8, !dbg !4923
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !4923
  %14 = load float, float* %arrayidx8, align 4, !dbg !4924
  %add9 = fadd float %14, %mul7, !dbg !4924
  store float %add9, float* %arrayidx8, align 4, !dbg !4924
  ret void, !dbg !4925
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !4926 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4929, metadata !DIExpression()), !dbg !4930
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4931, metadata !DIExpression()), !dbg !4932
  %0 = load float*, float** %a.addr, align 8, !dbg !4933
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4933
  %1 = load float, float* %arrayidx, align 4, !dbg !4933
  %2 = load float*, float** %r.addr, align 8, !dbg !4934
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4934
  store float %1, float* %arrayidx1, align 4, !dbg !4935
  %3 = load float*, float** %a.addr, align 8, !dbg !4936
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4936
  %4 = load float, float* %arrayidx2, align 4, !dbg !4936
  %5 = load float*, float** %r.addr, align 8, !dbg !4937
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4937
  store float %4, float* %arrayidx3, align 4, !dbg !4938
  %6 = load float*, float** %a.addr, align 8, !dbg !4939
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4939
  %7 = load float, float* %arrayidx4, align 4, !dbg !4939
  %8 = load float*, float** %r.addr, align 8, !dbg !4940
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4940
  store float %7, float* %arrayidx5, align 4, !dbg !4941
  ret void, !dbg !4942
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !4943 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4946, metadata !DIExpression()), !dbg !4947
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !4948, metadata !DIExpression()), !dbg !4949
  %0 = load float*, float** %a.addr, align 8, !dbg !4950
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4950
  %1 = load float, float* %arrayidx, align 4, !dbg !4950
  %2 = load float*, float** %b.addr, align 8, !dbg !4951
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4951
  %3 = load float, float* %arrayidx1, align 4, !dbg !4951
  %mul = fmul float %1, %3, !dbg !4952
  %4 = load float*, float** %a.addr, align 8, !dbg !4953
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !4953
  %5 = load float, float* %arrayidx2, align 4, !dbg !4953
  %6 = load float*, float** %b.addr, align 8, !dbg !4954
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !4954
  %7 = load float, float* %arrayidx3, align 4, !dbg !4954
  %mul4 = fmul float %5, %7, !dbg !4955
  %add = fadd float %mul, %mul4, !dbg !4956
  %8 = load float*, float** %a.addr, align 8, !dbg !4957
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4957
  %9 = load float, float* %arrayidx5, align 4, !dbg !4957
  %10 = load float*, float** %b.addr, align 8, !dbg !4958
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !4958
  %11 = load float, float* %arrayidx6, align 4, !dbg !4958
  %mul7 = fmul float %9, %11, !dbg !4959
  %add8 = fadd float %add, %mul7, !dbg !4960
  ret float %add8, !dbg !4961
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !4962 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4963, metadata !DIExpression()), !dbg !4964
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4965, metadata !DIExpression()), !dbg !4966
  %0 = load float*, float** %a.addr, align 8, !dbg !4967
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4967
  %1 = load float, float* %arrayidx, align 4, !dbg !4967
  %2 = load float*, float** %r.addr, align 8, !dbg !4968
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4968
  %3 = load float, float* %arrayidx1, align 4, !dbg !4969
  %sub = fsub float %3, %1, !dbg !4969
  store float %sub, float* %arrayidx1, align 4, !dbg !4969
  %4 = load float*, float** %a.addr, align 8, !dbg !4970
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !4970
  %5 = load float, float* %arrayidx2, align 4, !dbg !4970
  %6 = load float*, float** %r.addr, align 8, !dbg !4971
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !4971
  %7 = load float, float* %arrayidx3, align 4, !dbg !4972
  %sub4 = fsub float %7, %5, !dbg !4972
  store float %sub4, float* %arrayidx3, align 4, !dbg !4972
  %8 = load float*, float** %a.addr, align 8, !dbg !4973
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4973
  %9 = load float, float* %arrayidx5, align 4, !dbg !4973
  %10 = load float*, float** %r.addr, align 8, !dbg !4974
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !4974
  %11 = load float, float* %arrayidx6, align 4, !dbg !4975
  %sub7 = fsub float %11, %9, !dbg !4975
  store float %sub7, float* %arrayidx6, align 4, !dbg !4975
  ret void, !dbg !4976
}

; Function Attrs: noinline nounwind uwtable
define internal float @psys_frand(%struct.ParticleSystem* %psys, i32 %seed) #0 !dbg !4977 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %seed.addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %multiplier = alloca i32, align 4
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !4980, metadata !DIExpression()), !dbg !4981
  store i32 %seed, i32* %seed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seed.addr, metadata !4982, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !4984, metadata !DIExpression()), !dbg !4985
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !4986
  %seed1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 23, !dbg !4987
  %1 = load i32, i32* %seed1, align 4, !dbg !4987
  %rem = srem i32 %1, 1024, !dbg !4988
  %idxprom = sext i32 %rem to i64, !dbg !4989
  %arrayidx = getelementptr inbounds [1024 x i32], [1024 x i32]* @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %idxprom, !dbg !4989
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4989
  store i32 %2, i32* %offset, align 4, !dbg !4985
  call void @llvm.dbg.declare(metadata i32* %multiplier, metadata !4990, metadata !DIExpression()), !dbg !4991
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !4992
  %seed2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 23, !dbg !4993
  %4 = load i32, i32* %seed2, align 4, !dbg !4993
  %rem3 = srem i32 %4, 1024, !dbg !4994
  %idxprom4 = sext i32 %rem3 to i64, !dbg !4995
  %arrayidx5 = getelementptr inbounds [1024 x i32], [1024 x i32]* @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %idxprom4, !dbg !4995
  %5 = load i32, i32* %arrayidx5, align 4, !dbg !4995
  store i32 %5, i32* %multiplier, align 4, !dbg !4991
  %6 = load i32, i32* %offset, align 4, !dbg !4996
  %7 = load i32, i32* %seed.addr, align 4, !dbg !4997
  %8 = load i32, i32* %multiplier, align 4, !dbg !4998
  %mul = mul i32 %7, %8, !dbg !4999
  %add = add i32 %6, %mul, !dbg !5000
  %rem6 = urem i32 %add, 1024, !dbg !5001
  %idxprom7 = zext i32 %rem6 to i64, !dbg !5002
  %arrayidx8 = getelementptr inbounds [1024 x float], [1024 x float]* @PSYS_FRAND_BASE, i64 0, i64 %idxprom7, !dbg !5002
  %9 = load float, float* %arrayidx8, align 4, !dbg !5002
  ret float %9, !dbg !5003
}

declare dso_local float @normalize_qt(float*) #2

declare dso_local void @mat4_to_quat(float*, [4 x float]*) #2

declare dso_local void @mul_qt_qtqt(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !5004 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5007, metadata !DIExpression()), !dbg !5008
  %0 = load float*, float** %r.addr, align 8, !dbg !5009
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5009
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5010
  %1 = load float*, float** %r.addr, align 8, !dbg !5011
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !5011
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !5012
  %2 = load float*, float** %r.addr, align 8, !dbg !5013
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !5013
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !5014
  ret void, !dbg !5015
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !5016 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5019, metadata !DIExpression()), !dbg !5020
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5021, metadata !DIExpression()), !dbg !5022
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5023, metadata !DIExpression()), !dbg !5024
  %0 = load float*, float** %a.addr, align 8, !dbg !5025
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5025
  %1 = load float, float* %arrayidx, align 4, !dbg !5025
  %2 = load float*, float** %b.addr, align 8, !dbg !5026
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5026
  %3 = load float, float* %arrayidx1, align 4, !dbg !5026
  %sub = fsub float %1, %3, !dbg !5027
  %4 = load float*, float** %r.addr, align 8, !dbg !5028
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5028
  store float %sub, float* %arrayidx2, align 4, !dbg !5029
  %5 = load float*, float** %a.addr, align 8, !dbg !5030
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5030
  %6 = load float, float* %arrayidx3, align 4, !dbg !5030
  %7 = load float*, float** %b.addr, align 8, !dbg !5031
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5031
  %8 = load float, float* %arrayidx4, align 4, !dbg !5031
  %sub5 = fsub float %6, %8, !dbg !5032
  %9 = load float*, float** %r.addr, align 8, !dbg !5033
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !5033
  store float %sub5, float* %arrayidx6, align 4, !dbg !5034
  %10 = load float*, float** %a.addr, align 8, !dbg !5035
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !5035
  %11 = load float, float* %arrayidx7, align 4, !dbg !5035
  %12 = load float*, float** %b.addr, align 8, !dbg !5036
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !5036
  %13 = load float, float* %arrayidx8, align 4, !dbg !5036
  %sub9 = fsub float %11, %13, !dbg !5037
  %14 = load float*, float** %r.addr, align 8, !dbg !5038
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !5038
  store float %sub9, float* %arrayidx10, align 4, !dbg !5039
  ret void, !dbg !5040
}

declare dso_local void @project_v3_v3v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3_v3(float* %r, float* %a) #0 !dbg !5041 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5042, metadata !DIExpression()), !dbg !5043
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5044, metadata !DIExpression()), !dbg !5045
  %0 = load float*, float** %a.addr, align 8, !dbg !5046
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5046
  %1 = load float, float* %arrayidx, align 4, !dbg !5046
  %fneg = fneg float %1, !dbg !5047
  %2 = load float*, float** %r.addr, align 8, !dbg !5048
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5048
  store float %fneg, float* %arrayidx1, align 4, !dbg !5049
  %3 = load float*, float** %a.addr, align 8, !dbg !5050
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5050
  %4 = load float, float* %arrayidx2, align 4, !dbg !5050
  %fneg3 = fneg float %4, !dbg !5051
  %5 = load float*, float** %r.addr, align 8, !dbg !5052
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !5052
  store float %fneg3, float* %arrayidx4, align 4, !dbg !5053
  %6 = load float*, float** %a.addr, align 8, !dbg !5054
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !5054
  %7 = load float, float* %arrayidx5, align 4, !dbg !5054
  %fneg6 = fneg float %7, !dbg !5055
  %8 = load float*, float** %r.addr, align 8, !dbg !5056
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !5056
  store float %fneg6, float* %arrayidx7, align 4, !dbg !5057
  ret void, !dbg !5058
}

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !5059 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5060, metadata !DIExpression()), !dbg !5061
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5062, metadata !DIExpression()), !dbg !5063
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5064, metadata !DIExpression()), !dbg !5065
  %0 = load float*, float** %a.addr, align 8, !dbg !5066
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !5066
  %1 = load float, float* %arrayidx, align 4, !dbg !5066
  %2 = load float*, float** %b.addr, align 8, !dbg !5067
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !5067
  %3 = load float, float* %arrayidx1, align 4, !dbg !5067
  %mul = fmul float %1, %3, !dbg !5068
  %4 = load float*, float** %a.addr, align 8, !dbg !5069
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !5069
  %5 = load float, float* %arrayidx2, align 4, !dbg !5069
  %6 = load float*, float** %b.addr, align 8, !dbg !5070
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5070
  %7 = load float, float* %arrayidx3, align 4, !dbg !5070
  %mul4 = fmul float %5, %7, !dbg !5071
  %sub = fsub float %mul, %mul4, !dbg !5072
  %8 = load float*, float** %r.addr, align 8, !dbg !5073
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !5073
  store float %sub, float* %arrayidx5, align 4, !dbg !5074
  %9 = load float*, float** %a.addr, align 8, !dbg !5075
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !5075
  %10 = load float, float* %arrayidx6, align 4, !dbg !5075
  %11 = load float*, float** %b.addr, align 8, !dbg !5076
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !5076
  %12 = load float, float* %arrayidx7, align 4, !dbg !5076
  %mul8 = fmul float %10, %12, !dbg !5077
  %13 = load float*, float** %a.addr, align 8, !dbg !5078
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !5078
  %14 = load float, float* %arrayidx9, align 4, !dbg !5078
  %15 = load float*, float** %b.addr, align 8, !dbg !5079
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !5079
  %16 = load float, float* %arrayidx10, align 4, !dbg !5079
  %mul11 = fmul float %14, %16, !dbg !5080
  %sub12 = fsub float %mul8, %mul11, !dbg !5081
  %17 = load float*, float** %r.addr, align 8, !dbg !5082
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !5082
  store float %sub12, float* %arrayidx13, align 4, !dbg !5083
  %18 = load float*, float** %a.addr, align 8, !dbg !5084
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !5084
  %19 = load float, float* %arrayidx14, align 4, !dbg !5084
  %20 = load float*, float** %b.addr, align 8, !dbg !5085
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !5085
  %21 = load float, float* %arrayidx15, align 4, !dbg !5085
  %mul16 = fmul float %19, %21, !dbg !5086
  %22 = load float*, float** %a.addr, align 8, !dbg !5087
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !5087
  %23 = load float, float* %arrayidx17, align 4, !dbg !5087
  %24 = load float*, float** %b.addr, align 8, !dbg !5088
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !5088
  %25 = load float, float* %arrayidx18, align 4, !dbg !5088
  %mul19 = fmul float %23, %25, !dbg !5089
  %sub20 = fsub float %mul16, %mul19, !dbg !5090
  %26 = load float*, float** %r.addr, align 8, !dbg !5091
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !5091
  store float %sub20, float* %arrayidx21, align 4, !dbg !5092
  ret void, !dbg !5093
}

declare dso_local void @mat3_to_quat_is_ok(float*, [3 x float]*) #2

declare dso_local void @copy_qt_qt(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !5094 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5097, metadata !DIExpression()), !dbg !5098
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5099, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.declare(metadata float* %d, metadata !5101, metadata !DIExpression()), !dbg !5102
  %0 = load float*, float** %a.addr, align 8, !dbg !5103
  %1 = load float*, float** %a.addr, align 8, !dbg !5104
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !5105
  store float %call, float* %d, align 4, !dbg !5102
  %2 = load float, float* %d, align 4, !dbg !5106
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !5108
  br i1 %cmp, label %if.then, label %if.else, !dbg !5109

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !5110
  %call1 = call float @sqrtf(float %3) #5, !dbg !5112
  store float %call1, float* %d, align 4, !dbg !5113
  %4 = load float*, float** %r.addr, align 8, !dbg !5114
  %5 = load float*, float** %a.addr, align 8, !dbg !5115
  %6 = load float, float* %d, align 4, !dbg !5116
  %div = fdiv float 1.000000e+00, %6, !dbg !5117
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !5118
  br label %if.end, !dbg !5119

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !5120
  call void @zero_v3(float* %7), !dbg !5122
  store float 0.000000e+00, float* %d, align 4, !dbg !5123
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !5124
  ret float %8, !dbg !5125
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !5126 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5127, metadata !DIExpression()), !dbg !5128
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5129, metadata !DIExpression()), !dbg !5130
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5131, metadata !DIExpression()), !dbg !5132
  %0 = load float*, float** %a.addr, align 8, !dbg !5133
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5133
  %1 = load float, float* %arrayidx, align 4, !dbg !5133
  %2 = load float, float* %f.addr, align 4, !dbg !5134
  %mul = fmul float %1, %2, !dbg !5135
  %3 = load float*, float** %r.addr, align 8, !dbg !5136
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !5136
  store float %mul, float* %arrayidx1, align 4, !dbg !5137
  %4 = load float*, float** %a.addr, align 8, !dbg !5138
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5138
  %5 = load float, float* %arrayidx2, align 4, !dbg !5138
  %6 = load float, float* %f.addr, align 4, !dbg !5139
  %mul3 = fmul float %5, %6, !dbg !5140
  %7 = load float*, float** %r.addr, align 8, !dbg !5141
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5141
  store float %mul3, float* %arrayidx4, align 4, !dbg !5142
  %8 = load float*, float** %a.addr, align 8, !dbg !5143
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5143
  %9 = load float, float* %arrayidx5, align 4, !dbg !5143
  %10 = load float, float* %f.addr, align 4, !dbg !5144
  %mul6 = fmul float %9, %10, !dbg !5145
  %11 = load float*, float** %r.addr, align 8, !dbg !5146
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !5146
  store float %mul6, float* %arrayidx7, align 4, !dbg !5147
  ret void, !dbg !5148
}

declare dso_local void @unit_qt(float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3(float* %r) #0 !dbg !5149 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5150, metadata !DIExpression()), !dbg !5151
  %0 = load float*, float** %r.addr, align 8, !dbg !5152
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5152
  %1 = load float, float* %arrayidx, align 4, !dbg !5152
  %fneg = fneg float %1, !dbg !5153
  %2 = load float*, float** %r.addr, align 8, !dbg !5154
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5154
  store float %fneg, float* %arrayidx1, align 4, !dbg !5155
  %3 = load float*, float** %r.addr, align 8, !dbg !5156
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5156
  %4 = load float, float* %arrayidx2, align 4, !dbg !5156
  %fneg3 = fneg float %4, !dbg !5157
  %5 = load float*, float** %r.addr, align 8, !dbg !5158
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !5158
  store float %fneg3, float* %arrayidx4, align 4, !dbg !5159
  %6 = load float*, float** %r.addr, align 8, !dbg !5160
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !5160
  %7 = load float, float* %arrayidx5, align 4, !dbg !5160
  %fneg6 = fneg float %7, !dbg !5161
  %8 = load float*, float** %r.addr, align 8, !dbg !5162
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !5162
  store float %fneg6, float* %arrayidx7, align 4, !dbg !5163
  ret void, !dbg !5164
}

declare dso_local void @vec_to_quat(float*, float*, i16 signext, i16 signext) #2

declare dso_local void @interp_qt_qtqt(float*, float*, float*, float) #2

declare dso_local void @invert_qt_qt(float*, float*) #2

declare dso_local void @mul_qt_v3(float*, float*) #2

declare dso_local void @mat3_to_quat(float*, [3 x float]*) #2

declare dso_local void @axis_angle_to_quat(float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @get_angular_velocity_vector(i16 signext %avemode, %struct.ParticleKey* %state, float* %vec) #0 !dbg !5165 {
entry:
  %avemode.addr = alloca i16, align 2
  %state.addr = alloca %struct.ParticleKey*, align 8
  %vec.addr = alloca float*, align 8
  %zvec = alloca [3 x float], align 4
  %zvec8 = alloca [3 x float], align 4
  %temp = alloca [3 x float], align 4
  store i16 %avemode, i16* %avemode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %avemode.addr, metadata !5168, metadata !DIExpression()), !dbg !5169
  store %struct.ParticleKey* %state, %struct.ParticleKey** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleKey** %state.addr, metadata !5170, metadata !DIExpression()), !dbg !5171
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !5172, metadata !DIExpression()), !dbg !5173
  %0 = load i16, i16* %avemode.addr, align 2, !dbg !5174
  %conv = sext i16 %0 to i32, !dbg !5174
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb1
    i32 4, label %sw.bb7
    i32 5, label %sw.bb19
    i32 6, label %sw.bb23
    i32 7, label %sw.bb27
  ], !dbg !5175

sw.bb:                                            ; preds = %entry
  %1 = load float*, float** %vec.addr, align 8, !dbg !5176
  %2 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !5178
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %2, i32 0, i32 1, !dbg !5179
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !5178
  call void @copy_v3_v3(float* %1, float* %arraydecay), !dbg !5180
  br label %sw.epilog, !dbg !5181

sw.bb1:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %zvec, metadata !5182, metadata !DIExpression()), !dbg !5184
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %zvec, i64 0, i64 1, !dbg !5185
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5186
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %zvec, i64 0, i64 0, !dbg !5187
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !5188
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %zvec, i64 0, i64 2, !dbg !5189
  store float 1.000000e+00, float* %arrayidx3, align 4, !dbg !5190
  %3 = load float*, float** %vec.addr, align 8, !dbg !5191
  %4 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !5192
  %vel4 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %4, i32 0, i32 1, !dbg !5193
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %vel4, i64 0, i64 0, !dbg !5192
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %zvec, i64 0, i64 0, !dbg !5194
  call void @cross_v3_v3v3(float* %3, float* %arraydecay5, float* %arraydecay6), !dbg !5195
  br label %sw.epilog, !dbg !5196

sw.bb7:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %zvec8, metadata !5197, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.declare(metadata [3 x float]* %temp, metadata !5200, metadata !DIExpression()), !dbg !5201
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %zvec8, i64 0, i64 1, !dbg !5202
  store float 0.000000e+00, float* %arrayidx9, align 4, !dbg !5203
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %zvec8, i64 0, i64 0, !dbg !5204
  store float 0.000000e+00, float* %arrayidx10, align 4, !dbg !5205
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %zvec8, i64 0, i64 2, !dbg !5206
  store float 1.000000e+00, float* %arrayidx11, align 4, !dbg !5207
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !5208
  %5 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !5209
  %vel13 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %5, i32 0, i32 1, !dbg !5210
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %vel13, i64 0, i64 0, !dbg !5209
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %zvec8, i64 0, i64 0, !dbg !5211
  call void @cross_v3_v3v3(float* %arraydecay12, float* %arraydecay14, float* %arraydecay15), !dbg !5212
  %6 = load float*, float** %vec.addr, align 8, !dbg !5213
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !5214
  %7 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !5215
  %vel17 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %7, i32 0, i32 1, !dbg !5216
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %vel17, i64 0, i64 0, !dbg !5215
  call void @cross_v3_v3v3(float* %6, float* %arraydecay16, float* %arraydecay18), !dbg !5217
  br label %sw.epilog, !dbg !5218

sw.bb19:                                          ; preds = %entry
  %8 = load float*, float** %vec.addr, align 8, !dbg !5219
  %arrayidx20 = getelementptr inbounds float, float* %8, i64 0, !dbg !5219
  store float 1.000000e+00, float* %arrayidx20, align 4, !dbg !5220
  %9 = load float*, float** %vec.addr, align 8, !dbg !5221
  %arrayidx21 = getelementptr inbounds float, float* %9, i64 2, !dbg !5221
  store float 0.000000e+00, float* %arrayidx21, align 4, !dbg !5222
  %10 = load float*, float** %vec.addr, align 8, !dbg !5223
  %arrayidx22 = getelementptr inbounds float, float* %10, i64 1, !dbg !5223
  store float 0.000000e+00, float* %arrayidx22, align 4, !dbg !5224
  br label %sw.epilog, !dbg !5225

sw.bb23:                                          ; preds = %entry
  %11 = load float*, float** %vec.addr, align 8, !dbg !5226
  %arrayidx24 = getelementptr inbounds float, float* %11, i64 1, !dbg !5226
  store float 1.000000e+00, float* %arrayidx24, align 4, !dbg !5227
  %12 = load float*, float** %vec.addr, align 8, !dbg !5228
  %arrayidx25 = getelementptr inbounds float, float* %12, i64 2, !dbg !5228
  store float 0.000000e+00, float* %arrayidx25, align 4, !dbg !5229
  %13 = load float*, float** %vec.addr, align 8, !dbg !5230
  %arrayidx26 = getelementptr inbounds float, float* %13, i64 0, !dbg !5230
  store float 0.000000e+00, float* %arrayidx26, align 4, !dbg !5231
  br label %sw.epilog, !dbg !5232

sw.bb27:                                          ; preds = %entry
  %14 = load float*, float** %vec.addr, align 8, !dbg !5233
  %arrayidx28 = getelementptr inbounds float, float* %14, i64 2, !dbg !5233
  store float 1.000000e+00, float* %arrayidx28, align 4, !dbg !5234
  %15 = load float*, float** %vec.addr, align 8, !dbg !5235
  %arrayidx29 = getelementptr inbounds float, float* %15, i64 1, !dbg !5235
  store float 0.000000e+00, float* %arrayidx29, align 4, !dbg !5236
  %16 = load float*, float** %vec.addr, align 8, !dbg !5237
  %arrayidx30 = getelementptr inbounds float, float* %16, i64 0, !dbg !5237
  store float 0.000000e+00, float* %arrayidx30, align 4, !dbg !5238
  br label %sw.epilog, !dbg !5239

sw.epilog:                                        ; preds = %entry, %sw.bb27, %sw.bb23, %sw.bb19, %sw.bb7, %sw.bb1, %sw.bb
  ret void, !dbg !5240
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @reset_particle(%struct.ParticleSimulationData* %sim, %struct.ParticleData* %pa, float %dtime, float %cfra) #0 !dbg !5241 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %pa.addr = alloca %struct.ParticleData*, align 8
  %dtime.addr = alloca float, align 4
  %cfra.addr = alloca float, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %ptex = alloca %struct.ParticleTexture, align 4
  %p = alloca i32, align 4
  %bpa = alloca %struct.BoidParticle*, align 8
  %dietime104 = alloca float, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !5244, metadata !DIExpression()), !dbg !5245
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !5246, metadata !DIExpression()), !dbg !5247
  store float %dtime, float* %dtime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dtime.addr, metadata !5248, metadata !DIExpression()), !dbg !5249
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !5250, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !5252, metadata !DIExpression()), !dbg !5253
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5254
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !5255
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !5255
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !5253
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata %struct.ParticleTexture* %ptex, metadata !5258, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.declare(metadata i32* %p, metadata !5260, metadata !DIExpression()), !dbg !5261
  %2 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5262
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5263
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 3, !dbg !5264
  %4 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !5264
  %sub.ptr.lhs.cast = ptrtoint %struct.ParticleData* %2 to i64, !dbg !5265
  %sub.ptr.rhs.cast = ptrtoint %struct.ParticleData* %4 to i64, !dbg !5265
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5265
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 200, !dbg !5265
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !5262
  store i32 %conv, i32* %p, align 4, !dbg !5261
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5266
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 2, !dbg !5267
  %6 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !5267
  store %struct.ParticleSettings* %6, %struct.ParticleSettings** %part, align 8, !dbg !5268
  %7 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5269
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %7, i32 0, i32 7, !dbg !5271
  %8 = load i16, i16* %type, align 8, !dbg !5271
  %conv3 = sext i16 %8 to i32, !dbg !5269
  %cmp = icmp ne i32 %conv3, 2, !dbg !5272
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5273

land.lhs.true:                                    ; preds = %entry
  %9 = load float, float* %dtime.addr, align 4, !dbg !5274
  %cmp5 = fcmp ogt float %9, 0.000000e+00, !dbg !5275
  br i1 %cmp5, label %land.lhs.true7, label %if.end, !dbg !5276

land.lhs.true7:                                   ; preds = %land.lhs.true
  %10 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5277
  %time = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %10, i32 0, i32 6, !dbg !5278
  %11 = load float, float* %time, align 4, !dbg !5278
  %12 = load float, float* %cfra.addr, align 4, !dbg !5279
  %cmp8 = fcmp olt float %11, %12, !dbg !5280
  br i1 %cmp8, label %land.lhs.true10, label %if.end, !dbg !5281

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %13 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5282
  %time11 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %13, i32 0, i32 6, !dbg !5283
  %14 = load float, float* %time11, align 4, !dbg !5283
  %15 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5284
  %psys12 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %15, i32 0, i32 2, !dbg !5285
  %16 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys12, align 8, !dbg !5285
  %cfra13 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %16, i32 0, i32 20, !dbg !5286
  %17 = load float, float* %cfra13, align 8, !dbg !5286
  %cmp14 = fcmp oge float %14, %17, !dbg !5287
  br i1 %cmp14, label %if.then, label %if.end, !dbg !5288

if.then:                                          ; preds = %land.lhs.true10
  %18 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5289
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %18, i32 0, i32 0, !dbg !5291
  %19 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5291
  %20 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5292
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %20, i32 0, i32 1, !dbg !5293
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5293
  %22 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5294
  %time16 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %22, i32 0, i32 6, !dbg !5295
  %23 = load float, float* %time16, align 4, !dbg !5295
  call void @evaluate_emitter_anim(%struct.Scene* %19, %struct.Object* %21, float %23), !dbg !5296
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5297
  %flag = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %24, i32 0, i32 25, !dbg !5298
  %25 = load i32, i32* %flag, align 4, !dbg !5299
  %or = or i32 %25, 16384, !dbg !5299
  store i32 %or, i32* %flag, align 4, !dbg !5299
  br label %if.end, !dbg !5300

if.end:                                           ; preds = %if.then, %land.lhs.true10, %land.lhs.true7, %land.lhs.true, %entry
  %26 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5301
  %27 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5302
  %28 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5303
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %28, i32 0, i32 0, !dbg !5304
  %29 = load float, float* %dtime.addr, align 4, !dbg !5305
  %30 = load float, float* %cfra.addr, align 4, !dbg !5306
  call void @psys_get_birth_coordinates(%struct.ParticleSimulationData* %26, %struct.ParticleData* %27, %struct.ParticleKey* %state, float %29, float %30), !dbg !5307
  %31 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5308
  %32 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5309
  %33 = load i32, i32* %p, align 4, !dbg !5310
  call void @initialize_particle_texture(%struct.ParticleSimulationData* %31, %struct.ParticleData* %32, i32 %33), !dbg !5311
  %34 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5312
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %34, i32 0, i32 11, !dbg !5314
  %35 = load i16, i16* %phystype, align 8, !dbg !5314
  %conv17 = sext i16 %35 to i32, !dbg !5312
  %cmp18 = icmp eq i32 %conv17, 3, !dbg !5315
  br i1 %cmp18, label %land.lhs.true20, label %if.end58, !dbg !5316

land.lhs.true20:                                  ; preds = %if.end
  %36 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5317
  %boid = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %36, i32 0, i32 4, !dbg !5318
  %37 = load %struct.BoidParticle*, %struct.BoidParticle** %boid, align 8, !dbg !5318
  %tobool = icmp ne %struct.BoidParticle* %37, null, !dbg !5317
  br i1 %tobool, label %if.then21, label %if.end58, !dbg !5319

if.then21:                                        ; preds = %land.lhs.true20
  call void @llvm.dbg.declare(metadata %struct.BoidParticle** %bpa, metadata !5320, metadata !DIExpression()), !dbg !5322
  %38 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5323
  %boid22 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %38, i32 0, i32 4, !dbg !5324
  %39 = load %struct.BoidParticle*, %struct.BoidParticle** %boid22, align 8, !dbg !5324
  store %struct.BoidParticle* %39, %struct.BoidParticle** %bpa, align 8, !dbg !5322
  %40 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !5325
  %gravity = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %40, i32 0, i32 2, !dbg !5326
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %gravity, i64 0, i64 1, !dbg !5325
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5327
  %41 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !5328
  %gravity23 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %41, i32 0, i32 2, !dbg !5329
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %gravity23, i64 0, i64 0, !dbg !5328
  store float 0.000000e+00, float* %arrayidx24, align 4, !dbg !5330
  %42 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !5331
  %gravity25 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %42, i32 0, i32 2, !dbg !5332
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %gravity25, i64 0, i64 2, !dbg !5331
  store float -1.000000e+00, float* %arrayidx26, align 4, !dbg !5333
  %43 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5334
  %scene27 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %43, i32 0, i32 0, !dbg !5336
  %44 = load %struct.Scene*, %struct.Scene** %scene27, align 8, !dbg !5336
  %physics_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %44, i32 0, i32 40, !dbg !5337
  %flag28 = getelementptr inbounds %struct.PhysicsSettings, %struct.PhysicsSettings* %physics_settings, i32 0, i32 1, !dbg !5338
  %45 = load i32, i32* %flag28, align 4, !dbg !5338
  %and = and i32 %45, 1, !dbg !5339
  %tobool29 = icmp ne i32 %and, 0, !dbg !5339
  br i1 %tobool29, label %land.lhs.true30, label %if.end44, !dbg !5340

land.lhs.true30:                                  ; preds = %if.then21
  %46 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5341
  %scene31 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %46, i32 0, i32 0, !dbg !5342
  %47 = load %struct.Scene*, %struct.Scene** %scene31, align 8, !dbg !5342
  %physics_settings32 = getelementptr inbounds %struct.Scene, %struct.Scene* %47, i32 0, i32 40, !dbg !5343
  %gravity33 = getelementptr inbounds %struct.PhysicsSettings, %struct.PhysicsSettings* %physics_settings32, i32 0, i32 0, !dbg !5344
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %gravity33, i64 0, i64 2, !dbg !5341
  %48 = load float, float* %arrayidx34, align 8, !dbg !5341
  %cmp35 = fcmp une float %48, 0.000000e+00, !dbg !5345
  br i1 %cmp35, label %if.then37, label %if.end44, !dbg !5346

if.then37:                                        ; preds = %land.lhs.true30
  %49 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5347
  %scene38 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %49, i32 0, i32 0, !dbg !5349
  %50 = load %struct.Scene*, %struct.Scene** %scene38, align 8, !dbg !5349
  %physics_settings39 = getelementptr inbounds %struct.Scene, %struct.Scene* %50, i32 0, i32 40, !dbg !5350
  %gravity40 = getelementptr inbounds %struct.PhysicsSettings, %struct.PhysicsSettings* %physics_settings39, i32 0, i32 0, !dbg !5351
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %gravity40, i64 0, i64 2, !dbg !5347
  %51 = load float, float* %arrayidx41, align 8, !dbg !5347
  %52 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !5352
  %gravity42 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %52, i32 0, i32 2, !dbg !5353
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %gravity42, i64 0, i64 2, !dbg !5352
  store float %51, float* %arrayidx43, align 4, !dbg !5354
  br label %if.end44, !dbg !5355

if.end44:                                         ; preds = %if.then37, %land.lhs.true30, %if.then21
  %53 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5356
  %boids = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %53, i32 0, i32 2, !dbg !5357
  %54 = load %struct.BoidSettings*, %struct.BoidSettings** %boids, align 8, !dbg !5357
  %health = getelementptr inbounds %struct.BoidSettings, %struct.BoidSettings* %54, i32 0, i32 6, !dbg !5358
  %55 = load float, float* %health, align 8, !dbg !5358
  %56 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !5359
  %data = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %56, i32 0, i32 1, !dbg !5360
  %health45 = getelementptr inbounds %struct.BoidData, %struct.BoidData* %data, i32 0, i32 0, !dbg !5361
  store float %55, float* %health45, align 8, !dbg !5362
  %57 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !5363
  %data46 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %57, i32 0, i32 1, !dbg !5364
  %mode = getelementptr inbounds %struct.BoidData, %struct.BoidData* %data46, i32 0, i32 3, !dbg !5365
  store i16 0, i16* %mode, align 2, !dbg !5366
  %58 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5367
  %boids47 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %58, i32 0, i32 2, !dbg !5368
  %59 = load %struct.BoidSettings*, %struct.BoidSettings** %boids47, align 8, !dbg !5368
  %states = getelementptr inbounds %struct.BoidSettings, %struct.BoidSettings* %59, i32 0, i32 22, !dbg !5369
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %states, i32 0, i32 0, !dbg !5370
  %60 = load i8*, i8** %first, align 8, !dbg !5370
  %61 = bitcast i8* %60 to %struct.BoidState*, !dbg !5371
  %id = getelementptr inbounds %struct.BoidState, %struct.BoidState* %61, i32 0, i32 6, !dbg !5372
  %62 = load i32, i32* %id, align 8, !dbg !5372
  %conv48 = trunc i32 %62 to i16, !dbg !5373
  %63 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !5374
  %data49 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %63, i32 0, i32 1, !dbg !5375
  %state_id = getelementptr inbounds %struct.BoidData, %struct.BoidData* %data49, i32 0, i32 2, !dbg !5376
  store i16 %conv48, i16* %state_id, align 8, !dbg !5377
  %64 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !5378
  %data50 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %64, i32 0, i32 1, !dbg !5379
  %acc = getelementptr inbounds %struct.BoidData, %struct.BoidData* %data50, i32 0, i32 1, !dbg !5380
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %acc, i64 0, i64 2, !dbg !5378
  store float 0.000000e+00, float* %arrayidx51, align 4, !dbg !5381
  %65 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !5382
  %data52 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %65, i32 0, i32 1, !dbg !5383
  %acc53 = getelementptr inbounds %struct.BoidData, %struct.BoidData* %data52, i32 0, i32 1, !dbg !5384
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %acc53, i64 0, i64 1, !dbg !5382
  store float 0.000000e+00, float* %arrayidx54, align 4, !dbg !5385
  %66 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !5386
  %data55 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %66, i32 0, i32 1, !dbg !5387
  %acc56 = getelementptr inbounds %struct.BoidData, %struct.BoidData* %data55, i32 0, i32 1, !dbg !5388
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %acc56, i64 0, i64 0, !dbg !5386
  store float 0.000000e+00, float* %arrayidx57, align 4, !dbg !5389
  br label %if.end58, !dbg !5390

if.end58:                                         ; preds = %if.end44, %land.lhs.true20, %if.end
  %67 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5391
  %type59 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %67, i32 0, i32 7, !dbg !5393
  %68 = load i16, i16* %type59, align 8, !dbg !5393
  %conv60 = sext i16 %68 to i32, !dbg !5391
  %cmp61 = icmp eq i32 %conv60, 2, !dbg !5394
  br i1 %cmp61, label %if.then63, label %if.else, !dbg !5395

if.then63:                                        ; preds = %if.end58
  %69 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5396
  %lifetime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %69, i32 0, i32 7, !dbg !5398
  store float 1.000000e+02, float* %lifetime, align 8, !dbg !5399
  br label %if.end85, !dbg !5400

if.else:                                          ; preds = %if.end58
  %70 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5401
  %lifetime64 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %70, i32 0, i32 55, !dbg !5403
  %71 = load float, float* %lifetime64, align 4, !dbg !5403
  %72 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5404
  %randlife = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %72, i32 0, i32 56, !dbg !5405
  %73 = load float, float* %randlife, align 8, !dbg !5405
  %74 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5406
  %75 = load i32, i32* %p, align 4, !dbg !5407
  %add = add nsw i32 %75, 21, !dbg !5408
  %call = call float @psys_frand(%struct.ParticleSystem* %74, i32 %add), !dbg !5409
  %mul = fmul float %73, %call, !dbg !5410
  %sub = fsub float 1.000000e+00, %mul, !dbg !5411
  %mul65 = fmul float %71, %sub, !dbg !5412
  %76 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5413
  %lifetime66 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %76, i32 0, i32 7, !dbg !5414
  store float %mul65, float* %lifetime66, align 8, !dbg !5415
  %77 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5416
  %time67 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %77, i32 0, i32 6, !dbg !5417
  %78 = load float, float* %time67, align 4, !dbg !5417
  %79 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5418
  %lifetime68 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %79, i32 0, i32 7, !dbg !5419
  %80 = load float, float* %lifetime68, align 8, !dbg !5419
  %add69 = fadd float %78, %80, !dbg !5420
  %81 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5421
  %dietime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %81, i32 0, i32 8, !dbg !5422
  store float %add69, float* %dietime, align 4, !dbg !5423
  %82 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5424
  %83 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5425
  %84 = load float, float* %cfra.addr, align 4, !dbg !5426
  call void @psys_get_texture(%struct.ParticleSimulationData* %82, %struct.ParticleData* %83, %struct.ParticleTexture* %ptex, i32 2, float %84), !dbg !5427
  %85 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5428
  %lifetime70 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %85, i32 0, i32 55, !dbg !5429
  %86 = load float, float* %lifetime70, align 4, !dbg !5429
  %life = getelementptr inbounds %struct.ParticleTexture, %struct.ParticleTexture* %ptex, i32 0, i32 2, !dbg !5430
  %87 = load float, float* %life, align 4, !dbg !5430
  %mul71 = fmul float %86, %87, !dbg !5431
  %88 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5432
  %lifetime72 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %88, i32 0, i32 7, !dbg !5433
  store float %mul71, float* %lifetime72, align 8, !dbg !5434
  %89 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5435
  %randlife73 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %89, i32 0, i32 56, !dbg !5437
  %90 = load float, float* %randlife73, align 8, !dbg !5437
  %cmp74 = fcmp une float %90, 0.000000e+00, !dbg !5438
  br i1 %cmp74, label %if.then76, label %if.end84, !dbg !5439

if.then76:                                        ; preds = %if.else
  %91 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5440
  %randlife77 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %91, i32 0, i32 56, !dbg !5441
  %92 = load float, float* %randlife77, align 8, !dbg !5441
  %93 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5442
  %94 = load i32, i32* %p, align 4, !dbg !5443
  %add78 = add nsw i32 %94, 21, !dbg !5444
  %call79 = call float @psys_frand(%struct.ParticleSystem* %93, i32 %add78), !dbg !5445
  %mul80 = fmul float %92, %call79, !dbg !5446
  %sub81 = fsub float 1.000000e+00, %mul80, !dbg !5447
  %95 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5448
  %lifetime82 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %95, i32 0, i32 7, !dbg !5449
  %96 = load float, float* %lifetime82, align 8, !dbg !5450
  %mul83 = fmul float %96, %sub81, !dbg !5450
  store float %mul83, float* %lifetime82, align 8, !dbg !5450
  br label %if.end84, !dbg !5448

if.end84:                                         ; preds = %if.then76, %if.else
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then63
  %97 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5451
  %time86 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %97, i32 0, i32 6, !dbg !5452
  %98 = load float, float* %time86, align 4, !dbg !5452
  %99 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5453
  %lifetime87 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %99, i32 0, i32 7, !dbg !5454
  %100 = load float, float* %lifetime87, align 8, !dbg !5454
  %add88 = fadd float %98, %100, !dbg !5455
  %101 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5456
  %dietime89 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %101, i32 0, i32 8, !dbg !5457
  store float %add88, float* %dietime89, align 4, !dbg !5458
  %102 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5459
  %psys90 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %102, i32 0, i32 2, !dbg !5461
  %103 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys90, align 8, !dbg !5461
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %103, i32 0, i32 40, !dbg !5462
  %104 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !5462
  %tobool91 = icmp ne %struct.PointCache* %104, null, !dbg !5459
  br i1 %tobool91, label %land.lhs.true92, label %if.end113, !dbg !5463

land.lhs.true92:                                  ; preds = %if.end85
  %105 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5464
  %psys93 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %105, i32 0, i32 2, !dbg !5465
  %106 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys93, align 8, !dbg !5465
  %pointcache94 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %106, i32 0, i32 40, !dbg !5466
  %107 = load %struct.PointCache*, %struct.PointCache** %pointcache94, align 8, !dbg !5466
  %flag95 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %107, i32 0, i32 2, !dbg !5467
  %108 = load i32, i32* %flag95, align 8, !dbg !5467
  %and96 = and i32 %108, 1, !dbg !5468
  %tobool97 = icmp ne i32 %and96, 0, !dbg !5468
  br i1 %tobool97, label %land.lhs.true98, label %if.end113, !dbg !5469

land.lhs.true98:                                  ; preds = %land.lhs.true92
  %109 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5470
  %psys99 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %109, i32 0, i32 2, !dbg !5471
  %110 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys99, align 8, !dbg !5471
  %pointcache100 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %110, i32 0, i32 40, !dbg !5472
  %111 = load %struct.PointCache*, %struct.PointCache** %pointcache100, align 8, !dbg !5472
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %111, i32 0, i32 20, !dbg !5473
  %first101 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mem_cache, i32 0, i32 0, !dbg !5474
  %112 = load i8*, i8** %first101, align 8, !dbg !5474
  %tobool102 = icmp ne i8* %112, null, !dbg !5470
  br i1 %tobool102, label %if.then103, label %if.end113, !dbg !5475

if.then103:                                       ; preds = %land.lhs.true98
  call void @llvm.dbg.declare(metadata float* %dietime104, metadata !5476, metadata !DIExpression()), !dbg !5478
  %113 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5479
  %psys105 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %113, i32 0, i32 2, !dbg !5480
  %114 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys105, align 8, !dbg !5480
  %pointcache106 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %114, i32 0, i32 40, !dbg !5481
  %115 = load %struct.PointCache*, %struct.PointCache** %pointcache106, align 8, !dbg !5481
  %116 = load i32, i32* %p, align 4, !dbg !5482
  %call107 = call float @psys_get_dietime_from_cache(%struct.PointCache* %115, i32 %116), !dbg !5483
  store float %call107, float* %dietime104, align 4, !dbg !5478
  %117 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5484
  %dietime108 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %117, i32 0, i32 8, !dbg !5484
  %118 = load float, float* %dietime108, align 4, !dbg !5484
  %119 = load float, float* %dietime104, align 4, !dbg !5484
  %cmp109 = fcmp olt float %118, %119, !dbg !5484
  br i1 %cmp109, label %cond.true, label %cond.false, !dbg !5484

cond.true:                                        ; preds = %if.then103
  %120 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5484
  %dietime111 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %120, i32 0, i32 8, !dbg !5484
  %121 = load float, float* %dietime111, align 4, !dbg !5484
  br label %cond.end, !dbg !5484

cond.false:                                       ; preds = %if.then103
  %122 = load float, float* %dietime104, align 4, !dbg !5484
  br label %cond.end, !dbg !5484

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %121, %cond.true ], [ %122, %cond.false ], !dbg !5484
  %123 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5485
  %dietime112 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %123, i32 0, i32 8, !dbg !5486
  store float %cond, float* %dietime112, align 4, !dbg !5487
  br label %if.end113, !dbg !5488

if.end113:                                        ; preds = %cond.end, %land.lhs.true98, %land.lhs.true92, %if.end85
  %124 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5489
  %time114 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %124, i32 0, i32 6, !dbg !5491
  %125 = load float, float* %time114, align 4, !dbg !5491
  %126 = load float, float* %cfra.addr, align 4, !dbg !5492
  %cmp115 = fcmp ogt float %125, %126, !dbg !5493
  br i1 %cmp115, label %if.then117, label %if.else118, !dbg !5494

if.then117:                                       ; preds = %if.end113
  %127 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5495
  %alive = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %127, i32 0, i32 18, !dbg !5496
  store i16 2, i16* %alive, align 2, !dbg !5497
  br label %if.end127, !dbg !5495

if.else118:                                       ; preds = %if.end113
  %128 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5498
  %dietime119 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %128, i32 0, i32 8, !dbg !5500
  %129 = load float, float* %dietime119, align 4, !dbg !5500
  %130 = load float, float* %cfra.addr, align 4, !dbg !5501
  %cmp120 = fcmp ole float %129, %130, !dbg !5502
  br i1 %cmp120, label %if.then122, label %if.else124, !dbg !5503

if.then122:                                       ; preds = %if.else118
  %131 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5504
  %alive123 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %131, i32 0, i32 18, !dbg !5505
  store i16 1, i16* %alive123, align 2, !dbg !5506
  br label %if.end126, !dbg !5504

if.else124:                                       ; preds = %if.else118
  %132 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5507
  %alive125 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %132, i32 0, i32 18, !dbg !5508
  store i16 3, i16* %alive125, align 2, !dbg !5509
  br label %if.end126

if.end126:                                        ; preds = %if.else124, %if.then122
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then117
  %133 = load float, float* %cfra.addr, align 4, !dbg !5510
  %134 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5511
  %state128 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %134, i32 0, i32 0, !dbg !5512
  %time129 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state128, i32 0, i32 4, !dbg !5513
  store float %133, float* %time129, align 4, !dbg !5514
  ret void, !dbg !5515
}

; Function Attrs: noinline nounwind uwtable
define internal void @evaluate_emitter_anim(%struct.Scene* %scene, %struct.Object* %ob, float %cfra) #0 !dbg !5516 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %cfra.addr = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5521, metadata !DIExpression()), !dbg !5522
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5523, metadata !DIExpression()), !dbg !5524
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !5525, metadata !DIExpression()), !dbg !5526
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5527
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 9, !dbg !5529
  %1 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !5529
  %tobool = icmp ne %struct.Object* %1, null, !dbg !5527
  br i1 %tobool, label %if.then, label %if.end, !dbg !5530

if.then:                                          ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5531
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5532
  %parent1 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 9, !dbg !5533
  %4 = load %struct.Object*, %struct.Object** %parent1, align 8, !dbg !5533
  %5 = load float, float* %cfra.addr, align 4, !dbg !5534
  call void @evaluate_emitter_anim(%struct.Scene* %2, %struct.Object* %4, float %5), !dbg !5535
  br label %if.end, !dbg !5535

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5536
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5537
  %id = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 0, !dbg !5538
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5539
  %adt = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 1, !dbg !5540
  %9 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !5540
  %10 = load float, float* %cfra.addr, align 4, !dbg !5541
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %6, %struct.ID* %id, %struct.AnimData* %9, float %10, i16 signext 2), !dbg !5542
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5543
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5544
  %13 = load float, float* %cfra.addr, align 4, !dbg !5545
  call void @BKE_object_where_is_calc_time(%struct.Scene* %11, %struct.Object* %12, float %13), !dbg !5546
  ret void, !dbg !5547
}

; Function Attrs: noinline nounwind uwtable
define internal void @initialize_particle_texture(%struct.ParticleSimulationData* %sim, %struct.ParticleData* %pa, i32 %p) #0 !dbg !5548 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %pa.addr = alloca %struct.ParticleData*, align 8
  %p.addr = alloca i32, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %ptex = alloca %struct.ParticleTexture, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !5551, metadata !DIExpression()), !dbg !5552
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !5553, metadata !DIExpression()), !dbg !5554
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !5555, metadata !DIExpression()), !dbg !5556
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !5557, metadata !DIExpression()), !dbg !5558
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5559
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !5560
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !5560
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !5558
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !5561, metadata !DIExpression()), !dbg !5562
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5563
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !5564
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !5564
  store %struct.ParticleSettings* %3, %struct.ParticleSettings** %part, align 8, !dbg !5562
  call void @llvm.dbg.declare(metadata %struct.ParticleTexture* %ptex, metadata !5565, metadata !DIExpression()), !dbg !5566
  %4 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5567
  %5 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5568
  call void @psys_get_texture(%struct.ParticleSimulationData* %4, %struct.ParticleData* %5, %struct.ParticleTexture* %ptex, i32 15, float 0.000000e+00), !dbg !5569
  %6 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5570
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %6, i32 0, i32 7, !dbg !5571
  %7 = load i16, i16* %type, align 8, !dbg !5571
  %conv = sext i16 %7 to i32, !dbg !5570
  switch i32 %conv, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb9
    i32 3, label %sw.bb22
  ], !dbg !5572

sw.bb:                                            ; preds = %entry
  %exist = getelementptr inbounds %struct.ParticleTexture, %struct.ParticleTexture* %ptex, i32 0, i32 3, !dbg !5573
  %8 = load float, float* %exist, align 4, !dbg !5573
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5576
  %10 = load i32, i32* %p.addr, align 4, !dbg !5577
  %add = add nsw i32 %10, 125, !dbg !5578
  %call = call float @psys_frand(%struct.ParticleSystem* %9, i32 %add), !dbg !5579
  %cmp = fcmp olt float %8, %call, !dbg !5580
  br i1 %cmp, label %if.then, label %if.end, !dbg !5581

if.then:                                          ; preds = %sw.bb
  %11 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5582
  %flag = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %11, i32 0, i32 17, !dbg !5583
  %12 = load i16, i16* %flag, align 4, !dbg !5584
  %conv4 = sext i16 %12 to i32, !dbg !5584
  %or = or i32 %conv4, 1, !dbg !5584
  %conv5 = trunc i32 %or to i16, !dbg !5584
  store i16 %conv5, i16* %flag, align 4, !dbg !5584
  br label %if.end, !dbg !5582

if.end:                                           ; preds = %if.then, %sw.bb
  %13 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5585
  %sta = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %13, i32 0, i32 53, !dbg !5586
  %14 = load float, float* %sta, align 4, !dbg !5586
  %15 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5587
  %end = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %15, i32 0, i32 54, !dbg !5588
  %16 = load float, float* %end, align 8, !dbg !5588
  %17 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5589
  %sta6 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %17, i32 0, i32 53, !dbg !5590
  %18 = load float, float* %sta6, align 4, !dbg !5590
  %sub = fsub float %16, %18, !dbg !5591
  %time = getelementptr inbounds %struct.ParticleTexture, %struct.ParticleTexture* %ptex, i32 0, i32 1, !dbg !5592
  %19 = load float, float* %time, align 4, !dbg !5592
  %mul = fmul float %sub, %19, !dbg !5593
  %add7 = fadd float %14, %mul, !dbg !5594
  %20 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5595
  %time8 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %20, i32 0, i32 6, !dbg !5596
  store float %add7, float* %time8, align 4, !dbg !5597
  br label %sw.epilog, !dbg !5598

sw.bb9:                                           ; preds = %entry
  %exist10 = getelementptr inbounds %struct.ParticleTexture, %struct.ParticleTexture* %ptex, i32 0, i32 3, !dbg !5599
  %21 = load float, float* %exist10, align 4, !dbg !5599
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5601
  %23 = load i32, i32* %p.addr, align 4, !dbg !5602
  %add11 = add nsw i32 %23, 125, !dbg !5603
  %call12 = call float @psys_frand(%struct.ParticleSystem* %22, i32 %add11), !dbg !5604
  %cmp13 = fcmp olt float %21, %call12, !dbg !5605
  br i1 %cmp13, label %if.then15, label %if.end20, !dbg !5606

if.then15:                                        ; preds = %sw.bb9
  %24 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5607
  %flag16 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %24, i32 0, i32 17, !dbg !5608
  %25 = load i16, i16* %flag16, align 4, !dbg !5609
  %conv17 = sext i16 %25 to i32, !dbg !5609
  %or18 = or i32 %conv17, 1, !dbg !5609
  %conv19 = trunc i32 %or18 to i16, !dbg !5609
  store i16 %conv19, i16* %flag16, align 4, !dbg !5609
  br label %if.end20, !dbg !5607

if.end20:                                         ; preds = %if.then15, %sw.bb9
  %26 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !5610
  %time21 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %26, i32 0, i32 6, !dbg !5611
  store float 0.000000e+00, float* %time21, align 4, !dbg !5612
  br label %sw.epilog, !dbg !5613

sw.bb22:                                          ; preds = %entry
  br label %sw.epilog, !dbg !5614

sw.epilog:                                        ; preds = %entry, %sw.bb22, %if.end20, %if.end
  ret void, !dbg !5615
}

declare dso_local float @psys_get_dietime_from_cache(%struct.PointCache*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.ParticleSystem* @psys_get_target_system(%struct.Object* %ob, %struct.ParticleTarget* %pt) #0 !dbg !5616 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %pt.addr = alloca %struct.ParticleTarget*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5632, metadata !DIExpression()), !dbg !5633
  store %struct.ParticleTarget* %pt, %struct.ParticleTarget** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleTarget** %pt.addr, metadata !5634, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !5636, metadata !DIExpression()), !dbg !5637
  store %struct.ParticleSystem* null, %struct.ParticleSystem** %psys, align 8, !dbg !5637
  %0 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt.addr, align 8, !dbg !5638
  %ob1 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %0, i32 0, i32 2, !dbg !5640
  %1 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !5640
  %cmp = icmp eq %struct.Object* %1, null, !dbg !5641
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5642

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt.addr, align 8, !dbg !5643
  %ob2 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %2, i32 0, i32 2, !dbg !5644
  %3 = load %struct.Object*, %struct.Object** %ob2, align 8, !dbg !5644
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5645
  %cmp3 = icmp eq %struct.Object* %3, %4, !dbg !5646
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5647

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5648
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 109, !dbg !5649
  %6 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt.addr, align 8, !dbg !5650
  %psys4 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %6, i32 0, i32 3, !dbg !5651
  %7 = load i32, i32* %psys4, align 8, !dbg !5651
  %sub = sub nsw i32 %7, 1, !dbg !5652
  %call = call i8* @BLI_findlink(%struct.ListBase* %particlesystem, i32 %sub), !dbg !5653
  %8 = bitcast i8* %call to %struct.ParticleSystem*, !dbg !5653
  store %struct.ParticleSystem* %8, %struct.ParticleSystem** %psys, align 8, !dbg !5654
  br label %if.end, !dbg !5655

if.else:                                          ; preds = %lor.lhs.false
  %9 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt.addr, align 8, !dbg !5656
  %ob5 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %9, i32 0, i32 2, !dbg !5657
  %10 = load %struct.Object*, %struct.Object** %ob5, align 8, !dbg !5657
  %particlesystem6 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 109, !dbg !5658
  %11 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt.addr, align 8, !dbg !5659
  %psys7 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %11, i32 0, i32 3, !dbg !5660
  %12 = load i32, i32* %psys7, align 8, !dbg !5660
  %sub8 = sub nsw i32 %12, 1, !dbg !5661
  %call9 = call i8* @BLI_findlink(%struct.ListBase* %particlesystem6, i32 %sub8), !dbg !5662
  %13 = bitcast i8* %call9 to %struct.ParticleSystem*, !dbg !5662
  store %struct.ParticleSystem* %13, %struct.ParticleSystem** %psys, align 8, !dbg !5663
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5664
  %tobool = icmp ne %struct.ParticleSystem* %14, null, !dbg !5664
  br i1 %tobool, label %if.then10, label %if.else12, !dbg !5666

if.then10:                                        ; preds = %if.end
  %15 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt.addr, align 8, !dbg !5667
  %flag = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %15, i32 0, i32 4, !dbg !5668
  %16 = load i16, i16* %flag, align 4, !dbg !5669
  %conv = sext i16 %16 to i32, !dbg !5669
  %or = or i32 %conv, 2, !dbg !5669
  %conv11 = trunc i32 %or to i16, !dbg !5669
  store i16 %conv11, i16* %flag, align 4, !dbg !5669
  br label %if.end16, !dbg !5667

if.else12:                                        ; preds = %if.end
  %17 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt.addr, align 8, !dbg !5670
  %flag13 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %17, i32 0, i32 4, !dbg !5671
  %18 = load i16, i16* %flag13, align 4, !dbg !5672
  %conv14 = sext i16 %18 to i32, !dbg !5672
  %and = and i32 %conv14, -3, !dbg !5672
  %conv15 = trunc i32 %and to i16, !dbg !5672
  store i16 %conv15, i16* %flag13, align 4, !dbg !5672
  br label %if.end16

if.end16:                                         ; preds = %if.else12, %if.then10
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5673
  ret %struct.ParticleSystem* %19, !dbg !5674
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_count_keyed_targets(%struct.ParticleSimulationData* %sim) #0 !dbg !5675 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %kpsys = alloca %struct.ParticleSystem*, align 8
  %pt = alloca %struct.ParticleTarget*, align 8
  %keys_valid = alloca i32, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !5678, metadata !DIExpression()), !dbg !5679
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !5680, metadata !DIExpression()), !dbg !5681
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5682
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !5683
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !5683
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !5681
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %kpsys, metadata !5684, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.declare(metadata %struct.ParticleTarget** %pt, metadata !5686, metadata !DIExpression()), !dbg !5687
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5688
  %targets = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 17, !dbg !5689
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !5690
  %3 = load i8*, i8** %first, align 8, !dbg !5690
  %4 = bitcast i8* %3 to %struct.ParticleTarget*, !dbg !5688
  store %struct.ParticleTarget* %4, %struct.ParticleTarget** %pt, align 8, !dbg !5687
  call void @llvm.dbg.declare(metadata i32* %keys_valid, metadata !5691, metadata !DIExpression()), !dbg !5692
  store i32 1, i32* %keys_valid, align 4, !dbg !5692
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5693
  %totkeyed = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 33, !dbg !5694
  store i16 0, i16* %totkeyed, align 8, !dbg !5695
  br label %for.cond, !dbg !5696

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !5697
  %tobool = icmp ne %struct.ParticleTarget* %6, null, !dbg !5700
  br i1 %tobool, label %for.body, label %for.end, !dbg !5700

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5701
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %7, i32 0, i32 1, !dbg !5703
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5703
  %9 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !5704
  %call = call %struct.ParticleSystem* @psys_get_target_system(%struct.Object* %8, %struct.ParticleTarget* %9), !dbg !5705
  store %struct.ParticleSystem* %call, %struct.ParticleSystem** %kpsys, align 8, !dbg !5706
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %kpsys, align 8, !dbg !5707
  %tobool2 = icmp ne %struct.ParticleSystem* %10, null, !dbg !5707
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !5709

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %kpsys, align 8, !dbg !5710
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 26, !dbg !5711
  %12 = load i32, i32* %totpart, align 8, !dbg !5711
  %tobool3 = icmp ne i32 %12, 0, !dbg !5710
  br i1 %tobool3, label %if.then, label %if.else, !dbg !5712

if.then:                                          ; preds = %land.lhs.true
  %13 = load i32, i32* %keys_valid, align 4, !dbg !5713
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5715
  %totkeyed4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 33, !dbg !5716
  %15 = load i16, i16* %totkeyed4, align 8, !dbg !5717
  %conv = sext i16 %15 to i32, !dbg !5717
  %add = add nsw i32 %conv, %13, !dbg !5717
  %conv5 = trunc i32 %add to i16, !dbg !5717
  store i16 %conv5, i16* %totkeyed4, align 8, !dbg !5717
  %16 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5718
  %flag = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %16, i32 0, i32 25, !dbg !5720
  %17 = load i32, i32* %flag, align 4, !dbg !5720
  %and = and i32 %17, 8, !dbg !5721
  %tobool6 = icmp ne i32 %and, 0, !dbg !5721
  br i1 %tobool6, label %land.lhs.true7, label %if.end, !dbg !5722

land.lhs.true7:                                   ; preds = %if.then
  %18 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !5723
  %duration = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %18, i32 0, i32 7, !dbg !5724
  %19 = load float, float* %duration, align 4, !dbg !5724
  %cmp = fcmp une float %19, 0.000000e+00, !dbg !5725
  br i1 %cmp, label %if.then9, label %if.end, !dbg !5726

if.then9:                                         ; preds = %land.lhs.true7
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5727
  %totkeyed10 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 33, !dbg !5728
  %21 = load i16, i16* %totkeyed10, align 8, !dbg !5729
  %conv11 = sext i16 %21 to i32, !dbg !5729
  %add12 = add nsw i32 %conv11, 1, !dbg !5729
  %conv13 = trunc i32 %add12 to i16, !dbg !5729
  store i16 %conv13, i16* %totkeyed10, align 8, !dbg !5729
  br label %if.end, !dbg !5727

if.end:                                           ; preds = %if.then9, %land.lhs.true7, %if.then
  br label %if.end14, !dbg !5730

if.else:                                          ; preds = %land.lhs.true, %for.body
  store i32 0, i32* %keys_valid, align 4, !dbg !5731
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.end
  br label %for.inc, !dbg !5733

for.inc:                                          ; preds = %if.end14
  %22 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !5734
  %next = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %22, i32 0, i32 0, !dbg !5735
  %23 = load %struct.ParticleTarget*, %struct.ParticleTarget** %next, align 8, !dbg !5735
  store %struct.ParticleTarget* %23, %struct.ParticleTarget** %pt, align 8, !dbg !5736
  br label %for.cond, !dbg !5737, !llvm.loop !5738

for.end:                                          ; preds = %for.cond
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5740
  %flag15 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %24, i32 0, i32 25, !dbg !5741
  %25 = load i32, i32* %flag15, align 4, !dbg !5741
  %and16 = and i32 %25, 8, !dbg !5742
  %tobool17 = icmp ne i32 %and16, 0, !dbg !5742
  br i1 %tobool17, label %cond.true, label %cond.false, !dbg !5740

cond.true:                                        ; preds = %for.end
  br label %cond.end, !dbg !5740

cond.false:                                       ; preds = %for.end
  %26 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5743
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %26, i32 0, i32 2, !dbg !5744
  %27 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5744
  %keyed_loops = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %27, i32 0, i32 120, !dbg !5745
  %28 = load i32, i32* %keyed_loops, align 4, !dbg !5745
  br label %cond.end, !dbg !5740

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %28, %cond.false ], !dbg !5740
  %29 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5746
  %totkeyed18 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %29, i32 0, i32 33, !dbg !5747
  %30 = load i16, i16* %totkeyed18, align 8, !dbg !5748
  %conv19 = sext i16 %30 to i32, !dbg !5748
  %mul = mul nsw i32 %conv19, %cond, !dbg !5748
  %conv20 = trunc i32 %mul to i16, !dbg !5748
  store i16 %conv20, i16* %totkeyed18, align 8, !dbg !5748
  ret void, !dbg !5749
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_make_temp_pointcache(%struct.Object* %ob, %struct.ParticleSystem* %psys) #0 !dbg !5750 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %cache = alloca %struct.PointCache*, align 8
  %pid = alloca %struct.PTCacheID, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5753, metadata !DIExpression()), !dbg !5754
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !5755, metadata !DIExpression()), !dbg !5756
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !5757, metadata !DIExpression()), !dbg !5760
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5761
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 40, !dbg !5762
  %1 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !5762
  store %struct.PointCache* %1, %struct.PointCache** %cache, align 8, !dbg !5760
  %2 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !5763
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %2, i32 0, i32 2, !dbg !5765
  %3 = load i32, i32* %flag, align 8, !dbg !5765
  %and = and i32 %3, 64, !dbg !5766
  %tobool = icmp ne i32 %and, 0, !dbg !5766
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5767

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !5768
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %4, i32 0, i32 20, !dbg !5769
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %mem_cache), !dbg !5770
  %conv = zext i8 %call to i32, !dbg !5770
  %tobool1 = icmp ne i32 %conv, 0, !dbg !5770
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5771

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.PTCacheID* %pid, metadata !5772, metadata !DIExpression()), !dbg !5774
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5775
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5776
  call void @BKE_ptcache_id_from_particles(%struct.PTCacheID* %pid, %struct.Object* %5, %struct.ParticleSystem* %6), !dbg !5777
  %7 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !5778
  %flag2 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %7, i32 0, i32 2, !dbg !5779
  %8 = load i32, i32* %flag2, align 8, !dbg !5780
  %and3 = and i32 %8, -65, !dbg !5780
  store i32 %and3, i32* %flag2, align 8, !dbg !5780
  call void @BKE_ptcache_disk_to_mem(%struct.PTCacheID* %pid), !dbg !5781
  %9 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !5782
  %flag4 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %9, i32 0, i32 2, !dbg !5783
  %10 = load i32, i32* %flag4, align 8, !dbg !5784
  %or = or i32 %10, 64, !dbg !5784
  store i32 %or, i32* %flag4, align 8, !dbg !5784
  br label %if.end, !dbg !5785

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5786
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !5787 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !5793, metadata !DIExpression()), !dbg !5794
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5795
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5796
  %1 = load i8*, i8** %first, align 8, !dbg !5796
  %cmp = icmp eq i8* %1, null, !dbg !5797
  %conv = zext i1 %cmp to i32, !dbg !5797
  %conv1 = trunc i32 %conv to i8, !dbg !5798
  ret i8 %conv1, !dbg !5799
}

declare dso_local void @BKE_ptcache_id_from_particles(%struct.PTCacheID*, %struct.Object*, %struct.ParticleSystem*) #2

declare dso_local void @BKE_ptcache_disk_to_mem(%struct.PTCacheID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_get_pointcache_start_end(%struct.Scene* %scene, %struct.ParticleSystem* %psys, i32* %sfra, i32* %efra) #0 !dbg !5800 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %sfra.addr = alloca i32*, align 8
  %efra.addr = alloca i32*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5803, metadata !DIExpression()), !dbg !5804
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !5805, metadata !DIExpression()), !dbg !5806
  store i32* %sfra, i32** %sfra.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %sfra.addr, metadata !5807, metadata !DIExpression()), !dbg !5808
  store i32* %efra, i32** %efra.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %efra.addr, metadata !5809, metadata !DIExpression()), !dbg !5810
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !5811, metadata !DIExpression()), !dbg !5812
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5813
  %part1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 2, !dbg !5814
  %1 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part1, align 8, !dbg !5814
  store %struct.ParticleSettings* %1, %struct.ParticleSettings** %part, align 8, !dbg !5812
  %2 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5815
  %sta = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %2, i32 0, i32 53, !dbg !5815
  %3 = load float, float* %sta, align 4, !dbg !5815
  %conv = fptosi float %3 to i32, !dbg !5815
  %cmp = icmp sgt i32 1, %conv, !dbg !5815
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5815

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !5815

cond.false:                                       ; preds = %entry
  %4 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5815
  %sta3 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %4, i32 0, i32 53, !dbg !5815
  %5 = load float, float* %sta3, align 4, !dbg !5815
  %conv4 = fptosi float %5 to i32, !dbg !5815
  br label %cond.end, !dbg !5815

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %conv4, %cond.false ], !dbg !5815
  %6 = load i32*, i32** %sfra.addr, align 8, !dbg !5816
  store i32 %cond, i32* %6, align 4, !dbg !5817
  %7 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5818
  %end = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %7, i32 0, i32 54, !dbg !5818
  %8 = load float, float* %end, align 8, !dbg !5818
  %9 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5818
  %lifetime = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %9, i32 0, i32 55, !dbg !5818
  %10 = load float, float* %lifetime, align 4, !dbg !5818
  %add = fadd float %8, %10, !dbg !5818
  %add5 = fadd float %add, 1.000000e+00, !dbg !5818
  %conv6 = fptosi float %add5 to i32, !dbg !5818
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5818
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 22, !dbg !5818
  %efra7 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 7, !dbg !5818
  %12 = load i32, i32* %efra7, align 8, !dbg !5818
  %cmp8 = icmp slt i32 %conv6, %12, !dbg !5818
  br i1 %cmp8, label %cond.true10, label %cond.false16, !dbg !5818

cond.true10:                                      ; preds = %cond.end
  %13 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5818
  %end11 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %13, i32 0, i32 54, !dbg !5818
  %14 = load float, float* %end11, align 8, !dbg !5818
  %15 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5818
  %lifetime12 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %15, i32 0, i32 55, !dbg !5818
  %16 = load float, float* %lifetime12, align 4, !dbg !5818
  %add13 = fadd float %14, %16, !dbg !5818
  %add14 = fadd float %add13, 1.000000e+00, !dbg !5818
  %conv15 = fptosi float %add14 to i32, !dbg !5818
  br label %cond.end19, !dbg !5818

cond.false16:                                     ; preds = %cond.end
  %17 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5818
  %r17 = getelementptr inbounds %struct.Scene, %struct.Scene* %17, i32 0, i32 22, !dbg !5818
  %efra18 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r17, i32 0, i32 7, !dbg !5818
  %18 = load i32, i32* %efra18, align 8, !dbg !5818
  br label %cond.end19, !dbg !5818

cond.end19:                                       ; preds = %cond.false16, %cond.true10
  %cond20 = phi i32 [ %conv15, %cond.true10 ], [ %18, %cond.false16 ], !dbg !5818
  %19 = load i32*, i32** %efra.addr, align 8, !dbg !5819
  store i32 %cond20, i32* %19, align 4, !dbg !5820
  ret void, !dbg !5821
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_update_particle_tree(%struct.ParticleSystem* %psys, float %cfra) #0 !dbg !5822 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %cfra.addr = alloca float, align 4
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %totpart = alloca i32, align 4
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !5825, metadata !DIExpression()), !dbg !5826
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !5827, metadata !DIExpression()), !dbg !5828
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5829
  %tobool = icmp ne %struct.ParticleSystem* %0, null, !dbg !5829
  br i1 %tobool, label %if.then, label %if.end44, !dbg !5831

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !5832, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.declare(metadata i32* %p, metadata !5835, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.declare(metadata i32* %totpart, metadata !5836, metadata !DIExpression()), !dbg !5837
  store i32 0, i32* %totpart, align 4, !dbg !5837
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5838
  %tree = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 46, !dbg !5840
  %2 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !5840
  %tobool1 = icmp ne %struct.KDTree* %2, null, !dbg !5838
  br i1 %tobool1, label %lor.lhs.false, label %if.then2, !dbg !5841

lor.lhs.false:                                    ; preds = %if.then
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5842
  %tree_frame = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 21, !dbg !5843
  %4 = load float, float* %tree_frame, align 4, !dbg !5843
  %5 = load float, float* %cfra.addr, align 4, !dbg !5844
  %cmp = fcmp une float %4, %5, !dbg !5845
  br i1 %cmp, label %if.then2, label %if.end43, !dbg !5846

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  store i32 0, i32* %p, align 4, !dbg !5847
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5847
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 3, !dbg !5847
  %7 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !5847
  store %struct.ParticleData* %7, %struct.ParticleData** %pa, align 8, !dbg !5847
  br label %for.cond, !dbg !5847

for.cond:                                         ; preds = %for.inc, %if.then2
  %8 = load i32, i32* %p, align 4, !dbg !5850
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5850
  %totpart3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 26, !dbg !5850
  %10 = load i32, i32* %totpart3, align 8, !dbg !5850
  %cmp4 = icmp slt i32 %8, %10, !dbg !5850
  br i1 %cmp4, label %for.body, label %for.end, !dbg !5847

for.body:                                         ; preds = %for.cond
  %11 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !5852
  %flag = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %11, i32 0, i32 17, !dbg !5852
  %12 = load i16, i16* %flag, align 4, !dbg !5852
  %conv = sext i16 %12 to i32, !dbg !5852
  %and = and i32 %conv, 3, !dbg !5852
  %tobool5 = icmp ne i32 %and, 0, !dbg !5852
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !5850

if.then6:                                         ; preds = %for.body
  %13 = load i32, i32* %totpart, align 4, !dbg !5854
  %inc = add nsw i32 %13, 1, !dbg !5854
  store i32 %inc, i32* %totpart, align 4, !dbg !5854
  br label %if.end, !dbg !5856

if.end:                                           ; preds = %if.then6, %for.body
  br label %for.inc, !dbg !5852

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %p, align 4, !dbg !5850
  %inc7 = add nsw i32 %14, 1, !dbg !5850
  store i32 %inc7, i32* %p, align 4, !dbg !5850
  %15 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !5850
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %15, i32 1, !dbg !5850
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !5850
  br label %for.cond, !dbg !5850, !llvm.loop !5857

for.end:                                          ; preds = %for.cond
  %16 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5859
  %tree8 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %16, i32 0, i32 46, !dbg !5860
  %17 = load %struct.KDTree*, %struct.KDTree** %tree8, align 8, !dbg !5860
  call void @BLI_kdtree_free(%struct.KDTree* %17), !dbg !5861
  %18 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5862
  %totpart9 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %18, i32 0, i32 26, !dbg !5863
  %19 = load i32, i32* %totpart9, align 8, !dbg !5863
  %call = call %struct.KDTree* @BLI_kdtree_new(i32 %19), !dbg !5864
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5865
  %tree10 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 46, !dbg !5866
  store %struct.KDTree* %call, %struct.KDTree** %tree10, align 8, !dbg !5867
  store i32 0, i32* %p, align 4, !dbg !5868
  %21 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5868
  %particles11 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %21, i32 0, i32 3, !dbg !5868
  %22 = load %struct.ParticleData*, %struct.ParticleData** %particles11, align 8, !dbg !5868
  store %struct.ParticleData* %22, %struct.ParticleData** %pa, align 8, !dbg !5868
  br label %for.cond12, !dbg !5868

for.cond12:                                       ; preds = %for.inc37, %for.end
  %23 = load i32, i32* %p, align 4, !dbg !5870
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5870
  %totpart13 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %24, i32 0, i32 26, !dbg !5870
  %25 = load i32, i32* %totpart13, align 8, !dbg !5870
  %cmp14 = icmp slt i32 %23, %25, !dbg !5870
  br i1 %cmp14, label %for.body16, label %for.end40, !dbg !5868

for.body16:                                       ; preds = %for.cond12
  %26 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !5872
  %flag17 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %26, i32 0, i32 17, !dbg !5872
  %27 = load i16, i16* %flag17, align 4, !dbg !5872
  %conv18 = sext i16 %27 to i32, !dbg !5872
  %and19 = and i32 %conv18, 3, !dbg !5872
  %tobool20 = icmp ne i32 %and19, 0, !dbg !5872
  br i1 %tobool20, label %if.end36, label %if.then21, !dbg !5870

if.then21:                                        ; preds = %for.body16
  %28 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !5874
  %alive = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %28, i32 0, i32 18, !dbg !5877
  %29 = load i16, i16* %alive, align 2, !dbg !5877
  %conv22 = sext i16 %29 to i32, !dbg !5874
  %cmp23 = icmp eq i32 %conv22, 3, !dbg !5878
  br i1 %cmp23, label %if.then25, label %if.end35, !dbg !5879

if.then25:                                        ; preds = %if.then21
  %30 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !5880
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %30, i32 0, i32 0, !dbg !5883
  %time = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 4, !dbg !5884
  %31 = load float, float* %time, align 4, !dbg !5884
  %32 = load float, float* %cfra.addr, align 4, !dbg !5885
  %cmp26 = fcmp oeq float %31, %32, !dbg !5886
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !5887

if.then28:                                        ; preds = %if.then25
  %33 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5888
  %tree29 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %33, i32 0, i32 46, !dbg !5889
  %34 = load %struct.KDTree*, %struct.KDTree** %tree29, align 8, !dbg !5889
  %35 = load i32, i32* %p, align 4, !dbg !5890
  %36 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !5891
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %36, i32 0, i32 1, !dbg !5892
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 0, !dbg !5893
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5891
  call void @BLI_kdtree_insert(%struct.KDTree* %34, i32 %35, float* %arraydecay), !dbg !5894
  br label %if.end34, !dbg !5894

if.else:                                          ; preds = %if.then25
  %37 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5895
  %tree30 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %37, i32 0, i32 46, !dbg !5896
  %38 = load %struct.KDTree*, %struct.KDTree** %tree30, align 8, !dbg !5896
  %39 = load i32, i32* %p, align 4, !dbg !5897
  %40 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !5898
  %state31 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %40, i32 0, i32 0, !dbg !5899
  %co32 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state31, i32 0, i32 0, !dbg !5900
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 0, !dbg !5898
  call void @BLI_kdtree_insert(%struct.KDTree* %38, i32 %39, float* %arraydecay33), !dbg !5901
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then28
  br label %if.end35, !dbg !5902

if.end35:                                         ; preds = %if.end34, %if.then21
  br label %if.end36, !dbg !5903

if.end36:                                         ; preds = %if.end35, %for.body16
  br label %for.inc37, !dbg !5872

for.inc37:                                        ; preds = %if.end36
  %41 = load i32, i32* %p, align 4, !dbg !5870
  %inc38 = add nsw i32 %41, 1, !dbg !5870
  store i32 %inc38, i32* %p, align 4, !dbg !5870
  %42 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !5870
  %incdec.ptr39 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %42, i32 1, !dbg !5870
  store %struct.ParticleData* %incdec.ptr39, %struct.ParticleData** %pa, align 8, !dbg !5870
  br label %for.cond12, !dbg !5870, !llvm.loop !5904

for.end40:                                        ; preds = %for.cond12
  %43 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5906
  %tree41 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %43, i32 0, i32 46, !dbg !5907
  %44 = load %struct.KDTree*, %struct.KDTree** %tree41, align 8, !dbg !5907
  call void @BLI_kdtree_balance(%struct.KDTree* %44), !dbg !5908
  %45 = load float, float* %cfra.addr, align 4, !dbg !5909
  %46 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !5910
  %tree_frame42 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %46, i32 0, i32 21, !dbg !5911
  store float %45, float* %tree_frame42, align 4, !dbg !5912
  br label %if.end43, !dbg !5913

if.end43:                                         ; preds = %for.end40, %lor.lhs.false
  br label %if.end44, !dbg !5914

if.end44:                                         ; preds = %if.end43, %entry
  ret void, !dbg !5915
}

declare dso_local %struct.KDTree* @BLI_kdtree_new(i32) #2

declare dso_local void @BLI_kdtree_insert(%struct.KDTree*, i32, float*) #2

declare dso_local void @BLI_kdtree_balance(%struct.KDTree*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_sph_init(%struct.ParticleSimulationData* %sim, %struct.SPHData* %sphdata) #0 !dbg !5916 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %sphdata.addr = alloca %struct.SPHData*, align 8
  %pt = alloca %struct.ParticleTarget*, align 8
  %i = alloca i32, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !5919, metadata !DIExpression()), !dbg !5920
  store %struct.SPHData* %sphdata, %struct.SPHData** %sphdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SPHData** %sphdata.addr, metadata !5921, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.declare(metadata %struct.ParticleTarget** %pt, metadata !5923, metadata !DIExpression()), !dbg !5924
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5925, metadata !DIExpression()), !dbg !5926
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5927
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !5928
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5928
  %2 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !5929
  %psys1 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %2, i32 0, i32 0, !dbg !5930
  %arrayidx = getelementptr inbounds [10 x %struct.ParticleSystem*], [10 x %struct.ParticleSystem*]* %psys1, i64 0, i64 0, !dbg !5929
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %arrayidx, align 8, !dbg !5931
  store i32 1, i32* %i, align 4, !dbg !5932
  %3 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5934
  %psys2 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %3, i32 0, i32 2, !dbg !5935
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys2, align 8, !dbg !5935
  %targets = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %4, i32 0, i32 17, !dbg !5936
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !5937
  %5 = load i8*, i8** %first, align 8, !dbg !5937
  %6 = bitcast i8* %5 to %struct.ParticleTarget*, !dbg !5934
  store %struct.ParticleTarget* %6, %struct.ParticleTarget** %pt, align 8, !dbg !5938
  br label %for.cond, !dbg !5939

for.cond:                                         ; preds = %cond.end8, %entry
  %7 = load i32, i32* %i, align 4, !dbg !5940
  %cmp = icmp slt i32 %7, 10, !dbg !5942
  br i1 %cmp, label %for.body, label %for.end, !dbg !5943

for.body:                                         ; preds = %for.cond
  %8 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !5944
  %tobool = icmp ne %struct.ParticleTarget* %8, null, !dbg !5944
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5944

cond.true:                                        ; preds = %for.body
  %9 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5945
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %9, i32 0, i32 1, !dbg !5946
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5946
  %11 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !5947
  %call = call %struct.ParticleSystem* @psys_get_target_system(%struct.Object* %10, %struct.ParticleTarget* %11), !dbg !5948
  br label %cond.end, !dbg !5944

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !5944

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ParticleSystem* [ %call, %cond.true ], [ null, %cond.false ], !dbg !5944
  %12 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !5949
  %psys3 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %12, i32 0, i32 0, !dbg !5950
  %13 = load i32, i32* %i, align 4, !dbg !5951
  %idxprom = sext i32 %13 to i64, !dbg !5949
  %arrayidx4 = getelementptr inbounds [10 x %struct.ParticleSystem*], [10 x %struct.ParticleSystem*]* %psys3, i64 0, i64 %idxprom, !dbg !5949
  store %struct.ParticleSystem* %cond, %struct.ParticleSystem** %arrayidx4, align 8, !dbg !5952
  br label %for.inc, !dbg !5949

for.inc:                                          ; preds = %cond.end
  %14 = load i32, i32* %i, align 4, !dbg !5953
  %inc = add nsw i32 %14, 1, !dbg !5953
  store i32 %inc, i32* %i, align 4, !dbg !5953
  %15 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !5954
  %tobool5 = icmp ne %struct.ParticleTarget* %15, null, !dbg !5954
  br i1 %tobool5, label %cond.true6, label %cond.false7, !dbg !5954

cond.true6:                                       ; preds = %for.inc
  %16 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !5955
  %next = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %16, i32 0, i32 0, !dbg !5956
  %17 = load %struct.ParticleTarget*, %struct.ParticleTarget** %next, align 8, !dbg !5956
  br label %cond.end8, !dbg !5954

cond.false7:                                      ; preds = %for.inc
  br label %cond.end8, !dbg !5954

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi %struct.ParticleTarget* [ %17, %cond.true6 ], [ null, %cond.false7 ], !dbg !5954
  store %struct.ParticleTarget* %cond9, %struct.ParticleTarget** %pt, align 8, !dbg !5957
  br label %for.cond, !dbg !5958, !llvm.loop !5959

for.end:                                          ; preds = %for.cond
  %18 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5961
  %call10 = call i32 @psys_uses_gravity(%struct.ParticleSimulationData* %18), !dbg !5963
  %tobool11 = icmp ne i32 %call10, 0, !dbg !5963
  br i1 %tobool11, label %if.then, label %if.else, !dbg !5964

if.then:                                          ; preds = %for.end
  %19 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5965
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %19, i32 0, i32 0, !dbg !5966
  %20 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5966
  %physics_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 40, !dbg !5967
  %gravity = getelementptr inbounds %struct.PhysicsSettings, %struct.PhysicsSettings* %physics_settings, i32 0, i32 0, !dbg !5968
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %gravity, i64 0, i64 0, !dbg !5965
  %21 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !5969
  %gravity12 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %21, i32 0, i32 4, !dbg !5970
  store float* %arraydecay, float** %gravity12, align 8, !dbg !5971
  br label %if.end, !dbg !5969

if.else:                                          ; preds = %for.end
  %22 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !5972
  %gravity13 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %22, i32 0, i32 4, !dbg !5973
  store float* null, float** %gravity13, align 8, !dbg !5974
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %23 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5975
  %psys14 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %23, i32 0, i32 2, !dbg !5976
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys14, align 8, !dbg !5976
  %call15 = call %struct.EdgeHash* @sph_springhash_build(%struct.ParticleSystem* %24), !dbg !5977
  %25 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !5978
  %eh = getelementptr inbounds %struct.SPHData, %struct.SPHData* %25, i32 0, i32 3, !dbg !5979
  store %struct.EdgeHash* %call15, %struct.EdgeHash** %eh, align 8, !dbg !5980
  %26 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !5981
  %pa = getelementptr inbounds %struct.SPHData, %struct.SPHData* %26, i32 0, i32 1, !dbg !5982
  store %struct.ParticleData* null, %struct.ParticleData** %pa, align 8, !dbg !5983
  %27 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !5984
  %mass = getelementptr inbounds %struct.SPHData, %struct.SPHData* %27, i32 0, i32 2, !dbg !5985
  store float 1.000000e+00, float* %mass, align 8, !dbg !5986
  %28 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !5987
  %psys16 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %28, i32 0, i32 2, !dbg !5989
  %29 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys16, align 8, !dbg !5989
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %29, i32 0, i32 2, !dbg !5990
  %30 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !5990
  %fluid = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %30, i32 0, i32 3, !dbg !5991
  %31 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !5991
  %solver = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %31, i32 0, i32 15, !dbg !5992
  %32 = load i16, i16* %solver, align 4, !dbg !5992
  %conv = sext i16 %32 to i32, !dbg !5987
  %cmp17 = icmp eq i32 %conv, 0, !dbg !5993
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !5994

if.then19:                                        ; preds = %if.end
  %33 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !5995
  %force_cb = getelementptr inbounds %struct.SPHData, %struct.SPHData* %33, i32 0, i32 9, !dbg !5997
  store void (i8*, %struct.ParticleKey*, float*, float*)* @sph_force_cb, void (i8*, %struct.ParticleKey*, float*, float*)** %force_cb, align 8, !dbg !5998
  %34 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !5999
  %density_cb = getelementptr inbounds %struct.SPHData, %struct.SPHData* %34, i32 0, i32 10, !dbg !6000
  store void (i8*, i32, float)* @sph_density_accum_cb, void (i8*, i32, float)** %density_cb, align 8, !dbg !6001
  %35 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !6002
  %hfac = getelementptr inbounds %struct.SPHData, %struct.SPHData* %35, i32 0, i32 5, !dbg !6003
  store float 1.000000e+00, float* %hfac, align 8, !dbg !6004
  br label %if.end24, !dbg !6005

if.else20:                                        ; preds = %if.end
  %36 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !6006
  %force_cb21 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %36, i32 0, i32 9, !dbg !6008
  store void (i8*, %struct.ParticleKey*, float*, float*)* @sphclassical_force_cb, void (i8*, %struct.ParticleKey*, float*, float*)** %force_cb21, align 8, !dbg !6009
  %37 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !6010
  %density_cb22 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %37, i32 0, i32 10, !dbg !6011
  store void (i8*, i32, float)* @sphclassical_density_accum_cb, void (i8*, i32, float)** %density_cb22, align 8, !dbg !6012
  %38 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !6013
  %hfac23 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %38, i32 0, i32 5, !dbg !6014
  store float 5.000000e-01, float* %hfac23, align 8, !dbg !6015
  br label %if.end24

if.end24:                                         ; preds = %if.else20, %if.then19
  ret void, !dbg !6016
}

declare dso_local i32 @psys_uses_gravity(%struct.ParticleSimulationData*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.EdgeHash* @sph_springhash_build(%struct.ParticleSystem* %psys) #0 !dbg !6017 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %springhash = alloca %struct.EdgeHash*, align 8
  %spring = alloca %struct.ParticleSpring*, align 8
  %i = alloca i32, align 4
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !6022, metadata !DIExpression()), !dbg !6023
  call void @llvm.dbg.declare(metadata %struct.EdgeHash** %springhash, metadata !6024, metadata !DIExpression()), !dbg !6025
  store %struct.EdgeHash* null, %struct.EdgeHash** %springhash, align 8, !dbg !6025
  call void @llvm.dbg.declare(metadata %struct.ParticleSpring** %spring, metadata !6026, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6028, metadata !DIExpression()), !dbg !6029
  store i32 0, i32* %i, align 4, !dbg !6029
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !6030
  %tot_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 44, !dbg !6031
  %1 = load i32, i32* %tot_fluidsprings, align 8, !dbg !6031
  %call = call %struct.EdgeHash* @BLI_edgehash_new_ex(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.sph_springhash_build, i64 0, i64 0), i32 %1), !dbg !6032
  store %struct.EdgeHash* %call, %struct.EdgeHash** %springhash, align 8, !dbg !6033
  store i32 0, i32* %i, align 4, !dbg !6034
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !6036
  %fluid_springs = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 43, !dbg !6037
  %3 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs, align 8, !dbg !6037
  store %struct.ParticleSpring* %3, %struct.ParticleSpring** %spring, align 8, !dbg !6038
  br label %for.cond, !dbg !6039

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !6040
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !6042
  %tot_fluidsprings1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 44, !dbg !6043
  %6 = load i32, i32* %tot_fluidsprings1, align 8, !dbg !6043
  %cmp = icmp slt i32 %4, %6, !dbg !6044
  br i1 %cmp, label %for.body, label %for.end, !dbg !6045

for.body:                                         ; preds = %for.cond
  %7 = load %struct.EdgeHash*, %struct.EdgeHash** %springhash, align 8, !dbg !6046
  %8 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring, align 8, !dbg !6047
  %particle_index = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %8, i32 0, i32 1, !dbg !6048
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %particle_index, i64 0, i64 0, !dbg !6047
  %9 = load i32, i32* %arrayidx, align 4, !dbg !6047
  %10 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring, align 8, !dbg !6049
  %particle_index2 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %10, i32 0, i32 1, !dbg !6050
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %particle_index2, i64 0, i64 1, !dbg !6049
  %11 = load i32, i32* %arrayidx3, align 4, !dbg !6049
  %12 = load i32, i32* %i, align 4, !dbg !6051
  %add = add nsw i32 %12, 1, !dbg !6051
  %conv = sext i32 %add to i64, !dbg !6051
  %13 = inttoptr i64 %conv to i8*, !dbg !6051
  call void @BLI_edgehash_insert(%struct.EdgeHash* %7, i32 %9, i32 %11, i8* %13), !dbg !6052
  br label %for.inc, !dbg !6052

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !6053
  %inc = add nsw i32 %14, 1, !dbg !6053
  store i32 %inc, i32* %i, align 4, !dbg !6053
  %15 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring, align 8, !dbg !6054
  %incdec.ptr = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %15, i32 1, !dbg !6054
  store %struct.ParticleSpring* %incdec.ptr, %struct.ParticleSpring** %spring, align 8, !dbg !6054
  br label %for.cond, !dbg !6055, !llvm.loop !6056

for.end:                                          ; preds = %for.cond
  %16 = load %struct.EdgeHash*, %struct.EdgeHash** %springhash, align 8, !dbg !6058
  ret %struct.EdgeHash* %16, !dbg !6059
}

; Function Attrs: noinline nounwind uwtable
define internal void @sph_force_cb(i8* %sphdata_v, %struct.ParticleKey* %state, float* %force, float* %UNUSED_impulse) #0 !dbg !6060 {
entry:
  %sphdata_v.addr = alloca i8*, align 8
  %state.addr = alloca %struct.ParticleKey*, align 8
  %force.addr = alloca float*, align 8
  %UNUSED_impulse.addr = alloca float*, align 8
  %sphdata = alloca %struct.SPHData*, align 8
  %psys = alloca %struct.ParticleSystem**, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %fluid = alloca %struct.SPHFluidSettings*, align 8
  %spring = alloca %struct.ParticleSpring*, align 8
  %pfr = alloca %struct.SPHRangeData, align 8
  %pfn = alloca %struct.SPHNeighbor*, align 8
  %gravity = alloca float*, align 8
  %springhash = alloca %struct.EdgeHash*, align 8
  %q = alloca float, align 4
  %u = alloca float, align 4
  %rij = alloca float, align 4
  %dv = alloca [3 x float], align 4
  %pressure = alloca float, align 4
  %near_pressure = alloca float, align 4
  %visc = alloca float, align 4
  %stiff_visc = alloca float, align 4
  %inv_mass = alloca float, align 4
  %spring_constant = alloca float, align 4
  %interaction_radius = alloca float, align 4
  %h = alloca float, align 4
  %rest_density = alloca float, align 4
  %rest_length = alloca float, align 4
  %stiffness = alloca float, align 4
  %stiffness_near_fac = alloca float, align 4
  %npa = alloca %struct.ParticleData*, align 8
  %vec = alloca [3 x float], align 4
  %vel = alloca [3 x float], align 4
  %co = alloca [3 x float], align 4
  %data = alloca [2 x float], align 4
  %density = alloca float, align 4
  %near_density = alloca float, align 4
  %i = alloca i32, align 4
  %spring_index = alloca i32, align 4
  %index = alloca i32, align 4
  %temp_spring = alloca %struct.ParticleSpring, align 4
  store i8* %sphdata_v, i8** %sphdata_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sphdata_v.addr, metadata !6061, metadata !DIExpression()), !dbg !6062
  store %struct.ParticleKey* %state, %struct.ParticleKey** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleKey** %state.addr, metadata !6063, metadata !DIExpression()), !dbg !6064
  store float* %force, float** %force.addr, align 8
  call void @llvm.dbg.declare(metadata float** %force.addr, metadata !6065, metadata !DIExpression()), !dbg !6066
  store float* %UNUSED_impulse, float** %UNUSED_impulse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_impulse.addr, metadata !6067, metadata !DIExpression()), !dbg !6068
  call void @llvm.dbg.declare(metadata %struct.SPHData** %sphdata, metadata !6069, metadata !DIExpression()), !dbg !6070
  %0 = load i8*, i8** %sphdata_v.addr, align 8, !dbg !6071
  %1 = bitcast i8* %0 to %struct.SPHData*, !dbg !6072
  store %struct.SPHData* %1, %struct.SPHData** %sphdata, align 8, !dbg !6070
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem*** %psys, metadata !6073, metadata !DIExpression()), !dbg !6075
  %2 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6076
  %psys1 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %2, i32 0, i32 0, !dbg !6077
  %arraydecay = getelementptr inbounds [10 x %struct.ParticleSystem*], [10 x %struct.ParticleSystem*]* %psys1, i64 0, i64 0, !dbg !6076
  store %struct.ParticleSystem** %arraydecay, %struct.ParticleSystem*** %psys, align 8, !dbg !6075
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !6078, metadata !DIExpression()), !dbg !6079
  %3 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6080
  %pa2 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %3, i32 0, i32 1, !dbg !6081
  %4 = load %struct.ParticleData*, %struct.ParticleData** %pa2, align 8, !dbg !6081
  store %struct.ParticleData* %4, %struct.ParticleData** %pa, align 8, !dbg !6079
  call void @llvm.dbg.declare(metadata %struct.SPHFluidSettings** %fluid, metadata !6082, metadata !DIExpression()), !dbg !6085
  %5 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !6086
  %arrayidx = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %5, i64 0, !dbg !6086
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx, align 8, !dbg !6086
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 2, !dbg !6087
  %7 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6087
  %fluid3 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %7, i32 0, i32 3, !dbg !6088
  %8 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid3, align 8, !dbg !6088
  store %struct.SPHFluidSettings* %8, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6085
  call void @llvm.dbg.declare(metadata %struct.ParticleSpring** %spring, metadata !6089, metadata !DIExpression()), !dbg !6090
  store %struct.ParticleSpring* null, %struct.ParticleSpring** %spring, align 8, !dbg !6090
  call void @llvm.dbg.declare(metadata %struct.SPHRangeData* %pfr, metadata !6091, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.declare(metadata %struct.SPHNeighbor** %pfn, metadata !6093, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.declare(metadata float** %gravity, metadata !6096, metadata !DIExpression()), !dbg !6097
  %9 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6098
  %gravity4 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %9, i32 0, i32 4, !dbg !6099
  %10 = load float*, float** %gravity4, align 8, !dbg !6099
  store float* %10, float** %gravity, align 8, !dbg !6097
  call void @llvm.dbg.declare(metadata %struct.EdgeHash** %springhash, metadata !6100, metadata !DIExpression()), !dbg !6101
  %11 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6102
  %eh = getelementptr inbounds %struct.SPHData, %struct.SPHData* %11, i32 0, i32 3, !dbg !6103
  %12 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !6103
  store %struct.EdgeHash* %12, %struct.EdgeHash** %springhash, align 8, !dbg !6101
  call void @llvm.dbg.declare(metadata float* %q, metadata !6104, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.declare(metadata float* %u, metadata !6106, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.declare(metadata float* %rij, metadata !6108, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.declare(metadata [3 x float]* %dv, metadata !6110, metadata !DIExpression()), !dbg !6111
  call void @llvm.dbg.declare(metadata float* %pressure, metadata !6112, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.declare(metadata float* %near_pressure, metadata !6114, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.declare(metadata float* %visc, metadata !6116, metadata !DIExpression()), !dbg !6117
  %13 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6118
  %viscosity_omega = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %13, i32 0, i32 7, !dbg !6119
  %14 = load float, float* %viscosity_omega, align 4, !dbg !6119
  store float %14, float* %visc, align 4, !dbg !6117
  call void @llvm.dbg.declare(metadata float* %stiff_visc, metadata !6120, metadata !DIExpression()), !dbg !6121
  %15 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6122
  %viscosity_beta = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %15, i32 0, i32 8, !dbg !6123
  %16 = load float, float* %viscosity_beta, align 4, !dbg !6123
  %17 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6124
  %flag = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %17, i32 0, i32 13, !dbg !6125
  %18 = load i32, i32* %flag, align 4, !dbg !6125
  %and = and i32 %18, 32, !dbg !6126
  %tobool = icmp ne i32 %and, 0, !dbg !6126
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6124

cond.true:                                        ; preds = %entry
  %19 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6127
  %viscosity_omega5 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %19, i32 0, i32 7, !dbg !6128
  %20 = load float, float* %viscosity_omega5, align 4, !dbg !6128
  br label %cond.end, !dbg !6124

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6124

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %20, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !6124
  %mul = fmul float %16, %cond, !dbg !6129
  store float %mul, float* %stiff_visc, align 4, !dbg !6121
  call void @llvm.dbg.declare(metadata float* %inv_mass, metadata !6130, metadata !DIExpression()), !dbg !6131
  %21 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6132
  %mass = getelementptr inbounds %struct.SPHData, %struct.SPHData* %21, i32 0, i32 2, !dbg !6133
  %22 = load float, float* %mass, align 8, !dbg !6133
  %div = fdiv float 1.000000e+00, %22, !dbg !6134
  store float %div, float* %inv_mass, align 4, !dbg !6131
  call void @llvm.dbg.declare(metadata float* %spring_constant, metadata !6135, metadata !DIExpression()), !dbg !6136
  %23 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6137
  %spring_k = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %23, i32 0, i32 1, !dbg !6138
  %24 = load float, float* %spring_k, align 4, !dbg !6138
  store float %24, float* %spring_constant, align 4, !dbg !6136
  call void @llvm.dbg.declare(metadata float* %interaction_radius, metadata !6139, metadata !DIExpression()), !dbg !6140
  %25 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6141
  %radius = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %25, i32 0, i32 0, !dbg !6142
  %26 = load float, float* %radius, align 4, !dbg !6142
  %27 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6143
  %flag6 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %27, i32 0, i32 13, !dbg !6144
  %28 = load i32, i32* %flag6, align 4, !dbg !6144
  %and7 = and i32 %28, 16, !dbg !6145
  %tobool8 = icmp ne i32 %and7, 0, !dbg !6145
  br i1 %tobool8, label %cond.true9, label %cond.false11, !dbg !6143

cond.true9:                                       ; preds = %cond.end
  %29 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6146
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %29, i32 0, i32 13, !dbg !6147
  %30 = load float, float* %size, align 4, !dbg !6147
  %mul10 = fmul float 4.000000e+00, %30, !dbg !6148
  br label %cond.end12, !dbg !6143

cond.false11:                                     ; preds = %cond.end
  br label %cond.end12, !dbg !6143

cond.end12:                                       ; preds = %cond.false11, %cond.true9
  %cond13 = phi float [ %mul10, %cond.true9 ], [ 1.000000e+00, %cond.false11 ], !dbg !6143
  %mul14 = fmul float %26, %cond13, !dbg !6149
  store float %mul14, float* %interaction_radius, align 4, !dbg !6140
  call void @llvm.dbg.declare(metadata float* %h, metadata !6150, metadata !DIExpression()), !dbg !6151
  %31 = load float, float* %interaction_radius, align 4, !dbg !6152
  %32 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6153
  %hfac = getelementptr inbounds %struct.SPHData, %struct.SPHData* %32, i32 0, i32 5, !dbg !6154
  %33 = load float, float* %hfac, align 8, !dbg !6154
  %mul15 = fmul float %31, %33, !dbg !6155
  store float %mul15, float* %h, align 4, !dbg !6151
  call void @llvm.dbg.declare(metadata float* %rest_density, metadata !6156, metadata !DIExpression()), !dbg !6157
  %34 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6158
  %rest_density16 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %34, i32 0, i32 11, !dbg !6159
  %35 = load float, float* %rest_density16, align 4, !dbg !6159
  %36 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6160
  %flag17 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %36, i32 0, i32 13, !dbg !6161
  %37 = load i32, i32* %flag17, align 4, !dbg !6161
  %and18 = and i32 %37, 8, !dbg !6162
  %tobool19 = icmp ne i32 %and18, 0, !dbg !6160
  %38 = zext i1 %tobool19 to i64, !dbg !6160
  %cond20 = select i1 %tobool19, float 0x4013147AE0000000, float 1.000000e+00, !dbg !6160
  %mul21 = fmul float %35, %cond20, !dbg !6163
  store float %mul21, float* %rest_density, align 4, !dbg !6157
  call void @llvm.dbg.declare(metadata float* %rest_length, metadata !6164, metadata !DIExpression()), !dbg !6165
  %39 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6166
  %rest_length22 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %39, i32 0, i32 2, !dbg !6167
  %40 = load float, float* %rest_length22, align 4, !dbg !6167
  %41 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6168
  %flag23 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %41, i32 0, i32 13, !dbg !6169
  %42 = load i32, i32* %flag23, align 4, !dbg !6169
  %and24 = and i32 %42, 64, !dbg !6170
  %tobool25 = icmp ne i32 %and24, 0, !dbg !6170
  br i1 %tobool25, label %cond.true26, label %cond.false29, !dbg !6168

cond.true26:                                      ; preds = %cond.end12
  %43 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6171
  %size27 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %43, i32 0, i32 13, !dbg !6172
  %44 = load float, float* %size27, align 4, !dbg !6172
  %mul28 = fmul float 0x4004B43960000000, %44, !dbg !6173
  br label %cond.end30, !dbg !6168

cond.false29:                                     ; preds = %cond.end12
  br label %cond.end30, !dbg !6168

cond.end30:                                       ; preds = %cond.false29, %cond.true26
  %cond31 = phi float [ %mul28, %cond.true26 ], [ 1.000000e+00, %cond.false29 ], !dbg !6168
  %mul32 = fmul float %40, %cond31, !dbg !6174
  store float %mul32, float* %rest_length, align 4, !dbg !6165
  call void @llvm.dbg.declare(metadata float* %stiffness, metadata !6175, metadata !DIExpression()), !dbg !6176
  %45 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6177
  %stiffness_k = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %45, i32 0, i32 9, !dbg !6178
  %46 = load float, float* %stiffness_k, align 4, !dbg !6178
  store float %46, float* %stiffness, align 4, !dbg !6176
  call void @llvm.dbg.declare(metadata float* %stiffness_near_fac, metadata !6179, metadata !DIExpression()), !dbg !6180
  %47 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6181
  %stiffness_knear = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %47, i32 0, i32 10, !dbg !6182
  %48 = load float, float* %stiffness_knear, align 4, !dbg !6182
  %49 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6183
  %flag33 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %49, i32 0, i32 13, !dbg !6184
  %50 = load i32, i32* %flag33, align 4, !dbg !6184
  %and34 = and i32 %50, 4, !dbg !6185
  %tobool35 = icmp ne i32 %and34, 0, !dbg !6185
  br i1 %tobool35, label %cond.true36, label %cond.false38, !dbg !6183

cond.true36:                                      ; preds = %cond.end30
  %51 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6186
  %stiffness_k37 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %51, i32 0, i32 9, !dbg !6187
  %52 = load float, float* %stiffness_k37, align 4, !dbg !6187
  br label %cond.end39, !dbg !6183

cond.false38:                                     ; preds = %cond.end30
  br label %cond.end39, !dbg !6183

cond.end39:                                       ; preds = %cond.false38, %cond.true36
  %cond40 = phi float [ %52, %cond.true36 ], [ 1.000000e+00, %cond.false38 ], !dbg !6183
  %mul41 = fmul float %48, %cond40, !dbg !6188
  store float %mul41, float* %stiffness_near_fac, align 4, !dbg !6180
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %npa, metadata !6189, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !6191, metadata !DIExpression()), !dbg !6192
  call void @llvm.dbg.declare(metadata [3 x float]* %vel, metadata !6193, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !6195, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.declare(metadata [2 x float]* %data, metadata !6197, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.declare(metadata float* %density, metadata !6199, metadata !DIExpression()), !dbg !6200
  call void @llvm.dbg.declare(metadata float* %near_density, metadata !6201, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6203, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.declare(metadata i32* %spring_index, metadata !6205, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6207, metadata !DIExpression()), !dbg !6208
  %53 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6209
  %54 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !6210
  %arrayidx42 = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %54, i64 0, !dbg !6210
  %55 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx42, align 8, !dbg !6210
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %55, i32 0, i32 3, !dbg !6211
  %56 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !6211
  %sub.ptr.lhs.cast = ptrtoint %struct.ParticleData* %53 to i64, !dbg !6212
  %sub.ptr.rhs.cast = ptrtoint %struct.ParticleData* %56 to i64, !dbg !6212
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6212
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 200, !dbg !6212
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !6209
  store i32 %conv, i32* %index, align 4, !dbg !6208
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %data, i64 0, i64 1, !dbg !6213
  store float 0.000000e+00, float* %arrayidx43, align 4, !dbg !6214
  %arrayidx44 = getelementptr inbounds [2 x float], [2 x float]* %data, i64 0, i64 0, !dbg !6215
  store float 0.000000e+00, float* %arrayidx44, align 4, !dbg !6216
  %arraydecay45 = getelementptr inbounds [2 x float], [2 x float]* %data, i64 0, i64 0, !dbg !6217
  %data46 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 2, !dbg !6218
  store float* %arraydecay45, float** %data46, align 8, !dbg !6219
  %57 = load float, float* %h, align 4, !dbg !6220
  %h47 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 5, !dbg !6221
  store float %57, float* %h47, align 8, !dbg !6222
  %58 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6223
  %pa48 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 4, !dbg !6224
  store %struct.ParticleData* %58, %struct.ParticleData** %pa48, align 8, !dbg !6225
  %59 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6226
  %mass49 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %59, i32 0, i32 2, !dbg !6227
  %60 = load float, float* %mass49, align 8, !dbg !6227
  %mass50 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 6, !dbg !6228
  store float %60, float* %mass50, align 4, !dbg !6229
  %61 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !6230
  %62 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !6231
  %co51 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %62, i32 0, i32 0, !dbg !6232
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %co51, i64 0, i64 0, !dbg !6231
  %63 = load float, float* %interaction_radius, align 4, !dbg !6233
  call void @sph_evaluate_func(%struct.BVHTree* null, %struct.ParticleSystem** %61, float* %arraydecay52, %struct.SPHRangeData* %pfr, float %63, void (i8*, i32, float)* @sph_density_accum_cb), !dbg !6234
  %arrayidx53 = getelementptr inbounds [2 x float], [2 x float]* %data, i64 0, i64 0, !dbg !6235
  %64 = load float, float* %arrayidx53, align 4, !dbg !6235
  store float %64, float* %density, align 4, !dbg !6236
  %arrayidx54 = getelementptr inbounds [2 x float], [2 x float]* %data, i64 0, i64 1, !dbg !6237
  %65 = load float, float* %arrayidx54, align 4, !dbg !6237
  store float %65, float* %near_density, align 4, !dbg !6238
  %66 = load float, float* %stiffness, align 4, !dbg !6239
  %67 = load float, float* %density, align 4, !dbg !6240
  %68 = load float, float* %rest_density, align 4, !dbg !6241
  %sub = fsub float %67, %68, !dbg !6242
  %mul55 = fmul float %66, %sub, !dbg !6243
  store float %mul55, float* %pressure, align 4, !dbg !6244
  %69 = load float, float* %stiffness_near_fac, align 4, !dbg !6245
  %70 = load float, float* %near_density, align 4, !dbg !6246
  %mul56 = fmul float %69, %70, !dbg !6247
  store float %mul56, float* %near_pressure, align 4, !dbg !6248
  %neighbors = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 0, !dbg !6249
  %arraydecay57 = getelementptr inbounds [512 x %struct.SPHNeighbor], [512 x %struct.SPHNeighbor]* %neighbors, i64 0, i64 0, !dbg !6250
  store %struct.SPHNeighbor* %arraydecay57, %struct.SPHNeighbor** %pfn, align 8, !dbg !6251
  store i32 0, i32* %i, align 4, !dbg !6252
  br label %for.cond, !dbg !6254

for.cond:                                         ; preds = %for.inc, %cond.end39
  %71 = load i32, i32* %i, align 4, !dbg !6255
  %tot_neighbors = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 1, !dbg !6257
  %72 = load i32, i32* %tot_neighbors, align 8, !dbg !6257
  %cmp = icmp slt i32 %71, %72, !dbg !6258
  br i1 %cmp, label %for.body, label %for.end, !dbg !6259

for.body:                                         ; preds = %for.cond
  %73 = load %struct.SPHNeighbor*, %struct.SPHNeighbor** %pfn, align 8, !dbg !6260
  %psys59 = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %73, i32 0, i32 0, !dbg !6262
  %74 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys59, align 8, !dbg !6262
  %particles60 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %74, i32 0, i32 3, !dbg !6263
  %75 = load %struct.ParticleData*, %struct.ParticleData** %particles60, align 8, !dbg !6263
  %76 = load %struct.SPHNeighbor*, %struct.SPHNeighbor** %pfn, align 8, !dbg !6264
  %index61 = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %76, i32 0, i32 1, !dbg !6265
  %77 = load i32, i32* %index61, align 8, !dbg !6265
  %idx.ext = sext i32 %77 to i64, !dbg !6266
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %75, i64 %idx.ext, !dbg !6266
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %npa, align 8, !dbg !6267
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6268
  %78 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6269
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %78, i32 0, i32 1, !dbg !6270
  %co63 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 0, !dbg !6271
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %co63, i64 0, i64 0, !dbg !6269
  %79 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6272
  %prev_state65 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %79, i32 0, i32 1, !dbg !6273
  %vel66 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state65, i32 0, i32 1, !dbg !6274
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %vel66, i64 0, i64 0, !dbg !6272
  %80 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !6275
  %time = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %80, i32 0, i32 4, !dbg !6276
  %81 = load float, float* %time, align 4, !dbg !6276
  call void @madd_v3_v3v3fl(float* %arraydecay62, float* %arraydecay64, float* %arraydecay67, float %81), !dbg !6277
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6278
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6279
  %82 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !6280
  %co70 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %82, i32 0, i32 0, !dbg !6281
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %co70, i64 0, i64 0, !dbg !6280
  call void @sub_v3_v3v3(float* %arraydecay68, float* %arraydecay69, float* %arraydecay71), !dbg !6282
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6283
  %call = call float @normalize_v3(float* %arraydecay72), !dbg !6284
  store float %call, float* %rij, align 4, !dbg !6285
  %83 = load float, float* %rij, align 4, !dbg !6286
  %84 = load float, float* %h, align 4, !dbg !6287
  %div73 = fdiv float %83, %84, !dbg !6288
  %sub74 = fsub float 1.000000e+00, %div73, !dbg !6289
  %85 = load %struct.SPHNeighbor*, %struct.SPHNeighbor** %pfn, align 8, !dbg !6290
  %psys75 = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %85, i32 0, i32 0, !dbg !6291
  %86 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys75, align 8, !dbg !6291
  %part76 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %86, i32 0, i32 2, !dbg !6292
  %87 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part76, align 8, !dbg !6292
  %mass77 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %87, i32 0, i32 81, !dbg !6293
  %88 = load float, float* %mass77, align 4, !dbg !6293
  %mul78 = fmul float %sub74, %88, !dbg !6294
  %89 = load float, float* %inv_mass, align 4, !dbg !6295
  %mul79 = fmul float %mul78, %89, !dbg !6296
  store float %mul79, float* %q, align 4, !dbg !6297
  %90 = load %struct.SPHNeighbor*, %struct.SPHNeighbor** %pfn, align 8, !dbg !6298
  %psys80 = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %90, i32 0, i32 0, !dbg !6300
  %91 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys80, align 8, !dbg !6300
  %part81 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %91, i32 0, i32 2, !dbg !6301
  %92 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part81, align 8, !dbg !6301
  %flag82 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %92, i32 0, i32 5, !dbg !6302
  %93 = load i32, i32* %flag82, align 8, !dbg !6302
  %and83 = and i32 %93, 65536, !dbg !6303
  %tobool84 = icmp ne i32 %and83, 0, !dbg !6303
  br i1 %tobool84, label %if.then, label %if.end, !dbg !6304

if.then:                                          ; preds = %for.body
  %94 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6305
  %size85 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %94, i32 0, i32 13, !dbg !6306
  %95 = load float, float* %size85, align 4, !dbg !6306
  %96 = load float, float* %q, align 4, !dbg !6307
  %mul86 = fmul float %96, %95, !dbg !6307
  store float %mul86, float* %q, align 4, !dbg !6307
  br label %if.end, !dbg !6308

if.end:                                           ; preds = %if.then, %for.body
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !6309
  %97 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6310
  %prev_state88 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %97, i32 0, i32 1, !dbg !6311
  %vel89 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state88, i32 0, i32 1, !dbg !6312
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %vel89, i64 0, i64 0, !dbg !6310
  call void @copy_v3_v3(float* %arraydecay87, float* %arraydecay90), !dbg !6313
  %98 = load float*, float** %force.addr, align 8, !dbg !6314
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6315
  %99 = load float, float* %pressure, align 4, !dbg !6316
  %100 = load float, float* %near_pressure, align 4, !dbg !6317
  %101 = load float, float* %q, align 4, !dbg !6318
  %mul92 = fmul float %100, %101, !dbg !6319
  %add = fadd float %99, %mul92, !dbg !6320
  %fneg = fneg float %add, !dbg !6321
  %102 = load float, float* %q, align 4, !dbg !6322
  %mul93 = fmul float %fneg, %102, !dbg !6323
  call void @madd_v3_v3fl(float* %98, float* %arraydecay91, float %mul93), !dbg !6324
  %103 = load float, float* %visc, align 4, !dbg !6325
  %cmp94 = fcmp ogt float %103, 0.000000e+00, !dbg !6327
  br i1 %cmp94, label %if.then98, label %lor.lhs.false, !dbg !6328

lor.lhs.false:                                    ; preds = %if.end
  %104 = load float, float* %stiff_visc, align 4, !dbg !6329
  %cmp96 = fcmp ogt float %104, 0.000000e+00, !dbg !6330
  br i1 %cmp96, label %if.then98, label %if.end127, !dbg !6331

if.then98:                                        ; preds = %lor.lhs.false, %if.end
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 0, !dbg !6332
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !6334
  %105 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !6335
  %vel101 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %105, i32 0, i32 1, !dbg !6336
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %vel101, i64 0, i64 0, !dbg !6335
  call void @sub_v3_v3v3(float* %arraydecay99, float* %arraydecay100, float* %arraydecay102), !dbg !6337
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6338
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 0, !dbg !6339
  %call105 = call float @dot_v3v3(float* %arraydecay103, float* %arraydecay104), !dbg !6340
  store float %call105, float* %u, align 4, !dbg !6341
  %106 = load float, float* %u, align 4, !dbg !6342
  %cmp106 = fcmp olt float %106, 0.000000e+00, !dbg !6344
  br i1 %cmp106, label %land.lhs.true, label %if.end115, !dbg !6345

land.lhs.true:                                    ; preds = %if.then98
  %107 = load float, float* %visc, align 4, !dbg !6346
  %cmp108 = fcmp ogt float %107, 0.000000e+00, !dbg !6347
  br i1 %cmp108, label %if.then110, label %if.end115, !dbg !6348

if.then110:                                       ; preds = %land.lhs.true
  %108 = load float*, float** %force.addr, align 8, !dbg !6349
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6350
  %109 = load float, float* %q, align 4, !dbg !6351
  %mul112 = fmul float 5.000000e-01, %109, !dbg !6352
  %110 = load float, float* %visc, align 4, !dbg !6353
  %mul113 = fmul float %mul112, %110, !dbg !6354
  %111 = load float, float* %u, align 4, !dbg !6355
  %mul114 = fmul float %mul113, %111, !dbg !6356
  call void @madd_v3_v3fl(float* %108, float* %arraydecay111, float %mul114), !dbg !6357
  br label %if.end115, !dbg !6357

if.end115:                                        ; preds = %if.then110, %land.lhs.true, %if.then98
  %112 = load float, float* %u, align 4, !dbg !6358
  %cmp116 = fcmp ogt float %112, 0.000000e+00, !dbg !6360
  br i1 %cmp116, label %land.lhs.true118, label %if.end126, !dbg !6361

land.lhs.true118:                                 ; preds = %if.end115
  %113 = load float, float* %stiff_visc, align 4, !dbg !6362
  %cmp119 = fcmp ogt float %113, 0.000000e+00, !dbg !6363
  br i1 %cmp119, label %if.then121, label %if.end126, !dbg !6364

if.then121:                                       ; preds = %land.lhs.true118
  %114 = load float*, float** %force.addr, align 8, !dbg !6365
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6366
  %115 = load float, float* %q, align 4, !dbg !6367
  %mul123 = fmul float 5.000000e-01, %115, !dbg !6368
  %116 = load float, float* %stiff_visc, align 4, !dbg !6369
  %mul124 = fmul float %mul123, %116, !dbg !6370
  %117 = load float, float* %u, align 4, !dbg !6371
  %mul125 = fmul float %mul124, %117, !dbg !6372
  call void @madd_v3_v3fl(float* %114, float* %arraydecay122, float %mul125), !dbg !6373
  br label %if.end126, !dbg !6373

if.end126:                                        ; preds = %if.then121, %land.lhs.true118, %if.end115
  br label %if.end127, !dbg !6374

if.end127:                                        ; preds = %if.end126, %lor.lhs.false
  %118 = load float, float* %spring_constant, align 4, !dbg !6375
  %cmp128 = fcmp ogt float %118, 0.000000e+00, !dbg !6377
  br i1 %cmp128, label %if.then130, label %if.end196, !dbg !6378

if.then130:                                       ; preds = %if.end127
  %119 = load %struct.SPHNeighbor*, %struct.SPHNeighbor** %pfn, align 8, !dbg !6379
  %psys131 = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %119, i32 0, i32 0, !dbg !6382
  %120 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys131, align 8, !dbg !6382
  %121 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !6383
  %arrayidx132 = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %121, i64 0, !dbg !6383
  %122 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx132, align 8, !dbg !6383
  %cmp133 = icmp eq %struct.ParticleSystem* %120, %122, !dbg !6384
  br i1 %cmp133, label %land.lhs.true135, label %if.else187, !dbg !6385

land.lhs.true135:                                 ; preds = %if.then130
  %123 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6386
  %flag136 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %123, i32 0, i32 13, !dbg !6387
  %124 = load i32, i32* %flag136, align 4, !dbg !6387
  %and137 = and i32 %124, 1, !dbg !6388
  %tobool138 = icmp ne i32 %and137, 0, !dbg !6388
  br i1 %tobool138, label %land.lhs.true139, label %if.else187, !dbg !6389

land.lhs.true139:                                 ; preds = %land.lhs.true135
  %125 = load %struct.EdgeHash*, %struct.EdgeHash** %springhash, align 8, !dbg !6390
  %tobool140 = icmp ne %struct.EdgeHash* %125, null, !dbg !6390
  br i1 %tobool140, label %if.then141, label %if.else187, !dbg !6391

if.then141:                                       ; preds = %land.lhs.true139
  %126 = load %struct.EdgeHash*, %struct.EdgeHash** %springhash, align 8, !dbg !6392
  %127 = load i32, i32* %index, align 4, !dbg !6392
  %128 = load %struct.SPHNeighbor*, %struct.SPHNeighbor** %pfn, align 8, !dbg !6392
  %index142 = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %128, i32 0, i32 1, !dbg !6392
  %129 = load i32, i32* %index142, align 8, !dbg !6392
  %call143 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %126, i32 %127, i32 %129), !dbg !6392
  %130 = ptrtoint i8* %call143 to i64, !dbg !6392
  %conv144 = trunc i64 %130 to i32, !dbg !6392
  store i32 %conv144, i32* %spring_index, align 4, !dbg !6394
  %131 = load i32, i32* %spring_index, align 4, !dbg !6395
  %tobool145 = icmp ne i32 %131, 0, !dbg !6395
  br i1 %tobool145, label %if.then146, label %if.else, !dbg !6397

if.then146:                                       ; preds = %if.then141
  %132 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !6398
  %arrayidx147 = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %132, i64 0, !dbg !6398
  %133 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx147, align 8, !dbg !6398
  %fluid_springs = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %133, i32 0, i32 43, !dbg !6400
  %134 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs, align 8, !dbg !6400
  %135 = load i32, i32* %spring_index, align 4, !dbg !6401
  %idx.ext148 = sext i32 %135 to i64, !dbg !6402
  %add.ptr149 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %134, i64 %idx.ext148, !dbg !6402
  %add.ptr150 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %add.ptr149, i64 -1, !dbg !6403
  store %struct.ParticleSpring* %add.ptr150, %struct.ParticleSpring** %spring, align 8, !dbg !6404
  %136 = load float*, float** %force.addr, align 8, !dbg !6405
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6406
  %137 = load float, float* %spring_constant, align 4, !dbg !6407
  %mul152 = fmul float -1.000000e+01, %137, !dbg !6408
  %138 = load float, float* %rij, align 4, !dbg !6409
  %139 = load float, float* %h, align 4, !dbg !6410
  %div153 = fdiv float %138, %139, !dbg !6411
  %sub154 = fsub float 1.000000e+00, %div153, !dbg !6412
  %mul155 = fmul float %mul152, %sub154, !dbg !6413
  %140 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring, align 8, !dbg !6414
  %rest_length156 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %140, i32 0, i32 0, !dbg !6415
  %141 = load float, float* %rest_length156, align 4, !dbg !6415
  %142 = load float, float* %rij, align 4, !dbg !6416
  %sub157 = fsub float %141, %142, !dbg !6417
  %mul158 = fmul float %mul155, %sub157, !dbg !6418
  call void @madd_v3_v3fl(float* %136, float* %arraydecay151, float %mul158), !dbg !6419
  br label %if.end186, !dbg !6420

if.else:                                          ; preds = %if.then141
  %143 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6421
  %spring_frames = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %143, i32 0, i32 14, !dbg !6423
  %144 = load i32, i32* %spring_frames, align 4, !dbg !6423
  %cmp159 = icmp eq i32 %144, 0, !dbg !6424
  br i1 %cmp159, label %if.then170, label %lor.lhs.false161, !dbg !6425

lor.lhs.false161:                                 ; preds = %if.else
  %145 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6426
  %prev_state162 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %145, i32 0, i32 1, !dbg !6427
  %time163 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state162, i32 0, i32 4, !dbg !6428
  %146 = load float, float* %time163, align 4, !dbg !6428
  %147 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6429
  %time164 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %147, i32 0, i32 6, !dbg !6430
  %148 = load float, float* %time164, align 4, !dbg !6430
  %sub165 = fsub float %146, %148, !dbg !6431
  %149 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6432
  %spring_frames166 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %149, i32 0, i32 14, !dbg !6433
  %150 = load i32, i32* %spring_frames166, align 4, !dbg !6433
  %conv167 = sitofp i32 %150 to float, !dbg !6432
  %cmp168 = fcmp ole float %sub165, %conv167, !dbg !6434
  br i1 %cmp168, label %if.then170, label %if.end185, !dbg !6435

if.then170:                                       ; preds = %lor.lhs.false161, %if.else
  call void @llvm.dbg.declare(metadata %struct.ParticleSpring* %temp_spring, metadata !6436, metadata !DIExpression()), !dbg !6438
  %151 = load i32, i32* %index, align 4, !dbg !6439
  %particle_index = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %temp_spring, i32 0, i32 1, !dbg !6440
  %arrayidx171 = getelementptr inbounds [2 x i32], [2 x i32]* %particle_index, i64 0, i64 0, !dbg !6441
  store i32 %151, i32* %arrayidx171, align 4, !dbg !6442
  %152 = load %struct.SPHNeighbor*, %struct.SPHNeighbor** %pfn, align 8, !dbg !6443
  %index172 = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %152, i32 0, i32 1, !dbg !6444
  %153 = load i32, i32* %index172, align 8, !dbg !6444
  %particle_index173 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %temp_spring, i32 0, i32 1, !dbg !6445
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %particle_index173, i64 0, i64 1, !dbg !6446
  store i32 %153, i32* %arrayidx174, align 4, !dbg !6447
  %154 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6448
  %flag175 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %154, i32 0, i32 13, !dbg !6449
  %155 = load i32, i32* %flag175, align 4, !dbg !6449
  %and176 = and i32 %155, 2, !dbg !6450
  %tobool177 = icmp ne i32 %and176, 0, !dbg !6450
  br i1 %tobool177, label %cond.true178, label %cond.false179, !dbg !6451

cond.true178:                                     ; preds = %if.then170
  %156 = load float, float* %rij, align 4, !dbg !6452
  br label %cond.end180, !dbg !6451

cond.false179:                                    ; preds = %if.then170
  %157 = load float, float* %rest_length, align 4, !dbg !6453
  br label %cond.end180, !dbg !6451

cond.end180:                                      ; preds = %cond.false179, %cond.true178
  %cond181 = phi float [ %156, %cond.true178 ], [ %157, %cond.false179 ], !dbg !6451
  %rest_length182 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %temp_spring, i32 0, i32 0, !dbg !6454
  store float %cond181, float* %rest_length182, align 4, !dbg !6455
  %delete_flag = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %temp_spring, i32 0, i32 2, !dbg !6456
  store i32 0, i32* %delete_flag, align 4, !dbg !6457
  %158 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !6458
  %arrayidx183 = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %158, i64 0, !dbg !6458
  %159 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx183, align 8, !dbg !6458
  %call184 = call %struct.ParticleSpring* @sph_spring_add(%struct.ParticleSystem* %159, %struct.ParticleSpring* %temp_spring), !dbg !6459
  br label %if.end185, !dbg !6460

if.end185:                                        ; preds = %cond.end180, %lor.lhs.false161
  br label %if.end186

if.end186:                                        ; preds = %if.end185, %if.then146
  br label %if.end195, !dbg !6461

if.else187:                                       ; preds = %land.lhs.true139, %land.lhs.true135, %if.then130
  %160 = load float*, float** %force.addr, align 8, !dbg !6462
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6464
  %161 = load float, float* %spring_constant, align 4, !dbg !6465
  %mul189 = fmul float -1.000000e+01, %161, !dbg !6466
  %162 = load float, float* %rij, align 4, !dbg !6467
  %163 = load float, float* %h, align 4, !dbg !6468
  %div190 = fdiv float %162, %163, !dbg !6469
  %sub191 = fsub float 1.000000e+00, %div190, !dbg !6470
  %mul192 = fmul float %mul189, %sub191, !dbg !6471
  %164 = load float, float* %rest_length, align 4, !dbg !6472
  %165 = load float, float* %rij, align 4, !dbg !6473
  %sub193 = fsub float %164, %165, !dbg !6474
  %mul194 = fmul float %mul192, %sub193, !dbg !6475
  call void @madd_v3_v3fl(float* %160, float* %arraydecay188, float %mul194), !dbg !6476
  br label %if.end195

if.end195:                                        ; preds = %if.else187, %if.end186
  br label %if.end196, !dbg !6477

if.end196:                                        ; preds = %if.end195, %if.end127
  br label %for.inc, !dbg !6478

for.inc:                                          ; preds = %if.end196
  %166 = load i32, i32* %i, align 4, !dbg !6479
  %inc = add nsw i32 %166, 1, !dbg !6479
  store i32 %inc, i32* %i, align 4, !dbg !6479
  %167 = load %struct.SPHNeighbor*, %struct.SPHNeighbor** %pfn, align 8, !dbg !6480
  %incdec.ptr = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %167, i32 1, !dbg !6480
  store %struct.SPHNeighbor* %incdec.ptr, %struct.SPHNeighbor** %pfn, align 8, !dbg !6480
  br label %for.cond, !dbg !6481, !llvm.loop !6482

for.end:                                          ; preds = %for.cond
  %168 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6484
  %buoyancy = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %168, i32 0, i32 12, !dbg !6486
  %169 = load float, float* %buoyancy, align 4, !dbg !6486
  %cmp197 = fcmp ogt float %169, 0.000000e+00, !dbg !6487
  br i1 %cmp197, label %land.lhs.true199, label %if.end205, !dbg !6488

land.lhs.true199:                                 ; preds = %for.end
  %170 = load float*, float** %gravity, align 8, !dbg !6489
  %tobool200 = icmp ne float* %170, null, !dbg !6489
  br i1 %tobool200, label %if.then201, label %if.end205, !dbg !6490

if.then201:                                       ; preds = %land.lhs.true199
  %171 = load float*, float** %force.addr, align 8, !dbg !6491
  %172 = load float*, float** %gravity, align 8, !dbg !6492
  %173 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6493
  %buoyancy202 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %173, i32 0, i32 12, !dbg !6494
  %174 = load float, float* %buoyancy202, align 4, !dbg !6494
  %175 = load float, float* %density, align 4, !dbg !6495
  %176 = load float, float* %rest_density, align 4, !dbg !6496
  %sub203 = fsub float %175, %176, !dbg !6497
  %mul204 = fmul float %174, %sub203, !dbg !6498
  call void @madd_v3_v3fl(float* %171, float* %172, float %mul204), !dbg !6499
  br label %if.end205, !dbg !6499

if.end205:                                        ; preds = %if.then201, %land.lhs.true199, %for.end
  %177 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6500
  %pass = getelementptr inbounds %struct.SPHData, %struct.SPHData* %177, i32 0, i32 6, !dbg !6502
  %178 = load i32, i32* %pass, align 4, !dbg !6502
  %cmp206 = icmp eq i32 %178, 0, !dbg !6503
  br i1 %cmp206, label %land.lhs.true208, label %if.end215, !dbg !6504

land.lhs.true208:                                 ; preds = %if.end205
  %179 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !6505
  %arrayidx209 = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %179, i64 0, !dbg !6505
  %180 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx209, align 8, !dbg !6505
  %part210 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %180, i32 0, i32 2, !dbg !6506
  %181 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part210, align 8, !dbg !6506
  %time_flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %181, i32 0, i32 67, !dbg !6507
  %182 = load i16, i16* %time_flag, align 4, !dbg !6507
  %conv211 = sext i16 %182 to i32, !dbg !6505
  %and212 = and i32 %conv211, 1, !dbg !6508
  %tobool213 = icmp ne i32 %and212, 0, !dbg !6508
  br i1 %tobool213, label %if.then214, label %if.end215, !dbg !6509

if.then214:                                       ; preds = %land.lhs.true208
  %183 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6510
  call void @sph_particle_courant(%struct.SPHData* %183, %struct.SPHRangeData* %pfr), !dbg !6511
  br label %if.end215, !dbg !6511

if.end215:                                        ; preds = %if.then214, %land.lhs.true208, %if.end205
  %184 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6512
  %pass216 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %184, i32 0, i32 6, !dbg !6513
  %185 = load i32, i32* %pass216, align 4, !dbg !6514
  %inc217 = add nsw i32 %185, 1, !dbg !6514
  store i32 %inc217, i32* %pass216, align 4, !dbg !6514
  ret void, !dbg !6515
}

; Function Attrs: noinline nounwind uwtable
define internal void @sph_density_accum_cb(i8* %userdata, i32 %index, float %squared_dist) #0 !dbg !6516 {
entry:
  %userdata.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %squared_dist.addr = alloca float, align 4
  %pfr = alloca %struct.SPHRangeData*, align 8
  %npa = alloca %struct.ParticleData*, align 8
  %q = alloca float, align 4
  %dist = alloca float, align 4
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !6517, metadata !DIExpression()), !dbg !6518
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6519, metadata !DIExpression()), !dbg !6520
  store float %squared_dist, float* %squared_dist.addr, align 4
  call void @llvm.dbg.declare(metadata float* %squared_dist.addr, metadata !6521, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.declare(metadata %struct.SPHRangeData** %pfr, metadata !6523, metadata !DIExpression()), !dbg !6524
  %0 = load i8*, i8** %userdata.addr, align 8, !dbg !6525
  %1 = bitcast i8* %0 to %struct.SPHRangeData*, !dbg !6526
  store %struct.SPHRangeData* %1, %struct.SPHRangeData** %pfr, align 8, !dbg !6524
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %npa, metadata !6527, metadata !DIExpression()), !dbg !6528
  %2 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6529
  %npsys = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %2, i32 0, i32 3, !dbg !6530
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %npsys, align 8, !dbg !6530
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 3, !dbg !6531
  %4 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !6531
  %5 = load i32, i32* %index.addr, align 4, !dbg !6532
  %idx.ext = sext i32 %5 to i64, !dbg !6533
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %4, i64 %idx.ext, !dbg !6533
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %npa, align 8, !dbg !6528
  call void @llvm.dbg.declare(metadata float* %q, metadata !6534, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.declare(metadata float* %dist, metadata !6536, metadata !DIExpression()), !dbg !6537
  %6 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6538
  %7 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6540
  %pa = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %7, i32 0, i32 4, !dbg !6541
  %8 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6541
  %cmp = icmp eq %struct.ParticleData* %6, %8, !dbg !6542
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6543

lor.lhs.false:                                    ; preds = %entry
  %9 = load float, float* %squared_dist.addr, align 4, !dbg !6544
  %cmp1 = fcmp olt float %9, 0x3E80000000000000, !dbg !6545
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6546

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !6547

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6548
  %tot_neighbors = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %10, i32 0, i32 1, !dbg !6550
  %11 = load i32, i32* %tot_neighbors, align 8, !dbg !6550
  %cmp2 = icmp sge i32 %11, 512, !dbg !6551
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6552

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !6553

if.end4:                                          ; preds = %if.end
  %12 = load i32, i32* %index.addr, align 4, !dbg !6554
  %13 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6555
  %neighbors = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %13, i32 0, i32 0, !dbg !6556
  %14 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6557
  %tot_neighbors5 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %14, i32 0, i32 1, !dbg !6558
  %15 = load i32, i32* %tot_neighbors5, align 8, !dbg !6558
  %idxprom = sext i32 %15 to i64, !dbg !6555
  %arrayidx = getelementptr inbounds [512 x %struct.SPHNeighbor], [512 x %struct.SPHNeighbor]* %neighbors, i64 0, i64 %idxprom, !dbg !6555
  %index6 = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %arrayidx, i32 0, i32 1, !dbg !6559
  store i32 %12, i32* %index6, align 8, !dbg !6560
  %16 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6561
  %npsys7 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %16, i32 0, i32 3, !dbg !6562
  %17 = load %struct.ParticleSystem*, %struct.ParticleSystem** %npsys7, align 8, !dbg !6562
  %18 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6563
  %neighbors8 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %18, i32 0, i32 0, !dbg !6564
  %19 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6565
  %tot_neighbors9 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %19, i32 0, i32 1, !dbg !6566
  %20 = load i32, i32* %tot_neighbors9, align 8, !dbg !6566
  %idxprom10 = sext i32 %20 to i64, !dbg !6563
  %arrayidx11 = getelementptr inbounds [512 x %struct.SPHNeighbor], [512 x %struct.SPHNeighbor]* %neighbors8, i64 0, i64 %idxprom10, !dbg !6563
  %psys = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %arrayidx11, i32 0, i32 0, !dbg !6567
  store %struct.ParticleSystem* %17, %struct.ParticleSystem** %psys, align 8, !dbg !6568
  %21 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6569
  %tot_neighbors12 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %21, i32 0, i32 1, !dbg !6570
  %22 = load i32, i32* %tot_neighbors12, align 8, !dbg !6571
  %inc = add nsw i32 %22, 1, !dbg !6571
  store i32 %inc, i32* %tot_neighbors12, align 8, !dbg !6571
  %23 = load float, float* %squared_dist.addr, align 4, !dbg !6572
  %call = call float @sqrtf(float %23) #5, !dbg !6573
  store float %call, float* %dist, align 4, !dbg !6574
  %24 = load float, float* %dist, align 4, !dbg !6575
  %25 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6576
  %h = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %25, i32 0, i32 5, !dbg !6577
  %26 = load float, float* %h, align 8, !dbg !6577
  %div = fdiv float %24, %26, !dbg !6578
  %sub = fsub float 1.000000e+00, %div, !dbg !6579
  %27 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6580
  %massfac = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %27, i32 0, i32 7, !dbg !6581
  %28 = load float, float* %massfac, align 8, !dbg !6581
  %mul = fmul float %sub, %28, !dbg !6582
  store float %mul, float* %q, align 4, !dbg !6583
  %29 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6584
  %use_size = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %29, i32 0, i32 8, !dbg !6586
  %30 = load i32, i32* %use_size, align 4, !dbg !6586
  %tobool = icmp ne i32 %30, 0, !dbg !6584
  br i1 %tobool, label %if.then13, label %if.end15, !dbg !6587

if.then13:                                        ; preds = %if.end4
  %31 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6588
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %31, i32 0, i32 13, !dbg !6589
  %32 = load float, float* %size, align 4, !dbg !6589
  %33 = load float, float* %q, align 4, !dbg !6590
  %mul14 = fmul float %33, %32, !dbg !6590
  store float %mul14, float* %q, align 4, !dbg !6590
  br label %if.end15, !dbg !6591

if.end15:                                         ; preds = %if.then13, %if.end4
  %34 = load float, float* %q, align 4, !dbg !6592
  %35 = load float, float* %q, align 4, !dbg !6593
  %mul16 = fmul float %34, %35, !dbg !6594
  %36 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6595
  %data = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %36, i32 0, i32 2, !dbg !6596
  %37 = load float*, float** %data, align 8, !dbg !6596
  %arrayidx17 = getelementptr inbounds float, float* %37, i64 0, !dbg !6595
  %38 = load float, float* %arrayidx17, align 4, !dbg !6597
  %add = fadd float %38, %mul16, !dbg !6597
  store float %add, float* %arrayidx17, align 4, !dbg !6597
  %39 = load float, float* %q, align 4, !dbg !6598
  %40 = load float, float* %q, align 4, !dbg !6599
  %mul18 = fmul float %39, %40, !dbg !6600
  %41 = load float, float* %q, align 4, !dbg !6601
  %mul19 = fmul float %mul18, %41, !dbg !6602
  %42 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6603
  %data20 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %42, i32 0, i32 2, !dbg !6604
  %43 = load float*, float** %data20, align 8, !dbg !6604
  %arrayidx21 = getelementptr inbounds float, float* %43, i64 1, !dbg !6603
  %44 = load float, float* %arrayidx21, align 4, !dbg !6605
  %add22 = fadd float %44, %mul19, !dbg !6605
  store float %add22, float* %arrayidx21, align 4, !dbg !6605
  br label %return, !dbg !6606

return:                                           ; preds = %if.end15, %if.then3, %if.then
  ret void, !dbg !6606
}

; Function Attrs: noinline nounwind uwtable
define internal void @sphclassical_force_cb(i8* %sphdata_v, %struct.ParticleKey* %state, float* %force, float* %UNUSED_impulse) #0 !dbg !6607 {
entry:
  %sphdata_v.addr = alloca i8*, align 8
  %state.addr = alloca %struct.ParticleKey*, align 8
  %force.addr = alloca float*, align 8
  %UNUSED_impulse.addr = alloca float*, align 8
  %sphdata = alloca %struct.SPHData*, align 8
  %psys = alloca %struct.ParticleSystem**, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %fluid = alloca %struct.SPHFluidSettings*, align 8
  %pfr = alloca %struct.SPHRangeData, align 8
  %pfn = alloca %struct.SPHNeighbor*, align 8
  %gravity = alloca float*, align 8
  %dq = alloca float, align 4
  %u = alloca float, align 4
  %rij = alloca float, align 4
  %dv = alloca [3 x float], align 4
  %pressure = alloca float, align 4
  %npressure = alloca float, align 4
  %visc = alloca float, align 4
  %interaction_radius = alloca float, align 4
  %h = alloca float, align 4
  %hinv = alloca float, align 4
  %rest_density = alloca float, align 4
  %stiffness = alloca float, align 4
  %npa = alloca %struct.ParticleData*, align 8
  %vec = alloca [3 x float], align 4
  %co = alloca [3 x float], align 4
  %pressureTerm = alloca float, align 4
  %i = alloca i32, align 4
  %qfac2 = alloca float, align 4
  %rij_h = alloca float, align 4
  store i8* %sphdata_v, i8** %sphdata_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sphdata_v.addr, metadata !6608, metadata !DIExpression()), !dbg !6609
  store %struct.ParticleKey* %state, %struct.ParticleKey** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleKey** %state.addr, metadata !6610, metadata !DIExpression()), !dbg !6611
  store float* %force, float** %force.addr, align 8
  call void @llvm.dbg.declare(metadata float** %force.addr, metadata !6612, metadata !DIExpression()), !dbg !6613
  store float* %UNUSED_impulse, float** %UNUSED_impulse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_impulse.addr, metadata !6614, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.declare(metadata %struct.SPHData** %sphdata, metadata !6616, metadata !DIExpression()), !dbg !6617
  %0 = load i8*, i8** %sphdata_v.addr, align 8, !dbg !6618
  %1 = bitcast i8* %0 to %struct.SPHData*, !dbg !6619
  store %struct.SPHData* %1, %struct.SPHData** %sphdata, align 8, !dbg !6617
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem*** %psys, metadata !6620, metadata !DIExpression()), !dbg !6621
  %2 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6622
  %psys1 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %2, i32 0, i32 0, !dbg !6623
  %arraydecay = getelementptr inbounds [10 x %struct.ParticleSystem*], [10 x %struct.ParticleSystem*]* %psys1, i64 0, i64 0, !dbg !6622
  store %struct.ParticleSystem** %arraydecay, %struct.ParticleSystem*** %psys, align 8, !dbg !6621
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !6624, metadata !DIExpression()), !dbg !6625
  %3 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6626
  %pa2 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %3, i32 0, i32 1, !dbg !6627
  %4 = load %struct.ParticleData*, %struct.ParticleData** %pa2, align 8, !dbg !6627
  store %struct.ParticleData* %4, %struct.ParticleData** %pa, align 8, !dbg !6625
  call void @llvm.dbg.declare(metadata %struct.SPHFluidSettings** %fluid, metadata !6628, metadata !DIExpression()), !dbg !6629
  %5 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !6630
  %arrayidx = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %5, i64 0, !dbg !6630
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx, align 8, !dbg !6630
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 2, !dbg !6631
  %7 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6631
  %fluid3 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %7, i32 0, i32 3, !dbg !6632
  %8 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid3, align 8, !dbg !6632
  store %struct.SPHFluidSettings* %8, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6629
  call void @llvm.dbg.declare(metadata %struct.SPHRangeData* %pfr, metadata !6633, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.declare(metadata %struct.SPHNeighbor** %pfn, metadata !6635, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.declare(metadata float** %gravity, metadata !6637, metadata !DIExpression()), !dbg !6638
  %9 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6639
  %gravity4 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %9, i32 0, i32 4, !dbg !6640
  %10 = load float*, float** %gravity4, align 8, !dbg !6640
  store float* %10, float** %gravity, align 8, !dbg !6638
  call void @llvm.dbg.declare(metadata float* %dq, metadata !6641, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.declare(metadata float* %u, metadata !6643, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.declare(metadata float* %rij, metadata !6645, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.declare(metadata [3 x float]* %dv, metadata !6647, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.declare(metadata float* %pressure, metadata !6649, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.declare(metadata float* %npressure, metadata !6651, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.declare(metadata float* %visc, metadata !6653, metadata !DIExpression()), !dbg !6654
  %11 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6655
  %viscosity_omega = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %11, i32 0, i32 7, !dbg !6656
  %12 = load float, float* %viscosity_omega, align 4, !dbg !6656
  store float %12, float* %visc, align 4, !dbg !6654
  call void @llvm.dbg.declare(metadata float* %interaction_radius, metadata !6657, metadata !DIExpression()), !dbg !6658
  call void @llvm.dbg.declare(metadata float* %h, metadata !6659, metadata !DIExpression()), !dbg !6660
  call void @llvm.dbg.declare(metadata float* %hinv, metadata !6661, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.declare(metadata float* %rest_density, metadata !6663, metadata !DIExpression()), !dbg !6664
  %13 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6665
  %rest_density5 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %13, i32 0, i32 11, !dbg !6666
  %14 = load float, float* %rest_density5, align 4, !dbg !6666
  %15 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6667
  %flag = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %15, i32 0, i32 13, !dbg !6668
  %16 = load i32, i32* %flag, align 4, !dbg !6668
  %and = and i32 %16, 8, !dbg !6669
  %tobool = icmp ne i32 %and, 0, !dbg !6667
  %17 = zext i1 %tobool to i64, !dbg !6667
  %cond = select i1 %tobool, float 0x4013147AE0000000, float 1.000000e+00, !dbg !6667
  %mul = fmul float %14, %cond, !dbg !6670
  store float %mul, float* %rest_density, align 4, !dbg !6664
  call void @llvm.dbg.declare(metadata float* %stiffness, metadata !6671, metadata !DIExpression()), !dbg !6672
  %18 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6673
  %stiffness_k = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %18, i32 0, i32 9, !dbg !6674
  %19 = load float, float* %stiffness_k, align 4, !dbg !6674
  %call = call float @pow2(float %19), !dbg !6675
  store float %call, float* %stiffness, align 4, !dbg !6672
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %npa, metadata !6676, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !6678, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !6680, metadata !DIExpression()), !dbg !6681
  call void @llvm.dbg.declare(metadata float* %pressureTerm, metadata !6682, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6684, metadata !DIExpression()), !dbg !6685
  call void @llvm.dbg.declare(metadata float* %qfac2, metadata !6686, metadata !DIExpression()), !dbg !6687
  store float 0x3FAABCEF80000000, float* %qfac2, align 4, !dbg !6687
  call void @llvm.dbg.declare(metadata float* %rij_h, metadata !6688, metadata !DIExpression()), !dbg !6689
  %20 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6690
  %radius = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %20, i32 0, i32 0, !dbg !6691
  %21 = load float, float* %radius, align 4, !dbg !6691
  %22 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6692
  %flag6 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %22, i32 0, i32 13, !dbg !6693
  %23 = load i32, i32* %flag6, align 4, !dbg !6693
  %and7 = and i32 %23, 16, !dbg !6694
  %tobool8 = icmp ne i32 %and7, 0, !dbg !6694
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !6692

cond.true:                                        ; preds = %entry
  %24 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6695
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %24, i32 0, i32 13, !dbg !6696
  %25 = load float, float* %size, align 4, !dbg !6696
  %mul9 = fmul float 4.000000e+00, %25, !dbg !6697
  br label %cond.end, !dbg !6692

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6692

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond10 = phi float [ %mul9, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !6692
  %mul11 = fmul float %21, %cond10, !dbg !6698
  store float %mul11, float* %interaction_radius, align 4, !dbg !6699
  %26 = load float, float* %interaction_radius, align 4, !dbg !6700
  %27 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6701
  %hfac = getelementptr inbounds %struct.SPHData, %struct.SPHData* %27, i32 0, i32 5, !dbg !6702
  %28 = load float, float* %hfac, align 8, !dbg !6702
  %mul12 = fmul float %26, %28, !dbg !6703
  store float %mul12, float* %h, align 4, !dbg !6704
  %29 = load float, float* %h, align 4, !dbg !6705
  %div = fdiv float 1.000000e+00, %29, !dbg !6706
  store float %div, float* %hinv, align 4, !dbg !6707
  %30 = load float, float* %h, align 4, !dbg !6708
  %h13 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 5, !dbg !6709
  store float %30, float* %h13, align 8, !dbg !6710
  %31 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6711
  %pa14 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 4, !dbg !6712
  store %struct.ParticleData* %31, %struct.ParticleData** %pa14, align 8, !dbg !6713
  %32 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !6714
  %33 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !6715
  %co15 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %33, i32 0, i32 0, !dbg !6716
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %co15, i64 0, i64 0, !dbg !6715
  %34 = load float, float* %interaction_radius, align 4, !dbg !6717
  call void @sph_evaluate_func(%struct.BVHTree* null, %struct.ParticleSystem** %32, float* %arraydecay16, %struct.SPHRangeData* %pfr, float %34, void (i8*, i32, float)* @sphclassical_neighbour_accum_cb), !dbg !6718
  %35 = load float, float* %stiffness, align 4, !dbg !6719
  %36 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6720
  %sphdensity = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %36, i32 0, i32 14, !dbg !6721
  %37 = load float, float* %sphdensity, align 8, !dbg !6721
  %38 = load float, float* %rest_density, align 4, !dbg !6722
  %div17 = fdiv float %37, %38, !dbg !6723
  %call18 = call float @pow7(float %div17), !dbg !6724
  %sub = fsub float %call18, 1.000000e+00, !dbg !6725
  %mul19 = fmul float %35, %sub, !dbg !6726
  store float %mul19, float* %pressure, align 4, !dbg !6727
  %39 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6728
  %mass = getelementptr inbounds %struct.SPHData, %struct.SPHData* %39, i32 0, i32 2, !dbg !6729
  %40 = load float, float* %mass, align 8, !dbg !6729
  %h20 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 5, !dbg !6730
  %41 = load float, float* %h20, align 8, !dbg !6730
  %call21 = call float @pow3(float %41), !dbg !6731
  %div22 = fdiv float %40, %call21, !dbg !6732
  %42 = load float, float* %qfac2, align 4, !dbg !6733
  %mul23 = fmul float %42, %div22, !dbg !6733
  store float %mul23, float* %qfac2, align 4, !dbg !6733
  %neighbors = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 0, !dbg !6734
  %arraydecay24 = getelementptr inbounds [512 x %struct.SPHNeighbor], [512 x %struct.SPHNeighbor]* %neighbors, i64 0, i64 0, !dbg !6735
  store %struct.SPHNeighbor* %arraydecay24, %struct.SPHNeighbor** %pfn, align 8, !dbg !6736
  store i32 0, i32* %i, align 4, !dbg !6737
  br label %for.cond, !dbg !6739

for.cond:                                         ; preds = %for.inc, %cond.end
  %43 = load i32, i32* %i, align 4, !dbg !6740
  %tot_neighbors = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 1, !dbg !6742
  %44 = load i32, i32* %tot_neighbors, align 8, !dbg !6742
  %cmp = icmp slt i32 %43, %44, !dbg !6743
  br i1 %cmp, label %for.body, label %for.end, !dbg !6744

for.body:                                         ; preds = %for.cond
  %45 = load %struct.SPHNeighbor*, %struct.SPHNeighbor** %pfn, align 8, !dbg !6745
  %psys25 = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %45, i32 0, i32 0, !dbg !6747
  %46 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys25, align 8, !dbg !6747
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %46, i32 0, i32 3, !dbg !6748
  %47 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !6748
  %48 = load %struct.SPHNeighbor*, %struct.SPHNeighbor** %pfn, align 8, !dbg !6749
  %index = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %48, i32 0, i32 1, !dbg !6750
  %49 = load i32, i32* %index, align 8, !dbg !6750
  %idx.ext = sext i32 %49 to i64, !dbg !6751
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %47, i64 %idx.ext, !dbg !6751
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %npa, align 8, !dbg !6752
  %50 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6753
  %51 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6755
  %cmp26 = icmp eq %struct.ParticleData* %50, %51, !dbg !6756
  br i1 %cmp26, label %if.then, label %if.end, !dbg !6757

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !6758

if.end:                                           ; preds = %for.body
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6760
  %52 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6761
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %52, i32 0, i32 1, !dbg !6762
  %co28 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 0, !dbg !6763
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %co28, i64 0, i64 0, !dbg !6761
  %53 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6764
  %prev_state30 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %53, i32 0, i32 1, !dbg !6765
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state30, i32 0, i32 1, !dbg !6766
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !6764
  %54 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !6767
  %time = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %54, i32 0, i32 4, !dbg !6768
  %55 = load float, float* %time, align 4, !dbg !6768
  call void @madd_v3_v3v3fl(float* %arraydecay27, float* %arraydecay29, float* %arraydecay31, float %55), !dbg !6769
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6770
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6771
  %56 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !6772
  %co34 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %56, i32 0, i32 0, !dbg !6773
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %co34, i64 0, i64 0, !dbg !6772
  call void @sub_v3_v3v3(float* %arraydecay32, float* %arraydecay33, float* %arraydecay35), !dbg !6774
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6775
  %call37 = call float @normalize_v3(float* %arraydecay36), !dbg !6776
  store float %call37, float* %rij, align 4, !dbg !6777
  %57 = load float, float* %rij, align 4, !dbg !6778
  %h38 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 5, !dbg !6779
  %58 = load float, float* %h38, align 8, !dbg !6779
  %div39 = fdiv float %57, %58, !dbg !6780
  store float %div39, float* %rij_h, align 4, !dbg !6781
  %59 = load float, float* %rij_h, align 4, !dbg !6782
  %cmp40 = fcmp ogt float %59, 2.000000e+00, !dbg !6784
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !6785

if.then41:                                        ; preds = %if.end
  br label %for.inc, !dbg !6786

if.end42:                                         ; preds = %if.end
  %60 = load float, float* %stiffness, align 4, !dbg !6787
  %61 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6788
  %sphdensity43 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %61, i32 0, i32 14, !dbg !6789
  %62 = load float, float* %sphdensity43, align 8, !dbg !6789
  %63 = load float, float* %rest_density, align 4, !dbg !6790
  %div44 = fdiv float %62, %63, !dbg !6791
  %call45 = call float @pow7(float %div44), !dbg !6792
  %sub46 = fsub float %call45, 1.000000e+00, !dbg !6793
  %mul47 = fmul float %60, %sub46, !dbg !6794
  store float %mul47, float* %npressure, align 4, !dbg !6795
  %64 = load float, float* %qfac2, align 4, !dbg !6796
  %65 = load float, float* %rij_h, align 4, !dbg !6797
  %sub48 = fsub float 2.000000e+00, %65, !dbg !6798
  %call49 = call float @pow4(float %sub48), !dbg !6799
  %mul50 = fmul float 2.000000e+00, %call49, !dbg !6800
  %66 = load float, float* %rij_h, align 4, !dbg !6801
  %sub51 = fsub float 2.000000e+00, %66, !dbg !6802
  %call52 = call float @pow3(float %sub51), !dbg !6803
  %mul53 = fmul float 4.000000e+00, %call52, !dbg !6804
  %67 = load float, float* %rij_h, align 4, !dbg !6805
  %mul54 = fmul float 2.000000e+00, %67, !dbg !6806
  %add = fadd float 1.000000e+00, %mul54, !dbg !6807
  %mul55 = fmul float %mul53, %add, !dbg !6808
  %sub56 = fsub float %mul50, %mul55, !dbg !6809
  %mul57 = fmul float %64, %sub56, !dbg !6810
  store float %mul57, float* %dq, align 4, !dbg !6811
  %68 = load %struct.SPHNeighbor*, %struct.SPHNeighbor** %pfn, align 8, !dbg !6812
  %psys58 = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %68, i32 0, i32 0, !dbg !6814
  %69 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys58, align 8, !dbg !6814
  %part59 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %69, i32 0, i32 2, !dbg !6815
  %70 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part59, align 8, !dbg !6815
  %flag60 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %70, i32 0, i32 5, !dbg !6816
  %71 = load i32, i32* %flag60, align 8, !dbg !6816
  %and61 = and i32 %71, 65536, !dbg !6817
  %tobool62 = icmp ne i32 %and61, 0, !dbg !6817
  br i1 %tobool62, label %if.then63, label %if.end66, !dbg !6818

if.then63:                                        ; preds = %if.end42
  %72 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6819
  %size64 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %72, i32 0, i32 13, !dbg !6820
  %73 = load float, float* %size64, align 4, !dbg !6820
  %74 = load float, float* %dq, align 4, !dbg !6821
  %mul65 = fmul float %74, %73, !dbg !6821
  store float %mul65, float* %dq, align 4, !dbg !6821
  br label %if.end66, !dbg !6822

if.end66:                                         ; preds = %if.then63, %if.end42
  %75 = load float, float* %pressure, align 4, !dbg !6823
  %76 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6824
  %sphdensity67 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %76, i32 0, i32 14, !dbg !6825
  %77 = load float, float* %sphdensity67, align 8, !dbg !6825
  %call68 = call float @pow2(float %77), !dbg !6826
  %div69 = fdiv float %75, %call68, !dbg !6827
  %78 = load float, float* %npressure, align 4, !dbg !6828
  %79 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6829
  %sphdensity70 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %79, i32 0, i32 14, !dbg !6830
  %80 = load float, float* %sphdensity70, align 8, !dbg !6830
  %call71 = call float @pow2(float %80), !dbg !6831
  %div72 = fdiv float %78, %call71, !dbg !6832
  %add73 = fadd float %div69, %div72, !dbg !6833
  store float %add73, float* %pressureTerm, align 4, !dbg !6834
  %81 = load float*, float** %force.addr, align 8, !dbg !6835
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6836
  %82 = load float, float* %pressureTerm, align 4, !dbg !6837
  %83 = load float, float* %dq, align 4, !dbg !6838
  %mul75 = fmul float %82, %83, !dbg !6839
  call void @madd_v3_v3fl(float* %81, float* %arraydecay74, float %mul75), !dbg !6840
  %84 = load float, float* %visc, align 4, !dbg !6841
  %cmp76 = fcmp ogt float %84, 0.000000e+00, !dbg !6843
  br i1 %cmp76, label %if.then77, label %if.end98, !dbg !6844

if.then77:                                        ; preds = %if.end66
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 0, !dbg !6845
  %85 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6847
  %prev_state79 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %85, i32 0, i32 1, !dbg !6848
  %vel80 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state79, i32 0, i32 1, !dbg !6849
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %vel80, i64 0, i64 0, !dbg !6847
  %86 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6850
  %prev_state82 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %86, i32 0, i32 1, !dbg !6851
  %vel83 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state82, i32 0, i32 1, !dbg !6852
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %vel83, i64 0, i64 0, !dbg !6850
  call void @sub_v3_v3v3(float* %arraydecay78, float* %arraydecay81, float* %arraydecay84), !dbg !6853
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6854
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %dv, i64 0, i64 0, !dbg !6855
  %call87 = call float @dot_v3v3(float* %arraydecay85, float* %arraydecay86), !dbg !6856
  store float %call87, float* %u, align 4, !dbg !6857
  %87 = load float, float* %dq, align 4, !dbg !6858
  %fneg = fneg float %87, !dbg !6859
  %88 = load float, float* %hinv, align 4, !dbg !6860
  %mul88 = fmul float %fneg, %88, !dbg !6861
  %89 = load float, float* %visc, align 4, !dbg !6862
  %mul89 = fmul float %mul88, %89, !dbg !6863
  %90 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6864
  %sphdensity90 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %90, i32 0, i32 14, !dbg !6865
  %91 = load float, float* %sphdensity90, align 8, !dbg !6865
  %mul91 = fmul float 5.000000e-01, %91, !dbg !6866
  %92 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6867
  %sphdensity92 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %92, i32 0, i32 14, !dbg !6868
  %93 = load float, float* %sphdensity92, align 8, !dbg !6868
  %mul93 = fmul float 5.000000e-01, %93, !dbg !6869
  %add94 = fadd float %mul91, %mul93, !dbg !6870
  %div95 = fdiv float %mul89, %add94, !dbg !6871
  %94 = load float, float* %u, align 4, !dbg !6872
  %mul96 = fmul float %94, %div95, !dbg !6872
  store float %mul96, float* %u, align 4, !dbg !6872
  %95 = load float*, float** %force.addr, align 8, !dbg !6873
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6874
  %96 = load float, float* %u, align 4, !dbg !6875
  call void @madd_v3_v3fl(float* %95, float* %arraydecay97, float %96), !dbg !6876
  br label %if.end98, !dbg !6877

if.end98:                                         ; preds = %if.then77, %if.end66
  br label %for.inc, !dbg !6878

for.inc:                                          ; preds = %if.end98, %if.then41, %if.then
  %97 = load i32, i32* %i, align 4, !dbg !6879
  %inc = add nsw i32 %97, 1, !dbg !6879
  store i32 %inc, i32* %i, align 4, !dbg !6879
  %98 = load %struct.SPHNeighbor*, %struct.SPHNeighbor** %pfn, align 8, !dbg !6880
  %incdec.ptr = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %98, i32 1, !dbg !6880
  store %struct.SPHNeighbor* %incdec.ptr, %struct.SPHNeighbor** %pfn, align 8, !dbg !6880
  br label %for.cond, !dbg !6881, !llvm.loop !6882

for.end:                                          ; preds = %for.cond
  %99 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6884
  %buoyancy = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %99, i32 0, i32 12, !dbg !6886
  %100 = load float, float* %buoyancy, align 4, !dbg !6886
  %cmp99 = fcmp ogt float %100, 0.000000e+00, !dbg !6887
  br i1 %cmp99, label %land.lhs.true, label %if.end106, !dbg !6888

land.lhs.true:                                    ; preds = %for.end
  %101 = load float*, float** %gravity, align 8, !dbg !6889
  %tobool100 = icmp ne float* %101, null, !dbg !6889
  br i1 %tobool100, label %if.then101, label %if.end106, !dbg !6890

if.then101:                                       ; preds = %land.lhs.true
  %102 = load float*, float** %force.addr, align 8, !dbg !6891
  %103 = load float*, float** %gravity, align 8, !dbg !6892
  %104 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !6893
  %buoyancy102 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %104, i32 0, i32 12, !dbg !6894
  %105 = load float, float* %buoyancy102, align 4, !dbg !6894
  %106 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6895
  %sphdensity103 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %106, i32 0, i32 14, !dbg !6896
  %107 = load float, float* %sphdensity103, align 8, !dbg !6896
  %108 = load float, float* %rest_density, align 4, !dbg !6897
  %sub104 = fsub float %107, %108, !dbg !6898
  %mul105 = fmul float %105, %sub104, !dbg !6899
  call void @madd_v3_v3fl(float* %102, float* %103, float %mul105), !dbg !6900
  br label %if.end106, !dbg !6900

if.end106:                                        ; preds = %if.then101, %land.lhs.true, %for.end
  %109 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6901
  %pass = getelementptr inbounds %struct.SPHData, %struct.SPHData* %109, i32 0, i32 6, !dbg !6903
  %110 = load i32, i32* %pass, align 4, !dbg !6903
  %cmp107 = icmp eq i32 %110, 0, !dbg !6904
  br i1 %cmp107, label %land.lhs.true108, label %if.end114, !dbg !6905

land.lhs.true108:                                 ; preds = %if.end106
  %111 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !6906
  %arrayidx109 = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %111, i64 0, !dbg !6906
  %112 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx109, align 8, !dbg !6906
  %part110 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %112, i32 0, i32 2, !dbg !6907
  %113 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part110, align 8, !dbg !6907
  %time_flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %113, i32 0, i32 67, !dbg !6908
  %114 = load i16, i16* %time_flag, align 4, !dbg !6908
  %conv = sext i16 %114 to i32, !dbg !6906
  %and111 = and i32 %conv, 1, !dbg !6909
  %tobool112 = icmp ne i32 %and111, 0, !dbg !6909
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !6910

if.then113:                                       ; preds = %land.lhs.true108
  %115 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6911
  call void @sph_particle_courant(%struct.SPHData* %115, %struct.SPHRangeData* %pfr), !dbg !6912
  br label %if.end114, !dbg !6912

if.end114:                                        ; preds = %if.then113, %land.lhs.true108, %if.end106
  %116 = load %struct.SPHData*, %struct.SPHData** %sphdata, align 8, !dbg !6913
  %pass115 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %116, i32 0, i32 6, !dbg !6914
  %117 = load i32, i32* %pass115, align 4, !dbg !6915
  %inc116 = add nsw i32 %117, 1, !dbg !6915
  store i32 %inc116, i32* %pass115, align 4, !dbg !6915
  ret void, !dbg !6916
}

; Function Attrs: noinline nounwind uwtable
define internal void @sphclassical_density_accum_cb(i8* %userdata, i32 %index, float %UNUSED_squared_dist) #0 !dbg !6917 {
entry:
  %userdata.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %UNUSED_squared_dist.addr = alloca float, align 4
  %pfr = alloca %struct.SPHRangeData*, align 8
  %npa = alloca %struct.ParticleData*, align 8
  %q = alloca float, align 4
  %qfac = alloca float, align 4
  %rij = alloca float, align 4
  %rij_h = alloca float, align 4
  %vec = alloca [3 x float], align 4
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !6918, metadata !DIExpression()), !dbg !6919
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6920, metadata !DIExpression()), !dbg !6921
  store float %UNUSED_squared_dist, float* %UNUSED_squared_dist.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_squared_dist.addr, metadata !6922, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.declare(metadata %struct.SPHRangeData** %pfr, metadata !6924, metadata !DIExpression()), !dbg !6925
  %0 = load i8*, i8** %userdata.addr, align 8, !dbg !6926
  %1 = bitcast i8* %0 to %struct.SPHRangeData*, !dbg !6927
  store %struct.SPHRangeData* %1, %struct.SPHRangeData** %pfr, align 8, !dbg !6925
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %npa, metadata !6928, metadata !DIExpression()), !dbg !6929
  %2 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6930
  %npsys = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %2, i32 0, i32 3, !dbg !6931
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %npsys, align 8, !dbg !6931
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 3, !dbg !6932
  %4 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !6932
  %5 = load i32, i32* %index.addr, align 4, !dbg !6933
  %idx.ext = sext i32 %5 to i64, !dbg !6934
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %4, i64 %idx.ext, !dbg !6934
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %npa, align 8, !dbg !6929
  call void @llvm.dbg.declare(metadata float* %q, metadata !6935, metadata !DIExpression()), !dbg !6936
  call void @llvm.dbg.declare(metadata float* %qfac, metadata !6937, metadata !DIExpression()), !dbg !6938
  store float 0x3F9ABCEF80000000, float* %qfac, align 4, !dbg !6938
  call void @llvm.dbg.declare(metadata float* %rij, metadata !6939, metadata !DIExpression()), !dbg !6940
  call void @llvm.dbg.declare(metadata float* %rij_h, metadata !6941, metadata !DIExpression()), !dbg !6942
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !6943, metadata !DIExpression()), !dbg !6944
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6945
  %6 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !6946
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %6, i32 0, i32 0, !dbg !6947
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !6948
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6946
  %7 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6949
  %pa = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %7, i32 0, i32 4, !dbg !6950
  %8 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !6950
  %state2 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %8, i32 0, i32 0, !dbg !6951
  %co3 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state2, i32 0, i32 0, !dbg !6952
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %co3, i64 0, i64 0, !dbg !6949
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay4), !dbg !6953
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6954
  %call = call float @len_v3(float* %arraydecay5), !dbg !6955
  store float %call, float* %rij, align 4, !dbg !6956
  %9 = load float, float* %rij, align 4, !dbg !6957
  %10 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6958
  %h = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %10, i32 0, i32 5, !dbg !6959
  %11 = load float, float* %h, align 8, !dbg !6959
  %div = fdiv float %9, %11, !dbg !6960
  store float %div, float* %rij_h, align 4, !dbg !6961
  %12 = load float, float* %rij_h, align 4, !dbg !6962
  %cmp = fcmp ogt float %12, 2.000000e+00, !dbg !6964
  br i1 %cmp, label %if.then, label %if.end, !dbg !6965

if.then:                                          ; preds = %entry
  br label %return, !dbg !6966

if.end:                                           ; preds = %entry
  %13 = load float, float* %qfac, align 4, !dbg !6967
  %14 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6968
  %h6 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %14, i32 0, i32 5, !dbg !6969
  %15 = load float, float* %h6, align 8, !dbg !6969
  %call7 = call float @pow3(float %15), !dbg !6970
  %div8 = fdiv float %13, %call7, !dbg !6971
  %16 = load float, float* %rij_h, align 4, !dbg !6972
  %sub = fsub float 2.000000e+00, %16, !dbg !6973
  %call9 = call float @pow4(float %sub), !dbg !6974
  %mul = fmul float %div8, %call9, !dbg !6975
  %17 = load float, float* %rij_h, align 4, !dbg !6976
  %mul10 = fmul float 2.000000e+00, %17, !dbg !6977
  %add = fadd float 1.000000e+00, %mul10, !dbg !6978
  %mul11 = fmul float %mul, %add, !dbg !6979
  store float %mul11, float* %q, align 4, !dbg !6980
  %18 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6981
  %npsys12 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %18, i32 0, i32 3, !dbg !6982
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %npsys12, align 8, !dbg !6982
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %19, i32 0, i32 2, !dbg !6983
  %20 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !6983
  %mass = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %20, i32 0, i32 81, !dbg !6984
  %21 = load float, float* %mass, align 4, !dbg !6984
  %22 = load float, float* %q, align 4, !dbg !6985
  %mul13 = fmul float %22, %21, !dbg !6985
  store float %mul13, float* %q, align 4, !dbg !6985
  %23 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6986
  %use_size = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %23, i32 0, i32 8, !dbg !6988
  %24 = load i32, i32* %use_size, align 4, !dbg !6988
  %tobool = icmp ne i32 %24, 0, !dbg !6986
  br i1 %tobool, label %if.then14, label %if.end17, !dbg !6989

if.then14:                                        ; preds = %if.end
  %25 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6990
  %pa15 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %25, i32 0, i32 4, !dbg !6991
  %26 = load %struct.ParticleData*, %struct.ParticleData** %pa15, align 8, !dbg !6991
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %26, i32 0, i32 13, !dbg !6992
  %27 = load float, float* %size, align 4, !dbg !6992
  %28 = load float, float* %q, align 4, !dbg !6993
  %mul16 = fmul float %28, %27, !dbg !6993
  store float %mul16, float* %q, align 4, !dbg !6993
  br label %if.end17, !dbg !6994

if.end17:                                         ; preds = %if.then14, %if.end
  %29 = load float, float* %q, align 4, !dbg !6995
  %30 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !6996
  %data = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %30, i32 0, i32 2, !dbg !6997
  %31 = load float*, float** %data, align 8, !dbg !6997
  %arrayidx = getelementptr inbounds float, float* %31, i64 0, !dbg !6996
  %32 = load float, float* %arrayidx, align 4, !dbg !6998
  %add18 = fadd float %32, %29, !dbg !6998
  store float %add18, float* %arrayidx, align 4, !dbg !6998
  %33 = load float, float* %q, align 4, !dbg !6999
  %34 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !7000
  %sphdensity = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %34, i32 0, i32 14, !dbg !7001
  %35 = load float, float* %sphdensity, align 8, !dbg !7001
  %div19 = fdiv float %33, %35, !dbg !7002
  %36 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !7003
  %data20 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %36, i32 0, i32 2, !dbg !7004
  %37 = load float*, float** %data20, align 8, !dbg !7004
  %arrayidx21 = getelementptr inbounds float, float* %37, i64 1, !dbg !7003
  %38 = load float, float* %arrayidx21, align 4, !dbg !7005
  %add22 = fadd float %38, %div19, !dbg !7005
  store float %add22, float* %arrayidx21, align 4, !dbg !7005
  br label %return, !dbg !7006

return:                                           ; preds = %if.end17, %if.then
  ret void, !dbg !7006
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_sph_finalise(%struct.SPHData* %sphdata) #0 !dbg !7007 {
entry:
  %sphdata.addr = alloca %struct.SPHData*, align 8
  store %struct.SPHData* %sphdata, %struct.SPHData** %sphdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SPHData** %sphdata.addr, metadata !7010, metadata !DIExpression()), !dbg !7011
  %0 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !7012
  %eh = getelementptr inbounds %struct.SPHData, %struct.SPHData* %0, i32 0, i32 3, !dbg !7014
  %1 = load %struct.EdgeHash*, %struct.EdgeHash** %eh, align 8, !dbg !7014
  %tobool = icmp ne %struct.EdgeHash* %1, null, !dbg !7012
  br i1 %tobool, label %if.then, label %if.end, !dbg !7015

if.then:                                          ; preds = %entry
  %2 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !7016
  %eh1 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %2, i32 0, i32 3, !dbg !7018
  %3 = load %struct.EdgeHash*, %struct.EdgeHash** %eh1, align 8, !dbg !7018
  call void @BLI_edgehash_free(%struct.EdgeHash* %3, void (i8*)* null), !dbg !7019
  %4 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !7020
  %eh2 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %4, i32 0, i32 3, !dbg !7021
  store %struct.EdgeHash* null, %struct.EdgeHash** %eh2, align 8, !dbg !7022
  br label %if.end, !dbg !7023

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7024
}

declare dso_local void @BLI_edgehash_free(%struct.EdgeHash*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_sph_density(%struct.BVHTree* %tree, %struct.SPHData* %sphdata, float* %co, float* %vars) #0 !dbg !7025 {
entry:
  %tree.addr = alloca %struct.BVHTree*, align 8
  %sphdata.addr = alloca %struct.SPHData*, align 8
  %co.addr = alloca float*, align 8
  %vars.addr = alloca float*, align 8
  %psys = alloca %struct.ParticleSystem**, align 8
  %fluid = alloca %struct.SPHFluidSettings*, align 8
  %interaction_radius = alloca float, align 4
  %pfr = alloca %struct.SPHRangeData, align 8
  %density = alloca [2 x float], align 4
  store %struct.BVHTree* %tree, %struct.BVHTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BVHTree** %tree.addr, metadata !7031, metadata !DIExpression()), !dbg !7032
  store %struct.SPHData* %sphdata, %struct.SPHData** %sphdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SPHData** %sphdata.addr, metadata !7033, metadata !DIExpression()), !dbg !7034
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7035, metadata !DIExpression()), !dbg !7036
  store float* %vars, float** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vars.addr, metadata !7037, metadata !DIExpression()), !dbg !7038
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem*** %psys, metadata !7039, metadata !DIExpression()), !dbg !7040
  %0 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !7041
  %psys1 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %0, i32 0, i32 0, !dbg !7042
  %arraydecay = getelementptr inbounds [10 x %struct.ParticleSystem*], [10 x %struct.ParticleSystem*]* %psys1, i64 0, i64 0, !dbg !7041
  store %struct.ParticleSystem** %arraydecay, %struct.ParticleSystem*** %psys, align 8, !dbg !7040
  call void @llvm.dbg.declare(metadata %struct.SPHFluidSettings** %fluid, metadata !7043, metadata !DIExpression()), !dbg !7044
  %1 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !7045
  %arrayidx = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %1, i64 0, !dbg !7045
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx, align 8, !dbg !7045
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !7046
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7046
  %fluid2 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %3, i32 0, i32 3, !dbg !7047
  %4 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid2, align 8, !dbg !7047
  store %struct.SPHFluidSettings* %4, %struct.SPHFluidSettings** %fluid, align 8, !dbg !7044
  call void @llvm.dbg.declare(metadata float* %interaction_radius, metadata !7048, metadata !DIExpression()), !dbg !7049
  %5 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !7050
  %radius = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %5, i32 0, i32 0, !dbg !7051
  %6 = load float, float* %radius, align 4, !dbg !7051
  %7 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !7052
  %flag = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %7, i32 0, i32 13, !dbg !7053
  %8 = load i32, i32* %flag, align 4, !dbg !7053
  %and = and i32 %8, 16, !dbg !7054
  %tobool = icmp ne i32 %and, 0, !dbg !7054
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7052

cond.true:                                        ; preds = %entry
  %9 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !7055
  %arrayidx3 = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %9, i64 0, !dbg !7055
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx3, align 8, !dbg !7055
  %part4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 2, !dbg !7056
  %11 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part4, align 8, !dbg !7056
  %size = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %11, i32 0, i32 82, !dbg !7057
  %12 = load float, float* %size, align 8, !dbg !7057
  %mul = fmul float 4.000000e+00, %12, !dbg !7058
  br label %cond.end, !dbg !7052

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7052

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !7052
  %mul5 = fmul float %6, %cond, !dbg !7059
  store float %mul5, float* %interaction_radius, align 4, !dbg !7049
  call void @llvm.dbg.declare(metadata %struct.SPHRangeData* %pfr, metadata !7060, metadata !DIExpression()), !dbg !7061
  call void @llvm.dbg.declare(metadata [2 x float]* %density, metadata !7062, metadata !DIExpression()), !dbg !7063
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %density, i64 0, i64 1, !dbg !7064
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !7065
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %density, i64 0, i64 0, !dbg !7066
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !7067
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %density, i64 0, i64 0, !dbg !7068
  %data = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 2, !dbg !7069
  store float* %arraydecay8, float** %data, align 8, !dbg !7070
  %13 = load float, float* %interaction_radius, align 4, !dbg !7071
  %14 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !7072
  %hfac = getelementptr inbounds %struct.SPHData, %struct.SPHData* %14, i32 0, i32 5, !dbg !7073
  %15 = load float, float* %hfac, align 8, !dbg !7073
  %mul9 = fmul float %13, %15, !dbg !7074
  %h = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 5, !dbg !7075
  store float %mul9, float* %h, align 8, !dbg !7076
  %16 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !7077
  %mass = getelementptr inbounds %struct.SPHData, %struct.SPHData* %16, i32 0, i32 2, !dbg !7078
  %17 = load float, float* %mass, align 8, !dbg !7078
  %mass10 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 6, !dbg !7079
  store float %17, float* %mass10, align 4, !dbg !7080
  %18 = load %struct.BVHTree*, %struct.BVHTree** %tree.addr, align 8, !dbg !7081
  %19 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !7082
  %20 = load float*, float** %co.addr, align 8, !dbg !7083
  %21 = load float, float* %interaction_radius, align 4, !dbg !7084
  %22 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !7085
  %density_cb = getelementptr inbounds %struct.SPHData, %struct.SPHData* %22, i32 0, i32 10, !dbg !7086
  %23 = load void (i8*, i32, float)*, void (i8*, i32, float)** %density_cb, align 8, !dbg !7086
  call void @sph_evaluate_func(%struct.BVHTree* %18, %struct.ParticleSystem** %19, float* %20, %struct.SPHRangeData* %pfr, float %21, void (i8*, i32, float)* %23), !dbg !7087
  %data11 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 2, !dbg !7088
  %24 = load float*, float** %data11, align 8, !dbg !7088
  %arrayidx12 = getelementptr inbounds float, float* %24, i64 0, !dbg !7089
  %25 = load float, float* %arrayidx12, align 4, !dbg !7089
  %26 = load float*, float** %vars.addr, align 8, !dbg !7090
  %arrayidx13 = getelementptr inbounds float, float* %26, i64 0, !dbg !7090
  store float %25, float* %arrayidx13, align 4, !dbg !7091
  %data14 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 2, !dbg !7092
  %27 = load float*, float** %data14, align 8, !dbg !7092
  %arrayidx15 = getelementptr inbounds float, float* %27, i64 1, !dbg !7093
  %28 = load float, float* %arrayidx15, align 4, !dbg !7093
  %29 = load float*, float** %vars.addr, align 8, !dbg !7094
  %arrayidx16 = getelementptr inbounds float, float* %29, i64 1, !dbg !7094
  store float %28, float* %arrayidx16, align 4, !dbg !7095
  ret void, !dbg !7096
}

; Function Attrs: noinline nounwind uwtable
define internal void @sph_evaluate_func(%struct.BVHTree* %tree, %struct.ParticleSystem** %psys, float* %co, %struct.SPHRangeData* %pfr, float %interaction_radius, void (i8*, i32, float)* %callback) #0 !dbg !7097 {
entry:
  %tree.addr = alloca %struct.BVHTree*, align 8
  %psys.addr = alloca %struct.ParticleSystem**, align 8
  %co.addr = alloca float*, align 8
  %pfr.addr = alloca %struct.SPHRangeData*, align 8
  %interaction_radius.addr = alloca float, align 4
  %callback.addr = alloca void (i8*, i32, float)*, align 8
  %i = alloca i32, align 4
  store %struct.BVHTree* %tree, %struct.BVHTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BVHTree** %tree.addr, metadata !7101, metadata !DIExpression()), !dbg !7102
  store %struct.ParticleSystem** %psys, %struct.ParticleSystem*** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem*** %psys.addr, metadata !7103, metadata !DIExpression()), !dbg !7104
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7105, metadata !DIExpression()), !dbg !7106
  store %struct.SPHRangeData* %pfr, %struct.SPHRangeData** %pfr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SPHRangeData** %pfr.addr, metadata !7107, metadata !DIExpression()), !dbg !7108
  store float %interaction_radius, float* %interaction_radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %interaction_radius.addr, metadata !7109, metadata !DIExpression()), !dbg !7110
  store void (i8*, i32, float)* %callback, void (i8*, i32, float)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, float)** %callback.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7113, metadata !DIExpression()), !dbg !7114
  %0 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !7115
  %tot_neighbors = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %0, i32 0, i32 1, !dbg !7116
  store i32 0, i32* %tot_neighbors, align 8, !dbg !7117
  store i32 0, i32* %i, align 4, !dbg !7118
  br label %for.cond, !dbg !7120

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !7121
  %cmp = icmp slt i32 %1, 10, !dbg !7123
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7124

land.rhs:                                         ; preds = %for.cond
  %2 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys.addr, align 8, !dbg !7125
  %3 = load i32, i32* %i, align 4, !dbg !7126
  %idxprom = sext i32 %3 to i64, !dbg !7125
  %arrayidx = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %2, i64 %idxprom, !dbg !7125
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx, align 8, !dbg !7125
  %tobool = icmp ne %struct.ParticleSystem* %4, null, !dbg !7124
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ], !dbg !7127
  br i1 %5, label %for.body, label %for.end, !dbg !7128

for.body:                                         ; preds = %land.end
  %6 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys.addr, align 8, !dbg !7129
  %7 = load i32, i32* %i, align 4, !dbg !7131
  %idxprom1 = sext i32 %7 to i64, !dbg !7129
  %arrayidx2 = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %6, i64 %idxprom1, !dbg !7129
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx2, align 8, !dbg !7129
  %9 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !7132
  %npsys = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %9, i32 0, i32 3, !dbg !7133
  store %struct.ParticleSystem* %8, %struct.ParticleSystem** %npsys, align 8, !dbg !7134
  %10 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys.addr, align 8, !dbg !7135
  %11 = load i32, i32* %i, align 4, !dbg !7136
  %idxprom3 = sext i32 %11 to i64, !dbg !7135
  %arrayidx4 = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %10, i64 %idxprom3, !dbg !7135
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx4, align 8, !dbg !7135
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %12, i32 0, i32 2, !dbg !7137
  %13 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7137
  %mass = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %13, i32 0, i32 81, !dbg !7138
  %14 = load float, float* %mass, align 4, !dbg !7138
  %15 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !7139
  %mass5 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %15, i32 0, i32 6, !dbg !7140
  %16 = load float, float* %mass5, align 4, !dbg !7140
  %div = fdiv float %14, %16, !dbg !7141
  %17 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !7142
  %massfac = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %17, i32 0, i32 7, !dbg !7143
  store float %div, float* %massfac, align 8, !dbg !7144
  %18 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys.addr, align 8, !dbg !7145
  %19 = load i32, i32* %i, align 4, !dbg !7146
  %idxprom6 = sext i32 %19 to i64, !dbg !7145
  %arrayidx7 = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %18, i64 %idxprom6, !dbg !7145
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx7, align 8, !dbg !7145
  %part8 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 2, !dbg !7147
  %21 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part8, align 8, !dbg !7147
  %flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %21, i32 0, i32 5, !dbg !7148
  %22 = load i32, i32* %flag, align 8, !dbg !7148
  %and = and i32 %22, 65536, !dbg !7149
  %23 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !7150
  %use_size = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %23, i32 0, i32 8, !dbg !7151
  store i32 %and, i32* %use_size, align 4, !dbg !7152
  %24 = load %struct.BVHTree*, %struct.BVHTree** %tree.addr, align 8, !dbg !7153
  %tobool9 = icmp ne %struct.BVHTree* %24, null, !dbg !7153
  br i1 %tobool9, label %if.then, label %if.else, !dbg !7155

if.then:                                          ; preds = %for.body
  %25 = load %struct.BVHTree*, %struct.BVHTree** %tree.addr, align 8, !dbg !7156
  %26 = load float*, float** %co.addr, align 8, !dbg !7158
  %27 = load float, float* %interaction_radius.addr, align 4, !dbg !7159
  %28 = load void (i8*, i32, float)*, void (i8*, i32, float)** %callback.addr, align 8, !dbg !7160
  %29 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !7161
  %30 = bitcast %struct.SPHRangeData* %29 to i8*, !dbg !7161
  %call = call i32 @BLI_bvhtree_range_query(%struct.BVHTree* %25, float* %26, float %27, void (i8*, i32, float)* %28, i8* %30), !dbg !7162
  br label %for.end, !dbg !7163

if.else:                                          ; preds = %for.body
  call void @BLI_rw_mutex_lock(i32* @psys_bvhtree_rwlock, i32 1), !dbg !7164
  %31 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys.addr, align 8, !dbg !7166
  %32 = load i32, i32* %i, align 4, !dbg !7167
  %idxprom10 = sext i32 %32 to i64, !dbg !7166
  %arrayidx11 = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %31, i64 %idxprom10, !dbg !7166
  %33 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx11, align 8, !dbg !7166
  %bvhtree = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %33, i32 0, i32 47, !dbg !7168
  %34 = load %struct.BVHTree*, %struct.BVHTree** %bvhtree, align 8, !dbg !7168
  %35 = load float*, float** %co.addr, align 8, !dbg !7169
  %36 = load float, float* %interaction_radius.addr, align 4, !dbg !7170
  %37 = load void (i8*, i32, float)*, void (i8*, i32, float)** %callback.addr, align 8, !dbg !7171
  %38 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !7172
  %39 = bitcast %struct.SPHRangeData* %38 to i8*, !dbg !7172
  %call12 = call i32 @BLI_bvhtree_range_query(%struct.BVHTree* %34, float* %35, float %36, void (i8*, i32, float)* %37, i8* %39), !dbg !7173
  call void @BLI_rw_mutex_unlock(i32* @psys_bvhtree_rwlock), !dbg !7174
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %for.inc, !dbg !7175

for.inc:                                          ; preds = %if.end
  %40 = load i32, i32* %i, align 4, !dbg !7176
  %inc = add nsw i32 %40, 1, !dbg !7176
  store i32 %inc, i32* %i, align 4, !dbg !7176
  br label %for.cond, !dbg !7177, !llvm.loop !7178

for.end:                                          ; preds = %if.then, %land.end
  ret void, !dbg !7180
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_psys_collision_neartest_cb(i8* %userdata, i32 %index, %struct.BVHTreeRay* %ray, %struct.BVHTreeRayHit* %hit) #0 !dbg !7181 {
entry:
  %userdata.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %ray.addr = alloca %struct.BVHTreeRay*, align 8
  %hit.addr = alloca %struct.BVHTreeRayHit*, align 8
  %col = alloca %struct.ParticleCollision*, align 8
  %pce = alloca %struct.ParticleCollisionElement, align 8
  %face = alloca %struct.MFace*, align 8
  %x = alloca %struct.MVert*, align 8
  %v = alloca %struct.MVert*, align 8
  %t = alloca float, align 4
  %collision = alloca i32, align 4
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !7201, metadata !DIExpression()), !dbg !7202
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7203, metadata !DIExpression()), !dbg !7204
  store %struct.BVHTreeRay* %ray, %struct.BVHTreeRay** %ray.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BVHTreeRay** %ray.addr, metadata !7205, metadata !DIExpression()), !dbg !7206
  store %struct.BVHTreeRayHit* %hit, %struct.BVHTreeRayHit** %hit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BVHTreeRayHit** %hit.addr, metadata !7207, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.declare(metadata %struct.ParticleCollision** %col, metadata !7209, metadata !DIExpression()), !dbg !7210
  %0 = load i8*, i8** %userdata.addr, align 8, !dbg !7211
  %1 = bitcast i8* %0 to %struct.ParticleCollision*, !dbg !7212
  store %struct.ParticleCollision* %1, %struct.ParticleCollision** %col, align 8, !dbg !7210
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement* %pce, metadata !7213, metadata !DIExpression()), !dbg !7214
  call void @llvm.dbg.declare(metadata %struct.MFace** %face, metadata !7215, metadata !DIExpression()), !dbg !7218
  %2 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7219
  %md = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %2, i32 0, i32 5, !dbg !7220
  %3 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %md, align 8, !dbg !7220
  %mfaces = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %3, i32 0, i32 7, !dbg !7221
  %4 = load %struct.MFace*, %struct.MFace** %mfaces, align 8, !dbg !7221
  %5 = load i32, i32* %index.addr, align 4, !dbg !7222
  %idx.ext = sext i32 %5 to i64, !dbg !7223
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %4, i64 %idx.ext, !dbg !7223
  store %struct.MFace* %add.ptr, %struct.MFace** %face, align 8, !dbg !7218
  call void @llvm.dbg.declare(metadata %struct.MVert** %x, metadata !7224, metadata !DIExpression()), !dbg !7225
  %6 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7226
  %md1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %6, i32 0, i32 5, !dbg !7227
  %7 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %md1, align 8, !dbg !7227
  %x2 = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %7, i32 0, i32 1, !dbg !7228
  %8 = load %struct.MVert*, %struct.MVert** %x2, align 8, !dbg !7228
  store %struct.MVert* %8, %struct.MVert** %x, align 8, !dbg !7225
  call void @llvm.dbg.declare(metadata %struct.MVert** %v, metadata !7229, metadata !DIExpression()), !dbg !7230
  %9 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7231
  %md3 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %9, i32 0, i32 5, !dbg !7232
  %10 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %md3, align 8, !dbg !7232
  %current_v = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %10, i32 0, i32 6, !dbg !7233
  %11 = load %struct.MVert*, %struct.MVert** %current_v, align 8, !dbg !7233
  store %struct.MVert* %11, %struct.MVert** %v, align 8, !dbg !7230
  call void @llvm.dbg.declare(metadata float* %t, metadata !7234, metadata !DIExpression()), !dbg !7235
  %12 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !7236
  %dist = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %12, i32 0, i32 3, !dbg !7237
  %13 = load float, float* %dist, align 4, !dbg !7237
  %14 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7238
  %original_ray_length = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %14, i32 0, i32 11, !dbg !7239
  %15 = load float, float* %original_ray_length, align 4, !dbg !7239
  %div = fdiv float %13, %15, !dbg !7240
  store float %div, float* %t, align 4, !dbg !7235
  call void @llvm.dbg.declare(metadata i32* %collision, metadata !7241, metadata !DIExpression()), !dbg !7242
  store i32 0, i32* %collision, align 4, !dbg !7242
  %16 = load %struct.MVert*, %struct.MVert** %x, align 8, !dbg !7243
  %17 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !7244
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %17, i32 0, i32 0, !dbg !7245
  %18 = load i32, i32* %v1, align 4, !dbg !7245
  %idxprom = zext i32 %18 to i64, !dbg !7243
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %16, i64 %idxprom, !dbg !7243
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !7246
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7243
  %x4 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 0, !dbg !7247
  %arrayidx5 = getelementptr inbounds [4 x float*], [4 x float*]* %x4, i64 0, i64 0, !dbg !7248
  store float* %arraydecay, float** %arrayidx5, align 8, !dbg !7249
  %19 = load %struct.MVert*, %struct.MVert** %x, align 8, !dbg !7250
  %20 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !7251
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %20, i32 0, i32 1, !dbg !7252
  %21 = load i32, i32* %v2, align 4, !dbg !7252
  %idxprom6 = zext i32 %21 to i64, !dbg !7250
  %arrayidx7 = getelementptr inbounds %struct.MVert, %struct.MVert* %19, i64 %idxprom6, !dbg !7250
  %co8 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx7, i32 0, i32 0, !dbg !7253
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %co8, i64 0, i64 0, !dbg !7250
  %x10 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 0, !dbg !7254
  %arrayidx11 = getelementptr inbounds [4 x float*], [4 x float*]* %x10, i64 0, i64 1, !dbg !7255
  store float* %arraydecay9, float** %arrayidx11, align 8, !dbg !7256
  %22 = load %struct.MVert*, %struct.MVert** %x, align 8, !dbg !7257
  %23 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !7258
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %23, i32 0, i32 2, !dbg !7259
  %24 = load i32, i32* %v3, align 4, !dbg !7259
  %idxprom12 = zext i32 %24 to i64, !dbg !7257
  %arrayidx13 = getelementptr inbounds %struct.MVert, %struct.MVert* %22, i64 %idxprom12, !dbg !7257
  %co14 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx13, i32 0, i32 0, !dbg !7260
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !7257
  %x16 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 0, !dbg !7261
  %arrayidx17 = getelementptr inbounds [4 x float*], [4 x float*]* %x16, i64 0, i64 2, !dbg !7262
  store float* %arraydecay15, float** %arrayidx17, align 8, !dbg !7263
  %25 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !7264
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %25, i32 0, i32 3, !dbg !7265
  %26 = load i32, i32* %v4, align 4, !dbg !7265
  %tobool = icmp ne i32 %26, 0, !dbg !7264
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7264

cond.true:                                        ; preds = %entry
  %27 = load %struct.MVert*, %struct.MVert** %x, align 8, !dbg !7266
  %28 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !7267
  %v418 = getelementptr inbounds %struct.MFace, %struct.MFace* %28, i32 0, i32 3, !dbg !7268
  %29 = load i32, i32* %v418, align 4, !dbg !7268
  %idxprom19 = zext i32 %29 to i64, !dbg !7266
  %arrayidx20 = getelementptr inbounds %struct.MVert, %struct.MVert* %27, i64 %idxprom19, !dbg !7266
  %co21 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx20, i32 0, i32 0, !dbg !7269
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %co21, i64 0, i64 0, !dbg !7266
  br label %cond.end, !dbg !7264

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7264

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay22, %cond.true ], [ null, %cond.false ], !dbg !7264
  %x23 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 0, !dbg !7270
  %arrayidx24 = getelementptr inbounds [4 x float*], [4 x float*]* %x23, i64 0, i64 3, !dbg !7271
  store float* %cond, float** %arrayidx24, align 8, !dbg !7272
  %30 = load %struct.MVert*, %struct.MVert** %v, align 8, !dbg !7273
  %31 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !7274
  %v125 = getelementptr inbounds %struct.MFace, %struct.MFace* %31, i32 0, i32 0, !dbg !7275
  %32 = load i32, i32* %v125, align 4, !dbg !7275
  %idxprom26 = zext i32 %32 to i64, !dbg !7273
  %arrayidx27 = getelementptr inbounds %struct.MVert, %struct.MVert* %30, i64 %idxprom26, !dbg !7273
  %co28 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx27, i32 0, i32 0, !dbg !7276
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %co28, i64 0, i64 0, !dbg !7273
  %v30 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 1, !dbg !7277
  %arrayidx31 = getelementptr inbounds [4 x float*], [4 x float*]* %v30, i64 0, i64 0, !dbg !7278
  store float* %arraydecay29, float** %arrayidx31, align 8, !dbg !7279
  %33 = load %struct.MVert*, %struct.MVert** %v, align 8, !dbg !7280
  %34 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !7281
  %v232 = getelementptr inbounds %struct.MFace, %struct.MFace* %34, i32 0, i32 1, !dbg !7282
  %35 = load i32, i32* %v232, align 4, !dbg !7282
  %idxprom33 = zext i32 %35 to i64, !dbg !7280
  %arrayidx34 = getelementptr inbounds %struct.MVert, %struct.MVert* %33, i64 %idxprom33, !dbg !7280
  %co35 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx34, i32 0, i32 0, !dbg !7283
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %co35, i64 0, i64 0, !dbg !7280
  %v37 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 1, !dbg !7284
  %arrayidx38 = getelementptr inbounds [4 x float*], [4 x float*]* %v37, i64 0, i64 1, !dbg !7285
  store float* %arraydecay36, float** %arrayidx38, align 8, !dbg !7286
  %36 = load %struct.MVert*, %struct.MVert** %v, align 8, !dbg !7287
  %37 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !7288
  %v339 = getelementptr inbounds %struct.MFace, %struct.MFace* %37, i32 0, i32 2, !dbg !7289
  %38 = load i32, i32* %v339, align 4, !dbg !7289
  %idxprom40 = zext i32 %38 to i64, !dbg !7287
  %arrayidx41 = getelementptr inbounds %struct.MVert, %struct.MVert* %36, i64 %idxprom40, !dbg !7287
  %co42 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx41, i32 0, i32 0, !dbg !7290
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %co42, i64 0, i64 0, !dbg !7287
  %v44 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 1, !dbg !7291
  %arrayidx45 = getelementptr inbounds [4 x float*], [4 x float*]* %v44, i64 0, i64 2, !dbg !7292
  store float* %arraydecay43, float** %arrayidx45, align 8, !dbg !7293
  %39 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !7294
  %v446 = getelementptr inbounds %struct.MFace, %struct.MFace* %39, i32 0, i32 3, !dbg !7295
  %40 = load i32, i32* %v446, align 4, !dbg !7295
  %tobool47 = icmp ne i32 %40, 0, !dbg !7294
  br i1 %tobool47, label %cond.true48, label %cond.false54, !dbg !7294

cond.true48:                                      ; preds = %cond.end
  %41 = load %struct.MVert*, %struct.MVert** %v, align 8, !dbg !7296
  %42 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !7297
  %v449 = getelementptr inbounds %struct.MFace, %struct.MFace* %42, i32 0, i32 3, !dbg !7298
  %43 = load i32, i32* %v449, align 4, !dbg !7298
  %idxprom50 = zext i32 %43 to i64, !dbg !7296
  %arrayidx51 = getelementptr inbounds %struct.MVert, %struct.MVert* %41, i64 %idxprom50, !dbg !7296
  %co52 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx51, i32 0, i32 0, !dbg !7299
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %co52, i64 0, i64 0, !dbg !7296
  br label %cond.end55, !dbg !7294

cond.false54:                                     ; preds = %cond.end
  br label %cond.end55, !dbg !7294

cond.end55:                                       ; preds = %cond.false54, %cond.true48
  %cond56 = phi float* [ %arraydecay53, %cond.true48 ], [ null, %cond.false54 ], !dbg !7294
  %v57 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 1, !dbg !7300
  %arrayidx58 = getelementptr inbounds [4 x float*], [4 x float*]* %v57, i64 0, i64 3, !dbg !7301
  store float* %cond56, float** %arrayidx58, align 8, !dbg !7302
  %tot = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 9, !dbg !7303
  store i32 3, i32* %tot, align 8, !dbg !7304
  %inside = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 12, !dbg !7305
  store i16 0, i16* %inside, align 2, !dbg !7306
  %44 = load i32, i32* %index.addr, align 4, !dbg !7307
  %index59 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 10, !dbg !7308
  store i32 %44, i32* %index59, align 4, !dbg !7309
  %45 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7310
  %hit60 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %45, i32 0, i32 1, !dbg !7312
  %46 = load %struct.Object*, %struct.Object** %hit60, align 8, !dbg !7312
  %47 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7313
  %current = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %47, i32 0, i32 0, !dbg !7314
  %48 = load %struct.Object*, %struct.Object** %current, align 8, !dbg !7314
  %cmp = icmp eq %struct.Object* %46, %48, !dbg !7315
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7316

land.lhs.true:                                    ; preds = %cond.end55
  %49 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7317
  %pce61 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %49, i32 0, i32 13, !dbg !7318
  %index62 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce61, i32 0, i32 10, !dbg !7319
  %50 = load i32, i32* %index62, align 4, !dbg !7319
  %51 = load i32, i32* %index.addr, align 4, !dbg !7320
  %cmp63 = icmp eq i32 %50, %51, !dbg !7321
  br i1 %cmp63, label %land.lhs.true64, label %if.end, !dbg !7322

land.lhs.true64:                                  ; preds = %land.lhs.true
  %52 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7323
  %pce65 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %52, i32 0, i32 13, !dbg !7324
  %tot66 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce65, i32 0, i32 9, !dbg !7325
  %53 = load i32, i32* %tot66, align 8, !dbg !7325
  %cmp67 = icmp eq i32 %53, 3, !dbg !7326
  br i1 %cmp67, label %if.then, label %if.end, !dbg !7327

if.then:                                          ; preds = %land.lhs.true64
  br label %do.end, !dbg !7328

if.end:                                           ; preds = %land.lhs.true64, %land.lhs.true, %cond.end55
  br label %do.body, !dbg !7329

do.body:                                          ; preds = %do.cond, %if.end
  %54 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7330
  %55 = load %struct.BVHTreeRay*, %struct.BVHTreeRay** %ray.addr, align 8, !dbg !7332
  %radius = getelementptr inbounds %struct.BVHTreeRay, %struct.BVHTreeRay* %55, i32 0, i32 2, !dbg !7333
  %56 = load float, float* %radius, align 4, !dbg !7333
  %call = call i32 @collision_sphere_to_tri(%struct.ParticleCollision* %54, float %56, %struct.ParticleCollisionElement* %pce, float* %t), !dbg !7334
  store i32 %call, i32* %collision, align 4, !dbg !7335
  %57 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7336
  %pce68 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %57, i32 0, i32 13, !dbg !7338
  %inside69 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce68, i32 0, i32 12, !dbg !7339
  %58 = load i16, i16* %inside69, align 2, !dbg !7339
  %conv = sext i16 %58 to i32, !dbg !7336
  %cmp70 = icmp eq i32 %conv, 0, !dbg !7340
  br i1 %cmp70, label %if.then72, label %if.end78, !dbg !7341

if.then72:                                        ; preds = %do.body
  %59 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7342
  %60 = load %struct.BVHTreeRay*, %struct.BVHTreeRay** %ray.addr, align 8, !dbg !7344
  %radius73 = getelementptr inbounds %struct.BVHTreeRay, %struct.BVHTreeRay* %60, i32 0, i32 2, !dbg !7345
  %61 = load float, float* %radius73, align 4, !dbg !7345
  %call74 = call i32 @collision_sphere_to_edges(%struct.ParticleCollision* %59, float %61, %struct.ParticleCollisionElement* %pce, float* %t), !dbg !7346
  %62 = load i32, i32* %collision, align 4, !dbg !7347
  %add = add nsw i32 %62, %call74, !dbg !7347
  store i32 %add, i32* %collision, align 4, !dbg !7347
  %63 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7348
  %64 = load %struct.BVHTreeRay*, %struct.BVHTreeRay** %ray.addr, align 8, !dbg !7349
  %radius75 = getelementptr inbounds %struct.BVHTreeRay, %struct.BVHTreeRay* %64, i32 0, i32 2, !dbg !7350
  %65 = load float, float* %radius75, align 4, !dbg !7350
  %call76 = call i32 @collision_sphere_to_verts(%struct.ParticleCollision* %63, float %65, %struct.ParticleCollisionElement* %pce, float* %t), !dbg !7351
  %66 = load i32, i32* %collision, align 4, !dbg !7352
  %add77 = add nsw i32 %66, %call76, !dbg !7352
  store i32 %add77, i32* %collision, align 4, !dbg !7352
  br label %if.end78, !dbg !7353

if.end78:                                         ; preds = %if.then72, %do.body
  %67 = load i32, i32* %collision, align 4, !dbg !7354
  %tobool79 = icmp ne i32 %67, 0, !dbg !7354
  br i1 %tobool79, label %if.then80, label %if.end87, !dbg !7356

if.then80:                                        ; preds = %if.end78
  %68 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7357
  %original_ray_length81 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %68, i32 0, i32 11, !dbg !7359
  %69 = load float, float* %original_ray_length81, align 4, !dbg !7359
  %70 = load float, float* %t, align 4, !dbg !7360
  %mul = fmul float %69, %70, !dbg !7361
  %71 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !7362
  %dist82 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %71, i32 0, i32 3, !dbg !7363
  store float %mul, float* %dist82, align 4, !dbg !7364
  %72 = load i32, i32* %index.addr, align 4, !dbg !7365
  %73 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !7366
  %index83 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %73, i32 0, i32 0, !dbg !7367
  store i32 %72, i32* %index83, align 4, !dbg !7368
  %74 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7369
  %pce84 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %74, i32 0, i32 13, !dbg !7370
  call void @collision_point_velocity(%struct.ParticleCollisionElement* %pce84), !dbg !7371
  %75 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7372
  %current85 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %75, i32 0, i32 0, !dbg !7373
  %76 = load %struct.Object*, %struct.Object** %current85, align 8, !dbg !7373
  %77 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col, align 8, !dbg !7374
  %hit86 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %77, i32 0, i32 1, !dbg !7375
  store %struct.Object* %76, %struct.Object** %hit86, align 8, !dbg !7376
  br label %if.end87, !dbg !7377

if.end87:                                         ; preds = %if.then80, %if.end78
  %x88 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 0, !dbg !7378
  %arrayidx89 = getelementptr inbounds [4 x float*], [4 x float*]* %x88, i64 0, i64 2, !dbg !7379
  %78 = load float*, float** %arrayidx89, align 8, !dbg !7379
  %x90 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 0, !dbg !7380
  %arrayidx91 = getelementptr inbounds [4 x float*], [4 x float*]* %x90, i64 0, i64 1, !dbg !7381
  store float* %78, float** %arrayidx91, align 8, !dbg !7382
  %x92 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 0, !dbg !7383
  %arrayidx93 = getelementptr inbounds [4 x float*], [4 x float*]* %x92, i64 0, i64 3, !dbg !7384
  %79 = load float*, float** %arrayidx93, align 8, !dbg !7384
  %x94 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 0, !dbg !7385
  %arrayidx95 = getelementptr inbounds [4 x float*], [4 x float*]* %x94, i64 0, i64 2, !dbg !7386
  store float* %79, float** %arrayidx95, align 8, !dbg !7387
  %x96 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 0, !dbg !7388
  %arrayidx97 = getelementptr inbounds [4 x float*], [4 x float*]* %x96, i64 0, i64 3, !dbg !7389
  store float* null, float** %arrayidx97, align 8, !dbg !7390
  %v98 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 1, !dbg !7391
  %arrayidx99 = getelementptr inbounds [4 x float*], [4 x float*]* %v98, i64 0, i64 2, !dbg !7392
  %80 = load float*, float** %arrayidx99, align 8, !dbg !7392
  %v100 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 1, !dbg !7393
  %arrayidx101 = getelementptr inbounds [4 x float*], [4 x float*]* %v100, i64 0, i64 1, !dbg !7394
  store float* %80, float** %arrayidx101, align 8, !dbg !7395
  %v102 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 1, !dbg !7396
  %arrayidx103 = getelementptr inbounds [4 x float*], [4 x float*]* %v102, i64 0, i64 3, !dbg !7397
  %81 = load float*, float** %arrayidx103, align 8, !dbg !7397
  %v104 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 1, !dbg !7398
  %arrayidx105 = getelementptr inbounds [4 x float*], [4 x float*]* %v104, i64 0, i64 2, !dbg !7399
  store float* %81, float** %arrayidx105, align 8, !dbg !7400
  %v106 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 1, !dbg !7401
  %arrayidx107 = getelementptr inbounds [4 x float*], [4 x float*]* %v106, i64 0, i64 3, !dbg !7402
  store float* null, float** %arrayidx107, align 8, !dbg !7403
  br label %do.cond, !dbg !7404

do.cond:                                          ; preds = %if.end87
  %x108 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 0, !dbg !7405
  %arrayidx109 = getelementptr inbounds [4 x float*], [4 x float*]* %x108, i64 0, i64 2, !dbg !7406
  %82 = load float*, float** %arrayidx109, align 8, !dbg !7406
  %tobool110 = icmp ne float* %82, null, !dbg !7404
  br i1 %tobool110, label %do.body, label %do.end, !dbg !7404, !llvm.loop !7407

do.end:                                           ; preds = %if.then, %do.cond
  ret void, !dbg !7409
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @collision_sphere_to_tri(%struct.ParticleCollision* %col, float %radius, %struct.ParticleCollisionElement* %pce, float* %t) #0 !dbg !7410 {
entry:
  %retval = alloca i32, align 4
  %col.addr = alloca %struct.ParticleCollision*, align 8
  %radius.addr = alloca float, align 4
  %pce.addr = alloca %struct.ParticleCollisionElement*, align 8
  %t.addr = alloca float*, align 8
  %result = alloca %struct.ParticleCollisionElement*, align 8
  %ct = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  %e1 = alloca [3 x float], align 4
  %e2 = alloca [3 x float], align 4
  %p0 = alloca [3 x float], align 4
  %e1e1 = alloca float, align 4
  %e1e2 = alloca float, align 4
  %e1p0 = alloca float, align 4
  %e2e2 = alloca float, align 4
  %e2p0 = alloca float, align 4
  %inv = alloca float, align 4
  store %struct.ParticleCollision* %col, %struct.ParticleCollision** %col.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollision** %col.addr, metadata !7414, metadata !DIExpression()), !dbg !7415
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !7416, metadata !DIExpression()), !dbg !7417
  store %struct.ParticleCollisionElement* %pce, %struct.ParticleCollisionElement** %pce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %pce.addr, metadata !7418, metadata !DIExpression()), !dbg !7419
  store float* %t, float** %t.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t.addr, metadata !7420, metadata !DIExpression()), !dbg !7421
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %result, metadata !7422, metadata !DIExpression()), !dbg !7423
  %0 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !7424
  %pce1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %0, i32 0, i32 13, !dbg !7425
  store %struct.ParticleCollisionElement* %pce1, %struct.ParticleCollisionElement** %result, align 8, !dbg !7423
  call void @llvm.dbg.declare(metadata float* %ct, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.declare(metadata float* %u, metadata !7428, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.declare(metadata float* %v, metadata !7430, metadata !DIExpression()), !dbg !7431
  %1 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7432
  %inv_nor = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %1, i32 0, i32 11, !dbg !7433
  store i16 -1, i16* %inv_nor, align 8, !dbg !7434
  %2 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7435
  %inside = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %2, i32 0, i32 12, !dbg !7436
  store i16 0, i16* %inside, align 2, !dbg !7437
  %3 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !7438
  %4 = load float, float* %radius.addr, align 4, !dbg !7439
  %5 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7440
  %call = call float @collision_newton_rhapson(%struct.ParticleCollision* %3, float %4, %struct.ParticleCollisionElement* %5, float (float*, float, %struct.ParticleCollisionElement*, float*)* @nr_signed_distance_to_plane), !dbg !7441
  store float %call, float* %ct, align 4, !dbg !7442
  %6 = load float, float* %ct, align 4, !dbg !7443
  %cmp = fcmp oge float %6, 0.000000e+00, !dbg !7445
  br i1 %cmp, label %land.lhs.true, label %if.end59, !dbg !7446

land.lhs.true:                                    ; preds = %entry
  %7 = load float, float* %ct, align 4, !dbg !7447
  %8 = load float*, float** %t.addr, align 8, !dbg !7448
  %9 = load float, float* %8, align 4, !dbg !7449
  %cmp2 = fcmp olt float %7, %9, !dbg !7450
  br i1 %cmp2, label %land.lhs.true3, label %if.end59, !dbg !7451

land.lhs.true3:                                   ; preds = %land.lhs.true
  %10 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %result, align 8, !dbg !7452
  %inside4 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %10, i32 0, i32 12, !dbg !7453
  %11 = load i16, i16* %inside4, align 2, !dbg !7453
  %conv = sext i16 %11 to i32, !dbg !7452
  %cmp5 = icmp eq i32 %conv, 0, !dbg !7454
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !7455

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %12 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7456
  %inside7 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %12, i32 0, i32 12, !dbg !7457
  %13 = load i16, i16* %inside7, align 2, !dbg !7457
  %conv8 = sext i16 %13 to i32, !dbg !7456
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !7458
  br i1 %cmp9, label %if.then, label %if.end59, !dbg !7459

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true3
  call void @llvm.dbg.declare(metadata [3 x float]* %e1, metadata !7460, metadata !DIExpression()), !dbg !7462
  call void @llvm.dbg.declare(metadata [3 x float]* %e2, metadata !7463, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.declare(metadata [3 x float]* %p0, metadata !7465, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.declare(metadata float* %e1e1, metadata !7467, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.declare(metadata float* %e1e2, metadata !7469, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.declare(metadata float* %e1p0, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.declare(metadata float* %e2e2, metadata !7473, metadata !DIExpression()), !dbg !7474
  call void @llvm.dbg.declare(metadata float* %e2p0, metadata !7475, metadata !DIExpression()), !dbg !7476
  call void @llvm.dbg.declare(metadata float* %inv, metadata !7477, metadata !DIExpression()), !dbg !7478
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !7479
  %14 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7480
  %x1 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %14, i32 0, i32 3, !dbg !7481
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %x1, i64 0, i64 0, !dbg !7480
  %15 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7482
  %x0 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %15, i32 0, i32 2, !dbg !7483
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %x0, i64 0, i64 0, !dbg !7482
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay11, float* %arraydecay12), !dbg !7484
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !7485
  %16 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7486
  %x2 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %16, i32 0, i32 4, !dbg !7487
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %x2, i64 0, i64 0, !dbg !7486
  %17 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7488
  %x015 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %17, i32 0, i32 2, !dbg !7489
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %x015, i64 0, i64 0, !dbg !7488
  call void @sub_v3_v3v3(float* %arraydecay13, float* %arraydecay14, float* %arraydecay16), !dbg !7490
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %p0, i64 0, i64 0, !dbg !7491
  %18 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7492
  %p = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %18, i32 0, i32 5, !dbg !7493
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7492
  %19 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7494
  %x019 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %19, i32 0, i32 2, !dbg !7495
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %x019, i64 0, i64 0, !dbg !7494
  call void @sub_v3_v3v3(float* %arraydecay17, float* %arraydecay18, float* %arraydecay20), !dbg !7496
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !7497
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !7498
  %call23 = call float @dot_v3v3(float* %arraydecay21, float* %arraydecay22), !dbg !7499
  store float %call23, float* %e1e1, align 4, !dbg !7500
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !7501
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !7502
  %call26 = call float @dot_v3v3(float* %arraydecay24, float* %arraydecay25), !dbg !7503
  store float %call26, float* %e1e2, align 4, !dbg !7504
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !7505
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %p0, i64 0, i64 0, !dbg !7506
  %call29 = call float @dot_v3v3(float* %arraydecay27, float* %arraydecay28), !dbg !7507
  store float %call29, float* %e1p0, align 4, !dbg !7508
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !7509
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !7510
  %call32 = call float @dot_v3v3(float* %arraydecay30, float* %arraydecay31), !dbg !7511
  store float %call32, float* %e2e2, align 4, !dbg !7512
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !7513
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %p0, i64 0, i64 0, !dbg !7514
  %call35 = call float @dot_v3v3(float* %arraydecay33, float* %arraydecay34), !dbg !7515
  store float %call35, float* %e2p0, align 4, !dbg !7516
  %20 = load float, float* %e1e1, align 4, !dbg !7517
  %21 = load float, float* %e2e2, align 4, !dbg !7518
  %mul = fmul float %20, %21, !dbg !7519
  %22 = load float, float* %e1e2, align 4, !dbg !7520
  %23 = load float, float* %e1e2, align 4, !dbg !7521
  %mul36 = fmul float %22, %23, !dbg !7522
  %sub = fsub float %mul, %mul36, !dbg !7523
  %div = fdiv float 1.000000e+00, %sub, !dbg !7524
  store float %div, float* %inv, align 4, !dbg !7525
  %24 = load float, float* %e2e2, align 4, !dbg !7526
  %25 = load float, float* %e1p0, align 4, !dbg !7527
  %mul37 = fmul float %24, %25, !dbg !7528
  %26 = load float, float* %e1e2, align 4, !dbg !7529
  %27 = load float, float* %e2p0, align 4, !dbg !7530
  %mul38 = fmul float %26, %27, !dbg !7531
  %sub39 = fsub float %mul37, %mul38, !dbg !7532
  %28 = load float, float* %inv, align 4, !dbg !7533
  %mul40 = fmul float %sub39, %28, !dbg !7534
  store float %mul40, float* %u, align 4, !dbg !7535
  %29 = load float, float* %e1e1, align 4, !dbg !7536
  %30 = load float, float* %e2p0, align 4, !dbg !7537
  %mul41 = fmul float %29, %30, !dbg !7538
  %31 = load float, float* %e1e2, align 4, !dbg !7539
  %32 = load float, float* %e1p0, align 4, !dbg !7540
  %mul42 = fmul float %31, %32, !dbg !7541
  %sub43 = fsub float %mul41, %mul42, !dbg !7542
  %33 = load float, float* %inv, align 4, !dbg !7543
  %mul44 = fmul float %sub43, %33, !dbg !7544
  store float %mul44, float* %v, align 4, !dbg !7545
  %34 = load float, float* %u, align 4, !dbg !7546
  %cmp45 = fcmp oge float %34, 0.000000e+00, !dbg !7548
  br i1 %cmp45, label %land.lhs.true47, label %if.end, !dbg !7549

land.lhs.true47:                                  ; preds = %if.then
  %35 = load float, float* %u, align 4, !dbg !7550
  %cmp48 = fcmp ole float %35, 1.000000e+00, !dbg !7551
  br i1 %cmp48, label %land.lhs.true50, label %if.end, !dbg !7552

land.lhs.true50:                                  ; preds = %land.lhs.true47
  %36 = load float, float* %v, align 4, !dbg !7553
  %cmp51 = fcmp oge float %36, 0.000000e+00, !dbg !7554
  br i1 %cmp51, label %land.lhs.true53, label %if.end, !dbg !7555

land.lhs.true53:                                  ; preds = %land.lhs.true50
  %37 = load float, float* %u, align 4, !dbg !7556
  %38 = load float, float* %v, align 4, !dbg !7557
  %add = fadd float %37, %38, !dbg !7558
  %cmp54 = fcmp ole float %add, 1.000000e+00, !dbg !7559
  br i1 %cmp54, label %if.then56, label %if.end, !dbg !7560

if.then56:                                        ; preds = %land.lhs.true53
  %39 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %result, align 8, !dbg !7561
  %40 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7563
  %41 = bitcast %struct.ParticleCollisionElement* %39 to i8*, !dbg !7564
  %42 = bitcast %struct.ParticleCollisionElement* %40 to i8*, !dbg !7564
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 160, i1 false), !dbg !7564
  %43 = load float, float* %u, align 4, !dbg !7565
  %44 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %result, align 8, !dbg !7566
  %uv = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %44, i32 0, i32 8, !dbg !7567
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !7566
  store float %43, float* %arrayidx, align 8, !dbg !7568
  %45 = load float, float* %v, align 4, !dbg !7569
  %46 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %result, align 8, !dbg !7570
  %uv57 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %46, i32 0, i32 8, !dbg !7571
  %arrayidx58 = getelementptr inbounds [2 x float], [2 x float]* %uv57, i64 0, i64 1, !dbg !7570
  store float %45, float* %arrayidx58, align 4, !dbg !7572
  %47 = load float, float* %ct, align 4, !dbg !7573
  %48 = load float*, float** %t.addr, align 8, !dbg !7574
  store float %47, float* %48, align 4, !dbg !7575
  store i32 1, i32* %retval, align 4, !dbg !7576
  br label %return, !dbg !7576

if.end:                                           ; preds = %land.lhs.true53, %land.lhs.true50, %land.lhs.true47, %if.then
  br label %if.end59, !dbg !7577

if.end59:                                         ; preds = %if.end, %lor.lhs.false, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !7578
  br label %return, !dbg !7578

return:                                           ; preds = %if.end59, %if.then56
  %49 = load i32, i32* %retval, align 4, !dbg !7579
  ret i32 %49, !dbg !7579
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @collision_sphere_to_edges(%struct.ParticleCollision* %col, float %radius, %struct.ParticleCollisionElement* %pce, float* %t) #0 !dbg !7580 {
entry:
  %col.addr = alloca %struct.ParticleCollision*, align 8
  %radius.addr = alloca float, align 4
  %pce.addr = alloca %struct.ParticleCollisionElement*, align 8
  %t.addr = alloca float*, align 8
  %edge = alloca [3 x %struct.ParticleCollisionElement], align 16
  %cur = alloca %struct.ParticleCollisionElement*, align 8
  %hit = alloca %struct.ParticleCollisionElement*, align 8
  %result = alloca %struct.ParticleCollisionElement*, align 8
  %ct = alloca float, align 4
  %i = alloca i32, align 4
  %u = alloca float, align 4
  %e = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  store %struct.ParticleCollision* %col, %struct.ParticleCollision** %col.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollision** %col.addr, metadata !7581, metadata !DIExpression()), !dbg !7582
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !7583, metadata !DIExpression()), !dbg !7584
  store %struct.ParticleCollisionElement* %pce, %struct.ParticleCollisionElement** %pce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %pce.addr, metadata !7585, metadata !DIExpression()), !dbg !7586
  store float* %t, float** %t.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t.addr, metadata !7587, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.declare(metadata [3 x %struct.ParticleCollisionElement]* %edge, metadata !7589, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %cur, metadata !7592, metadata !DIExpression()), !dbg !7593
  store %struct.ParticleCollisionElement* null, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7593
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %hit, metadata !7594, metadata !DIExpression()), !dbg !7595
  store %struct.ParticleCollisionElement* null, %struct.ParticleCollisionElement** %hit, align 8, !dbg !7595
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %result, metadata !7596, metadata !DIExpression()), !dbg !7597
  %0 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !7598
  %pce1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %0, i32 0, i32 13, !dbg !7599
  store %struct.ParticleCollisionElement* %pce1, %struct.ParticleCollisionElement** %result, align 8, !dbg !7597
  call void @llvm.dbg.declare(metadata float* %ct, metadata !7600, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7602, metadata !DIExpression()), !dbg !7603
  store i32 0, i32* %i, align 4, !dbg !7604
  br label %for.cond, !dbg !7606

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !7607
  %cmp = icmp slt i32 %1, 3, !dbg !7609
  br i1 %cmp, label %for.body, label %for.end, !dbg !7610

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7611
  %x = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %2, i32 0, i32 0, !dbg !7614
  %arrayidx = getelementptr inbounds [4 x float*], [4 x float*]* %x, i64 0, i64 3, !dbg !7611
  %3 = load float*, float** %arrayidx, align 8, !dbg !7611
  %tobool = icmp ne float* %3, null, !dbg !7611
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7615

land.lhs.true:                                    ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !7616
  %cmp2 = icmp eq i32 %4, 2, !dbg !7617
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7618

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !7619

if.end:                                           ; preds = %land.lhs.true, %for.body
  %arraydecay = getelementptr inbounds [3 x %struct.ParticleCollisionElement], [3 x %struct.ParticleCollisionElement]* %edge, i64 0, i64 0, !dbg !7620
  %5 = load i32, i32* %i, align 4, !dbg !7621
  %idx.ext = sext i32 %5 to i64, !dbg !7622
  %add.ptr = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %arraydecay, i64 %idx.ext, !dbg !7622
  store %struct.ParticleCollisionElement* %add.ptr, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7623
  %6 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7624
  %x3 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %6, i32 0, i32 0, !dbg !7625
  %7 = load i32, i32* %i, align 4, !dbg !7626
  %idxprom = sext i32 %7 to i64, !dbg !7624
  %arrayidx4 = getelementptr inbounds [4 x float*], [4 x float*]* %x3, i64 0, i64 %idxprom, !dbg !7624
  %8 = load float*, float** %arrayidx4, align 8, !dbg !7624
  %9 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7627
  %x5 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %9, i32 0, i32 0, !dbg !7628
  %arrayidx6 = getelementptr inbounds [4 x float*], [4 x float*]* %x5, i64 0, i64 0, !dbg !7627
  store float* %8, float** %arrayidx6, align 8, !dbg !7629
  %10 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7630
  %x7 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %10, i32 0, i32 0, !dbg !7631
  %11 = load i32, i32* %i, align 4, !dbg !7632
  %add = add nsw i32 %11, 1, !dbg !7633
  %rem = srem i32 %add, 3, !dbg !7634
  %idxprom8 = sext i32 %rem to i64, !dbg !7630
  %arrayidx9 = getelementptr inbounds [4 x float*], [4 x float*]* %x7, i64 0, i64 %idxprom8, !dbg !7630
  %12 = load float*, float** %arrayidx9, align 8, !dbg !7630
  %13 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7635
  %x10 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %13, i32 0, i32 0, !dbg !7636
  %arrayidx11 = getelementptr inbounds [4 x float*], [4 x float*]* %x10, i64 0, i64 1, !dbg !7635
  store float* %12, float** %arrayidx11, align 8, !dbg !7637
  %14 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7638
  %v = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %14, i32 0, i32 1, !dbg !7639
  %15 = load i32, i32* %i, align 4, !dbg !7640
  %idxprom12 = sext i32 %15 to i64, !dbg !7638
  %arrayidx13 = getelementptr inbounds [4 x float*], [4 x float*]* %v, i64 0, i64 %idxprom12, !dbg !7638
  %16 = load float*, float** %arrayidx13, align 8, !dbg !7638
  %17 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7641
  %v14 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %17, i32 0, i32 1, !dbg !7642
  %arrayidx15 = getelementptr inbounds [4 x float*], [4 x float*]* %v14, i64 0, i64 0, !dbg !7641
  store float* %16, float** %arrayidx15, align 8, !dbg !7643
  %18 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7644
  %v16 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %18, i32 0, i32 1, !dbg !7645
  %19 = load i32, i32* %i, align 4, !dbg !7646
  %add17 = add nsw i32 %19, 1, !dbg !7647
  %rem18 = srem i32 %add17, 3, !dbg !7648
  %idxprom19 = sext i32 %rem18 to i64, !dbg !7644
  %arrayidx20 = getelementptr inbounds [4 x float*], [4 x float*]* %v16, i64 0, i64 %idxprom19, !dbg !7644
  %20 = load float*, float** %arrayidx20, align 8, !dbg !7644
  %21 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7649
  %v21 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %21, i32 0, i32 1, !dbg !7650
  %arrayidx22 = getelementptr inbounds [4 x float*], [4 x float*]* %v21, i64 0, i64 1, !dbg !7649
  store float* %20, float** %arrayidx22, align 8, !dbg !7651
  %22 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7652
  %tot = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %22, i32 0, i32 9, !dbg !7653
  store i32 2, i32* %tot, align 8, !dbg !7654
  %23 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7655
  %inside = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %23, i32 0, i32 12, !dbg !7656
  store i16 0, i16* %inside, align 2, !dbg !7657
  %24 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !7658
  %25 = load float, float* %radius.addr, align 4, !dbg !7659
  %26 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7660
  %call = call float @collision_newton_rhapson(%struct.ParticleCollision* %24, float %25, %struct.ParticleCollisionElement* %26, float (float*, float, %struct.ParticleCollisionElement*, float*)* @nr_distance_to_edge), !dbg !7661
  store float %call, float* %ct, align 4, !dbg !7662
  %27 = load float, float* %ct, align 4, !dbg !7663
  %cmp23 = fcmp oge float %27, 0.000000e+00, !dbg !7665
  br i1 %cmp23, label %land.lhs.true24, label %if.end51, !dbg !7666

land.lhs.true24:                                  ; preds = %if.end
  %28 = load float, float* %ct, align 4, !dbg !7667
  %29 = load float*, float** %t.addr, align 8, !dbg !7668
  %30 = load float, float* %29, align 4, !dbg !7669
  %cmp25 = fcmp olt float %28, %30, !dbg !7670
  br i1 %cmp25, label %if.then26, label %if.end51, !dbg !7671

if.then26:                                        ; preds = %land.lhs.true24
  call void @llvm.dbg.declare(metadata float* %u, metadata !7672, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.declare(metadata [3 x float]* %e, metadata !7675, metadata !DIExpression()), !dbg !7676
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !7677, metadata !DIExpression()), !dbg !7678
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !7679
  %31 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7680
  %x1 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %31, i32 0, i32 3, !dbg !7681
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %x1, i64 0, i64 0, !dbg !7680
  %32 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7682
  %x0 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %32, i32 0, i32 2, !dbg !7683
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %x0, i64 0, i64 0, !dbg !7682
  call void @sub_v3_v3v3(float* %arraydecay27, float* %arraydecay28, float* %arraydecay29), !dbg !7684
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7685
  %33 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7686
  %p = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %33, i32 0, i32 5, !dbg !7687
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7686
  %34 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7688
  %x032 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %34, i32 0, i32 2, !dbg !7689
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %x032, i64 0, i64 0, !dbg !7688
  call void @sub_v3_v3v3(float* %arraydecay30, float* %arraydecay31, float* %arraydecay33), !dbg !7690
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7691
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !7692
  %call36 = call float @dot_v3v3(float* %arraydecay34, float* %arraydecay35), !dbg !7693
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !7694
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !7695
  %call39 = call float @dot_v3v3(float* %arraydecay37, float* %arraydecay38), !dbg !7696
  %div = fdiv float %call36, %call39, !dbg !7697
  store float %div, float* %u, align 4, !dbg !7698
  %35 = load float, float* %u, align 4, !dbg !7699
  %cmp40 = fcmp olt float %35, 0.000000e+00, !dbg !7701
  br i1 %cmp40, label %if.then42, label %lor.lhs.false, !dbg !7702

lor.lhs.false:                                    ; preds = %if.then26
  %36 = load float, float* %u, align 4, !dbg !7703
  %cmp41 = fcmp ogt float %36, 1.000000e+00, !dbg !7704
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !7705

if.then42:                                        ; preds = %lor.lhs.false, %if.then26
  br label %for.end, !dbg !7706

if.end43:                                         ; preds = %lor.lhs.false
  %37 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %result, align 8, !dbg !7707
  %38 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7708
  %39 = bitcast %struct.ParticleCollisionElement* %37 to i8*, !dbg !7709
  %40 = bitcast %struct.ParticleCollisionElement* %38 to i8*, !dbg !7709
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 160, i1 false), !dbg !7709
  %41 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %result, align 8, !dbg !7710
  %nor = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %41, i32 0, i32 6, !dbg !7711
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !7710
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !7712
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !7713
  %42 = load float, float* %u, align 4, !dbg !7714
  %fneg = fneg float %42, !dbg !7715
  call void @madd_v3_v3v3fl(float* %arraydecay44, float* %arraydecay45, float* %arraydecay46, float %fneg), !dbg !7716
  %43 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %result, align 8, !dbg !7717
  %nor47 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %43, i32 0, i32 6, !dbg !7718
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %nor47, i64 0, i64 0, !dbg !7717
  %call49 = call float @normalize_v3(float* %arraydecay48), !dbg !7719
  %44 = load float, float* %u, align 4, !dbg !7720
  %45 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %result, align 8, !dbg !7721
  %uv = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %45, i32 0, i32 8, !dbg !7722
  %arrayidx50 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !7721
  store float %44, float* %arrayidx50, align 8, !dbg !7723
  %46 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7724
  store %struct.ParticleCollisionElement* %46, %struct.ParticleCollisionElement** %hit, align 8, !dbg !7725
  %47 = load float, float* %ct, align 4, !dbg !7726
  %48 = load float*, float** %t.addr, align 8, !dbg !7727
  store float %47, float* %48, align 4, !dbg !7728
  br label %if.end51, !dbg !7729

if.end51:                                         ; preds = %if.end43, %land.lhs.true24, %if.end
  br label %for.inc, !dbg !7730

for.inc:                                          ; preds = %if.end51, %if.then
  %49 = load i32, i32* %i, align 4, !dbg !7731
  %inc = add nsw i32 %49, 1, !dbg !7731
  store i32 %inc, i32* %i, align 4, !dbg !7731
  br label %for.cond, !dbg !7732, !llvm.loop !7733

for.end:                                          ; preds = %if.then42, %for.cond
  %50 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %hit, align 8, !dbg !7735
  %cmp52 = icmp ne %struct.ParticleCollisionElement* %50, null, !dbg !7736
  %conv = zext i1 %cmp52 to i32, !dbg !7736
  ret i32 %conv, !dbg !7737
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @collision_sphere_to_verts(%struct.ParticleCollision* %col, float %radius, %struct.ParticleCollisionElement* %pce, float* %t) #0 !dbg !7738 {
entry:
  %col.addr = alloca %struct.ParticleCollision*, align 8
  %radius.addr = alloca float, align 4
  %pce.addr = alloca %struct.ParticleCollisionElement*, align 8
  %t.addr = alloca float*, align 8
  %vert = alloca [3 x %struct.ParticleCollisionElement], align 16
  %cur = alloca %struct.ParticleCollisionElement*, align 8
  %hit = alloca %struct.ParticleCollisionElement*, align 8
  %result = alloca %struct.ParticleCollisionElement*, align 8
  %ct = alloca float, align 4
  %i = alloca i32, align 4
  store %struct.ParticleCollision* %col, %struct.ParticleCollision** %col.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollision** %col.addr, metadata !7739, metadata !DIExpression()), !dbg !7740
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !7741, metadata !DIExpression()), !dbg !7742
  store %struct.ParticleCollisionElement* %pce, %struct.ParticleCollisionElement** %pce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %pce.addr, metadata !7743, metadata !DIExpression()), !dbg !7744
  store float* %t, float** %t.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t.addr, metadata !7745, metadata !DIExpression()), !dbg !7746
  call void @llvm.dbg.declare(metadata [3 x %struct.ParticleCollisionElement]* %vert, metadata !7747, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %cur, metadata !7749, metadata !DIExpression()), !dbg !7750
  store %struct.ParticleCollisionElement* null, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7750
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %hit, metadata !7751, metadata !DIExpression()), !dbg !7752
  store %struct.ParticleCollisionElement* null, %struct.ParticleCollisionElement** %hit, align 8, !dbg !7752
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %result, metadata !7753, metadata !DIExpression()), !dbg !7754
  %0 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !7755
  %pce1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %0, i32 0, i32 13, !dbg !7756
  store %struct.ParticleCollisionElement* %pce1, %struct.ParticleCollisionElement** %result, align 8, !dbg !7754
  call void @llvm.dbg.declare(metadata float* %ct, metadata !7757, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7759, metadata !DIExpression()), !dbg !7760
  store i32 0, i32* %i, align 4, !dbg !7761
  br label %for.cond, !dbg !7763

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !7764
  %cmp = icmp slt i32 %1, 3, !dbg !7766
  br i1 %cmp, label %for.body, label %for.end, !dbg !7767

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7768
  %x = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %2, i32 0, i32 0, !dbg !7771
  %arrayidx = getelementptr inbounds [4 x float*], [4 x float*]* %x, i64 0, i64 3, !dbg !7768
  %3 = load float*, float** %arrayidx, align 8, !dbg !7768
  %tobool = icmp ne float* %3, null, !dbg !7768
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7772

land.lhs.true:                                    ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !7773
  %cmp2 = icmp ne i32 %4, 1, !dbg !7774
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7775

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !7776

if.end:                                           ; preds = %land.lhs.true, %for.body
  %arraydecay = getelementptr inbounds [3 x %struct.ParticleCollisionElement], [3 x %struct.ParticleCollisionElement]* %vert, i64 0, i64 0, !dbg !7777
  %5 = load i32, i32* %i, align 4, !dbg !7778
  %idx.ext = sext i32 %5 to i64, !dbg !7779
  %add.ptr = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %arraydecay, i64 %idx.ext, !dbg !7779
  store %struct.ParticleCollisionElement* %add.ptr, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7780
  %6 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7781
  %x3 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %6, i32 0, i32 0, !dbg !7782
  %7 = load i32, i32* %i, align 4, !dbg !7783
  %idxprom = sext i32 %7 to i64, !dbg !7781
  %arrayidx4 = getelementptr inbounds [4 x float*], [4 x float*]* %x3, i64 0, i64 %idxprom, !dbg !7781
  %8 = load float*, float** %arrayidx4, align 8, !dbg !7781
  %9 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7784
  %x5 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %9, i32 0, i32 0, !dbg !7785
  %arrayidx6 = getelementptr inbounds [4 x float*], [4 x float*]* %x5, i64 0, i64 0, !dbg !7784
  store float* %8, float** %arrayidx6, align 8, !dbg !7786
  %10 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7787
  %v = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %10, i32 0, i32 1, !dbg !7788
  %11 = load i32, i32* %i, align 4, !dbg !7789
  %idxprom7 = sext i32 %11 to i64, !dbg !7787
  %arrayidx8 = getelementptr inbounds [4 x float*], [4 x float*]* %v, i64 0, i64 %idxprom7, !dbg !7787
  %12 = load float*, float** %arrayidx8, align 8, !dbg !7787
  %13 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7790
  %v9 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %13, i32 0, i32 1, !dbg !7791
  %arrayidx10 = getelementptr inbounds [4 x float*], [4 x float*]* %v9, i64 0, i64 0, !dbg !7790
  store float* %12, float** %arrayidx10, align 8, !dbg !7792
  %14 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7793
  %tot = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %14, i32 0, i32 9, !dbg !7794
  store i32 1, i32* %tot, align 8, !dbg !7795
  %15 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7796
  %inside = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %15, i32 0, i32 12, !dbg !7797
  store i16 0, i16* %inside, align 2, !dbg !7798
  %16 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !7799
  %17 = load float, float* %radius.addr, align 4, !dbg !7800
  %18 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7801
  %call = call float @collision_newton_rhapson(%struct.ParticleCollision* %16, float %17, %struct.ParticleCollisionElement* %18, float (float*, float, %struct.ParticleCollisionElement*, float*)* @nr_distance_to_vert), !dbg !7802
  store float %call, float* %ct, align 4, !dbg !7803
  %19 = load float, float* %ct, align 4, !dbg !7804
  %cmp11 = fcmp oge float %19, 0.000000e+00, !dbg !7806
  br i1 %cmp11, label %land.lhs.true12, label %if.end21, !dbg !7807

land.lhs.true12:                                  ; preds = %if.end
  %20 = load float, float* %ct, align 4, !dbg !7808
  %21 = load float*, float** %t.addr, align 8, !dbg !7809
  %22 = load float, float* %21, align 4, !dbg !7810
  %cmp13 = fcmp olt float %20, %22, !dbg !7811
  br i1 %cmp13, label %if.then14, label %if.end21, !dbg !7812

if.then14:                                        ; preds = %land.lhs.true12
  %23 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %result, align 8, !dbg !7813
  %24 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7815
  %25 = bitcast %struct.ParticleCollisionElement* %23 to i8*, !dbg !7816
  %26 = bitcast %struct.ParticleCollisionElement* %24 to i8*, !dbg !7816
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 160, i1 false), !dbg !7816
  %27 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %result, align 8, !dbg !7817
  %nor = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %27, i32 0, i32 6, !dbg !7818
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !7817
  %28 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7819
  %p = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %28, i32 0, i32 5, !dbg !7820
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7819
  %29 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7821
  %x0 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %29, i32 0, i32 2, !dbg !7822
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %x0, i64 0, i64 0, !dbg !7821
  call void @sub_v3_v3v3(float* %arraydecay15, float* %arraydecay16, float* %arraydecay17), !dbg !7823
  %30 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %result, align 8, !dbg !7824
  %nor18 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %30, i32 0, i32 6, !dbg !7825
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %nor18, i64 0, i64 0, !dbg !7824
  %call20 = call float @normalize_v3(float* %arraydecay19), !dbg !7826
  %31 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %cur, align 8, !dbg !7827
  store %struct.ParticleCollisionElement* %31, %struct.ParticleCollisionElement** %hit, align 8, !dbg !7828
  %32 = load float, float* %ct, align 4, !dbg !7829
  %33 = load float*, float** %t.addr, align 8, !dbg !7830
  store float %32, float* %33, align 4, !dbg !7831
  br label %if.end21, !dbg !7832

if.end21:                                         ; preds = %if.then14, %land.lhs.true12, %if.end
  br label %for.inc, !dbg !7833

for.inc:                                          ; preds = %if.end21, %if.then
  %34 = load i32, i32* %i, align 4, !dbg !7834
  %inc = add nsw i32 %34, 1, !dbg !7834
  store i32 %inc, i32* %i, align 4, !dbg !7834
  br label %for.cond, !dbg !7835, !llvm.loop !7836

for.end:                                          ; preds = %for.cond
  %35 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %hit, align 8, !dbg !7838
  %cmp22 = icmp ne %struct.ParticleCollisionElement* %35, null, !dbg !7839
  %conv = zext i1 %cmp22 to i32, !dbg !7839
  ret i32 %conv, !dbg !7840
}

; Function Attrs: noinline nounwind uwtable
define internal void @collision_point_velocity(%struct.ParticleCollisionElement* %pce) #0 !dbg !7841 {
entry:
  %pce.addr = alloca %struct.ParticleCollisionElement*, align 8
  %v = alloca [3 x float], align 4
  store %struct.ParticleCollisionElement* %pce, %struct.ParticleCollisionElement** %pce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %pce.addr, metadata !7844, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.declare(metadata [3 x float]* %v, metadata !7846, metadata !DIExpression()), !dbg !7847
  %0 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7848
  %vel = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %0, i32 0, i32 7, !dbg !7849
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !7848
  %1 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7850
  %v1 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %1, i32 0, i32 1, !dbg !7851
  %arrayidx = getelementptr inbounds [4 x float*], [4 x float*]* %v1, i64 0, i64 0, !dbg !7850
  %2 = load float*, float** %arrayidx, align 8, !dbg !7850
  call void @copy_v3_v3(float* %arraydecay, float* %2), !dbg !7852
  %3 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7853
  %tot = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %3, i32 0, i32 9, !dbg !7855
  %4 = load i32, i32* %tot, align 8, !dbg !7855
  %cmp = icmp sgt i32 %4, 1, !dbg !7856
  br i1 %cmp, label %if.then, label %if.end24, !dbg !7857

if.then:                                          ; preds = %entry
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7858
  %5 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7860
  %v3 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %5, i32 0, i32 1, !dbg !7861
  %arrayidx4 = getelementptr inbounds [4 x float*], [4 x float*]* %v3, i64 0, i64 1, !dbg !7860
  %6 = load float*, float** %arrayidx4, align 8, !dbg !7860
  %7 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7862
  %v5 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %7, i32 0, i32 1, !dbg !7863
  %arrayidx6 = getelementptr inbounds [4 x float*], [4 x float*]* %v5, i64 0, i64 0, !dbg !7862
  %8 = load float*, float** %arrayidx6, align 8, !dbg !7862
  call void @sub_v3_v3v3(float* %arraydecay2, float* %6, float* %8), !dbg !7864
  %9 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7865
  %vel7 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %9, i32 0, i32 7, !dbg !7866
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %vel7, i64 0, i64 0, !dbg !7865
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7867
  %10 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7868
  %uv = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %10, i32 0, i32 8, !dbg !7869
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !7868
  %11 = load float, float* %arrayidx10, align 8, !dbg !7868
  call void @madd_v3_v3fl(float* %arraydecay8, float* %arraydecay9, float %11), !dbg !7870
  %12 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7871
  %tot11 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %12, i32 0, i32 9, !dbg !7873
  %13 = load i32, i32* %tot11, align 8, !dbg !7873
  %cmp12 = icmp sgt i32 %13, 2, !dbg !7874
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !7875

if.then13:                                        ; preds = %if.then
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7876
  %14 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7878
  %v15 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %14, i32 0, i32 1, !dbg !7879
  %arrayidx16 = getelementptr inbounds [4 x float*], [4 x float*]* %v15, i64 0, i64 2, !dbg !7878
  %15 = load float*, float** %arrayidx16, align 8, !dbg !7878
  %16 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7880
  %v17 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %16, i32 0, i32 1, !dbg !7881
  %arrayidx18 = getelementptr inbounds [4 x float*], [4 x float*]* %v17, i64 0, i64 0, !dbg !7880
  %17 = load float*, float** %arrayidx18, align 8, !dbg !7880
  call void @sub_v3_v3v3(float* %arraydecay14, float* %15, float* %17), !dbg !7882
  %18 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7883
  %vel19 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %18, i32 0, i32 7, !dbg !7884
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %vel19, i64 0, i64 0, !dbg !7883
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7885
  %19 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !7886
  %uv22 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %19, i32 0, i32 8, !dbg !7887
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %uv22, i64 0, i64 1, !dbg !7886
  %20 = load float, float* %arrayidx23, align 4, !dbg !7886
  call void @madd_v3_v3fl(float* %arraydecay20, float* %arraydecay21, float %20), !dbg !7888
  br label %if.end, !dbg !7889

if.end:                                           ; preds = %if.then13, %if.then
  br label %if.end24, !dbg !7890

if.end24:                                         ; preds = %if.end, %entry
  ret void, !dbg !7891
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_changed_type(%struct.Object* %ob, %struct.ParticleSystem* %psys) #0 !dbg !7892 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %pid = alloca %struct.PTCacheID, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7893, metadata !DIExpression()), !dbg !7894
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !7895, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !7897, metadata !DIExpression()), !dbg !7898
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !7899
  %part1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 2, !dbg !7900
  %1 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part1, align 8, !dbg !7900
  store %struct.ParticleSettings* %1, %struct.ParticleSettings** %part, align 8, !dbg !7898
  call void @llvm.dbg.declare(metadata %struct.PTCacheID* %pid, metadata !7901, metadata !DIExpression()), !dbg !7902
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7903
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !7904
  call void @BKE_ptcache_id_from_particles(%struct.PTCacheID* %pid, %struct.Object* %2, %struct.ParticleSystem* %3), !dbg !7905
  %4 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7906
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %4, i32 0, i32 11, !dbg !7908
  %5 = load i16, i16* %phystype, align 8, !dbg !7908
  %conv = sext i16 %5 to i32, !dbg !7906
  %cmp = icmp ne i32 %conv, 2, !dbg !7909
  br i1 %cmp, label %if.then, label %if.end, !dbg !7910

if.then:                                          ; preds = %entry
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !7911
  %flag = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 25, !dbg !7912
  %7 = load i32, i32* %flag, align 4, !dbg !7913
  %and = and i32 %7, -1025, !dbg !7913
  store i32 %and, i32* %flag, align 4, !dbg !7913
  br label %if.end, !dbg !7911

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7914
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %8, i32 0, i32 7, !dbg !7916
  %9 = load i16, i16* %type, align 8, !dbg !7916
  %conv3 = sext i16 %9 to i32, !dbg !7914
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !7917
  br i1 %cmp4, label %if.then6, label %if.else77, !dbg !7918

if.then6:                                         ; preds = %if.end
  %10 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7919
  %ren_as = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %10, i32 0, i32 21, !dbg !7919
  %11 = load i16, i16* %ren_as, align 8, !dbg !7919
  %conv7 = sext i16 %11 to i32, !dbg !7919
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !7919
  br i1 %cmp8, label %lor.end, label %lor.lhs.false, !dbg !7919

lor.lhs.false:                                    ; preds = %if.then6
  %12 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7919
  %ren_as10 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %12, i32 0, i32 21, !dbg !7919
  %13 = load i16, i16* %ren_as10, align 8, !dbg !7919
  %conv11 = sext i16 %13 to i32, !dbg !7919
  %cmp12 = icmp eq i32 %conv11, 6, !dbg !7919
  br i1 %cmp12, label %lor.end, label %lor.lhs.false14, !dbg !7919

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %14 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7919
  %ren_as15 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %14, i32 0, i32 21, !dbg !7919
  %15 = load i16, i16* %ren_as15, align 8, !dbg !7919
  %conv16 = sext i16 %15 to i32, !dbg !7919
  %cmp17 = icmp eq i32 %conv16, 7, !dbg !7919
  br i1 %cmp17, label %lor.end, label %lor.rhs, !dbg !7919

lor.rhs:                                          ; preds = %lor.lhs.false14
  %16 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7919
  %ren_as19 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %16, i32 0, i32 21, !dbg !7919
  %17 = load i16, i16* %ren_as19, align 8, !dbg !7919
  %conv20 = sext i16 %17 to i32, !dbg !7919
  %cmp21 = icmp eq i32 %conv20, 8, !dbg !7919
  br label %lor.end, !dbg !7919

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false14, %lor.lhs.false, %if.then6
  %18 = phi i1 [ true, %lor.lhs.false14 ], [ true, %lor.lhs.false ], [ true, %if.then6 ], [ %cmp21, %lor.rhs ]
  %lor.ext = zext i1 %18 to i32, !dbg !7919
  %cmp23 = icmp eq i32 %lor.ext, 0, !dbg !7922
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !7923

if.then25:                                        ; preds = %lor.end
  %19 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7924
  %ren_as26 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %19, i32 0, i32 21, !dbg !7925
  store i16 6, i16* %ren_as26, align 8, !dbg !7926
  br label %if.end27, !dbg !7924

if.end27:                                         ; preds = %if.then25, %lor.end
  %20 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7927
  %distr = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %20, i32 0, i32 9, !dbg !7929
  %21 = load i16, i16* %distr, align 4, !dbg !7929
  %conv28 = sext i16 %21 to i32, !dbg !7927
  %cmp29 = icmp eq i32 %conv28, 2, !dbg !7930
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !7931

if.then31:                                        ; preds = %if.end27
  %22 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7932
  %distr32 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %22, i32 0, i32 9, !dbg !7933
  store i16 0, i16* %distr32, align 4, !dbg !7934
  br label %if.end33, !dbg !7932

if.end33:                                         ; preds = %if.then31, %if.end27
  %23 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7935
  %draw_as = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %23, i32 0, i32 17, !dbg !7935
  %24 = load i16, i16* %draw_as, align 8, !dbg !7935
  %conv34 = sext i16 %24 to i32, !dbg !7935
  %cmp35 = icmp eq i32 %conv34, 0, !dbg !7935
  br i1 %cmp35, label %lor.end47, label %lor.lhs.false37, !dbg !7935

lor.lhs.false37:                                  ; preds = %if.end33
  %25 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7935
  %draw_as38 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %25, i32 0, i32 17, !dbg !7935
  %26 = load i16, i16* %draw_as38, align 8, !dbg !7935
  %conv39 = sext i16 %26 to i32, !dbg !7935
  %cmp40 = icmp eq i32 %conv39, 10, !dbg !7935
  br i1 %cmp40, label %lor.end47, label %lor.rhs42, !dbg !7935

lor.rhs42:                                        ; preds = %lor.lhs.false37
  %27 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7935
  %draw_as43 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %27, i32 0, i32 17, !dbg !7935
  %28 = load i16, i16* %draw_as43, align 8, !dbg !7935
  %conv44 = sext i16 %28 to i32, !dbg !7935
  %cmp45 = icmp eq i32 %conv44, 6, !dbg !7935
  br label %lor.end47, !dbg !7935

lor.end47:                                        ; preds = %lor.rhs42, %lor.lhs.false37, %if.end33
  %29 = phi i1 [ true, %lor.lhs.false37 ], [ true, %if.end33 ], [ %cmp45, %lor.rhs42 ]
  %lor.ext48 = zext i1 %29 to i32, !dbg !7935
  %cmp49 = icmp eq i32 %lor.ext48, 0, !dbg !7937
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !7938

if.then51:                                        ; preds = %lor.end47
  %30 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7939
  %draw_as52 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %30, i32 0, i32 17, !dbg !7940
  store i16 10, i16* %draw_as52, align 8, !dbg !7941
  br label %if.end53, !dbg !7939

if.end53:                                         ; preds = %if.then51, %lor.end47
  %31 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7942
  %path_start = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %31, i32 0, i32 117, !dbg !7942
  %32 = load float, float* %path_start, align 8, !dbg !7942
  %cmp54 = fcmp olt float %32, 0.000000e+00, !dbg !7942
  br i1 %cmp54, label %if.then56, label %if.else, !dbg !7945

if.then56:                                        ; preds = %if.end53
  %33 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7942
  %path_start57 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %33, i32 0, i32 117, !dbg !7942
  store float 0.000000e+00, float* %path_start57, align 8, !dbg !7942
  br label %if.end64, !dbg !7942

if.else:                                          ; preds = %if.end53
  %34 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7946
  %path_start58 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %34, i32 0, i32 117, !dbg !7946
  %35 = load float, float* %path_start58, align 8, !dbg !7946
  %cmp59 = fcmp ogt float %35, 1.000000e+02, !dbg !7946
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !7942

if.then61:                                        ; preds = %if.else
  %36 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7946
  %path_start62 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %36, i32 0, i32 117, !dbg !7946
  store float 1.000000e+02, float* %path_start62, align 8, !dbg !7946
  br label %if.end63, !dbg !7946

if.end63:                                         ; preds = %if.then61, %if.else
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then56
  %37 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7948
  %path_end = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %37, i32 0, i32 118, !dbg !7948
  %38 = load float, float* %path_end, align 4, !dbg !7948
  %cmp65 = fcmp olt float %38, 0.000000e+00, !dbg !7948
  br i1 %cmp65, label %if.then67, label %if.else69, !dbg !7951

if.then67:                                        ; preds = %if.end64
  %39 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7948
  %path_end68 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %39, i32 0, i32 118, !dbg !7948
  store float 0.000000e+00, float* %path_end68, align 4, !dbg !7948
  br label %if.end76, !dbg !7948

if.else69:                                        ; preds = %if.end64
  %40 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7952
  %path_end70 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %40, i32 0, i32 118, !dbg !7952
  %41 = load float, float* %path_end70, align 4, !dbg !7952
  %cmp71 = fcmp ogt float %41, 1.000000e+02, !dbg !7952
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !7948

if.then73:                                        ; preds = %if.else69
  %42 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7952
  %path_end74 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %42, i32 0, i32 118, !dbg !7952
  store float 1.000000e+02, float* %path_end74, align 4, !dbg !7952
  br label %if.end75, !dbg !7952

if.end75:                                         ; preds = %if.then73, %if.else69
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then67
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %pid, i32 0, i32 0), !dbg !7954
  br label %if.end145, !dbg !7955

if.else77:                                        ; preds = %if.end
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7956
  %44 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !7958
  call void @free_hair(%struct.Object* %43, %struct.ParticleSystem* %44, i32 1), !dbg !7959
  %45 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7960
  %path_start78 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %45, i32 0, i32 117, !dbg !7960
  %46 = load float, float* %path_start78, align 8, !dbg !7960
  %cmp79 = fcmp olt float %46, 0.000000e+00, !dbg !7960
  br i1 %cmp79, label %if.then81, label %if.else83, !dbg !7963

if.then81:                                        ; preds = %if.else77
  %47 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7960
  %path_start82 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %47, i32 0, i32 117, !dbg !7960
  store float 0.000000e+00, float* %path_start82, align 8, !dbg !7960
  br label %if.end107, !dbg !7960

if.else83:                                        ; preds = %if.else77
  %48 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7964
  %path_start84 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %48, i32 0, i32 117, !dbg !7964
  %49 = load float, float* %path_start84, align 8, !dbg !7964
  %50 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7964
  %end = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %50, i32 0, i32 54, !dbg !7964
  %51 = load float, float* %end, align 8, !dbg !7964
  %52 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7964
  %lifetime = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %52, i32 0, i32 55, !dbg !7964
  %53 = load float, float* %lifetime, align 4, !dbg !7964
  %add = fadd float %51, %53, !dbg !7964
  %cmp85 = fcmp ogt float 1.000000e+02, %add, !dbg !7964
  br i1 %cmp85, label %cond.true, label %cond.false, !dbg !7964

cond.true:                                        ; preds = %if.else83
  br label %cond.end, !dbg !7964

cond.false:                                       ; preds = %if.else83
  %54 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7964
  %end87 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %54, i32 0, i32 54, !dbg !7964
  %55 = load float, float* %end87, align 8, !dbg !7964
  %56 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7964
  %lifetime88 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %56, i32 0, i32 55, !dbg !7964
  %57 = load float, float* %lifetime88, align 4, !dbg !7964
  %add89 = fadd float %55, %57, !dbg !7964
  br label %cond.end, !dbg !7964

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 1.000000e+02, %cond.true ], [ %add89, %cond.false ], !dbg !7964
  %cmp90 = fcmp ogt float %49, %cond, !dbg !7964
  br i1 %cmp90, label %if.then92, label %if.end106, !dbg !7960

if.then92:                                        ; preds = %cond.end
  %58 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7964
  %end93 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %58, i32 0, i32 54, !dbg !7964
  %59 = load float, float* %end93, align 8, !dbg !7964
  %60 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7964
  %lifetime94 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %60, i32 0, i32 55, !dbg !7964
  %61 = load float, float* %lifetime94, align 4, !dbg !7964
  %add95 = fadd float %59, %61, !dbg !7964
  %cmp96 = fcmp ogt float 1.000000e+02, %add95, !dbg !7964
  br i1 %cmp96, label %cond.true98, label %cond.false99, !dbg !7964

cond.true98:                                      ; preds = %if.then92
  br label %cond.end103, !dbg !7964

cond.false99:                                     ; preds = %if.then92
  %62 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7964
  %end100 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %62, i32 0, i32 54, !dbg !7964
  %63 = load float, float* %end100, align 8, !dbg !7964
  %64 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7964
  %lifetime101 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %64, i32 0, i32 55, !dbg !7964
  %65 = load float, float* %lifetime101, align 4, !dbg !7964
  %add102 = fadd float %63, %65, !dbg !7964
  br label %cond.end103, !dbg !7964

cond.end103:                                      ; preds = %cond.false99, %cond.true98
  %cond104 = phi float [ 1.000000e+02, %cond.true98 ], [ %add102, %cond.false99 ], !dbg !7964
  %66 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7964
  %path_start105 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %66, i32 0, i32 117, !dbg !7964
  store float %cond104, float* %path_start105, align 8, !dbg !7964
  br label %if.end106, !dbg !7964

if.end106:                                        ; preds = %cond.end103, %cond.end
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then81
  %67 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7966
  %path_end108 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %67, i32 0, i32 118, !dbg !7966
  %68 = load float, float* %path_end108, align 4, !dbg !7966
  %cmp109 = fcmp olt float %68, 0.000000e+00, !dbg !7966
  br i1 %cmp109, label %if.then111, label %if.else113, !dbg !7969

if.then111:                                       ; preds = %if.end107
  %69 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7966
  %path_end112 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %69, i32 0, i32 118, !dbg !7966
  store float 0.000000e+00, float* %path_end112, align 4, !dbg !7966
  br label %if.end144, !dbg !7966

if.else113:                                       ; preds = %if.end107
  %70 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7970
  %path_end114 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %70, i32 0, i32 118, !dbg !7970
  %71 = load float, float* %path_end114, align 4, !dbg !7970
  %72 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7970
  %end115 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %72, i32 0, i32 54, !dbg !7970
  %73 = load float, float* %end115, align 8, !dbg !7970
  %74 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7970
  %lifetime116 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %74, i32 0, i32 55, !dbg !7970
  %75 = load float, float* %lifetime116, align 4, !dbg !7970
  %add117 = fadd float %73, %75, !dbg !7970
  %cmp118 = fcmp ogt float 1.000000e+02, %add117, !dbg !7970
  br i1 %cmp118, label %cond.true120, label %cond.false121, !dbg !7970

cond.true120:                                     ; preds = %if.else113
  br label %cond.end125, !dbg !7970

cond.false121:                                    ; preds = %if.else113
  %76 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7970
  %end122 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %76, i32 0, i32 54, !dbg !7970
  %77 = load float, float* %end122, align 8, !dbg !7970
  %78 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7970
  %lifetime123 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %78, i32 0, i32 55, !dbg !7970
  %79 = load float, float* %lifetime123, align 4, !dbg !7970
  %add124 = fadd float %77, %79, !dbg !7970
  br label %cond.end125, !dbg !7970

cond.end125:                                      ; preds = %cond.false121, %cond.true120
  %cond126 = phi float [ 1.000000e+02, %cond.true120 ], [ %add124, %cond.false121 ], !dbg !7970
  %cmp127 = fcmp ogt float %71, %cond126, !dbg !7970
  br i1 %cmp127, label %if.then129, label %if.end143, !dbg !7966

if.then129:                                       ; preds = %cond.end125
  %80 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7970
  %end130 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %80, i32 0, i32 54, !dbg !7970
  %81 = load float, float* %end130, align 8, !dbg !7970
  %82 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7970
  %lifetime131 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %82, i32 0, i32 55, !dbg !7970
  %83 = load float, float* %lifetime131, align 4, !dbg !7970
  %add132 = fadd float %81, %83, !dbg !7970
  %cmp133 = fcmp ogt float 1.000000e+02, %add132, !dbg !7970
  br i1 %cmp133, label %cond.true135, label %cond.false136, !dbg !7970

cond.true135:                                     ; preds = %if.then129
  br label %cond.end140, !dbg !7970

cond.false136:                                    ; preds = %if.then129
  %84 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7970
  %end137 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %84, i32 0, i32 54, !dbg !7970
  %85 = load float, float* %end137, align 8, !dbg !7970
  %86 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7970
  %lifetime138 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %86, i32 0, i32 55, !dbg !7970
  %87 = load float, float* %lifetime138, align 4, !dbg !7970
  %add139 = fadd float %85, %87, !dbg !7970
  br label %cond.end140, !dbg !7970

cond.end140:                                      ; preds = %cond.false136, %cond.true135
  %cond141 = phi float [ 1.000000e+02, %cond.true135 ], [ %add139, %cond.false136 ], !dbg !7970
  %88 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7970
  %path_end142 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %88, i32 0, i32 118, !dbg !7970
  store float %cond141, float* %path_end142, align 4, !dbg !7970
  br label %if.end143, !dbg !7970

if.end143:                                        ; preds = %cond.end140, %cond.end125
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.then111
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.end76
  %89 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !7972
  call void @psys_reset(%struct.ParticleSystem* %89, i32 1), !dbg !7973
  ret void, !dbg !7974
}

declare dso_local void @BKE_ptcache_id_clear(%struct.PTCacheID*, i32, i32) #2

declare dso_local void @free_hair(%struct.Object*, %struct.ParticleSystem*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @psys_check_boid_data(%struct.ParticleSystem* %psys) #0 !dbg !7975 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %bpa = alloca %struct.BoidParticle*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !7978, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.declare(metadata %struct.BoidParticle** %bpa, metadata !7980, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !7982, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.declare(metadata i32* %p, metadata !7984, metadata !DIExpression()), !dbg !7983
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !7985
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 3, !dbg !7986
  %1 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !7986
  store %struct.ParticleData* %1, %struct.ParticleData** %pa, align 8, !dbg !7987
  %2 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !7988
  %tobool = icmp ne %struct.ParticleData* %2, null, !dbg !7988
  br i1 %tobool, label %if.end, label %if.then, !dbg !7990

if.then:                                          ; preds = %entry
  br label %if.end31, !dbg !7991

if.end:                                           ; preds = %entry
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !7992
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 2, !dbg !7994
  %4 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7994
  %tobool1 = icmp ne %struct.ParticleSettings* %4, null, !dbg !7992
  br i1 %tobool1, label %land.lhs.true, label %if.else, !dbg !7995

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !7996
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 2, !dbg !7997
  %6 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !7997
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %6, i32 0, i32 11, !dbg !7998
  %7 = load i16, i16* %phystype, align 8, !dbg !7998
  %conv = sext i16 %7 to i32, !dbg !7996
  %cmp = icmp eq i32 %conv, 3, !dbg !7999
  br i1 %cmp, label %if.then4, label %if.else, !dbg !8000

if.then4:                                         ; preds = %land.lhs.true
  %8 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8001
  %boid = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %8, i32 0, i32 4, !dbg !8004
  %9 = load %struct.BoidParticle*, %struct.BoidParticle** %boid, align 8, !dbg !8004
  %tobool5 = icmp ne %struct.BoidParticle* %9, null, !dbg !8001
  br i1 %tobool5, label %if.end14, label %if.then6, !dbg !8005

if.then6:                                         ; preds = %if.then4
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8006
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8008
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 26, !dbg !8009
  %12 = load i32, i32* %totpart, align 8, !dbg !8009
  %conv7 = sext i32 %12 to i64, !dbg !8008
  %mul = mul i64 %conv7, 56, !dbg !8010
  %call = call i8* %10(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)), !dbg !8006
  %13 = bitcast i8* %call to %struct.BoidParticle*, !dbg !8006
  store %struct.BoidParticle* %13, %struct.BoidParticle** %bpa, align 8, !dbg !8011
  store i32 0, i32* %p, align 4, !dbg !8012
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8012
  %particles8 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 3, !dbg !8012
  %15 = load %struct.ParticleData*, %struct.ParticleData** %particles8, align 8, !dbg !8012
  store %struct.ParticleData* %15, %struct.ParticleData** %pa, align 8, !dbg !8012
  br label %for.cond, !dbg !8012

for.cond:                                         ; preds = %for.inc, %if.then6
  %16 = load i32, i32* %p, align 4, !dbg !8014
  %17 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8014
  %totpart9 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %17, i32 0, i32 26, !dbg !8014
  %18 = load i32, i32* %totpart9, align 8, !dbg !8014
  %cmp10 = icmp slt i32 %16, %18, !dbg !8014
  br i1 %cmp10, label %for.body, label %for.end, !dbg !8012

for.body:                                         ; preds = %for.cond
  %19 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !8016
  %incdec.ptr = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %19, i32 1, !dbg !8016
  store %struct.BoidParticle* %incdec.ptr, %struct.BoidParticle** %bpa, align 8, !dbg !8016
  %20 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8017
  %boid12 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %20, i32 0, i32 4, !dbg !8018
  store %struct.BoidParticle* %19, %struct.BoidParticle** %boid12, align 8, !dbg !8019
  br label %for.inc, !dbg !8017

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %p, align 4, !dbg !8014
  %inc = add nsw i32 %21, 1, !dbg !8014
  store i32 %inc, i32* %p, align 4, !dbg !8014
  %22 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8014
  %incdec.ptr13 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %22, i32 1, !dbg !8014
  store %struct.ParticleData* %incdec.ptr13, %struct.ParticleData** %pa, align 8, !dbg !8014
  br label %for.cond, !dbg !8014, !llvm.loop !8020

for.end:                                          ; preds = %for.cond
  br label %if.end14, !dbg !8022

if.end14:                                         ; preds = %for.end, %if.then4
  br label %if.end31, !dbg !8023

if.else:                                          ; preds = %land.lhs.true, %if.end
  %23 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8024
  %boid15 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %23, i32 0, i32 4, !dbg !8026
  %24 = load %struct.BoidParticle*, %struct.BoidParticle** %boid15, align 8, !dbg !8026
  %tobool16 = icmp ne %struct.BoidParticle* %24, null, !dbg !8024
  br i1 %tobool16, label %if.then17, label %if.end30, !dbg !8027

if.then17:                                        ; preds = %if.else
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8028
  %26 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8030
  %boid18 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %26, i32 0, i32 4, !dbg !8031
  %27 = load %struct.BoidParticle*, %struct.BoidParticle** %boid18, align 8, !dbg !8031
  %28 = bitcast %struct.BoidParticle* %27 to i8*, !dbg !8030
  call void %25(i8* %28), !dbg !8028
  store i32 0, i32* %p, align 4, !dbg !8032
  %29 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8032
  %particles19 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %29, i32 0, i32 3, !dbg !8032
  %30 = load %struct.ParticleData*, %struct.ParticleData** %particles19, align 8, !dbg !8032
  store %struct.ParticleData* %30, %struct.ParticleData** %pa, align 8, !dbg !8032
  br label %for.cond20, !dbg !8032

for.cond20:                                       ; preds = %for.inc26, %if.then17
  %31 = load i32, i32* %p, align 4, !dbg !8034
  %32 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8034
  %totpart21 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %32, i32 0, i32 26, !dbg !8034
  %33 = load i32, i32* %totpart21, align 8, !dbg !8034
  %cmp22 = icmp slt i32 %31, %33, !dbg !8034
  br i1 %cmp22, label %for.body24, label %for.end29, !dbg !8032

for.body24:                                       ; preds = %for.cond20
  %34 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8036
  %boid25 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %34, i32 0, i32 4, !dbg !8037
  store %struct.BoidParticle* null, %struct.BoidParticle** %boid25, align 8, !dbg !8038
  br label %for.inc26, !dbg !8036

for.inc26:                                        ; preds = %for.body24
  %35 = load i32, i32* %p, align 4, !dbg !8034
  %inc27 = add nsw i32 %35, 1, !dbg !8034
  store i32 %inc27, i32* %p, align 4, !dbg !8034
  %36 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8034
  %incdec.ptr28 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %36, i32 1, !dbg !8034
  store %struct.ParticleData* %incdec.ptr28, %struct.ParticleData** %pa, align 8, !dbg !8034
  br label %for.cond20, !dbg !8034, !llvm.loop !8039

for.end29:                                        ; preds = %for.cond20
  br label %if.end30, !dbg !8041

if.end30:                                         ; preds = %for.end29, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.then, %if.end30, %if.end14
  ret void, !dbg !8042
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @particle_system_update(%struct.Scene* %scene, %struct.Object* %ob, %struct.ParticleSystem* %psys) #0 !dbg !8043 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %sim = alloca %struct.ParticleSimulationData, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %cfra = alloca float, align 4
  %hcfra = alloca float, align 4
  %i = alloca i32, align 4
  %recalc63 = alloca i32, align 4
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %disp = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8046, metadata !DIExpression()), !dbg !8047
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8048, metadata !DIExpression()), !dbg !8049
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !8050, metadata !DIExpression()), !dbg !8051
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData* %sim, metadata !8052, metadata !DIExpression()), !dbg !8053
  %0 = bitcast %struct.ParticleSimulationData* %sim to i8*, !dbg !8053
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 48, i1 false), !dbg !8053
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !8054, metadata !DIExpression()), !dbg !8055
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8056
  %part1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 2, !dbg !8057
  %2 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part1, align 8, !dbg !8057
  store %struct.ParticleSettings* %2, %struct.ParticleSettings** %part, align 8, !dbg !8055
  call void @llvm.dbg.declare(metadata float* %cfra, metadata !8058, metadata !DIExpression()), !dbg !8059
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8060
  %pdd = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 48, !dbg !8062
  %4 = load %struct.ParticleDrawData*, %struct.ParticleDrawData** %pdd, align 8, !dbg !8062
  %tobool = icmp ne %struct.ParticleDrawData* %4, null, !dbg !8060
  br i1 %tobool, label %if.then, label %if.end, !dbg !8063

if.then:                                          ; preds = %entry
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8064
  %pdd2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 48, !dbg !8065
  %6 = load %struct.ParticleDrawData*, %struct.ParticleDrawData** %pdd2, align 8, !dbg !8065
  %flag = getelementptr inbounds %struct.ParticleDrawData, %struct.ParticleDrawData* %6, i32 0, i32 10, !dbg !8066
  %7 = load i32, i32* %flag, align 4, !dbg !8067
  %and = and i32 %7, -2, !dbg !8067
  store i32 %and, i32* %flag, align 4, !dbg !8067
  br label %if.end, !dbg !8064

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8068
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8070
  %call = call i32 @psys_check_enabled(%struct.Object* %8, %struct.ParticleSystem* %9), !dbg !8071
  %tobool3 = icmp ne i32 %call, 0, !dbg !8071
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !8072

if.then4:                                         ; preds = %if.end
  br label %if.end200, !dbg !8073

if.end5:                                          ; preds = %if.end
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8074
  %call6 = call float @BKE_scene_frame_get(%struct.Scene* %10), !dbg !8075
  store float %call6, float* %cfra, align 4, !dbg !8076
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8077
  %scene7 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 0, !dbg !8078
  store %struct.Scene* %11, %struct.Scene** %scene7, align 8, !dbg !8079
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8080
  %ob8 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 1, !dbg !8081
  store %struct.Object* %12, %struct.Object** %ob8, align 8, !dbg !8082
  %13 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8083
  %psys9 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 2, !dbg !8084
  store %struct.ParticleSystem* %13, %struct.ParticleSystem** %psys9, align 8, !dbg !8085
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8086
  %15 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8087
  %call10 = call %struct.ParticleSystemModifierData* @psys_get_modifier(%struct.Object* %14, %struct.ParticleSystem* %15), !dbg !8088
  %psmd = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 3, !dbg !8089
  store %struct.ParticleSystemModifierData* %call10, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !8090
  %psmd11 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 3, !dbg !8091
  %16 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd11, align 8, !dbg !8091
  %flag12 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %16, i32 0, i32 6, !dbg !8093
  %17 = load i16, i16* %flag12, align 4, !dbg !8093
  %conv = sext i16 %17 to i32, !dbg !8094
  %and13 = and i32 %conv, 2, !dbg !8095
  %tobool14 = icmp ne i32 %and13, 0, !dbg !8095
  br i1 %tobool14, label %if.then15, label %if.end25, !dbg !8096

if.then15:                                        ; preds = %if.end5
  %psmd16 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 3, !dbg !8097
  %18 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd16, align 8, !dbg !8097
  %flag17 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %18, i32 0, i32 6, !dbg !8099
  %19 = load i16, i16* %flag17, align 4, !dbg !8100
  %conv18 = sext i16 %19 to i32, !dbg !8100
  %and19 = and i32 %conv18, -3, !dbg !8100
  %conv20 = trunc i32 %and19 to i16, !dbg !8100
  store i16 %conv20, i16* %flag17, align 4, !dbg !8100
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8101
  %cfra21 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 20, !dbg !8103
  %21 = load float, float* %cfra21, align 8, !dbg !8103
  %22 = load float, float* %cfra, align 4, !dbg !8104
  %cmp = fcmp oeq float %21, %22, !dbg !8105
  br i1 %cmp, label %if.then23, label %if.end24, !dbg !8106

if.then23:                                        ; preds = %if.then15
  br label %if.end200, !dbg !8107

if.end24:                                         ; preds = %if.then15
  br label %if.end25, !dbg !8108

if.end25:                                         ; preds = %if.end24, %if.end5
  %psmd26 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 3, !dbg !8109
  %23 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd26, align 8, !dbg !8109
  %dm = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %23, i32 0, i32 2, !dbg !8111
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !8111
  %tobool27 = icmp ne %struct.DerivedMesh* %24, null, !dbg !8112
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !8113

if.then28:                                        ; preds = %if.end25
  br label %if.end200, !dbg !8114

if.end29:                                         ; preds = %if.end25
  %25 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8115
  %from = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %25, i32 0, i32 8, !dbg !8117
  %26 = load i16, i16* %from, align 2, !dbg !8117
  %conv30 = sext i16 %26 to i32, !dbg !8115
  %cmp31 = icmp ne i32 %conv30, 0, !dbg !8118
  br i1 %cmp31, label %if.then33, label %if.end36, !dbg !8119

if.then33:                                        ; preds = %if.end29
  %psmd34 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 3, !dbg !8120
  %27 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd34, align 8, !dbg !8120
  %dm35 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %27, i32 0, i32 2, !dbg !8122
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm35, align 8, !dbg !8122
  call void @DM_ensure_tessface(%struct.DerivedMesh* %28), !dbg !8123
  br label %if.end36, !dbg !8124

if.end36:                                         ; preds = %if.then33, %if.end29
  %29 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8125
  %30 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8126
  %id = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %30, i32 0, i32 0, !dbg !8127
  %31 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8128
  %adt = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %31, i32 0, i32 1, !dbg !8129
  %32 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !8129
  %33 = load float, float* %cfra, align 4, !dbg !8130
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %29, %struct.ID* %id, %struct.AnimData* %32, float %33, i16 signext 1), !dbg !8131
  %34 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8132
  %flag37 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %34, i32 0, i32 25, !dbg !8133
  %35 = load i32, i32* %flag37, align 4, !dbg !8134
  %and38 = and i32 %35, -16385, !dbg !8134
  store i32 %and38, i32* %flag37, align 4, !dbg !8134
  %36 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8135
  %recalc = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %36, i32 0, i32 31, !dbg !8137
  %37 = load i16, i16* %recalc, align 4, !dbg !8137
  %conv39 = sext i16 %37 to i32, !dbg !8135
  %and40 = and i32 %conv39, 32, !dbg !8138
  %tobool41 = icmp ne i32 %and40, 0, !dbg !8138
  br i1 %tobool41, label %if.then42, label %if.end45, !dbg !8139

if.then42:                                        ; preds = %if.end36
  %ob43 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 1, !dbg !8140
  %38 = load %struct.Object*, %struct.Object** %ob43, align 8, !dbg !8140
  %psys44 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 2, !dbg !8141
  %39 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys44, align 8, !dbg !8141
  call void @psys_changed_type(%struct.Object* %38, %struct.ParticleSystem* %39), !dbg !8142
  br label %if.end45, !dbg !8142

if.end45:                                         ; preds = %if.then42, %if.end36
  %40 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8143
  %recalc46 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %40, i32 0, i32 31, !dbg !8145
  %41 = load i16, i16* %recalc46, align 4, !dbg !8145
  %conv47 = sext i16 %41 to i32, !dbg !8143
  %and48 = and i32 %conv47, 16, !dbg !8146
  %tobool49 = icmp ne i32 %and48, 0, !dbg !8146
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !8147

if.then50:                                        ; preds = %if.end45
  %42 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8148
  %totunexist = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %42, i32 0, i32 27, !dbg !8149
  store i32 0, i32* %totunexist, align 4, !dbg !8150
  br label %if.end51, !dbg !8148

if.end51:                                         ; preds = %if.then50, %if.end45
  call void @psys_prepare_physics(%struct.ParticleSimulationData* %sim), !dbg !8151
  %43 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8152
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %43, i32 0, i32 7, !dbg !8153
  %44 = load i16, i16* %type, align 8, !dbg !8153
  %conv52 = sext i16 %44 to i32, !dbg !8152
  switch i32 %conv52, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb112
  ], !dbg !8154

sw.bb:                                            ; preds = %if.end51
  %45 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8155
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %45, i32 0, i32 26, !dbg !8159
  %46 = load i32, i32* %totpart, align 8, !dbg !8159
  %cmp53 = icmp eq i32 %46, 0, !dbg !8160
  br i1 %cmp53, label %land.lhs.true, label %if.else, !dbg !8161

land.lhs.true:                                    ; preds = %sw.bb
  %47 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8162
  %totpart55 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %47, i32 0, i32 63, !dbg !8163
  %48 = load i32, i32* %totpart55, align 4, !dbg !8163
  %cmp56 = icmp eq i32 %48, 0, !dbg !8164
  br i1 %cmp56, label %if.then58, label %if.else, !dbg !8165

if.then58:                                        ; preds = %land.lhs.true
  %49 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8166
  call void @psys_free_path_cache(%struct.ParticleSystem* %49, %struct.PTCacheEdit* null), !dbg !8168
  %50 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8169
  %51 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8170
  call void @free_hair(%struct.Object* %50, %struct.ParticleSystem* %51, i32 0), !dbg !8171
  %52 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8172
  %flag59 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %52, i32 0, i32 25, !dbg !8173
  %53 = load i32, i32* %flag59, align 4, !dbg !8174
  %or = or i32 %53, 512, !dbg !8174
  store i32 %or, i32* %flag59, align 4, !dbg !8174
  br label %if.end106, !dbg !8175

if.else:                                          ; preds = %land.lhs.true, %sw.bb
  %54 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8176
  %call60 = call i32 @hair_needs_recalc(%struct.ParticleSystem* %54), !dbg !8178
  %tobool61 = icmp ne i32 %call60, 0, !dbg !8178
  br i1 %tobool61, label %if.then62, label %if.else97, !dbg !8179

if.then62:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %hcfra, metadata !8180, metadata !DIExpression()), !dbg !8182
  store float 0.000000e+00, float* %hcfra, align 4, !dbg !8182
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8183, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.declare(metadata i32* %recalc63, metadata !8185, metadata !DIExpression()), !dbg !8186
  %55 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8187
  %recalc64 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %55, i32 0, i32 31, !dbg !8188
  %56 = load i16, i16* %recalc64, align 4, !dbg !8188
  %conv65 = sext i16 %56 to i32, !dbg !8187
  store i32 %conv65, i32* %recalc63, align 4, !dbg !8186
  %57 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8189
  %58 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8190
  call void @free_hair(%struct.Object* %57, %struct.ParticleSystem* %58, i32 0), !dbg !8191
  %59 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8192
  %edit = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %59, i32 0, i32 5, !dbg !8194
  %60 = load %struct.PTCacheEdit*, %struct.PTCacheEdit** %edit, align 8, !dbg !8194
  %tobool66 = icmp ne %struct.PTCacheEdit* %60, null, !dbg !8192
  br i1 %tobool66, label %land.lhs.true67, label %if.end74, !dbg !8195

land.lhs.true67:                                  ; preds = %if.then62
  %61 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8196
  %free_edit = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %61, i32 0, i32 6, !dbg !8197
  %62 = load void (%struct.PTCacheEdit*)*, void (%struct.PTCacheEdit*)** %free_edit, align 8, !dbg !8197
  %tobool68 = icmp ne void (%struct.PTCacheEdit*)* %62, null, !dbg !8196
  br i1 %tobool68, label %if.then69, label %if.end74, !dbg !8198

if.then69:                                        ; preds = %land.lhs.true67
  %63 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8199
  %free_edit70 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %63, i32 0, i32 6, !dbg !8201
  %64 = load void (%struct.PTCacheEdit*)*, void (%struct.PTCacheEdit*)** %free_edit70, align 8, !dbg !8201
  %65 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8202
  %edit71 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %65, i32 0, i32 5, !dbg !8203
  %66 = load %struct.PTCacheEdit*, %struct.PTCacheEdit** %edit71, align 8, !dbg !8203
  call void %64(%struct.PTCacheEdit* %66), !dbg !8199
  %67 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8204
  %edit72 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %67, i32 0, i32 5, !dbg !8205
  store %struct.PTCacheEdit* null, %struct.PTCacheEdit** %edit72, align 8, !dbg !8206
  %68 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8207
  %free_edit73 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %68, i32 0, i32 6, !dbg !8208
  store void (%struct.PTCacheEdit*)* null, void (%struct.PTCacheEdit*)** %free_edit73, align 8, !dbg !8209
  br label %if.end74, !dbg !8210

if.end74:                                         ; preds = %if.then69, %land.lhs.true67, %if.then62
  %69 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8211
  %cfra75 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %69, i32 0, i32 20, !dbg !8212
  store float 1.000000e+00, float* %cfra75, align 8, !dbg !8213
  store i32 0, i32* %i, align 4, !dbg !8214
  br label %for.cond, !dbg !8216

for.cond:                                         ; preds = %for.inc, %if.end74
  %70 = load i32, i32* %i, align 4, !dbg !8217
  %71 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8219
  %hair_step = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %71, i32 0, i32 26, !dbg !8220
  %72 = load i16, i16* %hair_step, align 2, !dbg !8220
  %conv76 = sext i16 %72 to i32, !dbg !8219
  %cmp77 = icmp sle i32 %70, %conv76, !dbg !8221
  br i1 %cmp77, label %for.body, label %for.end, !dbg !8222

for.body:                                         ; preds = %for.cond
  %73 = load i32, i32* %i, align 4, !dbg !8223
  %conv79 = sitofp i32 %73 to float, !dbg !8225
  %mul = fmul float 1.000000e+02, %conv79, !dbg !8226
  %74 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8227
  %part80 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %74, i32 0, i32 2, !dbg !8228
  %75 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part80, align 8, !dbg !8228
  %hair_step81 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %75, i32 0, i32 26, !dbg !8229
  %76 = load i16, i16* %hair_step81, align 2, !dbg !8229
  %conv82 = sitofp i16 %76 to float, !dbg !8230
  %div = fdiv float %mul, %conv82, !dbg !8231
  store float %div, float* %hcfra, align 4, !dbg !8232
  %77 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8233
  %flag83 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %77, i32 0, i32 5, !dbg !8235
  %78 = load i32, i32* %flag83, align 8, !dbg !8235
  %and84 = and i32 %78, 16, !dbg !8236
  %cmp85 = icmp eq i32 %and84, 0, !dbg !8237
  br i1 %cmp85, label %if.then87, label %if.end90, !dbg !8238

if.then87:                                        ; preds = %for.body
  %79 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8239
  %80 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8240
  %id88 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %80, i32 0, i32 0, !dbg !8241
  %81 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8242
  %adt89 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %81, i32 0, i32 1, !dbg !8243
  %82 = load %struct.AnimData*, %struct.AnimData** %adt89, align 8, !dbg !8243
  %83 = load float, float* %hcfra, align 4, !dbg !8244
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %79, %struct.ID* %id88, %struct.AnimData* %82, float %83, i16 signext 2), !dbg !8245
  br label %if.end90, !dbg !8245

if.end90:                                         ; preds = %if.then87, %for.body
  %84 = load float, float* %hcfra, align 4, !dbg !8246
  call void @system_step(%struct.ParticleSimulationData* %sim, float %84), !dbg !8247
  %85 = load float, float* %hcfra, align 4, !dbg !8248
  %86 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8249
  %cfra91 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %86, i32 0, i32 20, !dbg !8250
  store float %85, float* %cfra91, align 8, !dbg !8251
  %87 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8252
  %recalc92 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %87, i32 0, i32 31, !dbg !8253
  store i16 0, i16* %recalc92, align 4, !dbg !8254
  %88 = load float, float* %hcfra, align 4, !dbg !8255
  call void @save_hair(%struct.ParticleSimulationData* %sim, float %88), !dbg !8256
  br label %for.inc, !dbg !8257

for.inc:                                          ; preds = %if.end90
  %89 = load i32, i32* %i, align 4, !dbg !8258
  %inc = add nsw i32 %89, 1, !dbg !8258
  store i32 %inc, i32* %i, align 4, !dbg !8258
  br label %for.cond, !dbg !8259, !llvm.loop !8260

for.end:                                          ; preds = %for.cond
  %90 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8262
  %flag93 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %90, i32 0, i32 25, !dbg !8263
  %91 = load i32, i32* %flag93, align 4, !dbg !8264
  %or94 = or i32 %91, 512, !dbg !8264
  store i32 %or94, i32* %flag93, align 4, !dbg !8264
  %92 = load i32, i32* %recalc63, align 4, !dbg !8265
  %conv95 = trunc i32 %92 to i16, !dbg !8265
  %93 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8266
  %recalc96 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %93, i32 0, i32 31, !dbg !8267
  store i16 %conv95, i16* %recalc96, align 4, !dbg !8268
  br label %if.end105, !dbg !8269

if.else97:                                        ; preds = %if.else
  %94 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8270
  %flag98 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %94, i32 0, i32 25, !dbg !8272
  %95 = load i32, i32* %flag98, align 4, !dbg !8272
  %and99 = and i32 %95, 2048, !dbg !8273
  %tobool100 = icmp ne i32 %and99, 0, !dbg !8273
  br i1 %tobool100, label %if.then101, label %if.end104, !dbg !8274

if.then101:                                       ; preds = %if.else97
  %96 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8275
  %flag102 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %96, i32 0, i32 25, !dbg !8276
  %97 = load i32, i32* %flag102, align 4, !dbg !8277
  %or103 = or i32 %97, 512, !dbg !8277
  store i32 %or103, i32* %flag102, align 4, !dbg !8277
  br label %if.end104, !dbg !8275

if.end104:                                        ; preds = %if.then101, %if.else97
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %for.end
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then58
  %98 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8278
  %flag107 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %98, i32 0, i32 25, !dbg !8280
  %99 = load i32, i32* %flag107, align 4, !dbg !8280
  %and108 = and i32 %99, 512, !dbg !8281
  %tobool109 = icmp ne i32 %and108, 0, !dbg !8281
  br i1 %tobool109, label %if.then110, label %if.end111, !dbg !8282

if.then110:                                       ; preds = %if.end106
  %100 = load float, float* %cfra, align 4, !dbg !8283
  call void @hair_step(%struct.ParticleSimulationData* %sim, float %100), !dbg !8284
  br label %if.end111, !dbg !8284

if.end111:                                        ; preds = %if.then110, %if.end106
  br label %sw.epilog185, !dbg !8285

sw.bb112:                                         ; preds = %if.end51
  %101 = load float, float* %cfra, align 4, !dbg !8286
  %conv113 = fptosi float %101 to i32, !dbg !8288
  call void @particles_fluid_step(%struct.ParticleSimulationData* %sim, i32 %conv113), !dbg !8289
  br label %sw.epilog185, !dbg !8290

sw.default:                                       ; preds = %if.end51
  %102 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8291
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %102, i32 0, i32 11, !dbg !8293
  %103 = load i16, i16* %phystype, align 8, !dbg !8293
  %conv114 = sext i16 %103 to i32, !dbg !8291
  switch i32 %conv114, label %sw.default184 [
    i32 0, label %sw.bb115
    i32 2, label %sw.bb115
  ], !dbg !8294

sw.bb115:                                         ; preds = %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !8295, metadata !DIExpression()), !dbg !8298
  call void @llvm.dbg.declare(metadata i32* %p, metadata !8299, metadata !DIExpression()), !dbg !8298
  call void @llvm.dbg.declare(metadata float* %disp, metadata !8300, metadata !DIExpression()), !dbg !8301
  %104 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8302
  %call116 = call float @psys_get_current_display_percentage(%struct.ParticleSystem* %104), !dbg !8303
  store float %call116, float* %disp, align 4, !dbg !8301
  %105 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8304
  %recalc117 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %105, i32 0, i32 31, !dbg !8306
  %106 = load i16, i16* %recalc117, align 4, !dbg !8306
  %conv118 = sext i16 %106 to i32, !dbg !8304
  %and119 = and i32 %conv118, 16, !dbg !8307
  %tobool120 = icmp ne i32 %and119, 0, !dbg !8307
  br i1 %tobool120, label %if.then121, label %if.end122, !dbg !8308

if.then121:                                       ; preds = %sw.bb115
  %107 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8309
  call void @psys_reset(%struct.ParticleSystem* %107, i32 1), !dbg !8310
  br label %if.end122, !dbg !8310

if.end122:                                        ; preds = %if.then121, %sw.bb115
  %108 = load float, float* %cfra, align 4, !dbg !8311
  %call123 = call i32 @emit_particles(%struct.ParticleSimulationData* %sim, %struct.PTCacheID* null, float %108), !dbg !8313
  %tobool124 = icmp ne i32 %call123, 0, !dbg !8313
  br i1 %tobool124, label %if.then129, label %lor.lhs.false, !dbg !8314

lor.lhs.false:                                    ; preds = %if.end122
  %109 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8315
  %recalc125 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %109, i32 0, i32 31, !dbg !8316
  %110 = load i16, i16* %recalc125, align 4, !dbg !8316
  %conv126 = sext i16 %110 to i32, !dbg !8315
  %and127 = and i32 %conv126, 16, !dbg !8317
  %tobool128 = icmp ne i32 %and127, 0, !dbg !8317
  br i1 %tobool128, label %if.then129, label %if.end137, !dbg !8318

if.then129:                                       ; preds = %lor.lhs.false, %if.end122
  %111 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8319
  call void @free_keyed_keys(%struct.ParticleSystem* %111), !dbg !8321
  %112 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8322
  %from130 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %112, i32 0, i32 8, !dbg !8323
  %113 = load i16, i16* %from130, align 2, !dbg !8323
  %conv131 = sext i16 %113 to i32, !dbg !8322
  call void @distribute_particles(%struct.ParticleSimulationData* %sim, i32 %conv131), !dbg !8324
  call void @initialize_all_particles(%struct.ParticleSimulationData* %sim), !dbg !8325
  %psmd132 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 3, !dbg !8326
  %114 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd132, align 8, !dbg !8326
  %flag133 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %114, i32 0, i32 6, !dbg !8327
  %115 = load i16, i16* %flag133, align 4, !dbg !8328
  %conv134 = sext i16 %115 to i32, !dbg !8328
  %or135 = or i32 %conv134, 1, !dbg !8328
  %conv136 = trunc i32 %or135 to i16, !dbg !8328
  store i16 %conv136, i16* %flag133, align 4, !dbg !8328
  br label %if.end137, !dbg !8329

if.end137:                                        ; preds = %if.then129, %lor.lhs.false
  store i32 0, i32* %p, align 4, !dbg !8330
  %116 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8330
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %116, i32 0, i32 3, !dbg !8330
  %117 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !8330
  store %struct.ParticleData* %117, %struct.ParticleData** %pa, align 8, !dbg !8330
  br label %for.cond138, !dbg !8330

for.cond138:                                      ; preds = %for.inc173, %if.end137
  %118 = load i32, i32* %p, align 4, !dbg !8332
  %119 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8332
  %totpart139 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %119, i32 0, i32 26, !dbg !8332
  %120 = load i32, i32* %totpart139, align 8, !dbg !8332
  %cmp140 = icmp slt i32 %118, %120, !dbg !8332
  br i1 %cmp140, label %for.body142, label %for.end175, !dbg !8330

for.body142:                                      ; preds = %for.cond138
  %121 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8334
  %flag143 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %121, i32 0, i32 17, !dbg !8334
  %122 = load i16, i16* %flag143, align 4, !dbg !8334
  %conv144 = sext i16 %122 to i32, !dbg !8334
  %and145 = and i32 %conv144, 1, !dbg !8334
  %tobool146 = icmp ne i32 %and145, 0, !dbg !8334
  br i1 %tobool146, label %if.end172, label %if.then147, !dbg !8332

if.then147:                                       ; preds = %for.body142
  %123 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8336
  %size = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %123, i32 0, i32 82, !dbg !8338
  %124 = load float, float* %size, align 8, !dbg !8338
  %125 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8339
  %size148 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %125, i32 0, i32 13, !dbg !8340
  store float %124, float* %size148, align 4, !dbg !8341
  %126 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8342
  %randsize = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %126, i32 0, i32 83, !dbg !8344
  %127 = load float, float* %randsize, align 4, !dbg !8344
  %cmp149 = fcmp ogt float %127, 0.000000e+00, !dbg !8345
  br i1 %cmp149, label %if.then151, label %if.end157, !dbg !8346

if.then151:                                       ; preds = %if.then147
  %128 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8347
  %randsize152 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %128, i32 0, i32 83, !dbg !8348
  %129 = load float, float* %randsize152, align 4, !dbg !8348
  %130 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8349
  %131 = load i32, i32* %p, align 4, !dbg !8350
  %add = add nsw i32 %131, 1, !dbg !8351
  %call153 = call float @psys_frand(%struct.ParticleSystem* %130, i32 %add), !dbg !8352
  %mul154 = fmul float %129, %call153, !dbg !8353
  %sub = fsub float 1.000000e+00, %mul154, !dbg !8354
  %132 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8355
  %size155 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %132, i32 0, i32 13, !dbg !8356
  %133 = load float, float* %size155, align 4, !dbg !8357
  %mul156 = fmul float %133, %sub, !dbg !8357
  store float %mul156, float* %size155, align 4, !dbg !8357
  br label %if.end157, !dbg !8355

if.end157:                                        ; preds = %if.then151, %if.then147
  %134 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8358
  %135 = load float, float* %cfra, align 4, !dbg !8359
  call void @reset_particle(%struct.ParticleSimulationData* %sim, %struct.ParticleData* %134, float 0.000000e+00, float %135), !dbg !8360
  %136 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8361
  %137 = load i32, i32* %p, align 4, !dbg !8363
  %call158 = call float @psys_frand(%struct.ParticleSystem* %136, i32 %137), !dbg !8364
  %138 = load float, float* %disp, align 4, !dbg !8365
  %cmp159 = fcmp ogt float %call158, %138, !dbg !8366
  br i1 %cmp159, label %if.then161, label %if.else166, !dbg !8367

if.then161:                                       ; preds = %if.end157
  %139 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8368
  %flag162 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %139, i32 0, i32 17, !dbg !8369
  %140 = load i16, i16* %flag162, align 4, !dbg !8370
  %conv163 = sext i16 %140 to i32, !dbg !8370
  %or164 = or i32 %conv163, 2, !dbg !8370
  %conv165 = trunc i32 %or164 to i16, !dbg !8370
  store i16 %conv165, i16* %flag162, align 4, !dbg !8370
  br label %if.end171, !dbg !8368

if.else166:                                       ; preds = %if.end157
  %141 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8371
  %flag167 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %141, i32 0, i32 17, !dbg !8372
  %142 = load i16, i16* %flag167, align 4, !dbg !8373
  %conv168 = sext i16 %142 to i32, !dbg !8373
  %and169 = and i32 %conv168, -3, !dbg !8373
  %conv170 = trunc i32 %and169 to i16, !dbg !8373
  store i16 %conv170, i16* %flag167, align 4, !dbg !8373
  br label %if.end171

if.end171:                                        ; preds = %if.else166, %if.then161
  br label %if.end172, !dbg !8374

if.end172:                                        ; preds = %if.end171, %for.body142
  br label %for.inc173, !dbg !8334

for.inc173:                                       ; preds = %if.end172
  %143 = load i32, i32* %p, align 4, !dbg !8332
  %inc174 = add nsw i32 %143, 1, !dbg !8332
  store i32 %inc174, i32* %p, align 4, !dbg !8332
  %144 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8332
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %144, i32 1, !dbg !8332
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !8332
  br label %for.cond138, !dbg !8332, !llvm.loop !8375

for.end175:                                       ; preds = %for.cond138
  %145 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8377
  %phystype176 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %145, i32 0, i32 11, !dbg !8379
  %146 = load i16, i16* %phystype176, align 8, !dbg !8379
  %conv177 = sext i16 %146 to i32, !dbg !8377
  %cmp178 = icmp eq i32 %conv177, 2, !dbg !8380
  br i1 %cmp178, label %if.then180, label %if.end183, !dbg !8381

if.then180:                                       ; preds = %for.end175
  call void @psys_count_keyed_targets(%struct.ParticleSimulationData* %sim), !dbg !8382
  call void @set_keyed_keys(%struct.ParticleSimulationData* %sim), !dbg !8384
  %147 = load float, float* %cfra, align 4, !dbg !8385
  %conv181 = fptosi float %147 to i32, !dbg !8386
  %conv182 = sitofp i32 %conv181 to float, !dbg !8386
  call void @psys_update_path_cache(%struct.ParticleSimulationData* %sim, float %conv182), !dbg !8387
  br label %if.end183, !dbg !8388

if.end183:                                        ; preds = %if.then180, %for.end175
  br label %sw.epilog, !dbg !8389

sw.default184:                                    ; preds = %sw.default
  %148 = load float, float* %cfra, align 4, !dbg !8390
  call void @system_step(%struct.ParticleSimulationData* %sim, float %148), !dbg !8392
  br label %sw.epilog, !dbg !8393

sw.epilog:                                        ; preds = %sw.default184, %if.end183
  br label %sw.epilog185, !dbg !8394

sw.epilog185:                                     ; preds = %sw.epilog, %sw.bb112, %if.end111
  %149 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8395
  %flag186 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %149, i32 0, i32 25, !dbg !8397
  %150 = load i32, i32* %flag186, align 4, !dbg !8397
  %and187 = and i32 %150, 16384, !dbg !8398
  %tobool188 = icmp ne i32 %and187, 0, !dbg !8398
  br i1 %tobool188, label %if.then189, label %if.end192, !dbg !8399

if.then189:                                       ; preds = %sw.epilog185
  %151 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8400
  %152 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8402
  %153 = load float, float* %cfra, align 4, !dbg !8403
  call void @evaluate_emitter_anim(%struct.Scene* %151, %struct.Object* %152, float %153), !dbg !8404
  %154 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8405
  %flag190 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %154, i32 0, i32 25, !dbg !8406
  %155 = load i32, i32* %flag190, align 4, !dbg !8407
  %and191 = and i32 %155, -16385, !dbg !8407
  store i32 %and191, i32* %flag190, align 4, !dbg !8407
  br label %if.end192, !dbg !8408

if.end192:                                        ; preds = %if.then189, %sw.epilog185
  %156 = load float, float* %cfra, align 4, !dbg !8409
  %157 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8410
  %cfra193 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %157, i32 0, i32 20, !dbg !8411
  store float %156, float* %cfra193, align 8, !dbg !8412
  %158 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8413
  %recalc194 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %158, i32 0, i32 31, !dbg !8414
  store i16 0, i16* %recalc194, align 4, !dbg !8415
  %159 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8416
  %renderdata = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %159, i32 0, i32 39, !dbg !8418
  %160 = load i8*, i8** %renderdata, align 8, !dbg !8418
  %cmp195 = icmp eq i8* %160, null, !dbg !8419
  br i1 %cmp195, label %if.then197, label %if.end200, !dbg !8420

if.then197:                                       ; preds = %if.end192
  %161 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8421
  %imat = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %161, i32 0, i32 19, !dbg !8422
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !8421
  %162 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8423
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %162, i32 0, i32 47, !dbg !8424
  %arraydecay198 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !8423
  %call199 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay198), !dbg !8425
  br label %if.end200, !dbg !8425

if.end200:                                        ; preds = %if.then4, %if.then23, %if.then28, %if.then197, %if.end192
  ret void, !dbg !8426
}

declare dso_local i32 @psys_check_enabled(%struct.Object*, %struct.ParticleSystem*) #2

declare dso_local float @BKE_scene_frame_get(%struct.Scene*) #2

declare dso_local %struct.ParticleSystemModifierData* @psys_get_modifier(%struct.Object*, %struct.ParticleSystem*) #2

declare dso_local void @DM_ensure_tessface(%struct.DerivedMesh*) #2

declare dso_local void @BKE_animsys_evaluate_animdata(%struct.Scene*, %struct.ID*, %struct.AnimData*, float, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @psys_prepare_physics(%struct.ParticleSimulationData* %sim) #0 !dbg !8427 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %pid = alloca %struct.PTCacheID, align 8
  %state = alloca %struct.BoidState*, align 8
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !8428, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !8430, metadata !DIExpression()), !dbg !8431
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8432
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !8433
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8433
  %part1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 2, !dbg !8434
  %2 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part1, align 8, !dbg !8434
  store %struct.ParticleSettings* %2, %struct.ParticleSettings** %part, align 8, !dbg !8431
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8435
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %3, i32 0, i32 11, !dbg !8435
  %4 = load i16, i16* %phystype, align 8, !dbg !8435
  %conv = sext i16 %4 to i32, !dbg !8435
  %cmp = icmp eq i32 %conv, 0, !dbg !8435
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8435

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8435
  %phystype3 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %5, i32 0, i32 11, !dbg !8435
  %6 = load i16, i16* %phystype3, align 8, !dbg !8435
  %conv4 = sext i16 %6 to i32, !dbg !8435
  %cmp5 = icmp eq i32 %conv4, 2, !dbg !8435
  br i1 %cmp5, label %if.then, label %if.else, !dbg !8437

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata %struct.PTCacheID* %pid, metadata !8438, metadata !DIExpression()), !dbg !8440
  %7 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8441
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %7, i32 0, i32 1, !dbg !8442
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8442
  %9 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8443
  %psys7 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %9, i32 0, i32 2, !dbg !8444
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys7, align 8, !dbg !8444
  call void @BKE_ptcache_id_from_particles(%struct.PTCacheID* %pid, %struct.Object* %8, %struct.ParticleSystem* %10), !dbg !8445
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %pid, i32 0, i32 0), !dbg !8446
  br label %if.end, !dbg !8447

if.else:                                          ; preds = %lor.lhs.false
  %11 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8448
  %psys8 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %11, i32 0, i32 2, !dbg !8450
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys8, align 8, !dbg !8450
  call void @free_keyed_keys(%struct.ParticleSystem* %12), !dbg !8451
  %13 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8452
  %psys9 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %13, i32 0, i32 2, !dbg !8453
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys9, align 8, !dbg !8453
  %flag = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 25, !dbg !8454
  %15 = load i32, i32* %flag, align 4, !dbg !8455
  %and = and i32 %15, -1025, !dbg !8455
  store i32 %and, i32* %flag, align 4, !dbg !8455
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8456
  %phystype10 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %16, i32 0, i32 11, !dbg !8458
  %17 = load i16, i16* %phystype10, align 8, !dbg !8458
  %conv11 = sext i16 %17 to i32, !dbg !8456
  %cmp12 = icmp eq i32 %conv11, 3, !dbg !8459
  br i1 %cmp12, label %land.lhs.true, label %if.else29, !dbg !8460

land.lhs.true:                                    ; preds = %if.end
  %18 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8461
  %boids = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %18, i32 0, i32 2, !dbg !8462
  %19 = load %struct.BoidSettings*, %struct.BoidSettings** %boids, align 8, !dbg !8462
  %cmp14 = icmp eq %struct.BoidSettings* %19, null, !dbg !8463
  br i1 %cmp14, label %if.then16, label %if.else29, !dbg !8464

if.then16:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.BoidState** %state, metadata !8465, metadata !DIExpression()), !dbg !8467
  %20 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8468
  %call = call i8* %20(i64 104, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)), !dbg !8468
  %21 = bitcast i8* %call to %struct.BoidSettings*, !dbg !8468
  %22 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8469
  %boids17 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %22, i32 0, i32 2, !dbg !8470
  store %struct.BoidSettings* %21, %struct.BoidSettings** %boids17, align 8, !dbg !8471
  %23 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8472
  %boids18 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %23, i32 0, i32 2, !dbg !8473
  %24 = load %struct.BoidSettings*, %struct.BoidSettings** %boids18, align 8, !dbg !8473
  call void @boid_default_settings(%struct.BoidSettings* %24), !dbg !8474
  %25 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8475
  %boids19 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %25, i32 0, i32 2, !dbg !8476
  %26 = load %struct.BoidSettings*, %struct.BoidSettings** %boids19, align 8, !dbg !8476
  %call20 = call %struct.BoidState* @boid_new_state(%struct.BoidSettings* %26), !dbg !8477
  store %struct.BoidState* %call20, %struct.BoidState** %state, align 8, !dbg !8478
  %27 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !8479
  %rules = getelementptr inbounds %struct.BoidState, %struct.BoidState* %27, i32 0, i32 2, !dbg !8480
  %call21 = call %struct.BoidRule* @boid_new_rule(i32 4), !dbg !8481
  %28 = bitcast %struct.BoidRule* %call21 to i8*, !dbg !8481
  call void @BLI_addtail(%struct.ListBase* %rules, i8* %28), !dbg !8482
  %29 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !8483
  %rules22 = getelementptr inbounds %struct.BoidState, %struct.BoidState* %29, i32 0, i32 2, !dbg !8484
  %call23 = call %struct.BoidRule* @boid_new_rule(i32 5), !dbg !8485
  %30 = bitcast %struct.BoidRule* %call23 to i8*, !dbg !8485
  call void @BLI_addtail(%struct.ListBase* %rules22, i8* %30), !dbg !8486
  %31 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !8487
  %rules24 = getelementptr inbounds %struct.BoidState, %struct.BoidState* %31, i32 0, i32 2, !dbg !8488
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %rules24, i32 0, i32 0, !dbg !8489
  %32 = load i8*, i8** %first, align 8, !dbg !8489
  %33 = bitcast i8* %32 to %struct.BoidRule*, !dbg !8490
  %flag25 = getelementptr inbounds %struct.BoidRule, %struct.BoidRule* %33, i32 0, i32 3, !dbg !8491
  %34 = load i32, i32* %flag25, align 4, !dbg !8492
  %or = or i32 %34, 1, !dbg !8492
  store i32 %or, i32* %flag25, align 4, !dbg !8492
  %35 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !8493
  %flag26 = getelementptr inbounds %struct.BoidState, %struct.BoidState* %35, i32 0, i32 7, !dbg !8494
  %36 = load i32, i32* %flag26, align 4, !dbg !8495
  %or27 = or i32 %36, 1, !dbg !8495
  store i32 %or27, i32* %flag26, align 4, !dbg !8495
  %37 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8496
  %boids28 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %37, i32 0, i32 2, !dbg !8497
  %38 = load %struct.BoidSettings*, %struct.BoidSettings** %boids28, align 8, !dbg !8497
  %states = getelementptr inbounds %struct.BoidSettings, %struct.BoidSettings* %38, i32 0, i32 22, !dbg !8498
  %39 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !8499
  %40 = bitcast %struct.BoidState* %39 to i8*, !dbg !8499
  call void @BLI_addtail(%struct.ListBase* %states, i8* %40), !dbg !8500
  br label %if.end41, !dbg !8501

if.else29:                                        ; preds = %land.lhs.true, %if.end
  %41 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8502
  %phystype30 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %41, i32 0, i32 11, !dbg !8504
  %42 = load i16, i16* %phystype30, align 8, !dbg !8504
  %conv31 = sext i16 %42 to i32, !dbg !8502
  %cmp32 = icmp eq i32 %conv31, 4, !dbg !8505
  br i1 %cmp32, label %land.lhs.true34, label %if.end40, !dbg !8506

land.lhs.true34:                                  ; preds = %if.else29
  %43 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8507
  %fluid = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %43, i32 0, i32 3, !dbg !8508
  %44 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !8508
  %cmp35 = icmp eq %struct.SPHFluidSettings* %44, null, !dbg !8509
  br i1 %cmp35, label %if.then37, label %if.end40, !dbg !8510

if.then37:                                        ; preds = %land.lhs.true34
  %45 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8511
  %call38 = call i8* %45(i64 68, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0)), !dbg !8511
  %46 = bitcast i8* %call38 to %struct.SPHFluidSettings*, !dbg !8511
  %47 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8513
  %fluid39 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %47, i32 0, i32 3, !dbg !8514
  store %struct.SPHFluidSettings* %46, %struct.SPHFluidSettings** %fluid39, align 8, !dbg !8515
  %48 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8516
  call void @fluid_default_settings(%struct.ParticleSettings* %48), !dbg !8517
  br label %if.end40, !dbg !8518

if.end40:                                         ; preds = %if.then37, %land.lhs.true34, %if.else29
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then16
  %49 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8519
  %psys42 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %49, i32 0, i32 2, !dbg !8520
  %50 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys42, align 8, !dbg !8520
  call void @psys_check_boid_data(%struct.ParticleSystem* %50), !dbg !8521
  ret void, !dbg !8522
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @hair_needs_recalc(%struct.ParticleSystem* %psys) #0 !dbg !8523 {
entry:
  %retval = alloca i32, align 4
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !8524, metadata !DIExpression()), !dbg !8525
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8526
  %flag = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 25, !dbg !8528
  %1 = load i32, i32* %flag, align 4, !dbg !8528
  %and = and i32 %1, 2048, !dbg !8529
  %tobool = icmp ne i32 %and, 0, !dbg !8529
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8530

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8531
  %edit = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 5, !dbg !8532
  %3 = load %struct.PTCacheEdit*, %struct.PTCacheEdit** %edit, align 8, !dbg !8532
  %tobool1 = icmp ne %struct.PTCacheEdit* %3, null, !dbg !8531
  br i1 %tobool1, label %lor.lhs.false, label %land.lhs.true4, !dbg !8533

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8534
  %edit2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %4, i32 0, i32 5, !dbg !8535
  %5 = load %struct.PTCacheEdit*, %struct.PTCacheEdit** %edit2, align 8, !dbg !8535
  %edited = getelementptr inbounds %struct.PTCacheEdit, %struct.PTCacheEdit* %5, i32 0, i32 14, !dbg !8536
  %6 = load i32, i32* %edited, align 4, !dbg !8536
  %tobool3 = icmp ne i32 %6, 0, !dbg !8534
  br i1 %tobool3, label %if.end, label %land.lhs.true4, !dbg !8537

land.lhs.true4:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %7 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8538
  %flag5 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %7, i32 0, i32 25, !dbg !8539
  %8 = load i32, i32* %flag5, align 4, !dbg !8539
  %and6 = and i32 %8, 512, !dbg !8540
  %cmp = icmp eq i32 %and6, 0, !dbg !8541
  br i1 %cmp, label %if.then, label %lor.lhs.false7, !dbg !8542

lor.lhs.false7:                                   ; preds = %land.lhs.true4
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8543
  %recalc = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 31, !dbg !8544
  %10 = load i16, i16* %recalc, align 4, !dbg !8544
  %conv = sext i16 %10 to i32, !dbg !8543
  %and8 = and i32 %conv, 16, !dbg !8545
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8545
  br i1 %tobool9, label %if.then, label %lor.lhs.false10, !dbg !8546

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8547
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 2, !dbg !8548
  %12 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8548
  %flag11 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %12, i32 0, i32 5, !dbg !8549
  %13 = load i32, i32* %flag11, align 8, !dbg !8549
  %and12 = and i32 %13, 16, !dbg !8550
  %tobool13 = icmp ne i32 %and12, 0, !dbg !8550
  br i1 %tobool13, label %land.lhs.true14, label %if.end, !dbg !8551

land.lhs.true14:                                  ; preds = %lor.lhs.false10
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8552
  %edit15 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 5, !dbg !8553
  %15 = load %struct.PTCacheEdit*, %struct.PTCacheEdit** %edit15, align 8, !dbg !8553
  %tobool16 = icmp ne %struct.PTCacheEdit* %15, null, !dbg !8552
  br i1 %tobool16, label %if.end, label %if.then, !dbg !8554

if.then:                                          ; preds = %land.lhs.true14, %lor.lhs.false7, %land.lhs.true4
  store i32 1, i32* %retval, align 4, !dbg !8555
  br label %return, !dbg !8555

if.end:                                           ; preds = %land.lhs.true14, %lor.lhs.false10, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !8557
  br label %return, !dbg !8557

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !8558
  ret i32 %16, !dbg !8558
}

; Function Attrs: noinline nounwind uwtable
define internal void @system_step(%struct.ParticleSimulationData* %sim, float %cfra) #0 !dbg !8559 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %cfra.addr = alloca float, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %cache = alloca %struct.PointCache*, align 8
  %ptcacheid = alloca %struct.PTCacheID, align 8
  %pid = alloca %struct.PTCacheID*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %disp = alloca float, align 4
  %cache_cfra = alloca float, align 4
  %startframe = alloca i32, align 4
  %endframe = alloca i32, align 4
  %oldtotpart = alloca i32, align 4
  %cache_result = alloca i32, align 4
  %dframe = alloca i32, align 4
  %totframesback = alloca i32, align 4
  %t_frac = alloca float, align 4
  %dt_frac = alloca float, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !8562, metadata !DIExpression()), !dbg !8563
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !8564, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !8566, metadata !DIExpression()), !dbg !8567
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8568
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !8569
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !8569
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !8567
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !8570, metadata !DIExpression()), !dbg !8571
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8572
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !8573
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !8573
  store %struct.ParticleSettings* %3, %struct.ParticleSettings** %part, align 8, !dbg !8571
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !8574, metadata !DIExpression()), !dbg !8575
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8576
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %4, i32 0, i32 40, !dbg !8577
  %5 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !8577
  store %struct.PointCache* %5, %struct.PointCache** %cache, align 8, !dbg !8575
  call void @llvm.dbg.declare(metadata %struct.PTCacheID* %ptcacheid, metadata !8578, metadata !DIExpression()), !dbg !8579
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid, metadata !8580, metadata !DIExpression()), !dbg !8581
  store %struct.PTCacheID* null, %struct.PTCacheID** %pid, align 8, !dbg !8581
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !8582, metadata !DIExpression()), !dbg !8583
  call void @llvm.dbg.declare(metadata i32* %p, metadata !8584, metadata !DIExpression()), !dbg !8583
  call void @llvm.dbg.declare(metadata float* %disp, metadata !8585, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.declare(metadata float* %cache_cfra, metadata !8587, metadata !DIExpression()), !dbg !8588
  %6 = load float, float* %cfra.addr, align 4, !dbg !8589
  store float %6, float* %cache_cfra, align 4, !dbg !8588
  call void @llvm.dbg.declare(metadata i32* %startframe, metadata !8590, metadata !DIExpression()), !dbg !8591
  store i32 0, i32* %startframe, align 4, !dbg !8591
  call void @llvm.dbg.declare(metadata i32* %endframe, metadata !8592, metadata !DIExpression()), !dbg !8593
  store i32 100, i32* %endframe, align 4, !dbg !8593
  call void @llvm.dbg.declare(metadata i32* %oldtotpart, metadata !8594, metadata !DIExpression()), !dbg !8595
  store i32 0, i32* %oldtotpart, align 4, !dbg !8595
  %7 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8596
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %7, i32 0, i32 7, !dbg !8598
  %8 = load i16, i16* %type, align 8, !dbg !8598
  %conv = sext i16 %8 to i32, !dbg !8596
  %cmp = icmp ne i32 %conv, 2, !dbg !8599
  br i1 %cmp, label %if.then, label %if.end30, !dbg !8600

if.then:                                          ; preds = %entry
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8601
  call void @psys_clear_temp_pointcache(%struct.ParticleSystem* %9), !dbg !8603
  %10 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8604
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %10, i32 0, i32 2, !dbg !8606
  %11 = load i32, i32* %flag, align 8, !dbg !8606
  %and = and i32 %11, 9, !dbg !8607
  %cmp4 = icmp eq i32 %and, 0, !dbg !8608
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !8609

if.then6:                                         ; preds = %if.then
  %12 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8610
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %12, i32 0, i32 0, !dbg !8611
  %13 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8611
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8612
  %15 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8613
  %startframe7 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %15, i32 0, i32 5, !dbg !8614
  %16 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8615
  %endframe8 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %16, i32 0, i32 6, !dbg !8616
  call void @psys_get_pointcache_start_end(%struct.Scene* %13, %struct.ParticleSystem* %14, i32* %startframe7, i32* %endframe8), !dbg !8617
  br label %if.end, !dbg !8617

if.end:                                           ; preds = %if.then6, %if.then
  store %struct.PTCacheID* %ptcacheid, %struct.PTCacheID** %pid, align 8, !dbg !8618
  %17 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !8619
  %18 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8620
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %18, i32 0, i32 1, !dbg !8621
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8621
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8622
  call void @BKE_ptcache_id_from_particles(%struct.PTCacheID* %17, %struct.Object* %19, %struct.ParticleSystem* %20), !dbg !8623
  %21 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !8624
  %22 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8625
  %scene9 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %22, i32 0, i32 0, !dbg !8626
  %23 = load %struct.Scene*, %struct.Scene** %scene9, align 8, !dbg !8626
  call void @BKE_ptcache_id_time(%struct.PTCacheID* %21, %struct.Scene* %23, float 0.000000e+00, i32* %startframe, i32* %endframe, float* null), !dbg !8627
  %24 = load float, float* %cfra.addr, align 4, !dbg !8628
  %25 = load i32, i32* %startframe, align 4, !dbg !8630
  %conv10 = sitofp i32 %25 to float, !dbg !8630
  %cmp11 = fcmp oeq float %24, %conv10, !dbg !8631
  br i1 %cmp11, label %if.then13, label %if.end17, !dbg !8632

if.then13:                                        ; preds = %if.end
  %26 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8633
  %scene14 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %26, i32 0, i32 0, !dbg !8635
  %27 = load %struct.Scene*, %struct.Scene** %scene14, align 8, !dbg !8635
  %28 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !8636
  %call = call i32 @BKE_ptcache_id_reset(%struct.Scene* %27, %struct.PTCacheID* %28, i32 2), !dbg !8637
  %29 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8638
  %30 = load i32, i32* %startframe, align 4, !dbg !8639
  call void @BKE_ptcache_validate(%struct.PointCache* %29, i32 %30), !dbg !8640
  %31 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8641
  %flag15 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %31, i32 0, i32 2, !dbg !8642
  %32 = load i32, i32* %flag15, align 8, !dbg !8643
  %and16 = and i32 %32, -259, !dbg !8643
  store i32 %and16, i32* %flag15, align 8, !dbg !8643
  br label %if.end17, !dbg !8644

if.end17:                                         ; preds = %if.then13, %if.end
  %33 = load float, float* %cache_cfra, align 4, !dbg !8645
  %34 = load i32, i32* %startframe, align 4, !dbg !8645
  %conv18 = sitofp i32 %34 to float, !dbg !8645
  %cmp19 = fcmp olt float %33, %conv18, !dbg !8645
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !8648

if.then21:                                        ; preds = %if.end17
  %35 = load i32, i32* %startframe, align 4, !dbg !8645
  %conv22 = sitofp i32 %35 to float, !dbg !8645
  store float %conv22, float* %cache_cfra, align 4, !dbg !8645
  br label %if.end29, !dbg !8645

if.else:                                          ; preds = %if.end17
  %36 = load float, float* %cache_cfra, align 4, !dbg !8649
  %37 = load i32, i32* %endframe, align 4, !dbg !8649
  %conv23 = sitofp i32 %37 to float, !dbg !8649
  %cmp24 = fcmp ogt float %36, %conv23, !dbg !8649
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !8645

if.then26:                                        ; preds = %if.else
  %38 = load i32, i32* %endframe, align 4, !dbg !8649
  %conv27 = sitofp i32 %38 to float, !dbg !8649
  store float %conv27, float* %cache_cfra, align 4, !dbg !8649
  br label %if.end28, !dbg !8649

if.end28:                                         ; preds = %if.then26, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then21
  br label %if.end30, !dbg !8651

if.end30:                                         ; preds = %if.end29, %entry
  %39 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8652
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %39, i32 0, i32 26, !dbg !8653
  %40 = load i32, i32* %totpart, align 8, !dbg !8653
  store i32 %40, i32* %oldtotpart, align 4, !dbg !8654
  %41 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8655
  %42 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !8657
  %43 = load float, float* %cfra.addr, align 4, !dbg !8658
  %call31 = call i32 @emit_particles(%struct.ParticleSimulationData* %41, %struct.PTCacheID* %42, float %43), !dbg !8659
  %tobool = icmp ne i32 %call31, 0, !dbg !8659
  br i1 %tobool, label %if.then35, label %lor.lhs.false, !dbg !8660

lor.lhs.false:                                    ; preds = %if.end30
  %44 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8661
  %recalc = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %44, i32 0, i32 31, !dbg !8662
  %45 = load i16, i16* %recalc, align 4, !dbg !8662
  %conv32 = sext i16 %45 to i32, !dbg !8661
  %and33 = and i32 %conv32, 16, !dbg !8663
  %tobool34 = icmp ne i32 %and33, 0, !dbg !8663
  br i1 %tobool34, label %if.then35, label %if.end46, !dbg !8664

if.then35:                                        ; preds = %lor.lhs.false, %if.end30
  %46 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8665
  %47 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8667
  %from = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %47, i32 0, i32 8, !dbg !8668
  %48 = load i16, i16* %from, align 2, !dbg !8668
  %conv36 = sext i16 %48 to i32, !dbg !8667
  call void @distribute_particles(%struct.ParticleSimulationData* %46, i32 %conv36), !dbg !8669
  %49 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8670
  call void @initialize_all_particles(%struct.ParticleSimulationData* %49), !dbg !8671
  %50 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8672
  %51 = load float, float* %cfra.addr, align 4, !dbg !8673
  %52 = load i32, i32* %oldtotpart, align 4, !dbg !8674
  call void @reset_all_particles(%struct.ParticleSimulationData* %50, float 0.000000e+00, float %51, i32 %52), !dbg !8675
  %53 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8676
  %fluid_springs = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %53, i32 0, i32 43, !dbg !8678
  %54 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs, align 8, !dbg !8678
  %tobool37 = icmp ne %struct.ParticleSpring* %54, null, !dbg !8676
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !8679

if.then38:                                        ; preds = %if.then35
  %55 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8680
  %56 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8682
  %fluid_springs39 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %56, i32 0, i32 43, !dbg !8683
  %57 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs39, align 8, !dbg !8683
  %58 = bitcast %struct.ParticleSpring* %57 to i8*, !dbg !8682
  call void %55(i8* %58), !dbg !8680
  %59 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8684
  %fluid_springs40 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %59, i32 0, i32 43, !dbg !8685
  store %struct.ParticleSpring* null, %struct.ParticleSpring** %fluid_springs40, align 8, !dbg !8686
  br label %if.end41, !dbg !8687

if.end41:                                         ; preds = %if.then38, %if.then35
  %60 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8688
  %alloc_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %60, i32 0, i32 45, !dbg !8689
  store i32 0, i32* %alloc_fluidsprings, align 4, !dbg !8690
  %61 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8691
  %tot_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %61, i32 0, i32 44, !dbg !8692
  store i32 0, i32* %tot_fluidsprings, align 8, !dbg !8693
  %62 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8694
  %psmd = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %62, i32 0, i32 3, !dbg !8695
  %63 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !8695
  %flag42 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %63, i32 0, i32 6, !dbg !8696
  %64 = load i16, i16* %flag42, align 4, !dbg !8697
  %conv43 = sext i16 %64 to i32, !dbg !8697
  %or = or i32 %conv43, 1, !dbg !8697
  %conv44 = trunc i32 %or to i16, !dbg !8697
  store i16 %conv44, i16* %flag42, align 4, !dbg !8697
  %65 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !8698
  %66 = load float, float* %cfra.addr, align 4, !dbg !8699
  %conv45 = fptoui float %66 to i32, !dbg !8699
  call void @BKE_ptcache_id_clear(%struct.PTCacheID* %65, i32 3, i32 %conv45), !dbg !8700
  br label %if.end46, !dbg !8701

if.end46:                                         ; preds = %if.end41, %lor.lhs.false
  %67 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !8702
  %tobool47 = icmp ne %struct.PTCacheID* %67, null, !dbg !8702
  br i1 %tobool47, label %if.then48, label %if.else95, !dbg !8704

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %cache_result, metadata !8705, metadata !DIExpression()), !dbg !8707
  %68 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !8708
  %69 = load float, float* %cache_cfra, align 4, !dbg !8709
  %call49 = call i32 @BKE_ptcache_read(%struct.PTCacheID* %68, float %69), !dbg !8710
  store i32 %call49, i32* %cache_result, align 4, !dbg !8707
  %70 = load i32, i32* %cache_result, align 4, !dbg !8711
  %cmp50 = icmp eq i32 %70, 1, !dbg !8711
  br i1 %cmp50, label %if.then55, label %lor.lhs.false52, !dbg !8711

lor.lhs.false52:                                  ; preds = %if.then48
  %71 = load i32, i32* %cache_result, align 4, !dbg !8711
  %cmp53 = icmp eq i32 %71, 2, !dbg !8711
  br i1 %cmp53, label %if.then55, label %if.else66, !dbg !8713

if.then55:                                        ; preds = %lor.lhs.false52, %if.then48
  %72 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8714
  %73 = load float, float* %cfra.addr, align 4, !dbg !8716
  call void @cached_step(%struct.ParticleSimulationData* %72, float %73), !dbg !8717
  %74 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8718
  call void @update_children(%struct.ParticleSimulationData* %74), !dbg !8719
  %75 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8720
  %76 = load float, float* %cfra.addr, align 4, !dbg !8721
  call void @psys_update_path_cache(%struct.ParticleSimulationData* %75, float %76), !dbg !8722
  %77 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8723
  %78 = load float, float* %cache_cfra, align 4, !dbg !8724
  %conv56 = fptosi float %78 to i32, !dbg !8725
  call void @BKE_ptcache_validate(%struct.PointCache* %77, i32 %conv56), !dbg !8726
  %79 = load i32, i32* %cache_result, align 4, !dbg !8727
  %cmp57 = icmp eq i32 %79, 2, !dbg !8729
  br i1 %cmp57, label %land.lhs.true, label %if.end65, !dbg !8730

land.lhs.true:                                    ; preds = %if.then55
  %80 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8731
  %flag59 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %80, i32 0, i32 2, !dbg !8732
  %81 = load i32, i32* %flag59, align 8, !dbg !8732
  %and60 = and i32 %81, 258, !dbg !8733
  %tobool61 = icmp ne i32 %and60, 0, !dbg !8733
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !8734

if.then62:                                        ; preds = %land.lhs.true
  %82 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !8735
  %83 = load float, float* %cache_cfra, align 4, !dbg !8736
  %conv63 = fptosi float %83 to i32, !dbg !8737
  %call64 = call i32 @BKE_ptcache_write(%struct.PTCacheID* %82, i32 %conv63), !dbg !8738
  br label %if.end65, !dbg !8738

if.end65:                                         ; preds = %if.then62, %land.lhs.true, %if.then55
  br label %if.end198, !dbg !8739

if.else66:                                        ; preds = %lor.lhs.false52
  %84 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8740
  %flag67 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %84, i32 0, i32 2, !dbg !8742
  %85 = load i32, i32* %flag67, align 8, !dbg !8742
  %and68 = and i32 %85, 1, !dbg !8743
  %tobool69 = icmp ne i32 %and68, 0, !dbg !8743
  br i1 %tobool69, label %if.then70, label %if.else71, !dbg !8744

if.then70:                                        ; preds = %if.else66
  %86 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8745
  call void @psys_reset(%struct.ParticleSystem* %86, i32 4), !dbg !8747
  br label %if.end198, !dbg !8748

if.else71:                                        ; preds = %if.else66
  %87 = load i32, i32* %cache_result, align 4, !dbg !8749
  %cmp72 = icmp eq i32 %87, 3, !dbg !8751
  br i1 %cmp72, label %if.then74, label %if.end78, !dbg !8752

if.then74:                                        ; preds = %if.else71
  %88 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8753
  %simframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %88, i32 0, i32 4, !dbg !8755
  %89 = load i32, i32* %simframe, align 8, !dbg !8755
  %conv75 = sitofp i32 %89 to float, !dbg !8756
  %90 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8757
  %cfra76 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %90, i32 0, i32 20, !dbg !8758
  store float %conv75, float* %cfra76, align 8, !dbg !8759
  %91 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8760
  %92 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8761
  %cfra77 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %92, i32 0, i32 20, !dbg !8762
  %93 = load float, float* %cfra77, align 8, !dbg !8762
  call void @cached_step(%struct.ParticleSimulationData* %91, float %93), !dbg !8763
  br label %if.end78, !dbg !8764

if.end78:                                         ; preds = %if.then74, %if.else71
  br label %if.end79

if.end79:                                         ; preds = %if.end78
  br label %if.end80

if.end80:                                         ; preds = %if.end79
  %94 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8765
  %cfra81 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %94, i32 0, i32 20, !dbg !8767
  %95 = load float, float* %cfra81, align 8, !dbg !8767
  %96 = load i32, i32* %startframe, align 4, !dbg !8768
  %conv82 = sitofp i32 %96 to float, !dbg !8768
  %cmp83 = fcmp oeq float %95, %conv82, !dbg !8769
  br i1 %cmp83, label %land.lhs.true85, label %if.end94, !dbg !8770

land.lhs.true85:                                  ; preds = %if.end80
  %97 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8771
  %flag86 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %97, i32 0, i32 2, !dbg !8772
  %98 = load i32, i32* %flag86, align 8, !dbg !8772
  %and87 = and i32 %98, 2, !dbg !8773
  %tobool88 = icmp ne i32 %and87, 0, !dbg !8773
  br i1 %tobool88, label %if.then92, label %lor.lhs.false89, !dbg !8774

lor.lhs.false89:                                  ; preds = %land.lhs.true85
  %99 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8775
  %last_exact = getelementptr inbounds %struct.PointCache, %struct.PointCache* %99, i32 0, i32 8, !dbg !8776
  %100 = load i32, i32* %last_exact, align 8, !dbg !8776
  %cmp90 = icmp eq i32 %100, 0, !dbg !8777
  br i1 %cmp90, label %if.then92, label %if.end94, !dbg !8778

if.then92:                                        ; preds = %lor.lhs.false89, %land.lhs.true85
  %101 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !8779
  %102 = load i32, i32* %startframe, align 4, !dbg !8780
  %call93 = call i32 @BKE_ptcache_write(%struct.PTCacheID* %101, i32 %102), !dbg !8781
  br label %if.end94, !dbg !8781

if.end94:                                         ; preds = %if.then92, %lor.lhs.false89, %if.end80
  br label %if.end96, !dbg !8782

if.else95:                                        ; preds = %if.end46
  %103 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8783
  call void @BKE_ptcache_invalidate(%struct.PointCache* %103), !dbg !8784
  br label %if.end96

if.end96:                                         ; preds = %if.else95, %if.end94
  %104 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8785
  %call97 = call float @psys_get_current_display_percentage(%struct.ParticleSystem* %104), !dbg !8786
  store float %call97, float* %disp, align 4, !dbg !8787
  store i32 0, i32* %p, align 4, !dbg !8788
  %105 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8788
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %105, i32 0, i32 3, !dbg !8788
  %106 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !8788
  store %struct.ParticleData* %106, %struct.ParticleData** %pa, align 8, !dbg !8788
  br label %for.cond, !dbg !8788

for.cond:                                         ; preds = %for.inc, %if.end96
  %107 = load i32, i32* %p, align 4, !dbg !8790
  %108 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8790
  %totpart98 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %108, i32 0, i32 26, !dbg !8790
  %109 = load i32, i32* %totpart98, align 8, !dbg !8790
  %cmp99 = icmp slt i32 %107, %109, !dbg !8790
  br i1 %cmp99, label %for.body, label %for.end, !dbg !8788

for.body:                                         ; preds = %for.cond
  %110 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8792
  %111 = load i32, i32* %p, align 4, !dbg !8795
  %call101 = call float @psys_frand(%struct.ParticleSystem* %110, i32 %111), !dbg !8796
  %112 = load float, float* %disp, align 4, !dbg !8797
  %cmp102 = fcmp ogt float %call101, %112, !dbg !8798
  br i1 %cmp102, label %if.then104, label %if.else109, !dbg !8799

if.then104:                                       ; preds = %for.body
  %113 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8800
  %flag105 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %113, i32 0, i32 17, !dbg !8801
  %114 = load i16, i16* %flag105, align 4, !dbg !8802
  %conv106 = sext i16 %114 to i32, !dbg !8802
  %or107 = or i32 %conv106, 2, !dbg !8802
  %conv108 = trunc i32 %or107 to i16, !dbg !8802
  store i16 %conv108, i16* %flag105, align 4, !dbg !8802
  br label %if.end114, !dbg !8800

if.else109:                                       ; preds = %for.body
  %115 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8803
  %flag110 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %115, i32 0, i32 17, !dbg !8804
  %116 = load i16, i16* %flag110, align 4, !dbg !8805
  %conv111 = sext i16 %116 to i32, !dbg !8805
  %and112 = and i32 %conv111, -3, !dbg !8805
  %conv113 = trunc i32 %and112 to i16, !dbg !8805
  store i16 %conv113, i16* %flag110, align 4, !dbg !8805
  br label %if.end114

if.end114:                                        ; preds = %if.else109, %if.then104
  br label %for.inc, !dbg !8806

for.inc:                                          ; preds = %if.end114
  %117 = load i32, i32* %p, align 4, !dbg !8790
  %inc = add nsw i32 %117, 1, !dbg !8790
  store i32 %inc, i32* %p, align 4, !dbg !8790
  %118 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8790
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %118, i32 1, !dbg !8790
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !8790
  br label %for.cond, !dbg !8790, !llvm.loop !8807

for.end:                                          ; preds = %for.cond
  %119 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8809
  %totpart115 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %119, i32 0, i32 26, !dbg !8811
  %120 = load i32, i32* %totpart115, align 8, !dbg !8811
  %tobool116 = icmp ne i32 %120, 0, !dbg !8809
  br i1 %tobool116, label %if.then117, label %if.end182, !dbg !8812

if.then117:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %dframe, metadata !8813, metadata !DIExpression()), !dbg !8815
  call void @llvm.dbg.declare(metadata i32* %totframesback, metadata !8816, metadata !DIExpression()), !dbg !8817
  store i32 0, i32* %totframesback, align 4, !dbg !8817
  call void @llvm.dbg.declare(metadata float* %t_frac, metadata !8818, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.declare(metadata float* %dt_frac, metadata !8820, metadata !DIExpression()), !dbg !8821
  %121 = load float, float* %cfra.addr, align 4, !dbg !8822
  %conv118 = fptosi float %121 to i32, !dbg !8824
  %122 = load i32, i32* %startframe, align 4, !dbg !8825
  %cmp119 = icmp eq i32 %conv118, %122, !dbg !8826
  br i1 %cmp119, label %land.lhs.true121, label %if.end128, !dbg !8827

land.lhs.true121:                                 ; preds = %if.then117
  %123 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8828
  %sta = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %123, i32 0, i32 53, !dbg !8829
  %124 = load float, float* %sta, align 4, !dbg !8829
  %125 = load i32, i32* %startframe, align 4, !dbg !8830
  %conv122 = sitofp i32 %125 to float, !dbg !8830
  %cmp123 = fcmp olt float %124, %conv122, !dbg !8831
  br i1 %cmp123, label %if.then125, label %if.end128, !dbg !8832

if.then125:                                       ; preds = %land.lhs.true121
  %126 = load i32, i32* %startframe, align 4, !dbg !8833
  %127 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8834
  %sta126 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %127, i32 0, i32 53, !dbg !8835
  %128 = load float, float* %sta126, align 4, !dbg !8835
  %conv127 = fptosi float %128 to i32, !dbg !8836
  %sub = sub nsw i32 %126, %conv127, !dbg !8837
  store i32 %sub, i32* %totframesback, align 4, !dbg !8838
  br label %if.end128, !dbg !8839

if.end128:                                        ; preds = %if.then125, %land.lhs.true121, %if.then117
  %129 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8840
  %time_flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %129, i32 0, i32 67, !dbg !8842
  %130 = load i16, i16* %time_flag, align 4, !dbg !8842
  %conv129 = sext i16 %130 to i32, !dbg !8840
  %and130 = and i32 %conv129, 1, !dbg !8843
  %tobool131 = icmp ne i32 %and130, 0, !dbg !8843
  br i1 %tobool131, label %if.else135, label %if.then132, !dbg !8844

if.then132:                                       ; preds = %if.end128
  %131 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8845
  %call133 = call float @get_base_time_step(%struct.ParticleSettings* %131), !dbg !8847
  %132 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8848
  %dt_frac134 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %132, i32 0, i32 49, !dbg !8849
  store float %call133, float* %dt_frac134, align 8, !dbg !8850
  br label %if.end150, !dbg !8851

if.else135:                                       ; preds = %if.end128
  %133 = load float, float* %cfra.addr, align 4, !dbg !8852
  %conv136 = fptosi float %133 to i32, !dbg !8854
  %134 = load i32, i32* %startframe, align 4, !dbg !8855
  %cmp137 = icmp eq i32 %conv136, %134, !dbg !8856
  br i1 %cmp137, label %if.then139, label %if.else142, !dbg !8857

if.then139:                                       ; preds = %if.else135
  %135 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8858
  %call140 = call float @get_base_time_step(%struct.ParticleSettings* %135), !dbg !8860
  %136 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8861
  %dt_frac141 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %136, i32 0, i32 49, !dbg !8862
  store float %call140, float* %dt_frac141, align 8, !dbg !8863
  br label %if.end149, !dbg !8864

if.else142:                                       ; preds = %if.else135
  %137 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8865
  %dt_frac143 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %137, i32 0, i32 49, !dbg !8867
  %138 = load float, float* %dt_frac143, align 8, !dbg !8867
  %cmp144 = fcmp olt float %138, 0x3F8446F860000000, !dbg !8868
  br i1 %cmp144, label %if.then146, label %if.end148, !dbg !8869

if.then146:                                       ; preds = %if.else142
  %139 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8870
  %dt_frac147 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %139, i32 0, i32 49, !dbg !8872
  store float 0x3F8446F860000000, float* %dt_frac147, align 8, !dbg !8873
  br label %if.end148, !dbg !8874

if.end148:                                        ; preds = %if.then146, %if.else142
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.then139
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.then132
  %140 = load i32, i32* %totframesback, align 4, !dbg !8875
  %sub151 = sub nsw i32 0, %140, !dbg !8877
  store i32 %sub151, i32* %dframe, align 4, !dbg !8878
  br label %for.cond152, !dbg !8879

for.cond152:                                      ; preds = %for.inc179, %if.end150
  %141 = load i32, i32* %dframe, align 4, !dbg !8880
  %cmp153 = icmp sle i32 %141, 0, !dbg !8882
  br i1 %cmp153, label %for.body155, label %for.end181, !dbg !8883

for.body155:                                      ; preds = %for.cond152
  %142 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8884
  %dt_frac156 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %142, i32 0, i32 49, !dbg !8886
  %143 = load float, float* %dt_frac156, align 8, !dbg !8886
  store float %143, float* %dt_frac, align 4, !dbg !8887
  %144 = load float, float* %dt_frac, align 4, !dbg !8888
  store float %144, float* %t_frac, align 4, !dbg !8890
  br label %for.cond157, !dbg !8891

for.cond157:                                      ; preds = %for.inc176, %for.body155
  %145 = load float, float* %t_frac, align 4, !dbg !8892
  %cmp158 = fcmp ole float %145, 1.000000e+00, !dbg !8894
  br i1 %cmp158, label %for.body160, label %for.end178, !dbg !8895

for.body160:                                      ; preds = %for.cond157
  %146 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8896
  %courant_num = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %146, i32 0, i32 5, !dbg !8898
  store float 0.000000e+00, float* %courant_num, align 8, !dbg !8899
  %147 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8900
  %148 = load float, float* %cfra.addr, align 4, !dbg !8901
  %149 = load i32, i32* %dframe, align 4, !dbg !8902
  %conv161 = sitofp i32 %149 to float, !dbg !8902
  %add = fadd float %148, %conv161, !dbg !8903
  %150 = load float, float* %t_frac, align 4, !dbg !8904
  %add162 = fadd float %add, %150, !dbg !8905
  %sub163 = fsub float %add162, 1.000000e+00, !dbg !8906
  call void @dynamics_step(%struct.ParticleSimulationData* %147, float %sub163), !dbg !8907
  %151 = load float, float* %cfra.addr, align 4, !dbg !8908
  %152 = load i32, i32* %dframe, align 4, !dbg !8909
  %conv164 = sitofp i32 %152 to float, !dbg !8909
  %add165 = fadd float %151, %conv164, !dbg !8910
  %153 = load float, float* %t_frac, align 4, !dbg !8911
  %add166 = fadd float %add165, %153, !dbg !8912
  %sub167 = fsub float %add166, 1.000000e+00, !dbg !8913
  %154 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8914
  %cfra168 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %154, i32 0, i32 20, !dbg !8915
  store float %sub167, float* %cfra168, align 8, !dbg !8916
  %155 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8917
  %time_flag169 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %155, i32 0, i32 67, !dbg !8919
  %156 = load i16, i16* %time_flag169, align 4, !dbg !8919
  %conv170 = sext i16 %156 to i32, !dbg !8917
  %and171 = and i32 %conv170, 1, !dbg !8920
  %tobool172 = icmp ne i32 %and171, 0, !dbg !8920
  br i1 %tobool172, label %if.then173, label %if.end175, !dbg !8921

if.then173:                                       ; preds = %for.body160
  %157 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8922
  %158 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8923
  %159 = load float, float* %t_frac, align 4, !dbg !8924
  %call174 = call float @update_timestep(%struct.ParticleSystem* %157, %struct.ParticleSimulationData* %158, float %159), !dbg !8925
  store float %call174, float* %dt_frac, align 4, !dbg !8926
  br label %if.end175, !dbg !8927

if.end175:                                        ; preds = %if.then173, %for.body160
  br label %for.inc176, !dbg !8928

for.inc176:                                       ; preds = %if.end175
  %160 = load float, float* %dt_frac, align 4, !dbg !8929
  %161 = load float, float* %t_frac, align 4, !dbg !8930
  %add177 = fadd float %161, %160, !dbg !8930
  store float %add177, float* %t_frac, align 4, !dbg !8930
  br label %for.cond157, !dbg !8931, !llvm.loop !8932

for.end178:                                       ; preds = %for.cond157
  br label %for.inc179, !dbg !8934

for.inc179:                                       ; preds = %for.end178
  %162 = load i32, i32* %dframe, align 4, !dbg !8935
  %inc180 = add nsw i32 %162, 1, !dbg !8935
  store i32 %inc180, i32* %dframe, align 4, !dbg !8935
  br label %for.cond152, !dbg !8936, !llvm.loop !8937

for.end181:                                       ; preds = %for.cond152
  br label %if.end182, !dbg !8939

if.end182:                                        ; preds = %for.end181, %for.end
  %163 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !8940
  %tobool183 = icmp ne %struct.PTCacheID* %163, null, !dbg !8940
  br i1 %tobool183, label %if.then184, label %if.end193, !dbg !8942

if.then184:                                       ; preds = %if.end182
  %164 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !8943
  %165 = load float, float* %cache_cfra, align 4, !dbg !8945
  %conv185 = fptosi float %165 to i32, !dbg !8946
  call void @BKE_ptcache_validate(%struct.PointCache* %164, i32 %conv185), !dbg !8947
  %166 = load float, float* %cache_cfra, align 4, !dbg !8948
  %conv186 = fptosi float %166 to i32, !dbg !8950
  %167 = load i32, i32* %startframe, align 4, !dbg !8951
  %cmp187 = icmp ne i32 %conv186, %167, !dbg !8952
  br i1 %cmp187, label %if.then189, label %if.end192, !dbg !8953

if.then189:                                       ; preds = %if.then184
  %168 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !8954
  %169 = load float, float* %cache_cfra, align 4, !dbg !8955
  %conv190 = fptosi float %169 to i32, !dbg !8956
  %call191 = call i32 @BKE_ptcache_write(%struct.PTCacheID* %168, i32 %conv190), !dbg !8957
  br label %if.end192, !dbg !8957

if.end192:                                        ; preds = %if.then189, %if.then184
  br label %if.end193, !dbg !8958

if.end193:                                        ; preds = %if.end192, %if.end182
  %170 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8959
  call void @update_children(%struct.ParticleSimulationData* %170), !dbg !8960
  %171 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8961
  %lattice_deform_data = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %171, i32 0, i32 15, !dbg !8963
  %172 = load %struct.LatticeDeformData*, %struct.LatticeDeformData** %lattice_deform_data, align 8, !dbg !8963
  %tobool194 = icmp ne %struct.LatticeDeformData* %172, null, !dbg !8961
  br i1 %tobool194, label %if.then195, label %if.end198, !dbg !8964

if.then195:                                       ; preds = %if.end193
  %173 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8965
  %lattice_deform_data196 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %173, i32 0, i32 15, !dbg !8967
  %174 = load %struct.LatticeDeformData*, %struct.LatticeDeformData** %lattice_deform_data196, align 8, !dbg !8967
  call void @end_latt_deform(%struct.LatticeDeformData* %174), !dbg !8968
  %175 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8969
  %lattice_deform_data197 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %175, i32 0, i32 15, !dbg !8970
  store %struct.LatticeDeformData* null, %struct.LatticeDeformData** %lattice_deform_data197, align 8, !dbg !8971
  br label %if.end198, !dbg !8972

if.end198:                                        ; preds = %if.end65, %if.then70, %if.then195, %if.end193
  ret void, !dbg !8973
}

; Function Attrs: noinline nounwind uwtable
define internal void @save_hair(%struct.ParticleSimulationData* %sim, float %UNUSED_cfra) #0 !dbg !8974 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %ob = alloca %struct.Object*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %key = alloca %struct.HairKey*, align 8
  %root = alloca %struct.HairKey*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !8975, metadata !DIExpression()), !dbg !8976
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !8977, metadata !DIExpression()), !dbg !8978
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8979, metadata !DIExpression()), !dbg !8980
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8981
  %ob1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 1, !dbg !8982
  %1 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !8982
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !8980
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !8983, metadata !DIExpression()), !dbg !8984
  %2 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8985
  %psys2 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %2, i32 0, i32 2, !dbg !8986
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys2, align 8, !dbg !8986
  store %struct.ParticleSystem* %3, %struct.ParticleSystem** %psys, align 8, !dbg !8984
  call void @llvm.dbg.declare(metadata %struct.HairKey** %key, metadata !8987, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.declare(metadata %struct.HairKey** %root, metadata !8989, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !8991, metadata !DIExpression()), !dbg !8992
  call void @llvm.dbg.declare(metadata i32* %p, metadata !8993, metadata !DIExpression()), !dbg !8992
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8994
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 50, !dbg !8995
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !8994
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8996
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 47, !dbg !8997
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !8996
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay3), !dbg !8998
  %6 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !8999
  %call4 = call %struct.LatticeDeformData* @psys_create_lattice_deform_data(%struct.ParticleSimulationData* %6), !dbg !9000
  %7 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9001
  %lattice_deform_data = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %7, i32 0, i32 15, !dbg !9002
  store %struct.LatticeDeformData* %call4, %struct.LatticeDeformData** %lattice_deform_data, align 8, !dbg !9003
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9004
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 26, !dbg !9006
  %9 = load i32, i32* %totpart, align 8, !dbg !9006
  %cmp = icmp eq i32 %9, 0, !dbg !9007
  br i1 %cmp, label %if.then, label %if.end, !dbg !9008

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !9009

if.end:                                           ; preds = %entry
  store i32 0, i32* %p, align 4, !dbg !9010
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9010
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 3, !dbg !9010
  %11 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !9010
  store %struct.ParticleData* %11, %struct.ParticleData** %pa, align 8, !dbg !9010
  br label %for.cond, !dbg !9010

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %p, align 4, !dbg !9012
  %13 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9012
  %totpart5 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %13, i32 0, i32 26, !dbg !9012
  %14 = load i32, i32* %totpart5, align 8, !dbg !9012
  %cmp6 = icmp slt i32 %12, %14, !dbg !9012
  br i1 %cmp6, label %for.body, label %for.end, !dbg !9010

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9014
  %totkey = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %15, i32 0, i32 5, !dbg !9017
  %16 = load i32, i32* %totkey, align 8, !dbg !9017
  %cmp7 = icmp eq i32 %16, 0, !dbg !9018
  br i1 %cmp7, label %if.then9, label %lor.lhs.false, !dbg !9019

lor.lhs.false:                                    ; preds = %for.body
  %17 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9020
  %hair = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %17, i32 0, i32 2, !dbg !9021
  %18 = load %struct.HairKey*, %struct.HairKey** %hair, align 8, !dbg !9021
  %cmp8 = icmp eq %struct.HairKey* %18, null, !dbg !9022
  br i1 %cmp8, label %if.then9, label %if.end14, !dbg !9023

if.then9:                                         ; preds = %lor.lhs.false, %for.body
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9024
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9026
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 2, !dbg !9027
  %21 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9027
  %hair_step = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %21, i32 0, i32 26, !dbg !9028
  %22 = load i16, i16* %hair_step, align 2, !dbg !9028
  %conv = sext i16 %22 to i32, !dbg !9026
  %add = add nsw i32 %conv, 1, !dbg !9029
  %conv10 = sext i32 %add to i64, !dbg !9030
  %mul = mul i64 %conv10, 24, !dbg !9031
  %call11 = call i8* %19(i64 %mul, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)), !dbg !9024
  %23 = bitcast i8* %call11 to %struct.HairKey*, !dbg !9024
  %24 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9032
  %hair12 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %24, i32 0, i32 2, !dbg !9033
  store %struct.HairKey* %23, %struct.HairKey** %hair12, align 8, !dbg !9034
  %25 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9035
  %totkey13 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %25, i32 0, i32 5, !dbg !9036
  store i32 0, i32* %totkey13, align 8, !dbg !9037
  br label %if.end14, !dbg !9038

if.end14:                                         ; preds = %if.then9, %lor.lhs.false
  %26 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9039
  %hair15 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %26, i32 0, i32 2, !dbg !9040
  %27 = load %struct.HairKey*, %struct.HairKey** %hair15, align 8, !dbg !9040
  store %struct.HairKey* %27, %struct.HairKey** %root, align 8, !dbg !9041
  store %struct.HairKey* %27, %struct.HairKey** %key, align 8, !dbg !9042
  %28 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9043
  %totkey16 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %28, i32 0, i32 5, !dbg !9044
  %29 = load i32, i32* %totkey16, align 8, !dbg !9044
  %30 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !9045
  %idx.ext = sext i32 %29 to i64, !dbg !9045
  %add.ptr = getelementptr inbounds %struct.HairKey, %struct.HairKey* %30, i64 %idx.ext, !dbg !9045
  store %struct.HairKey* %add.ptr, %struct.HairKey** %key, align 8, !dbg !9045
  %31 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !9046
  %co = getelementptr inbounds %struct.HairKey, %struct.HairKey* %31, i32 0, i32 0, !dbg !9047
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9046
  %32 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9048
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %32, i32 0, i32 0, !dbg !9049
  %co18 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !9050
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %co18, i64 0, i64 0, !dbg !9048
  call void @copy_v3_v3(float* %arraydecay17, float* %arraydecay19), !dbg !9051
  %33 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9052
  %imat20 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 50, !dbg !9053
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat20, i64 0, i64 0, !dbg !9052
  %34 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !9054
  %co22 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %34, i32 0, i32 0, !dbg !9055
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %co22, i64 0, i64 0, !dbg !9054
  call void @mul_m4_v3([4 x float]* %arraydecay21, float* %arraydecay23), !dbg !9056
  %35 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9057
  %totkey24 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %35, i32 0, i32 5, !dbg !9059
  %36 = load i32, i32* %totkey24, align 8, !dbg !9059
  %tobool = icmp ne i32 %36, 0, !dbg !9057
  br i1 %tobool, label %if.then25, label %if.end32, !dbg !9060

if.then25:                                        ; preds = %if.end14
  %37 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !9061
  %co26 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %37, i32 0, i32 0, !dbg !9063
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %co26, i64 0, i64 0, !dbg !9061
  %38 = load %struct.HairKey*, %struct.HairKey** %root, align 8, !dbg !9064
  %co28 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %38, i32 0, i32 0, !dbg !9065
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %co28, i64 0, i64 0, !dbg !9064
  call void @sub_v3_v3(float* %arraydecay27, float* %arraydecay29), !dbg !9066
  %39 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9067
  %psmd = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %39, i32 0, i32 3, !dbg !9068
  %40 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !9068
  %dm = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %40, i32 0, i32 2, !dbg !9069
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9069
  %42 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9070
  %43 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !9071
  %co30 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %43, i32 0, i32 0, !dbg !9072
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %co30, i64 0, i64 0, !dbg !9071
  call void @psys_vec_rot_to_face(%struct.DerivedMesh* %41, %struct.ParticleData* %42, float* %arraydecay31), !dbg !9073
  br label %if.end32, !dbg !9074

if.end32:                                         ; preds = %if.then25, %if.end14
  %44 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9075
  %state33 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %44, i32 0, i32 0, !dbg !9076
  %time = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state33, i32 0, i32 4, !dbg !9077
  %45 = load float, float* %time, align 4, !dbg !9077
  %46 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !9078
  %time34 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %46, i32 0, i32 1, !dbg !9079
  store float %45, float* %time34, align 4, !dbg !9080
  %47 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !9081
  %time35 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %47, i32 0, i32 1, !dbg !9082
  %48 = load float, float* %time35, align 4, !dbg !9082
  %div = fdiv float %48, 1.000000e+02, !dbg !9083
  %sub = fsub float 1.000000e+00, %div, !dbg !9084
  %49 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !9085
  %weight = getelementptr inbounds %struct.HairKey, %struct.HairKey* %49, i32 0, i32 2, !dbg !9086
  store float %sub, float* %weight, align 4, !dbg !9087
  %50 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9088
  %totkey36 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %50, i32 0, i32 5, !dbg !9089
  %51 = load i32, i32* %totkey36, align 8, !dbg !9090
  %inc = add nsw i32 %51, 1, !dbg !9090
  store i32 %inc, i32* %totkey36, align 8, !dbg !9090
  %52 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9091
  %totkey37 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %52, i32 0, i32 5, !dbg !9093
  %53 = load i32, i32* %totkey37, align 8, !dbg !9093
  %54 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9094
  %part38 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %54, i32 0, i32 2, !dbg !9095
  %55 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part38, align 8, !dbg !9095
  %hair_step39 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %55, i32 0, i32 26, !dbg !9096
  %56 = load i16, i16* %hair_step39, align 2, !dbg !9096
  %conv40 = sext i16 %56 to i32, !dbg !9094
  %add41 = add nsw i32 %conv40, 1, !dbg !9097
  %cmp42 = icmp eq i32 %53, %add41, !dbg !9098
  br i1 %cmp42, label %if.then44, label %if.end47, !dbg !9099

if.then44:                                        ; preds = %if.end32
  %57 = load %struct.HairKey*, %struct.HairKey** %root, align 8, !dbg !9100
  %co45 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %57, i32 0, i32 0, !dbg !9102
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %co45, i64 0, i64 0, !dbg !9100
  call void @zero_v3(float* %arraydecay46), !dbg !9103
  br label %if.end47, !dbg !9104

if.end47:                                         ; preds = %if.then44, %if.end32
  br label %for.inc, !dbg !9105

for.inc:                                          ; preds = %if.end47
  %58 = load i32, i32* %p, align 4, !dbg !9012
  %inc48 = add nsw i32 %58, 1, !dbg !9012
  store i32 %inc48, i32* %p, align 4, !dbg !9012
  %59 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9012
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %59, i32 1, !dbg !9012
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !9012
  br label %for.cond, !dbg !9012, !llvm.loop !9106

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !9108
}

; Function Attrs: noinline nounwind uwtable
define internal void @hair_step(%struct.ParticleSimulationData* %sim, float %cfra) #0 !dbg !9109 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %cfra.addr = alloca float, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %disp = alloca float, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !9110, metadata !DIExpression()), !dbg !9111
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !9112, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !9114, metadata !DIExpression()), !dbg !9115
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9116
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !9117
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !9117
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !9115
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !9118, metadata !DIExpression()), !dbg !9119
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9120
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !9121
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !9121
  store %struct.ParticleSettings* %3, %struct.ParticleSettings** %part, align 8, !dbg !9119
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !9122, metadata !DIExpression()), !dbg !9123
  call void @llvm.dbg.declare(metadata i32* %p, metadata !9124, metadata !DIExpression()), !dbg !9123
  call void @llvm.dbg.declare(metadata float* %disp, metadata !9125, metadata !DIExpression()), !dbg !9126
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9127
  %call = call float @psys_get_current_display_percentage(%struct.ParticleSystem* %4), !dbg !9128
  store float %call, float* %disp, align 4, !dbg !9126
  store i32 0, i32* %p, align 4, !dbg !9129
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9129
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 3, !dbg !9129
  %6 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !9129
  store %struct.ParticleData* %6, %struct.ParticleData** %pa, align 8, !dbg !9129
  br label %for.cond, !dbg !9129

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %p, align 4, !dbg !9131
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9131
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 26, !dbg !9131
  %9 = load i32, i32* %totpart, align 8, !dbg !9131
  %cmp = icmp slt i32 %7, %9, !dbg !9131
  br i1 %cmp, label %for.body, label %for.end, !dbg !9129

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9133
  %size = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %10, i32 0, i32 82, !dbg !9135
  %11 = load float, float* %size, align 8, !dbg !9135
  %12 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9136
  %size3 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %12, i32 0, i32 13, !dbg !9137
  store float %11, float* %size3, align 4, !dbg !9138
  %13 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9139
  %randsize = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %13, i32 0, i32 83, !dbg !9141
  %14 = load float, float* %randsize, align 4, !dbg !9141
  %cmp4 = fcmp ogt float %14, 0.000000e+00, !dbg !9142
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9143

if.then:                                          ; preds = %for.body
  %15 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9144
  %randsize5 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %15, i32 0, i32 83, !dbg !9145
  %16 = load float, float* %randsize5, align 4, !dbg !9145
  %17 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9146
  %18 = load i32, i32* %p, align 4, !dbg !9147
  %add = add nsw i32 %18, 1, !dbg !9148
  %call6 = call float @psys_frand(%struct.ParticleSystem* %17, i32 %add), !dbg !9149
  %mul = fmul float %16, %call6, !dbg !9150
  %sub = fsub float 1.000000e+00, %mul, !dbg !9151
  %19 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9152
  %size7 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %19, i32 0, i32 13, !dbg !9153
  %20 = load float, float* %size7, align 4, !dbg !9154
  %mul8 = fmul float %20, %sub, !dbg !9154
  store float %mul8, float* %size7, align 4, !dbg !9154
  br label %if.end, !dbg !9152

if.end:                                           ; preds = %if.then, %for.body
  %21 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9155
  %22 = load i32, i32* %p, align 4, !dbg !9157
  %call9 = call float @psys_frand(%struct.ParticleSystem* %21, i32 %22), !dbg !9158
  %23 = load float, float* %disp, align 4, !dbg !9159
  %cmp10 = fcmp ogt float %call9, %23, !dbg !9160
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !9161

if.then11:                                        ; preds = %if.end
  %24 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9162
  %flag = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %24, i32 0, i32 17, !dbg !9163
  %25 = load i16, i16* %flag, align 4, !dbg !9164
  %conv = sext i16 %25 to i32, !dbg !9164
  %or = or i32 %conv, 2, !dbg !9164
  %conv12 = trunc i32 %or to i16, !dbg !9164
  store i16 %conv12, i16* %flag, align 4, !dbg !9164
  br label %if.end16, !dbg !9162

if.else:                                          ; preds = %if.end
  %26 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9165
  %flag13 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %26, i32 0, i32 17, !dbg !9166
  %27 = load i16, i16* %flag13, align 4, !dbg !9167
  %conv14 = sext i16 %27 to i32, !dbg !9167
  %and = and i32 %conv14, -3, !dbg !9167
  %conv15 = trunc i32 %and to i16, !dbg !9167
  store i16 %conv15, i16* %flag13, align 4, !dbg !9167
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !9168

for.inc:                                          ; preds = %if.end16
  %28 = load i32, i32* %p, align 4, !dbg !9131
  %inc = add nsw i32 %28, 1, !dbg !9131
  store i32 %inc, i32* %p, align 4, !dbg !9131
  %29 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9131
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %29, i32 1, !dbg !9131
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !9131
  br label %for.cond, !dbg !9131, !llvm.loop !9169

for.end:                                          ; preds = %for.cond
  %30 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9171
  %recalc = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %30, i32 0, i32 31, !dbg !9173
  %31 = load i16, i16* %recalc, align 4, !dbg !9173
  %conv17 = sext i16 %31 to i32, !dbg !9171
  %and18 = and i32 %conv17, 16, !dbg !9174
  %tobool = icmp ne i32 %and18, 0, !dbg !9174
  br i1 %tobool, label %if.then19, label %if.end24, !dbg !9175

if.then19:                                        ; preds = %for.end
  %32 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9176
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %32, i32 0, i32 1, !dbg !9178
  %33 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9178
  %34 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9179
  %psmd = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %34, i32 0, i32 3, !dbg !9180
  %35 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !9180
  %dm = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %35, i32 0, i32 2, !dbg !9181
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9181
  %37 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9182
  call void @psys_calc_dmcache(%struct.Object* %33, %struct.DerivedMesh* %36, %struct.ParticleSystem* %37), !dbg !9183
  %38 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9184
  %clmd = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %38, i32 0, i32 11, !dbg !9186
  %39 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !9186
  %tobool20 = icmp ne %struct.ClothModifierData* %39, null, !dbg !9184
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !9187

if.then21:                                        ; preds = %if.then19
  %40 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9188
  %clmd22 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %40, i32 0, i32 11, !dbg !9189
  %41 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd22, align 8, !dbg !9189
  call void @cloth_free_modifier(%struct.ClothModifierData* %41), !dbg !9190
  br label %if.end23, !dbg !9190

if.end23:                                         ; preds = %if.then21, %if.then19
  br label %if.end24, !dbg !9191

if.end24:                                         ; preds = %if.end23, %for.end
  %42 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9192
  %part25 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %42, i32 0, i32 2, !dbg !9194
  %43 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part25, align 8, !dbg !9194
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %43, i32 0, i32 7, !dbg !9195
  %44 = load i16, i16* %type, align 8, !dbg !9195
  %conv26 = sext i16 %44 to i32, !dbg !9192
  %cmp27 = icmp eq i32 %conv26, 2, !dbg !9196
  br i1 %cmp27, label %land.lhs.true, label %if.end36, !dbg !9197

land.lhs.true:                                    ; preds = %if.end24
  %45 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9198
  %flag29 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %45, i32 0, i32 25, !dbg !9199
  %46 = load i32, i32* %flag29, align 4, !dbg !9199
  %and30 = and i32 %46, 4, !dbg !9200
  %tobool31 = icmp ne i32 %and30, 0, !dbg !9200
  br i1 %tobool31, label %land.lhs.true32, label %if.end36, !dbg !9201

land.lhs.true32:                                  ; preds = %land.lhs.true
  %47 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9202
  %particles33 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %47, i32 0, i32 3, !dbg !9203
  %48 = load %struct.ParticleData*, %struct.ParticleData** %particles33, align 8, !dbg !9203
  %tobool34 = icmp ne %struct.ParticleData* %48, null, !dbg !9202
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !9204

if.then35:                                        ; preds = %land.lhs.true32
  %49 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9205
  call void @do_hair_dynamics(%struct.ParticleSimulationData* %49), !dbg !9206
  br label %if.end36, !dbg !9206

if.end36:                                         ; preds = %if.then35, %land.lhs.true32, %land.lhs.true, %if.end24
  %50 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9207
  call void @psys_update_effectors(%struct.ParticleSimulationData* %50), !dbg !9208
  %51 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9209
  %52 = load float, float* %cfra.addr, align 4, !dbg !9210
  call void @psys_update_path_cache(%struct.ParticleSimulationData* %51, float %52), !dbg !9211
  %53 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9212
  %flag37 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %53, i32 0, i32 25, !dbg !9213
  %54 = load i32, i32* %flag37, align 4, !dbg !9214
  %or38 = or i32 %54, 32, !dbg !9214
  store i32 %or38, i32* %flag37, align 4, !dbg !9214
  ret void, !dbg !9215
}

; Function Attrs: noinline nounwind uwtable
define internal void @particles_fluid_step(%struct.ParticleSimulationData* %sim, i32 %UNUSED_cfra) #0 !dbg !9216 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %UNUSED_cfra.addr = alloca i32, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !9219, metadata !DIExpression()), !dbg !9220
  store i32 %UNUSED_cfra, i32* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_cfra.addr, metadata !9221, metadata !DIExpression()), !dbg !9222
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !9223, metadata !DIExpression()), !dbg !9224
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9225
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !9226
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !9226
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !9224
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9227
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 3, !dbg !9229
  %3 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !9229
  %tobool = icmp ne %struct.ParticleData* %3, null, !dbg !9227
  br i1 %tobool, label %if.then, label %if.end, !dbg !9230

if.then:                                          ; preds = %entry
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9231
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9233
  %particles2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 3, !dbg !9234
  %6 = load %struct.ParticleData*, %struct.ParticleData** %particles2, align 8, !dbg !9234
  %7 = bitcast %struct.ParticleData* %6 to i8*, !dbg !9233
  call void %4(i8* %7), !dbg !9231
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9235
  %particles3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 3, !dbg !9236
  store %struct.ParticleData* null, %struct.ParticleData** %particles3, align 8, !dbg !9237
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9238
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 26, !dbg !9239
  store i32 0, i32* %totpart, align 8, !dbg !9240
  br label %if.end, !dbg !9241

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9242
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @emit_particles(%struct.ParticleSimulationData* %sim, %struct.PTCacheID* %pid, float %UNUSED_cfra) #0 !dbg !9243 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %pid.addr = alloca %struct.PTCacheID*, align 8
  %UNUSED_cfra.addr = alloca float, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %oldtotpart = alloca i32, align 4
  %totpart2 = alloca i32, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !9246, metadata !DIExpression()), !dbg !9247
  store %struct.PTCacheID* %pid, %struct.PTCacheID** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid.addr, metadata !9248, metadata !DIExpression()), !dbg !9249
  store float %UNUSED_cfra, float* %UNUSED_cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_cfra.addr, metadata !9250, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !9252, metadata !DIExpression()), !dbg !9253
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9254
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !9255
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !9255
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !9253
  call void @llvm.dbg.declare(metadata i32* %oldtotpart, metadata !9256, metadata !DIExpression()), !dbg !9257
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9258
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 26, !dbg !9259
  %3 = load i32, i32* %totpart, align 8, !dbg !9259
  store i32 %3, i32* %oldtotpart, align 4, !dbg !9257
  call void @llvm.dbg.declare(metadata i32* %totpart2, metadata !9260, metadata !DIExpression()), !dbg !9261
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9262
  %5 = load %struct.PTCacheID*, %struct.PTCacheID** %pid.addr, align 8, !dbg !9263
  %call = call i32 @tot_particles(%struct.ParticleSystem* %4, %struct.PTCacheID* %5), !dbg !9264
  store i32 %call, i32* %totpart2, align 4, !dbg !9261
  %6 = load i32, i32* %totpart2, align 4, !dbg !9265
  %7 = load i32, i32* %oldtotpart, align 4, !dbg !9267
  %cmp = icmp ne i32 %6, %7, !dbg !9268
  br i1 %cmp, label %if.then, label %if.end, !dbg !9269

if.then:                                          ; preds = %entry
  %8 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9270
  %9 = load i32, i32* %totpart2, align 4, !dbg !9271
  call void @realloc_particles(%struct.ParticleSimulationData* %8, i32 %9), !dbg !9272
  br label %if.end, !dbg !9272

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %totpart2, align 4, !dbg !9273
  %11 = load i32, i32* %oldtotpart, align 4, !dbg !9274
  %sub = sub nsw i32 %10, %11, !dbg !9275
  ret i32 %sub, !dbg !9276
}

declare dso_local void @free_keyed_keys(%struct.ParticleSystem*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @distribute_particles(%struct.ParticleSimulationData* %sim, i32 %from) #0 !dbg !9277 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %from.addr = alloca i32, align 4
  %psmd = alloca %struct.ParticleSystemModifierData*, align 8
  %distr_error = alloca i32, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !9278, metadata !DIExpression()), !dbg !9279
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !9280, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.declare(metadata %struct.ParticleSystemModifierData** %psmd, metadata !9282, metadata !DIExpression()), !dbg !9285
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9285
  %psmd1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 3, !dbg !9285
  %1 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd1, align 8, !dbg !9285
  %tobool = icmp ne %struct.ParticleSystemModifierData* %1, null, !dbg !9285
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9285

cond.true:                                        ; preds = %entry
  %2 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9285
  %psmd2 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %2, i32 0, i32 3, !dbg !9285
  %3 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd2, align 8, !dbg !9285
  br label %cond.end, !dbg !9285

cond.false:                                       ; preds = %entry
  %4 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9285
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %4, i32 0, i32 1, !dbg !9285
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9285
  %6 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9285
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %6, i32 0, i32 2, !dbg !9285
  %7 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9285
  %call = call %struct.ParticleSystemModifierData* @psys_get_modifier(%struct.Object* %5, %struct.ParticleSystem* %7), !dbg !9285
  br label %cond.end, !dbg !9285

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ParticleSystemModifierData* [ %3, %cond.true ], [ %call, %cond.false ], !dbg !9285
  store %struct.ParticleSystemModifierData* %cond, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !9285
  call void @llvm.dbg.declare(metadata i32* %distr_error, metadata !9286, metadata !DIExpression()), !dbg !9287
  store i32 0, i32* %distr_error, align 4, !dbg !9287
  %8 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !9288
  %tobool3 = icmp ne %struct.ParticleSystemModifierData* %8, null, !dbg !9288
  br i1 %tobool3, label %if.then, label %if.else6, !dbg !9290

if.then:                                          ; preds = %cond.end
  %9 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !9291
  %dm = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %9, i32 0, i32 2, !dbg !9294
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9294
  %tobool4 = icmp ne %struct.DerivedMesh* %10, null, !dbg !9291
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !9295

if.then5:                                         ; preds = %if.then
  %11 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9296
  %12 = load i32, i32* %from.addr, align 4, !dbg !9297
  call void @distribute_particles_on_dm(%struct.ParticleSimulationData* %11, i32 %12), !dbg !9298
  br label %if.end, !dbg !9298

if.else:                                          ; preds = %if.then
  store i32 1, i32* %distr_error, align 4, !dbg !9299
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end7, !dbg !9300

if.else6:                                         ; preds = %cond.end
  %13 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9301
  %14 = load i32, i32* %from.addr, align 4, !dbg !9302
  call void @distribute_particles_on_shape(%struct.ParticleSimulationData* %13, i32 %14), !dbg !9303
  br label %if.end7

if.end7:                                          ; preds = %if.else6, %if.end
  %15 = load i32, i32* %distr_error, align 4, !dbg !9304
  %tobool8 = icmp ne i32 %15, 0, !dbg !9304
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !9306

if.then9:                                         ; preds = %if.end7
  %16 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9307
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %16, i32 0, i32 0, !dbg !9309
  %17 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9309
  %18 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9310
  %psys10 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %18, i32 0, i32 2, !dbg !9311
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys10, align 8, !dbg !9311
  %20 = load i32, i32* %from.addr, align 4, !dbg !9312
  call void @distribute_invalid(%struct.Scene* %17, %struct.ParticleSystem* %19, i32 %20), !dbg !9313
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !9314
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0)), !dbg !9315
  br label %if.end12, !dbg !9316

if.end12:                                         ; preds = %if.then9, %if.end7
  ret void, !dbg !9317
}

; Function Attrs: noinline nounwind uwtable
define internal void @initialize_all_particles(%struct.ParticleSimulationData* %sim) #0 !dbg !9318 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %newtotpart = alloca i32, align 4
  %npa = alloca %struct.ParticleData*, align 8
  %newpars = alloca %struct.ParticleData*, align 8
  %newboids = alloca %struct.BoidParticle*, align 8
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !9319, metadata !DIExpression()), !dbg !9320
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !9321, metadata !DIExpression()), !dbg !9322
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9323
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !9324
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !9324
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !9322
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !9325, metadata !DIExpression()), !dbg !9326
  call void @llvm.dbg.declare(metadata i32* %p, metadata !9327, metadata !DIExpression()), !dbg !9326
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9328
  %totunexist = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 27, !dbg !9329
  store i32 0, i32* %totunexist, align 4, !dbg !9330
  store i32 0, i32* %p, align 4, !dbg !9331
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9331
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 3, !dbg !9331
  %4 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !9331
  store %struct.ParticleData* %4, %struct.ParticleData** %pa, align 8, !dbg !9331
  br label %for.cond, !dbg !9331

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %p, align 4, !dbg !9333
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9333
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 26, !dbg !9333
  %7 = load i32, i32* %totpart, align 8, !dbg !9333
  %cmp = icmp slt i32 %5, %7, !dbg !9333
  br i1 %cmp, label %for.body, label %for.end, !dbg !9331

for.body:                                         ; preds = %for.cond
  %8 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9335
  %flag = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %8, i32 0, i32 17, !dbg !9338
  %9 = load i16, i16* %flag, align 4, !dbg !9338
  %conv = sext i16 %9 to i32, !dbg !9335
  %and = and i32 %conv, 1, !dbg !9339
  %cmp2 = icmp eq i32 %and, 0, !dbg !9340
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9341

if.then:                                          ; preds = %for.body
  %10 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9342
  %11 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9343
  call void @initialize_particle(%struct.ParticleSimulationData* %10, %struct.ParticleData* %11), !dbg !9344
  br label %if.end, !dbg !9344

if.end:                                           ; preds = %if.then, %for.body
  %12 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9345
  %flag4 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %12, i32 0, i32 17, !dbg !9347
  %13 = load i16, i16* %flag4, align 4, !dbg !9347
  %conv5 = sext i16 %13 to i32, !dbg !9345
  %and6 = and i32 %conv5, 1, !dbg !9348
  %tobool = icmp ne i32 %and6, 0, !dbg !9348
  br i1 %tobool, label %if.then7, label %if.end9, !dbg !9349

if.then7:                                         ; preds = %if.end
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9350
  %totunexist8 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 27, !dbg !9351
  %15 = load i32, i32* %totunexist8, align 4, !dbg !9352
  %inc = add nsw i32 %15, 1, !dbg !9352
  store i32 %inc, i32* %totunexist8, align 4, !dbg !9352
  br label %if.end9, !dbg !9350

if.end9:                                          ; preds = %if.then7, %if.end
  br label %for.inc, !dbg !9353

for.inc:                                          ; preds = %if.end9
  %16 = load i32, i32* %p, align 4, !dbg !9333
  %inc10 = add nsw i32 %16, 1, !dbg !9333
  store i32 %inc10, i32* %p, align 4, !dbg !9333
  %17 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9333
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %17, i32 1, !dbg !9333
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !9333
  br label %for.cond, !dbg !9333, !llvm.loop !9354

for.end:                                          ; preds = %for.cond
  %18 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9356
  %totpart11 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %18, i32 0, i32 26, !dbg !9358
  %19 = load i32, i32* %totpart11, align 8, !dbg !9358
  %tobool12 = icmp ne i32 %19, 0, !dbg !9356
  br i1 %tobool12, label %land.lhs.true, label %if.end28, !dbg !9359

land.lhs.true:                                    ; preds = %for.end
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9360
  %totunexist13 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 27, !dbg !9361
  %21 = load i32, i32* %totunexist13, align 4, !dbg !9361
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9362
  %totpart14 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %22, i32 0, i32 26, !dbg !9363
  %23 = load i32, i32* %totpart14, align 8, !dbg !9363
  %cmp15 = icmp eq i32 %21, %23, !dbg !9364
  br i1 %cmp15, label %if.then17, label %if.end28, !dbg !9365

if.then17:                                        ; preds = %land.lhs.true
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9366
  %particles18 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %24, i32 0, i32 3, !dbg !9369
  %25 = load %struct.ParticleData*, %struct.ParticleData** %particles18, align 8, !dbg !9369
  %boid = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %25, i32 0, i32 4, !dbg !9370
  %26 = load %struct.BoidParticle*, %struct.BoidParticle** %boid, align 8, !dbg !9370
  %tobool19 = icmp ne %struct.BoidParticle* %26, null, !dbg !9366
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !9371

if.then20:                                        ; preds = %if.then17
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9372
  %28 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9373
  %particles21 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %28, i32 0, i32 3, !dbg !9374
  %29 = load %struct.ParticleData*, %struct.ParticleData** %particles21, align 8, !dbg !9374
  %boid22 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %29, i32 0, i32 4, !dbg !9375
  %30 = load %struct.BoidParticle*, %struct.BoidParticle** %boid22, align 8, !dbg !9375
  %31 = bitcast %struct.BoidParticle* %30 to i8*, !dbg !9373
  call void %27(i8* %31), !dbg !9372
  br label %if.end23, !dbg !9372

if.end23:                                         ; preds = %if.then20, %if.then17
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9376
  %33 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9377
  %particles24 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %33, i32 0, i32 3, !dbg !9378
  %34 = load %struct.ParticleData*, %struct.ParticleData** %particles24, align 8, !dbg !9378
  %35 = bitcast %struct.ParticleData* %34 to i8*, !dbg !9377
  call void %32(i8* %35), !dbg !9376
  %36 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9379
  %particles25 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %36, i32 0, i32 3, !dbg !9380
  store %struct.ParticleData* null, %struct.ParticleData** %particles25, align 8, !dbg !9381
  %37 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9382
  %totunexist26 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %37, i32 0, i32 27, !dbg !9383
  store i32 0, i32* %totunexist26, align 4, !dbg !9384
  %38 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9385
  %totpart27 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %38, i32 0, i32 26, !dbg !9386
  store i32 0, i32* %totpart27, align 8, !dbg !9387
  br label %if.end28, !dbg !9388

if.end28:                                         ; preds = %if.end23, %land.lhs.true, %for.end
  %39 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9389
  %totunexist29 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %39, i32 0, i32 27, !dbg !9391
  %40 = load i32, i32* %totunexist29, align 4, !dbg !9391
  %tobool30 = icmp ne i32 %40, 0, !dbg !9389
  br i1 %tobool30, label %if.then31, label %if.end83, !dbg !9392

if.then31:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata i32* %newtotpart, metadata !9393, metadata !DIExpression()), !dbg !9395
  %41 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9396
  %totpart32 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %41, i32 0, i32 26, !dbg !9397
  %42 = load i32, i32* %totpart32, align 8, !dbg !9397
  %43 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9398
  %totunexist33 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %43, i32 0, i32 27, !dbg !9399
  %44 = load i32, i32* %totunexist33, align 4, !dbg !9399
  %sub = sub nsw i32 %42, %44, !dbg !9400
  store i32 %sub, i32* %newtotpart, align 4, !dbg !9395
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %npa, metadata !9401, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %newpars, metadata !9403, metadata !DIExpression()), !dbg !9404
  %45 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9405
  %46 = load i32, i32* %newtotpart, align 4, !dbg !9406
  %conv34 = sext i32 %46 to i64, !dbg !9406
  %mul = mul i64 %conv34, 200, !dbg !9407
  %call = call i8* %45(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)), !dbg !9405
  %47 = bitcast i8* %call to %struct.ParticleData*, !dbg !9405
  store %struct.ParticleData* %47, %struct.ParticleData** %newpars, align 8, !dbg !9408
  store %struct.ParticleData* %47, %struct.ParticleData** %npa, align 8, !dbg !9409
  store i32 0, i32* %p, align 4, !dbg !9410
  %48 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9412
  %particles35 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %48, i32 0, i32 3, !dbg !9413
  %49 = load %struct.ParticleData*, %struct.ParticleData** %particles35, align 8, !dbg !9413
  store %struct.ParticleData* %49, %struct.ParticleData** %pa, align 8, !dbg !9414
  br label %for.cond36, !dbg !9415

for.cond36:                                       ; preds = %for.inc45, %if.then31
  %50 = load i32, i32* %p, align 4, !dbg !9416
  %51 = load i32, i32* %newtotpart, align 4, !dbg !9418
  %cmp37 = icmp slt i32 %50, %51, !dbg !9419
  br i1 %cmp37, label %for.body39, label %for.end49, !dbg !9420

for.body39:                                       ; preds = %for.cond36
  br label %while.cond, !dbg !9421

while.cond:                                       ; preds = %while.body, %for.body39
  %52 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9423
  %flag40 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %52, i32 0, i32 17, !dbg !9424
  %53 = load i16, i16* %flag40, align 4, !dbg !9424
  %conv41 = sext i16 %53 to i32, !dbg !9423
  %and42 = and i32 %conv41, 1, !dbg !9425
  %tobool43 = icmp ne i32 %and42, 0, !dbg !9421
  br i1 %tobool43, label %while.body, label %while.end, !dbg !9421

while.body:                                       ; preds = %while.cond
  %54 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9426
  %incdec.ptr44 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %54, i32 1, !dbg !9426
  store %struct.ParticleData* %incdec.ptr44, %struct.ParticleData** %pa, align 8, !dbg !9426
  br label %while.cond, !dbg !9421, !llvm.loop !9427

while.end:                                        ; preds = %while.cond
  %55 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !9428
  %56 = bitcast %struct.ParticleData* %55 to i8*, !dbg !9429
  %57 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9430
  %58 = bitcast %struct.ParticleData* %57 to i8*, !dbg !9429
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %58, i64 200, i1 false), !dbg !9429
  br label %for.inc45, !dbg !9431

for.inc45:                                        ; preds = %while.end
  %59 = load i32, i32* %p, align 4, !dbg !9432
  %inc46 = add nsw i32 %59, 1, !dbg !9432
  store i32 %inc46, i32* %p, align 4, !dbg !9432
  %60 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9433
  %incdec.ptr47 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %60, i32 1, !dbg !9433
  store %struct.ParticleData* %incdec.ptr47, %struct.ParticleData** %pa, align 8, !dbg !9433
  %61 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !9434
  %incdec.ptr48 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %61, i32 1, !dbg !9434
  store %struct.ParticleData* %incdec.ptr48, %struct.ParticleData** %npa, align 8, !dbg !9434
  br label %for.cond36, !dbg !9435, !llvm.loop !9436

for.end49:                                        ; preds = %for.cond36
  %62 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9438
  %particles50 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %62, i32 0, i32 3, !dbg !9440
  %63 = load %struct.ParticleData*, %struct.ParticleData** %particles50, align 8, !dbg !9440
  %boid51 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %63, i32 0, i32 4, !dbg !9441
  %64 = load %struct.BoidParticle*, %struct.BoidParticle** %boid51, align 8, !dbg !9441
  %tobool52 = icmp ne %struct.BoidParticle* %64, null, !dbg !9438
  br i1 %tobool52, label %if.then53, label %if.end56, !dbg !9442

if.then53:                                        ; preds = %for.end49
  %65 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9443
  %66 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9444
  %particles54 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %66, i32 0, i32 3, !dbg !9445
  %67 = load %struct.ParticleData*, %struct.ParticleData** %particles54, align 8, !dbg !9445
  %boid55 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %67, i32 0, i32 4, !dbg !9446
  %68 = load %struct.BoidParticle*, %struct.BoidParticle** %boid55, align 8, !dbg !9446
  %69 = bitcast %struct.BoidParticle* %68 to i8*, !dbg !9444
  call void %65(i8* %69), !dbg !9443
  br label %if.end56, !dbg !9443

if.end56:                                         ; preds = %if.then53, %for.end49
  %70 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9447
  %71 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9448
  %particles57 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %71, i32 0, i32 3, !dbg !9449
  %72 = load %struct.ParticleData*, %struct.ParticleData** %particles57, align 8, !dbg !9449
  %73 = bitcast %struct.ParticleData* %72 to i8*, !dbg !9448
  call void %70(i8* %73), !dbg !9447
  %74 = load %struct.ParticleData*, %struct.ParticleData** %newpars, align 8, !dbg !9450
  %75 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9451
  %particles58 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %75, i32 0, i32 3, !dbg !9452
  store %struct.ParticleData* %74, %struct.ParticleData** %particles58, align 8, !dbg !9453
  %76 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9454
  %totunexist59 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %76, i32 0, i32 27, !dbg !9455
  %77 = load i32, i32* %totunexist59, align 4, !dbg !9455
  %78 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9456
  %totpart60 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %78, i32 0, i32 26, !dbg !9457
  %79 = load i32, i32* %totpart60, align 8, !dbg !9458
  %sub61 = sub nsw i32 %79, %77, !dbg !9458
  store i32 %sub61, i32* %totpart60, align 8, !dbg !9458
  %80 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9459
  %particles62 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %80, i32 0, i32 3, !dbg !9461
  %81 = load %struct.ParticleData*, %struct.ParticleData** %particles62, align 8, !dbg !9461
  %boid63 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %81, i32 0, i32 4, !dbg !9462
  %82 = load %struct.BoidParticle*, %struct.BoidParticle** %boid63, align 8, !dbg !9462
  %tobool64 = icmp ne %struct.BoidParticle* %82, null, !dbg !9459
  br i1 %tobool64, label %if.then65, label %if.end82, !dbg !9463

if.then65:                                        ; preds = %if.end56
  call void @llvm.dbg.declare(metadata %struct.BoidParticle** %newboids, metadata !9464, metadata !DIExpression()), !dbg !9466
  %83 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9467
  %84 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9468
  %totpart66 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %84, i32 0, i32 26, !dbg !9469
  %85 = load i32, i32* %totpart66, align 8, !dbg !9469
  %conv67 = sext i32 %85 to i64, !dbg !9468
  %mul68 = mul i64 %conv67, 56, !dbg !9470
  %call69 = call i8* %83(i64 %mul68, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0)), !dbg !9467
  %86 = bitcast i8* %call69 to %struct.BoidParticle*, !dbg !9467
  store %struct.BoidParticle* %86, %struct.BoidParticle** %newboids, align 8, !dbg !9466
  store i32 0, i32* %p, align 4, !dbg !9471
  %87 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9471
  %particles70 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %87, i32 0, i32 3, !dbg !9471
  %88 = load %struct.ParticleData*, %struct.ParticleData** %particles70, align 8, !dbg !9471
  store %struct.ParticleData* %88, %struct.ParticleData** %pa, align 8, !dbg !9471
  br label %for.cond71, !dbg !9471

for.cond71:                                       ; preds = %for.inc78, %if.then65
  %89 = load i32, i32* %p, align 4, !dbg !9473
  %90 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9473
  %totpart72 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %90, i32 0, i32 26, !dbg !9473
  %91 = load i32, i32* %totpart72, align 8, !dbg !9473
  %cmp73 = icmp slt i32 %89, %91, !dbg !9473
  br i1 %cmp73, label %for.body75, label %for.end81, !dbg !9471

for.body75:                                       ; preds = %for.cond71
  %92 = load %struct.BoidParticle*, %struct.BoidParticle** %newboids, align 8, !dbg !9475
  %incdec.ptr76 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %92, i32 1, !dbg !9475
  store %struct.BoidParticle* %incdec.ptr76, %struct.BoidParticle** %newboids, align 8, !dbg !9475
  %93 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9476
  %boid77 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %93, i32 0, i32 4, !dbg !9477
  store %struct.BoidParticle* %92, %struct.BoidParticle** %boid77, align 8, !dbg !9478
  br label %for.inc78, !dbg !9476

for.inc78:                                        ; preds = %for.body75
  %94 = load i32, i32* %p, align 4, !dbg !9473
  %inc79 = add nsw i32 %94, 1, !dbg !9473
  store i32 %inc79, i32* %p, align 4, !dbg !9473
  %95 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9473
  %incdec.ptr80 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %95, i32 1, !dbg !9473
  store %struct.ParticleData* %incdec.ptr80, %struct.ParticleData** %pa, align 8, !dbg !9473
  br label %for.cond71, !dbg !9473, !llvm.loop !9479

for.end81:                                        ; preds = %for.cond71
  br label %if.end82, !dbg !9481

if.end82:                                         ; preds = %for.end81, %if.end56
  br label %if.end83, !dbg !9482

if.end83:                                         ; preds = %if.end82, %if.end28
  ret void, !dbg !9483
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_keyed_keys(%struct.ParticleSimulationData* %sim) #0 !dbg !9484 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %ksim = alloca %struct.ParticleSimulationData, align 8
  %pt = alloca %struct.ParticleTarget*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %key = alloca %struct.ParticleKey*, align 8
  %totpart = alloca i32, align 4
  %k = alloca i32, align 4
  %totkeys = alloca i32, align 4
  %keyed_flag = alloca i32, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !9485, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !9487, metadata !DIExpression()), !dbg !9488
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9489
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !9490
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !9490
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !9488
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData* %ksim, metadata !9491, metadata !DIExpression()), !dbg !9492
  %2 = bitcast %struct.ParticleSimulationData* %ksim to i8*, !dbg !9492
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false), !dbg !9492
  call void @llvm.dbg.declare(metadata %struct.ParticleTarget** %pt, metadata !9493, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !9495, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.declare(metadata i32* %p, metadata !9497, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.declare(metadata %struct.ParticleKey** %key, metadata !9498, metadata !DIExpression()), !dbg !9499
  call void @llvm.dbg.declare(metadata i32* %totpart, metadata !9500, metadata !DIExpression()), !dbg !9501
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9502
  %totpart2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 26, !dbg !9503
  %4 = load i32, i32* %totpart2, align 8, !dbg !9503
  store i32 %4, i32* %totpart, align 4, !dbg !9501
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9504, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.declare(metadata i32* %totkeys, metadata !9506, metadata !DIExpression()), !dbg !9507
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9508
  %totkeyed = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 33, !dbg !9509
  %6 = load i16, i16* %totkeyed, align 8, !dbg !9509
  %conv = sext i16 %6 to i32, !dbg !9508
  store i32 %conv, i32* %totkeys, align 4, !dbg !9507
  call void @llvm.dbg.declare(metadata i32* %keyed_flag, metadata !9510, metadata !DIExpression()), !dbg !9511
  store i32 0, i32* %keyed_flag, align 4, !dbg !9511
  %7 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9512
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %7, i32 0, i32 0, !dbg !9513
  %8 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9513
  %scene3 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %ksim, i32 0, i32 0, !dbg !9514
  store %struct.Scene* %8, %struct.Scene** %scene3, align 8, !dbg !9515
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9516
  %totkeyed4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 33, !dbg !9518
  %10 = load i16, i16* %totkeyed4, align 8, !dbg !9518
  %conv5 = sext i16 %10 to i32, !dbg !9516
  %cmp = icmp eq i32 %conv5, 0, !dbg !9519
  br i1 %cmp, label %if.then, label %if.end, !dbg !9520

if.then:                                          ; preds = %entry
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9521
  call void @free_keyed_keys(%struct.ParticleSystem* %11), !dbg !9523
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9524
  %flag = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %12, i32 0, i32 25, !dbg !9525
  %13 = load i32, i32* %flag, align 4, !dbg !9526
  %and = and i32 %13, -1025, !dbg !9526
  store i32 %and, i32* %flag, align 4, !dbg !9526
  br label %return, !dbg !9527

if.end:                                           ; preds = %entry
  %14 = load i32, i32* %totpart, align 4, !dbg !9528
  %tobool = icmp ne i32 %14, 0, !dbg !9528
  br i1 %tobool, label %land.lhs.true, label %if.end17, !dbg !9530

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9531
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %15, i32 0, i32 3, !dbg !9532
  %16 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !9532
  %totkey = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %16, i32 0, i32 5, !dbg !9533
  %17 = load i32, i32* %totkey, align 8, !dbg !9533
  %18 = load i32, i32* %totkeys, align 4, !dbg !9534
  %cmp7 = icmp ne i32 %17, %18, !dbg !9535
  br i1 %cmp7, label %if.then9, label %if.end17, !dbg !9536

if.then9:                                         ; preds = %land.lhs.true
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9537
  call void @free_keyed_keys(%struct.ParticleSystem* %19), !dbg !9539
  %20 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9540
  %21 = load i32, i32* %totpart, align 4, !dbg !9541
  %22 = load i32, i32* %totkeys, align 4, !dbg !9542
  %mul = mul nsw i32 %21, %22, !dbg !9543
  %conv10 = sext i32 %mul to i64, !dbg !9541
  %mul11 = mul i64 %conv10, 56, !dbg !9544
  %call = call i8* %20(i64 %mul11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0)), !dbg !9540
  %23 = bitcast i8* %call to %struct.ParticleKey*, !dbg !9540
  store %struct.ParticleKey* %23, %struct.ParticleKey** %key, align 8, !dbg !9545
  store i32 0, i32* %p, align 4, !dbg !9546
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9546
  %particles12 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %24, i32 0, i32 3, !dbg !9546
  %25 = load %struct.ParticleData*, %struct.ParticleData** %particles12, align 8, !dbg !9546
  store %struct.ParticleData* %25, %struct.ParticleData** %pa, align 8, !dbg !9546
  br label %for.cond, !dbg !9546

for.cond:                                         ; preds = %for.inc, %if.then9
  %26 = load i32, i32* %p, align 4, !dbg !9548
  %27 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9548
  %totpart13 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %27, i32 0, i32 26, !dbg !9548
  %28 = load i32, i32* %totpart13, align 8, !dbg !9548
  %cmp14 = icmp slt i32 %26, %28, !dbg !9548
  br i1 %cmp14, label %for.body, label %for.end, !dbg !9546

for.body:                                         ; preds = %for.cond
  %29 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !9550
  %30 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9552
  %keys = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %30, i32 0, i32 3, !dbg !9553
  store %struct.ParticleKey* %29, %struct.ParticleKey** %keys, align 8, !dbg !9554
  %31 = load i32, i32* %totkeys, align 4, !dbg !9555
  %32 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9556
  %totkey16 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %32, i32 0, i32 5, !dbg !9557
  store i32 %31, i32* %totkey16, align 8, !dbg !9558
  %33 = load i32, i32* %totkeys, align 4, !dbg !9559
  %34 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !9560
  %idx.ext = sext i32 %33 to i64, !dbg !9560
  %add.ptr = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %34, i64 %idx.ext, !dbg !9560
  store %struct.ParticleKey* %add.ptr, %struct.ParticleKey** %key, align 8, !dbg !9560
  br label %for.inc, !dbg !9561

for.inc:                                          ; preds = %for.body
  %35 = load i32, i32* %p, align 4, !dbg !9548
  %inc = add nsw i32 %35, 1, !dbg !9548
  store i32 %inc, i32* %p, align 4, !dbg !9548
  %36 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9548
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %36, i32 1, !dbg !9548
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !9548
  br label %for.cond, !dbg !9548, !llvm.loop !9562

for.end:                                          ; preds = %for.cond
  br label %if.end17, !dbg !9564

if.end17:                                         ; preds = %for.end, %land.lhs.true, %if.end
  %37 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9565
  %flag18 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %37, i32 0, i32 25, !dbg !9566
  %38 = load i32, i32* %flag18, align 4, !dbg !9567
  %and19 = and i32 %38, -1025, !dbg !9567
  store i32 %and19, i32* %flag18, align 4, !dbg !9567
  %39 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9568
  %targets = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %39, i32 0, i32 17, !dbg !9569
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !9570
  %40 = load i8*, i8** %first, align 8, !dbg !9570
  %41 = bitcast i8* %40 to %struct.ParticleTarget*, !dbg !9568
  store %struct.ParticleTarget* %41, %struct.ParticleTarget** %pt, align 8, !dbg !9571
  store i32 0, i32* %k, align 4, !dbg !9572
  br label %for.cond20, !dbg !9574

for.cond20:                                       ; preds = %for.inc118, %if.end17
  %42 = load i32, i32* %k, align 4, !dbg !9575
  %43 = load i32, i32* %totkeys, align 4, !dbg !9577
  %cmp21 = icmp slt i32 %42, %43, !dbg !9578
  br i1 %cmp21, label %for.body23, label %for.end120, !dbg !9579

for.body23:                                       ; preds = %for.cond20
  %44 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !9580
  %ob = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %44, i32 0, i32 2, !dbg !9582
  %45 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9582
  %tobool24 = icmp ne %struct.Object* %45, null, !dbg !9580
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !9580

cond.true:                                        ; preds = %for.body23
  %46 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !9583
  %ob25 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %46, i32 0, i32 2, !dbg !9584
  %47 = load %struct.Object*, %struct.Object** %ob25, align 8, !dbg !9584
  br label %cond.end, !dbg !9580

cond.false:                                       ; preds = %for.body23
  %48 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9585
  %ob26 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %48, i32 0, i32 1, !dbg !9586
  %49 = load %struct.Object*, %struct.Object** %ob26, align 8, !dbg !9586
  br label %cond.end, !dbg !9580

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Object* [ %47, %cond.true ], [ %49, %cond.false ], !dbg !9580
  %ob27 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %ksim, i32 0, i32 1, !dbg !9587
  store %struct.Object* %cond, %struct.Object** %ob27, align 8, !dbg !9588
  %ob28 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %ksim, i32 0, i32 1, !dbg !9589
  %50 = load %struct.Object*, %struct.Object** %ob28, align 8, !dbg !9589
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 109, !dbg !9590
  %51 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !9591
  %psys29 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %51, i32 0, i32 3, !dbg !9592
  %52 = load i32, i32* %psys29, align 8, !dbg !9592
  %sub = sub nsw i32 %52, 1, !dbg !9593
  %call30 = call i8* @BLI_findlink(%struct.ListBase* %particlesystem, i32 %sub), !dbg !9594
  %53 = bitcast i8* %call30 to %struct.ParticleSystem*, !dbg !9594
  %psys31 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %ksim, i32 0, i32 2, !dbg !9595
  store %struct.ParticleSystem* %53, %struct.ParticleSystem** %psys31, align 8, !dbg !9596
  %psys32 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %ksim, i32 0, i32 2, !dbg !9597
  %54 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys32, align 8, !dbg !9597
  %flag33 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %54, i32 0, i32 25, !dbg !9598
  %55 = load i32, i32* %flag33, align 4, !dbg !9598
  %and34 = and i32 %55, 1024, !dbg !9599
  store i32 %and34, i32* %keyed_flag, align 4, !dbg !9600
  %psys35 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %ksim, i32 0, i32 2, !dbg !9601
  %56 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys35, align 8, !dbg !9601
  %flag36 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %56, i32 0, i32 25, !dbg !9602
  %57 = load i32, i32* %flag36, align 4, !dbg !9603
  %and37 = and i32 %57, -1025, !dbg !9603
  store i32 %and37, i32* %flag36, align 4, !dbg !9603
  store i32 0, i32* %p, align 4, !dbg !9604
  %58 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9604
  %particles38 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %58, i32 0, i32 3, !dbg !9604
  %59 = load %struct.ParticleData*, %struct.ParticleData** %particles38, align 8, !dbg !9604
  store %struct.ParticleData* %59, %struct.ParticleData** %pa, align 8, !dbg !9604
  br label %for.cond39, !dbg !9604

for.cond39:                                       ; preds = %for.inc88, %cond.end
  %60 = load i32, i32* %p, align 4, !dbg !9606
  %61 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9606
  %totpart40 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %61, i32 0, i32 26, !dbg !9606
  %62 = load i32, i32* %totpart40, align 8, !dbg !9606
  %cmp41 = icmp slt i32 %60, %62, !dbg !9606
  br i1 %cmp41, label %for.body43, label %for.end91, !dbg !9604

for.body43:                                       ; preds = %for.cond39
  %63 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9608
  %keys44 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %63, i32 0, i32 3, !dbg !9610
  %64 = load %struct.ParticleKey*, %struct.ParticleKey** %keys44, align 8, !dbg !9610
  %65 = load i32, i32* %k, align 4, !dbg !9611
  %idx.ext45 = sext i32 %65 to i64, !dbg !9612
  %add.ptr46 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %64, i64 %idx.ext45, !dbg !9612
  store %struct.ParticleKey* %add.ptr46, %struct.ParticleKey** %key, align 8, !dbg !9613
  %66 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !9614
  %time = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %66, i32 0, i32 4, !dbg !9615
  store float -1.000000e+00, float* %time, align 4, !dbg !9616
  %67 = load i32, i32* %p, align 4, !dbg !9617
  %psys47 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %ksim, i32 0, i32 2, !dbg !9618
  %68 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys47, align 8, !dbg !9618
  %totpart48 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %68, i32 0, i32 26, !dbg !9619
  %69 = load i32, i32* %totpart48, align 8, !dbg !9619
  %rem = srem i32 %67, %69, !dbg !9620
  %70 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !9621
  %call49 = call i32 @psys_get_particle_state(%struct.ParticleSimulationData* %ksim, i32 %rem, %struct.ParticleKey* %70, i32 1), !dbg !9622
  %71 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9623
  %flag50 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %71, i32 0, i32 25, !dbg !9625
  %72 = load i32, i32* %flag50, align 4, !dbg !9625
  %and51 = and i32 %72, 8, !dbg !9626
  %tobool52 = icmp ne i32 %and51, 0, !dbg !9626
  br i1 %tobool52, label %if.then53, label %if.else, !dbg !9627

if.then53:                                        ; preds = %for.body43
  %73 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9628
  %time54 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %73, i32 0, i32 6, !dbg !9630
  %74 = load float, float* %time54, align 4, !dbg !9630
  %75 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !9631
  %time55 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %75, i32 0, i32 6, !dbg !9632
  %76 = load float, float* %time55, align 8, !dbg !9632
  %add = fadd float %74, %76, !dbg !9633
  %77 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !9634
  %time56 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %77, i32 0, i32 4, !dbg !9635
  store float %add, float* %time56, align 4, !dbg !9636
  %78 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !9637
  %duration = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %78, i32 0, i32 7, !dbg !9639
  %79 = load float, float* %duration, align 4, !dbg !9639
  %cmp57 = fcmp une float %79, 0.000000e+00, !dbg !9640
  br i1 %cmp57, label %land.lhs.true59, label %if.end72, !dbg !9641

land.lhs.true59:                                  ; preds = %if.then53
  %80 = load i32, i32* %k, align 4, !dbg !9642
  %add60 = add nsw i32 %80, 1, !dbg !9643
  %81 = load i32, i32* %totkeys, align 4, !dbg !9644
  %cmp61 = icmp slt i32 %add60, %81, !dbg !9645
  br i1 %cmp61, label %if.then63, label %if.end72, !dbg !9646

if.then63:                                        ; preds = %land.lhs.true59
  %82 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !9647
  %add.ptr64 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %82, i64 1, !dbg !9649
  %83 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !9650
  call void @copy_particle_key(%struct.ParticleKey* %add.ptr64, %struct.ParticleKey* %83, i32 1), !dbg !9651
  %84 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9652
  %time65 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %84, i32 0, i32 6, !dbg !9653
  %85 = load float, float* %time65, align 4, !dbg !9653
  %86 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !9654
  %time66 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %86, i32 0, i32 6, !dbg !9655
  %87 = load float, float* %time66, align 8, !dbg !9655
  %add67 = fadd float %85, %87, !dbg !9656
  %88 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !9657
  %duration68 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %88, i32 0, i32 7, !dbg !9658
  %89 = load float, float* %duration68, align 4, !dbg !9658
  %add69 = fadd float %add67, %89, !dbg !9659
  %90 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !9660
  %add.ptr70 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %90, i64 1, !dbg !9661
  %time71 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %add.ptr70, i32 0, i32 4, !dbg !9662
  store float %add69, float* %time71, align 4, !dbg !9663
  br label %if.end72, !dbg !9664

if.end72:                                         ; preds = %if.then63, %land.lhs.true59, %if.then53
  br label %if.end87, !dbg !9665

if.else:                                          ; preds = %for.body43
  %91 = load i32, i32* %totkeys, align 4, !dbg !9666
  %cmp73 = icmp sgt i32 %91, 1, !dbg !9668
  br i1 %cmp73, label %if.then75, label %if.else83, !dbg !9669

if.then75:                                        ; preds = %if.else
  %92 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9670
  %time76 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %92, i32 0, i32 6, !dbg !9671
  %93 = load float, float* %time76, align 4, !dbg !9671
  %94 = load i32, i32* %k, align 4, !dbg !9672
  %conv77 = sitofp i32 %94 to float, !dbg !9673
  %95 = load i32, i32* %totkeys, align 4, !dbg !9674
  %sub78 = sub nsw i32 %95, 1, !dbg !9675
  %conv79 = sitofp i32 %sub78 to float, !dbg !9676
  %div = fdiv float %conv77, %conv79, !dbg !9677
  %96 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9678
  %lifetime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %96, i32 0, i32 7, !dbg !9679
  %97 = load float, float* %lifetime, align 8, !dbg !9679
  %mul80 = fmul float %div, %97, !dbg !9680
  %add81 = fadd float %93, %mul80, !dbg !9681
  %98 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !9682
  %time82 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %98, i32 0, i32 4, !dbg !9683
  store float %add81, float* %time82, align 4, !dbg !9684
  br label %if.end86, !dbg !9682

if.else83:                                        ; preds = %if.else
  %99 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9685
  %time84 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %99, i32 0, i32 6, !dbg !9686
  %100 = load float, float* %time84, align 4, !dbg !9686
  %101 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !9687
  %time85 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %101, i32 0, i32 4, !dbg !9688
  store float %100, float* %time85, align 4, !dbg !9689
  br label %if.end86

if.end86:                                         ; preds = %if.else83, %if.then75
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.end72
  br label %for.inc88, !dbg !9690

for.inc88:                                        ; preds = %if.end87
  %102 = load i32, i32* %p, align 4, !dbg !9606
  %inc89 = add nsw i32 %102, 1, !dbg !9606
  store i32 %inc89, i32* %p, align 4, !dbg !9606
  %103 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !9606
  %incdec.ptr90 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %103, i32 1, !dbg !9606
  store %struct.ParticleData* %incdec.ptr90, %struct.ParticleData** %pa, align 8, !dbg !9606
  br label %for.cond39, !dbg !9606, !llvm.loop !9691

for.end91:                                        ; preds = %for.cond39
  %104 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9693
  %flag92 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %104, i32 0, i32 25, !dbg !9695
  %105 = load i32, i32* %flag92, align 4, !dbg !9695
  %and93 = and i32 %105, 8, !dbg !9696
  %tobool94 = icmp ne i32 %and93, 0, !dbg !9696
  br i1 %tobool94, label %land.lhs.true95, label %if.end101, !dbg !9697

land.lhs.true95:                                  ; preds = %for.end91
  %106 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !9698
  %duration96 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %106, i32 0, i32 7, !dbg !9699
  %107 = load float, float* %duration96, align 4, !dbg !9699
  %cmp97 = fcmp une float %107, 0.000000e+00, !dbg !9700
  br i1 %cmp97, label %if.then99, label %if.end101, !dbg !9701

if.then99:                                        ; preds = %land.lhs.true95
  %108 = load i32, i32* %k, align 4, !dbg !9702
  %inc100 = add nsw i32 %108, 1, !dbg !9702
  store i32 %inc100, i32* %k, align 4, !dbg !9702
  br label %if.end101, !dbg !9703

if.end101:                                        ; preds = %if.then99, %land.lhs.true95, %for.end91
  %109 = load i32, i32* %keyed_flag, align 4, !dbg !9704
  %psys102 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %ksim, i32 0, i32 2, !dbg !9705
  %110 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys102, align 8, !dbg !9705
  %flag103 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %110, i32 0, i32 25, !dbg !9706
  %111 = load i32, i32* %flag103, align 4, !dbg !9707
  %or = or i32 %111, %109, !dbg !9707
  store i32 %or, i32* %flag103, align 4, !dbg !9707
  %112 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !9708
  %next = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %112, i32 0, i32 0, !dbg !9709
  %113 = load %struct.ParticleTarget*, %struct.ParticleTarget** %next, align 8, !dbg !9709
  %tobool104 = icmp ne %struct.ParticleTarget* %113, null, !dbg !9708
  br i1 %tobool104, label %land.lhs.true105, label %cond.false113, !dbg !9710

land.lhs.true105:                                 ; preds = %if.end101
  %114 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !9711
  %next106 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %114, i32 0, i32 0, !dbg !9712
  %115 = load %struct.ParticleTarget*, %struct.ParticleTarget** %next106, align 8, !dbg !9712
  %flag107 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %115, i32 0, i32 4, !dbg !9713
  %116 = load i16, i16* %flag107, align 4, !dbg !9713
  %conv108 = sext i16 %116 to i32, !dbg !9711
  %and109 = and i32 %conv108, 2, !dbg !9714
  %tobool110 = icmp ne i32 %and109, 0, !dbg !9714
  br i1 %tobool110, label %cond.true111, label %cond.false113, !dbg !9715

cond.true111:                                     ; preds = %land.lhs.true105
  %117 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !9716
  %next112 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %117, i32 0, i32 0, !dbg !9717
  %118 = load %struct.ParticleTarget*, %struct.ParticleTarget** %next112, align 8, !dbg !9717
  %119 = bitcast %struct.ParticleTarget* %118 to i8*, !dbg !9716
  br label %cond.end116, !dbg !9715

cond.false113:                                    ; preds = %land.lhs.true105, %if.end101
  %120 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9718
  %targets114 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %120, i32 0, i32 17, !dbg !9719
  %first115 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets114, i32 0, i32 0, !dbg !9720
  %121 = load i8*, i8** %first115, align 8, !dbg !9720
  br label %cond.end116, !dbg !9715

cond.end116:                                      ; preds = %cond.false113, %cond.true111
  %cond117 = phi i8* [ %119, %cond.true111 ], [ %121, %cond.false113 ], !dbg !9715
  %122 = bitcast i8* %cond117 to %struct.ParticleTarget*, !dbg !9715
  store %struct.ParticleTarget* %122, %struct.ParticleTarget** %pt, align 8, !dbg !9721
  br label %for.inc118, !dbg !9722

for.inc118:                                       ; preds = %cond.end116
  %123 = load i32, i32* %k, align 4, !dbg !9723
  %inc119 = add nsw i32 %123, 1, !dbg !9723
  store i32 %inc119, i32* %k, align 4, !dbg !9723
  br label %for.cond20, !dbg !9724, !llvm.loop !9725

for.end120:                                       ; preds = %for.cond20
  %124 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9727
  %flag121 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %124, i32 0, i32 25, !dbg !9728
  %125 = load i32, i32* %flag121, align 4, !dbg !9729
  %or122 = or i32 %125, 1024, !dbg !9729
  store i32 %or122, i32* %flag121, align 4, !dbg !9729
  br label %return, !dbg !9730

return:                                           ; preds = %for.end120, %if.then
  ret void, !dbg !9730
}

; Function Attrs: noinline nounwind uwtable
define internal void @psys_update_path_cache(%struct.ParticleSimulationData* %sim, float %cfra) #0 !dbg !9731 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %cfra.addr = alloca float, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %pset = alloca %struct.ParticleEditSettings*, align 8
  %base = alloca %struct.Base*, align 8
  %distr = alloca i32, align 4
  %alloc = alloca i32, align 4
  %skip = alloca i32, align 4
  %md = alloca %struct.ModifierData*, align 8
  %pimd = alloca %struct.ParticleInstanceModifierData*, align 8
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !9732, metadata !DIExpression()), !dbg !9733
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !9734, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !9736, metadata !DIExpression()), !dbg !9737
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9738
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !9739
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !9739
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !9737
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !9740, metadata !DIExpression()), !dbg !9741
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9742
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !9743
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !9743
  store %struct.ParticleSettings* %3, %struct.ParticleSettings** %part, align 8, !dbg !9741
  call void @llvm.dbg.declare(metadata %struct.ParticleEditSettings** %pset, metadata !9744, metadata !DIExpression()), !dbg !9747
  %4 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9748
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %4, i32 0, i32 0, !dbg !9749
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9749
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %5, i32 0, i32 20, !dbg !9750
  %6 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !9750
  %particle = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %6, i32 0, i32 18, !dbg !9751
  store %struct.ParticleEditSettings* %particle, %struct.ParticleEditSettings** %pset, align 8, !dbg !9747
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !9752, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.declare(metadata i32* %distr, metadata !9756, metadata !DIExpression()), !dbg !9757
  store i32 0, i32* %distr, align 4, !dbg !9757
  call void @llvm.dbg.declare(metadata i32* %alloc, metadata !9758, metadata !DIExpression()), !dbg !9759
  store i32 0, i32* %alloc, align 4, !dbg !9759
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !9760, metadata !DIExpression()), !dbg !9761
  store i32 0, i32* %skip, align 4, !dbg !9761
  %7 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9762
  %part3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %7, i32 0, i32 2, !dbg !9764
  %8 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part3, align 8, !dbg !9764
  %childtype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %8, i32 0, i32 19, !dbg !9765
  %9 = load i16, i16* %childtype, align 4, !dbg !9765
  %conv = sext i16 %9 to i32, !dbg !9762
  %tobool = icmp ne i32 %conv, 0, !dbg !9762
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !9766

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9767
  %totchild = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 28, !dbg !9768
  %11 = load i32, i32* %totchild, align 8, !dbg !9768
  %12 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9769
  %scene4 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %12, i32 0, i32 0, !dbg !9770
  %13 = load %struct.Scene*, %struct.Scene** %scene4, align 8, !dbg !9770
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9771
  %call = call i32 @get_psys_tot_child(%struct.Scene* %13, %struct.ParticleSystem* %14), !dbg !9772
  %cmp = icmp ne i32 %11, %call, !dbg !9773
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9774

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %15 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9775
  %recalc = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %15, i32 0, i32 31, !dbg !9776
  %16 = load i16, i16* %recalc, align 4, !dbg !9776
  %conv6 = sext i16 %16 to i32, !dbg !9775
  %and = and i32 %conv6, 16, !dbg !9777
  %tobool7 = icmp ne i32 %and, 0, !dbg !9777
  br i1 %tobool7, label %if.then, label %if.end, !dbg !9778

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 1, i32* %alloc, align 4, !dbg !9779
  br label %if.end, !dbg !9780

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %17 = load i32, i32* %alloc, align 4, !dbg !9781
  %tobool8 = icmp ne i32 %17, 0, !dbg !9781
  br i1 %tobool8, label %if.then23, label %lor.lhs.false9, !dbg !9783

lor.lhs.false9:                                   ; preds = %if.end
  %18 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9784
  %recalc10 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %18, i32 0, i32 31, !dbg !9785
  %19 = load i16, i16* %recalc10, align 4, !dbg !9785
  %conv11 = sext i16 %19 to i32, !dbg !9784
  %and12 = and i32 %conv11, 64, !dbg !9786
  %tobool13 = icmp ne i32 %and12, 0, !dbg !9786
  br i1 %tobool13, label %if.then23, label %lor.lhs.false14, !dbg !9787

lor.lhs.false14:                                  ; preds = %lor.lhs.false9
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9788
  %vgroup = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 36, !dbg !9789
  %arrayidx = getelementptr inbounds [12 x i16], [12 x i16]* %vgroup, i64 0, i64 0, !dbg !9788
  %21 = load i16, i16* %arrayidx, align 4, !dbg !9788
  %conv15 = sext i16 %21 to i32, !dbg !9788
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !9788
  br i1 %tobool16, label %land.lhs.true17, label %if.end24, !dbg !9790

land.lhs.true17:                                  ; preds = %lor.lhs.false14
  %22 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9791
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %22, i32 0, i32 1, !dbg !9792
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9792
  %tobool18 = icmp ne %struct.Object* %23, null, !dbg !9791
  br i1 %tobool18, label %land.lhs.true19, label %if.end24, !dbg !9793

land.lhs.true19:                                  ; preds = %land.lhs.true17
  %24 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9794
  %ob20 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %24, i32 0, i32 1, !dbg !9795
  %25 = load %struct.Object*, %struct.Object** %ob20, align 8, !dbg !9795
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 27, !dbg !9796
  %26 = load i32, i32* %mode, align 8, !dbg !9796
  %and21 = and i32 %26, 8, !dbg !9797
  %tobool22 = icmp ne i32 %and21, 0, !dbg !9797
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !9798

if.then23:                                        ; preds = %land.lhs.true19, %lor.lhs.false9, %if.end
  store i32 1, i32* %distr, align 4, !dbg !9799
  br label %if.end24, !dbg !9800

if.end24:                                         ; preds = %if.then23, %land.lhs.true19, %land.lhs.true17, %lor.lhs.false14
  %27 = load i32, i32* %distr, align 4, !dbg !9801
  %tobool25 = icmp ne i32 %27, 0, !dbg !9801
  br i1 %tobool25, label %if.then26, label %if.end54, !dbg !9803

if.then26:                                        ; preds = %if.end24
  %28 = load i32, i32* %alloc, align 4, !dbg !9804
  %tobool27 = icmp ne i32 %28, 0, !dbg !9804
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !9807

if.then28:                                        ; preds = %if.then26
  %29 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9808
  %30 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9809
  %psys29 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %30, i32 0, i32 2, !dbg !9810
  %31 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys29, align 8, !dbg !9810
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %31, i32 0, i32 26, !dbg !9811
  %32 = load i32, i32* %totpart, align 8, !dbg !9811
  call void @realloc_particles(%struct.ParticleSimulationData* %29, i32 %32), !dbg !9812
  br label %if.end30, !dbg !9812

if.end30:                                         ; preds = %if.then28, %if.then26
  %33 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9813
  %scene31 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %33, i32 0, i32 0, !dbg !9815
  %34 = load %struct.Scene*, %struct.Scene** %scene31, align 8, !dbg !9815
  %35 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9816
  %call32 = call i32 @get_psys_tot_child(%struct.Scene* %34, %struct.ParticleSystem* %35), !dbg !9817
  %tobool33 = icmp ne i32 %call32, 0, !dbg !9817
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !9818

if.then34:                                        ; preds = %if.end30
  %36 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9819
  %part35 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %36, i32 0, i32 2, !dbg !9822
  %37 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part35, align 8, !dbg !9822
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %37, i32 0, i32 7, !dbg !9823
  %38 = load i16, i16* %type, align 8, !dbg !9823
  %conv36 = sext i16 %38 to i32, !dbg !9819
  %cmp37 = icmp eq i32 %conv36, 2, !dbg !9824
  br i1 %cmp37, label %lor.lhs.false39, label %if.then42, !dbg !9825

lor.lhs.false39:                                  ; preds = %if.then34
  %39 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9826
  %flag = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %39, i32 0, i32 25, !dbg !9827
  %40 = load i32, i32* %flag, align 4, !dbg !9827
  %and40 = and i32 %40, 512, !dbg !9828
  %tobool41 = icmp ne i32 %and40, 0, !dbg !9828
  br i1 %tobool41, label %if.then42, label %if.end52, !dbg !9829

if.then42:                                        ; preds = %lor.lhs.false39, %if.then34
  %41 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9830
  call void @distribute_particles(%struct.ParticleSimulationData* %41, i32 4), !dbg !9832
  %42 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9833
  %childtype43 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %42, i32 0, i32 19, !dbg !9835
  %43 = load i16, i16* %childtype43, align 4, !dbg !9835
  %conv44 = sext i16 %43 to i32, !dbg !9833
  %cmp45 = icmp eq i32 %conv44, 2, !dbg !9836
  br i1 %cmp45, label %land.lhs.true47, label %if.end51, !dbg !9837

land.lhs.true47:                                  ; preds = %if.then42
  %44 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9838
  %parents = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %44, i32 0, i32 91, !dbg !9839
  %45 = load float, float* %parents, align 4, !dbg !9839
  %cmp48 = fcmp une float %45, 0.000000e+00, !dbg !9840
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !9841

if.then50:                                        ; preds = %land.lhs.true47
  %46 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9842
  call void @psys_find_parents(%struct.ParticleSimulationData* %46), !dbg !9843
  br label %if.end51, !dbg !9843

if.end51:                                         ; preds = %if.then50, %land.lhs.true47, %if.then42
  br label %if.end52, !dbg !9844

if.end52:                                         ; preds = %if.end51, %lor.lhs.false39
  br label %if.end53, !dbg !9845

if.else:                                          ; preds = %if.end30
  %47 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9846
  call void @psys_free_children(%struct.ParticleSystem* %47), !dbg !9847
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.end52
  br label %if.end54, !dbg !9848

if.end54:                                         ; preds = %if.end53, %if.end24
  %48 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9849
  %type55 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %48, i32 0, i32 7, !dbg !9851
  %49 = load i16, i16* %type55, align 8, !dbg !9851
  %conv56 = sext i16 %49 to i32, !dbg !9849
  %cmp57 = icmp eq i32 %conv56, 2, !dbg !9852
  br i1 %cmp57, label %lor.end, label %lor.lhs.false59, !dbg !9853

lor.lhs.false59:                                  ; preds = %if.end54
  %50 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9854
  %flag60 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %50, i32 0, i32 25, !dbg !9855
  %51 = load i32, i32* %flag60, align 4, !dbg !9855
  %and61 = and i32 %51, 1024, !dbg !9856
  %tobool62 = icmp ne i32 %and61, 0, !dbg !9856
  br i1 %tobool62, label %lor.end, label %lor.rhs, !dbg !9857

lor.rhs:                                          ; preds = %lor.lhs.false59
  %52 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9858
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %52, i32 0, i32 40, !dbg !9859
  %53 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !9859
  %flag63 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %53, i32 0, i32 2, !dbg !9860
  %54 = load i32, i32* %flag63, align 8, !dbg !9860
  %and64 = and i32 %54, 1, !dbg !9861
  %tobool65 = icmp ne i32 %and64, 0, !dbg !9857
  br label %lor.end, !dbg !9857

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false59, %if.end54
  %55 = phi i1 [ true, %lor.lhs.false59 ], [ true, %if.end54 ], [ %tobool65, %lor.rhs ]
  %lor.ext = zext i1 %55 to i32, !dbg !9857
  %cmp66 = icmp eq i32 %lor.ext, 0, !dbg !9862
  br i1 %cmp66, label %if.then68, label %if.else69, !dbg !9863

if.then68:                                        ; preds = %lor.end
  store i32 1, i32* %skip, align 4, !dbg !9864
  br label %if.end136, !dbg !9865

if.else69:                                        ; preds = %lor.end
  %56 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9866
  %ren_as = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %56, i32 0, i32 21, !dbg !9868
  %57 = load i16, i16* %ren_as, align 8, !dbg !9868
  %conv70 = sext i16 %57 to i32, !dbg !9866
  %cmp71 = icmp ne i32 %conv70, 6, !dbg !9869
  br i1 %cmp71, label %land.lhs.true73, label %if.else89, !dbg !9870

land.lhs.true73:                                  ; preds = %if.else69
  %58 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9871
  %type74 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %58, i32 0, i32 7, !dbg !9872
  %59 = load i16, i16* %type74, align 8, !dbg !9872
  %conv75 = sext i16 %59 to i32, !dbg !9871
  %cmp76 = icmp eq i32 %conv75, 2, !dbg !9873
  br i1 %cmp76, label %land.lhs.true78, label %if.then88, !dbg !9874

land.lhs.true78:                                  ; preds = %land.lhs.true73
  %60 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9875
  %ren_as79 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %60, i32 0, i32 21, !dbg !9875
  %61 = load i16, i16* %ren_as79, align 8, !dbg !9875
  %conv80 = sext i16 %61 to i32, !dbg !9875
  %cmp81 = icmp eq i32 %conv80, 7, !dbg !9875
  br i1 %cmp81, label %if.else89, label %lor.lhs.false83, !dbg !9875

lor.lhs.false83:                                  ; preds = %land.lhs.true78
  %62 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9875
  %ren_as84 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %62, i32 0, i32 21, !dbg !9875
  %63 = load i16, i16* %ren_as84, align 8, !dbg !9875
  %conv85 = sext i16 %63 to i32, !dbg !9875
  %cmp86 = icmp eq i32 %conv85, 8, !dbg !9875
  br i1 %cmp86, label %if.else89, label %if.then88, !dbg !9876

if.then88:                                        ; preds = %lor.lhs.false83, %land.lhs.true73
  store i32 1, i32* %skip, align 4, !dbg !9877
  br label %if.end135, !dbg !9878

if.else89:                                        ; preds = %lor.lhs.false83, %land.lhs.true78, %if.else69
  %64 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9879
  %renderdata = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %64, i32 0, i32 39, !dbg !9881
  %65 = load i8*, i8** %renderdata, align 8, !dbg !9881
  %tobool90 = icmp ne i8* %65, null, !dbg !9879
  br i1 %tobool90, label %if.end134, label %if.then91, !dbg !9882

if.then91:                                        ; preds = %if.else89
  %66 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9883
  %draw_as = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %66, i32 0, i32 17, !dbg !9886
  %67 = load i16, i16* %draw_as, align 8, !dbg !9886
  %conv92 = sext i16 %67 to i32, !dbg !9883
  %cmp93 = icmp ne i32 %conv92, 10, !dbg !9887
  br i1 %cmp93, label %if.then95, label %if.else96, !dbg !9888

if.then95:                                        ; preds = %if.then91
  store i32 1, i32* %skip, align 4, !dbg !9889
  br label %if.end133, !dbg !9890

if.else96:                                        ; preds = %if.then91
  %68 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9891
  %pointcache97 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %68, i32 0, i32 40, !dbg !9893
  %69 = load %struct.PointCache*, %struct.PointCache** %pointcache97, align 8, !dbg !9893
  %flag98 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %69, i32 0, i32 2, !dbg !9894
  %70 = load i32, i32* %flag98, align 8, !dbg !9894
  %and99 = and i32 %70, 8, !dbg !9895
  %tobool100 = icmp ne i32 %and99, 0, !dbg !9895
  br i1 %tobool100, label %if.then101, label %if.else102, !dbg !9896

if.then101:                                       ; preds = %if.else96
  store i32 1, i32* %skip, align 4, !dbg !9897
  br label %if.end132, !dbg !9898

if.else102:                                       ; preds = %if.else96
  %71 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9899
  %scene103 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %71, i32 0, i32 0, !dbg !9901
  %72 = load %struct.Scene*, %struct.Scene** %scene103, align 8, !dbg !9901
  %73 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9902
  %call104 = call i32 @psys_in_edit_mode(%struct.Scene* %72, %struct.ParticleSystem* %73), !dbg !9903
  %tobool105 = icmp ne i32 %call104, 0, !dbg !9903
  br i1 %tobool105, label %if.then106, label %if.end131, !dbg !9904

if.then106:                                       ; preds = %if.else102
  %74 = load %struct.ParticleEditSettings*, %struct.ParticleEditSettings** %pset, align 8, !dbg !9905
  %flag107 = getelementptr inbounds %struct.ParticleEditSettings, %struct.ParticleEditSettings* %74, i32 0, i32 0, !dbg !9908
  %75 = load i16, i16* %flag107, align 8, !dbg !9908
  %conv108 = sext i16 %75 to i32, !dbg !9905
  %and109 = and i32 %conv108, 16, !dbg !9909
  %cmp110 = icmp eq i32 %and109, 0, !dbg !9910
  br i1 %cmp110, label %if.then112, label %if.else113, !dbg !9911

if.then112:                                       ; preds = %if.then106
  store i32 1, i32* %skip, align 4, !dbg !9912
  br label %if.end130, !dbg !9913

if.else113:                                       ; preds = %if.then106
  %76 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9914
  %childtype114 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %76, i32 0, i32 19, !dbg !9916
  %77 = load i16, i16* %childtype114, align 4, !dbg !9916
  %conv115 = sext i16 %77 to i32, !dbg !9914
  %cmp116 = icmp eq i32 %conv115, 0, !dbg !9917
  br i1 %cmp116, label %land.lhs.true118, label %if.end129, !dbg !9918

land.lhs.true118:                                 ; preds = %if.else113
  %78 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9919
  %flag119 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %78, i32 0, i32 25, !dbg !9920
  %79 = load i32, i32* %flag119, align 4, !dbg !9920
  %and120 = and i32 %79, 4, !dbg !9921
  %tobool121 = icmp ne i32 %and120, 0, !dbg !9921
  br i1 %tobool121, label %land.rhs, label %land.end, !dbg !9922

land.rhs:                                         ; preds = %land.lhs.true118
  %80 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9923
  %pointcache122 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %80, i32 0, i32 40, !dbg !9924
  %81 = load %struct.PointCache*, %struct.PointCache** %pointcache122, align 8, !dbg !9924
  %flag123 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %81, i32 0, i32 2, !dbg !9925
  %82 = load i32, i32* %flag123, align 8, !dbg !9925
  %and124 = and i32 %82, 1, !dbg !9926
  %tobool125 = icmp ne i32 %and124, 0, !dbg !9922
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true118
  %83 = phi i1 [ false, %land.lhs.true118 ], [ %tobool125, %land.rhs ], !dbg !9927
  %land.ext = zext i1 %83 to i32, !dbg !9922
  %cmp126 = icmp eq i32 %land.ext, 0, !dbg !9928
  br i1 %cmp126, label %if.then128, label %if.end129, !dbg !9929

if.then128:                                       ; preds = %land.end
  store i32 1, i32* %skip, align 4, !dbg !9930
  br label %if.end129, !dbg !9931

if.end129:                                        ; preds = %if.then128, %land.end, %if.else113
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.then112
  br label %if.end131, !dbg !9932

if.end131:                                        ; preds = %if.end130, %if.else102
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then101
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then95
  br label %if.end134, !dbg !9933

if.end134:                                        ; preds = %if.end133, %if.else89
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then88
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then68
  %84 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9934
  %scene137 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %84, i32 0, i32 0, !dbg !9936
  %85 = load %struct.Scene*, %struct.Scene** %scene137, align 8, !dbg !9936
  %base138 = getelementptr inbounds %struct.Scene, %struct.Scene* %85, i32 0, i32 5, !dbg !9937
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base138, i32 0, i32 0, !dbg !9938
  %86 = load i8*, i8** %first, align 8, !dbg !9938
  %87 = bitcast i8* %86 to %struct.Base*, !dbg !9934
  store %struct.Base* %87, %struct.Base** %base, align 8, !dbg !9939
  br label %for.cond, !dbg !9940

for.cond:                                         ; preds = %for.inc, %if.end136
  %88 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9941
  %tobool139 = icmp ne %struct.Base* %88, null, !dbg !9943
  br i1 %tobool139, label %for.body, label %for.end, !dbg !9943

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !9944, metadata !DIExpression()), !dbg !9947
  %89 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9948
  %object = getelementptr inbounds %struct.Base, %struct.Base* %89, i32 0, i32 7, !dbg !9949
  %90 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !9949
  %call140 = call %struct.ModifierData* @modifiers_findByType(%struct.Object* %90, i32 20), !dbg !9950
  store %struct.ModifierData* %call140, %struct.ModifierData** %md, align 8, !dbg !9947
  %91 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9951
  %tobool141 = icmp ne %struct.ModifierData* %91, null, !dbg !9951
  br i1 %tobool141, label %if.then142, label %if.end161, !dbg !9953

if.then142:                                       ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.ParticleInstanceModifierData** %pimd, metadata !9954, metadata !DIExpression()), !dbg !9956
  %92 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9957
  %93 = bitcast %struct.ModifierData* %92 to %struct.ParticleInstanceModifierData*, !dbg !9958
  store %struct.ParticleInstanceModifierData* %93, %struct.ParticleInstanceModifierData** %pimd, align 8, !dbg !9956
  %94 = load %struct.ParticleInstanceModifierData*, %struct.ParticleInstanceModifierData** %pimd, align 8, !dbg !9959
  %flag143 = getelementptr inbounds %struct.ParticleInstanceModifierData, %struct.ParticleInstanceModifierData* %94, i32 0, i32 3, !dbg !9961
  %95 = load i16, i16* %flag143, align 2, !dbg !9961
  %conv144 = sext i16 %95 to i32, !dbg !9959
  %and145 = and i32 %conv144, 4, !dbg !9962
  %tobool146 = icmp ne i32 %and145, 0, !dbg !9962
  br i1 %tobool146, label %land.lhs.true147, label %if.end160, !dbg !9963

land.lhs.true147:                                 ; preds = %if.then142
  %96 = load %struct.ParticleInstanceModifierData*, %struct.ParticleInstanceModifierData** %pimd, align 8, !dbg !9964
  %ob148 = getelementptr inbounds %struct.ParticleInstanceModifierData, %struct.ParticleInstanceModifierData* %96, i32 0, i32 1, !dbg !9965
  %97 = load %struct.Object*, %struct.Object** %ob148, align 8, !dbg !9965
  %98 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9966
  %ob149 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %98, i32 0, i32 1, !dbg !9967
  %99 = load %struct.Object*, %struct.Object** %ob149, align 8, !dbg !9967
  %cmp150 = icmp eq %struct.Object* %97, %99, !dbg !9968
  br i1 %cmp150, label %land.lhs.true152, label %if.end160, !dbg !9969

land.lhs.true152:                                 ; preds = %land.lhs.true147
  %100 = load %struct.ParticleInstanceModifierData*, %struct.ParticleInstanceModifierData** %pimd, align 8, !dbg !9970
  %psys153 = getelementptr inbounds %struct.ParticleInstanceModifierData, %struct.ParticleInstanceModifierData* %100, i32 0, i32 2, !dbg !9971
  %101 = load i16, i16* %psys153, align 8, !dbg !9971
  %conv154 = sext i16 %101 to i64, !dbg !9970
  %102 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9972
  %103 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9973
  %ob155 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %103, i32 0, i32 1, !dbg !9974
  %104 = load %struct.Object*, %struct.Object** %ob155, align 8, !dbg !9974
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %104, i32 0, i32 109, !dbg !9975
  %first156 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !9976
  %105 = load i8*, i8** %first156, align 8, !dbg !9976
  %106 = bitcast i8* %105 to %struct.ParticleSystem*, !dbg !9977
  %sub.ptr.lhs.cast = ptrtoint %struct.ParticleSystem* %102 to i64, !dbg !9978
  %sub.ptr.rhs.cast = ptrtoint %struct.ParticleSystem* %106 to i64, !dbg !9978
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9978
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 656, !dbg !9978
  %cmp157 = icmp eq i64 %conv154, %sub.ptr.div, !dbg !9979
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !9980

if.then159:                                       ; preds = %land.lhs.true152
  store i32 0, i32* %skip, align 4, !dbg !9981
  br label %for.end, !dbg !9983

if.end160:                                        ; preds = %land.lhs.true152, %land.lhs.true147, %if.then142
  br label %if.end161, !dbg !9984

if.end161:                                        ; preds = %if.end160, %for.body
  br label %for.inc, !dbg !9985

for.inc:                                          ; preds = %if.end161
  %107 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9986
  %next = getelementptr inbounds %struct.Base, %struct.Base* %107, i32 0, i32 0, !dbg !9987
  %108 = load %struct.Base*, %struct.Base** %next, align 8, !dbg !9987
  store %struct.Base* %108, %struct.Base** %base, align 8, !dbg !9988
  br label %for.cond, !dbg !9989, !llvm.loop !9990

for.end:                                          ; preds = %if.then159, %for.cond
  %109 = load i32, i32* %skip, align 4, !dbg !9992
  %tobool162 = icmp ne i32 %109, 0, !dbg !9992
  br i1 %tobool162, label %if.else188, label %if.then163, !dbg !9994

if.then163:                                       ; preds = %for.end
  %110 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !9995
  %111 = load float, float* %cfra.addr, align 4, !dbg !9997
  call void @psys_cache_paths(%struct.ParticleSimulationData* %110, float %111), !dbg !9998
  %112 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9999
  %childtype164 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %112, i32 0, i32 19, !dbg !10001
  %113 = load i16, i16* %childtype164, align 4, !dbg !10001
  %tobool165 = icmp ne i16 %113, 0, !dbg !9999
  br i1 %tobool165, label %if.then166, label %if.end187, !dbg !10002

if.then166:                                       ; preds = %if.then163
  %114 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10003
  %totchild167 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %114, i32 0, i32 28, !dbg !10006
  %115 = load i32, i32* %totchild167, align 8, !dbg !10006
  %tobool168 = icmp ne i32 %115, 0, !dbg !10003
  br i1 %tobool168, label %if.else170, label %if.then169, !dbg !10007

if.then169:                                       ; preds = %if.then166
  store i32 1, i32* %skip, align 4, !dbg !10008
  br label %if.end183, !dbg !10009

if.else170:                                       ; preds = %if.then166
  %116 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10010
  %part171 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %116, i32 0, i32 2, !dbg !10012
  %117 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part171, align 8, !dbg !10012
  %type172 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %117, i32 0, i32 7, !dbg !10013
  %118 = load i16, i16* %type172, align 8, !dbg !10013
  %conv173 = sext i16 %118 to i32, !dbg !10010
  %cmp174 = icmp eq i32 %conv173, 2, !dbg !10014
  br i1 %cmp174, label %land.lhs.true176, label %if.end182, !dbg !10015

land.lhs.true176:                                 ; preds = %if.else170
  %119 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10016
  %flag177 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %119, i32 0, i32 25, !dbg !10017
  %120 = load i32, i32* %flag177, align 4, !dbg !10017
  %and178 = and i32 %120, 512, !dbg !10018
  %cmp179 = icmp eq i32 %and178, 0, !dbg !10019
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !10020

if.then181:                                       ; preds = %land.lhs.true176
  store i32 1, i32* %skip, align 4, !dbg !10021
  br label %if.end182, !dbg !10022

if.end182:                                        ; preds = %if.then181, %land.lhs.true176, %if.else170
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.then169
  %121 = load i32, i32* %skip, align 4, !dbg !10023
  %tobool184 = icmp ne i32 %121, 0, !dbg !10023
  br i1 %tobool184, label %if.end186, label %if.then185, !dbg !10025

if.then185:                                       ; preds = %if.end183
  %122 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !10026
  %123 = load float, float* %cfra.addr, align 4, !dbg !10027
  call void @psys_cache_child_paths(%struct.ParticleSimulationData* %122, float %123, i32 0), !dbg !10028
  br label %if.end186, !dbg !10028

if.end186:                                        ; preds = %if.then185, %if.end183
  br label %if.end187, !dbg !10029

if.end187:                                        ; preds = %if.end186, %if.then163
  br label %if.end192, !dbg !10030

if.else188:                                       ; preds = %for.end
  %124 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10031
  %pathcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %124, i32 0, i32 7, !dbg !10033
  %125 = load %struct.ParticleCacheKey**, %struct.ParticleCacheKey*** %pathcache, align 8, !dbg !10033
  %tobool189 = icmp ne %struct.ParticleCacheKey** %125, null, !dbg !10031
  br i1 %tobool189, label %if.then190, label %if.end191, !dbg !10034

if.then190:                                       ; preds = %if.else188
  %126 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10035
  call void @psys_free_path_cache(%struct.ParticleSystem* %126, %struct.PTCacheEdit* null), !dbg !10036
  br label %if.end191, !dbg !10036

if.end191:                                        ; preds = %if.then190, %if.else188
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.end187
  ret void, !dbg !10037
}

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

declare dso_local void @BKE_object_where_is_calc_time(%struct.Scene*, %struct.Object*, float) #2

declare dso_local %struct.EdgeHash* @BLI_edgehash_new_ex(i8*, i32) #2

declare dso_local void @BLI_edgehash_insert(%struct.EdgeHash*, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3v3fl(float* %r, float* %a, float* %b, float %f) #0 !dbg !10038 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10041, metadata !DIExpression()), !dbg !10042
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10043, metadata !DIExpression()), !dbg !10044
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !10045, metadata !DIExpression()), !dbg !10046
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !10047, metadata !DIExpression()), !dbg !10048
  %0 = load float*, float** %a.addr, align 8, !dbg !10049
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10049
  %1 = load float, float* %arrayidx, align 4, !dbg !10049
  %2 = load float*, float** %b.addr, align 8, !dbg !10050
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10050
  %3 = load float, float* %arrayidx1, align 4, !dbg !10050
  %4 = load float, float* %f.addr, align 4, !dbg !10051
  %mul = fmul float %3, %4, !dbg !10052
  %add = fadd float %1, %mul, !dbg !10053
  %5 = load float*, float** %r.addr, align 8, !dbg !10054
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !10054
  store float %add, float* %arrayidx2, align 4, !dbg !10055
  %6 = load float*, float** %a.addr, align 8, !dbg !10056
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !10056
  %7 = load float, float* %arrayidx3, align 4, !dbg !10056
  %8 = load float*, float** %b.addr, align 8, !dbg !10057
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !10057
  %9 = load float, float* %arrayidx4, align 4, !dbg !10057
  %10 = load float, float* %f.addr, align 4, !dbg !10058
  %mul5 = fmul float %9, %10, !dbg !10059
  %add6 = fadd float %7, %mul5, !dbg !10060
  %11 = load float*, float** %r.addr, align 8, !dbg !10061
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !10061
  store float %add6, float* %arrayidx7, align 4, !dbg !10062
  %12 = load float*, float** %a.addr, align 8, !dbg !10063
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !10063
  %13 = load float, float* %arrayidx8, align 4, !dbg !10063
  %14 = load float*, float** %b.addr, align 8, !dbg !10064
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 2, !dbg !10064
  %15 = load float, float* %arrayidx9, align 4, !dbg !10064
  %16 = load float, float* %f.addr, align 4, !dbg !10065
  %mul10 = fmul float %15, %16, !dbg !10066
  %add11 = fadd float %13, %mul10, !dbg !10067
  %17 = load float*, float** %r.addr, align 8, !dbg !10068
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 2, !dbg !10068
  store float %add11, float* %arrayidx12, align 4, !dbg !10069
  ret void, !dbg !10070
}

declare dso_local i8* @BLI_edgehash_lookup(%struct.EdgeHash*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.ParticleSpring* @sph_spring_add(%struct.ParticleSystem* %psys, %struct.ParticleSpring* %spring) #0 !dbg !10071 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %spring.addr = alloca %struct.ParticleSpring*, align 8
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !10074, metadata !DIExpression()), !dbg !10075
  store %struct.ParticleSpring* %spring, %struct.ParticleSpring** %spring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSpring** %spring.addr, metadata !10076, metadata !DIExpression()), !dbg !10077
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10078
  %alloc_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 45, !dbg !10080
  %1 = load i32, i32* %alloc_fluidsprings, align 4, !dbg !10080
  %cmp = icmp eq i32 %1, 0, !dbg !10081
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10082

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10083
  %fluid_springs = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 43, !dbg !10084
  %3 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs, align 8, !dbg !10084
  %cmp1 = icmp eq %struct.ParticleSpring* %3, null, !dbg !10085
  br i1 %cmp1, label %if.then, label %if.else, !dbg !10086

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10087
  %alloc_fluidsprings2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %4, i32 0, i32 45, !dbg !10089
  store i32 256, i32* %alloc_fluidsprings2, align 4, !dbg !10090
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10091
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10092
  %alloc_fluidsprings3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 45, !dbg !10093
  %7 = load i32, i32* %alloc_fluidsprings3, align 4, !dbg !10093
  %conv = sext i32 %7 to i64, !dbg !10092
  %mul = mul i64 %conv, 16, !dbg !10094
  %call = call i8* %5(i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)), !dbg !10091
  %8 = bitcast i8* %call to %struct.ParticleSpring*, !dbg !10095
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10096
  %fluid_springs4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 43, !dbg !10097
  store %struct.ParticleSpring* %8, %struct.ParticleSpring** %fluid_springs4, align 8, !dbg !10098
  br label %if.end17, !dbg !10099

if.else:                                          ; preds = %lor.lhs.false
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10100
  %tot_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 44, !dbg !10102
  %11 = load i32, i32* %tot_fluidsprings, align 8, !dbg !10102
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10103
  %alloc_fluidsprings5 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %12, i32 0, i32 45, !dbg !10104
  %13 = load i32, i32* %alloc_fluidsprings5, align 4, !dbg !10104
  %cmp6 = icmp eq i32 %11, %13, !dbg !10105
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !10106

if.then8:                                         ; preds = %if.else
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10107
  %alloc_fluidsprings9 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 45, !dbg !10109
  %15 = load i32, i32* %alloc_fluidsprings9, align 4, !dbg !10110
  %mul10 = mul nsw i32 %15, 2, !dbg !10110
  store i32 %mul10, i32* %alloc_fluidsprings9, align 4, !dbg !10110
  %16 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !10111
  %17 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10111
  %fluid_springs11 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %17, i32 0, i32 43, !dbg !10111
  %18 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs11, align 8, !dbg !10111
  %19 = bitcast %struct.ParticleSpring* %18 to i8*, !dbg !10111
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10111
  %alloc_fluidsprings12 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 45, !dbg !10111
  %21 = load i32, i32* %alloc_fluidsprings12, align 4, !dbg !10111
  %conv13 = sext i32 %21 to i64, !dbg !10111
  %mul14 = mul i64 %conv13, 16, !dbg !10111
  %call15 = call i8* %16(i8* %19, i64 %mul14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.sph_spring_add, i64 0, i64 0)), !dbg !10111
  %22 = bitcast i8* %call15 to %struct.ParticleSpring*, !dbg !10112
  %23 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10113
  %fluid_springs16 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %23, i32 0, i32 43, !dbg !10114
  store %struct.ParticleSpring* %22, %struct.ParticleSpring** %fluid_springs16, align 8, !dbg !10115
  br label %if.end, !dbg !10116

if.end:                                           ; preds = %if.then8, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10117
  %fluid_springs18 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %24, i32 0, i32 43, !dbg !10118
  %25 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs18, align 8, !dbg !10118
  %26 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10119
  %tot_fluidsprings19 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %26, i32 0, i32 44, !dbg !10120
  %27 = load i32, i32* %tot_fluidsprings19, align 8, !dbg !10120
  %idx.ext = sext i32 %27 to i64, !dbg !10121
  %add.ptr = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %25, i64 %idx.ext, !dbg !10121
  %28 = bitcast %struct.ParticleSpring* %add.ptr to i8*, !dbg !10122
  %29 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring.addr, align 8, !dbg !10123
  %30 = bitcast %struct.ParticleSpring* %29 to i8*, !dbg !10122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %30, i64 16, i1 false), !dbg !10122
  %31 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10124
  %tot_fluidsprings20 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %31, i32 0, i32 44, !dbg !10125
  %32 = load i32, i32* %tot_fluidsprings20, align 8, !dbg !10126
  %inc = add nsw i32 %32, 1, !dbg !10126
  store i32 %inc, i32* %tot_fluidsprings20, align 8, !dbg !10126
  %33 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10127
  %fluid_springs21 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %33, i32 0, i32 43, !dbg !10128
  %34 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs21, align 8, !dbg !10128
  %35 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10129
  %tot_fluidsprings22 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %35, i32 0, i32 44, !dbg !10130
  %36 = load i32, i32* %tot_fluidsprings22, align 8, !dbg !10130
  %idx.ext23 = sext i32 %36 to i64, !dbg !10131
  %add.ptr24 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %34, i64 %idx.ext23, !dbg !10131
  %add.ptr25 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %add.ptr24, i64 -1, !dbg !10132
  ret %struct.ParticleSpring* %add.ptr25, !dbg !10133
}

; Function Attrs: noinline nounwind uwtable
define internal void @sph_particle_courant(%struct.SPHData* %sphdata, %struct.SPHRangeData* %pfr) #0 !dbg !10134 {
entry:
  %sphdata.addr = alloca %struct.SPHData*, align 8
  %pfr.addr = alloca %struct.SPHRangeData*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %npa = alloca %struct.ParticleData*, align 8
  %i = alloca i32, align 4
  %flow = alloca [3 x float], align 4
  %offset = alloca [3 x float], align 4
  %dist = alloca float, align 4
  store %struct.SPHData* %sphdata, %struct.SPHData** %sphdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SPHData** %sphdata.addr, metadata !10137, metadata !DIExpression()), !dbg !10138
  store %struct.SPHRangeData* %pfr, %struct.SPHRangeData** %pfr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SPHRangeData** %pfr.addr, metadata !10139, metadata !DIExpression()), !dbg !10140
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !10141, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %npa, metadata !10143, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10145, metadata !DIExpression()), !dbg !10146
  call void @llvm.dbg.declare(metadata [3 x float]* %flow, metadata !10147, metadata !DIExpression()), !dbg !10148
  call void @llvm.dbg.declare(metadata [3 x float]* %offset, metadata !10149, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.declare(metadata float* %dist, metadata !10151, metadata !DIExpression()), !dbg !10152
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %flow, i64 0, i64 0, !dbg !10153
  call void @zero_v3(float* %arraydecay), !dbg !10154
  store float 0.000000e+00, float* %dist, align 4, !dbg !10155
  %0 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !10156
  %tot_neighbors = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %0, i32 0, i32 1, !dbg !10158
  %1 = load i32, i32* %tot_neighbors, align 8, !dbg !10158
  %cmp = icmp sgt i32 %1, 0, !dbg !10159
  br i1 %cmp, label %if.then, label %if.else, !dbg !10160

if.then:                                          ; preds = %entry
  %2 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !10161
  %pa1 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %2, i32 0, i32 4, !dbg !10163
  %3 = load %struct.ParticleData*, %struct.ParticleData** %pa1, align 8, !dbg !10163
  store %struct.ParticleData* %3, %struct.ParticleData** %pa, align 8, !dbg !10164
  store i32 0, i32* %i, align 4, !dbg !10165
  br label %for.cond, !dbg !10167

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !10168
  %5 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !10170
  %tot_neighbors2 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %5, i32 0, i32 1, !dbg !10171
  %6 = load i32, i32* %tot_neighbors2, align 8, !dbg !10171
  %cmp3 = icmp slt i32 %4, %6, !dbg !10172
  br i1 %cmp3, label %for.body, label %for.end, !dbg !10173

for.body:                                         ; preds = %for.cond
  %7 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !10174
  %neighbors = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %7, i32 0, i32 0, !dbg !10176
  %8 = load i32, i32* %i, align 4, !dbg !10177
  %idxprom = sext i32 %8 to i64, !dbg !10174
  %arrayidx = getelementptr inbounds [512 x %struct.SPHNeighbor], [512 x %struct.SPHNeighbor]* %neighbors, i64 0, i64 %idxprom, !dbg !10174
  %psys = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %arrayidx, i32 0, i32 0, !dbg !10178
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10178
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 3, !dbg !10179
  %10 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !10179
  %11 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !10180
  %neighbors4 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %11, i32 0, i32 0, !dbg !10181
  %12 = load i32, i32* %i, align 4, !dbg !10182
  %idxprom5 = sext i32 %12 to i64, !dbg !10180
  %arrayidx6 = getelementptr inbounds [512 x %struct.SPHNeighbor], [512 x %struct.SPHNeighbor]* %neighbors4, i64 0, i64 %idxprom5, !dbg !10180
  %index = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %arrayidx6, i32 0, i32 1, !dbg !10183
  %13 = load i32, i32* %index, align 8, !dbg !10183
  %idx.ext = sext i32 %13 to i64, !dbg !10184
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %10, i64 %idx.ext, !dbg !10184
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %npa, align 8, !dbg !10185
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !10186
  %14 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !10187
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %14, i32 0, i32 1, !dbg !10188
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 0, !dbg !10189
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10187
  %15 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !10190
  %prev_state9 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %15, i32 0, i32 1, !dbg !10191
  %co10 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state9, i32 0, i32 0, !dbg !10192
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %co10, i64 0, i64 0, !dbg !10190
  call void @sub_v3_v3v3(float* %arraydecay7, float* %arraydecay8, float* %arraydecay11), !dbg !10193
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %offset, i64 0, i64 0, !dbg !10194
  %call = call float @len_v3(float* %arraydecay12), !dbg !10195
  %16 = load float, float* %dist, align 4, !dbg !10196
  %add = fadd float %16, %call, !dbg !10196
  store float %add, float* %dist, align 4, !dbg !10196
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %flow, i64 0, i64 0, !dbg !10197
  %17 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !10198
  %prev_state14 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %17, i32 0, i32 1, !dbg !10199
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state14, i32 0, i32 1, !dbg !10200
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !10198
  call void @add_v3_v3(float* %arraydecay13, float* %arraydecay15), !dbg !10201
  br label %for.inc, !dbg !10202

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !10203
  %inc = add nsw i32 %18, 1, !dbg !10203
  store i32 %inc, i32* %i, align 4, !dbg !10203
  br label %for.cond, !dbg !10204, !llvm.loop !10205

for.end:                                          ; preds = %for.cond
  %19 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !10207
  %psys16 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %19, i32 0, i32 0, !dbg !10208
  %arrayidx17 = getelementptr inbounds [10 x %struct.ParticleSystem*], [10 x %struct.ParticleSystem*]* %psys16, i64 0, i64 0, !dbg !10207
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx17, align 8, !dbg !10207
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 2, !dbg !10209
  %21 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !10209
  %fluid = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %21, i32 0, i32 3, !dbg !10210
  %22 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10210
  %radius = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %22, i32 0, i32 0, !dbg !10211
  %23 = load float, float* %radius, align 4, !dbg !10211
  %24 = load float, float* %dist, align 4, !dbg !10212
  %add18 = fadd float %24, %23, !dbg !10212
  store float %add18, float* %dist, align 4, !dbg !10212
  %25 = load float, float* %dist, align 4, !dbg !10213
  %26 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !10214
  %tot_neighbors19 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %26, i32 0, i32 1, !dbg !10215
  %27 = load i32, i32* %tot_neighbors19, align 8, !dbg !10215
  %conv = sitofp i32 %27 to float, !dbg !10214
  %div = fdiv float %25, %conv, !dbg !10216
  %28 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !10217
  %element_size = getelementptr inbounds %struct.SPHData, %struct.SPHData* %28, i32 0, i32 7, !dbg !10218
  store float %div, float* %element_size, align 8, !dbg !10219
  %29 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !10220
  %flow20 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %29, i32 0, i32 8, !dbg !10221
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %flow20, i64 0, i64 0, !dbg !10220
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %flow, i64 0, i64 0, !dbg !10222
  %30 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr.addr, align 8, !dbg !10223
  %tot_neighbors23 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %30, i32 0, i32 1, !dbg !10224
  %31 = load i32, i32* %tot_neighbors23, align 8, !dbg !10224
  %conv24 = sitofp i32 %31 to float, !dbg !10223
  %div25 = fdiv float 1.000000e+00, %conv24, !dbg !10225
  call void @mul_v3_v3fl(float* %arraydecay21, float* %arraydecay22, float %div25), !dbg !10226
  br label %if.end, !dbg !10227

if.else:                                          ; preds = %entry
  %32 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !10228
  %element_size26 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %32, i32 0, i32 7, !dbg !10230
  store float 0x47EFFFFFE0000000, float* %element_size26, align 8, !dbg !10231
  %33 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !10232
  %flow27 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %33, i32 0, i32 8, !dbg !10233
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %flow27, i64 0, i64 0, !dbg !10232
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %flow, i64 0, i64 0, !dbg !10234
  call void @copy_v3_v3(float* %arraydecay28, float* %arraydecay29), !dbg !10235
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  ret void, !dbg !10236
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !10237 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10240, metadata !DIExpression()), !dbg !10241
  %0 = load float*, float** %a.addr, align 8, !dbg !10242
  %1 = load float*, float** %a.addr, align 8, !dbg !10243
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !10244
  %call1 = call float @sqrtf(float %call) #5, !dbg !10245
  ret float %call1, !dbg !10246
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !10247 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10248, metadata !DIExpression()), !dbg !10249
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10250, metadata !DIExpression()), !dbg !10251
  %0 = load float*, float** %a.addr, align 8, !dbg !10252
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10252
  %1 = load float, float* %arrayidx, align 4, !dbg !10252
  %2 = load float*, float** %r.addr, align 8, !dbg !10253
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10253
  %3 = load float, float* %arrayidx1, align 4, !dbg !10254
  %add = fadd float %3, %1, !dbg !10254
  store float %add, float* %arrayidx1, align 4, !dbg !10254
  %4 = load float*, float** %a.addr, align 8, !dbg !10255
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !10255
  %5 = load float, float* %arrayidx2, align 4, !dbg !10255
  %6 = load float*, float** %r.addr, align 8, !dbg !10256
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !10256
  %7 = load float, float* %arrayidx3, align 4, !dbg !10257
  %add4 = fadd float %7, %5, !dbg !10257
  store float %add4, float* %arrayidx3, align 4, !dbg !10257
  %8 = load float*, float** %a.addr, align 8, !dbg !10258
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !10258
  %9 = load float, float* %arrayidx5, align 4, !dbg !10258
  %10 = load float*, float** %r.addr, align 8, !dbg !10259
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !10259
  %11 = load float, float* %arrayidx6, align 4, !dbg !10260
  %add7 = fadd float %11, %9, !dbg !10260
  store float %add7, float* %arrayidx6, align 4, !dbg !10260
  ret void, !dbg !10261
}

; Function Attrs: noinline nounwind uwtable
define internal float @pow2(float %x) #0 !dbg !10262 {
entry:
  %x.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !10265, metadata !DIExpression()), !dbg !10266
  %0 = load float, float* %x.addr, align 4, !dbg !10267
  %1 = load float, float* %x.addr, align 4, !dbg !10268
  %mul = fmul float %0, %1, !dbg !10269
  ret float %mul, !dbg !10270
}

; Function Attrs: noinline nounwind uwtable
define internal void @sphclassical_neighbour_accum_cb(i8* %userdata, i32 %index, float %UNUSED_squared_dist) #0 !dbg !10271 {
entry:
  %userdata.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %UNUSED_squared_dist.addr = alloca float, align 4
  %pfr = alloca %struct.SPHRangeData*, align 8
  %npa = alloca %struct.ParticleData*, align 8
  %rij = alloca float, align 4
  %rij_h = alloca float, align 4
  %vec = alloca [3 x float], align 4
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !10272, metadata !DIExpression()), !dbg !10273
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !10274, metadata !DIExpression()), !dbg !10275
  store float %UNUSED_squared_dist, float* %UNUSED_squared_dist.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_squared_dist.addr, metadata !10276, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.declare(metadata %struct.SPHRangeData** %pfr, metadata !10278, metadata !DIExpression()), !dbg !10279
  %0 = load i8*, i8** %userdata.addr, align 8, !dbg !10280
  %1 = bitcast i8* %0 to %struct.SPHRangeData*, !dbg !10281
  store %struct.SPHRangeData* %1, %struct.SPHRangeData** %pfr, align 8, !dbg !10279
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %npa, metadata !10282, metadata !DIExpression()), !dbg !10283
  %2 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !10284
  %npsys = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %2, i32 0, i32 3, !dbg !10285
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %npsys, align 8, !dbg !10285
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 3, !dbg !10286
  %4 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !10286
  %5 = load i32, i32* %index.addr, align 4, !dbg !10287
  %idx.ext = sext i32 %5 to i64, !dbg !10288
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %4, i64 %idx.ext, !dbg !10288
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %npa, align 8, !dbg !10283
  call void @llvm.dbg.declare(metadata float* %rij, metadata !10289, metadata !DIExpression()), !dbg !10290
  call void @llvm.dbg.declare(metadata float* %rij_h, metadata !10291, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !10293, metadata !DIExpression()), !dbg !10294
  %6 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !10295
  %tot_neighbors = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %6, i32 0, i32 1, !dbg !10297
  %7 = load i32, i32* %tot_neighbors, align 8, !dbg !10297
  %cmp = icmp sge i32 %7, 512, !dbg !10298
  br i1 %cmp, label %if.then, label %if.end, !dbg !10299

if.then:                                          ; preds = %entry
  br label %return, !dbg !10300

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !10301
  %8 = load %struct.ParticleData*, %struct.ParticleData** %npa, align 8, !dbg !10302
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %8, i32 0, i32 0, !dbg !10303
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !10304
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10302
  %9 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !10305
  %pa = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %9, i32 0, i32 4, !dbg !10306
  %10 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !10306
  %state2 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %10, i32 0, i32 0, !dbg !10307
  %co3 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state2, i32 0, i32 0, !dbg !10308
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %co3, i64 0, i64 0, !dbg !10305
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay4), !dbg !10309
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !10310
  %call = call float @len_v3(float* %arraydecay5), !dbg !10311
  store float %call, float* %rij, align 4, !dbg !10312
  %11 = load float, float* %rij, align 4, !dbg !10313
  %12 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !10314
  %h = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %12, i32 0, i32 5, !dbg !10315
  %13 = load float, float* %h, align 8, !dbg !10315
  %div = fdiv float %11, %13, !dbg !10316
  store float %div, float* %rij_h, align 4, !dbg !10317
  %14 = load float, float* %rij_h, align 4, !dbg !10318
  %cmp6 = fcmp ogt float %14, 2.000000e+00, !dbg !10320
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10321

if.then7:                                         ; preds = %if.end
  br label %return, !dbg !10322

if.end8:                                          ; preds = %if.end
  %15 = load i32, i32* %index.addr, align 4, !dbg !10323
  %16 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !10324
  %neighbors = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %16, i32 0, i32 0, !dbg !10325
  %17 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !10326
  %tot_neighbors9 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %17, i32 0, i32 1, !dbg !10327
  %18 = load i32, i32* %tot_neighbors9, align 8, !dbg !10327
  %idxprom = sext i32 %18 to i64, !dbg !10324
  %arrayidx = getelementptr inbounds [512 x %struct.SPHNeighbor], [512 x %struct.SPHNeighbor]* %neighbors, i64 0, i64 %idxprom, !dbg !10324
  %index10 = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %arrayidx, i32 0, i32 1, !dbg !10328
  store i32 %15, i32* %index10, align 8, !dbg !10329
  %19 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !10330
  %npsys11 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %19, i32 0, i32 3, !dbg !10331
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %npsys11, align 8, !dbg !10331
  %21 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !10332
  %neighbors12 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %21, i32 0, i32 0, !dbg !10333
  %22 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !10334
  %tot_neighbors13 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %22, i32 0, i32 1, !dbg !10335
  %23 = load i32, i32* %tot_neighbors13, align 8, !dbg !10335
  %idxprom14 = sext i32 %23 to i64, !dbg !10332
  %arrayidx15 = getelementptr inbounds [512 x %struct.SPHNeighbor], [512 x %struct.SPHNeighbor]* %neighbors12, i64 0, i64 %idxprom14, !dbg !10332
  %psys = getelementptr inbounds %struct.SPHNeighbor, %struct.SPHNeighbor* %arrayidx15, i32 0, i32 0, !dbg !10336
  store %struct.ParticleSystem* %20, %struct.ParticleSystem** %psys, align 8, !dbg !10337
  %24 = load %struct.SPHRangeData*, %struct.SPHRangeData** %pfr, align 8, !dbg !10338
  %tot_neighbors16 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %24, i32 0, i32 1, !dbg !10339
  %25 = load i32, i32* %tot_neighbors16, align 8, !dbg !10340
  %inc = add nsw i32 %25, 1, !dbg !10340
  store i32 %inc, i32* %tot_neighbors16, align 8, !dbg !10340
  br label %return, !dbg !10341

return:                                           ; preds = %if.end8, %if.then7, %if.then
  ret void, !dbg !10341
}

; Function Attrs: noinline nounwind uwtable
define internal float @pow7(float %x) #0 !dbg !10342 {
entry:
  %x.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !10343, metadata !DIExpression()), !dbg !10344
  %0 = load float, float* %x.addr, align 4, !dbg !10345
  %call = call float @pow3(float %0), !dbg !10346
  %call1 = call float @pow2(float %call), !dbg !10347
  %1 = load float, float* %x.addr, align 4, !dbg !10348
  %mul = fmul float %call1, %1, !dbg !10349
  ret float %mul, !dbg !10350
}

; Function Attrs: noinline nounwind uwtable
define internal float @pow3(float %x) #0 !dbg !10351 {
entry:
  %x.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !10352, metadata !DIExpression()), !dbg !10353
  %0 = load float, float* %x.addr, align 4, !dbg !10354
  %call = call float @pow2(float %0), !dbg !10355
  %1 = load float, float* %x.addr, align 4, !dbg !10356
  %mul = fmul float %call, %1, !dbg !10357
  ret float %mul, !dbg !10358
}

; Function Attrs: noinline nounwind uwtable
define internal float @pow4(float %x) #0 !dbg !10359 {
entry:
  %x.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !10360, metadata !DIExpression()), !dbg !10361
  %0 = load float, float* %x.addr, align 4, !dbg !10362
  %call = call float @pow2(float %0), !dbg !10363
  %call1 = call float @pow2(float %call), !dbg !10364
  ret float %call1, !dbg !10365
}

declare dso_local i32 @BLI_bvhtree_range_query(%struct.BVHTree*, float*, float, void (i8*, i32, float)*, i8*) #2

declare dso_local void @BLI_rw_mutex_lock(i32*, i32) #2

declare dso_local void @BLI_rw_mutex_unlock(i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @collision_newton_rhapson(%struct.ParticleCollision* %col, float %radius, %struct.ParticleCollisionElement* %pce, float (float*, float, %struct.ParticleCollisionElement*, float*)* %distance_func) #0 !dbg !10366 {
entry:
  %retval = alloca float, align 4
  %col.addr = alloca %struct.ParticleCollision*, align 8
  %radius.addr = alloca float, align 4
  %pce.addr = alloca %struct.ParticleCollisionElement*, align 8
  %distance_func.addr = alloca float (float*, float, %struct.ParticleCollisionElement*, float*)*, align 8
  %t0 = alloca float, align 4
  %t1 = alloca float, align 4
  %dt_init = alloca float, align 4
  %d0 = alloca float, align 4
  %d1 = alloca float, align 4
  %dd = alloca float, align 4
  %n = alloca [3 x float], align 4
  %iter = alloca i32, align 4
  store %struct.ParticleCollision* %col, %struct.ParticleCollision** %col.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollision** %col.addr, metadata !10373, metadata !DIExpression()), !dbg !10374
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !10375, metadata !DIExpression()), !dbg !10376
  store %struct.ParticleCollisionElement* %pce, %struct.ParticleCollisionElement** %pce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %pce.addr, metadata !10377, metadata !DIExpression()), !dbg !10378
  store float (float*, float, %struct.ParticleCollisionElement*, float*)* %distance_func, float (float*, float, %struct.ParticleCollisionElement*, float*)** %distance_func.addr, align 8
  call void @llvm.dbg.declare(metadata float (float*, float, %struct.ParticleCollisionElement*, float*)** %distance_func.addr, metadata !10379, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.declare(metadata float* %t0, metadata !10381, metadata !DIExpression()), !dbg !10382
  call void @llvm.dbg.declare(metadata float* %t1, metadata !10383, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.declare(metadata float* %dt_init, metadata !10385, metadata !DIExpression()), !dbg !10386
  call void @llvm.dbg.declare(metadata float* %d0, metadata !10387, metadata !DIExpression()), !dbg !10388
  call void @llvm.dbg.declare(metadata float* %d1, metadata !10389, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.declare(metadata float* %dd, metadata !10391, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !10393, metadata !DIExpression()), !dbg !10394
  call void @llvm.dbg.declare(metadata i32* %iter, metadata !10395, metadata !DIExpression()), !dbg !10396
  %0 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10397
  %inv_nor = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %0, i32 0, i32 11, !dbg !10398
  store i16 -1, i16* %inv_nor, align 8, !dbg !10399
  %1 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10400
  %inv_total_time = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %1, i32 0, i32 15, !dbg !10402
  %2 = load float, float* %inv_total_time, align 4, !dbg !10402
  %cmp = fcmp ogt float %2, 0.000000e+00, !dbg !10403
  br i1 %cmp, label %if.then, label %if.else, !dbg !10404

if.then:                                          ; preds = %entry
  %3 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10405
  %inv_total_time1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %3, i32 0, i32 15, !dbg !10407
  %4 = load float, float* %inv_total_time1, align 4, !dbg !10407
  %mul = fmul float 0x3F14F8B580000000, %4, !dbg !10408
  store float %mul, float* %dt_init, align 4, !dbg !10409
  br label %if.end, !dbg !10410

if.else:                                          ; preds = %entry
  store float 0x3F50624DE0000000, float* %dt_init, align 4, !dbg !10411
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store float 0.000000e+00, float* %t0, align 4, !dbg !10413
  %5 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10414
  %6 = load float, float* %t0, align 4, !dbg !10415
  %7 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10416
  %f = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %7, i32 0, i32 6, !dbg !10417
  %8 = load float, float* %f, align 8, !dbg !10417
  %9 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10418
  call void @collision_interpolate_element(%struct.ParticleCollisionElement* %5, float %6, float %8, %struct.ParticleCollision* %9), !dbg !10419
  %10 = load float (float*, float, %struct.ParticleCollisionElement*, float*)*, float (float*, float, %struct.ParticleCollisionElement*, float*)** %distance_func.addr, align 8, !dbg !10420
  %11 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10421
  %co1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %11, i32 0, i32 18, !dbg !10422
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !10421
  %12 = load float, float* %radius.addr, align 4, !dbg !10423
  %13 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10424
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !10425
  %call = call float %10(float* %arraydecay, float %12, %struct.ParticleCollisionElement* %13, float* %arraydecay2), !dbg !10420
  store float %call, float* %d0, align 4, !dbg !10426
  %14 = load float, float* %dt_init, align 4, !dbg !10427
  store float %14, float* %t1, align 4, !dbg !10428
  store float 0.000000e+00, float* %d1, align 4, !dbg !10429
  store i32 0, i32* %iter, align 4, !dbg !10430
  br label %for.cond, !dbg !10432

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %iter, align 4, !dbg !10433
  %cmp3 = icmp slt i32 %15, 10, !dbg !10435
  br i1 %cmp3, label %for.body, label %for.end, !dbg !10436

for.body:                                         ; preds = %for.cond
  %16 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10437
  %17 = load float, float* %t1, align 4, !dbg !10439
  %18 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10440
  %f4 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %18, i32 0, i32 6, !dbg !10441
  %19 = load float, float* %f4, align 8, !dbg !10441
  %20 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10442
  call void @collision_interpolate_element(%struct.ParticleCollisionElement* %16, float %17, float %19, %struct.ParticleCollision* %20), !dbg !10443
  %21 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10444
  %p = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %21, i32 0, i32 5, !dbg !10445
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !10444
  %22 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10446
  %co16 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %22, i32 0, i32 18, !dbg !10447
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %co16, i64 0, i64 0, !dbg !10446
  %23 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10448
  %co2 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %23, i32 0, i32 19, !dbg !10449
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !10448
  %24 = load float, float* %t1, align 4, !dbg !10450
  call void @interp_v3_v3v3(float* %arraydecay5, float* %arraydecay7, float* %arraydecay8, float %24), !dbg !10451
  %25 = load float (float*, float, %struct.ParticleCollisionElement*, float*)*, float (float*, float, %struct.ParticleCollisionElement*, float*)** %distance_func.addr, align 8, !dbg !10452
  %26 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10453
  %p9 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %26, i32 0, i32 5, !dbg !10454
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %p9, i64 0, i64 0, !dbg !10453
  %27 = load float, float* %radius.addr, align 4, !dbg !10455
  %28 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10456
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !10457
  %call12 = call float %25(float* %arraydecay10, float %27, %struct.ParticleCollisionElement* %28, float* %arraydecay11), !dbg !10452
  store float %call12, float* %d1, align 4, !dbg !10458
  %29 = load i32, i32* %iter, align 4, !dbg !10459
  %cmp13 = icmp eq i32 %29, 0, !dbg !10461
  br i1 %cmp13, label %land.lhs.true, label %if.end24, !dbg !10462

land.lhs.true:                                    ; preds = %for.body
  %30 = load float, float* %d0, align 4, !dbg !10463
  %cmp14 = fcmp olt float %30, 0.000000e+00, !dbg !10464
  br i1 %cmp14, label %land.lhs.true15, label %if.end24, !dbg !10465

land.lhs.true15:                                  ; preds = %land.lhs.true
  %31 = load float, float* %d0, align 4, !dbg !10466
  %32 = load float, float* %radius.addr, align 4, !dbg !10467
  %fneg = fneg float %32, !dbg !10468
  %cmp16 = fcmp ogt float %31, %fneg, !dbg !10469
  br i1 %cmp16, label %if.then17, label %if.end24, !dbg !10470

if.then17:                                        ; preds = %land.lhs.true15
  %33 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10471
  %p18 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %33, i32 0, i32 5, !dbg !10473
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %p18, i64 0, i64 0, !dbg !10471
  %34 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10474
  %co120 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %34, i32 0, i32 18, !dbg !10475
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %co120, i64 0, i64 0, !dbg !10474
  call void @copy_v3_v3(float* %arraydecay19, float* %arraydecay21), !dbg !10476
  %35 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10477
  %nor = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %35, i32 0, i32 6, !dbg !10478
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !10477
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !10479
  call void @copy_v3_v3(float* %arraydecay22, float* %arraydecay23), !dbg !10480
  %36 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10481
  %inside = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %36, i32 0, i32 12, !dbg !10482
  store i16 1, i16* %inside, align 2, !dbg !10483
  store float 0.000000e+00, float* %retval, align 4, !dbg !10484
  br label %return, !dbg !10484

if.end24:                                         ; preds = %land.lhs.true15, %land.lhs.true, %for.body
  %37 = load float, float* %d1, align 4, !dbg !10485
  %38 = load float, float* %d0, align 4, !dbg !10487
  %cmp25 = fcmp oeq float %37, %38, !dbg !10488
  br i1 %cmp25, label %if.then26, label %if.end35, !dbg !10489

if.then26:                                        ; preds = %if.end24
  %39 = load i32, i32* %iter, align 4, !dbg !10490
  %cmp27 = icmp eq i32 %39, 0, !dbg !10493
  br i1 %cmp27, label %if.then28, label %if.else34, !dbg !10494

if.then28:                                        ; preds = %if.then26
  store float 1.000000e+00, float* %t0, align 4, !dbg !10495
  %40 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10497
  %41 = load float, float* %t0, align 4, !dbg !10498
  %42 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10499
  %f29 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %42, i32 0, i32 6, !dbg !10500
  %43 = load float, float* %f29, align 8, !dbg !10500
  %44 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10501
  call void @collision_interpolate_element(%struct.ParticleCollisionElement* %40, float %41, float %43, %struct.ParticleCollision* %44), !dbg !10502
  %45 = load float (float*, float, %struct.ParticleCollisionElement*, float*)*, float (float*, float, %struct.ParticleCollisionElement*, float*)** %distance_func.addr, align 8, !dbg !10503
  %46 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10504
  %co230 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %46, i32 0, i32 19, !dbg !10505
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %co230, i64 0, i64 0, !dbg !10504
  %47 = load float, float* %radius.addr, align 4, !dbg !10506
  %48 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10507
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !10508
  %call33 = call float %45(float* %arraydecay31, float %47, %struct.ParticleCollisionElement* %48, float* %arraydecay32), !dbg !10503
  store float %call33, float* %d0, align 4, !dbg !10509
  %49 = load float, float* %dt_init, align 4, !dbg !10510
  %sub = fsub float 1.000000e+00, %49, !dbg !10511
  store float %sub, float* %t1, align 4, !dbg !10512
  store float 0.000000e+00, float* %d1, align 4, !dbg !10513
  br label %for.inc, !dbg !10514

if.else34:                                        ; preds = %if.then26
  store float -1.000000e+00, float* %retval, align 4, !dbg !10515
  br label %return, !dbg !10515

if.end35:                                         ; preds = %if.end24
  %50 = load float, float* %t1, align 4, !dbg !10516
  %51 = load float, float* %t0, align 4, !dbg !10517
  %sub36 = fsub float %50, %51, !dbg !10518
  %52 = load float, float* %d1, align 4, !dbg !10519
  %53 = load float, float* %d0, align 4, !dbg !10520
  %sub37 = fsub float %52, %53, !dbg !10521
  %div = fdiv float %sub36, %sub37, !dbg !10522
  store float %div, float* %dd, align 4, !dbg !10523
  %54 = load float, float* %t1, align 4, !dbg !10524
  store float %54, float* %t0, align 4, !dbg !10525
  %55 = load float, float* %d1, align 4, !dbg !10526
  store float %55, float* %d0, align 4, !dbg !10527
  %56 = load float, float* %d1, align 4, !dbg !10528
  %57 = load float, float* %dd, align 4, !dbg !10529
  %mul38 = fmul float %56, %57, !dbg !10530
  %58 = load float, float* %t1, align 4, !dbg !10531
  %sub39 = fsub float %58, %mul38, !dbg !10531
  store float %sub39, float* %t1, align 4, !dbg !10531
  %59 = load i32, i32* %iter, align 4, !dbg !10532
  %cmp40 = icmp eq i32 %59, 0, !dbg !10534
  br i1 %cmp40, label %land.lhs.true41, label %if.else50, !dbg !10535

land.lhs.true41:                                  ; preds = %if.end35
  %60 = load float, float* %t1, align 4, !dbg !10536
  %cmp42 = fcmp olt float %60, 0.000000e+00, !dbg !10537
  br i1 %cmp42, label %if.then43, label %if.else50, !dbg !10538

if.then43:                                        ; preds = %land.lhs.true41
  store float 1.000000e+00, float* %t0, align 4, !dbg !10539
  %61 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10541
  %62 = load float, float* %t0, align 4, !dbg !10542
  %63 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10543
  %f44 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %63, i32 0, i32 6, !dbg !10544
  %64 = load float, float* %f44, align 8, !dbg !10544
  %65 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10545
  call void @collision_interpolate_element(%struct.ParticleCollisionElement* %61, float %62, float %64, %struct.ParticleCollision* %65), !dbg !10546
  %66 = load float (float*, float, %struct.ParticleCollisionElement*, float*)*, float (float*, float, %struct.ParticleCollisionElement*, float*)** %distance_func.addr, align 8, !dbg !10547
  %67 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10548
  %co245 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %67, i32 0, i32 19, !dbg !10549
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %co245, i64 0, i64 0, !dbg !10548
  %68 = load float, float* %radius.addr, align 4, !dbg !10550
  %69 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10551
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !10552
  %call48 = call float %66(float* %arraydecay46, float %68, %struct.ParticleCollisionElement* %69, float* %arraydecay47), !dbg !10547
  store float %call48, float* %d0, align 4, !dbg !10553
  %70 = load float, float* %dt_init, align 4, !dbg !10554
  %sub49 = fsub float 1.000000e+00, %70, !dbg !10555
  store float %sub49, float* %t1, align 4, !dbg !10556
  store float 0.000000e+00, float* %d1, align 4, !dbg !10557
  br label %for.inc, !dbg !10558

if.else50:                                        ; preds = %land.lhs.true41, %if.end35
  %71 = load i32, i32* %iter, align 4, !dbg !10559
  %cmp51 = icmp eq i32 %71, 1, !dbg !10561
  br i1 %cmp51, label %land.lhs.true52, label %if.end56, !dbg !10562

land.lhs.true52:                                  ; preds = %if.else50
  %72 = load float, float* %t1, align 4, !dbg !10563
  %cmp53 = fcmp olt float %72, 0xBEE4F8B580000000, !dbg !10564
  br i1 %cmp53, label %if.then55, label %lor.lhs.false, !dbg !10565

lor.lhs.false:                                    ; preds = %land.lhs.true52
  %73 = load float, float* %t1, align 4, !dbg !10566
  %cmp54 = fcmp ogt float %73, 1.000000e+00, !dbg !10567
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !10568

if.then55:                                        ; preds = %lor.lhs.false, %land.lhs.true52
  store float -1.000000e+00, float* %retval, align 4, !dbg !10569
  br label %return, !dbg !10569

if.end56:                                         ; preds = %lor.lhs.false, %if.else50
  br label %if.end57

if.end57:                                         ; preds = %if.end56
  %74 = load float, float* %d1, align 4, !dbg !10570
  %cmp58 = fcmp ole float %74, 0x3EE4F8B580000000, !dbg !10572
  br i1 %cmp58, label %land.lhs.true59, label %if.end80, !dbg !10573

land.lhs.true59:                                  ; preds = %if.end57
  %75 = load float, float* %d1, align 4, !dbg !10574
  %cmp60 = fcmp oge float %75, 0xBEE4F8B580000000, !dbg !10575
  br i1 %cmp60, label %if.then61, label %if.end80, !dbg !10576

if.then61:                                        ; preds = %land.lhs.true59
  %76 = load float, float* %t1, align 4, !dbg !10577
  %cmp62 = fcmp oge float %76, 0xBEE4F8B580000000, !dbg !10580
  br i1 %cmp62, label %land.lhs.true63, label %if.else79, !dbg !10581

land.lhs.true63:                                  ; preds = %if.then61
  %77 = load float, float* %t1, align 4, !dbg !10582
  %cmp64 = fcmp ole float %77, 1.000000e+00, !dbg !10583
  br i1 %cmp64, label %if.then65, label %if.else79, !dbg !10584

if.then65:                                        ; preds = %land.lhs.true63
  %78 = load float (float*, float, %struct.ParticleCollisionElement*, float*)*, float (float*, float, %struct.ParticleCollisionElement*, float*)** %distance_func.addr, align 8, !dbg !10585
  %cmp66 = icmp eq float (float*, float, %struct.ParticleCollisionElement*, float*)* %78, @nr_signed_distance_to_plane, !dbg !10588
  br i1 %cmp66, label %if.then67, label %if.end71, !dbg !10589

if.then67:                                        ; preds = %if.then65
  %79 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10590
  %nor68 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %79, i32 0, i32 6, !dbg !10591
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %nor68, i64 0, i64 0, !dbg !10590
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !10592
  call void @copy_v3_v3(float* %arraydecay69, float* %arraydecay70), !dbg !10593
  br label %if.end71, !dbg !10593

if.end71:                                         ; preds = %if.then67, %if.then65
  %80 = load float, float* %t1, align 4, !dbg !10594
  %cmp72 = fcmp olt float %80, 0.000000e+00, !dbg !10594
  br i1 %cmp72, label %if.then73, label %if.else74, !dbg !10597

if.then73:                                        ; preds = %if.end71
  store float 0.000000e+00, float* %t1, align 4, !dbg !10594
  br label %if.end78, !dbg !10594

if.else74:                                        ; preds = %if.end71
  %81 = load float, float* %t1, align 4, !dbg !10598
  %cmp75 = fcmp ogt float %81, 1.000000e+00, !dbg !10598
  br i1 %cmp75, label %if.then76, label %if.end77, !dbg !10594

if.then76:                                        ; preds = %if.else74
  store float 1.000000e+00, float* %t1, align 4, !dbg !10598
  br label %if.end77, !dbg !10598

if.end77:                                         ; preds = %if.then76, %if.else74
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then73
  %82 = load float, float* %t1, align 4, !dbg !10600
  store float %82, float* %retval, align 4, !dbg !10601
  br label %return, !dbg !10601

if.else79:                                        ; preds = %land.lhs.true63, %if.then61
  store float -1.000000e+00, float* %retval, align 4, !dbg !10602
  br label %return, !dbg !10602

if.end80:                                         ; preds = %land.lhs.true59, %if.end57
  br label %for.inc, !dbg !10603

for.inc:                                          ; preds = %if.end80, %if.then43, %if.then28
  %83 = load i32, i32* %iter, align 4, !dbg !10604
  %inc = add nsw i32 %83, 1, !dbg !10604
  store i32 %inc, i32* %iter, align 4, !dbg !10604
  br label %for.cond, !dbg !10605, !llvm.loop !10606

for.end:                                          ; preds = %for.cond
  store float -1.000000e+00, float* %retval, align 4, !dbg !10608
  br label %return, !dbg !10608

return:                                           ; preds = %for.end, %if.else79, %if.end78, %if.then55, %if.else34, %if.then17
  %84 = load float, float* %retval, align 4, !dbg !10609
  ret float %84, !dbg !10609
}

; Function Attrs: noinline nounwind uwtable
define internal float @nr_signed_distance_to_plane(float* %p, float %radius, %struct.ParticleCollisionElement* %pce, float* %nor) #0 !dbg !10610 {
entry:
  %p.addr = alloca float*, align 8
  %radius.addr = alloca float, align 4
  %pce.addr = alloca %struct.ParticleCollisionElement*, align 8
  %nor.addr = alloca float*, align 8
  %p0 = alloca [3 x float], align 4
  %e1 = alloca [3 x float], align 4
  %e2 = alloca [3 x float], align 4
  %d = alloca float, align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !10611, metadata !DIExpression()), !dbg !10612
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !10613, metadata !DIExpression()), !dbg !10614
  store %struct.ParticleCollisionElement* %pce, %struct.ParticleCollisionElement** %pce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %pce.addr, metadata !10615, metadata !DIExpression()), !dbg !10616
  store float* %nor, float** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata float** %nor.addr, metadata !10617, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.declare(metadata [3 x float]* %p0, metadata !10619, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.declare(metadata [3 x float]* %e1, metadata !10621, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.declare(metadata [3 x float]* %e2, metadata !10623, metadata !DIExpression()), !dbg !10624
  call void @llvm.dbg.declare(metadata float* %d, metadata !10625, metadata !DIExpression()), !dbg !10626
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !10627
  %0 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10628
  %x1 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %0, i32 0, i32 3, !dbg !10629
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %x1, i64 0, i64 0, !dbg !10628
  %1 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10630
  %x0 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %1, i32 0, i32 2, !dbg !10631
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %x0, i64 0, i64 0, !dbg !10630
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay2), !dbg !10632
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !10633
  %2 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10634
  %x2 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %2, i32 0, i32 4, !dbg !10635
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %x2, i64 0, i64 0, !dbg !10634
  %3 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10636
  %x05 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %3, i32 0, i32 2, !dbg !10637
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %x05, i64 0, i64 0, !dbg !10636
  call void @sub_v3_v3v3(float* %arraydecay3, float* %arraydecay4, float* %arraydecay6), !dbg !10638
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %p0, i64 0, i64 0, !dbg !10639
  %4 = load float*, float** %p.addr, align 8, !dbg !10640
  %5 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10641
  %x08 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %5, i32 0, i32 2, !dbg !10642
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %x08, i64 0, i64 0, !dbg !10641
  call void @sub_v3_v3v3(float* %arraydecay7, float* %4, float* %arraydecay9), !dbg !10643
  %6 = load float*, float** %nor.addr, align 8, !dbg !10644
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !10645
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !10646
  call void @cross_v3_v3v3(float* %6, float* %arraydecay10, float* %arraydecay11), !dbg !10647
  %7 = load float*, float** %nor.addr, align 8, !dbg !10648
  %call = call float @normalize_v3(float* %7), !dbg !10649
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %p0, i64 0, i64 0, !dbg !10650
  %8 = load float*, float** %nor.addr, align 8, !dbg !10651
  %call13 = call float @dot_v3v3(float* %arraydecay12, float* %8), !dbg !10652
  store float %call13, float* %d, align 4, !dbg !10653
  %9 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10654
  %inv_nor = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %9, i32 0, i32 11, !dbg !10656
  %10 = load i16, i16* %inv_nor, align 8, !dbg !10656
  %conv = sext i16 %10 to i32, !dbg !10654
  %cmp = icmp eq i32 %conv, -1, !dbg !10657
  br i1 %cmp, label %if.then, label %if.end20, !dbg !10658

if.then:                                          ; preds = %entry
  %11 = load float, float* %d, align 4, !dbg !10659
  %cmp15 = fcmp olt float %11, 0.000000e+00, !dbg !10662
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !10663

if.then17:                                        ; preds = %if.then
  %12 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10664
  %inv_nor18 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %12, i32 0, i32 11, !dbg !10665
  store i16 1, i16* %inv_nor18, align 8, !dbg !10666
  br label %if.end, !dbg !10664

if.else:                                          ; preds = %if.then
  %13 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10667
  %inv_nor19 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %13, i32 0, i32 11, !dbg !10668
  store i16 0, i16* %inv_nor19, align 8, !dbg !10669
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then17
  br label %if.end20, !dbg !10670

if.end20:                                         ; preds = %if.end, %entry
  %14 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10671
  %inv_nor21 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %14, i32 0, i32 11, !dbg !10673
  %15 = load i16, i16* %inv_nor21, align 8, !dbg !10673
  %conv22 = sext i16 %15 to i32, !dbg !10671
  %cmp23 = icmp eq i32 %conv22, 1, !dbg !10674
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !10675

if.then25:                                        ; preds = %if.end20
  %16 = load float*, float** %nor.addr, align 8, !dbg !10676
  call void @negate_v3(float* %16), !dbg !10678
  %17 = load float, float* %d, align 4, !dbg !10679
  %fneg = fneg float %17, !dbg !10680
  store float %fneg, float* %d, align 4, !dbg !10681
  br label %if.end26, !dbg !10682

if.end26:                                         ; preds = %if.then25, %if.end20
  %18 = load float, float* %d, align 4, !dbg !10683
  %19 = load float, float* %radius.addr, align 4, !dbg !10684
  %sub = fsub float %18, %19, !dbg !10685
  ret float %sub, !dbg !10686
}

; Function Attrs: noinline nounwind uwtable
define internal void @collision_interpolate_element(%struct.ParticleCollisionElement* %pce, float %t, float %fac, %struct.ParticleCollision* %col) #0 !dbg !10687 {
entry:
  %pce.addr = alloca %struct.ParticleCollisionElement*, align 8
  %t.addr = alloca float, align 4
  %fac.addr = alloca float, align 4
  %col.addr = alloca %struct.ParticleCollision*, align 8
  %f = alloca float, align 4
  %mul1 = alloca float, align 4
  store %struct.ParticleCollisionElement* %pce, %struct.ParticleCollisionElement** %pce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %pce.addr, metadata !10690, metadata !DIExpression()), !dbg !10691
  store float %t, float* %t.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t.addr, metadata !10692, metadata !DIExpression()), !dbg !10693
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !10694, metadata !DIExpression()), !dbg !10695
  store %struct.ParticleCollision* %col, %struct.ParticleCollision** %col.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollision** %col.addr, metadata !10696, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.declare(metadata float* %f, metadata !10698, metadata !DIExpression()), !dbg !10699
  %0 = load float, float* %fac.addr, align 4, !dbg !10700
  %1 = load float, float* %t.addr, align 4, !dbg !10701
  %2 = load float, float* %fac.addr, align 4, !dbg !10702
  %sub = fsub float 1.000000e+00, %2, !dbg !10703
  %mul = fmul float %1, %sub, !dbg !10704
  %add = fadd float %0, %mul, !dbg !10705
  store float %add, float* %f, align 4, !dbg !10699
  call void @llvm.dbg.declare(metadata float* %mul1, metadata !10706, metadata !DIExpression()), !dbg !10707
  %3 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10708
  %fac1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %3, i32 0, i32 7, !dbg !10709
  %4 = load float, float* %fac1, align 4, !dbg !10709
  %5 = load float, float* %f, align 4, !dbg !10710
  %6 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10711
  %fac2 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %6, i32 0, i32 8, !dbg !10712
  %7 = load float, float* %fac2, align 8, !dbg !10712
  %8 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !10713
  %fac12 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %8, i32 0, i32 7, !dbg !10714
  %9 = load float, float* %fac12, align 4, !dbg !10714
  %sub3 = fsub float %7, %9, !dbg !10715
  %mul4 = fmul float %5, %sub3, !dbg !10716
  %add5 = fadd float %4, %mul4, !dbg !10717
  store float %add5, float* %mul1, align 4, !dbg !10707
  %10 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10718
  %tot = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %10, i32 0, i32 9, !dbg !10720
  %11 = load i32, i32* %tot, align 8, !dbg !10720
  %cmp = icmp sgt i32 %11, 0, !dbg !10721
  br i1 %cmp, label %if.then, label %if.end24, !dbg !10722

if.then:                                          ; preds = %entry
  %12 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10723
  %x0 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %12, i32 0, i32 2, !dbg !10725
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %x0, i64 0, i64 0, !dbg !10723
  %13 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10726
  %x = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %13, i32 0, i32 0, !dbg !10727
  %arrayidx = getelementptr inbounds [4 x float*], [4 x float*]* %x, i64 0, i64 0, !dbg !10726
  %14 = load float*, float** %arrayidx, align 8, !dbg !10726
  %15 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10728
  %v = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %15, i32 0, i32 1, !dbg !10729
  %arrayidx6 = getelementptr inbounds [4 x float*], [4 x float*]* %v, i64 0, i64 0, !dbg !10728
  %16 = load float*, float** %arrayidx6, align 8, !dbg !10728
  %17 = load float, float* %mul1, align 4, !dbg !10730
  call void @madd_v3_v3v3fl(float* %arraydecay, float* %14, float* %16, float %17), !dbg !10731
  %18 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10732
  %tot7 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %18, i32 0, i32 9, !dbg !10734
  %19 = load i32, i32* %tot7, align 8, !dbg !10734
  %cmp8 = icmp sgt i32 %19, 1, !dbg !10735
  br i1 %cmp8, label %if.then9, label %if.end23, !dbg !10736

if.then9:                                         ; preds = %if.then
  %20 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10737
  %x1 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %20, i32 0, i32 3, !dbg !10739
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %x1, i64 0, i64 0, !dbg !10737
  %21 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10740
  %x11 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %21, i32 0, i32 0, !dbg !10741
  %arrayidx12 = getelementptr inbounds [4 x float*], [4 x float*]* %x11, i64 0, i64 1, !dbg !10740
  %22 = load float*, float** %arrayidx12, align 8, !dbg !10740
  %23 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10742
  %v13 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %23, i32 0, i32 1, !dbg !10743
  %arrayidx14 = getelementptr inbounds [4 x float*], [4 x float*]* %v13, i64 0, i64 1, !dbg !10742
  %24 = load float*, float** %arrayidx14, align 8, !dbg !10742
  %25 = load float, float* %mul1, align 4, !dbg !10744
  call void @madd_v3_v3v3fl(float* %arraydecay10, float* %22, float* %24, float %25), !dbg !10745
  %26 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10746
  %tot15 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %26, i32 0, i32 9, !dbg !10748
  %27 = load i32, i32* %tot15, align 8, !dbg !10748
  %cmp16 = icmp sgt i32 %27, 2, !dbg !10749
  br i1 %cmp16, label %if.then17, label %if.end, !dbg !10750

if.then17:                                        ; preds = %if.then9
  %28 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10751
  %x2 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %28, i32 0, i32 4, !dbg !10752
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %x2, i64 0, i64 0, !dbg !10751
  %29 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10753
  %x19 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %29, i32 0, i32 0, !dbg !10754
  %arrayidx20 = getelementptr inbounds [4 x float*], [4 x float*]* %x19, i64 0, i64 2, !dbg !10753
  %30 = load float*, float** %arrayidx20, align 8, !dbg !10753
  %31 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10755
  %v21 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %31, i32 0, i32 1, !dbg !10756
  %arrayidx22 = getelementptr inbounds [4 x float*], [4 x float*]* %v21, i64 0, i64 2, !dbg !10755
  %32 = load float*, float** %arrayidx22, align 8, !dbg !10755
  %33 = load float, float* %mul1, align 4, !dbg !10757
  call void @madd_v3_v3v3fl(float* %arraydecay18, float* %30, float* %32, float %33), !dbg !10758
  br label %if.end, !dbg !10758

if.end:                                           ; preds = %if.then17, %if.then9
  br label %if.end23, !dbg !10759

if.end23:                                         ; preds = %if.end, %if.then
  br label %if.end24, !dbg !10760

if.end24:                                         ; preds = %if.end23, %entry
  ret void, !dbg !10761
}

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal float @nr_distance_to_edge(float* %p, float %radius, %struct.ParticleCollisionElement* %pce, float* %UNUSED_nor) #0 !dbg !10762 {
entry:
  %p.addr = alloca float*, align 8
  %radius.addr = alloca float, align 4
  %pce.addr = alloca %struct.ParticleCollisionElement*, align 8
  %UNUSED_nor.addr = alloca float*, align 8
  %v0 = alloca [3 x float], align 4
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %c = alloca [3 x float], align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !10763, metadata !DIExpression()), !dbg !10764
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !10765, metadata !DIExpression()), !dbg !10766
  store %struct.ParticleCollisionElement* %pce, %struct.ParticleCollisionElement** %pce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %pce.addr, metadata !10767, metadata !DIExpression()), !dbg !10768
  store float* %UNUSED_nor, float** %UNUSED_nor.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_nor.addr, metadata !10769, metadata !DIExpression()), !dbg !10770
  call void @llvm.dbg.declare(metadata [3 x float]* %v0, metadata !10771, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !10773, metadata !DIExpression()), !dbg !10774
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !10775, metadata !DIExpression()), !dbg !10776
  call void @llvm.dbg.declare(metadata [3 x float]* %c, metadata !10777, metadata !DIExpression()), !dbg !10778
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !10779
  %0 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10780
  %x1 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %0, i32 0, i32 3, !dbg !10781
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %x1, i64 0, i64 0, !dbg !10780
  %1 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10782
  %x0 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %1, i32 0, i32 2, !dbg !10783
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %x0, i64 0, i64 0, !dbg !10782
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay2), !dbg !10784
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !10785
  %2 = load float*, float** %p.addr, align 8, !dbg !10786
  %3 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10787
  %x04 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %3, i32 0, i32 2, !dbg !10788
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %x04, i64 0, i64 0, !dbg !10787
  call void @sub_v3_v3v3(float* %arraydecay3, float* %2, float* %arraydecay5), !dbg !10789
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !10790
  %4 = load float*, float** %p.addr, align 8, !dbg !10791
  %5 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10792
  %x17 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %5, i32 0, i32 3, !dbg !10793
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %x17, i64 0, i64 0, !dbg !10792
  call void @sub_v3_v3v3(float* %arraydecay6, float* %4, float* %arraydecay8), !dbg !10794
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !10795
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !10796
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !10797
  call void @cross_v3_v3v3(float* %arraydecay9, float* %arraydecay10, float* %arraydecay11), !dbg !10798
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !10799
  %call = call float @len_v3(float* %arraydecay12), !dbg !10800
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !10801
  %call14 = call float @len_v3(float* %arraydecay13), !dbg !10802
  %div = fdiv float %call, %call14, !dbg !10803
  %6 = call float @llvm.fabs.f32(float %div), !dbg !10804
  %7 = load float, float* %radius.addr, align 4, !dbg !10805
  %sub = fsub float %6, %7, !dbg !10806
  ret float %sub, !dbg !10807
}

; Function Attrs: noinline nounwind uwtable
define internal float @nr_distance_to_vert(float* %p, float %radius, %struct.ParticleCollisionElement* %pce, float* %UNUSED_nor) #0 !dbg !10808 {
entry:
  %p.addr = alloca float*, align 8
  %radius.addr = alloca float, align 4
  %pce.addr = alloca %struct.ParticleCollisionElement*, align 8
  %UNUSED_nor.addr = alloca float*, align 8
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !10809, metadata !DIExpression()), !dbg !10810
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !10811, metadata !DIExpression()), !dbg !10812
  store %struct.ParticleCollisionElement* %pce, %struct.ParticleCollisionElement** %pce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %pce.addr, metadata !10813, metadata !DIExpression()), !dbg !10814
  store float* %UNUSED_nor, float** %UNUSED_nor.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_nor.addr, metadata !10815, metadata !DIExpression()), !dbg !10816
  %0 = load float*, float** %p.addr, align 8, !dbg !10817
  %1 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !10818
  %x0 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %1, i32 0, i32 2, !dbg !10819
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %x0, i64 0, i64 0, !dbg !10818
  %call = call float @len_v3v3(float* %0, float* %arraydecay), !dbg !10820
  %2 = load float, float* %radius.addr, align 4, !dbg !10821
  %sub = fsub float %call, %2, !dbg !10822
  ret float %sub, !dbg !10823
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !10824 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10825, metadata !DIExpression()), !dbg !10826
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !10827, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !10829, metadata !DIExpression()), !dbg !10830
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !10831
  %0 = load float*, float** %b.addr, align 8, !dbg !10832
  %1 = load float*, float** %a.addr, align 8, !dbg !10833
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !10834
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !10835
  %call = call float @len_v3(float* %arraydecay1), !dbg !10836
  ret float %call, !dbg !10837
}

declare dso_local void @boid_default_settings(%struct.BoidSettings*) #2

declare dso_local %struct.BoidState* @boid_new_state(%struct.BoidSettings*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

declare dso_local %struct.BoidRule* @boid_new_rule(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @fluid_default_settings(%struct.ParticleSettings* %part) #0 !dbg !10838 {
entry:
  %part.addr = alloca %struct.ParticleSettings*, align 8
  %fluid = alloca %struct.SPHFluidSettings*, align 8
  store %struct.ParticleSettings* %part, %struct.ParticleSettings** %part.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part.addr, metadata !10841, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.declare(metadata %struct.SPHFluidSettings** %fluid, metadata !10843, metadata !DIExpression()), !dbg !10844
  %0 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !10845
  %fluid1 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %0, i32 0, i32 3, !dbg !10846
  %1 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid1, align 8, !dbg !10846
  store %struct.SPHFluidSettings* %1, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10844
  %2 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10847
  %spring_k = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %2, i32 0, i32 1, !dbg !10848
  store float 0.000000e+00, float* %spring_k, align 4, !dbg !10849
  %3 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10850
  %plasticity_constant = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %3, i32 0, i32 3, !dbg !10851
  store float 0x3FB99999A0000000, float* %plasticity_constant, align 4, !dbg !10852
  %4 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10853
  %yield_ratio = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %4, i32 0, i32 4, !dbg !10854
  store float 0x3FB99999A0000000, float* %yield_ratio, align 4, !dbg !10855
  %5 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10856
  %rest_length = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %5, i32 0, i32 2, !dbg !10857
  store float 1.000000e+00, float* %rest_length, align 4, !dbg !10858
  %6 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10859
  %viscosity_omega = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %6, i32 0, i32 7, !dbg !10860
  store float 2.000000e+00, float* %viscosity_omega, align 4, !dbg !10861
  %7 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10862
  %viscosity_beta = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %7, i32 0, i32 8, !dbg !10863
  store float 0x3FB99999A0000000, float* %viscosity_beta, align 4, !dbg !10864
  %8 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10865
  %stiffness_k = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %8, i32 0, i32 9, !dbg !10866
  store float 1.000000e+00, float* %stiffness_k, align 4, !dbg !10867
  %9 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10868
  %stiffness_knear = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %9, i32 0, i32 10, !dbg !10869
  store float 1.000000e+00, float* %stiffness_knear, align 4, !dbg !10870
  %10 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10871
  %rest_density = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %10, i32 0, i32 11, !dbg !10872
  store float 1.000000e+00, float* %rest_density, align 4, !dbg !10873
  %11 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10874
  %buoyancy = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %11, i32 0, i32 12, !dbg !10875
  store float 0.000000e+00, float* %buoyancy, align 4, !dbg !10876
  %12 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10877
  %radius = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %12, i32 0, i32 0, !dbg !10878
  store float 1.000000e+00, float* %radius, align 4, !dbg !10879
  %13 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !10880
  %flag = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %13, i32 0, i32 13, !dbg !10881
  %14 = load i32, i32* %flag, align 4, !dbg !10882
  %or = or i32 %14, 124, !dbg !10882
  store i32 %or, i32* %flag, align 4, !dbg !10882
  ret void, !dbg !10883
}

; Function Attrs: noinline nounwind uwtable
define internal void @psys_clear_temp_pointcache(%struct.ParticleSystem* %psys) #0 !dbg !10884 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !10885, metadata !DIExpression()), !dbg !10886
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10887
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 40, !dbg !10889
  %1 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !10889
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %1, i32 0, i32 2, !dbg !10890
  %2 = load i32, i32* %flag, align 8, !dbg !10890
  %and = and i32 %2, 64, !dbg !10891
  %tobool = icmp ne i32 %and, 0, !dbg !10891
  br i1 %tobool, label %if.then, label %if.end, !dbg !10892

if.then:                                          ; preds = %entry
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !10893
  %pointcache1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 40, !dbg !10894
  %4 = load %struct.PointCache*, %struct.PointCache** %pointcache1, align 8, !dbg !10894
  %mem_cache = getelementptr inbounds %struct.PointCache, %struct.PointCache* %4, i32 0, i32 20, !dbg !10895
  call void @BKE_ptcache_free_mem(%struct.ListBase* %mem_cache), !dbg !10896
  br label %if.end, !dbg !10896

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10897
}

declare dso_local void @BKE_ptcache_id_time(%struct.PTCacheID*, %struct.Scene*, float, i32*, i32*, float*) #2

declare dso_local i32 @BKE_ptcache_id_reset(%struct.Scene*, %struct.PTCacheID*, i32) #2

declare dso_local void @BKE_ptcache_validate(%struct.PointCache*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @reset_all_particles(%struct.ParticleSimulationData* %sim, float %dtime, float %cfra, i32 %from) #0 !dbg !10898 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %dtime.addr = alloca float, align 4
  %cfra.addr = alloca float, align 4
  %from.addr = alloca i32, align 4
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %totpart = alloca i32, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !10901, metadata !DIExpression()), !dbg !10902
  store float %dtime, float* %dtime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dtime.addr, metadata !10903, metadata !DIExpression()), !dbg !10904
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !10905, metadata !DIExpression()), !dbg !10906
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !10907, metadata !DIExpression()), !dbg !10908
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !10909, metadata !DIExpression()), !dbg !10910
  call void @llvm.dbg.declare(metadata i32* %p, metadata !10911, metadata !DIExpression()), !dbg !10912
  call void @llvm.dbg.declare(metadata i32* %totpart, metadata !10913, metadata !DIExpression()), !dbg !10914
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !10915
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !10916
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10916
  %totpart1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 26, !dbg !10917
  %2 = load i32, i32* %totpart1, align 8, !dbg !10917
  store i32 %2, i32* %totpart, align 4, !dbg !10914
  %3 = load i32, i32* %from.addr, align 4, !dbg !10918
  store i32 %3, i32* %p, align 4, !dbg !10920
  %4 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !10921
  %psys2 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %4, i32 0, i32 2, !dbg !10922
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys2, align 8, !dbg !10922
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 3, !dbg !10923
  %6 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !10923
  %7 = load i32, i32* %from.addr, align 4, !dbg !10924
  %idx.ext = sext i32 %7 to i64, !dbg !10925
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %6, i64 %idx.ext, !dbg !10925
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %pa, align 8, !dbg !10926
  br label %for.cond, !dbg !10927

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %p, align 4, !dbg !10928
  %9 = load i32, i32* %totpart, align 4, !dbg !10930
  %cmp = icmp slt i32 %8, %9, !dbg !10931
  br i1 %cmp, label %for.body, label %for.end, !dbg !10932

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !10933
  %11 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !10934
  %12 = load float, float* %dtime.addr, align 4, !dbg !10935
  %13 = load float, float* %cfra.addr, align 4, !dbg !10936
  call void @reset_particle(%struct.ParticleSimulationData* %10, %struct.ParticleData* %11, float %12, float %13), !dbg !10937
  br label %for.inc, !dbg !10937

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %p, align 4, !dbg !10938
  %inc = add nsw i32 %14, 1, !dbg !10938
  store i32 %inc, i32* %p, align 4, !dbg !10938
  %15 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !10939
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %15, i32 1, !dbg !10939
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !10939
  br label %for.cond, !dbg !10940, !llvm.loop !10941

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10943
}

declare dso_local i32 @BKE_ptcache_read(%struct.PTCacheID*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cached_step(%struct.ParticleSimulationData* %sim, float %cfra) #0 !dbg !10944 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %cfra.addr = alloca float, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %ptex = alloca %struct.ParticleTexture, align 4
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %disp = alloca float, align 4
  %dietime = alloca float, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !10945, metadata !DIExpression()), !dbg !10946
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !10947, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !10949, metadata !DIExpression()), !dbg !10950
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !10951
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !10952
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !10952
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !10950
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !10953, metadata !DIExpression()), !dbg !10954
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10955
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !10956
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !10956
  store %struct.ParticleSettings* %3, %struct.ParticleSettings** %part, align 8, !dbg !10954
  call void @llvm.dbg.declare(metadata %struct.ParticleTexture* %ptex, metadata !10957, metadata !DIExpression()), !dbg !10958
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !10959, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.declare(metadata i32* %p, metadata !10961, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.declare(metadata float* %disp, metadata !10962, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.declare(metadata float* %dietime, metadata !10964, metadata !DIExpression()), !dbg !10965
  %4 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !10966
  call void @psys_update_effectors(%struct.ParticleSimulationData* %4), !dbg !10967
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10968
  %call = call float @psys_get_current_display_percentage(%struct.ParticleSystem* %5), !dbg !10969
  store float %call, float* %disp, align 4, !dbg !10970
  store i32 0, i32* %p, align 4, !dbg !10971
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10971
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 3, !dbg !10971
  %7 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !10971
  store %struct.ParticleData* %7, %struct.ParticleData** %pa, align 8, !dbg !10971
  br label %for.cond, !dbg !10971

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %p, align 4, !dbg !10973
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10973
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 26, !dbg !10973
  %10 = load i32, i32* %totpart, align 8, !dbg !10973
  %cmp = icmp slt i32 %8, %10, !dbg !10973
  br i1 %cmp, label %for.body, label %for.end, !dbg !10971

for.body:                                         ; preds = %for.cond
  %11 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !10975
  %12 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !10977
  %13 = load float, float* %cfra.addr, align 4, !dbg !10978
  call void @psys_get_texture(%struct.ParticleSimulationData* %11, %struct.ParticleData* %12, %struct.ParticleTexture* %ptex, i32 8, float %13), !dbg !10979
  %14 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !10980
  %size = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %14, i32 0, i32 82, !dbg !10981
  %15 = load float, float* %size, align 8, !dbg !10981
  %size3 = getelementptr inbounds %struct.ParticleTexture, %struct.ParticleTexture* %ptex, i32 0, i32 4, !dbg !10982
  %16 = load float, float* %size3, align 4, !dbg !10982
  %mul = fmul float %15, %16, !dbg !10983
  %17 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !10984
  %size4 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %17, i32 0, i32 13, !dbg !10985
  store float %mul, float* %size4, align 4, !dbg !10986
  %18 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !10987
  %randsize = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %18, i32 0, i32 83, !dbg !10989
  %19 = load float, float* %randsize, align 4, !dbg !10989
  %cmp5 = fcmp ogt float %19, 0.000000e+00, !dbg !10990
  br i1 %cmp5, label %if.then, label %if.end, !dbg !10991

if.then:                                          ; preds = %for.body
  %20 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !10992
  %randsize6 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %20, i32 0, i32 83, !dbg !10993
  %21 = load float, float* %randsize6, align 4, !dbg !10993
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10994
  %23 = load i32, i32* %p, align 4, !dbg !10995
  %add = add nsw i32 %23, 1, !dbg !10996
  %call7 = call float @psys_frand(%struct.ParticleSystem* %22, i32 %add), !dbg !10997
  %mul8 = fmul float %21, %call7, !dbg !10998
  %sub = fsub float 1.000000e+00, %mul8, !dbg !10999
  %24 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11000
  %size9 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %24, i32 0, i32 13, !dbg !11001
  %25 = load float, float* %size9, align 4, !dbg !11002
  %mul10 = fmul float %25, %sub, !dbg !11002
  store float %mul10, float* %size9, align 4, !dbg !11002
  br label %if.end, !dbg !11000

if.end:                                           ; preds = %if.then, %for.body
  %26 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11003
  %call11 = call %struct.LatticeDeformData* @psys_create_lattice_deform_data(%struct.ParticleSimulationData* %26), !dbg !11004
  %27 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11005
  %lattice_deform_data = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %27, i32 0, i32 15, !dbg !11006
  store %struct.LatticeDeformData* %call11, %struct.LatticeDeformData** %lattice_deform_data, align 8, !dbg !11007
  %28 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11008
  %dietime12 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %28, i32 0, i32 8, !dbg !11009
  %29 = load float, float* %dietime12, align 4, !dbg !11009
  store float %29, float* %dietime, align 4, !dbg !11010
  %30 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11011
  %time = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %30, i32 0, i32 6, !dbg !11013
  %31 = load float, float* %time, align 4, !dbg !11013
  %32 = load float, float* %cfra.addr, align 4, !dbg !11014
  %cmp13 = fcmp ogt float %31, %32, !dbg !11015
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !11016

if.then14:                                        ; preds = %if.end
  %33 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11017
  %alive = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %33, i32 0, i32 18, !dbg !11019
  store i16 2, i16* %alive, align 2, !dbg !11020
  %34 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11021
  %flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %34, i32 0, i32 5, !dbg !11023
  %35 = load i32, i32* %flag, align 8, !dbg !11023
  %and = and i32 %35, 32, !dbg !11024
  %tobool = icmp ne i32 %and, 0, !dbg !11024
  br i1 %tobool, label %land.lhs.true, label %if.end19, !dbg !11025

land.lhs.true:                                    ; preds = %if.then14
  %36 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11026
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %36, i32 0, i32 40, !dbg !11027
  %37 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !11027
  %flag15 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %37, i32 0, i32 2, !dbg !11028
  %38 = load i32, i32* %flag15, align 8, !dbg !11028
  %and16 = and i32 %38, 512, !dbg !11029
  %cmp17 = icmp eq i32 %and16, 0, !dbg !11030
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !11031

if.then18:                                        ; preds = %land.lhs.true
  %39 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11032
  %40 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11033
  %41 = load float, float* %cfra.addr, align 4, !dbg !11034
  call void @reset_particle(%struct.ParticleSimulationData* %39, %struct.ParticleData* %40, float 0.000000e+00, float %41), !dbg !11035
  br label %if.end19, !dbg !11035

if.end19:                                         ; preds = %if.then18, %land.lhs.true, %if.then14
  br label %if.end26, !dbg !11036

if.else:                                          ; preds = %if.end
  %42 = load float, float* %dietime, align 4, !dbg !11037
  %43 = load float, float* %cfra.addr, align 4, !dbg !11039
  %cmp20 = fcmp ole float %42, %43, !dbg !11040
  br i1 %cmp20, label %if.then21, label %if.else23, !dbg !11041

if.then21:                                        ; preds = %if.else
  %44 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11042
  %alive22 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %44, i32 0, i32 18, !dbg !11043
  store i16 1, i16* %alive22, align 2, !dbg !11044
  br label %if.end25, !dbg !11042

if.else23:                                        ; preds = %if.else
  %45 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11045
  %alive24 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %45, i32 0, i32 18, !dbg !11046
  store i16 3, i16* %alive24, align 2, !dbg !11047
  br label %if.end25

if.end25:                                         ; preds = %if.else23, %if.then21
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end19
  %46 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11048
  %lattice_deform_data27 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %46, i32 0, i32 15, !dbg !11050
  %47 = load %struct.LatticeDeformData*, %struct.LatticeDeformData** %lattice_deform_data27, align 8, !dbg !11050
  %tobool28 = icmp ne %struct.LatticeDeformData* %47, null, !dbg !11048
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !11051

if.then29:                                        ; preds = %if.end26
  %48 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11052
  %lattice_deform_data30 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %48, i32 0, i32 15, !dbg !11054
  %49 = load %struct.LatticeDeformData*, %struct.LatticeDeformData** %lattice_deform_data30, align 8, !dbg !11054
  call void @end_latt_deform(%struct.LatticeDeformData* %49), !dbg !11055
  %50 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11056
  %lattice_deform_data31 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %50, i32 0, i32 15, !dbg !11057
  store %struct.LatticeDeformData* null, %struct.LatticeDeformData** %lattice_deform_data31, align 8, !dbg !11058
  br label %if.end32, !dbg !11059

if.end32:                                         ; preds = %if.then29, %if.end26
  %51 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11060
  %52 = load i32, i32* %p, align 4, !dbg !11062
  %call33 = call float @psys_frand(%struct.ParticleSystem* %51, i32 %52), !dbg !11063
  %53 = load float, float* %disp, align 4, !dbg !11064
  %cmp34 = fcmp ogt float %call33, %53, !dbg !11065
  br i1 %cmp34, label %if.then35, label %if.else38, !dbg !11066

if.then35:                                        ; preds = %if.end32
  %54 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11067
  %flag36 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %54, i32 0, i32 17, !dbg !11068
  %55 = load i16, i16* %flag36, align 4, !dbg !11069
  %conv = sext i16 %55 to i32, !dbg !11069
  %or = or i32 %conv, 2, !dbg !11069
  %conv37 = trunc i32 %or to i16, !dbg !11069
  store i16 %conv37, i16* %flag36, align 4, !dbg !11069
  br label %if.end43, !dbg !11067

if.else38:                                        ; preds = %if.end32
  %56 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11070
  %flag39 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %56, i32 0, i32 17, !dbg !11071
  %57 = load i16, i16* %flag39, align 4, !dbg !11072
  %conv40 = sext i16 %57 to i32, !dbg !11072
  %and41 = and i32 %conv40, -3, !dbg !11072
  %conv42 = trunc i32 %and41 to i16, !dbg !11072
  store i16 %conv42, i16* %flag39, align 4, !dbg !11072
  br label %if.end43

if.end43:                                         ; preds = %if.else38, %if.then35
  br label %for.inc, !dbg !11073

for.inc:                                          ; preds = %if.end43
  %58 = load i32, i32* %p, align 4, !dbg !10973
  %inc = add nsw i32 %58, 1, !dbg !10973
  store i32 %inc, i32* %p, align 4, !dbg !10973
  %59 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !10973
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %59, i32 1, !dbg !10973
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !10973
  br label %for.cond, !dbg !10973, !llvm.loop !11074

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11076
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_children(%struct.ParticleSimulationData* %sim) #0 !dbg !11077 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !11078, metadata !DIExpression()), !dbg !11079
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11080
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !11082
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11082
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 2, !dbg !11083
  %2 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11083
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %2, i32 0, i32 7, !dbg !11084
  %3 = load i16, i16* %type, align 8, !dbg !11084
  %conv = sext i16 %3 to i32, !dbg !11080
  %cmp = icmp eq i32 %conv, 2, !dbg !11085
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !11086

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11087
  %psys2 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %4, i32 0, i32 2, !dbg !11088
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys2, align 8, !dbg !11088
  %flag = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 25, !dbg !11089
  %6 = load i32, i32* %flag, align 4, !dbg !11089
  %and = and i32 %6, 512, !dbg !11090
  %cmp3 = icmp eq i32 %and, 0, !dbg !11091
  br i1 %cmp3, label %if.then, label %if.else, !dbg !11092

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11093
  %psys5 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %7, i32 0, i32 2, !dbg !11094
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys5, align 8, !dbg !11094
  call void @psys_free_children(%struct.ParticleSystem* %8), !dbg !11095
  br label %if.end18, !dbg !11095

if.else:                                          ; preds = %land.lhs.true, %entry
  %9 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11096
  %psys6 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %9, i32 0, i32 2, !dbg !11098
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys6, align 8, !dbg !11098
  %part7 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 2, !dbg !11099
  %11 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part7, align 8, !dbg !11099
  %childtype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %11, i32 0, i32 19, !dbg !11100
  %12 = load i16, i16* %childtype, align 4, !dbg !11100
  %tobool = icmp ne i16 %12, 0, !dbg !11096
  br i1 %tobool, label %if.then8, label %if.else15, !dbg !11101

if.then8:                                         ; preds = %if.else
  %13 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11102
  %psys9 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %13, i32 0, i32 2, !dbg !11105
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys9, align 8, !dbg !11105
  %totchild = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 28, !dbg !11106
  %15 = load i32, i32* %totchild, align 8, !dbg !11106
  %16 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11107
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %16, i32 0, i32 0, !dbg !11108
  %17 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11108
  %18 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11109
  %psys10 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %18, i32 0, i32 2, !dbg !11110
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys10, align 8, !dbg !11110
  %call = call i32 @get_psys_tot_child(%struct.Scene* %17, %struct.ParticleSystem* %19), !dbg !11111
  %cmp11 = icmp ne i32 %15, %call, !dbg !11112
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !11113

if.then13:                                        ; preds = %if.then8
  %20 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11114
  call void @distribute_particles(%struct.ParticleSimulationData* %20, i32 4), !dbg !11115
  br label %if.end, !dbg !11115

if.else14:                                        ; preds = %if.then8
  br label %if.end

if.end:                                           ; preds = %if.else14, %if.then13
  br label %if.end17, !dbg !11116

if.else15:                                        ; preds = %if.else
  %21 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11117
  %psys16 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %21, i32 0, i32 2, !dbg !11118
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys16, align 8, !dbg !11118
  call void @psys_free_children(%struct.ParticleSystem* %22), !dbg !11119
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.end
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !11120
}

declare dso_local i32 @BKE_ptcache_write(%struct.PTCacheID*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @get_base_time_step(%struct.ParticleSettings* %part) #0 !dbg !11121 {
entry:
  %part.addr = alloca %struct.ParticleSettings*, align 8
  store %struct.ParticleSettings* %part, %struct.ParticleSettings** %part.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part.addr, metadata !11124, metadata !DIExpression()), !dbg !11125
  %0 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !11126
  %subframes = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %0, i32 0, i32 22, !dbg !11127
  %1 = load i16, i16* %subframes, align 2, !dbg !11127
  %conv = sext i16 %1 to i32, !dbg !11126
  %add = add nsw i32 %conv, 1, !dbg !11128
  %conv1 = sitofp i32 %add to float, !dbg !11129
  %div = fdiv float 1.000000e+00, %conv1, !dbg !11130
  ret float %div, !dbg !11131
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamics_step(%struct.ParticleSimulationData* %sim, float %cfra) #0 !dbg !11132 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %cfra.addr = alloca float, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %rng = alloca %struct.RNG*, align 8
  %bbd = alloca %struct.BoidBrainData, align 8
  %ptex = alloca %struct.ParticleTexture, align 4
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %timestep = alloca float, align 4
  %dfra = alloca float, align 4
  %dtime = alloca float, align 4
  %birthtime = alloca float, align 4
  %dietime = alloca float, align 4
  %pt = alloca %struct.ParticleTarget*, align 8
  %pt55 = alloca %struct.ParticleTarget*, align 8
  %sphdata = alloca %struct.SPHData, align 8
  %part240 = alloca %struct.ParticleSettings*, align 8
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !11133, metadata !DIExpression()), !dbg !11134
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !11135, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !11137, metadata !DIExpression()), !dbg !11138
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11139
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !11140
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !11140
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !11138
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !11141, metadata !DIExpression()), !dbg !11142
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11143
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !11144
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !11144
  store %struct.ParticleSettings* %3, %struct.ParticleSettings** %part, align 8, !dbg !11142
  call void @llvm.dbg.declare(metadata %struct.RNG** %rng, metadata !11145, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.declare(metadata %struct.BoidBrainData* %bbd, metadata !11150, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.declare(metadata %struct.ParticleTexture* %ptex, metadata !11170, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !11172, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.declare(metadata i32* %p, metadata !11174, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.declare(metadata float* %timestep, metadata !11175, metadata !DIExpression()), !dbg !11176
  call void @llvm.dbg.declare(metadata float* %dfra, metadata !11177, metadata !DIExpression()), !dbg !11178
  call void @llvm.dbg.declare(metadata float* %dtime, metadata !11179, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.declare(metadata float* %birthtime, metadata !11181, metadata !DIExpression()), !dbg !11182
  call void @llvm.dbg.declare(metadata float* %dietime, metadata !11183, metadata !DIExpression()), !dbg !11184
  %4 = load float, float* %cfra.addr, align 4, !dbg !11185
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11186
  %cfra3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 20, !dbg !11187
  %6 = load float, float* %cfra3, align 8, !dbg !11187
  %sub = fsub float %4, %6, !dbg !11188
  store float %sub, float* %dfra, align 4, !dbg !11189
  %7 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11190
  %call = call float @psys_get_timestep(%struct.ParticleSimulationData* %7), !dbg !11191
  store float %call, float* %timestep, align 4, !dbg !11192
  %8 = load float, float* %dfra, align 4, !dbg !11193
  %9 = load float, float* %timestep, align 4, !dbg !11194
  %mul = fmul float %8, %9, !dbg !11195
  store float %mul, float* %dtime, align 4, !dbg !11196
  %10 = load float, float* %dfra, align 4, !dbg !11197
  %cmp = fcmp olt float %10, 0.000000e+00, !dbg !11199
  br i1 %cmp, label %if.then, label %if.end19, !dbg !11200

if.then:                                          ; preds = %entry
  store i32 0, i32* %p, align 4, !dbg !11201
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11201
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 3, !dbg !11201
  %12 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !11201
  store %struct.ParticleData* %12, %struct.ParticleData** %pa, align 8, !dbg !11201
  br label %for.cond, !dbg !11201

for.cond:                                         ; preds = %for.inc, %if.then
  %13 = load i32, i32* %p, align 4, !dbg !11204
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11204
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 26, !dbg !11204
  %15 = load i32, i32* %totpart, align 8, !dbg !11204
  %cmp4 = icmp slt i32 %13, %15, !dbg !11204
  br i1 %cmp4, label %for.body, label %for.end, !dbg !11201

for.body:                                         ; preds = %for.cond
  %16 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11206
  %flag = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %16, i32 0, i32 17, !dbg !11206
  %17 = load i16, i16* %flag, align 4, !dbg !11206
  %conv = sext i16 %17 to i32, !dbg !11206
  %and = and i32 %conv, 1, !dbg !11206
  %tobool = icmp ne i32 %and, 0, !dbg !11206
  br i1 %tobool, label %if.end18, label %if.then5, !dbg !11204

if.then5:                                         ; preds = %for.body
  %18 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11208
  %19 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11210
  %20 = load float, float* %cfra.addr, align 4, !dbg !11211
  call void @psys_get_texture(%struct.ParticleSimulationData* %18, %struct.ParticleData* %19, %struct.ParticleTexture* %ptex, i32 8, float %20), !dbg !11212
  %21 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11213
  %size = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %21, i32 0, i32 82, !dbg !11214
  %22 = load float, float* %size, align 8, !dbg !11214
  %size6 = getelementptr inbounds %struct.ParticleTexture, %struct.ParticleTexture* %ptex, i32 0, i32 4, !dbg !11215
  %23 = load float, float* %size6, align 4, !dbg !11215
  %mul7 = fmul float %22, %23, !dbg !11216
  %24 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11217
  %size8 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %24, i32 0, i32 13, !dbg !11218
  store float %mul7, float* %size8, align 4, !dbg !11219
  %25 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11220
  %randsize = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %25, i32 0, i32 83, !dbg !11222
  %26 = load float, float* %randsize, align 4, !dbg !11222
  %cmp9 = fcmp ogt float %26, 0.000000e+00, !dbg !11223
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !11224

if.then11:                                        ; preds = %if.then5
  %27 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11225
  %randsize12 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %27, i32 0, i32 83, !dbg !11226
  %28 = load float, float* %randsize12, align 4, !dbg !11226
  %29 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11227
  %30 = load i32, i32* %p, align 4, !dbg !11228
  %add = add nsw i32 %30, 1, !dbg !11229
  %call13 = call float @psys_frand(%struct.ParticleSystem* %29, i32 %add), !dbg !11230
  %mul14 = fmul float %28, %call13, !dbg !11231
  %sub15 = fsub float 1.000000e+00, %mul14, !dbg !11232
  %31 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11233
  %size16 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %31, i32 0, i32 13, !dbg !11234
  %32 = load float, float* %size16, align 4, !dbg !11235
  %mul17 = fmul float %32, %sub15, !dbg !11235
  store float %mul17, float* %size16, align 4, !dbg !11235
  br label %if.end, !dbg !11233

if.end:                                           ; preds = %if.then11, %if.then5
  %33 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11236
  %34 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11237
  %35 = load float, float* %dtime, align 4, !dbg !11238
  %36 = load float, float* %cfra.addr, align 4, !dbg !11239
  call void @reset_particle(%struct.ParticleSimulationData* %33, %struct.ParticleData* %34, float %35, float %36), !dbg !11240
  br label %if.end18, !dbg !11241

if.end18:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11206

for.inc:                                          ; preds = %if.end18
  %37 = load i32, i32* %p, align 4, !dbg !11204
  %inc = add nsw i32 %37, 1, !dbg !11204
  store i32 %inc, i32* %p, align 4, !dbg !11204
  %38 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11204
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %38, i32 1, !dbg !11204
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !11204
  br label %for.cond, !dbg !11204, !llvm.loop !11242

for.end:                                          ; preds = %for.cond
  br label %return, !dbg !11244

if.end19:                                         ; preds = %entry
  %39 = load float, float* %cfra.addr, align 4, !dbg !11245
  %conv20 = fptosi float %39 to i32, !dbg !11246
  %add21 = add nsw i32 31415926, %conv20, !dbg !11247
  %40 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11248
  %seed = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %40, i32 0, i32 23, !dbg !11249
  %41 = load i32, i32* %seed, align 4, !dbg !11249
  %add22 = add nsw i32 %add21, %41, !dbg !11250
  call void @BLI_srandom(i32 %add22), !dbg !11251
  %42 = load float, float* %cfra.addr, align 4, !dbg !11252
  %conv23 = fptosi float %42 to i32, !dbg !11253
  %add24 = add nsw i32 31415926, %conv23, !dbg !11254
  %43 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11255
  %seed25 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %43, i32 0, i32 23, !dbg !11256
  %44 = load i32, i32* %seed25, align 4, !dbg !11256
  %add26 = add nsw i32 %add24, %44, !dbg !11257
  %call27 = call %struct.RNG* @BLI_rng_new_srandom(i32 %add26), !dbg !11258
  store %struct.RNG* %call27, %struct.RNG** %rng, align 8, !dbg !11259
  %45 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11260
  call void @psys_update_effectors(%struct.ParticleSimulationData* %45), !dbg !11261
  %46 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11262
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %46, i32 0, i32 7, !dbg !11264
  %47 = load i16, i16* %type, align 8, !dbg !11264
  %conv28 = sext i16 %47 to i32, !dbg !11262
  %cmp29 = icmp ne i32 %conv28, 2, !dbg !11265
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !11266

if.then31:                                        ; preds = %if.end19
  %48 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11267
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %48, i32 0, i32 0, !dbg !11268
  %49 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11268
  %50 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11269
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %50, i32 0, i32 1, !dbg !11270
  %51 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11270
  %call32 = call %struct.ListBase* @get_collider_cache(%struct.Scene* %49, %struct.Object* %51, %struct.Group* null), !dbg !11271
  %52 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11272
  %colliders = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %52, i32 0, i32 4, !dbg !11273
  store %struct.ListBase* %call32, %struct.ListBase** %colliders, align 8, !dbg !11274
  br label %if.end33, !dbg !11272

if.end33:                                         ; preds = %if.then31, %if.end19
  %53 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11275
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %53, i32 0, i32 11, !dbg !11276
  %54 = load i16, i16* %phystype, align 8, !dbg !11276
  %conv34 = sext i16 %54 to i32, !dbg !11275
  switch i32 %conv34, label %sw.epilog [
    i32 3, label %sw.bb
    i32 4, label %sw.bb54
  ], !dbg !11277

sw.bb:                                            ; preds = %if.end33
  call void @llvm.dbg.declare(metadata %struct.ParticleTarget** %pt, metadata !11278, metadata !DIExpression()), !dbg !11281
  %55 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11282
  %targets = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %55, i32 0, i32 17, !dbg !11283
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !11284
  %56 = load i8*, i8** %first, align 8, !dbg !11284
  %57 = bitcast i8* %56 to %struct.ParticleTarget*, !dbg !11282
  store %struct.ParticleTarget* %57, %struct.ParticleTarget** %pt, align 8, !dbg !11281
  %58 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11285
  %sim35 = getelementptr inbounds %struct.BoidBrainData, %struct.BoidBrainData* %bbd, i32 0, i32 0, !dbg !11286
  store %struct.ParticleSimulationData* %58, %struct.ParticleSimulationData** %sim35, align 8, !dbg !11287
  %59 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11288
  %part36 = getelementptr inbounds %struct.BoidBrainData, %struct.BoidBrainData* %bbd, i32 0, i32 1, !dbg !11289
  store %struct.ParticleSettings* %59, %struct.ParticleSettings** %part36, align 8, !dbg !11290
  %60 = load float, float* %cfra.addr, align 4, !dbg !11291
  %cfra37 = getelementptr inbounds %struct.BoidBrainData, %struct.BoidBrainData* %bbd, i32 0, i32 3, !dbg !11292
  store float %60, float* %cfra37, align 4, !dbg !11293
  %61 = load float, float* %dfra, align 4, !dbg !11294
  %dfra38 = getelementptr inbounds %struct.BoidBrainData, %struct.BoidBrainData* %bbd, i32 0, i32 4, !dbg !11295
  store float %61, float* %dfra38, align 8, !dbg !11296
  %62 = load float, float* %timestep, align 4, !dbg !11297
  %timestep39 = getelementptr inbounds %struct.BoidBrainData, %struct.BoidBrainData* %bbd, i32 0, i32 2, !dbg !11298
  store float %62, float* %timestep39, align 8, !dbg !11299
  %63 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !11300
  %rng40 = getelementptr inbounds %struct.BoidBrainData, %struct.BoidBrainData* %bbd, i32 0, i32 11, !dbg !11301
  store %struct.RNG* %63, %struct.RNG** %rng40, align 8, !dbg !11302
  %64 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11303
  %65 = load float, float* %cfra.addr, align 4, !dbg !11304
  call void @psys_update_particle_tree(%struct.ParticleSystem* %64, float %65), !dbg !11305
  %66 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11306
  %67 = load float, float* %cfra.addr, align 4, !dbg !11307
  call void @boids_precalc_rules(%struct.ParticleSettings* %66, float %67), !dbg !11308
  br label %for.cond41, !dbg !11309

for.cond41:                                       ; preds = %for.inc52, %sw.bb
  %68 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !11310
  %tobool42 = icmp ne %struct.ParticleTarget* %68, null, !dbg !11313
  br i1 %tobool42, label %for.body43, label %for.end53, !dbg !11313

for.body43:                                       ; preds = %for.cond41
  %69 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !11314
  %ob44 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %69, i32 0, i32 2, !dbg !11317
  %70 = load %struct.Object*, %struct.Object** %ob44, align 8, !dbg !11317
  %tobool45 = icmp ne %struct.Object* %70, null, !dbg !11314
  br i1 %tobool45, label %if.then46, label %if.end51, !dbg !11318

if.then46:                                        ; preds = %for.body43
  %71 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !11319
  %ob47 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %71, i32 0, i32 2, !dbg !11320
  %72 = load %struct.Object*, %struct.Object** %ob47, align 8, !dbg !11320
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %72, i32 0, i32 109, !dbg !11321
  %73 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !11322
  %psys48 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %73, i32 0, i32 3, !dbg !11323
  %74 = load i32, i32* %psys48, align 8, !dbg !11323
  %sub49 = sub nsw i32 %74, 1, !dbg !11324
  %call50 = call i8* @BLI_findlink(%struct.ListBase* %particlesystem, i32 %sub49), !dbg !11325
  %75 = bitcast i8* %call50 to %struct.ParticleSystem*, !dbg !11325
  %76 = load float, float* %cfra.addr, align 4, !dbg !11326
  call void @psys_update_particle_tree(%struct.ParticleSystem* %75, float %76), !dbg !11327
  br label %if.end51, !dbg !11327

if.end51:                                         ; preds = %if.then46, %for.body43
  br label %for.inc52, !dbg !11328

for.inc52:                                        ; preds = %if.end51
  %77 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !11329
  %next = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %77, i32 0, i32 0, !dbg !11330
  %78 = load %struct.ParticleTarget*, %struct.ParticleTarget** %next, align 8, !dbg !11330
  store %struct.ParticleTarget* %78, %struct.ParticleTarget** %pt, align 8, !dbg !11331
  br label %for.cond41, !dbg !11332, !llvm.loop !11333

for.end53:                                        ; preds = %for.cond41
  br label %sw.epilog, !dbg !11335

sw.bb54:                                          ; preds = %if.end33
  call void @llvm.dbg.declare(metadata %struct.ParticleTarget** %pt55, metadata !11336, metadata !DIExpression()), !dbg !11338
  %79 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11339
  %targets56 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %79, i32 0, i32 17, !dbg !11340
  %first57 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets56, i32 0, i32 0, !dbg !11341
  %80 = load i8*, i8** %first57, align 8, !dbg !11341
  %81 = bitcast i8* %80 to %struct.ParticleTarget*, !dbg !11339
  store %struct.ParticleTarget* %81, %struct.ParticleTarget** %pt55, align 8, !dbg !11338
  %82 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11342
  %83 = load float, float* %cfra.addr, align 4, !dbg !11343
  call void @psys_update_particle_bvhtree(%struct.ParticleSystem* %82, float %83), !dbg !11344
  br label %for.cond58, !dbg !11345

for.cond58:                                       ; preds = %for.inc70, %sw.bb54
  %84 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt55, align 8, !dbg !11346
  %tobool59 = icmp ne %struct.ParticleTarget* %84, null, !dbg !11349
  br i1 %tobool59, label %for.body60, label %for.end72, !dbg !11349

for.body60:                                       ; preds = %for.cond58
  %85 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt55, align 8, !dbg !11350
  %ob61 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %85, i32 0, i32 2, !dbg !11353
  %86 = load %struct.Object*, %struct.Object** %ob61, align 8, !dbg !11353
  %tobool62 = icmp ne %struct.Object* %86, null, !dbg !11350
  br i1 %tobool62, label %if.then63, label %if.end69, !dbg !11354

if.then63:                                        ; preds = %for.body60
  %87 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt55, align 8, !dbg !11355
  %ob64 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %87, i32 0, i32 2, !dbg !11356
  %88 = load %struct.Object*, %struct.Object** %ob64, align 8, !dbg !11356
  %particlesystem65 = getelementptr inbounds %struct.Object, %struct.Object* %88, i32 0, i32 109, !dbg !11357
  %89 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt55, align 8, !dbg !11358
  %psys66 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %89, i32 0, i32 3, !dbg !11359
  %90 = load i32, i32* %psys66, align 8, !dbg !11359
  %sub67 = sub nsw i32 %90, 1, !dbg !11360
  %call68 = call i8* @BLI_findlink(%struct.ListBase* %particlesystem65, i32 %sub67), !dbg !11361
  %91 = bitcast i8* %call68 to %struct.ParticleSystem*, !dbg !11361
  %92 = load float, float* %cfra.addr, align 4, !dbg !11362
  call void @psys_update_particle_bvhtree(%struct.ParticleSystem* %91, float %92), !dbg !11363
  br label %if.end69, !dbg !11363

if.end69:                                         ; preds = %if.then63, %for.body60
  br label %for.inc70, !dbg !11364

for.inc70:                                        ; preds = %if.end69
  %93 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt55, align 8, !dbg !11365
  %next71 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %93, i32 0, i32 0, !dbg !11366
  %94 = load %struct.ParticleTarget*, %struct.ParticleTarget** %next71, align 8, !dbg !11366
  store %struct.ParticleTarget* %94, %struct.ParticleTarget** %pt55, align 8, !dbg !11367
  br label %for.cond58, !dbg !11368, !llvm.loop !11369

for.end72:                                        ; preds = %for.cond58
  br label %sw.epilog, !dbg !11371

sw.epilog:                                        ; preds = %if.end33, %for.end72, %for.end53
  store i32 0, i32* %p, align 4, !dbg !11372
  %95 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11372
  %particles73 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %95, i32 0, i32 3, !dbg !11372
  %96 = load %struct.ParticleData*, %struct.ParticleData** %particles73, align 8, !dbg !11372
  store %struct.ParticleData* %96, %struct.ParticleData** %pa, align 8, !dbg !11372
  br label %for.cond74, !dbg !11372

for.cond74:                                       ; preds = %for.inc177, %sw.epilog
  %97 = load i32, i32* %p, align 4, !dbg !11374
  %98 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11374
  %totpart75 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %98, i32 0, i32 26, !dbg !11374
  %99 = load i32, i32* %totpart75, align 8, !dbg !11374
  %cmp76 = icmp slt i32 %97, %99, !dbg !11374
  br i1 %cmp76, label %for.body78, label %for.end180, !dbg !11372

for.body78:                                       ; preds = %for.cond74
  %100 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11376
  %flag79 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %100, i32 0, i32 17, !dbg !11376
  %101 = load i16, i16* %flag79, align 4, !dbg !11376
  %conv80 = sext i16 %101 to i32, !dbg !11376
  %and81 = and i32 %conv80, 3, !dbg !11376
  %tobool82 = icmp ne i32 %and81, 0, !dbg !11376
  br i1 %tobool82, label %if.end176, label %if.then83, !dbg !11374

if.then83:                                        ; preds = %for.body78
  %102 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11378
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %102, i32 0, i32 1, !dbg !11380
  %103 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11381
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %103, i32 0, i32 0, !dbg !11382
  call void @copy_particle_key(%struct.ParticleKey* %prev_state, %struct.ParticleKey* %state, i32 1), !dbg !11383
  %104 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11384
  %105 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11385
  %106 = load float, float* %cfra.addr, align 4, !dbg !11386
  call void @psys_get_texture(%struct.ParticleSimulationData* %104, %struct.ParticleData* %105, %struct.ParticleTexture* %ptex, i32 8, float %106), !dbg !11387
  %107 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11388
  %size84 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %107, i32 0, i32 82, !dbg !11389
  %108 = load float, float* %size84, align 8, !dbg !11389
  %size85 = getelementptr inbounds %struct.ParticleTexture, %struct.ParticleTexture* %ptex, i32 0, i32 4, !dbg !11390
  %109 = load float, float* %size85, align 4, !dbg !11390
  %mul86 = fmul float %108, %109, !dbg !11391
  %110 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11392
  %size87 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %110, i32 0, i32 13, !dbg !11393
  store float %mul86, float* %size87, align 4, !dbg !11394
  %111 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11395
  %randsize88 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %111, i32 0, i32 83, !dbg !11397
  %112 = load float, float* %randsize88, align 4, !dbg !11397
  %cmp89 = fcmp ogt float %112, 0.000000e+00, !dbg !11398
  br i1 %cmp89, label %if.then91, label %if.end99, !dbg !11399

if.then91:                                        ; preds = %if.then83
  %113 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11400
  %randsize92 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %113, i32 0, i32 83, !dbg !11401
  %114 = load float, float* %randsize92, align 4, !dbg !11401
  %115 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11402
  %116 = load i32, i32* %p, align 4, !dbg !11403
  %add93 = add nsw i32 %116, 1, !dbg !11404
  %call94 = call float @psys_frand(%struct.ParticleSystem* %115, i32 %add93), !dbg !11405
  %mul95 = fmul float %114, %call94, !dbg !11406
  %sub96 = fsub float 1.000000e+00, %mul95, !dbg !11407
  %117 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11408
  %size97 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %117, i32 0, i32 13, !dbg !11409
  %118 = load float, float* %size97, align 4, !dbg !11410
  %mul98 = fmul float %118, %sub96, !dbg !11410
  store float %mul98, float* %size97, align 4, !dbg !11410
  br label %if.end99, !dbg !11408

if.end99:                                         ; preds = %if.then91, %if.then83
  %119 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11411
  %time = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %119, i32 0, i32 6, !dbg !11412
  %120 = load float, float* %time, align 4, !dbg !11412
  store float %120, float* %birthtime, align 4, !dbg !11413
  %121 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11414
  %dietime100 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %121, i32 0, i32 8, !dbg !11415
  %122 = load float, float* %dietime100, align 4, !dbg !11415
  store float %122, float* %dietime, align 4, !dbg !11416
  %123 = load float, float* %dfra, align 4, !dbg !11417
  %124 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11418
  %state101 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %124, i32 0, i32 0, !dbg !11419
  %time102 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state101, i32 0, i32 4, !dbg !11420
  store float %123, float* %time102, align 4, !dbg !11421
  %125 = load float, float* %dietime, align 4, !dbg !11422
  %126 = load float, float* %cfra.addr, align 4, !dbg !11424
  %cmp103 = fcmp ole float %125, %126, !dbg !11425
  br i1 %cmp103, label %land.lhs.true, label %if.else, !dbg !11426

land.lhs.true:                                    ; preds = %if.end99
  %127 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11427
  %cfra105 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %127, i32 0, i32 20, !dbg !11428
  %128 = load float, float* %cfra105, align 8, !dbg !11428
  %129 = load float, float* %dietime, align 4, !dbg !11429
  %cmp106 = fcmp olt float %128, %129, !dbg !11430
  br i1 %cmp106, label %if.then108, label %if.else, !dbg !11431

if.then108:                                       ; preds = %land.lhs.true
  %130 = load float, float* %dietime, align 4, !dbg !11432
  %131 = load float, float* %birthtime, align 4, !dbg !11434
  %132 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11435
  %cfra109 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %132, i32 0, i32 20, !dbg !11436
  %133 = load float, float* %cfra109, align 8, !dbg !11436
  %cmp110 = fcmp ogt float %131, %133, !dbg !11437
  br i1 %cmp110, label %cond.true, label %cond.false, !dbg !11438

cond.true:                                        ; preds = %if.then108
  %134 = load float, float* %birthtime, align 4, !dbg !11439
  br label %cond.end, !dbg !11438

cond.false:                                       ; preds = %if.then108
  %135 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11440
  %cfra112 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %135, i32 0, i32 20, !dbg !11441
  %136 = load float, float* %cfra112, align 8, !dbg !11441
  br label %cond.end, !dbg !11438

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %134, %cond.true ], [ %136, %cond.false ], !dbg !11438
  %sub113 = fsub float %130, %cond, !dbg !11442
  %137 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11443
  %state114 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %137, i32 0, i32 0, !dbg !11444
  %time115 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state114, i32 0, i32 4, !dbg !11445
  store float %sub113, float* %time115, align 4, !dbg !11446
  %138 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11447
  %alive = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %138, i32 0, i32 18, !dbg !11448
  store i16 4, i16* %alive, align 2, !dbg !11449
  br label %if.end134, !dbg !11450

if.else:                                          ; preds = %land.lhs.true, %if.end99
  %139 = load float, float* %birthtime, align 4, !dbg !11451
  %140 = load float, float* %cfra.addr, align 4, !dbg !11453
  %cmp116 = fcmp ole float %139, %140, !dbg !11454
  br i1 %cmp116, label %land.lhs.true118, label %if.else128, !dbg !11455

land.lhs.true118:                                 ; preds = %if.else
  %141 = load float, float* %birthtime, align 4, !dbg !11456
  %142 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11457
  %cfra119 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %142, i32 0, i32 20, !dbg !11458
  %143 = load float, float* %cfra119, align 8, !dbg !11458
  %cmp120 = fcmp oge float %141, %143, !dbg !11459
  br i1 %cmp120, label %if.then122, label %if.else128, !dbg !11460

if.then122:                                       ; preds = %land.lhs.true118
  %144 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11461
  %145 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11463
  %146 = load float, float* %dfra, align 4, !dbg !11464
  %147 = load float, float* %timestep, align 4, !dbg !11465
  %mul123 = fmul float %146, %147, !dbg !11466
  %148 = load float, float* %cfra.addr, align 4, !dbg !11467
  call void @reset_particle(%struct.ParticleSimulationData* %144, %struct.ParticleData* %145, float %mul123, float %148), !dbg !11468
  %149 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11469
  %alive124 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %149, i32 0, i32 18, !dbg !11470
  store i16 3, i16* %alive124, align 2, !dbg !11471
  %150 = load float, float* %cfra.addr, align 4, !dbg !11472
  %151 = load float, float* %birthtime, align 4, !dbg !11473
  %sub125 = fsub float %150, %151, !dbg !11474
  %152 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11475
  %state126 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %152, i32 0, i32 0, !dbg !11476
  %time127 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state126, i32 0, i32 4, !dbg !11477
  store float %sub125, float* %time127, align 4, !dbg !11478
  br label %if.end133, !dbg !11479

if.else128:                                       ; preds = %land.lhs.true118, %if.else
  %153 = load float, float* %dietime, align 4, !dbg !11480
  %154 = load float, float* %cfra.addr, align 4, !dbg !11482
  %cmp129 = fcmp olt float %153, %154, !dbg !11483
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !11484

if.then131:                                       ; preds = %if.else128
  br label %if.end132, !dbg !11485

if.end132:                                        ; preds = %if.then131, %if.else128
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then122
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %cond.end
  %155 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11487
  %alive135 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %155, i32 0, i32 18, !dbg !11489
  %156 = load i16, i16* %alive135, align 2, !dbg !11489
  %conv136 = sext i16 %156 to i32, !dbg !11487
  %cmp137 = icmp eq i32 %conv136, 2, !dbg !11490
  br i1 %cmp137, label %land.lhs.true139, label %if.else149, !dbg !11491

land.lhs.true139:                                 ; preds = %if.end134
  %157 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11492
  %flag140 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %157, i32 0, i32 5, !dbg !11493
  %158 = load i32, i32* %flag140, align 8, !dbg !11493
  %and141 = and i32 %158, 32, !dbg !11494
  %tobool142 = icmp ne i32 %and141, 0, !dbg !11494
  br i1 %tobool142, label %if.then148, label %lor.lhs.false, !dbg !11495

lor.lhs.false:                                    ; preds = %land.lhs.true139
  %159 = load float, float* %cfra.addr, align 4, !dbg !11496
  %160 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11497
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %160, i32 0, i32 40, !dbg !11498
  %161 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !11498
  %step = getelementptr inbounds %struct.PointCache, %struct.PointCache* %161, i32 0, i32 3, !dbg !11499
  %162 = load i32, i32* %step, align 4, !dbg !11499
  %conv143 = sitofp i32 %162 to float, !dbg !11497
  %add144 = fadd float %159, %conv143, !dbg !11500
  %163 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11501
  %time145 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %163, i32 0, i32 6, !dbg !11502
  %164 = load float, float* %time145, align 4, !dbg !11502
  %cmp146 = fcmp ogt float %add144, %164, !dbg !11503
  br i1 %cmp146, label %if.then148, label %if.else149, !dbg !11504

if.then148:                                       ; preds = %lor.lhs.false, %land.lhs.true139
  %165 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11505
  %166 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11507
  %167 = load float, float* %dtime, align 4, !dbg !11508
  %168 = load float, float* %cfra.addr, align 4, !dbg !11509
  call void @reset_particle(%struct.ParticleSimulationData* %165, %struct.ParticleData* %166, float %167, float %168), !dbg !11510
  br label %if.end156, !dbg !11511

if.else149:                                       ; preds = %lor.lhs.false, %if.end134
  %169 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11512
  %phystype150 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %169, i32 0, i32 11, !dbg !11514
  %170 = load i16, i16* %phystype150, align 8, !dbg !11514
  %conv151 = sext i16 %170 to i32, !dbg !11512
  %cmp152 = icmp eq i32 %conv151, 0, !dbg !11515
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !11516

if.then154:                                       ; preds = %if.else149
  %171 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11517
  %172 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11519
  %173 = load float, float* %dtime, align 4, !dbg !11520
  %174 = load float, float* %cfra.addr, align 4, !dbg !11521
  call void @reset_particle(%struct.ParticleSimulationData* %171, %struct.ParticleData* %172, float %173, float %174), !dbg !11522
  br label %if.end155, !dbg !11523

if.end155:                                        ; preds = %if.then154, %if.else149
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.then148
  %175 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11524
  %alive157 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %175, i32 0, i32 18, !dbg !11524
  %176 = load i16, i16* %alive157, align 2, !dbg !11524
  %conv158 = sext i16 %176 to i32, !dbg !11524
  %cmp159 = icmp eq i32 %conv158, 3, !dbg !11524
  br i1 %cmp159, label %lor.end, label %lor.rhs, !dbg !11524

lor.rhs:                                          ; preds = %if.end156
  %177 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11524
  %alive161 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %177, i32 0, i32 18, !dbg !11524
  %178 = load i16, i16* %alive161, align 2, !dbg !11524
  %conv162 = sext i16 %178 to i32, !dbg !11524
  %cmp163 = icmp eq i32 %conv162, 4, !dbg !11524
  br label %lor.end, !dbg !11524

lor.end:                                          ; preds = %lor.rhs, %if.end156
  %179 = phi i1 [ true, %if.end156 ], [ %cmp163, %lor.rhs ]
  %lor.ext = zext i1 %179 to i32, !dbg !11524
  %cmp165 = icmp eq i32 %lor.ext, 0, !dbg !11526
  br i1 %cmp165, label %if.then172, label %lor.lhs.false167, !dbg !11527

lor.lhs.false167:                                 ; preds = %lor.end
  %180 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11528
  %flag168 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %180, i32 0, i32 17, !dbg !11529
  %181 = load i16, i16* %flag168, align 4, !dbg !11529
  %conv169 = sext i16 %181 to i32, !dbg !11528
  %and170 = and i32 %conv169, 3, !dbg !11530
  %tobool171 = icmp ne i32 %and170, 0, !dbg !11530
  br i1 %tobool171, label %if.then172, label %if.end175, !dbg !11531

if.then172:                                       ; preds = %lor.lhs.false167, %lor.end
  %182 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11532
  %state173 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %182, i32 0, i32 0, !dbg !11533
  %time174 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state173, i32 0, i32 4, !dbg !11534
  store float -1.000000e+00, float* %time174, align 4, !dbg !11535
  br label %if.end175, !dbg !11532

if.end175:                                        ; preds = %if.then172, %lor.lhs.false167
  br label %if.end176, !dbg !11536

if.end176:                                        ; preds = %if.end175, %for.body78
  br label %for.inc177, !dbg !11376

for.inc177:                                       ; preds = %if.end176
  %183 = load i32, i32* %p, align 4, !dbg !11374
  %inc178 = add nsw i32 %183, 1, !dbg !11374
  store i32 %inc178, i32* %p, align 4, !dbg !11374
  %184 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11374
  %incdec.ptr179 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %184, i32 1, !dbg !11374
  store %struct.ParticleData* %incdec.ptr179, %struct.ParticleData** %pa, align 8, !dbg !11374
  br label %for.cond74, !dbg !11374, !llvm.loop !11537

for.end180:                                       ; preds = %for.cond74
  %185 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11539
  %phystype181 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %185, i32 0, i32 11, !dbg !11540
  %186 = load i16, i16* %phystype181, align 8, !dbg !11540
  %conv182 = sext i16 %186 to i32, !dbg !11539
  switch i32 %conv182, label %sw.epilog354 [
    i32 1, label %sw.bb183
    i32 3, label %sw.bb209
    i32 4, label %sw.bb239
  ], !dbg !11541

sw.bb183:                                         ; preds = %for.end180
  store i32 0, i32* %p, align 4, !dbg !11542
  br label %for.cond184, !dbg !11542

for.cond184:                                      ; preds = %for.inc206, %sw.bb183
  %187 = load i32, i32* %p, align 4, !dbg !11546
  %188 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11546
  %totpart185 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %188, i32 0, i32 26, !dbg !11546
  %189 = load i32, i32* %totpart185, align 8, !dbg !11546
  %cmp186 = icmp slt i32 %187, %189, !dbg !11546
  br i1 %cmp186, label %for.body188, label %for.end208, !dbg !11542

for.body188:                                      ; preds = %for.cond184
  %190 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11548
  %particles189 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %190, i32 0, i32 3, !dbg !11548
  %191 = load %struct.ParticleData*, %struct.ParticleData** %particles189, align 8, !dbg !11548
  %192 = load i32, i32* %p, align 4, !dbg !11548
  %idx.ext = sext i32 %192 to i64, !dbg !11548
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %191, i64 %idx.ext, !dbg !11548
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %pa, align 8, !dbg !11548
  %state190 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr, i32 0, i32 0, !dbg !11548
  %time191 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state190, i32 0, i32 4, !dbg !11548
  %193 = load float, float* %time191, align 4, !dbg !11548
  %cmp192 = fcmp ogt float %193, 0.000000e+00, !dbg !11548
  br i1 %cmp192, label %if.then194, label %if.end205, !dbg !11546

if.then194:                                       ; preds = %for.body188
  %194 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11550
  %195 = load i32, i32* %p, align 4, !dbg !11552
  %196 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11553
  %state195 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %196, i32 0, i32 0, !dbg !11554
  %time196 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state195, i32 0, i32 4, !dbg !11555
  %197 = load float, float* %time196, align 4, !dbg !11555
  %198 = load float, float* %cfra.addr, align 4, !dbg !11556
  call void @basic_integrate(%struct.ParticleSimulationData* %194, i32 %195, float %197, float %198), !dbg !11557
  %199 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11558
  %colliders197 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %199, i32 0, i32 4, !dbg !11560
  %200 = load %struct.ListBase*, %struct.ListBase** %colliders197, align 8, !dbg !11560
  %tobool198 = icmp ne %struct.ListBase* %200, null, !dbg !11558
  br i1 %tobool198, label %if.then199, label %if.end202, !dbg !11561

if.then199:                                       ; preds = %if.then194
  %201 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11562
  %202 = load i32, i32* %p, align 4, !dbg !11563
  %203 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11564
  %state200 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %203, i32 0, i32 0, !dbg !11565
  %time201 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state200, i32 0, i32 4, !dbg !11566
  %204 = load float, float* %time201, align 4, !dbg !11566
  %205 = load float, float* %cfra.addr, align 4, !dbg !11567
  call void @collision_check(%struct.ParticleSimulationData* %201, i32 %202, float %204, float %205), !dbg !11568
  br label %if.end202, !dbg !11568

if.end202:                                        ; preds = %if.then199, %if.then194
  %206 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11569
  %207 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11570
  %208 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11571
  %state203 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %208, i32 0, i32 0, !dbg !11572
  %time204 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state203, i32 0, i32 4, !dbg !11573
  %209 = load float, float* %time204, align 4, !dbg !11573
  %210 = load float, float* %timestep, align 4, !dbg !11574
  call void @basic_rotate(%struct.ParticleSettings* %206, %struct.ParticleData* %207, float %209, float %210), !dbg !11575
  br label %if.end205, !dbg !11576

if.end205:                                        ; preds = %if.end202, %for.body188
  br label %for.inc206, !dbg !11548

for.inc206:                                       ; preds = %if.end205
  %211 = load i32, i32* %p, align 4, !dbg !11546
  %inc207 = add nsw i32 %211, 1, !dbg !11546
  store i32 %inc207, i32* %p, align 4, !dbg !11546
  br label %for.cond184, !dbg !11546, !llvm.loop !11577

for.end208:                                       ; preds = %for.cond184
  br label %sw.epilog354, !dbg !11579

sw.bb209:                                         ; preds = %for.end180
  store i32 0, i32* %p, align 4, !dbg !11580
  br label %for.cond210, !dbg !11580

for.cond210:                                      ; preds = %for.inc236, %sw.bb209
  %212 = load i32, i32* %p, align 4, !dbg !11583
  %213 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11583
  %totpart211 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %213, i32 0, i32 26, !dbg !11583
  %214 = load i32, i32* %totpart211, align 8, !dbg !11583
  %cmp212 = icmp slt i32 %212, %214, !dbg !11583
  br i1 %cmp212, label %for.body214, label %for.end238, !dbg !11580

for.body214:                                      ; preds = %for.cond210
  %215 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11585
  %particles215 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %215, i32 0, i32 3, !dbg !11585
  %216 = load %struct.ParticleData*, %struct.ParticleData** %particles215, align 8, !dbg !11585
  %217 = load i32, i32* %p, align 4, !dbg !11585
  %idx.ext216 = sext i32 %217 to i64, !dbg !11585
  %add.ptr217 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %216, i64 %idx.ext216, !dbg !11585
  store %struct.ParticleData* %add.ptr217, %struct.ParticleData** %pa, align 8, !dbg !11585
  %state218 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr217, i32 0, i32 0, !dbg !11585
  %time219 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state218, i32 0, i32 4, !dbg !11585
  %218 = load float, float* %time219, align 4, !dbg !11585
  %cmp220 = fcmp ogt float %218, 0.000000e+00, !dbg !11585
  br i1 %cmp220, label %if.then222, label %if.end235, !dbg !11583

if.then222:                                       ; preds = %for.body214
  %goal_ob = getelementptr inbounds %struct.BoidBrainData, %struct.BoidBrainData* %bbd, i32 0, i32 7, !dbg !11587
  store %struct.Object* null, %struct.Object** %goal_ob, align 8, !dbg !11589
  %219 = load i32, i32* %p, align 4, !dbg !11590
  %220 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11591
  call void @boid_brain(%struct.BoidBrainData* %bbd, i32 %219, %struct.ParticleData* %220), !dbg !11592
  %221 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11593
  %alive223 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %221, i32 0, i32 18, !dbg !11595
  %222 = load i16, i16* %alive223, align 2, !dbg !11595
  %conv224 = sext i16 %222 to i32, !dbg !11593
  %cmp225 = icmp ne i32 %conv224, 4, !dbg !11596
  br i1 %cmp225, label %if.then227, label %if.end234, !dbg !11597

if.then227:                                       ; preds = %if.then222
  %223 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11598
  call void @boid_body(%struct.BoidBrainData* %bbd, %struct.ParticleData* %223), !dbg !11600
  %224 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11601
  %colliders228 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %224, i32 0, i32 4, !dbg !11603
  %225 = load %struct.ListBase*, %struct.ListBase** %colliders228, align 8, !dbg !11603
  %tobool229 = icmp ne %struct.ListBase* %225, null, !dbg !11601
  br i1 %tobool229, label %if.then230, label %if.end233, !dbg !11604

if.then230:                                       ; preds = %if.then227
  %226 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11605
  %227 = load i32, i32* %p, align 4, !dbg !11606
  %228 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11607
  %state231 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %228, i32 0, i32 0, !dbg !11608
  %time232 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state231, i32 0, i32 4, !dbg !11609
  %229 = load float, float* %time232, align 4, !dbg !11609
  %230 = load float, float* %cfra.addr, align 4, !dbg !11610
  call void @collision_check(%struct.ParticleSimulationData* %226, i32 %227, float %229, float %230), !dbg !11611
  br label %if.end233, !dbg !11611

if.end233:                                        ; preds = %if.then230, %if.then227
  br label %if.end234, !dbg !11612

if.end234:                                        ; preds = %if.end233, %if.then222
  br label %if.end235, !dbg !11613

if.end235:                                        ; preds = %if.end234, %for.body214
  br label %for.inc236, !dbg !11585

for.inc236:                                       ; preds = %if.end235
  %231 = load i32, i32* %p, align 4, !dbg !11583
  %inc237 = add nsw i32 %231, 1, !dbg !11583
  store i32 %inc237, i32* %p, align 4, !dbg !11583
  br label %for.cond210, !dbg !11583, !llvm.loop !11614

for.end238:                                       ; preds = %for.cond210
  br label %sw.epilog354, !dbg !11616

sw.bb239:                                         ; preds = %for.end180
  call void @llvm.dbg.declare(metadata %struct.SPHData* %sphdata, metadata !11617, metadata !DIExpression()), !dbg !11619
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part240, metadata !11620, metadata !DIExpression()), !dbg !11621
  %232 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11622
  %psys241 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %232, i32 0, i32 2, !dbg !11623
  %233 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys241, align 8, !dbg !11623
  %part242 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %233, i32 0, i32 2, !dbg !11624
  %234 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part242, align 8, !dbg !11624
  store %struct.ParticleSettings* %234, %struct.ParticleSettings** %part240, align 8, !dbg !11621
  %235 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11625
  call void @psys_sph_init(%struct.ParticleSimulationData* %235, %struct.SPHData* %sphdata), !dbg !11626
  %236 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part240, align 8, !dbg !11627
  %fluid = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %236, i32 0, i32 3, !dbg !11629
  %237 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !11629
  %solver = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %237, i32 0, i32 15, !dbg !11630
  %238 = load i16, i16* %solver, align 4, !dbg !11630
  %conv243 = sext i16 %238 to i32, !dbg !11627
  %cmp244 = icmp eq i32 %conv243, 0, !dbg !11631
  br i1 %cmp244, label %if.then246, label %if.else281, !dbg !11632

if.then246:                                       ; preds = %sw.bb239
  store i32 0, i32* %p, align 4, !dbg !11633
  br label %for.cond247, !dbg !11633

for.cond247:                                      ; preds = %for.inc278, %if.then246
  %239 = load i32, i32* %p, align 4, !dbg !11636
  %240 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11636
  %totpart248 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %240, i32 0, i32 26, !dbg !11636
  %241 = load i32, i32* %totpart248, align 8, !dbg !11636
  %cmp249 = icmp slt i32 %239, %241, !dbg !11636
  br i1 %cmp249, label %for.body251, label %for.end280, !dbg !11633

for.body251:                                      ; preds = %for.cond247
  %242 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11638
  %particles252 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %242, i32 0, i32 3, !dbg !11638
  %243 = load %struct.ParticleData*, %struct.ParticleData** %particles252, align 8, !dbg !11638
  %244 = load i32, i32* %p, align 4, !dbg !11638
  %idx.ext253 = sext i32 %244 to i64, !dbg !11638
  %add.ptr254 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %243, i64 %idx.ext253, !dbg !11638
  store %struct.ParticleData* %add.ptr254, %struct.ParticleData** %pa, align 8, !dbg !11638
  %state255 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr254, i32 0, i32 0, !dbg !11638
  %time256 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state255, i32 0, i32 4, !dbg !11638
  %245 = load float, float* %time256, align 4, !dbg !11638
  %cmp257 = fcmp ogt float %245, 0.000000e+00, !dbg !11638
  br i1 %cmp257, label %if.then259, label %if.end277, !dbg !11636

if.then259:                                       ; preds = %for.body251
  %246 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11640
  %247 = load i32, i32* %p, align 4, !dbg !11642
  %248 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11643
  %state260 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %248, i32 0, i32 0, !dbg !11644
  %time261 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state260, i32 0, i32 4, !dbg !11645
  %249 = load float, float* %time261, align 4, !dbg !11645
  %250 = load float, float* %cfra.addr, align 4, !dbg !11646
  call void @basic_integrate(%struct.ParticleSimulationData* %246, i32 %247, float %249, float %250), !dbg !11647
  %251 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11648
  %252 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11649
  %253 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11650
  %state262 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %253, i32 0, i32 0, !dbg !11651
  %time263 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state262, i32 0, i32 4, !dbg !11652
  %254 = load float, float* %time263, align 4, !dbg !11652
  call void @sph_integrate(%struct.ParticleSimulationData* %251, %struct.ParticleData* %252, float %254, %struct.SPHData* %sphdata), !dbg !11653
  %255 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11654
  %colliders264 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %255, i32 0, i32 4, !dbg !11656
  %256 = load %struct.ListBase*, %struct.ListBase** %colliders264, align 8, !dbg !11656
  %tobool265 = icmp ne %struct.ListBase* %256, null, !dbg !11654
  br i1 %tobool265, label %if.then266, label %if.end269, !dbg !11657

if.then266:                                       ; preds = %if.then259
  %257 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11658
  %258 = load i32, i32* %p, align 4, !dbg !11659
  %259 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11660
  %state267 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %259, i32 0, i32 0, !dbg !11661
  %time268 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state267, i32 0, i32 4, !dbg !11662
  %260 = load float, float* %time268, align 4, !dbg !11662
  %261 = load float, float* %cfra.addr, align 4, !dbg !11663
  call void @collision_check(%struct.ParticleSimulationData* %257, i32 %258, float %260, float %261), !dbg !11664
  br label %if.end269, !dbg !11664

if.end269:                                        ; preds = %if.then266, %if.then259
  %262 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part240, align 8, !dbg !11665
  %263 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11666
  %264 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11667
  %state270 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %264, i32 0, i32 0, !dbg !11668
  %time271 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state270, i32 0, i32 4, !dbg !11669
  %265 = load float, float* %time271, align 4, !dbg !11669
  %266 = load float, float* %timestep, align 4, !dbg !11670
  call void @basic_rotate(%struct.ParticleSettings* %262, %struct.ParticleData* %263, float %265, float %266), !dbg !11671
  %267 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part240, align 8, !dbg !11672
  %time_flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %267, i32 0, i32 67, !dbg !11674
  %268 = load i16, i16* %time_flag, align 4, !dbg !11674
  %conv272 = sext i16 %268 to i32, !dbg !11672
  %and273 = and i32 %conv272, 1, !dbg !11675
  %tobool274 = icmp ne i32 %and273, 0, !dbg !11675
  br i1 %tobool274, label %if.then275, label %if.end276, !dbg !11676

if.then275:                                       ; preds = %if.end269
  %269 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11677
  %270 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11678
  %271 = load float, float* %dtime, align 4, !dbg !11679
  call void @update_courant_num(%struct.ParticleSimulationData* %269, %struct.ParticleData* %270, float %271, %struct.SPHData* %sphdata), !dbg !11680
  br label %if.end276, !dbg !11680

if.end276:                                        ; preds = %if.then275, %if.end269
  br label %if.end277, !dbg !11681

if.end277:                                        ; preds = %if.end276, %for.body251
  br label %for.inc278, !dbg !11638

for.inc278:                                       ; preds = %if.end277
  %272 = load i32, i32* %p, align 4, !dbg !11636
  %inc279 = add nsw i32 %272, 1, !dbg !11636
  store i32 %inc279, i32* %p, align 4, !dbg !11636
  br label %for.cond247, !dbg !11636, !llvm.loop !11682

for.end280:                                       ; preds = %for.cond247
  %273 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11684
  %274 = load float, float* %timestep, align 4, !dbg !11685
  call void @sph_springs_modify(%struct.ParticleSystem* %273, float %274), !dbg !11686
  br label %if.end353, !dbg !11687

if.else281:                                       ; preds = %sw.bb239
  store i32 0, i32* %p, align 4, !dbg !11688
  br label %for.cond282, !dbg !11688

for.cond282:                                      ; preds = %for.inc298, %if.else281
  %275 = load i32, i32* %p, align 4, !dbg !11691
  %276 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11691
  %totpart283 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %276, i32 0, i32 26, !dbg !11691
  %277 = load i32, i32* %totpart283, align 8, !dbg !11691
  %cmp284 = icmp slt i32 %275, %277, !dbg !11691
  br i1 %cmp284, label %for.body286, label %for.end300, !dbg !11688

for.body286:                                      ; preds = %for.cond282
  %278 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11693
  %particles287 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %278, i32 0, i32 3, !dbg !11693
  %279 = load %struct.ParticleData*, %struct.ParticleData** %particles287, align 8, !dbg !11693
  %280 = load i32, i32* %p, align 4, !dbg !11693
  %idx.ext288 = sext i32 %280 to i64, !dbg !11693
  %add.ptr289 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %279, i64 %idx.ext288, !dbg !11693
  store %struct.ParticleData* %add.ptr289, %struct.ParticleData** %pa, align 8, !dbg !11693
  %state290 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr289, i32 0, i32 0, !dbg !11693
  %time291 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state290, i32 0, i32 4, !dbg !11693
  %281 = load float, float* %time291, align 4, !dbg !11693
  %cmp292 = fcmp ogt float %281, 0.000000e+00, !dbg !11693
  br i1 %cmp292, label %if.then294, label %if.end297, !dbg !11691

if.then294:                                       ; preds = %for.body286
  %282 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11695
  %283 = load i32, i32* %p, align 4, !dbg !11697
  %284 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11698
  %state295 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %284, i32 0, i32 0, !dbg !11699
  %time296 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state295, i32 0, i32 4, !dbg !11700
  %285 = load float, float* %time296, align 4, !dbg !11700
  %286 = load float, float* %cfra.addr, align 4, !dbg !11701
  call void @basic_integrate(%struct.ParticleSimulationData* %282, i32 %283, float %285, float %286), !dbg !11702
  br label %if.end297, !dbg !11703

if.end297:                                        ; preds = %if.then294, %for.body286
  br label %for.inc298, !dbg !11693

for.inc298:                                       ; preds = %if.end297
  %287 = load i32, i32* %p, align 4, !dbg !11691
  %inc299 = add nsw i32 %287, 1, !dbg !11691
  store i32 %inc299, i32* %p, align 4, !dbg !11691
  br label %for.cond282, !dbg !11691, !llvm.loop !11704

for.end300:                                       ; preds = %for.cond282
  store i32 0, i32* %p, align 4, !dbg !11706
  br label %for.cond301, !dbg !11706

for.cond301:                                      ; preds = %for.inc317, %for.end300
  %288 = load i32, i32* %p, align 4, !dbg !11708
  %289 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11708
  %totpart302 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %289, i32 0, i32 26, !dbg !11708
  %290 = load i32, i32* %totpart302, align 8, !dbg !11708
  %cmp303 = icmp slt i32 %288, %290, !dbg !11708
  br i1 %cmp303, label %for.body305, label %for.end319, !dbg !11706

for.body305:                                      ; preds = %for.cond301
  %291 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11710
  %particles306 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %291, i32 0, i32 3, !dbg !11710
  %292 = load %struct.ParticleData*, %struct.ParticleData** %particles306, align 8, !dbg !11710
  %293 = load i32, i32* %p, align 4, !dbg !11710
  %idx.ext307 = sext i32 %293 to i64, !dbg !11710
  %add.ptr308 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %292, i64 %idx.ext307, !dbg !11710
  store %struct.ParticleData* %add.ptr308, %struct.ParticleData** %pa, align 8, !dbg !11710
  %state309 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr308, i32 0, i32 0, !dbg !11710
  %time310 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state309, i32 0, i32 4, !dbg !11710
  %294 = load float, float* %time310, align 4, !dbg !11710
  %cmp311 = fcmp ogt float %294, 0.000000e+00, !dbg !11710
  br i1 %cmp311, label %if.then313, label %if.end316, !dbg !11708

if.then313:                                       ; preds = %for.body305
  %295 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11712
  %296 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11714
  %state314 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %296, i32 0, i32 0, !dbg !11715
  %time315 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state314, i32 0, i32 4, !dbg !11716
  %297 = load float, float* %time315, align 4, !dbg !11716
  call void @sphclassical_calc_dens(%struct.ParticleData* %295, float %297, %struct.SPHData* %sphdata), !dbg !11717
  br label %if.end316, !dbg !11718

if.end316:                                        ; preds = %if.then313, %for.body305
  br label %for.inc317, !dbg !11710

for.inc317:                                       ; preds = %if.end316
  %298 = load i32, i32* %p, align 4, !dbg !11708
  %inc318 = add nsw i32 %298, 1, !dbg !11708
  store i32 %inc318, i32* %p, align 4, !dbg !11708
  br label %for.cond301, !dbg !11708, !llvm.loop !11719

for.end319:                                       ; preds = %for.cond301
  store i32 0, i32* %p, align 4, !dbg !11721
  br label %for.cond320, !dbg !11721

for.cond320:                                      ; preds = %for.inc350, %for.end319
  %299 = load i32, i32* %p, align 4, !dbg !11723
  %300 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11723
  %totpart321 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %300, i32 0, i32 26, !dbg !11723
  %301 = load i32, i32* %totpart321, align 8, !dbg !11723
  %cmp322 = icmp slt i32 %299, %301, !dbg !11723
  br i1 %cmp322, label %for.body324, label %for.end352, !dbg !11721

for.body324:                                      ; preds = %for.cond320
  %302 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11725
  %particles325 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %302, i32 0, i32 3, !dbg !11725
  %303 = load %struct.ParticleData*, %struct.ParticleData** %particles325, align 8, !dbg !11725
  %304 = load i32, i32* %p, align 4, !dbg !11725
  %idx.ext326 = sext i32 %304 to i64, !dbg !11725
  %add.ptr327 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %303, i64 %idx.ext326, !dbg !11725
  store %struct.ParticleData* %add.ptr327, %struct.ParticleData** %pa, align 8, !dbg !11725
  %state328 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr327, i32 0, i32 0, !dbg !11725
  %time329 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state328, i32 0, i32 4, !dbg !11725
  %305 = load float, float* %time329, align 4, !dbg !11725
  %cmp330 = fcmp ogt float %305, 0.000000e+00, !dbg !11725
  br i1 %cmp330, label %if.then332, label %if.end349, !dbg !11723

if.then332:                                       ; preds = %for.body324
  %306 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11727
  %307 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11729
  %308 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11730
  %state333 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %308, i32 0, i32 0, !dbg !11731
  %time334 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state333, i32 0, i32 4, !dbg !11732
  %309 = load float, float* %time334, align 4, !dbg !11732
  call void @sph_integrate(%struct.ParticleSimulationData* %306, %struct.ParticleData* %307, float %309, %struct.SPHData* %sphdata), !dbg !11733
  %310 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11734
  %colliders335 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %310, i32 0, i32 4, !dbg !11736
  %311 = load %struct.ListBase*, %struct.ListBase** %colliders335, align 8, !dbg !11736
  %tobool336 = icmp ne %struct.ListBase* %311, null, !dbg !11734
  br i1 %tobool336, label %if.then337, label %if.end340, !dbg !11737

if.then337:                                       ; preds = %if.then332
  %312 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11738
  %313 = load i32, i32* %p, align 4, !dbg !11739
  %314 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11740
  %state338 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %314, i32 0, i32 0, !dbg !11741
  %time339 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state338, i32 0, i32 4, !dbg !11742
  %315 = load float, float* %time339, align 4, !dbg !11742
  %316 = load float, float* %cfra.addr, align 4, !dbg !11743
  call void @collision_check(%struct.ParticleSimulationData* %312, i32 %313, float %315, float %316), !dbg !11744
  br label %if.end340, !dbg !11744

if.end340:                                        ; preds = %if.then337, %if.then332
  %317 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part240, align 8, !dbg !11745
  %318 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11746
  %319 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11747
  %state341 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %319, i32 0, i32 0, !dbg !11748
  %time342 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state341, i32 0, i32 4, !dbg !11749
  %320 = load float, float* %time342, align 4, !dbg !11749
  %321 = load float, float* %timestep, align 4, !dbg !11750
  call void @basic_rotate(%struct.ParticleSettings* %317, %struct.ParticleData* %318, float %320, float %321), !dbg !11751
  %322 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part240, align 8, !dbg !11752
  %time_flag343 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %322, i32 0, i32 67, !dbg !11754
  %323 = load i16, i16* %time_flag343, align 4, !dbg !11754
  %conv344 = sext i16 %323 to i32, !dbg !11752
  %and345 = and i32 %conv344, 1, !dbg !11755
  %tobool346 = icmp ne i32 %and345, 0, !dbg !11755
  br i1 %tobool346, label %if.then347, label %if.end348, !dbg !11756

if.then347:                                       ; preds = %if.end340
  %324 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11757
  %325 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11758
  %326 = load float, float* %dtime, align 4, !dbg !11759
  call void @update_courant_num(%struct.ParticleSimulationData* %324, %struct.ParticleData* %325, float %326, %struct.SPHData* %sphdata), !dbg !11760
  br label %if.end348, !dbg !11760

if.end348:                                        ; preds = %if.then347, %if.end340
  br label %if.end349, !dbg !11761

if.end349:                                        ; preds = %if.end348, %for.body324
  br label %for.inc350, !dbg !11725

for.inc350:                                       ; preds = %if.end349
  %327 = load i32, i32* %p, align 4, !dbg !11723
  %inc351 = add nsw i32 %327, 1, !dbg !11723
  store i32 %inc351, i32* %p, align 4, !dbg !11723
  br label %for.cond320, !dbg !11723, !llvm.loop !11762

for.end352:                                       ; preds = %for.cond320
  br label %if.end353

if.end353:                                        ; preds = %for.end352, %for.end280
  call void @psys_sph_finalise(%struct.SPHData* %sphdata), !dbg !11764
  br label %sw.epilog354, !dbg !11765

sw.epilog354:                                     ; preds = %for.end180, %if.end353, %for.end238, %for.end208
  store i32 0, i32* %p, align 4, !dbg !11766
  br label %for.cond355, !dbg !11766

for.cond355:                                      ; preds = %for.inc382, %sw.epilog354
  %328 = load i32, i32* %p, align 4, !dbg !11768
  %329 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11768
  %totpart356 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %329, i32 0, i32 26, !dbg !11768
  %330 = load i32, i32* %totpart356, align 8, !dbg !11768
  %cmp357 = icmp slt i32 %328, %330, !dbg !11768
  br i1 %cmp357, label %for.body359, label %for.end384, !dbg !11766

for.body359:                                      ; preds = %for.cond355
  %331 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11770
  %particles360 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %331, i32 0, i32 3, !dbg !11770
  %332 = load %struct.ParticleData*, %struct.ParticleData** %particles360, align 8, !dbg !11770
  %333 = load i32, i32* %p, align 4, !dbg !11770
  %idx.ext361 = sext i32 %333 to i64, !dbg !11770
  %add.ptr362 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %332, i64 %idx.ext361, !dbg !11770
  store %struct.ParticleData* %add.ptr362, %struct.ParticleData** %pa, align 8, !dbg !11770
  %state363 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr362, i32 0, i32 0, !dbg !11770
  %time364 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state363, i32 0, i32 4, !dbg !11770
  %334 = load float, float* %time364, align 4, !dbg !11770
  %cmp365 = fcmp ogt float %334, 0.000000e+00, !dbg !11770
  br i1 %cmp365, label %if.then367, label %if.end381, !dbg !11768

if.then367:                                       ; preds = %for.body359
  %335 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11772
  %alive368 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %335, i32 0, i32 18, !dbg !11775
  %336 = load i16, i16* %alive368, align 2, !dbg !11775
  %conv369 = sext i16 %336 to i32, !dbg !11772
  %cmp370 = icmp eq i32 %conv369, 4, !dbg !11776
  br i1 %cmp370, label %if.then372, label %if.else377, !dbg !11777

if.then372:                                       ; preds = %if.then367
  %337 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11778
  %alive373 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %337, i32 0, i32 18, !dbg !11780
  store i16 1, i16* %alive373, align 2, !dbg !11781
  %338 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11782
  %dietime374 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %338, i32 0, i32 8, !dbg !11783
  %339 = load float, float* %dietime374, align 4, !dbg !11783
  %340 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11784
  %state375 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %340, i32 0, i32 0, !dbg !11785
  %time376 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state375, i32 0, i32 4, !dbg !11786
  store float %339, float* %time376, align 4, !dbg !11787
  br label %if.end380, !dbg !11788

if.else377:                                       ; preds = %if.then367
  %341 = load float, float* %cfra.addr, align 4, !dbg !11789
  %342 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11790
  %state378 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %342, i32 0, i32 0, !dbg !11791
  %time379 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state378, i32 0, i32 4, !dbg !11792
  store float %341, float* %time379, align 4, !dbg !11793
  br label %if.end380

if.end380:                                        ; preds = %if.else377, %if.then372
  br label %if.end381, !dbg !11794

if.end381:                                        ; preds = %if.end380, %for.body359
  br label %for.inc382, !dbg !11770

for.inc382:                                       ; preds = %if.end381
  %343 = load i32, i32* %p, align 4, !dbg !11768
  %inc383 = add nsw i32 %343, 1, !dbg !11768
  store i32 %inc383, i32* %p, align 4, !dbg !11768
  br label %for.cond355, !dbg !11768, !llvm.loop !11795

for.end384:                                       ; preds = %for.cond355
  %344 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11797
  %colliders385 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %344, i32 0, i32 4, !dbg !11798
  call void @free_collider_cache(%struct.ListBase** %colliders385), !dbg !11799
  %345 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !11800
  call void @BLI_rng_free(%struct.RNG* %345), !dbg !11801
  br label %return, !dbg !11802

return:                                           ; preds = %for.end384, %for.end
  ret void, !dbg !11802
}

; Function Attrs: noinline nounwind uwtable
define internal float @update_timestep(%struct.ParticleSystem* %psys, %struct.ParticleSimulationData* %sim, float %t_frac) #0 !dbg !11803 {
entry:
  %retval = alloca float, align 4
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %t_frac.addr = alloca float, align 4
  %dt_target = alloca float, align 4
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !11806, metadata !DIExpression()), !dbg !11807
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !11808, metadata !DIExpression()), !dbg !11809
  store float %t_frac, float* %t_frac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t_frac.addr, metadata !11810, metadata !DIExpression()), !dbg !11811
  call void @llvm.dbg.declare(metadata float* %dt_target, metadata !11812, metadata !DIExpression()), !dbg !11813
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11814
  %courant_num = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 5, !dbg !11816
  %1 = load float, float* %courant_num, align 8, !dbg !11816
  %cmp = fcmp oeq float %1, 0.000000e+00, !dbg !11817
  br i1 %cmp, label %if.then, label %if.else, !dbg !11818

if.then:                                          ; preds = %entry
  store float 1.000000e+00, float* %dt_target, align 4, !dbg !11819
  br label %if.end, !dbg !11820

if.else:                                          ; preds = %entry
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11821
  %dt_frac = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 49, !dbg !11822
  %3 = load float, float* %dt_frac, align 8, !dbg !11822
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11823
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %4, i32 0, i32 2, !dbg !11824
  %5 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11824
  %courant_target = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %5, i32 0, i32 58, !dbg !11825
  %6 = load float, float* %courant_target, align 8, !dbg !11825
  %7 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11826
  %courant_num1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %7, i32 0, i32 5, !dbg !11827
  %8 = load float, float* %courant_num1, align 8, !dbg !11827
  %div = fdiv float %6, %8, !dbg !11828
  %mul = fmul float %3, %div, !dbg !11829
  store float %mul, float* %dt_target, align 4, !dbg !11830
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load float, float* %dt_target, align 4, !dbg !11831
  %cmp2 = fcmp olt float %9, 0x3F8446F860000000, !dbg !11833
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !11834

if.then3:                                         ; preds = %if.end
  store float 0x3F8446F860000000, float* %dt_target, align 4, !dbg !11835
  br label %if.end11, !dbg !11836

if.else4:                                         ; preds = %if.end
  %10 = load float, float* %dt_target, align 4, !dbg !11837
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11839
  %part5 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 2, !dbg !11840
  %12 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part5, align 8, !dbg !11840
  %call = call float @get_base_time_step(%struct.ParticleSettings* %12), !dbg !11841
  %cmp6 = fcmp ogt float %10, %call, !dbg !11842
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !11843

if.then7:                                         ; preds = %if.else4
  %13 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11844
  %part8 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %13, i32 0, i32 2, !dbg !11845
  %14 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part8, align 8, !dbg !11845
  %call9 = call float @get_base_time_step(%struct.ParticleSettings* %14), !dbg !11846
  store float %call9, float* %dt_target, align 4, !dbg !11847
  br label %if.end10, !dbg !11848

if.end10:                                         ; preds = %if.then7, %if.else4
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then3
  %15 = load float, float* %dt_target, align 4, !dbg !11849
  %16 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11851
  %dt_frac12 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %16, i32 0, i32 49, !dbg !11852
  %17 = load float, float* %dt_frac12, align 8, !dbg !11852
  %cmp13 = fcmp ogt float %15, %17, !dbg !11853
  br i1 %cmp13, label %if.then14, label %if.else18, !dbg !11854

if.then14:                                        ; preds = %if.end11
  %18 = load float, float* %dt_target, align 4, !dbg !11855
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11856
  %dt_frac15 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %19, i32 0, i32 49, !dbg !11857
  %20 = load float, float* %dt_frac15, align 8, !dbg !11857
  %call16 = call float @interpf(float %18, float %20, float 0x3FB99999A0000000), !dbg !11858
  %21 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11859
  %dt_frac17 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %21, i32 0, i32 49, !dbg !11860
  store float %call16, float* %dt_frac17, align 8, !dbg !11861
  br label %if.end20, !dbg !11859

if.else18:                                        ; preds = %if.end11
  %22 = load float, float* %dt_target, align 4, !dbg !11862
  %23 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11863
  %dt_frac19 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %23, i32 0, i32 49, !dbg !11864
  store float %22, float* %dt_frac19, align 8, !dbg !11865
  br label %if.end20

if.end20:                                         ; preds = %if.else18, %if.then14
  %24 = load float, float* %t_frac.addr, align 4, !dbg !11866
  %cmp21 = fcmp oeq float %24, 1.000000e+00, !dbg !11868
  br i1 %cmp21, label %if.then22, label %if.else24, !dbg !11869

if.then22:                                        ; preds = %if.end20
  %25 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11870
  %dt_frac23 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %25, i32 0, i32 49, !dbg !11871
  %26 = load float, float* %dt_frac23, align 8, !dbg !11871
  store float %26, float* %retval, align 4, !dbg !11872
  br label %return, !dbg !11872

if.else24:                                        ; preds = %if.end20
  %27 = load float, float* %t_frac.addr, align 4, !dbg !11873
  %28 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11875
  %dt_frac25 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %28, i32 0, i32 49, !dbg !11876
  %29 = load float, float* %dt_frac25, align 8, !dbg !11876
  %mul26 = fmul float %29, 1.500000e+00, !dbg !11877
  %add = fadd float %27, %mul26, !dbg !11878
  %cmp27 = fcmp oge float %add, 1.000000e+00, !dbg !11879
  br i1 %cmp27, label %if.then28, label %if.else29, !dbg !11880

if.then28:                                        ; preds = %if.else24
  %30 = load float, float* %t_frac.addr, align 4, !dbg !11881
  %sub = fsub float 1.000000e+00, %30, !dbg !11882
  store float %sub, float* %retval, align 4, !dbg !11883
  br label %return, !dbg !11883

if.else29:                                        ; preds = %if.else24
  %31 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11884
  %dt_frac30 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %31, i32 0, i32 49, !dbg !11885
  %32 = load float, float* %dt_frac30, align 8, !dbg !11885
  store float %32, float* %retval, align 4, !dbg !11886
  br label %return, !dbg !11886

return:                                           ; preds = %if.else29, %if.then28, %if.then22
  %33 = load float, float* %retval, align 4, !dbg !11887
  ret float %33, !dbg !11887
}

declare dso_local void @BKE_ptcache_free_mem(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @psys_update_effectors(%struct.ParticleSimulationData* %sim) #0 !dbg !11888 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !11889, metadata !DIExpression()), !dbg !11890
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11891
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !11892
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !11892
  %effectors = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 42, !dbg !11893
  call void @pdEndEffectors(%struct.ListBase** %effectors), !dbg !11894
  %2 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11895
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %2, i32 0, i32 0, !dbg !11896
  %3 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11896
  %4 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11897
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %4, i32 0, i32 1, !dbg !11898
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11898
  %6 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11899
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %6, i32 0, i32 2, !dbg !11900
  %7 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !11900
  %8 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11901
  %psys2 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %8, i32 0, i32 2, !dbg !11902
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys2, align 8, !dbg !11902
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 2, !dbg !11903
  %10 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11903
  %effector_weights = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %10, i32 0, i32 4, !dbg !11904
  %11 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !11904
  %call = call %struct.ListBase* @pdInitEffectors(%struct.Scene* %3, %struct.Object* %5, %struct.ParticleSystem* %7, %struct.EffectorWeights* %11, i8 zeroext 1), !dbg !11905
  %12 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11906
  %psys3 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %12, i32 0, i32 2, !dbg !11907
  %13 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys3, align 8, !dbg !11907
  %effectors4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %13, i32 0, i32 42, !dbg !11908
  store %struct.ListBase* %call, %struct.ListBase** %effectors4, align 8, !dbg !11909
  %14 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11910
  %15 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !11911
  %psys5 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %15, i32 0, i32 2, !dbg !11912
  %16 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys5, align 8, !dbg !11912
  %effectors6 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %16, i32 0, i32 42, !dbg !11913
  %17 = load %struct.ListBase*, %struct.ListBase** %effectors6, align 8, !dbg !11913
  call void @precalc_guides(%struct.ParticleSimulationData* %14, %struct.ListBase* %17), !dbg !11914
  ret void, !dbg !11915
}

declare dso_local %struct.LatticeDeformData* @psys_create_lattice_deform_data(%struct.ParticleSimulationData*) #2

declare dso_local void @pdEndEffectors(%struct.ListBase**) #2

declare dso_local %struct.ListBase* @pdInitEffectors(%struct.Scene*, %struct.Object*, %struct.ParticleSystem*, %struct.EffectorWeights*, i8 zeroext) #2

declare dso_local void @precalc_guides(%struct.ParticleSimulationData*, %struct.ListBase*) #2

declare dso_local void @psys_free_children(%struct.ParticleSystem*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_psys_tot_child(%struct.Scene* %scene, %struct.ParticleSystem* %psys) #0 !dbg !11916 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11919, metadata !DIExpression()), !dbg !11920
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !11921, metadata !DIExpression()), !dbg !11922
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11923
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 26, !dbg !11924
  %1 = load i32, i32* %totpart, align 8, !dbg !11924
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11925
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11926
  %call = call i32 @get_psys_child_number(%struct.Scene* %2, %struct.ParticleSystem* %3), !dbg !11927
  %mul = mul nsw i32 %1, %call, !dbg !11928
  ret i32 %mul, !dbg !11929
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_psys_child_number(%struct.Scene* %scene, %struct.ParticleSystem* %psys) #0 !dbg !11930 {
entry:
  %retval = alloca i32, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %nbr = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11931, metadata !DIExpression()), !dbg !11932
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !11933, metadata !DIExpression()), !dbg !11934
  call void @llvm.dbg.declare(metadata i32* %nbr, metadata !11935, metadata !DIExpression()), !dbg !11936
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11937
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 2, !dbg !11939
  %1 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11939
  %childtype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %1, i32 0, i32 19, !dbg !11940
  %2 = load i16, i16* %childtype, align 4, !dbg !11940
  %tobool = icmp ne i16 %2, 0, !dbg !11937
  br i1 %tobool, label %if.end, label %if.then, !dbg !11941

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11942
  br label %return, !dbg !11942

if.end:                                           ; preds = %entry
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11943
  %renderdata = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 39, !dbg !11945
  %4 = load i8*, i8** %renderdata, align 8, !dbg !11945
  %tobool1 = icmp ne i8* %4, null, !dbg !11943
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !11946

if.then2:                                         ; preds = %if.end
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11947
  %part3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 2, !dbg !11948
  %6 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part3, align 8, !dbg !11948
  %ren_child_nbr = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %6, i32 0, i32 90, !dbg !11949
  %7 = load i32, i32* %ren_child_nbr, align 8, !dbg !11949
  store i32 %7, i32* %nbr, align 4, !dbg !11950
  br label %if.end5, !dbg !11951

if.else:                                          ; preds = %if.end
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11952
  %part4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 2, !dbg !11953
  %9 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part4, align 8, !dbg !11953
  %child_nbr = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %9, i32 0, i32 89, !dbg !11954
  %10 = load i32, i32* %child_nbr, align 4, !dbg !11954
  store i32 %10, i32* %nbr, align 4, !dbg !11955
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11956
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 22, !dbg !11957
  %12 = load i32, i32* %nbr, align 4, !dbg !11958
  %call = call i32 @get_render_child_particle_number(%struct.RenderData* %r, i32 %12), !dbg !11959
  store i32 %call, i32* %retval, align 4, !dbg !11960
  br label %return, !dbg !11960

return:                                           ; preds = %if.end5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !11961
  ret i32 %13, !dbg !11961
}

declare dso_local i32 @get_render_child_particle_number(%struct.RenderData*, i32) #2

declare dso_local float @psys_get_timestep(%struct.ParticleSimulationData*) #2

declare dso_local void @BLI_srandom(i32) #2

declare dso_local %struct.RNG* @BLI_rng_new_srandom(i32) #2

declare dso_local %struct.ListBase* @get_collider_cache(%struct.Scene*, %struct.Object*, %struct.Group*) #2

declare dso_local void @boids_precalc_rules(%struct.ParticleSettings*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @psys_update_particle_bvhtree(%struct.ParticleSystem* %psys, float %cfra) #0 !dbg !11962 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %cfra.addr = alloca float, align 4
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %totpart = alloca i32, align 4
  %need_rebuild = alloca i8, align 1
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !11963, metadata !DIExpression()), !dbg !11964
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !11965, metadata !DIExpression()), !dbg !11966
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11967
  %tobool = icmp ne %struct.ParticleSystem* %0, null, !dbg !11967
  br i1 %tobool, label %if.then, label %if.end46, !dbg !11969

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !11970, metadata !DIExpression()), !dbg !11972
  call void @llvm.dbg.declare(metadata i32* %p, metadata !11973, metadata !DIExpression()), !dbg !11972
  call void @llvm.dbg.declare(metadata i32* %totpart, metadata !11974, metadata !DIExpression()), !dbg !11975
  store i32 0, i32* %totpart, align 4, !dbg !11975
  call void @llvm.dbg.declare(metadata i8* %need_rebuild, metadata !11976, metadata !DIExpression()), !dbg !11977
  call void @BLI_rw_mutex_lock(i32* @psys_bvhtree_rwlock, i32 1), !dbg !11978
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11979
  %bvhtree = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 47, !dbg !11980
  %2 = load %struct.BVHTree*, %struct.BVHTree** %bvhtree, align 8, !dbg !11980
  %tobool1 = icmp ne %struct.BVHTree* %2, null, !dbg !11979
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !11981

lor.rhs:                                          ; preds = %if.then
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11982
  %bvhtree_frame = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 22, !dbg !11983
  %4 = load float, float* %bvhtree_frame, align 8, !dbg !11983
  %5 = load float, float* %cfra.addr, align 4, !dbg !11984
  %cmp = fcmp une float %4, %5, !dbg !11985
  br label %lor.end, !dbg !11981

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %cmp, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !11981
  %conv = trunc i32 %lor.ext to i8, !dbg !11986
  store i8 %conv, i8* %need_rebuild, align 1, !dbg !11987
  call void @BLI_rw_mutex_unlock(i32* @psys_bvhtree_rwlock), !dbg !11988
  %7 = load i8, i8* %need_rebuild, align 1, !dbg !11989
  %tobool2 = icmp ne i8 %7, 0, !dbg !11989
  br i1 %tobool2, label %if.then3, label %if.end45, !dbg !11991

if.then3:                                         ; preds = %lor.end
  store i32 0, i32* %p, align 4, !dbg !11992
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11992
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 3, !dbg !11992
  %9 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !11992
  store %struct.ParticleData* %9, %struct.ParticleData** %pa, align 8, !dbg !11992
  br label %for.cond, !dbg !11992

for.cond:                                         ; preds = %for.inc, %if.then3
  %10 = load i32, i32* %p, align 4, !dbg !11995
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11995
  %totpart4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 26, !dbg !11995
  %12 = load i32, i32* %totpart4, align 8, !dbg !11995
  %cmp5 = icmp slt i32 %10, %12, !dbg !11995
  br i1 %cmp5, label %for.body, label %for.end, !dbg !11992

for.body:                                         ; preds = %for.cond
  %13 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11997
  %flag = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %13, i32 0, i32 17, !dbg !11997
  %14 = load i16, i16* %flag, align 4, !dbg !11997
  %conv7 = sext i16 %14 to i32, !dbg !11997
  %and = and i32 %conv7, 3, !dbg !11997
  %tobool8 = icmp ne i32 %and, 0, !dbg !11997
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !11995

if.then9:                                         ; preds = %for.body
  %15 = load i32, i32* %totpart, align 4, !dbg !11999
  %inc = add nsw i32 %15, 1, !dbg !11999
  store i32 %inc, i32* %totpart, align 4, !dbg !11999
  br label %if.end, !dbg !12001

if.end:                                           ; preds = %if.then9, %for.body
  br label %for.inc, !dbg !11997

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %p, align 4, !dbg !11995
  %inc10 = add nsw i32 %16, 1, !dbg !11995
  store i32 %inc10, i32* %p, align 4, !dbg !11995
  %17 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11995
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %17, i32 1, !dbg !11995
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !11995
  br label %for.cond, !dbg !11995, !llvm.loop !12002

for.end:                                          ; preds = %for.cond
  call void @BLI_rw_mutex_lock(i32* @psys_bvhtree_rwlock, i32 2), !dbg !12004
  %18 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12005
  %bvhtree11 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %18, i32 0, i32 47, !dbg !12006
  %19 = load %struct.BVHTree*, %struct.BVHTree** %bvhtree11, align 8, !dbg !12006
  call void @BLI_bvhtree_free(%struct.BVHTree* %19), !dbg !12007
  %20 = load i32, i32* %totpart, align 4, !dbg !12008
  %call = call %struct.BVHTree* @BLI_bvhtree_new(i32 %20, float 0.000000e+00, i8 zeroext 4, i8 zeroext 6), !dbg !12009
  %21 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12010
  %bvhtree12 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %21, i32 0, i32 47, !dbg !12011
  store %struct.BVHTree* %call, %struct.BVHTree** %bvhtree12, align 8, !dbg !12012
  store i32 0, i32* %p, align 4, !dbg !12013
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12013
  %particles13 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %22, i32 0, i32 3, !dbg !12013
  %23 = load %struct.ParticleData*, %struct.ParticleData** %particles13, align 8, !dbg !12013
  store %struct.ParticleData* %23, %struct.ParticleData** %pa, align 8, !dbg !12013
  br label %for.cond14, !dbg !12013

for.cond14:                                       ; preds = %for.inc39, %for.end
  %24 = load i32, i32* %p, align 4, !dbg !12015
  %25 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12015
  %totpart15 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %25, i32 0, i32 26, !dbg !12015
  %26 = load i32, i32* %totpart15, align 8, !dbg !12015
  %cmp16 = icmp slt i32 %24, %26, !dbg !12015
  br i1 %cmp16, label %for.body18, label %for.end42, !dbg !12013

for.body18:                                       ; preds = %for.cond14
  %27 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12017
  %flag19 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %27, i32 0, i32 17, !dbg !12017
  %28 = load i16, i16* %flag19, align 4, !dbg !12017
  %conv20 = sext i16 %28 to i32, !dbg !12017
  %and21 = and i32 %conv20, 3, !dbg !12017
  %tobool22 = icmp ne i32 %and21, 0, !dbg !12017
  br i1 %tobool22, label %if.end38, label %if.then23, !dbg !12015

if.then23:                                        ; preds = %for.body18
  %29 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12019
  %alive = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %29, i32 0, i32 18, !dbg !12022
  %30 = load i16, i16* %alive, align 2, !dbg !12022
  %conv24 = sext i16 %30 to i32, !dbg !12019
  %cmp25 = icmp eq i32 %conv24, 3, !dbg !12023
  br i1 %cmp25, label %if.then27, label %if.end37, !dbg !12024

if.then27:                                        ; preds = %if.then23
  %31 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12025
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %31, i32 0, i32 0, !dbg !12028
  %time = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 4, !dbg !12029
  %32 = load float, float* %time, align 4, !dbg !12029
  %33 = load float, float* %cfra.addr, align 4, !dbg !12030
  %cmp28 = fcmp oeq float %32, %33, !dbg !12031
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !12032

if.then30:                                        ; preds = %if.then27
  %34 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12033
  %bvhtree31 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %34, i32 0, i32 47, !dbg !12034
  %35 = load %struct.BVHTree*, %struct.BVHTree** %bvhtree31, align 8, !dbg !12034
  %36 = load i32, i32* %p, align 4, !dbg !12035
  %37 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12036
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %37, i32 0, i32 1, !dbg !12037
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 0, !dbg !12038
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12036
  call void @BLI_bvhtree_insert(%struct.BVHTree* %35, i32 %36, float* %arraydecay, i32 1), !dbg !12039
  br label %if.end36, !dbg !12039

if.else:                                          ; preds = %if.then27
  %38 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12040
  %bvhtree32 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %38, i32 0, i32 47, !dbg !12041
  %39 = load %struct.BVHTree*, %struct.BVHTree** %bvhtree32, align 8, !dbg !12041
  %40 = load i32, i32* %p, align 4, !dbg !12042
  %41 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12043
  %state33 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %41, i32 0, i32 0, !dbg !12044
  %co34 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state33, i32 0, i32 0, !dbg !12045
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %co34, i64 0, i64 0, !dbg !12043
  call void @BLI_bvhtree_insert(%struct.BVHTree* %39, i32 %40, float* %arraydecay35, i32 1), !dbg !12046
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then30
  br label %if.end37, !dbg !12047

if.end37:                                         ; preds = %if.end36, %if.then23
  br label %if.end38, !dbg !12048

if.end38:                                         ; preds = %if.end37, %for.body18
  br label %for.inc39, !dbg !12017

for.inc39:                                        ; preds = %if.end38
  %42 = load i32, i32* %p, align 4, !dbg !12015
  %inc40 = add nsw i32 %42, 1, !dbg !12015
  store i32 %inc40, i32* %p, align 4, !dbg !12015
  %43 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12015
  %incdec.ptr41 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %43, i32 1, !dbg !12015
  store %struct.ParticleData* %incdec.ptr41, %struct.ParticleData** %pa, align 8, !dbg !12015
  br label %for.cond14, !dbg !12015, !llvm.loop !12049

for.end42:                                        ; preds = %for.cond14
  %44 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12051
  %bvhtree43 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %44, i32 0, i32 47, !dbg !12052
  %45 = load %struct.BVHTree*, %struct.BVHTree** %bvhtree43, align 8, !dbg !12052
  call void @BLI_bvhtree_balance(%struct.BVHTree* %45), !dbg !12053
  %46 = load float, float* %cfra.addr, align 4, !dbg !12054
  %47 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12055
  %bvhtree_frame44 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %47, i32 0, i32 22, !dbg !12056
  store float %46, float* %bvhtree_frame44, align 8, !dbg !12057
  call void @BLI_rw_mutex_unlock(i32* @psys_bvhtree_rwlock), !dbg !12058
  br label %if.end45, !dbg !12059

if.end45:                                         ; preds = %for.end42, %lor.end
  br label %if.end46, !dbg !12060

if.end46:                                         ; preds = %if.end45, %entry
  ret void, !dbg !12061
}

declare dso_local void @copy_particle_key(%struct.ParticleKey*, %struct.ParticleKey*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @basic_integrate(%struct.ParticleSimulationData* %sim, i32 %p, float %dfra, float %cfra) #0 !dbg !12062 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %p.addr = alloca i32, align 4
  %dfra.addr = alloca float, align 4
  %cfra.addr = alloca float, align 4
  %part = alloca %struct.ParticleSettings*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %tkey = alloca %struct.ParticleKey, align 4
  %dtime = alloca float, align 4
  %time = alloca float, align 4
  %gravity = alloca float*, align 8
  %gr = alloca [3 x float], align 4
  %efdata = alloca %struct.EfData, align 8
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !12065, metadata !DIExpression()), !dbg !12066
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !12067, metadata !DIExpression()), !dbg !12068
  store float %dfra, float* %dfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dfra.addr, metadata !12069, metadata !DIExpression()), !dbg !12070
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !12071, metadata !DIExpression()), !dbg !12072
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !12073, metadata !DIExpression()), !dbg !12074
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12075
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !12076
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !12076
  %part1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 2, !dbg !12077
  %2 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part1, align 8, !dbg !12077
  store %struct.ParticleSettings* %2, %struct.ParticleSettings** %part, align 8, !dbg !12074
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !12078, metadata !DIExpression()), !dbg !12079
  %3 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12080
  %psys2 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %3, i32 0, i32 2, !dbg !12081
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys2, align 8, !dbg !12081
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %4, i32 0, i32 3, !dbg !12082
  %5 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !12082
  %6 = load i32, i32* %p.addr, align 4, !dbg !12083
  %idx.ext = sext i32 %6 to i64, !dbg !12084
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %5, i64 %idx.ext, !dbg !12084
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %pa, align 8, !dbg !12079
  call void @llvm.dbg.declare(metadata %struct.ParticleKey* %tkey, metadata !12085, metadata !DIExpression()), !dbg !12086
  call void @llvm.dbg.declare(metadata float* %dtime, metadata !12087, metadata !DIExpression()), !dbg !12088
  %7 = load float, float* %dfra.addr, align 4, !dbg !12089
  %8 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12090
  %call = call float @psys_get_timestep(%struct.ParticleSimulationData* %8), !dbg !12091
  %mul = fmul float %7, %call, !dbg !12092
  store float %mul, float* %dtime, align 4, !dbg !12088
  call void @llvm.dbg.declare(metadata float* %time, metadata !12093, metadata !DIExpression()), !dbg !12094
  call void @llvm.dbg.declare(metadata float** %gravity, metadata !12095, metadata !DIExpression()), !dbg !12096
  store float* null, float** %gravity, align 8, !dbg !12096
  call void @llvm.dbg.declare(metadata [3 x float]* %gr, metadata !12097, metadata !DIExpression()), !dbg !12098
  call void @llvm.dbg.declare(metadata %struct.EfData* %efdata, metadata !12099, metadata !DIExpression()), !dbg !12100
  %9 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12101
  %10 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12102
  %ptex = getelementptr inbounds %struct.EfData, %struct.EfData* %efdata, i32 0, i32 0, !dbg !12103
  %11 = load float, float* %cfra.addr, align 4, !dbg !12104
  call void @psys_get_texture(%struct.ParticleSimulationData* %9, %struct.ParticleData* %10, %struct.ParticleTexture* %ptex, i32 3136, float %11), !dbg !12105
  %12 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12106
  %pa3 = getelementptr inbounds %struct.EfData, %struct.EfData* %efdata, i32 0, i32 2, !dbg !12107
  store %struct.ParticleData* %12, %struct.ParticleData** %pa3, align 8, !dbg !12108
  %13 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12109
  %sim4 = getelementptr inbounds %struct.EfData, %struct.EfData* %efdata, i32 0, i32 1, !dbg !12110
  store %struct.ParticleSimulationData* %13, %struct.ParticleSimulationData** %sim4, align 8, !dbg !12111
  %14 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12112
  %call5 = call i32 @psys_uses_gravity(%struct.ParticleSimulationData* %14), !dbg !12114
  %tobool = icmp ne i32 %call5, 0, !dbg !12114
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !12115

land.lhs.true:                                    ; preds = %entry
  %15 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12116
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %15, i32 0, i32 7, !dbg !12117
  %16 = load i16, i16* %type, align 8, !dbg !12117
  %conv = sext i16 %16 to i32, !dbg !12116
  %cmp = icmp ne i32 %conv, 2, !dbg !12118
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12119

lor.lhs.false:                                    ; preds = %land.lhs.true
  %17 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12120
  %effector_weights = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %17, i32 0, i32 4, !dbg !12121
  %18 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !12121
  %flag = getelementptr inbounds %struct.EffectorWeights, %struct.EffectorWeights* %18, i32 0, i32 3, !dbg !12122
  %19 = load i16, i16* %flag, align 4, !dbg !12122
  %conv7 = sext i16 %19 to i32, !dbg !12120
  %and = and i32 %conv7, 1, !dbg !12123
  %tobool8 = icmp ne i32 %and, 0, !dbg !12123
  br i1 %tobool8, label %if.then, label %if.end, !dbg !12124

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %gr, i64 0, i64 0, !dbg !12125
  call void @zero_v3(float* %arraydecay), !dbg !12127
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %gr, i64 0, i64 0, !dbg !12128
  %20 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12129
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %20, i32 0, i32 0, !dbg !12130
  %21 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !12130
  %physics_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 40, !dbg !12131
  %gravity10 = getelementptr inbounds %struct.PhysicsSettings, %struct.PhysicsSettings* %physics_settings, i32 0, i32 0, !dbg !12132
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %gravity10, i64 0, i64 0, !dbg !12129
  %22 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12133
  %effector_weights12 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %22, i32 0, i32 4, !dbg !12134
  %23 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights12, align 8, !dbg !12134
  %global_gravity = getelementptr inbounds %struct.EffectorWeights, %struct.EffectorWeights* %23, i32 0, i32 2, !dbg !12135
  %24 = load float, float* %global_gravity, align 8, !dbg !12135
  %ptex13 = getelementptr inbounds %struct.EfData, %struct.EfData* %efdata, i32 0, i32 0, !dbg !12136
  %gravity14 = getelementptr inbounds %struct.ParticleTexture, %struct.ParticleTexture* %ptex13, i32 0, i32 6, !dbg !12137
  %25 = load float, float* %gravity14, align 8, !dbg !12137
  %mul15 = fmul float %24, %25, !dbg !12138
  call void @madd_v3_v3fl(float* %arraydecay9, float* %arraydecay11, float %mul15), !dbg !12139
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %gr, i64 0, i64 0, !dbg !12140
  store float* %arraydecay16, float** %gravity, align 8, !dbg !12141
  br label %if.end, !dbg !12142

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %26 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12143
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %26, i32 0, i32 0, !dbg !12144
  %ave = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 3, !dbg !12145
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %ave, i64 0, i64 0, !dbg !12143
  %27 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12146
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %27, i32 0, i32 1, !dbg !12147
  %ave18 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 3, !dbg !12148
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %ave18, i64 0, i64 0, !dbg !12146
  call void @copy_v3_v3(float* %arraydecay17, float* %arraydecay19), !dbg !12149
  %28 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12150
  %29 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12151
  %30 = load float, float* %dtime, align 4, !dbg !12152
  %31 = load float*, float** %gravity, align 8, !dbg !12153
  %32 = bitcast %struct.EfData* %efdata to i8*, !dbg !12154
  call void @integrate_particle(%struct.ParticleSettings* %28, %struct.ParticleData* %29, float %30, float* %31, void (i8*, %struct.ParticleKey*, float*, float*)* @basic_force_cb, i8* %32), !dbg !12155
  %33 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12156
  %dampfac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %33, i32 0, i32 87, !dbg !12158
  %34 = load float, float* %dampfac, align 4, !dbg !12158
  %cmp20 = fcmp une float %34, 0.000000e+00, !dbg !12159
  br i1 %cmp20, label %if.then22, label %if.end30, !dbg !12160

if.then22:                                        ; preds = %if.end
  %35 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12161
  %state23 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %35, i32 0, i32 0, !dbg !12162
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state23, i32 0, i32 1, !dbg !12163
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !12161
  %36 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12164
  %dampfac25 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %36, i32 0, i32 87, !dbg !12165
  %37 = load float, float* %dampfac25, align 4, !dbg !12165
  %ptex26 = getelementptr inbounds %struct.EfData, %struct.EfData* %efdata, i32 0, i32 0, !dbg !12166
  %damp = getelementptr inbounds %struct.ParticleTexture, %struct.ParticleTexture* %ptex26, i32 0, i32 5, !dbg !12167
  %38 = load float, float* %damp, align 4, !dbg !12167
  %mul27 = fmul float %37, %38, !dbg !12168
  %mul28 = fmul float %mul27, 2.500000e+01, !dbg !12169
  %39 = load float, float* %dtime, align 4, !dbg !12170
  %mul29 = fmul float %mul28, %39, !dbg !12171
  %sub = fsub float 1.000000e+00, %mul29, !dbg !12172
  call void @mul_v3_fl(float* %arraydecay24, float %sub), !dbg !12173
  br label %if.end30, !dbg !12173

if.end30:                                         ; preds = %if.then22, %if.end
  %40 = load float, float* %cfra.addr, align 4, !dbg !12174
  %41 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12175
  %time31 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %41, i32 0, i32 6, !dbg !12176
  %42 = load float, float* %time31, align 4, !dbg !12176
  %sub32 = fsub float %40, %42, !dbg !12177
  %43 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12178
  %lifetime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %43, i32 0, i32 7, !dbg !12179
  %44 = load float, float* %lifetime, align 8, !dbg !12179
  %div = fdiv float %sub32, %44, !dbg !12180
  store float %div, float* %time, align 4, !dbg !12181
  %45 = load float, float* %time, align 4, !dbg !12182
  %cmp33 = fcmp olt float %45, 0.000000e+00, !dbg !12182
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !12185

if.then35:                                        ; preds = %if.end30
  store float 0.000000e+00, float* %time, align 4, !dbg !12182
  br label %if.end40, !dbg !12182

if.else:                                          ; preds = %if.end30
  %46 = load float, float* %time, align 4, !dbg !12186
  %cmp36 = fcmp ogt float %46, 1.000000e+00, !dbg !12186
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !12182

if.then38:                                        ; preds = %if.else
  store float 1.000000e+00, float* %time, align 4, !dbg !12186
  br label %if.end39, !dbg !12186

if.end39:                                         ; preds = %if.then38, %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then35
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %tkey, i32 0, i32 0, !dbg !12188
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12189
  %47 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12190
  %state42 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %47, i32 0, i32 0, !dbg !12191
  %co43 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state42, i32 0, i32 0, !dbg !12192
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %co43, i64 0, i64 0, !dbg !12190
  call void @copy_v3_v3(float* %arraydecay41, float* %arraydecay44), !dbg !12193
  %vel45 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %tkey, i32 0, i32 1, !dbg !12194
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %vel45, i64 0, i64 0, !dbg !12195
  %48 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12196
  %state47 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %48, i32 0, i32 0, !dbg !12197
  %vel48 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state47, i32 0, i32 1, !dbg !12198
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %vel48, i64 0, i64 0, !dbg !12196
  call void @copy_v3_v3(float* %arraydecay46, float* %arraydecay49), !dbg !12199
  %49 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12200
  %state50 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %49, i32 0, i32 0, !dbg !12201
  %time51 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state50, i32 0, i32 4, !dbg !12202
  %50 = load float, float* %time51, align 4, !dbg !12202
  %time52 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %tkey, i32 0, i32 4, !dbg !12203
  store float %50, float* %time52, align 4, !dbg !12204
  %51 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12205
  %type53 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %51, i32 0, i32 7, !dbg !12207
  %52 = load i16, i16* %type53, align 8, !dbg !12207
  %conv54 = sext i16 %52 to i32, !dbg !12205
  %cmp55 = icmp ne i32 %conv54, 2, !dbg !12208
  br i1 %cmp55, label %if.then57, label %if.end83, !dbg !12209

if.then57:                                        ; preds = %if.end40
  %53 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12210
  %psys58 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %53, i32 0, i32 2, !dbg !12213
  %54 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys58, align 8, !dbg !12213
  %effectors = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %54, i32 0, i32 42, !dbg !12214
  %55 = load %struct.ListBase*, %struct.ListBase** %effectors, align 8, !dbg !12214
  %56 = load i32, i32* %p.addr, align 4, !dbg !12215
  %57 = load float, float* %time, align 4, !dbg !12216
  %call59 = call i32 @do_guides(%struct.ListBase* %55, %struct.ParticleKey* %tkey, i32 %56, float %57), !dbg !12217
  %tobool60 = icmp ne i32 %call59, 0, !dbg !12217
  br i1 %tobool60, label %if.then61, label %if.end82, !dbg !12218

if.then61:                                        ; preds = %if.then57
  %58 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12219
  %state62 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %58, i32 0, i32 0, !dbg !12221
  %co63 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state62, i32 0, i32 0, !dbg !12222
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %co63, i64 0, i64 0, !dbg !12219
  %co65 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %tkey, i32 0, i32 0, !dbg !12223
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %co65, i64 0, i64 0, !dbg !12224
  call void @copy_v3_v3(float* %arraydecay64, float* %arraydecay66), !dbg !12225
  %59 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12226
  %state67 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %59, i32 0, i32 0, !dbg !12227
  %vel68 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state67, i32 0, i32 1, !dbg !12228
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %vel68, i64 0, i64 0, !dbg !12226
  %co70 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %tkey, i32 0, i32 0, !dbg !12229
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %co70, i64 0, i64 0, !dbg !12230
  %60 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12231
  %prev_state72 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %60, i32 0, i32 1, !dbg !12232
  %co73 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state72, i32 0, i32 0, !dbg !12233
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %co73, i64 0, i64 0, !dbg !12231
  call void @sub_v3_v3v3(float* %arraydecay69, float* %arraydecay71, float* %arraydecay74), !dbg !12234
  %61 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12235
  %state75 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %61, i32 0, i32 0, !dbg !12236
  %vel76 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state75, i32 0, i32 1, !dbg !12237
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %vel76, i64 0, i64 0, !dbg !12235
  %62 = load float, float* %dtime, align 4, !dbg !12238
  %div78 = fdiv float 1.000000e+00, %62, !dbg !12239
  call void @mul_v3_fl(float* %arraydecay77, float %div78), !dbg !12240
  %time79 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %tkey, i32 0, i32 4, !dbg !12241
  %63 = load float, float* %time79, align 4, !dbg !12241
  %64 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12242
  %state80 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %64, i32 0, i32 0, !dbg !12243
  %time81 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state80, i32 0, i32 4, !dbg !12244
  store float %63, float* %time81, align 4, !dbg !12245
  br label %if.end82, !dbg !12246

if.end82:                                         ; preds = %if.then61, %if.then57
  br label %if.end83, !dbg !12247

if.end83:                                         ; preds = %if.end82, %if.end40
  ret void, !dbg !12248
}

; Function Attrs: noinline nounwind uwtable
define internal void @collision_check(%struct.ParticleSimulationData* %sim, i32 %p, float %dfra, float %cfra) #0 !dbg !12249 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %p.addr = alloca i32, align 4
  %dfra.addr = alloca float, align 4
  %cfra.addr = alloca float, align 4
  %part = alloca %struct.ParticleSettings*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %col = alloca %struct.ParticleCollision, align 8
  %hit = alloca %struct.BVHTreeRayHit, align 4
  %collision_count = alloca i32, align 4
  %timestep = alloca float, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !12250, metadata !DIExpression()), !dbg !12251
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !12252, metadata !DIExpression()), !dbg !12253
  store float %dfra, float* %dfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dfra.addr, metadata !12254, metadata !DIExpression()), !dbg !12255
  store float %cfra, float* %cfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %cfra.addr, metadata !12256, metadata !DIExpression()), !dbg !12257
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !12258, metadata !DIExpression()), !dbg !12259
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12260
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !12261
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !12261
  %part1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 2, !dbg !12262
  %2 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part1, align 8, !dbg !12262
  store %struct.ParticleSettings* %2, %struct.ParticleSettings** %part, align 8, !dbg !12259
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !12263, metadata !DIExpression()), !dbg !12264
  %3 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12265
  %psys2 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %3, i32 0, i32 2, !dbg !12266
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys2, align 8, !dbg !12266
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %4, i32 0, i32 3, !dbg !12267
  %5 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !12267
  %6 = load i32, i32* %p.addr, align 4, !dbg !12268
  %idx.ext = sext i32 %6 to i64, !dbg !12269
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %5, i64 %idx.ext, !dbg !12269
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %pa, align 8, !dbg !12264
  call void @llvm.dbg.declare(metadata %struct.ParticleCollision* %col, metadata !12270, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.declare(metadata %struct.BVHTreeRayHit* %hit, metadata !12272, metadata !DIExpression()), !dbg !12273
  call void @llvm.dbg.declare(metadata i32* %collision_count, metadata !12274, metadata !DIExpression()), !dbg !12275
  store i32 0, i32* %collision_count, align 4, !dbg !12275
  call void @llvm.dbg.declare(metadata float* %timestep, metadata !12276, metadata !DIExpression()), !dbg !12277
  %7 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12278
  %call = call float @psys_get_timestep(%struct.ParticleSimulationData* %7), !dbg !12279
  store float %call, float* %timestep, align 4, !dbg !12277
  %8 = bitcast %struct.ParticleCollision* %col to i8*, !dbg !12280
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 328, i1 false), !dbg !12280
  %9 = load float, float* %timestep, align 4, !dbg !12281
  %10 = load float, float* %dfra.addr, align 4, !dbg !12282
  %mul = fmul float %9, %10, !dbg !12283
  %total_time = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 14, !dbg !12284
  store float %mul, float* %total_time, align 8, !dbg !12285
  %total_time3 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 14, !dbg !12286
  %11 = load float, float* %total_time3, align 8, !dbg !12286
  %div = fdiv float 1.000000e+00, %11, !dbg !12287
  %inv_total_time = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 15, !dbg !12288
  store float %div, float* %inv_total_time, align 4, !dbg !12289
  %12 = load float, float* %timestep, align 4, !dbg !12290
  %div4 = fdiv float 1.000000e+00, %12, !dbg !12291
  %inv_timestep = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 16, !dbg !12292
  store float %div4, float* %inv_timestep, align 8, !dbg !12293
  %13 = load float, float* %cfra.addr, align 4, !dbg !12294
  %cfra5 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 9, !dbg !12295
  store float %13, float* %cfra5, align 4, !dbg !12296
  %14 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12297
  %psys6 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %14, i32 0, i32 2, !dbg !12298
  %15 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys6, align 8, !dbg !12298
  %cfra7 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %15, i32 0, i32 20, !dbg !12299
  %16 = load float, float* %cfra7, align 8, !dbg !12299
  %old_cfra = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 10, !dbg !12300
  store float %16, float* %old_cfra, align 8, !dbg !12301
  %acc = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 22, !dbg !12302
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %acc, i64 0, i64 0, !dbg !12303
  %17 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12304
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %17, i32 0, i32 0, !dbg !12305
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 1, !dbg !12306
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !12304
  %18 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12307
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %18, i32 0, i32 1, !dbg !12308
  %vel9 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 1, !dbg !12309
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %vel9, i64 0, i64 0, !dbg !12307
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay8, float* %arraydecay10), !dbg !12310
  %acc11 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 22, !dbg !12311
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %acc11, i64 0, i64 0, !dbg !12312
  %total_time13 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 14, !dbg !12313
  %19 = load float, float* %total_time13, align 8, !dbg !12313
  %div14 = fdiv float 1.000000e+00, %19, !dbg !12314
  call void @mul_v3_fl(float* %arraydecay12, float %div14), !dbg !12315
  %co1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 18, !dbg !12316
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !12317
  %20 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12318
  %prev_state16 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %20, i32 0, i32 1, !dbg !12319
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state16, i32 0, i32 0, !dbg !12320
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12318
  call void @copy_v3_v3(float* %arraydecay15, float* %arraydecay17), !dbg !12321
  %co2 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 19, !dbg !12322
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !12323
  %21 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12324
  %state19 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %21, i32 0, i32 0, !dbg !12325
  %co20 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state19, i32 0, i32 0, !dbg !12326
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %co20, i64 0, i64 0, !dbg !12324
  call void @copy_v3_v3(float* %arraydecay18, float* %arraydecay21), !dbg !12327
  %ve1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 20, !dbg !12328
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %ve1, i64 0, i64 0, !dbg !12329
  %22 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12330
  %prev_state23 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %22, i32 0, i32 1, !dbg !12331
  %vel24 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state23, i32 0, i32 1, !dbg !12332
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %vel24, i64 0, i64 0, !dbg !12330
  call void @copy_v3_v3(float* %arraydecay22, float* %arraydecay25), !dbg !12333
  %ve2 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 21, !dbg !12334
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %ve2, i64 0, i64 0, !dbg !12335
  %23 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12336
  %state27 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %23, i32 0, i32 0, !dbg !12337
  %vel28 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state27, i32 0, i32 1, !dbg !12338
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %vel28, i64 0, i64 0, !dbg !12336
  call void @copy_v3_v3(float* %arraydecay26, float* %arraydecay29), !dbg !12339
  %f = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 6, !dbg !12340
  store float 0.000000e+00, float* %f, align 8, !dbg !12341
  %24 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12342
  %flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %24, i32 0, i32 5, !dbg !12343
  %25 = load i32, i32* %flag, align 8, !dbg !12343
  %and = and i32 %25, 8192, !dbg !12344
  %tobool = icmp ne i32 %and, 0, !dbg !12344
  br i1 %tobool, label %cond.true, label %lor.lhs.false, !dbg !12345

lor.lhs.false:                                    ; preds = %entry
  %26 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12346
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %26, i32 0, i32 11, !dbg !12347
  %27 = load i16, i16* %phystype, align 8, !dbg !12347
  %conv = sext i16 %27 to i32, !dbg !12346
  %cmp = icmp eq i32 %conv, 3, !dbg !12348
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12349

cond.true:                                        ; preds = %lor.lhs.false, %entry
  %28 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12350
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %28, i32 0, i32 13, !dbg !12351
  %29 = load float, float* %size, align 4, !dbg !12351
  br label %cond.end, !dbg !12349

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !12349

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %29, %cond.true ], [ 0x3F50624DE0000000, %cond.false ], !dbg !12349
  %radius = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 17, !dbg !12352
  store float %cond, float* %radius, align 4, !dbg !12353
  %30 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12354
  %phystype31 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %30, i32 0, i32 11, !dbg !12356
  %31 = load i16, i16* %phystype31, align 8, !dbg !12356
  %conv32 = sext i16 %31 to i32, !dbg !12354
  %cmp33 = icmp eq i32 %conv32, 3, !dbg !12357
  br i1 %cmp33, label %land.lhs.true, label %if.end, !dbg !12358

land.lhs.true:                                    ; preds = %cond.end
  %32 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12359
  %boids = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %32, i32 0, i32 2, !dbg !12360
  %33 = load %struct.BoidSettings*, %struct.BoidSettings** %boids, align 8, !dbg !12360
  %options = getelementptr inbounds %struct.BoidSettings, %struct.BoidSettings* %33, i32 0, i32 0, !dbg !12361
  %34 = load i32, i32* %options, align 8, !dbg !12361
  %and35 = and i32 %34, 2, !dbg !12362
  %tobool36 = icmp ne i32 %and35, 0, !dbg !12362
  br i1 %tobool36, label %if.then, label %if.end, !dbg !12363

if.then:                                          ; preds = %land.lhs.true
  %boid = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 24, !dbg !12364
  store i32 1, i32* %boid, align 8, !dbg !12366
  %35 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12367
  %state37 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %35, i32 0, i32 0, !dbg !12368
  %co38 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state37, i32 0, i32 0, !dbg !12369
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %co38, i64 0, i64 2, !dbg !12367
  %36 = load float, float* %arrayidx, align 8, !dbg !12367
  %boid_z = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 23, !dbg !12370
  store float %36, float* %boid_z, align 4, !dbg !12371
  %37 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12372
  %boid39 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %37, i32 0, i32 4, !dbg !12373
  %38 = load %struct.BoidParticle*, %struct.BoidParticle** %boid39, align 8, !dbg !12373
  %ground = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %38, i32 0, i32 0, !dbg !12374
  %39 = load %struct.Object*, %struct.Object** %ground, align 8, !dbg !12374
  %skip = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %col, i32 0, i32 3, !dbg !12375
  store %struct.Object* %39, %struct.Object** %skip, align 8, !dbg !12376
  br label %if.end, !dbg !12377

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  br label %while.cond, !dbg !12378

while.cond:                                       ; preds = %if.end59, %if.end
  %40 = load i32, i32* %collision_count, align 4, !dbg !12379
  %cmp40 = icmp slt i32 %40, 10, !dbg !12380
  br i1 %cmp40, label %while.body, label %while.end, !dbg !12378

while.body:                                       ; preds = %while.cond
  %41 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12381
  %42 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12384
  %colliders = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %42, i32 0, i32 4, !dbg !12385
  %43 = load %struct.ListBase*, %struct.ListBase** %colliders, align 8, !dbg !12385
  %call42 = call i32 @collision_detect(%struct.ParticleData* %41, %struct.ParticleCollision* %col, %struct.BVHTreeRayHit* %hit, %struct.ListBase* %43), !dbg !12386
  %tobool43 = icmp ne i32 %call42, 0, !dbg !12386
  br i1 %tobool43, label %if.then44, label %if.else58, !dbg !12387

if.then44:                                        ; preds = %while.body
  %44 = load i32, i32* %collision_count, align 4, !dbg !12388
  %inc = add nsw i32 %44, 1, !dbg !12388
  store i32 %inc, i32* %collision_count, align 4, !dbg !12388
  %45 = load i32, i32* %collision_count, align 4, !dbg !12390
  %cmp45 = icmp eq i32 %45, 10, !dbg !12392
  br i1 %cmp45, label %if.then47, label %if.else, !dbg !12393

if.then47:                                        ; preds = %if.then44
  %46 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12394
  call void @collision_fail(%struct.ParticleData* %46, %struct.ParticleCollision* %col), !dbg !12395
  br label %if.end57, !dbg !12395

if.else:                                          ; preds = %if.then44
  %47 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12396
  %48 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12398
  %flag48 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %48, i32 0, i32 5, !dbg !12399
  %49 = load i32, i32* %flag48, align 8, !dbg !12399
  %and49 = and i32 %49, 4096, !dbg !12400
  %50 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12401
  %flag50 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %50, i32 0, i32 5, !dbg !12402
  %51 = load i32, i32* %flag50, align 8, !dbg !12402
  %and51 = and i32 %51, 16384, !dbg !12403
  %call52 = call i32 @collision_response(%struct.ParticleData* %47, %struct.ParticleCollision* %col, %struct.BVHTreeRayHit* %hit, i32 %and49, i32 %and51), !dbg !12404
  %cmp53 = icmp eq i32 %call52, 0, !dbg !12405
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !12406

if.then55:                                        ; preds = %if.else
  br label %while.end, !dbg !12407

if.end56:                                         ; preds = %if.else
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then47
  br label %if.end59, !dbg !12408

if.else58:                                        ; preds = %while.body
  br label %while.end, !dbg !12409

if.end59:                                         ; preds = %if.end57
  br label %while.cond, !dbg !12378, !llvm.loop !12410

while.end:                                        ; preds = %if.then55, %if.else58, %while.cond
  ret void, !dbg !12412
}

; Function Attrs: noinline nounwind uwtable
define internal void @basic_rotate(%struct.ParticleSettings* %part, %struct.ParticleData* %pa, float %dfra, float %timestep) #0 !dbg !12413 {
entry:
  %part.addr = alloca %struct.ParticleSettings*, align 8
  %pa.addr = alloca %struct.ParticleData*, align 8
  %dfra.addr = alloca float, align 4
  %timestep.addr = alloca float, align 4
  %rotfac = alloca float, align 4
  %rot1 = alloca [4 x float], align 16
  %rot2 = alloca [4 x float], align 16
  %dtime = alloca float, align 4
  %extrotfac = alloca float, align 4
  %angle = alloca float, align 4
  %len1 = alloca float, align 4
  %len2 = alloca float, align 4
  %vec = alloca [3 x float], align 4
  store %struct.ParticleSettings* %part, %struct.ParticleSettings** %part.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part.addr, metadata !12416, metadata !DIExpression()), !dbg !12417
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !12418, metadata !DIExpression()), !dbg !12419
  store float %dfra, float* %dfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dfra.addr, metadata !12420, metadata !DIExpression()), !dbg !12421
  store float %timestep, float* %timestep.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timestep.addr, metadata !12422, metadata !DIExpression()), !dbg !12423
  call void @llvm.dbg.declare(metadata float* %rotfac, metadata !12424, metadata !DIExpression()), !dbg !12425
  call void @llvm.dbg.declare(metadata [4 x float]* %rot1, metadata !12426, metadata !DIExpression()), !dbg !12427
  call void @llvm.dbg.declare(metadata [4 x float]* %rot2, metadata !12428, metadata !DIExpression()), !dbg !12429
  %0 = bitcast [4 x float]* %rot2 to i8*, !dbg !12429
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([4 x float]* @__const.basic_rotate.rot2 to i8*), i64 16, i1 false), !dbg !12429
  call void @llvm.dbg.declare(metadata float* %dtime, metadata !12430, metadata !DIExpression()), !dbg !12431
  %1 = load float, float* %dfra.addr, align 4, !dbg !12432
  %2 = load float, float* %timestep.addr, align 4, !dbg !12433
  %mul = fmul float %1, %2, !dbg !12434
  store float %mul, float* %dtime, align 4, !dbg !12431
  call void @llvm.dbg.declare(metadata float* %extrotfac, metadata !12435, metadata !DIExpression()), !dbg !12436
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !12437
  %flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %3, i32 0, i32 5, !dbg !12439
  %4 = load i32, i32* %flag, align 8, !dbg !12439
  %and = and i32 %4, 512, !dbg !12440
  %cmp = icmp eq i32 %and, 0, !dbg !12441
  br i1 %cmp, label %if.then, label %if.end, !dbg !12442

if.then:                                          ; preds = %entry
  %5 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12443
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %5, i32 0, i32 0, !dbg !12445
  %rot = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 2, !dbg !12446
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !12443
  call void @unit_qt(float* %arraydecay), !dbg !12447
  br label %return, !dbg !12448

if.end:                                           ; preds = %entry
  %6 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !12449
  %flag1 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %6, i32 0, i32 5, !dbg !12451
  %7 = load i32, i32* %flag1, align 8, !dbg !12451
  %and2 = and i32 %7, 16384, !dbg !12452
  %tobool = icmp ne i32 %and2, 0, !dbg !12452
  br i1 %tobool, label %if.then3, label %if.else, !dbg !12453

if.then3:                                         ; preds = %if.end
  %8 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12454
  %state4 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %8, i32 0, i32 0, !dbg !12456
  %ave = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state4, i32 0, i32 3, !dbg !12457
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %ave, i64 0, i64 0, !dbg !12454
  %call = call float @len_v3(float* %arraydecay5), !dbg !12458
  store float %call, float* %extrotfac, align 4, !dbg !12459
  br label %if.end6, !dbg !12460

if.else:                                          ; preds = %if.end
  store float 0.000000e+00, float* %extrotfac, align 4, !dbg !12461
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  %9 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !12463
  %flag7 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %9, i32 0, i32 5, !dbg !12465
  %10 = load i32, i32* %flag7, align 8, !dbg !12465
  %and8 = and i32 %10, 16384, !dbg !12466
  %tobool9 = icmp ne i32 %and8, 0, !dbg !12466
  br i1 %tobool9, label %land.lhs.true, label %if.end71, !dbg !12467

land.lhs.true:                                    ; preds = %if.end6
  %11 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !12468
  %avemode = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %11, i32 0, i32 13, !dbg !12468
  %12 = load i16, i16* %avemode, align 4, !dbg !12468
  %conv = sext i16 %12 to i32, !dbg !12468
  %cmp10 = icmp eq i32 %conv, 1, !dbg !12468
  br i1 %cmp10, label %if.then21, label %lor.lhs.false, !dbg !12468

lor.lhs.false:                                    ; preds = %land.lhs.true
  %13 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !12468
  %avemode12 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %13, i32 0, i32 13, !dbg !12468
  %14 = load i16, i16* %avemode12, align 4, !dbg !12468
  %conv13 = sext i16 %14 to i32, !dbg !12468
  %cmp14 = icmp eq i32 %conv13, 3, !dbg !12468
  br i1 %cmp14, label %if.then21, label %lor.lhs.false16, !dbg !12468

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %15 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !12468
  %avemode17 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %15, i32 0, i32 13, !dbg !12468
  %16 = load i16, i16* %avemode17, align 4, !dbg !12468
  %conv18 = sext i16 %16 to i32, !dbg !12468
  %cmp19 = icmp eq i32 %conv18, 4, !dbg !12468
  br i1 %cmp19, label %if.then21, label %if.end71, !dbg !12469

if.then21:                                        ; preds = %lor.lhs.false16, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %angle, metadata !12470, metadata !DIExpression()), !dbg !12472
  call void @llvm.dbg.declare(metadata float* %len1, metadata !12473, metadata !DIExpression()), !dbg !12474
  %17 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12475
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %17, i32 0, i32 1, !dbg !12476
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 1, !dbg !12477
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !12475
  %call23 = call float @len_v3(float* %arraydecay22), !dbg !12478
  store float %call23, float* %len1, align 4, !dbg !12474
  call void @llvm.dbg.declare(metadata float* %len2, metadata !12479, metadata !DIExpression()), !dbg !12480
  %18 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12481
  %state24 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %18, i32 0, i32 0, !dbg !12482
  %vel25 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state24, i32 0, i32 1, !dbg !12483
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %vel25, i64 0, i64 0, !dbg !12481
  %call27 = call float @len_v3(float* %arraydecay26), !dbg !12484
  store float %call27, float* %len2, align 4, !dbg !12480
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !12485, metadata !DIExpression()), !dbg !12486
  %19 = load float, float* %len1, align 4, !dbg !12487
  %cmp28 = fcmp oeq float %19, 0.000000e+00, !dbg !12489
  br i1 %cmp28, label %if.then33, label %lor.lhs.false30, !dbg !12490

lor.lhs.false30:                                  ; preds = %if.then21
  %20 = load float, float* %len2, align 4, !dbg !12491
  %cmp31 = fcmp oeq float %20, 0.000000e+00, !dbg !12492
  br i1 %cmp31, label %if.then33, label %if.else37, !dbg !12493

if.then33:                                        ; preds = %lor.lhs.false30, %if.then21
  %21 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12494
  %state34 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %21, i32 0, i32 0, !dbg !12496
  %ave35 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state34, i32 0, i32 3, !dbg !12497
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %ave35, i64 0, i64 0, !dbg !12494
  call void @zero_v3(float* %arraydecay36), !dbg !12498
  br label %if.end64, !dbg !12499

if.else37:                                        ; preds = %lor.lhs.false30
  %22 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12500
  %state38 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %22, i32 0, i32 0, !dbg !12502
  %ave39 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state38, i32 0, i32 3, !dbg !12503
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %ave39, i64 0, i64 0, !dbg !12500
  %23 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12504
  %prev_state41 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %23, i32 0, i32 1, !dbg !12505
  %vel42 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state41, i32 0, i32 1, !dbg !12506
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %vel42, i64 0, i64 0, !dbg !12504
  %24 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12507
  %state44 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %24, i32 0, i32 0, !dbg !12508
  %vel45 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state44, i32 0, i32 1, !dbg !12509
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %vel45, i64 0, i64 0, !dbg !12507
  call void @cross_v3_v3v3(float* %arraydecay40, float* %arraydecay43, float* %arraydecay46), !dbg !12510
  %25 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12511
  %state47 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %25, i32 0, i32 0, !dbg !12512
  %ave48 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state47, i32 0, i32 3, !dbg !12513
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %ave48, i64 0, i64 0, !dbg !12511
  %call50 = call float @normalize_v3(float* %arraydecay49), !dbg !12514
  %26 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12515
  %prev_state51 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %26, i32 0, i32 1, !dbg !12516
  %vel52 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state51, i32 0, i32 1, !dbg !12517
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %vel52, i64 0, i64 0, !dbg !12515
  %27 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12518
  %state54 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %27, i32 0, i32 0, !dbg !12519
  %vel55 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state54, i32 0, i32 1, !dbg !12520
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %vel55, i64 0, i64 0, !dbg !12518
  %call57 = call float @dot_v3v3(float* %arraydecay53, float* %arraydecay56), !dbg !12521
  %28 = load float, float* %len1, align 4, !dbg !12522
  %29 = load float, float* %len2, align 4, !dbg !12523
  %mul58 = fmul float %28, %29, !dbg !12524
  %div = fdiv float %call57, %mul58, !dbg !12525
  store float %div, float* %angle, align 4, !dbg !12526
  %30 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12527
  %state59 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %30, i32 0, i32 0, !dbg !12528
  %ave60 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state59, i32 0, i32 3, !dbg !12529
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %ave60, i64 0, i64 0, !dbg !12527
  %31 = load float, float* %angle, align 4, !dbg !12530
  %call62 = call float @saacos(float %31), !dbg !12531
  %32 = load float, float* %dtime, align 4, !dbg !12532
  %div63 = fdiv float %call62, %32, !dbg !12533
  call void @mul_v3_fl(float* %arraydecay61, float %div63), !dbg !12534
  br label %if.end64

if.end64:                                         ; preds = %if.else37, %if.then33
  %33 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !12535
  %avemode65 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %33, i32 0, i32 13, !dbg !12536
  %34 = load i16, i16* %avemode65, align 4, !dbg !12536
  %35 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12537
  %state66 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %35, i32 0, i32 0, !dbg !12538
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12539
  call void @get_angular_velocity_vector(i16 signext %34, %struct.ParticleKey* %state66, float* %arraydecay67), !dbg !12540
  %arraydecay68 = getelementptr inbounds [4 x float], [4 x float]* %rot2, i64 0, i64 0, !dbg !12541
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12542
  %36 = load float, float* %dtime, align 4, !dbg !12543
  %37 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !12544
  %avefac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %37, i32 0, i32 77, !dbg !12545
  %38 = load float, float* %avefac, align 4, !dbg !12545
  %mul70 = fmul float %36, %38, !dbg !12546
  call void @axis_angle_to_quat(float* %arraydecay68, float* %arraydecay69, float %mul70), !dbg !12547
  br label %if.end71, !dbg !12548

if.end71:                                         ; preds = %if.end64, %lor.lhs.false16, %if.end6
  %39 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12549
  %state72 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %39, i32 0, i32 0, !dbg !12550
  %ave73 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state72, i32 0, i32 3, !dbg !12551
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %ave73, i64 0, i64 0, !dbg !12549
  %call75 = call float @len_v3(float* %arraydecay74), !dbg !12552
  store float %call75, float* %rotfac, align 4, !dbg !12553
  %40 = load float, float* %rotfac, align 4, !dbg !12554
  %cmp76 = fcmp oeq float %40, 0.000000e+00, !dbg !12556
  br i1 %cmp76, label %if.then86, label %lor.lhs.false78, !dbg !12557

lor.lhs.false78:                                  ; preds = %if.end71
  %41 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !12558
  %flag79 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %41, i32 0, i32 5, !dbg !12559
  %42 = load i32, i32* %flag79, align 8, !dbg !12559
  %and80 = and i32 %42, 16384, !dbg !12560
  %cmp81 = icmp eq i32 %and80, 0, !dbg !12561
  br i1 %cmp81, label %if.then86, label %lor.lhs.false83, !dbg !12562

lor.lhs.false83:                                  ; preds = %lor.lhs.false78
  %43 = load float, float* %extrotfac, align 4, !dbg !12563
  %cmp84 = fcmp oeq float %43, 0.000000e+00, !dbg !12564
  br i1 %cmp84, label %if.then86, label %if.else88, !dbg !12565

if.then86:                                        ; preds = %lor.lhs.false83, %lor.lhs.false78, %if.end71
  %arraydecay87 = getelementptr inbounds [4 x float], [4 x float]* %rot1, i64 0, i64 0, !dbg !12566
  call void @unit_qt(float* %arraydecay87), !dbg !12568
  br label %if.end94, !dbg !12569

if.else88:                                        ; preds = %lor.lhs.false83
  %arraydecay89 = getelementptr inbounds [4 x float], [4 x float]* %rot1, i64 0, i64 0, !dbg !12570
  %44 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12572
  %state90 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %44, i32 0, i32 0, !dbg !12573
  %ave91 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state90, i32 0, i32 3, !dbg !12574
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %ave91, i64 0, i64 0, !dbg !12572
  %45 = load float, float* %rotfac, align 4, !dbg !12575
  %46 = load float, float* %dtime, align 4, !dbg !12576
  %mul93 = fmul float %45, %46, !dbg !12577
  call void @axis_angle_to_quat(float* %arraydecay89, float* %arraydecay92, float %mul93), !dbg !12578
  br label %if.end94

if.end94:                                         ; preds = %if.else88, %if.then86
  %47 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12579
  %state95 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %47, i32 0, i32 0, !dbg !12580
  %rot96 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state95, i32 0, i32 2, !dbg !12581
  %arraydecay97 = getelementptr inbounds [4 x float], [4 x float]* %rot96, i64 0, i64 0, !dbg !12579
  %arraydecay98 = getelementptr inbounds [4 x float], [4 x float]* %rot1, i64 0, i64 0, !dbg !12582
  %48 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12583
  %prev_state99 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %48, i32 0, i32 1, !dbg !12584
  %rot100 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state99, i32 0, i32 2, !dbg !12585
  %arraydecay101 = getelementptr inbounds [4 x float], [4 x float]* %rot100, i64 0, i64 0, !dbg !12583
  call void @mul_qt_qtqt(float* %arraydecay97, float* %arraydecay98, float* %arraydecay101), !dbg !12586
  %49 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12587
  %state102 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %49, i32 0, i32 0, !dbg !12588
  %rot103 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state102, i32 0, i32 2, !dbg !12589
  %arraydecay104 = getelementptr inbounds [4 x float], [4 x float]* %rot103, i64 0, i64 0, !dbg !12587
  %arraydecay105 = getelementptr inbounds [4 x float], [4 x float]* %rot2, i64 0, i64 0, !dbg !12590
  %50 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12591
  %state106 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %50, i32 0, i32 0, !dbg !12592
  %rot107 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state106, i32 0, i32 2, !dbg !12593
  %arraydecay108 = getelementptr inbounds [4 x float], [4 x float]* %rot107, i64 0, i64 0, !dbg !12591
  call void @mul_qt_qtqt(float* %arraydecay104, float* %arraydecay105, float* %arraydecay108), !dbg !12594
  %51 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12595
  %state109 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %51, i32 0, i32 0, !dbg !12596
  %rot110 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state109, i32 0, i32 2, !dbg !12597
  %arraydecay111 = getelementptr inbounds [4 x float], [4 x float]* %rot110, i64 0, i64 0, !dbg !12595
  %call112 = call float @normalize_qt(float* %arraydecay111), !dbg !12598
  br label %return, !dbg !12599

return:                                           ; preds = %if.end94, %if.then
  ret void, !dbg !12599
}

declare dso_local void @boid_brain(%struct.BoidBrainData*, i32, %struct.ParticleData*) #2

declare dso_local void @boid_body(%struct.BoidBrainData*, %struct.ParticleData*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sph_integrate(%struct.ParticleSimulationData* %sim, %struct.ParticleData* %pa, float %dfra, %struct.SPHData* %sphdata) #0 !dbg !12600 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %pa.addr = alloca %struct.ParticleData*, align 8
  %dfra.addr = alloca float, align 4
  %sphdata.addr = alloca %struct.SPHData*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %pa_mass = alloca float, align 4
  %dtime = alloca float, align 4
  %effector_acceleration = alloca [3 x float], align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !12603, metadata !DIExpression()), !dbg !12604
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !12605, metadata !DIExpression()), !dbg !12606
  store float %dfra, float* %dfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dfra.addr, metadata !12607, metadata !DIExpression()), !dbg !12608
  store %struct.SPHData* %sphdata, %struct.SPHData** %sphdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SPHData** %sphdata.addr, metadata !12609, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !12611, metadata !DIExpression()), !dbg !12612
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12613
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !12614
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !12614
  %part1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 2, !dbg !12615
  %2 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part1, align 8, !dbg !12615
  store %struct.ParticleSettings* %2, %struct.ParticleSettings** %part, align 8, !dbg !12612
  call void @llvm.dbg.declare(metadata float* %pa_mass, metadata !12616, metadata !DIExpression()), !dbg !12617
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12618
  %mass = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %3, i32 0, i32 81, !dbg !12619
  %4 = load float, float* %mass, align 4, !dbg !12619
  %5 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12620
  %flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %5, i32 0, i32 5, !dbg !12621
  %6 = load i32, i32* %flag, align 8, !dbg !12621
  %and = and i32 %6, 65536, !dbg !12622
  %tobool = icmp ne i32 %and, 0, !dbg !12622
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12620

cond.true:                                        ; preds = %entry
  %7 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12623
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %7, i32 0, i32 13, !dbg !12624
  %8 = load float, float* %size, align 4, !dbg !12624
  br label %cond.end, !dbg !12620

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12620

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %8, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !12620
  %mul = fmul float %4, %cond, !dbg !12625
  store float %mul, float* %pa_mass, align 4, !dbg !12617
  call void @llvm.dbg.declare(metadata float* %dtime, metadata !12626, metadata !DIExpression()), !dbg !12627
  %9 = load float, float* %dfra.addr, align 4, !dbg !12628
  %10 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12629
  %call = call float @psys_get_timestep(%struct.ParticleSimulationData* %10), !dbg !12630
  %mul2 = fmul float %9, %call, !dbg !12631
  store float %mul2, float* %dtime, align 4, !dbg !12627
  call void @llvm.dbg.declare(metadata [3 x float]* %effector_acceleration, metadata !12632, metadata !DIExpression()), !dbg !12633
  %11 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12634
  %12 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !12635
  %pa3 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %12, i32 0, i32 1, !dbg !12636
  store %struct.ParticleData* %11, %struct.ParticleData** %pa3, align 8, !dbg !12637
  %13 = load float, float* %pa_mass, align 4, !dbg !12638
  %14 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !12639
  %mass4 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %14, i32 0, i32 2, !dbg !12640
  store float %13, float* %mass4, align 8, !dbg !12641
  %15 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !12642
  %pass = getelementptr inbounds %struct.SPHData, %struct.SPHData* %15, i32 0, i32 6, !dbg !12643
  store i32 0, i32* %pass, align 4, !dbg !12644
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %effector_acceleration, i64 0, i64 0, !dbg !12645
  %16 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12646
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %16, i32 0, i32 0, !dbg !12647
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 1, !dbg !12648
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !12646
  %17 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12649
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %17, i32 0, i32 1, !dbg !12650
  %vel6 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 1, !dbg !12651
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %vel6, i64 0, i64 0, !dbg !12649
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay5, float* %arraydecay7), !dbg !12652
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %effector_acceleration, i64 0, i64 0, !dbg !12653
  %18 = load float, float* %dtime, align 4, !dbg !12654
  %div = fdiv float 1.000000e+00, %18, !dbg !12655
  call void @mul_v3_fl(float* %arraydecay8, float %div), !dbg !12656
  %19 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12657
  %state9 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %19, i32 0, i32 0, !dbg !12658
  %20 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12659
  %prev_state10 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %20, i32 0, i32 1, !dbg !12660
  call void @copy_particle_key(%struct.ParticleKey* %state9, %struct.ParticleKey* %prev_state10, i32 0), !dbg !12661
  %21 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12662
  %22 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12663
  %23 = load float, float* %dtime, align 4, !dbg !12664
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %effector_acceleration, i64 0, i64 0, !dbg !12665
  %24 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !12666
  %force_cb = getelementptr inbounds %struct.SPHData, %struct.SPHData* %24, i32 0, i32 9, !dbg !12667
  %25 = load void (i8*, %struct.ParticleKey*, float*, float*)*, void (i8*, %struct.ParticleKey*, float*, float*)** %force_cb, align 8, !dbg !12667
  %26 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !12668
  %27 = bitcast %struct.SPHData* %26 to i8*, !dbg !12668
  call void @integrate_particle(%struct.ParticleSettings* %21, %struct.ParticleData* %22, float %23, float* %arraydecay11, void (i8*, %struct.ParticleKey*, float*, float*)* %25, i8* %27), !dbg !12669
  ret void, !dbg !12670
}

; Function Attrs: noinline nounwind uwtable
define internal void @update_courant_num(%struct.ParticleSimulationData* %sim, %struct.ParticleData* %pa, float %dtime, %struct.SPHData* %sphdata) #0 !dbg !12671 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %pa.addr = alloca %struct.ParticleData*, align 8
  %dtime.addr = alloca float, align 4
  %sphdata.addr = alloca %struct.SPHData*, align 8
  %relative_vel = alloca [3 x float], align 4
  %speed = alloca float, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !12672, metadata !DIExpression()), !dbg !12673
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !12674, metadata !DIExpression()), !dbg !12675
  store float %dtime, float* %dtime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dtime.addr, metadata !12676, metadata !DIExpression()), !dbg !12677
  store %struct.SPHData* %sphdata, %struct.SPHData** %sphdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SPHData** %sphdata.addr, metadata !12678, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.declare(metadata [3 x float]* %relative_vel, metadata !12680, metadata !DIExpression()), !dbg !12681
  call void @llvm.dbg.declare(metadata float* %speed, metadata !12682, metadata !DIExpression()), !dbg !12683
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %relative_vel, i64 0, i64 0, !dbg !12684
  %0 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12685
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %0, i32 0, i32 1, !dbg !12686
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 1, !dbg !12687
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !12685
  %1 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !12688
  %flow = getelementptr inbounds %struct.SPHData, %struct.SPHData* %1, i32 0, i32 8, !dbg !12689
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %flow, i64 0, i64 0, !dbg !12688
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay2), !dbg !12690
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %relative_vel, i64 0, i64 0, !dbg !12691
  %call = call float @len_v3(float* %arraydecay3), !dbg !12692
  store float %call, float* %speed, align 4, !dbg !12693
  %2 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12694
  %courant_num = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %2, i32 0, i32 5, !dbg !12696
  %3 = load float, float* %courant_num, align 8, !dbg !12696
  %4 = load float, float* %speed, align 4, !dbg !12697
  %5 = load float, float* %dtime.addr, align 4, !dbg !12698
  %mul = fmul float %4, %5, !dbg !12699
  %6 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !12700
  %element_size = getelementptr inbounds %struct.SPHData, %struct.SPHData* %6, i32 0, i32 7, !dbg !12701
  %7 = load float, float* %element_size, align 8, !dbg !12701
  %div = fdiv float %mul, %7, !dbg !12702
  %cmp = fcmp olt float %3, %div, !dbg !12703
  br i1 %cmp, label %if.then, label %if.end, !dbg !12704

if.then:                                          ; preds = %entry
  %8 = load float, float* %speed, align 4, !dbg !12705
  %9 = load float, float* %dtime.addr, align 4, !dbg !12706
  %mul4 = fmul float %8, %9, !dbg !12707
  %10 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !12708
  %element_size5 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %10, i32 0, i32 7, !dbg !12709
  %11 = load float, float* %element_size5, align 8, !dbg !12709
  %div6 = fdiv float %mul4, %11, !dbg !12710
  %12 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !12711
  %courant_num7 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %12, i32 0, i32 5, !dbg !12712
  store float %div6, float* %courant_num7, align 8, !dbg !12713
  br label %if.end, !dbg !12711

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12714
}

; Function Attrs: noinline nounwind uwtable
define internal void @sph_springs_modify(%struct.ParticleSystem* %psys, float %dtime) #0 !dbg !12715 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %dtime.addr = alloca float, align 4
  %fluid = alloca %struct.SPHFluidSettings*, align 8
  %pa1 = alloca %struct.ParticleData*, align 8
  %pa2 = alloca %struct.ParticleData*, align 8
  %spring = alloca %struct.ParticleSpring*, align 8
  %h = alloca float, align 4
  %d = alloca float, align 4
  %Rij = alloca [3 x float], align 4
  %rij = alloca float, align 4
  %Lij = alloca float, align 4
  %i = alloca i32, align 4
  %yield_ratio = alloca float, align 4
  %plasticity = alloca float, align 4
  %timefix = alloca float, align 4
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !12716, metadata !DIExpression()), !dbg !12717
  store float %dtime, float* %dtime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dtime.addr, metadata !12718, metadata !DIExpression()), !dbg !12719
  call void @llvm.dbg.declare(metadata %struct.SPHFluidSettings** %fluid, metadata !12720, metadata !DIExpression()), !dbg !12721
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12722
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 2, !dbg !12723
  %1 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12723
  %fluid1 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %1, i32 0, i32 3, !dbg !12724
  %2 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid1, align 8, !dbg !12724
  store %struct.SPHFluidSettings* %2, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12721
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa1, metadata !12725, metadata !DIExpression()), !dbg !12726
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa2, metadata !12727, metadata !DIExpression()), !dbg !12728
  call void @llvm.dbg.declare(metadata %struct.ParticleSpring** %spring, metadata !12729, metadata !DIExpression()), !dbg !12730
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12731
  %fluid_springs = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 43, !dbg !12732
  %4 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs, align 8, !dbg !12732
  store %struct.ParticleSpring* %4, %struct.ParticleSpring** %spring, align 8, !dbg !12730
  call void @llvm.dbg.declare(metadata float* %h, metadata !12733, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.declare(metadata float* %d, metadata !12735, metadata !DIExpression()), !dbg !12736
  call void @llvm.dbg.declare(metadata [3 x float]* %Rij, metadata !12737, metadata !DIExpression()), !dbg !12738
  call void @llvm.dbg.declare(metadata float* %rij, metadata !12739, metadata !DIExpression()), !dbg !12740
  call void @llvm.dbg.declare(metadata float* %Lij, metadata !12741, metadata !DIExpression()), !dbg !12742
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12743, metadata !DIExpression()), !dbg !12744
  call void @llvm.dbg.declare(metadata float* %yield_ratio, metadata !12745, metadata !DIExpression()), !dbg !12746
  %5 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12747
  %yield_ratio2 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %5, i32 0, i32 4, !dbg !12748
  %6 = load float, float* %yield_ratio2, align 4, !dbg !12748
  store float %6, float* %yield_ratio, align 4, !dbg !12746
  call void @llvm.dbg.declare(metadata float* %plasticity, metadata !12749, metadata !DIExpression()), !dbg !12750
  %7 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12751
  %plasticity_constant = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %7, i32 0, i32 3, !dbg !12752
  %8 = load float, float* %plasticity_constant, align 4, !dbg !12752
  store float %8, float* %plasticity, align 4, !dbg !12750
  call void @llvm.dbg.declare(metadata float* %timefix, metadata !12753, metadata !DIExpression()), !dbg !12754
  %9 = load float, float* %dtime.addr, align 4, !dbg !12755
  %mul = fmul float 2.500000e+01, %9, !dbg !12756
  store float %mul, float* %timefix, align 4, !dbg !12754
  %10 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12757
  %flag = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %10, i32 0, i32 13, !dbg !12759
  %11 = load i32, i32* %flag, align 4, !dbg !12759
  %and = and i32 %11, 1, !dbg !12760
  %cmp = icmp eq i32 %and, 0, !dbg !12761
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12762

lor.lhs.false:                                    ; preds = %entry
  %12 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12763
  %spring_k = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %12, i32 0, i32 1, !dbg !12764
  %13 = load float, float* %spring_k, align 4, !dbg !12764
  %cmp3 = fcmp oeq float %13, 0.000000e+00, !dbg !12765
  br i1 %cmp3, label %if.then, label %if.end, !dbg !12766

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end51, !dbg !12767

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !12768
  br label %for.cond, !dbg !12770

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !12771
  %15 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12773
  %tot_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %15, i32 0, i32 44, !dbg !12774
  %16 = load i32, i32* %tot_fluidsprings, align 8, !dbg !12774
  %cmp4 = icmp slt i32 %14, %16, !dbg !12775
  br i1 %cmp4, label %for.body, label %for.end, !dbg !12776

for.body:                                         ; preds = %for.cond
  %17 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12777
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %17, i32 0, i32 3, !dbg !12779
  %18 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !12779
  %19 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring, align 8, !dbg !12780
  %particle_index = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %19, i32 0, i32 1, !dbg !12781
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %particle_index, i64 0, i64 0, !dbg !12780
  %20 = load i32, i32* %arrayidx, align 4, !dbg !12780
  %idx.ext = zext i32 %20 to i64, !dbg !12782
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %18, i64 %idx.ext, !dbg !12782
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %pa1, align 8, !dbg !12783
  %21 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12784
  %particles5 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %21, i32 0, i32 3, !dbg !12785
  %22 = load %struct.ParticleData*, %struct.ParticleData** %particles5, align 8, !dbg !12785
  %23 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring, align 8, !dbg !12786
  %particle_index6 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %23, i32 0, i32 1, !dbg !12787
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %particle_index6, i64 0, i64 1, !dbg !12786
  %24 = load i32, i32* %arrayidx7, align 4, !dbg !12786
  %idx.ext8 = zext i32 %24 to i64, !dbg !12788
  %add.ptr9 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %22, i64 %idx.ext8, !dbg !12788
  store %struct.ParticleData* %add.ptr9, %struct.ParticleData** %pa2, align 8, !dbg !12789
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %Rij, i64 0, i64 0, !dbg !12790
  %25 = load %struct.ParticleData*, %struct.ParticleData** %pa2, align 8, !dbg !12791
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %25, i32 0, i32 1, !dbg !12792
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 0, !dbg !12793
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12791
  %26 = load %struct.ParticleData*, %struct.ParticleData** %pa1, align 8, !dbg !12794
  %prev_state11 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %26, i32 0, i32 1, !dbg !12795
  %co12 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state11, i32 0, i32 0, !dbg !12796
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %co12, i64 0, i64 0, !dbg !12794
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay10, float* %arraydecay13), !dbg !12797
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %Rij, i64 0, i64 0, !dbg !12798
  %call = call float @normalize_v3(float* %arraydecay14), !dbg !12799
  store float %call, float* %rij, align 4, !dbg !12800
  %27 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring, align 8, !dbg !12801
  %rest_length = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %27, i32 0, i32 0, !dbg !12802
  %28 = load float, float* %rest_length, align 4, !dbg !12802
  store float %28, float* %Lij, align 4, !dbg !12803
  %29 = load float, float* %yield_ratio, align 4, !dbg !12804
  %30 = load float, float* %timefix, align 4, !dbg !12805
  %mul15 = fmul float %29, %30, !dbg !12806
  %31 = load float, float* %Lij, align 4, !dbg !12807
  %mul16 = fmul float %mul15, %31, !dbg !12808
  store float %mul16, float* %d, align 4, !dbg !12809
  %32 = load float, float* %rij, align 4, !dbg !12810
  %33 = load float, float* %Lij, align 4, !dbg !12812
  %34 = load float, float* %d, align 4, !dbg !12813
  %add = fadd float %33, %34, !dbg !12814
  %cmp17 = fcmp ogt float %32, %add, !dbg !12815
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !12816

if.then18:                                        ; preds = %for.body
  %35 = load float, float* %plasticity, align 4, !dbg !12817
  %36 = load float, float* %rij, align 4, !dbg !12818
  %37 = load float, float* %Lij, align 4, !dbg !12819
  %sub = fsub float %36, %37, !dbg !12820
  %38 = load float, float* %d, align 4, !dbg !12821
  %sub19 = fsub float %sub, %38, !dbg !12822
  %mul20 = fmul float %35, %sub19, !dbg !12823
  %39 = load float, float* %timefix, align 4, !dbg !12824
  %mul21 = fmul float %mul20, %39, !dbg !12825
  %40 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring, align 8, !dbg !12826
  %rest_length22 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %40, i32 0, i32 0, !dbg !12827
  %41 = load float, float* %rest_length22, align 4, !dbg !12828
  %add23 = fadd float %41, %mul21, !dbg !12828
  store float %add23, float* %rest_length22, align 4, !dbg !12828
  br label %if.end34, !dbg !12826

if.else:                                          ; preds = %for.body
  %42 = load float, float* %rij, align 4, !dbg !12829
  %43 = load float, float* %Lij, align 4, !dbg !12831
  %44 = load float, float* %d, align 4, !dbg !12832
  %sub24 = fsub float %43, %44, !dbg !12833
  %cmp25 = fcmp olt float %42, %sub24, !dbg !12834
  br i1 %cmp25, label %if.then26, label %if.end33, !dbg !12835

if.then26:                                        ; preds = %if.else
  %45 = load float, float* %plasticity, align 4, !dbg !12836
  %46 = load float, float* %Lij, align 4, !dbg !12837
  %47 = load float, float* %d, align 4, !dbg !12838
  %sub27 = fsub float %46, %47, !dbg !12839
  %48 = load float, float* %rij, align 4, !dbg !12840
  %sub28 = fsub float %sub27, %48, !dbg !12841
  %mul29 = fmul float %45, %sub28, !dbg !12842
  %49 = load float, float* %timefix, align 4, !dbg !12843
  %mul30 = fmul float %mul29, %49, !dbg !12844
  %50 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring, align 8, !dbg !12845
  %rest_length31 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %50, i32 0, i32 0, !dbg !12846
  %51 = load float, float* %rest_length31, align 4, !dbg !12847
  %sub32 = fsub float %51, %mul30, !dbg !12847
  store float %sub32, float* %rest_length31, align 4, !dbg !12847
  br label %if.end33, !dbg !12845

if.end33:                                         ; preds = %if.then26, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then18
  %52 = load %struct.ParticleData*, %struct.ParticleData** %pa1, align 8, !dbg !12848
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %52, i32 0, i32 13, !dbg !12849
  %53 = load float, float* %size, align 4, !dbg !12849
  %mul35 = fmul float 4.000000e+00, %53, !dbg !12850
  store float %mul35, float* %h, align 4, !dbg !12851
  %54 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring, align 8, !dbg !12852
  %rest_length36 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %54, i32 0, i32 0, !dbg !12854
  %55 = load float, float* %rest_length36, align 4, !dbg !12854
  %56 = load float, float* %h, align 4, !dbg !12855
  %cmp37 = fcmp ogt float %55, %56, !dbg !12856
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !12857

if.then38:                                        ; preds = %if.end34
  %57 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring, align 8, !dbg !12858
  %delete_flag = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %57, i32 0, i32 2, !dbg !12859
  store i32 1, i32* %delete_flag, align 4, !dbg !12860
  br label %if.end39, !dbg !12858

if.end39:                                         ; preds = %if.then38, %if.end34
  br label %for.inc, !dbg !12861

for.inc:                                          ; preds = %if.end39
  %58 = load i32, i32* %i, align 4, !dbg !12862
  %inc = add nsw i32 %58, 1, !dbg !12862
  store i32 %inc, i32* %i, align 4, !dbg !12862
  %59 = load %struct.ParticleSpring*, %struct.ParticleSpring** %spring, align 8, !dbg !12863
  %incdec.ptr = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %59, i32 1, !dbg !12863
  store %struct.ParticleSpring* %incdec.ptr, %struct.ParticleSpring** %spring, align 8, !dbg !12863
  br label %for.cond, !dbg !12864, !llvm.loop !12865

for.end:                                          ; preds = %for.cond
  %60 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12867
  %tot_fluidsprings40 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %60, i32 0, i32 44, !dbg !12869
  %61 = load i32, i32* %tot_fluidsprings40, align 8, !dbg !12869
  %sub41 = sub nsw i32 %61, 1, !dbg !12870
  store i32 %sub41, i32* %i, align 4, !dbg !12871
  br label %for.cond42, !dbg !12872

for.cond42:                                       ; preds = %for.inc50, %for.end
  %62 = load i32, i32* %i, align 4, !dbg !12873
  %cmp43 = icmp sge i32 %62, 0, !dbg !12875
  br i1 %cmp43, label %for.body44, label %for.end51, !dbg !12876

for.body44:                                       ; preds = %for.cond42
  %63 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12877
  %fluid_springs45 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %63, i32 0, i32 43, !dbg !12880
  %64 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs45, align 8, !dbg !12880
  %65 = load i32, i32* %i, align 4, !dbg !12881
  %idxprom = sext i32 %65 to i64, !dbg !12877
  %arrayidx46 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %64, i64 %idxprom, !dbg !12877
  %delete_flag47 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %arrayidx46, i32 0, i32 2, !dbg !12882
  %66 = load i32, i32* %delete_flag47, align 4, !dbg !12882
  %tobool = icmp ne i32 %66, 0, !dbg !12877
  br i1 %tobool, label %if.then48, label %if.end49, !dbg !12883

if.then48:                                        ; preds = %for.body44
  %67 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12884
  %68 = load i32, i32* %i, align 4, !dbg !12885
  call void @sph_spring_delete(%struct.ParticleSystem* %67, i32 %68), !dbg !12886
  br label %if.end49, !dbg !12886

if.end49:                                         ; preds = %if.then48, %for.body44
  br label %for.inc50, !dbg !12887

for.inc50:                                        ; preds = %if.end49
  %69 = load i32, i32* %i, align 4, !dbg !12888
  %dec = add nsw i32 %69, -1, !dbg !12888
  store i32 %dec, i32* %i, align 4, !dbg !12888
  br label %for.cond42, !dbg !12889, !llvm.loop !12890

for.end51:                                        ; preds = %if.then, %for.cond42
  ret void, !dbg !12892
}

; Function Attrs: noinline nounwind uwtable
define internal void @sphclassical_calc_dens(%struct.ParticleData* %pa, float %UNUSED_dfra, %struct.SPHData* %sphdata) #0 !dbg !12893 {
entry:
  %pa.addr = alloca %struct.ParticleData*, align 8
  %UNUSED_dfra.addr = alloca float, align 4
  %sphdata.addr = alloca %struct.SPHData*, align 8
  %psys = alloca %struct.ParticleSystem**, align 8
  %fluid = alloca %struct.SPHFluidSettings*, align 8
  %interaction_radius = alloca float, align 4
  %pfr = alloca %struct.SPHRangeData, align 8
  %data = alloca [2 x float], align 4
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !12896, metadata !DIExpression()), !dbg !12897
  store float %UNUSED_dfra, float* %UNUSED_dfra.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_dfra.addr, metadata !12898, metadata !DIExpression()), !dbg !12899
  store %struct.SPHData* %sphdata, %struct.SPHData** %sphdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SPHData** %sphdata.addr, metadata !12900, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem*** %psys, metadata !12902, metadata !DIExpression()), !dbg !12903
  %0 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !12904
  %psys1 = getelementptr inbounds %struct.SPHData, %struct.SPHData* %0, i32 0, i32 0, !dbg !12905
  %arraydecay = getelementptr inbounds [10 x %struct.ParticleSystem*], [10 x %struct.ParticleSystem*]* %psys1, i64 0, i64 0, !dbg !12904
  store %struct.ParticleSystem** %arraydecay, %struct.ParticleSystem*** %psys, align 8, !dbg !12903
  call void @llvm.dbg.declare(metadata %struct.SPHFluidSettings** %fluid, metadata !12906, metadata !DIExpression()), !dbg !12907
  %1 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !12908
  %arrayidx = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %1, i64 0, !dbg !12908
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx, align 8, !dbg !12908
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !12909
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12909
  %fluid2 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %3, i32 0, i32 3, !dbg !12910
  %4 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid2, align 8, !dbg !12910
  store %struct.SPHFluidSettings* %4, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12907
  call void @llvm.dbg.declare(metadata float* %interaction_radius, metadata !12911, metadata !DIExpression()), !dbg !12912
  %5 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12913
  %radius = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %5, i32 0, i32 0, !dbg !12914
  %6 = load float, float* %radius, align 4, !dbg !12914
  %7 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12915
  %flag = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %7, i32 0, i32 13, !dbg !12916
  %8 = load i32, i32* %flag, align 4, !dbg !12916
  %and = and i32 %8, 16, !dbg !12917
  %tobool = icmp ne i32 %and, 0, !dbg !12917
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12915

cond.true:                                        ; preds = %entry
  %9 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !12918
  %arrayidx3 = getelementptr inbounds %struct.ParticleSystem*, %struct.ParticleSystem** %9, i64 0, !dbg !12918
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %arrayidx3, align 8, !dbg !12918
  %part4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 2, !dbg !12919
  %11 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part4, align 8, !dbg !12919
  %size = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %11, i32 0, i32 82, !dbg !12920
  %12 = load float, float* %size, align 8, !dbg !12920
  %mul = fmul float 4.000000e+00, %12, !dbg !12921
  br label %cond.end, !dbg !12915

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12915

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !12915
  %mul5 = fmul float %6, %cond, !dbg !12922
  store float %mul5, float* %interaction_radius, align 4, !dbg !12912
  call void @llvm.dbg.declare(metadata %struct.SPHRangeData* %pfr, metadata !12923, metadata !DIExpression()), !dbg !12924
  call void @llvm.dbg.declare(metadata [2 x float]* %data, metadata !12925, metadata !DIExpression()), !dbg !12926
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %data, i64 0, i64 0, !dbg !12927
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !12928
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %data, i64 0, i64 1, !dbg !12929
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !12930
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %data, i64 0, i64 0, !dbg !12931
  %data9 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 2, !dbg !12932
  store float* %arraydecay8, float** %data9, align 8, !dbg !12933
  %13 = load float, float* %interaction_radius, align 4, !dbg !12934
  %14 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !12935
  %hfac = getelementptr inbounds %struct.SPHData, %struct.SPHData* %14, i32 0, i32 5, !dbg !12936
  %15 = load float, float* %hfac, align 8, !dbg !12936
  %mul10 = fmul float %13, %15, !dbg !12937
  %h = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 5, !dbg !12938
  store float %mul10, float* %h, align 8, !dbg !12939
  %16 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12940
  %pa11 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 4, !dbg !12941
  store %struct.ParticleData* %16, %struct.ParticleData** %pa11, align 8, !dbg !12942
  %17 = load %struct.SPHData*, %struct.SPHData** %sphdata.addr, align 8, !dbg !12943
  %mass = getelementptr inbounds %struct.SPHData, %struct.SPHData* %17, i32 0, i32 2, !dbg !12944
  %18 = load float, float* %mass, align 8, !dbg !12944
  %mass12 = getelementptr inbounds %struct.SPHRangeData, %struct.SPHRangeData* %pfr, i32 0, i32 6, !dbg !12945
  store float %18, float* %mass12, align 4, !dbg !12946
  %19 = load %struct.ParticleSystem**, %struct.ParticleSystem*** %psys, align 8, !dbg !12947
  %20 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12948
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %20, i32 0, i32 0, !dbg !12949
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !12950
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12948
  %21 = load float, float* %interaction_radius, align 4, !dbg !12951
  call void @sph_evaluate_func(%struct.BVHTree* null, %struct.ParticleSystem** %19, float* %arraydecay13, %struct.SPHRangeData* %pfr, float %21, void (i8*, i32, float)* @sphclassical_density_accum_cb), !dbg !12952
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %data, i64 0, i64 0, !dbg !12953
  %22 = load float, float* %arrayidx14, align 4, !dbg !12953
  %23 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12953
  %rest_density = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %23, i32 0, i32 11, !dbg !12953
  %24 = load float, float* %rest_density, align 4, !dbg !12953
  %mul15 = fmul float %24, 0x3FECCCCCC0000000, !dbg !12953
  %cmp = fcmp ogt float %22, %mul15, !dbg !12953
  br i1 %cmp, label %cond.true16, label %cond.false18, !dbg !12953

cond.true16:                                      ; preds = %cond.end
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* %data, i64 0, i64 0, !dbg !12953
  %25 = load float, float* %arrayidx17, align 4, !dbg !12953
  br label %cond.end21, !dbg !12953

cond.false18:                                     ; preds = %cond.end
  %26 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12953
  %rest_density19 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %26, i32 0, i32 11, !dbg !12953
  %27 = load float, float* %rest_density19, align 4, !dbg !12953
  %mul20 = fmul float %27, 0x3FECCCCCC0000000, !dbg !12953
  br label %cond.end21, !dbg !12953

cond.end21:                                       ; preds = %cond.false18, %cond.true16
  %cond22 = phi float [ %25, %cond.true16 ], [ %mul20, %cond.false18 ], !dbg !12953
  %28 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12953
  %rest_density23 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %28, i32 0, i32 11, !dbg !12953
  %29 = load float, float* %rest_density23, align 4, !dbg !12953
  %mul24 = fmul float %29, 0x3FF19999A0000000, !dbg !12953
  %cmp25 = fcmp olt float %cond22, %mul24, !dbg !12953
  br i1 %cmp25, label %cond.true26, label %cond.false38, !dbg !12953

cond.true26:                                      ; preds = %cond.end21
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %data, i64 0, i64 0, !dbg !12953
  %30 = load float, float* %arrayidx27, align 4, !dbg !12953
  %31 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12953
  %rest_density28 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %31, i32 0, i32 11, !dbg !12953
  %32 = load float, float* %rest_density28, align 4, !dbg !12953
  %mul29 = fmul float %32, 0x3FECCCCCC0000000, !dbg !12953
  %cmp30 = fcmp ogt float %30, %mul29, !dbg !12953
  br i1 %cmp30, label %cond.true31, label %cond.false33, !dbg !12953

cond.true31:                                      ; preds = %cond.true26
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %data, i64 0, i64 0, !dbg !12953
  %33 = load float, float* %arrayidx32, align 4, !dbg !12953
  br label %cond.end36, !dbg !12953

cond.false33:                                     ; preds = %cond.true26
  %34 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12953
  %rest_density34 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %34, i32 0, i32 11, !dbg !12953
  %35 = load float, float* %rest_density34, align 4, !dbg !12953
  %mul35 = fmul float %35, 0x3FECCCCCC0000000, !dbg !12953
  br label %cond.end36, !dbg !12953

cond.end36:                                       ; preds = %cond.false33, %cond.true31
  %cond37 = phi float [ %33, %cond.true31 ], [ %mul35, %cond.false33 ], !dbg !12953
  br label %cond.end41, !dbg !12953

cond.false38:                                     ; preds = %cond.end21
  %36 = load %struct.SPHFluidSettings*, %struct.SPHFluidSettings** %fluid, align 8, !dbg !12953
  %rest_density39 = getelementptr inbounds %struct.SPHFluidSettings, %struct.SPHFluidSettings* %36, i32 0, i32 11, !dbg !12953
  %37 = load float, float* %rest_density39, align 4, !dbg !12953
  %mul40 = fmul float %37, 0x3FF19999A0000000, !dbg !12953
  br label %cond.end41, !dbg !12953

cond.end41:                                       ; preds = %cond.false38, %cond.end36
  %cond42 = phi float [ %cond37, %cond.end36 ], [ %mul40, %cond.false38 ], !dbg !12953
  %38 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12954
  %sphdensity = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %38, i32 0, i32 14, !dbg !12955
  store float %cond42, float* %sphdensity, align 8, !dbg !12956
  ret void, !dbg !12957
}

declare dso_local void @free_collider_cache(%struct.ListBase**) #2

declare dso_local void @BLI_bvhtree_free(%struct.BVHTree*) #2

declare dso_local %struct.BVHTree* @BLI_bvhtree_new(i32, float, i8 zeroext, i8 zeroext) #2

declare dso_local void @BLI_bvhtree_insert(%struct.BVHTree*, i32, float*, i32) #2

declare dso_local void @BLI_bvhtree_balance(%struct.BVHTree*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @integrate_particle(%struct.ParticleSettings* %part, %struct.ParticleData* %pa, float %dtime, float* %external_acceleration, void (i8*, %struct.ParticleKey*, float*, float*)* %force_func, i8* %forcedata) #0 !dbg !12958 {
entry:
  %part.addr = alloca %struct.ParticleSettings*, align 8
  %pa.addr = alloca %struct.ParticleData*, align 8
  %dtime.addr = alloca float, align 4
  %external_acceleration.addr = alloca float*, align 8
  %force_func.addr = alloca void (i8*, %struct.ParticleKey*, float*, float*)*, align 8
  %forcedata.addr = alloca i8*, align 8
  %states = alloca [5 x %struct.ParticleKey], align 16
  %force = alloca [3 x float], align 4
  %acceleration = alloca [3 x float], align 4
  %impulse = alloca [3 x float], align 4
  %dx = alloca [4 x [3 x float]], align 16
  %dv = alloca [4 x [3 x float]], align 16
  %oldpos = alloca [3 x float], align 4
  %pa_mass = alloca float, align 4
  %i = alloca i32, align 4
  %steps = alloca i32, align 4
  %integrator = alloca i32, align 4
  store %struct.ParticleSettings* %part, %struct.ParticleSettings** %part.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part.addr, metadata !12961, metadata !DIExpression()), !dbg !12962
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !12963, metadata !DIExpression()), !dbg !12964
  store float %dtime, float* %dtime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dtime.addr, metadata !12965, metadata !DIExpression()), !dbg !12966
  store float* %external_acceleration, float** %external_acceleration.addr, align 8
  call void @llvm.dbg.declare(metadata float** %external_acceleration.addr, metadata !12967, metadata !DIExpression()), !dbg !12968
  store void (i8*, %struct.ParticleKey*, float*, float*)* %force_func, void (i8*, %struct.ParticleKey*, float*, float*)** %force_func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, %struct.ParticleKey*, float*, float*)** %force_func.addr, metadata !12969, metadata !DIExpression()), !dbg !12970
  store i8* %forcedata, i8** %forcedata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %forcedata.addr, metadata !12971, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.declare(metadata [5 x %struct.ParticleKey]* %states, metadata !12973, metadata !DIExpression()), !dbg !12975
  call void @llvm.dbg.declare(metadata [3 x float]* %force, metadata !12976, metadata !DIExpression()), !dbg !12977
  call void @llvm.dbg.declare(metadata [3 x float]* %acceleration, metadata !12978, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.declare(metadata [3 x float]* %impulse, metadata !12980, metadata !DIExpression()), !dbg !12981
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %dx, metadata !12982, metadata !DIExpression()), !dbg !12985
  %0 = bitcast [4 x [3 x float]]* %dx to i8*, !dbg !12985
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 48, i1 false), !dbg !12985
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %dv, metadata !12986, metadata !DIExpression()), !dbg !12987
  %1 = bitcast [4 x [3 x float]]* %dv to i8*, !dbg !12987
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 48, i1 false), !dbg !12987
  call void @llvm.dbg.declare(metadata [3 x float]* %oldpos, metadata !12988, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.declare(metadata float* %pa_mass, metadata !12990, metadata !DIExpression()), !dbg !12991
  %2 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !12992
  %flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %2, i32 0, i32 5, !dbg !12993
  %3 = load i32, i32* %flag, align 8, !dbg !12993
  %and = and i32 %3, 65536, !dbg !12994
  %tobool = icmp ne i32 %and, 0, !dbg !12994
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12992

cond.true:                                        ; preds = %entry
  %4 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !12995
  %mass = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %4, i32 0, i32 81, !dbg !12996
  %5 = load float, float* %mass, align 4, !dbg !12996
  %6 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !12997
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %6, i32 0, i32 13, !dbg !12998
  %7 = load float, float* %size, align 4, !dbg !12998
  %mul = fmul float %5, %7, !dbg !12999
  br label %cond.end, !dbg !12992

cond.false:                                       ; preds = %entry
  %8 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !13000
  %mass1 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %8, i32 0, i32 81, !dbg !13001
  %9 = load float, float* %mass1, align 4, !dbg !13001
  br label %cond.end, !dbg !12992

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul, %cond.true ], [ %9, %cond.false ], !dbg !12992
  store float %cond, float* %pa_mass, align 4, !dbg !12991
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13002, metadata !DIExpression()), !dbg !13003
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !13004, metadata !DIExpression()), !dbg !13005
  store i32 1, i32* %steps, align 4, !dbg !13005
  call void @llvm.dbg.declare(metadata i32* %integrator, metadata !13006, metadata !DIExpression()), !dbg !13007
  %10 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !13008
  %integrator2 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %10, i32 0, i32 33, !dbg !13009
  %11 = load i16, i16* %integrator2, align 8, !dbg !13009
  %conv = sext i16 %11 to i32, !dbg !13008
  store i32 %conv, i32* %integrator, align 4, !dbg !13007
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %oldpos, i64 0, i64 0, !dbg !13010
  %12 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13011
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %12, i32 0, i32 0, !dbg !13012
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !13013
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13011
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !13014
  %13 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13015
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %13, i32 0, i32 1, !dbg !13017
  %time = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 4, !dbg !13018
  %14 = load float, float* %time, align 4, !dbg !13018
  %cmp = fcmp olt float %14, 0.000000e+00, !dbg !13019
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13020

land.lhs.true:                                    ; preds = %cond.end
  %15 = load i32, i32* %integrator, align 4, !dbg !13021
  %cmp5 = icmp eq i32 %15, 3, !dbg !13022
  br i1 %cmp5, label %if.then, label %if.end, !dbg !13023

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %integrator, align 4, !dbg !13024
  br label %if.end, !dbg !13025

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  %16 = load i32, i32* %integrator, align 4, !dbg !13026
  switch i32 %16, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
    i32 2, label %sw.bb8
    i32 3, label %sw.bb9
  ], !dbg !13027

sw.bb:                                            ; preds = %if.end
  store i32 1, i32* %steps, align 4, !dbg !13028
  br label %sw.epilog, !dbg !13030

sw.bb7:                                           ; preds = %if.end
  store i32 2, i32* %steps, align 4, !dbg !13031
  br label %sw.epilog, !dbg !13032

sw.bb8:                                           ; preds = %if.end
  store i32 4, i32* %steps, align 4, !dbg !13033
  br label %sw.epilog, !dbg !13034

sw.bb9:                                           ; preds = %if.end
  store i32 1, i32* %steps, align 4, !dbg !13035
  br label %sw.epilog, !dbg !13036

sw.epilog:                                        ; preds = %if.end, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb
  store i32 0, i32* %i, align 4, !dbg !13037
  br label %for.cond, !dbg !13039

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %17 = load i32, i32* %i, align 4, !dbg !13040
  %18 = load i32, i32* %steps, align 4, !dbg !13042
  %cmp10 = icmp slt i32 %17, %18, !dbg !13043
  br i1 %cmp10, label %for.body, label %for.end, !dbg !13044

for.body:                                         ; preds = %for.cond
  %arraydecay12 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13045
  %19 = load i32, i32* %i, align 4, !dbg !13047
  %idx.ext = sext i32 %19 to i64, !dbg !13048
  %add.ptr = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay12, i64 %idx.ext, !dbg !13048
  %20 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13049
  %state13 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %20, i32 0, i32 0, !dbg !13050
  call void @copy_particle_key(%struct.ParticleKey* %add.ptr, %struct.ParticleKey* %state13, i32 1), !dbg !13051
  br label %for.inc, !dbg !13052

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !13053
  %inc = add nsw i32 %21, 1, !dbg !13053
  store i32 %inc, i32* %i, align 4, !dbg !13053
  br label %for.cond, !dbg !13054, !llvm.loop !13055

for.end:                                          ; preds = %for.cond
  %arraydecay14 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13057
  %time15 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay14, i32 0, i32 4, !dbg !13057
  store float 0.000000e+00, float* %time15, align 4, !dbg !13058
  store i32 0, i32* %i, align 4, !dbg !13059
  br label %for.cond16, !dbg !13061

for.cond16:                                       ; preds = %for.inc285, %for.end
  %22 = load i32, i32* %i, align 4, !dbg !13062
  %23 = load i32, i32* %steps, align 4, !dbg !13064
  %cmp17 = icmp slt i32 %22, %23, !dbg !13065
  br i1 %cmp17, label %for.body19, label %for.end287, !dbg !13066

for.body19:                                       ; preds = %for.cond16
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !13067
  call void @zero_v3(float* %arraydecay20), !dbg !13069
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %impulse, i64 0, i64 0, !dbg !13070
  call void @zero_v3(float* %arraydecay21), !dbg !13071
  %24 = load void (i8*, %struct.ParticleKey*, float*, float*)*, void (i8*, %struct.ParticleKey*, float*, float*)** %force_func.addr, align 8, !dbg !13072
  %25 = load i8*, i8** %forcedata.addr, align 8, !dbg !13073
  %arraydecay22 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13074
  %26 = load i32, i32* %i, align 4, !dbg !13075
  %idx.ext23 = sext i32 %26 to i64, !dbg !13076
  %add.ptr24 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay22, i64 %idx.ext23, !dbg !13076
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !13077
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %impulse, i64 0, i64 0, !dbg !13078
  call void %24(i8* %25, %struct.ParticleKey* %add.ptr24, float* %arraydecay25, float* %arraydecay26), !dbg !13072
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %acceleration, i64 0, i64 0, !dbg !13079
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %force, i64 0, i64 0, !dbg !13080
  %27 = load float, float* %pa_mass, align 4, !dbg !13081
  %div = fdiv float 1.000000e+00, %27, !dbg !13082
  call void @mul_v3_v3fl(float* %arraydecay27, float* %arraydecay28, float %div), !dbg !13083
  %28 = load float*, float** %external_acceleration.addr, align 8, !dbg !13084
  %tobool29 = icmp ne float* %28, null, !dbg !13084
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !13086

if.then30:                                        ; preds = %for.body19
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %acceleration, i64 0, i64 0, !dbg !13087
  %29 = load float*, float** %external_acceleration.addr, align 8, !dbg !13088
  call void @add_v3_v3(float* %arraydecay31, float* %29), !dbg !13089
  br label %if.end32, !dbg !13089

if.end32:                                         ; preds = %if.then30, %for.body19
  %30 = load i32, i32* %i, align 4, !dbg !13090
  %idxprom = sext i32 %30 to i64, !dbg !13091
  %arrayidx = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 %idxprom, !dbg !13091
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx, i32 0, i32 1, !dbg !13092
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !13091
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %impulse, i64 0, i64 0, !dbg !13093
  call void @add_v3_v3(float* %arraydecay33, float* %arraydecay34), !dbg !13094
  %31 = load i32, i32* %integrator, align 4, !dbg !13095
  switch i32 %31, label %sw.epilog284 [
    i32 0, label %sw.bb35
    i32 1, label %sw.bb52
    i32 2, label %sw.bb94
    i32 3, label %sw.bb256
  ], !dbg !13096

sw.bb35:                                          ; preds = %if.end32
  %32 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13097
  %state36 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %32, i32 0, i32 0, !dbg !13099
  %co37 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state36, i32 0, i32 0, !dbg !13100
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %co37, i64 0, i64 0, !dbg !13097
  %arraydecay39 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13101
  %co40 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay39, i32 0, i32 0, !dbg !13101
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %co40, i64 0, i64 0, !dbg !13102
  %arraydecay42 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13103
  %vel43 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay42, i32 0, i32 1, !dbg !13103
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %vel43, i64 0, i64 0, !dbg !13104
  %33 = load float, float* %dtime.addr, align 4, !dbg !13105
  call void @madd_v3_v3v3fl(float* %arraydecay38, float* %arraydecay41, float* %arraydecay44, float %33), !dbg !13106
  %34 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13107
  %state45 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %34, i32 0, i32 0, !dbg !13108
  %vel46 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state45, i32 0, i32 1, !dbg !13109
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %vel46, i64 0, i64 0, !dbg !13107
  %arraydecay48 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13110
  %vel49 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay48, i32 0, i32 1, !dbg !13110
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %vel49, i64 0, i64 0, !dbg !13111
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %acceleration, i64 0, i64 0, !dbg !13112
  %35 = load float, float* %dtime.addr, align 4, !dbg !13113
  call void @madd_v3_v3v3fl(float* %arraydecay47, float* %arraydecay50, float* %arraydecay51, float %35), !dbg !13114
  br label %sw.epilog284, !dbg !13115

sw.bb52:                                          ; preds = %if.end32
  %36 = load i32, i32* %i, align 4, !dbg !13116
  %cmp53 = icmp eq i32 %36, 0, !dbg !13118
  br i1 %cmp53, label %if.then55, label %if.else, !dbg !13119

if.then55:                                        ; preds = %sw.bb52
  %arrayidx56 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 1, !dbg !13120
  %co57 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx56, i32 0, i32 0, !dbg !13122
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %co57, i64 0, i64 0, !dbg !13120
  %arraydecay59 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13123
  %co60 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay59, i32 0, i32 0, !dbg !13123
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %co60, i64 0, i64 0, !dbg !13124
  %arraydecay62 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13125
  %vel63 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay62, i32 0, i32 1, !dbg !13125
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %vel63, i64 0, i64 0, !dbg !13126
  %37 = load float, float* %dtime.addr, align 4, !dbg !13127
  %mul65 = fmul float %37, 5.000000e-01, !dbg !13128
  call void @madd_v3_v3v3fl(float* %arraydecay58, float* %arraydecay61, float* %arraydecay64, float %mul65), !dbg !13129
  %arrayidx66 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 1, !dbg !13130
  %vel67 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx66, i32 0, i32 1, !dbg !13131
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %vel67, i64 0, i64 0, !dbg !13130
  %arraydecay69 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13132
  %vel70 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay69, i32 0, i32 1, !dbg !13132
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %vel70, i64 0, i64 0, !dbg !13133
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %acceleration, i64 0, i64 0, !dbg !13134
  %38 = load float, float* %dtime.addr, align 4, !dbg !13135
  %mul73 = fmul float %38, 5.000000e-01, !dbg !13136
  call void @madd_v3_v3v3fl(float* %arraydecay68, float* %arraydecay71, float* %arraydecay72, float %mul73), !dbg !13137
  %39 = load float, float* %dtime.addr, align 4, !dbg !13138
  %mul74 = fmul float %39, 5.000000e-01, !dbg !13139
  %arrayidx75 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 1, !dbg !13140
  %time76 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx75, i32 0, i32 4, !dbg !13141
  store float %mul74, float* %time76, align 4, !dbg !13142
  br label %if.end93, !dbg !13143

if.else:                                          ; preds = %sw.bb52
  %40 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13144
  %state77 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %40, i32 0, i32 0, !dbg !13146
  %co78 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state77, i32 0, i32 0, !dbg !13147
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %co78, i64 0, i64 0, !dbg !13144
  %arraydecay80 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13148
  %co81 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay80, i32 0, i32 0, !dbg !13148
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %co81, i64 0, i64 0, !dbg !13149
  %arrayidx83 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 1, !dbg !13150
  %vel84 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx83, i32 0, i32 1, !dbg !13151
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %vel84, i64 0, i64 0, !dbg !13150
  %41 = load float, float* %dtime.addr, align 4, !dbg !13152
  call void @madd_v3_v3v3fl(float* %arraydecay79, float* %arraydecay82, float* %arraydecay85, float %41), !dbg !13153
  %42 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13154
  %state86 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %42, i32 0, i32 0, !dbg !13155
  %vel87 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state86, i32 0, i32 1, !dbg !13156
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %vel87, i64 0, i64 0, !dbg !13154
  %arraydecay89 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13157
  %vel90 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay89, i32 0, i32 1, !dbg !13157
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %vel90, i64 0, i64 0, !dbg !13158
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %acceleration, i64 0, i64 0, !dbg !13159
  %43 = load float, float* %dtime.addr, align 4, !dbg !13160
  call void @madd_v3_v3v3fl(float* %arraydecay88, float* %arraydecay91, float* %arraydecay92, float %43), !dbg !13161
  br label %if.end93

if.end93:                                         ; preds = %if.else, %if.then55
  br label %sw.epilog284, !dbg !13162

sw.bb94:                                          ; preds = %if.end32
  %44 = load i32, i32* %i, align 4, !dbg !13163
  switch i32 %44, label %sw.epilog255 [
    i32 0, label %sw.bb95
    i32 1, label %sw.bb127
    i32 2, label %sw.bb161
    i32 3, label %sw.bb194
  ], !dbg !13164

sw.bb95:                                          ; preds = %sw.bb94
  %arrayidx96 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 0, !dbg !13165
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx96, i64 0, i64 0, !dbg !13165
  %arraydecay98 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13167
  %vel99 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay98, i32 0, i32 1, !dbg !13167
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %vel99, i64 0, i64 0, !dbg !13168
  call void @copy_v3_v3(float* %arraydecay97, float* %arraydecay100), !dbg !13169
  %arrayidx101 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 0, !dbg !13170
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx101, i64 0, i64 0, !dbg !13170
  %45 = load float, float* %dtime.addr, align 4, !dbg !13171
  call void @mul_v3_fl(float* %arraydecay102, float %45), !dbg !13172
  %arrayidx103 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 0, !dbg !13173
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx103, i64 0, i64 0, !dbg !13173
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %acceleration, i64 0, i64 0, !dbg !13174
  call void @copy_v3_v3(float* %arraydecay104, float* %arraydecay105), !dbg !13175
  %arrayidx106 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 0, !dbg !13176
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx106, i64 0, i64 0, !dbg !13176
  %46 = load float, float* %dtime.addr, align 4, !dbg !13177
  call void @mul_v3_fl(float* %arraydecay107, float %46), !dbg !13178
  %arrayidx108 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 1, !dbg !13179
  %co109 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx108, i32 0, i32 0, !dbg !13180
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %co109, i64 0, i64 0, !dbg !13179
  %arraydecay111 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13181
  %co112 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay111, i32 0, i32 0, !dbg !13181
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %co112, i64 0, i64 0, !dbg !13182
  %arrayidx114 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 0, !dbg !13183
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx114, i64 0, i64 0, !dbg !13183
  call void @madd_v3_v3v3fl(float* %arraydecay110, float* %arraydecay113, float* %arraydecay115, float 5.000000e-01), !dbg !13184
  %arrayidx116 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 1, !dbg !13185
  %vel117 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx116, i32 0, i32 1, !dbg !13186
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %vel117, i64 0, i64 0, !dbg !13185
  %arraydecay119 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13187
  %vel120 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay119, i32 0, i32 1, !dbg !13187
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %vel120, i64 0, i64 0, !dbg !13188
  %arrayidx122 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 0, !dbg !13189
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx122, i64 0, i64 0, !dbg !13189
  call void @madd_v3_v3v3fl(float* %arraydecay118, float* %arraydecay121, float* %arraydecay123, float 5.000000e-01), !dbg !13190
  %47 = load float, float* %dtime.addr, align 4, !dbg !13191
  %mul124 = fmul float %47, 5.000000e-01, !dbg !13192
  %arrayidx125 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 1, !dbg !13193
  %time126 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx125, i32 0, i32 4, !dbg !13194
  store float %mul124, float* %time126, align 4, !dbg !13195
  br label %sw.epilog255, !dbg !13196

sw.bb127:                                         ; preds = %sw.bb94
  %arrayidx128 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 1, !dbg !13197
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx128, i64 0, i64 0, !dbg !13197
  %arraydecay130 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13198
  %vel131 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay130, i32 0, i32 1, !dbg !13198
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %vel131, i64 0, i64 0, !dbg !13199
  %arrayidx133 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 0, !dbg !13200
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx133, i64 0, i64 0, !dbg !13200
  call void @madd_v3_v3v3fl(float* %arraydecay129, float* %arraydecay132, float* %arraydecay134, float 5.000000e-01), !dbg !13201
  %arrayidx135 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 1, !dbg !13202
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx135, i64 0, i64 0, !dbg !13202
  %48 = load float, float* %dtime.addr, align 4, !dbg !13203
  call void @mul_v3_fl(float* %arraydecay136, float %48), !dbg !13204
  %arrayidx137 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 1, !dbg !13205
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx137, i64 0, i64 0, !dbg !13205
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %acceleration, i64 0, i64 0, !dbg !13206
  call void @copy_v3_v3(float* %arraydecay138, float* %arraydecay139), !dbg !13207
  %arrayidx140 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 1, !dbg !13208
  %arraydecay141 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx140, i64 0, i64 0, !dbg !13208
  %49 = load float, float* %dtime.addr, align 4, !dbg !13209
  call void @mul_v3_fl(float* %arraydecay141, float %49), !dbg !13210
  %arrayidx142 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 2, !dbg !13211
  %co143 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx142, i32 0, i32 0, !dbg !13212
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %co143, i64 0, i64 0, !dbg !13211
  %arraydecay145 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13213
  %co146 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay145, i32 0, i32 0, !dbg !13213
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %co146, i64 0, i64 0, !dbg !13214
  %arrayidx148 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 1, !dbg !13215
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx148, i64 0, i64 0, !dbg !13215
  call void @madd_v3_v3v3fl(float* %arraydecay144, float* %arraydecay147, float* %arraydecay149, float 5.000000e-01), !dbg !13216
  %arrayidx150 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 2, !dbg !13217
  %vel151 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx150, i32 0, i32 1, !dbg !13218
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %vel151, i64 0, i64 0, !dbg !13217
  %arraydecay153 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13219
  %vel154 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay153, i32 0, i32 1, !dbg !13219
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %vel154, i64 0, i64 0, !dbg !13220
  %arrayidx156 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 1, !dbg !13221
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx156, i64 0, i64 0, !dbg !13221
  call void @madd_v3_v3v3fl(float* %arraydecay152, float* %arraydecay155, float* %arraydecay157, float 5.000000e-01), !dbg !13222
  %50 = load float, float* %dtime.addr, align 4, !dbg !13223
  %mul158 = fmul float %50, 5.000000e-01, !dbg !13224
  %arrayidx159 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 2, !dbg !13225
  %time160 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx159, i32 0, i32 4, !dbg !13226
  store float %mul158, float* %time160, align 4, !dbg !13227
  br label %sw.epilog255, !dbg !13228

sw.bb161:                                         ; preds = %sw.bb94
  %arrayidx162 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 2, !dbg !13229
  %arraydecay163 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx162, i64 0, i64 0, !dbg !13229
  %arraydecay164 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13230
  %vel165 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay164, i32 0, i32 1, !dbg !13230
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %vel165, i64 0, i64 0, !dbg !13231
  %arrayidx167 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 1, !dbg !13232
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx167, i64 0, i64 0, !dbg !13232
  call void @madd_v3_v3v3fl(float* %arraydecay163, float* %arraydecay166, float* %arraydecay168, float 5.000000e-01), !dbg !13233
  %arrayidx169 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 2, !dbg !13234
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx169, i64 0, i64 0, !dbg !13234
  %51 = load float, float* %dtime.addr, align 4, !dbg !13235
  call void @mul_v3_fl(float* %arraydecay170, float %51), !dbg !13236
  %arrayidx171 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 2, !dbg !13237
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx171, i64 0, i64 0, !dbg !13237
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %acceleration, i64 0, i64 0, !dbg !13238
  call void @copy_v3_v3(float* %arraydecay172, float* %arraydecay173), !dbg !13239
  %arrayidx174 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 2, !dbg !13240
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx174, i64 0, i64 0, !dbg !13240
  %52 = load float, float* %dtime.addr, align 4, !dbg !13241
  call void @mul_v3_fl(float* %arraydecay175, float %52), !dbg !13242
  %arrayidx176 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 3, !dbg !13243
  %co177 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx176, i32 0, i32 0, !dbg !13244
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %co177, i64 0, i64 0, !dbg !13243
  %arraydecay179 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13245
  %co180 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay179, i32 0, i32 0, !dbg !13245
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %co180, i64 0, i64 0, !dbg !13246
  %arrayidx182 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 2, !dbg !13247
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx182, i64 0, i64 0, !dbg !13247
  call void @add_v3_v3v3(float* %arraydecay178, float* %arraydecay181, float* %arraydecay183), !dbg !13248
  %arrayidx184 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 3, !dbg !13249
  %vel185 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx184, i32 0, i32 1, !dbg !13250
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %vel185, i64 0, i64 0, !dbg !13249
  %arraydecay187 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13251
  %vel188 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay187, i32 0, i32 1, !dbg !13251
  %arraydecay189 = getelementptr inbounds [3 x float], [3 x float]* %vel188, i64 0, i64 0, !dbg !13252
  %arrayidx190 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 2, !dbg !13253
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx190, i64 0, i64 0, !dbg !13253
  call void @add_v3_v3v3(float* %arraydecay186, float* %arraydecay189, float* %arraydecay191), !dbg !13254
  %53 = load float, float* %dtime.addr, align 4, !dbg !13255
  %arrayidx192 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 3, !dbg !13256
  %time193 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arrayidx192, i32 0, i32 4, !dbg !13257
  store float %53, float* %time193, align 4, !dbg !13258
  br label %sw.epilog255, !dbg !13259

sw.bb194:                                         ; preds = %sw.bb94
  %arrayidx195 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 3, !dbg !13260
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx195, i64 0, i64 0, !dbg !13260
  %arraydecay197 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13261
  %vel198 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay197, i32 0, i32 1, !dbg !13261
  %arraydecay199 = getelementptr inbounds [3 x float], [3 x float]* %vel198, i64 0, i64 0, !dbg !13262
  %arrayidx200 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 2, !dbg !13263
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx200, i64 0, i64 0, !dbg !13263
  call void @add_v3_v3v3(float* %arraydecay196, float* %arraydecay199, float* %arraydecay201), !dbg !13264
  %arrayidx202 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 3, !dbg !13265
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx202, i64 0, i64 0, !dbg !13265
  %54 = load float, float* %dtime.addr, align 4, !dbg !13266
  call void @mul_v3_fl(float* %arraydecay203, float %54), !dbg !13267
  %arrayidx204 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 3, !dbg !13268
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx204, i64 0, i64 0, !dbg !13268
  %arraydecay206 = getelementptr inbounds [3 x float], [3 x float]* %acceleration, i64 0, i64 0, !dbg !13269
  call void @copy_v3_v3(float* %arraydecay205, float* %arraydecay206), !dbg !13270
  %arrayidx207 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 3, !dbg !13271
  %arraydecay208 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx207, i64 0, i64 0, !dbg !13271
  %55 = load float, float* %dtime.addr, align 4, !dbg !13272
  call void @mul_v3_fl(float* %arraydecay208, float %55), !dbg !13273
  %56 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13274
  %state209 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %56, i32 0, i32 0, !dbg !13275
  %co210 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state209, i32 0, i32 0, !dbg !13276
  %arraydecay211 = getelementptr inbounds [3 x float], [3 x float]* %co210, i64 0, i64 0, !dbg !13274
  %arraydecay212 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13277
  %co213 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay212, i32 0, i32 0, !dbg !13277
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %co213, i64 0, i64 0, !dbg !13278
  %arrayidx215 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 0, !dbg !13279
  %arraydecay216 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx215, i64 0, i64 0, !dbg !13279
  call void @madd_v3_v3v3fl(float* %arraydecay211, float* %arraydecay214, float* %arraydecay216, float 0x3FC5555560000000), !dbg !13280
  %57 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13281
  %state217 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %57, i32 0, i32 0, !dbg !13282
  %co218 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state217, i32 0, i32 0, !dbg !13283
  %arraydecay219 = getelementptr inbounds [3 x float], [3 x float]* %co218, i64 0, i64 0, !dbg !13281
  %arrayidx220 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 1, !dbg !13284
  %arraydecay221 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx220, i64 0, i64 0, !dbg !13284
  call void @madd_v3_v3fl(float* %arraydecay219, float* %arraydecay221, float 0x3FD5555560000000), !dbg !13285
  %58 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13286
  %state222 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %58, i32 0, i32 0, !dbg !13287
  %co223 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state222, i32 0, i32 0, !dbg !13288
  %arraydecay224 = getelementptr inbounds [3 x float], [3 x float]* %co223, i64 0, i64 0, !dbg !13286
  %arrayidx225 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 2, !dbg !13289
  %arraydecay226 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx225, i64 0, i64 0, !dbg !13289
  call void @madd_v3_v3fl(float* %arraydecay224, float* %arraydecay226, float 0x3FD5555560000000), !dbg !13290
  %59 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13291
  %state227 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %59, i32 0, i32 0, !dbg !13292
  %co228 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state227, i32 0, i32 0, !dbg !13293
  %arraydecay229 = getelementptr inbounds [3 x float], [3 x float]* %co228, i64 0, i64 0, !dbg !13291
  %arrayidx230 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dx, i64 0, i64 3, !dbg !13294
  %arraydecay231 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx230, i64 0, i64 0, !dbg !13294
  call void @madd_v3_v3fl(float* %arraydecay229, float* %arraydecay231, float 0x3FC5555560000000), !dbg !13295
  %60 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13296
  %state232 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %60, i32 0, i32 0, !dbg !13297
  %vel233 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state232, i32 0, i32 1, !dbg !13298
  %arraydecay234 = getelementptr inbounds [3 x float], [3 x float]* %vel233, i64 0, i64 0, !dbg !13296
  %arraydecay235 = getelementptr inbounds [5 x %struct.ParticleKey], [5 x %struct.ParticleKey]* %states, i64 0, i64 0, !dbg !13299
  %vel236 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %arraydecay235, i32 0, i32 1, !dbg !13299
  %arraydecay237 = getelementptr inbounds [3 x float], [3 x float]* %vel236, i64 0, i64 0, !dbg !13300
  %arrayidx238 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 0, !dbg !13301
  %arraydecay239 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx238, i64 0, i64 0, !dbg !13301
  call void @madd_v3_v3v3fl(float* %arraydecay234, float* %arraydecay237, float* %arraydecay239, float 0x3FC5555560000000), !dbg !13302
  %61 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13303
  %state240 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %61, i32 0, i32 0, !dbg !13304
  %vel241 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state240, i32 0, i32 1, !dbg !13305
  %arraydecay242 = getelementptr inbounds [3 x float], [3 x float]* %vel241, i64 0, i64 0, !dbg !13303
  %arrayidx243 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 1, !dbg !13306
  %arraydecay244 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx243, i64 0, i64 0, !dbg !13306
  call void @madd_v3_v3fl(float* %arraydecay242, float* %arraydecay244, float 0x3FD5555560000000), !dbg !13307
  %62 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13308
  %state245 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %62, i32 0, i32 0, !dbg !13309
  %vel246 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state245, i32 0, i32 1, !dbg !13310
  %arraydecay247 = getelementptr inbounds [3 x float], [3 x float]* %vel246, i64 0, i64 0, !dbg !13308
  %arrayidx248 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 2, !dbg !13311
  %arraydecay249 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx248, i64 0, i64 0, !dbg !13311
  call void @madd_v3_v3fl(float* %arraydecay247, float* %arraydecay249, float 0x3FD5555560000000), !dbg !13312
  %63 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13313
  %state250 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %63, i32 0, i32 0, !dbg !13314
  %vel251 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state250, i32 0, i32 1, !dbg !13315
  %arraydecay252 = getelementptr inbounds [3 x float], [3 x float]* %vel251, i64 0, i64 0, !dbg !13313
  %arrayidx253 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %dv, i64 0, i64 3, !dbg !13316
  %arraydecay254 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx253, i64 0, i64 0, !dbg !13316
  call void @madd_v3_v3fl(float* %arraydecay252, float* %arraydecay254, float 0x3FC5555560000000), !dbg !13317
  br label %sw.epilog255, !dbg !13318

sw.epilog255:                                     ; preds = %sw.bb194, %sw.bb94, %sw.bb161, %sw.bb127, %sw.bb95
  br label %sw.epilog284, !dbg !13319

sw.bb256:                                         ; preds = %if.end32
  %64 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13320
  %state257 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %64, i32 0, i32 0, !dbg !13321
  %vel258 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state257, i32 0, i32 1, !dbg !13322
  %arraydecay259 = getelementptr inbounds [3 x float], [3 x float]* %vel258, i64 0, i64 0, !dbg !13320
  %65 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13323
  %prev_state260 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %65, i32 0, i32 1, !dbg !13324
  %vel261 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state260, i32 0, i32 1, !dbg !13325
  %arraydecay262 = getelementptr inbounds [3 x float], [3 x float]* %vel261, i64 0, i64 0, !dbg !13323
  %arraydecay263 = getelementptr inbounds [3 x float], [3 x float]* %acceleration, i64 0, i64 0, !dbg !13326
  %66 = load float, float* %dtime.addr, align 4, !dbg !13327
  call void @madd_v3_v3v3fl(float* %arraydecay259, float* %arraydecay262, float* %arraydecay263, float %66), !dbg !13328
  %67 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13329
  %state264 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %67, i32 0, i32 0, !dbg !13330
  %co265 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state264, i32 0, i32 0, !dbg !13331
  %arraydecay266 = getelementptr inbounds [3 x float], [3 x float]* %co265, i64 0, i64 0, !dbg !13329
  %68 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13332
  %prev_state267 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %68, i32 0, i32 1, !dbg !13333
  %co268 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state267, i32 0, i32 0, !dbg !13334
  %arraydecay269 = getelementptr inbounds [3 x float], [3 x float]* %co268, i64 0, i64 0, !dbg !13332
  %69 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13335
  %state270 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %69, i32 0, i32 0, !dbg !13336
  %vel271 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state270, i32 0, i32 1, !dbg !13337
  %arraydecay272 = getelementptr inbounds [3 x float], [3 x float]* %vel271, i64 0, i64 0, !dbg !13335
  %70 = load float, float* %dtime.addr, align 4, !dbg !13338
  call void @madd_v3_v3v3fl(float* %arraydecay266, float* %arraydecay269, float* %arraydecay272, float %70), !dbg !13339
  %71 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13340
  %state273 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %71, i32 0, i32 0, !dbg !13341
  %vel274 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state273, i32 0, i32 1, !dbg !13342
  %arraydecay275 = getelementptr inbounds [3 x float], [3 x float]* %vel274, i64 0, i64 0, !dbg !13340
  %72 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13343
  %state276 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %72, i32 0, i32 0, !dbg !13344
  %co277 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state276, i32 0, i32 0, !dbg !13345
  %arraydecay278 = getelementptr inbounds [3 x float], [3 x float]* %co277, i64 0, i64 0, !dbg !13343
  %arraydecay279 = getelementptr inbounds [3 x float], [3 x float]* %oldpos, i64 0, i64 0, !dbg !13346
  call void @sub_v3_v3v3(float* %arraydecay275, float* %arraydecay278, float* %arraydecay279), !dbg !13347
  %73 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13348
  %state280 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %73, i32 0, i32 0, !dbg !13349
  %vel281 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state280, i32 0, i32 1, !dbg !13350
  %arraydecay282 = getelementptr inbounds [3 x float], [3 x float]* %vel281, i64 0, i64 0, !dbg !13348
  %74 = load float, float* %dtime.addr, align 4, !dbg !13351
  %div283 = fdiv float 1.000000e+00, %74, !dbg !13352
  call void @mul_v3_fl(float* %arraydecay282, float %div283), !dbg !13353
  br label %sw.epilog284, !dbg !13354

sw.epilog284:                                     ; preds = %if.end32, %sw.bb256, %sw.epilog255, %if.end93, %sw.bb35
  br label %for.inc285, !dbg !13355

for.inc285:                                       ; preds = %sw.epilog284
  %75 = load i32, i32* %i, align 4, !dbg !13356
  %inc286 = add nsw i32 %75, 1, !dbg !13356
  store i32 %inc286, i32* %i, align 4, !dbg !13356
  br label %for.cond16, !dbg !13357, !llvm.loop !13358

for.end287:                                       ; preds = %for.cond16
  ret void, !dbg !13360
}

; Function Attrs: noinline nounwind uwtable
define internal void @basic_force_cb(i8* %efdata_v, %struct.ParticleKey* %state, float* %force, float* %impulse) #0 !dbg !13361 {
entry:
  %efdata_v.addr = alloca i8*, align 8
  %state.addr = alloca %struct.ParticleKey*, align 8
  %force.addr = alloca float*, align 8
  %impulse.addr = alloca float*, align 8
  %efdata = alloca %struct.EfData*, align 8
  %sim = alloca %struct.ParticleSimulationData*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %epoint = alloca %struct.EffectedPoint, align 8
  store i8* %efdata_v, i8** %efdata_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %efdata_v.addr, metadata !13362, metadata !DIExpression()), !dbg !13363
  store %struct.ParticleKey* %state, %struct.ParticleKey** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleKey** %state.addr, metadata !13364, metadata !DIExpression()), !dbg !13365
  store float* %force, float** %force.addr, align 8
  call void @llvm.dbg.declare(metadata float** %force.addr, metadata !13366, metadata !DIExpression()), !dbg !13367
  store float* %impulse, float** %impulse.addr, align 8
  call void @llvm.dbg.declare(metadata float** %impulse.addr, metadata !13368, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.declare(metadata %struct.EfData** %efdata, metadata !13370, metadata !DIExpression()), !dbg !13371
  %0 = load i8*, i8** %efdata_v.addr, align 8, !dbg !13372
  %1 = bitcast i8* %0 to %struct.EfData*, !dbg !13373
  store %struct.EfData* %1, %struct.EfData** %efdata, align 8, !dbg !13371
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim, metadata !13374, metadata !DIExpression()), !dbg !13375
  %2 = load %struct.EfData*, %struct.EfData** %efdata, align 8, !dbg !13376
  %sim1 = getelementptr inbounds %struct.EfData, %struct.EfData* %2, i32 0, i32 1, !dbg !13377
  %3 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim1, align 8, !dbg !13377
  store %struct.ParticleSimulationData* %3, %struct.ParticleSimulationData** %sim, align 8, !dbg !13375
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !13378, metadata !DIExpression()), !dbg !13379
  %4 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim, align 8, !dbg !13380
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %4, i32 0, i32 2, !dbg !13381
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13381
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 2, !dbg !13382
  %6 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !13382
  store %struct.ParticleSettings* %6, %struct.ParticleSettings** %part, align 8, !dbg !13379
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !13383, metadata !DIExpression()), !dbg !13384
  %7 = load %struct.EfData*, %struct.EfData** %efdata, align 8, !dbg !13385
  %pa3 = getelementptr inbounds %struct.EfData, %struct.EfData* %7, i32 0, i32 2, !dbg !13386
  %8 = load %struct.ParticleData*, %struct.ParticleData** %pa3, align 8, !dbg !13386
  store %struct.ParticleData* %8, %struct.ParticleData** %pa, align 8, !dbg !13384
  call void @llvm.dbg.declare(metadata %struct.EffectedPoint* %epoint, metadata !13387, metadata !DIExpression()), !dbg !13403
  %9 = load %struct.EfData*, %struct.EfData** %efdata, align 8, !dbg !13404
  %sim4 = getelementptr inbounds %struct.EfData, %struct.EfData* %9, i32 0, i32 1, !dbg !13405
  %10 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim4, align 8, !dbg !13405
  %11 = load %struct.EfData*, %struct.EfData** %efdata, align 8, !dbg !13406
  %pa5 = getelementptr inbounds %struct.EfData, %struct.EfData* %11, i32 0, i32 2, !dbg !13407
  %12 = load %struct.ParticleData*, %struct.ParticleData** %pa5, align 8, !dbg !13407
  %13 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !13408
  call void @pd_point_from_particle(%struct.ParticleSimulationData* %10, %struct.ParticleData* %12, %struct.ParticleKey* %13, %struct.EffectedPoint* %epoint), !dbg !13409
  %14 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13410
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %14, i32 0, i32 7, !dbg !13412
  %15 = load i16, i16* %type, align 8, !dbg !13412
  %conv = sext i16 %15 to i32, !dbg !13410
  %cmp = icmp ne i32 %conv, 2, !dbg !13413
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13414

lor.lhs.false:                                    ; preds = %entry
  %16 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13415
  %effector_weights = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %16, i32 0, i32 4, !dbg !13416
  %17 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !13416
  %flag = getelementptr inbounds %struct.EffectorWeights, %struct.EffectorWeights* %17, i32 0, i32 3, !dbg !13417
  %18 = load i16, i16* %flag, align 4, !dbg !13417
  %conv7 = sext i16 %18 to i32, !dbg !13415
  %and = and i32 %conv7, 1, !dbg !13418
  %tobool = icmp ne i32 %and, 0, !dbg !13418
  br i1 %tobool, label %if.then, label %if.end, !dbg !13419

if.then:                                          ; preds = %lor.lhs.false, %entry
  %19 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim, align 8, !dbg !13420
  %psys8 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %19, i32 0, i32 2, !dbg !13421
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys8, align 8, !dbg !13421
  %effectors = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 42, !dbg !13422
  %21 = load %struct.ListBase*, %struct.ListBase** %effectors, align 8, !dbg !13422
  %22 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim, align 8, !dbg !13423
  %colliders = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %22, i32 0, i32 4, !dbg !13424
  %23 = load %struct.ListBase*, %struct.ListBase** %colliders, align 8, !dbg !13424
  %24 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13425
  %effector_weights9 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %24, i32 0, i32 4, !dbg !13426
  %25 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights9, align 8, !dbg !13426
  %26 = load float*, float** %force.addr, align 8, !dbg !13427
  %27 = load float*, float** %impulse.addr, align 8, !dbg !13428
  call void @pdDoEffectors(%struct.ListBase* %21, %struct.ListBase* %23, %struct.EffectorWeights* %25, %struct.EffectedPoint* %epoint, float* %26, float* %27), !dbg !13429
  br label %if.end, !dbg !13429

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %28 = load float*, float** %force.addr, align 8, !dbg !13430
  %29 = load %struct.EfData*, %struct.EfData** %efdata, align 8, !dbg !13431
  %ptex = getelementptr inbounds %struct.EfData, %struct.EfData* %29, i32 0, i32 0, !dbg !13432
  %field = getelementptr inbounds %struct.ParticleTexture, %struct.ParticleTexture* %ptex, i32 0, i32 7, !dbg !13433
  %30 = load float, float* %field, align 4, !dbg !13433
  call void @mul_v3_fl(float* %28, float %30), !dbg !13434
  %31 = load float*, float** %impulse.addr, align 8, !dbg !13435
  %32 = load %struct.EfData*, %struct.EfData** %efdata, align 8, !dbg !13436
  %ptex10 = getelementptr inbounds %struct.EfData, %struct.EfData* %32, i32 0, i32 0, !dbg !13437
  %field11 = getelementptr inbounds %struct.ParticleTexture, %struct.ParticleTexture* %ptex10, i32 0, i32 7, !dbg !13438
  %33 = load float, float* %field11, align 4, !dbg !13438
  call void @mul_v3_fl(float* %31, float %33), !dbg !13439
  %34 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13440
  %dragfac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %34, i32 0, i32 85, !dbg !13442
  %35 = load float, float* %dragfac, align 4, !dbg !13442
  %cmp12 = fcmp une float %35, 0.000000e+00, !dbg !13443
  br i1 %cmp12, label %if.then14, label %if.end21, !dbg !13444

if.then14:                                        ; preds = %if.end
  %36 = load float*, float** %force.addr, align 8, !dbg !13445
  %37 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !13446
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %37, i32 0, i32 1, !dbg !13447
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !13446
  %38 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13448
  %dragfac15 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %38, i32 0, i32 85, !dbg !13449
  %39 = load float, float* %dragfac15, align 4, !dbg !13449
  %fneg = fneg float %39, !dbg !13450
  %40 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13451
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %40, i32 0, i32 13, !dbg !13452
  %41 = load float, float* %size, align 4, !dbg !13452
  %mul = fmul float %fneg, %41, !dbg !13453
  %42 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13454
  %size16 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %42, i32 0, i32 13, !dbg !13455
  %43 = load float, float* %size16, align 4, !dbg !13455
  %mul17 = fmul float %mul, %43, !dbg !13456
  %44 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !13457
  %vel18 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %44, i32 0, i32 1, !dbg !13458
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %vel18, i64 0, i64 0, !dbg !13457
  %call = call float @len_v3(float* %arraydecay19), !dbg !13459
  %mul20 = fmul float %mul17, %call, !dbg !13460
  call void @madd_v3_v3fl(float* %36, float* %arraydecay, float %mul20), !dbg !13461
  br label %if.end21, !dbg !13461

if.end21:                                         ; preds = %if.then14, %if.end
  %45 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13462
  %brownfac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %45, i32 0, i32 86, !dbg !13464
  %46 = load float, float* %brownfac, align 8, !dbg !13464
  %cmp22 = fcmp une float %46, 0.000000e+00, !dbg !13465
  br i1 %cmp22, label %if.then24, label %if.end40, !dbg !13466

if.then24:                                        ; preds = %if.end21
  %call25 = call float @BLI_frand(), !dbg !13467
  %sub = fsub float %call25, 5.000000e-01, !dbg !13469
  %47 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13470
  %brownfac26 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %47, i32 0, i32 86, !dbg !13471
  %48 = load float, float* %brownfac26, align 8, !dbg !13471
  %mul27 = fmul float %sub, %48, !dbg !13472
  %49 = load float*, float** %force.addr, align 8, !dbg !13473
  %arrayidx = getelementptr inbounds float, float* %49, i64 0, !dbg !13473
  %50 = load float, float* %arrayidx, align 4, !dbg !13474
  %add = fadd float %50, %mul27, !dbg !13474
  store float %add, float* %arrayidx, align 4, !dbg !13474
  %call28 = call float @BLI_frand(), !dbg !13475
  %sub29 = fsub float %call28, 5.000000e-01, !dbg !13476
  %51 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13477
  %brownfac30 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %51, i32 0, i32 86, !dbg !13478
  %52 = load float, float* %brownfac30, align 8, !dbg !13478
  %mul31 = fmul float %sub29, %52, !dbg !13479
  %53 = load float*, float** %force.addr, align 8, !dbg !13480
  %arrayidx32 = getelementptr inbounds float, float* %53, i64 1, !dbg !13480
  %54 = load float, float* %arrayidx32, align 4, !dbg !13481
  %add33 = fadd float %54, %mul31, !dbg !13481
  store float %add33, float* %arrayidx32, align 4, !dbg !13481
  %call34 = call float @BLI_frand(), !dbg !13482
  %sub35 = fsub float %call34, 5.000000e-01, !dbg !13483
  %55 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13484
  %brownfac36 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %55, i32 0, i32 86, !dbg !13485
  %56 = load float, float* %brownfac36, align 8, !dbg !13485
  %mul37 = fmul float %sub35, %56, !dbg !13486
  %57 = load float*, float** %force.addr, align 8, !dbg !13487
  %arrayidx38 = getelementptr inbounds float, float* %57, i64 2, !dbg !13487
  %58 = load float, float* %arrayidx38, align 4, !dbg !13488
  %add39 = fadd float %58, %mul37, !dbg !13488
  store float %add39, float* %arrayidx38, align 4, !dbg !13488
  br label %if.end40, !dbg !13489

if.end40:                                         ; preds = %if.then24, %if.end21
  %59 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13490
  %flag41 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %59, i32 0, i32 5, !dbg !13492
  %60 = load i32, i32* %flag41, align 8, !dbg !13492
  %and42 = and i32 %60, 16384, !dbg !13493
  %tobool43 = icmp ne i32 %and42, 0, !dbg !13493
  br i1 %tobool43, label %land.lhs.true, label %if.end50, !dbg !13494

land.lhs.true:                                    ; preds = %if.end40
  %ave = getelementptr inbounds %struct.EffectedPoint, %struct.EffectedPoint* %epoint, i32 0, i32 2, !dbg !13495
  %61 = load float*, float** %ave, align 8, !dbg !13495
  %tobool44 = icmp ne float* %61, null, !dbg !13496
  br i1 %tobool44, label %if.then45, label %if.end50, !dbg !13497

if.then45:                                        ; preds = %land.lhs.true
  %62 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13498
  %state46 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %62, i32 0, i32 0, !dbg !13499
  %ave47 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state46, i32 0, i32 3, !dbg !13500
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %ave47, i64 0, i64 0, !dbg !13498
  %ave49 = getelementptr inbounds %struct.EffectedPoint, %struct.EffectedPoint* %epoint, i32 0, i32 2, !dbg !13501
  %63 = load float*, float** %ave49, align 8, !dbg !13501
  call void @copy_v3_v3(float* %arraydecay48, float* %63), !dbg !13502
  br label %if.end50, !dbg !13502

if.end50:                                         ; preds = %if.then45, %land.lhs.true, %if.end40
  ret void, !dbg !13503
}

declare dso_local i32 @do_guides(%struct.ListBase*, %struct.ParticleKey*, i32, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !13504 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13505, metadata !DIExpression()), !dbg !13506
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13507, metadata !DIExpression()), !dbg !13508
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !13509, metadata !DIExpression()), !dbg !13510
  %0 = load float*, float** %a.addr, align 8, !dbg !13511
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13511
  %1 = load float, float* %arrayidx, align 4, !dbg !13511
  %2 = load float*, float** %b.addr, align 8, !dbg !13512
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !13512
  %3 = load float, float* %arrayidx1, align 4, !dbg !13512
  %add = fadd float %1, %3, !dbg !13513
  %4 = load float*, float** %r.addr, align 8, !dbg !13514
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !13514
  store float %add, float* %arrayidx2, align 4, !dbg !13515
  %5 = load float*, float** %a.addr, align 8, !dbg !13516
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !13516
  %6 = load float, float* %arrayidx3, align 4, !dbg !13516
  %7 = load float*, float** %b.addr, align 8, !dbg !13517
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !13517
  %8 = load float, float* %arrayidx4, align 4, !dbg !13517
  %add5 = fadd float %6, %8, !dbg !13518
  %9 = load float*, float** %r.addr, align 8, !dbg !13519
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !13519
  store float %add5, float* %arrayidx6, align 4, !dbg !13520
  %10 = load float*, float** %a.addr, align 8, !dbg !13521
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !13521
  %11 = load float, float* %arrayidx7, align 4, !dbg !13521
  %12 = load float*, float** %b.addr, align 8, !dbg !13522
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !13522
  %13 = load float, float* %arrayidx8, align 4, !dbg !13522
  %add9 = fadd float %11, %13, !dbg !13523
  %14 = load float*, float** %r.addr, align 8, !dbg !13524
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !13524
  store float %add9, float* %arrayidx10, align 4, !dbg !13525
  ret void, !dbg !13526
}

declare dso_local void @pd_point_from_particle(%struct.ParticleSimulationData*, %struct.ParticleData*, %struct.ParticleKey*, %struct.EffectedPoint*) #2

declare dso_local void @pdDoEffectors(%struct.ListBase*, %struct.ListBase*, %struct.EffectorWeights*, %struct.EffectedPoint*, float*, float*) #2

declare dso_local float @BLI_frand() #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @collision_detect(%struct.ParticleData* %pa, %struct.ParticleCollision* %col, %struct.BVHTreeRayHit* %hit, %struct.ListBase* %colliders) #0 !dbg !13527 {
entry:
  %retval = alloca i32, align 4
  %pa.addr = alloca %struct.ParticleData*, align 8
  %col.addr = alloca %struct.ParticleCollision*, align 8
  %hit.addr = alloca %struct.BVHTreeRayHit*, align 8
  %colliders.addr = alloca %struct.ListBase*, align 8
  %coll = alloca %struct.ColliderCache*, align 8
  %ray_dir = alloca [3 x float], align 4
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !13530, metadata !DIExpression()), !dbg !13531
  store %struct.ParticleCollision* %col, %struct.ParticleCollision** %col.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollision** %col.addr, metadata !13532, metadata !DIExpression()), !dbg !13533
  store %struct.BVHTreeRayHit* %hit, %struct.BVHTreeRayHit** %hit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BVHTreeRayHit** %hit.addr, metadata !13534, metadata !DIExpression()), !dbg !13535
  store %struct.ListBase* %colliders, %struct.ListBase** %colliders.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %colliders.addr, metadata !13536, metadata !DIExpression()), !dbg !13537
  call void @llvm.dbg.declare(metadata %struct.ColliderCache** %coll, metadata !13538, metadata !DIExpression()), !dbg !13549
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_dir, metadata !13550, metadata !DIExpression()), !dbg !13551
  %0 = load %struct.ListBase*, %struct.ListBase** %colliders.addr, align 8, !dbg !13552
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %0), !dbg !13554
  %tobool = icmp ne i8 %call, 0, !dbg !13554
  br i1 %tobool, label %if.then, label %if.end, !dbg !13555

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13556
  br label %return, !dbg !13556

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %ray_dir, i64 0, i64 0, !dbg !13557
  %1 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13558
  %co2 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %1, i32 0, i32 19, !dbg !13559
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !13558
  %2 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13560
  %co1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %2, i32 0, i32 18, !dbg !13561
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !13560
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay2), !dbg !13562
  %3 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !13563
  %index = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %3, i32 0, i32 0, !dbg !13564
  store i32 -1, i32* %index, align 4, !dbg !13565
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %ray_dir, i64 0, i64 0, !dbg !13566
  %call4 = call float @len_v3(float* %arraydecay3), !dbg !13567
  %4 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13568
  %original_ray_length = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %4, i32 0, i32 11, !dbg !13569
  store float %call4, float* %original_ray_length, align 4, !dbg !13570
  %5 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !13571
  %dist = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %5, i32 0, i32 3, !dbg !13572
  store float %call4, float* %dist, align 4, !dbg !13573
  %6 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13574
  %pce = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %6, i32 0, i32 13, !dbg !13575
  %inside = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce, i32 0, i32 12, !dbg !13576
  store i16 0, i16* %inside, align 2, !dbg !13577
  %7 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !13578
  %dist5 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %7, i32 0, i32 3, !dbg !13580
  %8 = load float, float* %dist5, align 4, !dbg !13580
  %cmp = fcmp oeq float %8, 0.000000e+00, !dbg !13581
  br i1 %cmp, label %if.then6, label %if.end9, !dbg !13582

if.then6:                                         ; preds = %if.end
  %9 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13583
  %original_ray_length7 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %9, i32 0, i32 11, !dbg !13584
  store float 0x3EB0C6F7A0000000, float* %original_ray_length7, align 4, !dbg !13585
  %10 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !13586
  %dist8 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %10, i32 0, i32 3, !dbg !13587
  store float 0x3EB0C6F7A0000000, float* %dist8, align 4, !dbg !13588
  br label %if.end9, !dbg !13586

if.end9:                                          ; preds = %if.then6, %if.end
  %11 = load %struct.ListBase*, %struct.ListBase** %colliders.addr, align 8, !dbg !13589
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %11, i32 0, i32 0, !dbg !13591
  %12 = load i8*, i8** %first, align 8, !dbg !13591
  %13 = bitcast i8* %12 to %struct.ColliderCache*, !dbg !13589
  store %struct.ColliderCache* %13, %struct.ColliderCache** %coll, align 8, !dbg !13592
  br label %for.cond, !dbg !13593

for.cond:                                         ; preds = %for.inc, %if.end9
  %14 = load %struct.ColliderCache*, %struct.ColliderCache** %coll, align 8, !dbg !13594
  %tobool10 = icmp ne %struct.ColliderCache* %14, null, !dbg !13596
  br i1 %tobool10, label %for.body, label %for.end, !dbg !13596

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ColliderCache*, %struct.ColliderCache** %coll, align 8, !dbg !13597
  %ob = getelementptr inbounds %struct.ColliderCache, %struct.ColliderCache* %15, i32 0, i32 2, !dbg !13600
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13600
  %17 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13601
  %skip = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %17, i32 0, i32 3, !dbg !13602
  %18 = load %struct.Object*, %struct.Object** %skip, align 8, !dbg !13602
  %cmp11 = icmp eq %struct.Object* %16, %18, !dbg !13603
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !13604

if.then12:                                        ; preds = %for.body
  br label %for.inc, !dbg !13605

if.end13:                                         ; preds = %for.body
  %19 = load %struct.ColliderCache*, %struct.ColliderCache** %coll, align 8, !dbg !13606
  %ob14 = getelementptr inbounds %struct.ColliderCache, %struct.ColliderCache* %19, i32 0, i32 2, !dbg !13608
  %20 = load %struct.Object*, %struct.Object** %ob14, align 8, !dbg !13608
  %21 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13609
  %emitter = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %21, i32 0, i32 4, !dbg !13610
  %22 = load %struct.Object*, %struct.Object** %emitter, align 8, !dbg !13610
  %cmp15 = icmp eq %struct.Object* %20, %22, !dbg !13611
  br i1 %cmp15, label %land.lhs.true, label %if.end21, !dbg !13612

land.lhs.true:                                    ; preds = %if.end13
  %23 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13613
  %time = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %23, i32 0, i32 6, !dbg !13614
  %24 = load float, float* %time, align 4, !dbg !13614
  %25 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13615
  %cfra = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %25, i32 0, i32 9, !dbg !13616
  %26 = load float, float* %cfra, align 4, !dbg !13616
  %cmp16 = fcmp olt float %24, %26, !dbg !13617
  br i1 %cmp16, label %land.lhs.true17, label %if.end21, !dbg !13618

land.lhs.true17:                                  ; preds = %land.lhs.true
  %27 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13619
  %time18 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %27, i32 0, i32 6, !dbg !13620
  %28 = load float, float* %time18, align 4, !dbg !13620
  %29 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13621
  %old_cfra = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %29, i32 0, i32 10, !dbg !13622
  %30 = load float, float* %old_cfra, align 8, !dbg !13622
  %cmp19 = fcmp oge float %28, %30, !dbg !13623
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !13624

if.then20:                                        ; preds = %land.lhs.true17
  br label %for.inc, !dbg !13625

if.end21:                                         ; preds = %land.lhs.true17, %land.lhs.true, %if.end13
  %31 = load %struct.ColliderCache*, %struct.ColliderCache** %coll, align 8, !dbg !13626
  %ob22 = getelementptr inbounds %struct.ColliderCache, %struct.ColliderCache* %31, i32 0, i32 2, !dbg !13627
  %32 = load %struct.Object*, %struct.Object** %ob22, align 8, !dbg !13627
  %33 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13628
  %current = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %33, i32 0, i32 0, !dbg !13629
  store %struct.Object* %32, %struct.Object** %current, align 8, !dbg !13630
  %34 = load %struct.ColliderCache*, %struct.ColliderCache** %coll, align 8, !dbg !13631
  %collmd = getelementptr inbounds %struct.ColliderCache, %struct.ColliderCache* %34, i32 0, i32 3, !dbg !13632
  %35 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %collmd, align 8, !dbg !13632
  %36 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13633
  %md = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %36, i32 0, i32 5, !dbg !13634
  store %struct.CollisionModifierData* %35, %struct.CollisionModifierData** %md, align 8, !dbg !13635
  %37 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13636
  %old_cfra23 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %37, i32 0, i32 10, !dbg !13637
  %38 = load float, float* %old_cfra23, align 8, !dbg !13637
  %39 = load %struct.ColliderCache*, %struct.ColliderCache** %coll, align 8, !dbg !13638
  %collmd24 = getelementptr inbounds %struct.ColliderCache, %struct.ColliderCache* %39, i32 0, i32 3, !dbg !13639
  %40 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %collmd24, align 8, !dbg !13639
  %time_x = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %40, i32 0, i32 10, !dbg !13640
  %41 = load float, float* %time_x, align 8, !dbg !13640
  %sub = fsub float %38, %41, !dbg !13641
  %42 = load %struct.ColliderCache*, %struct.ColliderCache** %coll, align 8, !dbg !13642
  %collmd25 = getelementptr inbounds %struct.ColliderCache, %struct.ColliderCache* %42, i32 0, i32 3, !dbg !13643
  %43 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %collmd25, align 8, !dbg !13643
  %time_xnew = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %43, i32 0, i32 11, !dbg !13644
  %44 = load float, float* %time_xnew, align 4, !dbg !13644
  %45 = load %struct.ColliderCache*, %struct.ColliderCache** %coll, align 8, !dbg !13645
  %collmd26 = getelementptr inbounds %struct.ColliderCache, %struct.ColliderCache* %45, i32 0, i32 3, !dbg !13646
  %46 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %collmd26, align 8, !dbg !13646
  %time_x27 = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %46, i32 0, i32 10, !dbg !13647
  %47 = load float, float* %time_x27, align 8, !dbg !13647
  %sub28 = fsub float %44, %47, !dbg !13648
  %div = fdiv float %sub, %sub28, !dbg !13649
  %48 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13650
  %fac1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %48, i32 0, i32 7, !dbg !13651
  store float %div, float* %fac1, align 4, !dbg !13652
  %49 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13653
  %cfra29 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %49, i32 0, i32 9, !dbg !13654
  %50 = load float, float* %cfra29, align 4, !dbg !13654
  %51 = load %struct.ColliderCache*, %struct.ColliderCache** %coll, align 8, !dbg !13655
  %collmd30 = getelementptr inbounds %struct.ColliderCache, %struct.ColliderCache* %51, i32 0, i32 3, !dbg !13656
  %52 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %collmd30, align 8, !dbg !13656
  %time_x31 = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %52, i32 0, i32 10, !dbg !13657
  %53 = load float, float* %time_x31, align 8, !dbg !13657
  %sub32 = fsub float %50, %53, !dbg !13658
  %54 = load %struct.ColliderCache*, %struct.ColliderCache** %coll, align 8, !dbg !13659
  %collmd33 = getelementptr inbounds %struct.ColliderCache, %struct.ColliderCache* %54, i32 0, i32 3, !dbg !13660
  %55 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %collmd33, align 8, !dbg !13660
  %time_xnew34 = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %55, i32 0, i32 11, !dbg !13661
  %56 = load float, float* %time_xnew34, align 4, !dbg !13661
  %57 = load %struct.ColliderCache*, %struct.ColliderCache** %coll, align 8, !dbg !13662
  %collmd35 = getelementptr inbounds %struct.ColliderCache, %struct.ColliderCache* %57, i32 0, i32 3, !dbg !13663
  %58 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %collmd35, align 8, !dbg !13663
  %time_x36 = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %58, i32 0, i32 10, !dbg !13664
  %59 = load float, float* %time_x36, align 8, !dbg !13664
  %sub37 = fsub float %56, %59, !dbg !13665
  %div38 = fdiv float %sub32, %sub37, !dbg !13666
  %60 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13667
  %fac2 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %60, i32 0, i32 8, !dbg !13668
  store float %div38, float* %fac2, align 8, !dbg !13669
  %61 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13670
  %md39 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %61, i32 0, i32 5, !dbg !13672
  %62 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %md39, align 8, !dbg !13672
  %tobool40 = icmp ne %struct.CollisionModifierData* %62, null, !dbg !13670
  br i1 %tobool40, label %land.lhs.true41, label %if.end51, !dbg !13673

land.lhs.true41:                                  ; preds = %if.end21
  %63 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13674
  %md42 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %63, i32 0, i32 5, !dbg !13675
  %64 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %md42, align 8, !dbg !13675
  %bvhtree = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %64, i32 0, i32 12, !dbg !13676
  %65 = load %struct.BVHTree*, %struct.BVHTree** %bvhtree, align 8, !dbg !13676
  %tobool43 = icmp ne %struct.BVHTree* %65, null, !dbg !13674
  br i1 %tobool43, label %if.then44, label %if.end51, !dbg !13677

if.then44:                                        ; preds = %land.lhs.true41
  %66 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13678
  %md45 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %66, i32 0, i32 5, !dbg !13679
  %67 = load %struct.CollisionModifierData*, %struct.CollisionModifierData** %md45, align 8, !dbg !13679
  %bvhtree46 = getelementptr inbounds %struct.CollisionModifierData, %struct.CollisionModifierData* %67, i32 0, i32 12, !dbg !13680
  %68 = load %struct.BVHTree*, %struct.BVHTree** %bvhtree46, align 8, !dbg !13680
  %69 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13681
  %co147 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %69, i32 0, i32 18, !dbg !13682
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %co147, i64 0, i64 0, !dbg !13681
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %ray_dir, i64 0, i64 0, !dbg !13683
  %70 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13684
  %radius = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %70, i32 0, i32 17, !dbg !13685
  %71 = load float, float* %radius, align 4, !dbg !13685
  %72 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !13686
  %73 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13687
  %74 = bitcast %struct.ParticleCollision* %73 to i8*, !dbg !13687
  %call50 = call i32 @BLI_bvhtree_ray_cast(%struct.BVHTree* %68, float* %arraydecay48, float* %arraydecay49, float %71, %struct.BVHTreeRayHit* %72, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)* @BKE_psys_collision_neartest_cb, i8* %74), !dbg !13688
  br label %if.end51, !dbg !13688

if.end51:                                         ; preds = %if.then44, %land.lhs.true41, %if.end21
  br label %for.inc, !dbg !13689

for.inc:                                          ; preds = %if.end51, %if.then20, %if.then12
  %75 = load %struct.ColliderCache*, %struct.ColliderCache** %coll, align 8, !dbg !13690
  %next = getelementptr inbounds %struct.ColliderCache, %struct.ColliderCache* %75, i32 0, i32 0, !dbg !13691
  %76 = load %struct.ColliderCache*, %struct.ColliderCache** %next, align 8, !dbg !13691
  store %struct.ColliderCache* %76, %struct.ColliderCache** %coll, align 8, !dbg !13692
  br label %for.cond, !dbg !13693, !llvm.loop !13694

for.end:                                          ; preds = %for.cond
  %77 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !13696
  %index52 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %77, i32 0, i32 0, !dbg !13697
  %78 = load i32, i32* %index52, align 4, !dbg !13697
  %cmp53 = icmp sge i32 %78, 0, !dbg !13698
  %conv = zext i1 %cmp53 to i32, !dbg !13698
  store i32 %conv, i32* %retval, align 4, !dbg !13699
  br label %return, !dbg !13699

return:                                           ; preds = %for.end, %if.then
  %79 = load i32, i32* %retval, align 4, !dbg !13700
  ret i32 %79, !dbg !13700
}

; Function Attrs: noinline nounwind uwtable
define internal void @collision_fail(%struct.ParticleData* %pa, %struct.ParticleCollision* %col) #0 !dbg !13701 {
entry:
  %pa.addr = alloca %struct.ParticleData*, align 8
  %col.addr = alloca %struct.ParticleCollision*, align 8
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !13704, metadata !DIExpression()), !dbg !13705
  store %struct.ParticleCollision* %col, %struct.ParticleCollision** %col.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollision** %col.addr, metadata !13706, metadata !DIExpression()), !dbg !13707
  %0 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13708
  %co1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %0, i32 0, i32 18, !dbg !13709
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !13708
  %1 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13710
  %pce = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %1, i32 0, i32 13, !dbg !13711
  %2 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13712
  %3 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13713
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %3, i32 0, i32 0, !dbg !13714
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !13715
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13713
  call void @collision_point_on_surface(float* %arraydecay, %struct.ParticleCollisionElement* %pce, float 1.000000e+00, %struct.ParticleCollision* %2, float* %arraydecay1), !dbg !13716
  %4 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13717
  %state2 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %4, i32 0, i32 0, !dbg !13718
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state2, i32 0, i32 1, !dbg !13719
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !13717
  %5 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13720
  %pce4 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %5, i32 0, i32 13, !dbg !13721
  %vel5 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %pce4, i32 0, i32 7, !dbg !13722
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %vel5, i64 0, i64 0, !dbg !13720
  call void @copy_v3_v3(float* %arraydecay3, float* %arraydecay6), !dbg !13723
  %6 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13724
  %state7 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %6, i32 0, i32 0, !dbg !13725
  %vel8 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state7, i32 0, i32 1, !dbg !13726
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %vel8, i64 0, i64 0, !dbg !13724
  %7 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13727
  %inv_timestep = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %7, i32 0, i32 16, !dbg !13728
  %8 = load float, float* %inv_timestep, align 8, !dbg !13728
  call void @mul_v3_fl(float* %arraydecay9, float %8), !dbg !13729
  ret void, !dbg !13730
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @collision_response(%struct.ParticleData* %pa, %struct.ParticleCollision* %col, %struct.BVHTreeRayHit* %hit, i32 %kill, i32 %dynamic_rotation) #0 !dbg !13731 {
entry:
  %retval = alloca i32, align 4
  %pa.addr = alloca %struct.ParticleData*, align 8
  %col.addr = alloca %struct.ParticleCollision*, align 8
  %hit.addr = alloca %struct.BVHTreeRayHit*, align 8
  %kill.addr = alloca i32, align 4
  %dynamic_rotation.addr = alloca i32, align 4
  %pce = alloca %struct.ParticleCollisionElement*, align 8
  %pd = alloca %struct.PartDeflect*, align 8
  %co = alloca [3 x float], align 4
  %x = alloca float, align 4
  %f = alloca float, align 4
  %dt1 = alloca float, align 4
  %dt2 = alloca float, align 4
  %through = alloca i32, align 4
  %v0 = alloca [3 x float], align 4
  %v0_nor = alloca [3 x float], align 4
  %v0_tan = alloca [3 x float], align 4
  %vc_tan = alloca [3 x float], align 4
  %v0_dot = alloca float, align 4
  %vc_dot = alloca float, align 4
  %damp = alloca float, align 4
  %frict = alloca float, align 4
  %distance = alloca float, align 4
  %nor = alloca [3 x float], align 4
  %dot = alloca float, align 4
  %vr_tan = alloca [3 x float], align 4
  %v1_tan = alloca [3 x float], align 4
  %ave97 = alloca [3 x float], align 4
  %bpa = alloca %struct.BoidParticle*, align 8
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !13734, metadata !DIExpression()), !dbg !13735
  store %struct.ParticleCollision* %col, %struct.ParticleCollision** %col.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollision** %col.addr, metadata !13736, metadata !DIExpression()), !dbg !13737
  store %struct.BVHTreeRayHit* %hit, %struct.BVHTreeRayHit** %hit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BVHTreeRayHit** %hit.addr, metadata !13738, metadata !DIExpression()), !dbg !13739
  store i32 %kill, i32* %kill.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kill.addr, metadata !13740, metadata !DIExpression()), !dbg !13741
  store i32 %dynamic_rotation, i32* %dynamic_rotation.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dynamic_rotation.addr, metadata !13742, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %pce, metadata !13744, metadata !DIExpression()), !dbg !13745
  %0 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13746
  %pce1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %0, i32 0, i32 13, !dbg !13747
  store %struct.ParticleCollisionElement* %pce1, %struct.ParticleCollisionElement** %pce, align 8, !dbg !13745
  call void @llvm.dbg.declare(metadata %struct.PartDeflect** %pd, metadata !13748, metadata !DIExpression()), !dbg !13751
  %1 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13752
  %hit2 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %1, i32 0, i32 1, !dbg !13753
  %2 = load %struct.Object*, %struct.Object** %hit2, align 8, !dbg !13753
  %pd3 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 110, !dbg !13754
  %3 = load %struct.PartDeflect*, %struct.PartDeflect** %pd3, align 8, !dbg !13754
  store %struct.PartDeflect* %3, %struct.PartDeflect** %pd, align 8, !dbg !13751
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !13755, metadata !DIExpression()), !dbg !13756
  call void @llvm.dbg.declare(metadata float* %x, metadata !13757, metadata !DIExpression()), !dbg !13758
  %4 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !13759
  %dist = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %4, i32 0, i32 3, !dbg !13760
  %5 = load float, float* %dist, align 4, !dbg !13760
  %6 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13761
  %original_ray_length = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %6, i32 0, i32 11, !dbg !13762
  %7 = load float, float* %original_ray_length, align 4, !dbg !13762
  %div = fdiv float %5, %7, !dbg !13763
  store float %div, float* %x, align 4, !dbg !13758
  call void @llvm.dbg.declare(metadata float* %f, metadata !13764, metadata !DIExpression()), !dbg !13765
  %8 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13766
  %f4 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %8, i32 0, i32 6, !dbg !13767
  %9 = load float, float* %f4, align 8, !dbg !13767
  %10 = load float, float* %x, align 4, !dbg !13768
  %11 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13769
  %f5 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %11, i32 0, i32 6, !dbg !13770
  %12 = load float, float* %f5, align 8, !dbg !13770
  %sub = fsub float 1.000000e+00, %12, !dbg !13771
  %mul = fmul float %10, %sub, !dbg !13772
  %add = fadd float %9, %mul, !dbg !13773
  store float %add, float* %f, align 4, !dbg !13765
  call void @llvm.dbg.declare(metadata float* %dt1, metadata !13774, metadata !DIExpression()), !dbg !13775
  %13 = load float, float* %f, align 4, !dbg !13776
  %14 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13777
  %f6 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %14, i32 0, i32 6, !dbg !13778
  %15 = load float, float* %f6, align 8, !dbg !13778
  %sub7 = fsub float %13, %15, !dbg !13779
  %16 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13780
  %total_time = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %16, i32 0, i32 14, !dbg !13781
  %17 = load float, float* %total_time, align 8, !dbg !13781
  %mul8 = fmul float %sub7, %17, !dbg !13782
  store float %mul8, float* %dt1, align 4, !dbg !13775
  call void @llvm.dbg.declare(metadata float* %dt2, metadata !13783, metadata !DIExpression()), !dbg !13784
  %18 = load float, float* %f, align 4, !dbg !13785
  %sub9 = fsub float 1.000000e+00, %18, !dbg !13786
  %19 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13787
  %total_time10 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %19, i32 0, i32 14, !dbg !13788
  %20 = load float, float* %total_time10, align 8, !dbg !13788
  %mul11 = fmul float %sub9, %20, !dbg !13789
  store float %mul11, float* %dt2, align 4, !dbg !13784
  call void @llvm.dbg.declare(metadata i32* %through, metadata !13790, metadata !DIExpression()), !dbg !13791
  %call = call float @BLI_frand(), !dbg !13792
  %21 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !13793
  %pdef_perm = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %21, i32 0, i32 21, !dbg !13794
  %22 = load float, float* %pdef_perm, align 4, !dbg !13794
  %cmp = fcmp olt float %call, %22, !dbg !13795
  %23 = zext i1 %cmp to i64, !dbg !13796
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !13796
  store i32 %cond, i32* %through, align 4, !dbg !13791
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13797
  %24 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13798
  %co1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %24, i32 0, i32 18, !dbg !13799
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !13798
  %25 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13800
  %co2 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %25, i32 0, i32 19, !dbg !13801
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !13800
  %26 = load float, float* %x, align 4, !dbg !13802
  call void @interp_v3_v3v3(float* %arraydecay, float* %arraydecay12, float* %arraydecay13, float %26), !dbg !13803
  %27 = load i32, i32* %through, align 4, !dbg !13804
  %cmp14 = icmp eq i32 %27, 0, !dbg !13806
  br i1 %cmp14, label %land.lhs.true, label %if.else, !dbg !13807

land.lhs.true:                                    ; preds = %entry
  %28 = load i32, i32* %kill.addr, align 4, !dbg !13808
  %tobool = icmp ne i32 %28, 0, !dbg !13808
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !13809

lor.lhs.false:                                    ; preds = %land.lhs.true
  %29 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !13810
  %flag = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %29, i32 0, i32 0, !dbg !13811
  %30 = load i32, i32* %flag, align 8, !dbg !13811
  %and = and i32 %30, 16, !dbg !13812
  %tobool15 = icmp ne i32 %and, 0, !dbg !13812
  br i1 %tobool15, label %if.then, label %if.else, !dbg !13813

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %31 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13814
  %alive = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %31, i32 0, i32 18, !dbg !13816
  store i16 4, i16* %alive, align 2, !dbg !13817
  %32 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13818
  %old_cfra = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %32, i32 0, i32 10, !dbg !13819
  %33 = load float, float* %old_cfra, align 8, !dbg !13819
  %34 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13820
  %cfra = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %34, i32 0, i32 9, !dbg !13821
  %35 = load float, float* %cfra, align 4, !dbg !13821
  %36 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13822
  %old_cfra16 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %36, i32 0, i32 10, !dbg !13823
  %37 = load float, float* %old_cfra16, align 8, !dbg !13823
  %sub17 = fsub float %35, %37, !dbg !13824
  %38 = load float, float* %f, align 4, !dbg !13825
  %mul18 = fmul float %sub17, %38, !dbg !13826
  %add19 = fadd float %33, %mul18, !dbg !13827
  %39 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13828
  %dietime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %39, i32 0, i32 8, !dbg !13829
  store float %add19, float* %dietime, align 4, !dbg !13830
  %40 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13831
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %40, i32 0, i32 0, !dbg !13832
  %co20 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !13833
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %co20, i64 0, i64 0, !dbg !13831
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13834
  call void @copy_v3_v3(float* %arraydecay21, float* %arraydecay22), !dbg !13835
  %41 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13836
  %state23 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %41, i32 0, i32 0, !dbg !13837
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state23, i32 0, i32 1, !dbg !13838
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !13836
  %42 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13839
  %prev_state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %42, i32 0, i32 1, !dbg !13840
  %vel25 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state, i32 0, i32 1, !dbg !13841
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %vel25, i64 0, i64 0, !dbg !13839
  %43 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13842
  %state27 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %43, i32 0, i32 0, !dbg !13843
  %vel28 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state27, i32 0, i32 1, !dbg !13844
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %vel28, i64 0, i64 0, !dbg !13842
  %44 = load float, float* %f, align 4, !dbg !13845
  call void @interp_v3_v3v3(float* %arraydecay24, float* %arraydecay26, float* %arraydecay29, float %44), !dbg !13846
  %45 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13847
  %state30 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %45, i32 0, i32 0, !dbg !13848
  %rot = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state30, i32 0, i32 2, !dbg !13849
  %arraydecay31 = getelementptr inbounds [4 x float], [4 x float]* %rot, i64 0, i64 0, !dbg !13847
  %46 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13850
  %prev_state32 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %46, i32 0, i32 1, !dbg !13851
  %rot33 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state32, i32 0, i32 2, !dbg !13852
  %arraydecay34 = getelementptr inbounds [4 x float], [4 x float]* %rot33, i64 0, i64 0, !dbg !13850
  %47 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13853
  %state35 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %47, i32 0, i32 0, !dbg !13854
  %rot36 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state35, i32 0, i32 2, !dbg !13855
  %arraydecay37 = getelementptr inbounds [4 x float], [4 x float]* %rot36, i64 0, i64 0, !dbg !13853
  %48 = load float, float* %f, align 4, !dbg !13856
  call void @interp_qt_qtqt(float* %arraydecay31, float* %arraydecay34, float* %arraydecay37, float %48), !dbg !13857
  %49 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13858
  %state38 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %49, i32 0, i32 0, !dbg !13859
  %ave = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state38, i32 0, i32 3, !dbg !13860
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %ave, i64 0, i64 0, !dbg !13858
  %50 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13861
  %prev_state40 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %50, i32 0, i32 1, !dbg !13862
  %ave41 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %prev_state40, i32 0, i32 3, !dbg !13863
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %ave41, i64 0, i64 0, !dbg !13861
  %51 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13864
  %state43 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %51, i32 0, i32 0, !dbg !13865
  %ave44 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state43, i32 0, i32 3, !dbg !13866
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %ave44, i64 0, i64 0, !dbg !13864
  %52 = load float, float* %f, align 4, !dbg !13867
  call void @interp_v3_v3v3(float* %arraydecay39, float* %arraydecay42, float* %arraydecay45, float %52), !dbg !13868
  store i32 0, i32* %retval, align 4, !dbg !13869
  br label %return, !dbg !13869

if.else:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %v0, metadata !13870, metadata !DIExpression()), !dbg !13872
  call void @llvm.dbg.declare(metadata [3 x float]* %v0_nor, metadata !13873, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.declare(metadata [3 x float]* %v0_tan, metadata !13875, metadata !DIExpression()), !dbg !13876
  call void @llvm.dbg.declare(metadata [3 x float]* %vc_tan, metadata !13877, metadata !DIExpression()), !dbg !13878
  call void @llvm.dbg.declare(metadata float* %v0_dot, metadata !13879, metadata !DIExpression()), !dbg !13880
  call void @llvm.dbg.declare(metadata float* %vc_dot, metadata !13881, metadata !DIExpression()), !dbg !13882
  call void @llvm.dbg.declare(metadata float* %damp, metadata !13883, metadata !DIExpression()), !dbg !13884
  %53 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !13885
  %pdef_damp = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %53, i32 0, i32 19, !dbg !13886
  %54 = load float, float* %pdef_damp, align 4, !dbg !13886
  %55 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !13887
  %pdef_rdamp = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %55, i32 0, i32 20, !dbg !13888
  %56 = load float, float* %pdef_rdamp, align 8, !dbg !13888
  %mul46 = fmul float %56, 2.000000e+00, !dbg !13889
  %call47 = call float @BLI_frand(), !dbg !13890
  %sub48 = fsub float %call47, 5.000000e-01, !dbg !13891
  %mul49 = fmul float %mul46, %sub48, !dbg !13892
  %add50 = fadd float %54, %mul49, !dbg !13893
  store float %add50, float* %damp, align 4, !dbg !13884
  call void @llvm.dbg.declare(metadata float* %frict, metadata !13894, metadata !DIExpression()), !dbg !13895
  %57 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !13896
  %pdef_frict = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %57, i32 0, i32 22, !dbg !13897
  %58 = load float, float* %pdef_frict, align 8, !dbg !13897
  %59 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !13898
  %pdef_rfrict = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %59, i32 0, i32 23, !dbg !13899
  %60 = load float, float* %pdef_rfrict, align 4, !dbg !13899
  %mul51 = fmul float %60, 2.000000e+00, !dbg !13900
  %call52 = call float @BLI_frand(), !dbg !13901
  %sub53 = fsub float %call52, 5.000000e-01, !dbg !13902
  %mul54 = fmul float %mul51, %sub53, !dbg !13903
  %add55 = fadd float %58, %mul54, !dbg !13904
  store float %add55, float* %frict, align 4, !dbg !13895
  call void @llvm.dbg.declare(metadata float* %distance, metadata !13905, metadata !DIExpression()), !dbg !13906
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !13907, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.declare(metadata float* %dot, metadata !13909, metadata !DIExpression()), !dbg !13910
  %61 = load float, float* %damp, align 4, !dbg !13911
  %cmp56 = fcmp olt float %61, 0.000000e+00, !dbg !13911
  br i1 %cmp56, label %if.then57, label %if.else58, !dbg !13914

if.then57:                                        ; preds = %if.else
  store float 0.000000e+00, float* %damp, align 4, !dbg !13911
  br label %if.end61, !dbg !13911

if.else58:                                        ; preds = %if.else
  %62 = load float, float* %damp, align 4, !dbg !13915
  %cmp59 = fcmp ogt float %62, 1.000000e+00, !dbg !13915
  br i1 %cmp59, label %if.then60, label %if.end, !dbg !13911

if.then60:                                        ; preds = %if.else58
  store float 1.000000e+00, float* %damp, align 4, !dbg !13915
  br label %if.end, !dbg !13915

if.end:                                           ; preds = %if.then60, %if.else58
  br label %if.end61

if.end61:                                         ; preds = %if.end, %if.then57
  %63 = load float, float* %frict, align 4, !dbg !13917
  %cmp62 = fcmp olt float %63, 0.000000e+00, !dbg !13917
  br i1 %cmp62, label %if.then63, label %if.else64, !dbg !13920

if.then63:                                        ; preds = %if.end61
  store float 0.000000e+00, float* %frict, align 4, !dbg !13917
  br label %if.end68, !dbg !13917

if.else64:                                        ; preds = %if.end61
  %64 = load float, float* %frict, align 4, !dbg !13921
  %cmp65 = fcmp ogt float %64, 1.000000e+00, !dbg !13921
  br i1 %cmp65, label %if.then66, label %if.end67, !dbg !13917

if.then66:                                        ; preds = %if.else64
  store float 1.000000e+00, float* %frict, align 4, !dbg !13921
  br label %if.end67, !dbg !13921

if.end67:                                         ; preds = %if.then66, %if.else64
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then63
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !13923
  %65 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13924
  %ve1 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %65, i32 0, i32 20, !dbg !13925
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %ve1, i64 0, i64 0, !dbg !13924
  %66 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13926
  %acc = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %66, i32 0, i32 22, !dbg !13927
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %acc, i64 0, i64 0, !dbg !13926
  %67 = load float, float* %dt1, align 4, !dbg !13928
  call void @madd_v3_v3v3fl(float* %arraydecay69, float* %arraydecay70, float* %arraydecay71, float %67), !dbg !13929
  %68 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !13930
  %vel72 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %68, i32 0, i32 7, !dbg !13931
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %vel72, i64 0, i64 0, !dbg !13930
  %69 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !13932
  %inv_timestep = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %69, i32 0, i32 16, !dbg !13933
  %70 = load float, float* %inv_timestep, align 8, !dbg !13933
  call void @mul_v3_fl(float* %arraydecay73, float %70), !dbg !13934
  %71 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !13935
  %nor74 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %71, i32 0, i32 6, !dbg !13936
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %nor74, i64 0, i64 0, !dbg !13935
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !13937
  %call77 = call float @dot_v3v3(float* %arraydecay75, float* %arraydecay76), !dbg !13938
  store float %call77, float* %v0_dot, align 4, !dbg !13939
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %v0_tan, i64 0, i64 0, !dbg !13940
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !13941
  %72 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !13942
  %nor80 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %72, i32 0, i32 6, !dbg !13943
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %nor80, i64 0, i64 0, !dbg !13942
  %73 = load float, float* %v0_dot, align 4, !dbg !13944
  %fneg = fneg float %73, !dbg !13945
  call void @madd_v3_v3v3fl(float* %arraydecay78, float* %arraydecay79, float* %arraydecay81, float %fneg), !dbg !13946
  %74 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !13947
  %nor82 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %74, i32 0, i32 6, !dbg !13948
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %nor82, i64 0, i64 0, !dbg !13947
  %75 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !13949
  %vel84 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %75, i32 0, i32 7, !dbg !13950
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %vel84, i64 0, i64 0, !dbg !13949
  %call86 = call float @dot_v3v3(float* %arraydecay83, float* %arraydecay85), !dbg !13951
  store float %call86, float* %vc_dot, align 4, !dbg !13952
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %vc_tan, i64 0, i64 0, !dbg !13953
  %76 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !13954
  %vel88 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %76, i32 0, i32 7, !dbg !13955
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %vel88, i64 0, i64 0, !dbg !13954
  %77 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !13956
  %nor90 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %77, i32 0, i32 6, !dbg !13957
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %nor90, i64 0, i64 0, !dbg !13956
  %78 = load float, float* %vc_dot, align 4, !dbg !13958
  %fneg92 = fneg float %78, !dbg !13959
  call void @madd_v3_v3v3fl(float* %arraydecay87, float* %arraydecay89, float* %arraydecay91, float %fneg92), !dbg !13960
  %79 = load float, float* %frict, align 4, !dbg !13961
  %cmp93 = fcmp ogt float %79, 0.000000e+00, !dbg !13963
  br i1 %cmp93, label %if.then94, label %if.end143, !dbg !13964

if.then94:                                        ; preds = %if.end68
  %80 = load i32, i32* %dynamic_rotation.addr, align 4, !dbg !13965
  %tobool95 = icmp ne i32 %80, 0, !dbg !13965
  br i1 %tobool95, label %if.then96, label %if.else138, !dbg !13968

if.then96:                                        ; preds = %if.then94
  call void @llvm.dbg.declare(metadata [3 x float]* %vr_tan, metadata !13969, metadata !DIExpression()), !dbg !13971
  call void @llvm.dbg.declare(metadata [3 x float]* %v1_tan, metadata !13972, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.declare(metadata [3 x float]* %ave97, metadata !13974, metadata !DIExpression()), !dbg !13975
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %vr_tan, i64 0, i64 0, !dbg !13976
  %81 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !13977
  %nor99 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %81, i32 0, i32 6, !dbg !13978
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %nor99, i64 0, i64 0, !dbg !13977
  %82 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13979
  %state101 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %82, i32 0, i32 0, !dbg !13980
  %ave102 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state101, i32 0, i32 3, !dbg !13981
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %ave102, i64 0, i64 0, !dbg !13979
  call void @cross_v3_v3v3(float* %arraydecay98, float* %arraydecay100, float* %arraydecay103), !dbg !13982
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %vr_tan, i64 0, i64 0, !dbg !13983
  %83 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !13984
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %83, i32 0, i32 13, !dbg !13985
  %84 = load float, float* %size, align 4, !dbg !13985
  call void @mul_v3_fl(float* %arraydecay104, float %84), !dbg !13986
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %v1_tan, i64 0, i64 0, !dbg !13987
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %v0_tan, i64 0, i64 0, !dbg !13988
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %vc_tan, i64 0, i64 0, !dbg !13989
  call void @sub_v3_v3v3(float* %arraydecay105, float* %arraydecay106, float* %arraydecay107), !dbg !13990
  %arraydecay108 = getelementptr inbounds [3 x float], [3 x float]* %v1_tan, i64 0, i64 0, !dbg !13991
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %vr_tan, i64 0, i64 0, !dbg !13992
  call void @madd_v3_v3fl(float* %arraydecay108, float* %arraydecay109, float 0xBFD99999A0000000), !dbg !13993
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %v1_tan, i64 0, i64 0, !dbg !13994
  call void @mul_v3_fl(float* %arraydecay110, float 0x3FE6DB6DC0000000), !dbg !13995
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %v1_tan, i64 0, i64 0, !dbg !13996
  %85 = load float, float* %frict, align 4, !dbg !13997
  %mul112 = fmul float 0x3F847AE140000000, %85, !dbg !13998
  %sub113 = fsub float 1.000000e+00, %mul112, !dbg !13999
  call void @mul_v3_fl(float* %arraydecay111, float %sub113), !dbg !14000
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %vr_tan, i64 0, i64 0, !dbg !14001
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %v1_tan, i64 0, i64 0, !dbg !14002
  call void @negate_v3_v3(float* %arraydecay114, float* %arraydecay115), !dbg !14003
  %arraydecay116 = getelementptr inbounds [3 x float], [3 x float]* %v1_tan, i64 0, i64 0, !dbg !14004
  %arraydecay117 = getelementptr inbounds [3 x float], [3 x float]* %vc_tan, i64 0, i64 0, !dbg !14005
  call void @add_v3_v3(float* %arraydecay116, float* %arraydecay117), !dbg !14006
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %ave97, i64 0, i64 0, !dbg !14007
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %vr_tan, i64 0, i64 0, !dbg !14008
  %86 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !14009
  %nor120 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %86, i32 0, i32 6, !dbg !14010
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %nor120, i64 0, i64 0, !dbg !14009
  call void @cross_v3_v3v3(float* %arraydecay118, float* %arraydecay119, float* %arraydecay121), !dbg !14011
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %ave97, i64 0, i64 0, !dbg !14012
  %87 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14013
  %size123 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %87, i32 0, i32 13, !dbg !14013
  %88 = load float, float* %size123, align 4, !dbg !14013
  %cmp124 = fcmp ogt float %88, 0x3F50624DE0000000, !dbg !14013
  br i1 %cmp124, label %cond.true, label %cond.false, !dbg !14013

cond.true:                                        ; preds = %if.then96
  %89 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14013
  %size125 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %89, i32 0, i32 13, !dbg !14013
  %90 = load float, float* %size125, align 4, !dbg !14013
  br label %cond.end, !dbg !14013

cond.false:                                       ; preds = %if.then96
  br label %cond.end, !dbg !14013

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond126 = phi float [ %90, %cond.true ], [ 0x3F50624DE0000000, %cond.false ], !dbg !14013
  %div127 = fdiv float 1.000000e+00, %cond126, !dbg !14014
  call void @mul_v3_fl(float* %arraydecay122, float %div127), !dbg !14015
  %91 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14016
  %state128 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %91, i32 0, i32 0, !dbg !14017
  %ave129 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state128, i32 0, i32 3, !dbg !14018
  %arraydecay130 = getelementptr inbounds [3 x float], [3 x float]* %ave129, i64 0, i64 0, !dbg !14016
  %92 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14019
  %state131 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %92, i32 0, i32 0, !dbg !14020
  %ave132 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state131, i32 0, i32 3, !dbg !14021
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %ave132, i64 0, i64 0, !dbg !14019
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %ave97, i64 0, i64 0, !dbg !14022
  %93 = load float, float* %frict, align 4, !dbg !14023
  call void @interp_v3_v3v3(float* %arraydecay130, float* %arraydecay133, float* %arraydecay134, float %93), !dbg !14024
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %v0_tan, i64 0, i64 0, !dbg !14025
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %v0_tan, i64 0, i64 0, !dbg !14026
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %v1_tan, i64 0, i64 0, !dbg !14027
  %94 = load float, float* %frict, align 4, !dbg !14028
  call void @interp_v3_v3v3(float* %arraydecay135, float* %arraydecay136, float* %arraydecay137, float %94), !dbg !14029
  br label %if.end142, !dbg !14030

if.else138:                                       ; preds = %if.then94
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %v0_tan, i64 0, i64 0, !dbg !14031
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %v0_tan, i64 0, i64 0, !dbg !14033
  %arraydecay141 = getelementptr inbounds [3 x float], [3 x float]* %vc_tan, i64 0, i64 0, !dbg !14034
  %95 = load float, float* %frict, align 4, !dbg !14035
  call void @interp_v3_v3v3(float* %arraydecay139, float* %arraydecay140, float* %arraydecay141, float %95), !dbg !14036
  br label %if.end142

if.end142:                                        ; preds = %if.else138, %cond.end
  br label %if.end143, !dbg !14037

if.end143:                                        ; preds = %if.end142, %if.end68
  %96 = load float, float* %v0_dot, align 4, !dbg !14038
  %cmp144 = fcmp olt float %96, 0.000000e+00, !dbg !14040
  br i1 %cmp144, label %if.then145, label %if.end150, !dbg !14041

if.then145:                                       ; preds = %if.end143
  %97 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !14042
  %pdef_stickness = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %97, i32 0, i32 24, !dbg !14044
  %98 = load float, float* %pdef_stickness, align 8, !dbg !14044
  %99 = load float, float* %v0_dot, align 4, !dbg !14045
  %add146 = fadd float %99, %98, !dbg !14045
  store float %add146, float* %v0_dot, align 4, !dbg !14045
  %100 = load float, float* %v0_dot, align 4, !dbg !14046
  %cmp147 = fcmp ogt float %100, 0.000000e+00, !dbg !14048
  br i1 %cmp147, label %if.then148, label %if.end149, !dbg !14049

if.then148:                                       ; preds = %if.then145
  store float 0.000000e+00, float* %v0_dot, align 4, !dbg !14050
  br label %if.end149, !dbg !14051

if.end149:                                        ; preds = %if.then148, %if.then145
  br label %if.end150, !dbg !14052

if.end150:                                        ; preds = %if.end149, %if.end143
  %101 = load float, float* %damp, align 4, !dbg !14053
  %sub151 = fsub float 1.000000e+00, %101, !dbg !14054
  %102 = load float, float* %v0_dot, align 4, !dbg !14055
  %mul152 = fmul float %102, %sub151, !dbg !14055
  store float %mul152, float* %v0_dot, align 4, !dbg !14055
  %103 = load i32, i32* %through, align 4, !dbg !14056
  %tobool153 = icmp ne i32 %103, 0, !dbg !14056
  br i1 %tobool153, label %cond.true154, label %cond.false155, !dbg !14056

cond.true154:                                     ; preds = %if.end150
  %104 = load float, float* %damp, align 4, !dbg !14057
  br label %cond.end156, !dbg !14056

cond.false155:                                    ; preds = %if.end150
  br label %cond.end156, !dbg !14056

cond.end156:                                      ; preds = %cond.false155, %cond.true154
  %cond157 = phi float [ %104, %cond.true154 ], [ 1.000000e+00, %cond.false155 ], !dbg !14056
  %105 = load float, float* %vc_dot, align 4, !dbg !14058
  %mul158 = fmul float %105, %cond157, !dbg !14058
  store float %mul158, float* %vc_dot, align 4, !dbg !14058
  %106 = load i32, i32* %through, align 4, !dbg !14059
  %cmp159 = icmp eq i32 %106, 0, !dbg !14061
  br i1 %cmp159, label %land.lhs.true160, label %if.else176, !dbg !14062

land.lhs.true160:                                 ; preds = %cond.end156
  %107 = load float, float* %vc_dot, align 4, !dbg !14063
  %cmp161 = fcmp ogt float %107, 0.000000e+00, !dbg !14064
  br i1 %cmp161, label %land.lhs.true162, label %lor.lhs.false166, !dbg !14065

land.lhs.true162:                                 ; preds = %land.lhs.true160
  %108 = load float, float* %v0_dot, align 4, !dbg !14066
  %cmp163 = fcmp ogt float %108, 0.000000e+00, !dbg !14067
  br i1 %cmp163, label %land.lhs.true164, label %lor.lhs.false166, !dbg !14068

land.lhs.true164:                                 ; preds = %land.lhs.true162
  %109 = load float, float* %vc_dot, align 4, !dbg !14069
  %110 = load float, float* %v0_dot, align 4, !dbg !14070
  %cmp165 = fcmp ogt float %109, %110, !dbg !14071
  br i1 %cmp165, label %if.then172, label %lor.lhs.false166, !dbg !14072

lor.lhs.false166:                                 ; preds = %land.lhs.true164, %land.lhs.true162, %land.lhs.true160
  %111 = load float, float* %vc_dot, align 4, !dbg !14073
  %cmp167 = fcmp olt float %111, 0.000000e+00, !dbg !14074
  br i1 %cmp167, label %land.lhs.true168, label %if.else176, !dbg !14075

land.lhs.true168:                                 ; preds = %lor.lhs.false166
  %112 = load float, float* %v0_dot, align 4, !dbg !14076
  %cmp169 = fcmp olt float %112, 0.000000e+00, !dbg !14077
  br i1 %cmp169, label %land.lhs.true170, label %if.else176, !dbg !14078

land.lhs.true170:                                 ; preds = %land.lhs.true168
  %113 = load float, float* %vc_dot, align 4, !dbg !14079
  %114 = load float, float* %v0_dot, align 4, !dbg !14080
  %cmp171 = fcmp olt float %113, %114, !dbg !14081
  br i1 %cmp171, label %if.then172, label %if.else176, !dbg !14082

if.then172:                                       ; preds = %land.lhs.true170, %land.lhs.true164
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %v0_nor, i64 0, i64 0, !dbg !14083
  %115 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !14084
  %nor174 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %115, i32 0, i32 6, !dbg !14085
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %nor174, i64 0, i64 0, !dbg !14084
  %116 = load float, float* %vc_dot, align 4, !dbg !14086
  call void @mul_v3_v3fl(float* %arraydecay173, float* %arraydecay175, float %116), !dbg !14087
  br label %if.end195, !dbg !14087

if.else176:                                       ; preds = %land.lhs.true170, %land.lhs.true168, %lor.lhs.false166, %cond.end156
  %117 = load float, float* %v0_dot, align 4, !dbg !14088
  %cmp177 = fcmp ogt float %117, 0.000000e+00, !dbg !14090
  br i1 %cmp177, label %if.then178, label %if.else186, !dbg !14091

if.then178:                                       ; preds = %if.else176
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %v0_nor, i64 0, i64 0, !dbg !14092
  %118 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !14093
  %nor180 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %118, i32 0, i32 6, !dbg !14094
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %nor180, i64 0, i64 0, !dbg !14093
  %119 = load float, float* %vc_dot, align 4, !dbg !14095
  %120 = load i32, i32* %through, align 4, !dbg !14096
  %tobool182 = icmp ne i32 %120, 0, !dbg !14096
  %121 = zext i1 %tobool182 to i64, !dbg !14096
  %cond183 = select i1 %tobool182, float -1.000000e+00, float 1.000000e+00, !dbg !14096
  %122 = load float, float* %v0_dot, align 4, !dbg !14097
  %mul184 = fmul float %cond183, %122, !dbg !14098
  %add185 = fadd float %119, %mul184, !dbg !14099
  call void @mul_v3_v3fl(float* %arraydecay179, float* %arraydecay181, float %add185), !dbg !14100
  br label %if.end194, !dbg !14100

if.else186:                                       ; preds = %if.else176
  %arraydecay187 = getelementptr inbounds [3 x float], [3 x float]* %v0_nor, i64 0, i64 0, !dbg !14101
  %123 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !14102
  %nor188 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %123, i32 0, i32 6, !dbg !14103
  %arraydecay189 = getelementptr inbounds [3 x float], [3 x float]* %nor188, i64 0, i64 0, !dbg !14102
  %124 = load float, float* %vc_dot, align 4, !dbg !14104
  %125 = load i32, i32* %through, align 4, !dbg !14105
  %tobool190 = icmp ne i32 %125, 0, !dbg !14105
  %126 = zext i1 %tobool190 to i64, !dbg !14105
  %cond191 = select i1 %tobool190, float 1.000000e+00, float -1.000000e+00, !dbg !14105
  %127 = load float, float* %v0_dot, align 4, !dbg !14106
  %mul192 = fmul float %cond191, %127, !dbg !14107
  %add193 = fadd float %124, %mul192, !dbg !14108
  call void @mul_v3_v3fl(float* %arraydecay187, float* %arraydecay189, float %add193), !dbg !14109
  br label %if.end194

if.end194:                                        ; preds = %if.else186, %if.then178
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %if.then172
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !14110
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %v0_nor, i64 0, i64 0, !dbg !14111
  %arraydecay198 = getelementptr inbounds [3 x float], [3 x float]* %v0_tan, i64 0, i64 0, !dbg !14112
  call void @add_v3_v3v3(float* %arraydecay196, float* %arraydecay197, float* %arraydecay198), !dbg !14113
  %128 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14114
  %boid = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %128, i32 0, i32 24, !dbg !14116
  %129 = load i32, i32* %boid, align 8, !dbg !14116
  %tobool199 = icmp ne i32 %129, 0, !dbg !14114
  br i1 %tobool199, label %if.then200, label %if.end212, !dbg !14117

if.then200:                                       ; preds = %if.end195
  call void @llvm.dbg.declare(metadata %struct.BoidParticle** %bpa, metadata !14118, metadata !DIExpression()), !dbg !14120
  %130 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14121
  %boid201 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %130, i32 0, i32 4, !dbg !14122
  %131 = load %struct.BoidParticle*, %struct.BoidParticle** %boid201, align 8, !dbg !14122
  store %struct.BoidParticle* %131, %struct.BoidParticle** %bpa, align 8, !dbg !14120
  %132 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !14123
  %data = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %132, i32 0, i32 1, !dbg !14125
  %mode = getelementptr inbounds %struct.BoidData, %struct.BoidData* %data, i32 0, i32 3, !dbg !14126
  %133 = load i16, i16* %mode, align 2, !dbg !14126
  %conv = sext i16 %133 to i32, !dbg !14123
  %cmp202 = icmp eq i32 %conv, 1, !dbg !14127
  br i1 %cmp202, label %if.then207, label %lor.lhs.false204, !dbg !14128

lor.lhs.false204:                                 ; preds = %if.then200
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 2, !dbg !14129
  %134 = load float, float* %arrayidx, align 4, !dbg !14129
  %135 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14130
  %boid_z = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %135, i32 0, i32 23, !dbg !14131
  %136 = load float, float* %boid_z, align 4, !dbg !14131
  %cmp205 = fcmp ole float %134, %136, !dbg !14132
  br i1 %cmp205, label %if.then207, label %if.end211, !dbg !14133

if.then207:                                       ; preds = %lor.lhs.false204, %if.then200
  %137 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14134
  %boid_z208 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %137, i32 0, i32 23, !dbg !14136
  %138 = load float, float* %boid_z208, align 4, !dbg !14136
  %arrayidx209 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 2, !dbg !14137
  store float %138, float* %arrayidx209, align 4, !dbg !14138
  %arrayidx210 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 2, !dbg !14139
  store float 0.000000e+00, float* %arrayidx210, align 4, !dbg !14140
  br label %if.end211, !dbg !14141

if.end211:                                        ; preds = %if.then207, %lor.lhs.false204
  br label %if.end212, !dbg !14142

if.end212:                                        ; preds = %if.end211, %if.end195
  %139 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14143
  %state213 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %139, i32 0, i32 0, !dbg !14144
  %co214 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state213, i32 0, i32 0, !dbg !14145
  %arraydecay215 = getelementptr inbounds [3 x float], [3 x float]* %co214, i64 0, i64 0, !dbg !14143
  %arraydecay216 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !14146
  %arraydecay217 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !14147
  %140 = load float, float* %dt2, align 4, !dbg !14148
  call void @madd_v3_v3v3fl(float* %arraydecay215, float* %arraydecay216, float* %arraydecay217, float %140), !dbg !14149
  %141 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14150
  %state218 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %141, i32 0, i32 0, !dbg !14151
  %co219 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state218, i32 0, i32 0, !dbg !14152
  %arraydecay220 = getelementptr inbounds [3 x float], [3 x float]* %co219, i64 0, i64 0, !dbg !14150
  %142 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14153
  %acc221 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %142, i32 0, i32 22, !dbg !14154
  %arraydecay222 = getelementptr inbounds [3 x float], [3 x float]* %acc221, i64 0, i64 0, !dbg !14153
  %143 = load float, float* %dt2, align 4, !dbg !14155
  %mul223 = fmul float 5.000000e-01, %143, !dbg !14156
  %144 = load float, float* %dt2, align 4, !dbg !14157
  %mul224 = fmul float %mul223, %144, !dbg !14158
  call void @madd_v3_v3fl(float* %arraydecay220, float* %arraydecay222, float %mul224), !dbg !14159
  %145 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14160
  %state225 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %145, i32 0, i32 0, !dbg !14161
  %vel226 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state225, i32 0, i32 1, !dbg !14162
  %arraydecay227 = getelementptr inbounds [3 x float], [3 x float]* %vel226, i64 0, i64 0, !dbg !14160
  %arraydecay228 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !14163
  %146 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14164
  %acc229 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %146, i32 0, i32 22, !dbg !14165
  %arraydecay230 = getelementptr inbounds [3 x float], [3 x float]* %acc229, i64 0, i64 0, !dbg !14164
  %147 = load float, float* %dt2, align 4, !dbg !14166
  call void @madd_v3_v3v3fl(float* %arraydecay227, float* %arraydecay228, float* %arraydecay230, float %147), !dbg !14167
  %148 = load i32, i32* %through, align 4, !dbg !14168
  %tobool231 = icmp ne i32 %148, 0, !dbg !14168
  br i1 %tobool231, label %if.end288, label %if.then232, !dbg !14170

if.then232:                                       ; preds = %if.end212
  %arraydecay233 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !14171
  %149 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !14173
  %150 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14174
  %arraydecay234 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14175
  %call235 = call float @collision_point_distance_with_normal(float* %arraydecay233, %struct.ParticleCollisionElement* %149, float -1.000000e+00, %struct.ParticleCollision* %150, float* %arraydecay234), !dbg !14176
  store float %call235, float* %distance, align 4, !dbg !14177
  %151 = load float, float* %distance, align 4, !dbg !14178
  %152 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14180
  %radius = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %152, i32 0, i32 17, !dbg !14181
  %153 = load float, float* %radius, align 4, !dbg !14181
  %add236 = fadd float %153, 0x3F1A36E2E0000000, !dbg !14182
  %cmp237 = fcmp olt float %151, %add236, !dbg !14183
  br i1 %cmp237, label %if.then239, label %if.end245, !dbg !14184

if.then239:                                       ; preds = %if.then232
  %arraydecay240 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !14185
  %arraydecay241 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14186
  %154 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14187
  %radius242 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %154, i32 0, i32 17, !dbg !14188
  %155 = load float, float* %radius242, align 4, !dbg !14188
  %add243 = fadd float %155, 0x3F1A36E2E0000000, !dbg !14189
  %156 = load float, float* %distance, align 4, !dbg !14190
  %sub244 = fsub float %add243, %156, !dbg !14191
  call void @madd_v3_v3fl(float* %arraydecay240, float* %arraydecay241, float %sub244), !dbg !14192
  br label %if.end245, !dbg !14192

if.end245:                                        ; preds = %if.then239, %if.then232
  %arraydecay246 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14193
  %arraydecay247 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !14194
  %call248 = call float @dot_v3v3(float* %arraydecay246, float* %arraydecay247), !dbg !14195
  store float %call248, float* %dot, align 4, !dbg !14196
  %157 = load float, float* %dot, align 4, !dbg !14197
  %cmp249 = fcmp olt float %157, 0.000000e+00, !dbg !14199
  br i1 %cmp249, label %if.then251, label %if.end255, !dbg !14200

if.then251:                                       ; preds = %if.end245
  %arraydecay252 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !14201
  %arraydecay253 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14202
  %158 = load float, float* %dot, align 4, !dbg !14203
  %fneg254 = fneg float %158, !dbg !14204
  call void @madd_v3_v3fl(float* %arraydecay252, float* %arraydecay253, float %fneg254), !dbg !14205
  br label %if.end255, !dbg !14205

if.end255:                                        ; preds = %if.then251, %if.end245
  %159 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14206
  %state256 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %159, i32 0, i32 0, !dbg !14207
  %co257 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state256, i32 0, i32 0, !dbg !14208
  %arraydecay258 = getelementptr inbounds [3 x float], [3 x float]* %co257, i64 0, i64 0, !dbg !14206
  %160 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !14209
  %161 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14210
  %arraydecay259 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14211
  %call260 = call float @collision_point_distance_with_normal(float* %arraydecay258, %struct.ParticleCollisionElement* %160, float 1.000000e+00, %struct.ParticleCollision* %161, float* %arraydecay259), !dbg !14212
  store float %call260, float* %distance, align 4, !dbg !14213
  %162 = load float, float* %distance, align 4, !dbg !14214
  %163 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14216
  %radius261 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %163, i32 0, i32 17, !dbg !14217
  %164 = load float, float* %radius261, align 4, !dbg !14217
  %add262 = fadd float %164, 0x3F1A36E2E0000000, !dbg !14218
  %cmp263 = fcmp olt float %162, %add262, !dbg !14219
  br i1 %cmp263, label %if.then265, label %if.end273, !dbg !14220

if.then265:                                       ; preds = %if.end255
  %165 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14221
  %state266 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %165, i32 0, i32 0, !dbg !14222
  %co267 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state266, i32 0, i32 0, !dbg !14223
  %arraydecay268 = getelementptr inbounds [3 x float], [3 x float]* %co267, i64 0, i64 0, !dbg !14221
  %arraydecay269 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14224
  %166 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14225
  %radius270 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %166, i32 0, i32 17, !dbg !14226
  %167 = load float, float* %radius270, align 4, !dbg !14226
  %add271 = fadd float %167, 0x3F1A36E2E0000000, !dbg !14227
  %168 = load float, float* %distance, align 4, !dbg !14228
  %sub272 = fsub float %add271, %168, !dbg !14229
  call void @madd_v3_v3fl(float* %arraydecay268, float* %arraydecay269, float %sub272), !dbg !14230
  br label %if.end273, !dbg !14230

if.end273:                                        ; preds = %if.then265, %if.end255
  %arraydecay274 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14231
  %169 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14232
  %state275 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %169, i32 0, i32 0, !dbg !14233
  %vel276 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state275, i32 0, i32 1, !dbg !14234
  %arraydecay277 = getelementptr inbounds [3 x float], [3 x float]* %vel276, i64 0, i64 0, !dbg !14232
  %call278 = call float @dot_v3v3(float* %arraydecay274, float* %arraydecay277), !dbg !14235
  store float %call278, float* %dot, align 4, !dbg !14236
  %170 = load float, float* %dot, align 4, !dbg !14237
  %cmp279 = fcmp olt float %170, 0.000000e+00, !dbg !14239
  br i1 %cmp279, label %if.then281, label %if.end287, !dbg !14240

if.then281:                                       ; preds = %if.end273
  %171 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14241
  %state282 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %171, i32 0, i32 0, !dbg !14242
  %vel283 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state282, i32 0, i32 1, !dbg !14243
  %arraydecay284 = getelementptr inbounds [3 x float], [3 x float]* %vel283, i64 0, i64 0, !dbg !14241
  %arraydecay285 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14244
  %172 = load float, float* %dot, align 4, !dbg !14245
  %fneg286 = fneg float %172, !dbg !14246
  call void @madd_v3_v3fl(float* %arraydecay284, float* %arraydecay285, float %fneg286), !dbg !14247
  br label %if.end287, !dbg !14247

if.end287:                                        ; preds = %if.then281, %if.end273
  br label %if.end288, !dbg !14248

if.end288:                                        ; preds = %if.end287, %if.end212
  %173 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14249
  %state289 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %173, i32 0, i32 0, !dbg !14250
  %vel290 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state289, i32 0, i32 1, !dbg !14251
  %arraydecay291 = getelementptr inbounds [3 x float], [3 x float]* %vel290, i64 0, i64 0, !dbg !14249
  %174 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce, align 8, !dbg !14252
  %nor292 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %174, i32 0, i32 6, !dbg !14253
  %arraydecay293 = getelementptr inbounds [3 x float], [3 x float]* %nor292, i64 0, i64 0, !dbg !14252
  %175 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !14254
  %pdef_stickness294 = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %175, i32 0, i32 24, !dbg !14255
  %176 = load float, float* %pdef_stickness294, align 8, !dbg !14255
  %fneg295 = fneg float %176, !dbg !14256
  call void @madd_v3_v3fl(float* %arraydecay291, float* %arraydecay293, float %fneg295), !dbg !14257
  %177 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14258
  %co1296 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %177, i32 0, i32 18, !dbg !14259
  %arraydecay297 = getelementptr inbounds [3 x float], [3 x float]* %co1296, i64 0, i64 0, !dbg !14258
  %arraydecay298 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !14260
  call void @copy_v3_v3(float* %arraydecay297, float* %arraydecay298), !dbg !14261
  %178 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14262
  %co2299 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %178, i32 0, i32 19, !dbg !14263
  %arraydecay300 = getelementptr inbounds [3 x float], [3 x float]* %co2299, i64 0, i64 0, !dbg !14262
  %179 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14264
  %state301 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %179, i32 0, i32 0, !dbg !14265
  %co302 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state301, i32 0, i32 0, !dbg !14266
  %arraydecay303 = getelementptr inbounds [3 x float], [3 x float]* %co302, i64 0, i64 0, !dbg !14264
  call void @copy_v3_v3(float* %arraydecay300, float* %arraydecay303), !dbg !14267
  %180 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14268
  %ve1304 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %180, i32 0, i32 20, !dbg !14269
  %arraydecay305 = getelementptr inbounds [3 x float], [3 x float]* %ve1304, i64 0, i64 0, !dbg !14268
  %arraydecay306 = getelementptr inbounds [3 x float], [3 x float]* %v0, i64 0, i64 0, !dbg !14270
  call void @copy_v3_v3(float* %arraydecay305, float* %arraydecay306), !dbg !14271
  %181 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14272
  %ve2 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %181, i32 0, i32 21, !dbg !14273
  %arraydecay307 = getelementptr inbounds [3 x float], [3 x float]* %ve2, i64 0, i64 0, !dbg !14272
  %182 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !14274
  %state308 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %182, i32 0, i32 0, !dbg !14275
  %vel309 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state308, i32 0, i32 1, !dbg !14276
  %arraydecay310 = getelementptr inbounds [3 x float], [3 x float]* %vel309, i64 0, i64 0, !dbg !14274
  call void @copy_v3_v3(float* %arraydecay307, float* %arraydecay310), !dbg !14277
  %183 = load float, float* %f, align 4, !dbg !14278
  %184 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14279
  %f311 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %184, i32 0, i32 6, !dbg !14280
  store float %183, float* %f311, align 8, !dbg !14281
  br label %if.end312

if.end312:                                        ; preds = %if.end288
  %185 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14282
  %hit313 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %185, i32 0, i32 1, !dbg !14283
  %186 = load %struct.Object*, %struct.Object** %hit313, align 8, !dbg !14283
  %187 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14284
  %prev = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %187, i32 0, i32 2, !dbg !14285
  store %struct.Object* %186, %struct.Object** %prev, align 8, !dbg !14286
  %188 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !14287
  %index = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %188, i32 0, i32 0, !dbg !14288
  %189 = load i32, i32* %index, align 4, !dbg !14288
  %190 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14289
  %prev_index = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %190, i32 0, i32 12, !dbg !14290
  store i32 %189, i32* %prev_index, align 8, !dbg !14291
  store i32 1, i32* %retval, align 4, !dbg !14292
  br label %return, !dbg !14292

return:                                           ; preds = %if.end312, %if.then
  %191 = load i32, i32* %retval, align 4, !dbg !14293
  ret i32 %191, !dbg !14293
}

declare dso_local i32 @BLI_bvhtree_ray_cast(%struct.BVHTree*, float*, float*, float, %struct.BVHTreeRayHit*, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @collision_point_on_surface(float* %p, %struct.ParticleCollisionElement* %pce, float %fac, %struct.ParticleCollision* %col, float* %co) #0 !dbg !14294 {
entry:
  %p.addr = alloca float*, align 8
  %pce.addr = alloca %struct.ParticleCollisionElement*, align 8
  %fac.addr = alloca float, align 4
  %col.addr = alloca %struct.ParticleCollision*, align 8
  %co.addr = alloca float*, align 8
  %u = alloca float, align 4
  %e = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  %nor = alloca [3 x float], align 4
  %p0 = alloca [3 x float], align 4
  %e1 = alloca [3 x float], align 4
  %e2 = alloca [3 x float], align 4
  %nor28 = alloca [3 x float], align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !14297, metadata !DIExpression()), !dbg !14298
  store %struct.ParticleCollisionElement* %pce, %struct.ParticleCollisionElement** %pce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %pce.addr, metadata !14299, metadata !DIExpression()), !dbg !14300
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !14301, metadata !DIExpression()), !dbg !14302
  store %struct.ParticleCollision* %col, %struct.ParticleCollision** %col.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollision** %col.addr, metadata !14303, metadata !DIExpression()), !dbg !14304
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !14305, metadata !DIExpression()), !dbg !14306
  %0 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14307
  %1 = load float, float* %fac.addr, align 4, !dbg !14308
  %2 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14309
  call void @collision_interpolate_element(%struct.ParticleCollisionElement* %0, float 0.000000e+00, float %1, %struct.ParticleCollision* %2), !dbg !14310
  %3 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14311
  %tot = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %3, i32 0, i32 9, !dbg !14312
  %4 = load i32, i32* %tot, align 8, !dbg !14312
  switch i32 %4, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb27
  ], !dbg !14313

sw.bb:                                            ; preds = %entry
  %5 = load float*, float** %co.addr, align 8, !dbg !14314
  %6 = load float*, float** %p.addr, align 8, !dbg !14317
  %7 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14318
  %x0 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %7, i32 0, i32 2, !dbg !14319
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %x0, i64 0, i64 0, !dbg !14318
  call void @sub_v3_v3v3(float* %5, float* %6, float* %arraydecay), !dbg !14320
  %8 = load float*, float** %co.addr, align 8, !dbg !14321
  %call = call float @normalize_v3(float* %8), !dbg !14322
  %9 = load float*, float** %co.addr, align 8, !dbg !14323
  %10 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14324
  %x01 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %10, i32 0, i32 2, !dbg !14325
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %x01, i64 0, i64 0, !dbg !14324
  %11 = load float*, float** %co.addr, align 8, !dbg !14326
  %12 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14327
  %radius = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %12, i32 0, i32 17, !dbg !14328
  %13 = load float, float* %radius, align 4, !dbg !14328
  call void @madd_v3_v3v3fl(float* %9, float* %arraydecay2, float* %11, float %13), !dbg !14329
  br label %sw.epilog, !dbg !14330

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %u, metadata !14331, metadata !DIExpression()), !dbg !14333
  call void @llvm.dbg.declare(metadata [3 x float]* %e, metadata !14334, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !14336, metadata !DIExpression()), !dbg !14337
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !14338, metadata !DIExpression()), !dbg !14339
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !14340
  %14 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14341
  %x1 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %14, i32 0, i32 3, !dbg !14342
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %x1, i64 0, i64 0, !dbg !14341
  %15 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14343
  %x06 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %15, i32 0, i32 2, !dbg !14344
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %x06, i64 0, i64 0, !dbg !14343
  call void @sub_v3_v3v3(float* %arraydecay4, float* %arraydecay5, float* %arraydecay7), !dbg !14345
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14346
  %16 = load float*, float** %p.addr, align 8, !dbg !14347
  %17 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14348
  %x09 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %17, i32 0, i32 2, !dbg !14349
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %x09, i64 0, i64 0, !dbg !14348
  call void @sub_v3_v3v3(float* %arraydecay8, float* %16, float* %arraydecay10), !dbg !14350
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14351
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !14352
  %call13 = call float @dot_v3v3(float* %arraydecay11, float* %arraydecay12), !dbg !14353
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !14354
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !14355
  %call16 = call float @dot_v3v3(float* %arraydecay14, float* %arraydecay15), !dbg !14356
  %div = fdiv float %call13, %call16, !dbg !14357
  store float %div, float* %u, align 4, !dbg !14358
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14359
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14360
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !14361
  %18 = load float, float* %u, align 4, !dbg !14362
  %fneg = fneg float %18, !dbg !14363
  call void @madd_v3_v3v3fl(float* %arraydecay17, float* %arraydecay18, float* %arraydecay19, float %fneg), !dbg !14364
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14365
  %call21 = call float @normalize_v3(float* %arraydecay20), !dbg !14366
  %19 = load float*, float** %co.addr, align 8, !dbg !14367
  %20 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14368
  %x022 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %20, i32 0, i32 2, !dbg !14369
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %x022, i64 0, i64 0, !dbg !14368
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !14370
  %21 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14371
  %uv = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %21, i32 0, i32 8, !dbg !14372
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !14371
  %22 = load float, float* %arrayidx, align 8, !dbg !14371
  call void @madd_v3_v3v3fl(float* %19, float* %arraydecay23, float* %arraydecay24, float %22), !dbg !14373
  %23 = load float*, float** %co.addr, align 8, !dbg !14374
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14375
  %24 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14376
  %radius26 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %24, i32 0, i32 17, !dbg !14377
  %25 = load float, float* %radius26, align 4, !dbg !14377
  call void @madd_v3_v3fl(float* %23, float* %arraydecay25, float %25), !dbg !14378
  br label %sw.epilog, !dbg !14379

sw.bb27:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %p0, metadata !14380, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.declare(metadata [3 x float]* %e1, metadata !14383, metadata !DIExpression()), !dbg !14384
  call void @llvm.dbg.declare(metadata [3 x float]* %e2, metadata !14385, metadata !DIExpression()), !dbg !14386
  call void @llvm.dbg.declare(metadata [3 x float]* %nor28, metadata !14387, metadata !DIExpression()), !dbg !14388
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !14389
  %26 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14390
  %x130 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %26, i32 0, i32 3, !dbg !14391
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %x130, i64 0, i64 0, !dbg !14390
  %27 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14392
  %x032 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %27, i32 0, i32 2, !dbg !14393
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %x032, i64 0, i64 0, !dbg !14392
  call void @sub_v3_v3v3(float* %arraydecay29, float* %arraydecay31, float* %arraydecay33), !dbg !14394
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !14395
  %28 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14396
  %x2 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %28, i32 0, i32 4, !dbg !14397
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %x2, i64 0, i64 0, !dbg !14396
  %29 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14398
  %x036 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %29, i32 0, i32 2, !dbg !14399
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %x036, i64 0, i64 0, !dbg !14398
  call void @sub_v3_v3v3(float* %arraydecay34, float* %arraydecay35, float* %arraydecay37), !dbg !14400
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %p0, i64 0, i64 0, !dbg !14401
  %30 = load float*, float** %p.addr, align 8, !dbg !14402
  %31 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14403
  %x039 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %31, i32 0, i32 2, !dbg !14404
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %x039, i64 0, i64 0, !dbg !14403
  call void @sub_v3_v3v3(float* %arraydecay38, float* %30, float* %arraydecay40), !dbg !14405
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %nor28, i64 0, i64 0, !dbg !14406
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !14407
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !14408
  call void @cross_v3_v3v3(float* %arraydecay41, float* %arraydecay42, float* %arraydecay43), !dbg !14409
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %nor28, i64 0, i64 0, !dbg !14410
  %call45 = call float @normalize_v3(float* %arraydecay44), !dbg !14411
  %32 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14412
  %inv_nor = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %32, i32 0, i32 11, !dbg !14414
  %33 = load i16, i16* %inv_nor, align 8, !dbg !14414
  %conv = sext i16 %33 to i32, !dbg !14412
  %cmp = icmp eq i32 %conv, 1, !dbg !14415
  br i1 %cmp, label %if.then, label %if.end, !dbg !14416

if.then:                                          ; preds = %sw.bb27
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %nor28, i64 0, i64 0, !dbg !14417
  call void @negate_v3(float* %arraydecay47), !dbg !14418
  br label %if.end, !dbg !14418

if.end:                                           ; preds = %if.then, %sw.bb27
  %34 = load float*, float** %co.addr, align 8, !dbg !14419
  %35 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14420
  %x048 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %35, i32 0, i32 2, !dbg !14421
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %x048, i64 0, i64 0, !dbg !14420
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %nor28, i64 0, i64 0, !dbg !14422
  %36 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14423
  %radius51 = getelementptr inbounds %struct.ParticleCollision, %struct.ParticleCollision* %36, i32 0, i32 17, !dbg !14424
  %37 = load float, float* %radius51, align 4, !dbg !14424
  call void @madd_v3_v3v3fl(float* %34, float* %arraydecay49, float* %arraydecay50, float %37), !dbg !14425
  %38 = load float*, float** %co.addr, align 8, !dbg !14426
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %e1, i64 0, i64 0, !dbg !14427
  %39 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14428
  %uv53 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %39, i32 0, i32 8, !dbg !14429
  %arrayidx54 = getelementptr inbounds [2 x float], [2 x float]* %uv53, i64 0, i64 0, !dbg !14428
  %40 = load float, float* %arrayidx54, align 8, !dbg !14428
  call void @madd_v3_v3fl(float* %38, float* %arraydecay52, float %40), !dbg !14430
  %41 = load float*, float** %co.addr, align 8, !dbg !14431
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %e2, i64 0, i64 0, !dbg !14432
  %42 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14433
  %uv56 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %42, i32 0, i32 8, !dbg !14434
  %arrayidx57 = getelementptr inbounds [2 x float], [2 x float]* %uv56, i64 0, i64 1, !dbg !14433
  %43 = load float, float* %arrayidx57, align 4, !dbg !14433
  call void @madd_v3_v3fl(float* %41, float* %arraydecay55, float %43), !dbg !14435
  br label %sw.epilog, !dbg !14436

sw.epilog:                                        ; preds = %entry, %if.end, %sw.bb3, %sw.bb
  ret void, !dbg !14437
}

; Function Attrs: noinline nounwind uwtable
define internal float @collision_point_distance_with_normal(float* %p, %struct.ParticleCollisionElement* %pce, float %fac, %struct.ParticleCollision* %col, float* %nor) #0 !dbg !14438 {
entry:
  %retval = alloca float, align 4
  %p.addr = alloca float*, align 8
  %pce.addr = alloca %struct.ParticleCollisionElement*, align 8
  %fac.addr = alloca float, align 4
  %col.addr = alloca %struct.ParticleCollision*, align 8
  %nor.addr = alloca float*, align 8
  %u = alloca float, align 4
  %e = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !14441, metadata !DIExpression()), !dbg !14442
  store %struct.ParticleCollisionElement* %pce, %struct.ParticleCollisionElement** %pce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollisionElement** %pce.addr, metadata !14443, metadata !DIExpression()), !dbg !14444
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !14445, metadata !DIExpression()), !dbg !14446
  store %struct.ParticleCollision* %col, %struct.ParticleCollision** %col.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleCollision** %col.addr, metadata !14447, metadata !DIExpression()), !dbg !14448
  store float* %nor, float** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata float** %nor.addr, metadata !14449, metadata !DIExpression()), !dbg !14450
  %0 = load float, float* %fac.addr, align 4, !dbg !14451
  %cmp = fcmp oge float %0, 0.000000e+00, !dbg !14453
  br i1 %cmp, label %if.then, label %if.end, !dbg !14454

if.then:                                          ; preds = %entry
  %1 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14455
  %2 = load float, float* %fac.addr, align 4, !dbg !14456
  %3 = load %struct.ParticleCollision*, %struct.ParticleCollision** %col.addr, align 8, !dbg !14457
  call void @collision_interpolate_element(%struct.ParticleCollisionElement* %1, float 0.000000e+00, float %2, %struct.ParticleCollision* %3), !dbg !14458
  br label %if.end, !dbg !14458

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14459
  %tot = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %4, i32 0, i32 9, !dbg !14460
  %5 = load i32, i32* %tot, align 8, !dbg !14460
  switch i32 %5, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb18
  ], !dbg !14461

sw.bb:                                            ; preds = %if.end
  %6 = load float*, float** %nor.addr, align 8, !dbg !14462
  %7 = load float*, float** %p.addr, align 8, !dbg !14465
  %8 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14466
  %x0 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %8, i32 0, i32 2, !dbg !14467
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %x0, i64 0, i64 0, !dbg !14466
  call void @sub_v3_v3v3(float* %6, float* %7, float* %arraydecay), !dbg !14468
  %9 = load float*, float** %nor.addr, align 8, !dbg !14469
  %call = call float @normalize_v3(float* %9), !dbg !14470
  store float %call, float* %retval, align 4, !dbg !14471
  br label %return, !dbg !14471

sw.bb1:                                           ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %u, metadata !14472, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.declare(metadata [3 x float]* %e, metadata !14475, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !14477, metadata !DIExpression()), !dbg !14478
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !14479
  %10 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14480
  %x1 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %10, i32 0, i32 3, !dbg !14481
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %x1, i64 0, i64 0, !dbg !14480
  %11 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14482
  %x04 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %11, i32 0, i32 2, !dbg !14483
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %x04, i64 0, i64 0, !dbg !14482
  call void @sub_v3_v3v3(float* %arraydecay2, float* %arraydecay3, float* %arraydecay5), !dbg !14484
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14485
  %12 = load float*, float** %p.addr, align 8, !dbg !14486
  %13 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14487
  %x07 = getelementptr inbounds %struct.ParticleCollisionElement, %struct.ParticleCollisionElement* %13, i32 0, i32 2, !dbg !14488
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %x07, i64 0, i64 0, !dbg !14487
  call void @sub_v3_v3v3(float* %arraydecay6, float* %12, float* %arraydecay8), !dbg !14489
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14490
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !14491
  %call11 = call float @dot_v3v3(float* %arraydecay9, float* %arraydecay10), !dbg !14492
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !14493
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !14494
  %call14 = call float @dot_v3v3(float* %arraydecay12, float* %arraydecay13), !dbg !14495
  %div = fdiv float %call11, %call14, !dbg !14496
  store float %div, float* %u, align 4, !dbg !14497
  %14 = load float*, float** %nor.addr, align 8, !dbg !14498
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !14499
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %e, i64 0, i64 0, !dbg !14500
  %15 = load float, float* %u, align 4, !dbg !14501
  %fneg = fneg float %15, !dbg !14502
  call void @madd_v3_v3v3fl(float* %14, float* %arraydecay15, float* %arraydecay16, float %fneg), !dbg !14503
  %16 = load float*, float** %nor.addr, align 8, !dbg !14504
  %call17 = call float @normalize_v3(float* %16), !dbg !14505
  store float %call17, float* %retval, align 4, !dbg !14506
  br label %return, !dbg !14506

sw.bb18:                                          ; preds = %if.end
  %17 = load float*, float** %p.addr, align 8, !dbg !14507
  %18 = load %struct.ParticleCollisionElement*, %struct.ParticleCollisionElement** %pce.addr, align 8, !dbg !14508
  %19 = load float*, float** %nor.addr, align 8, !dbg !14509
  %call19 = call float @nr_signed_distance_to_plane(float* %17, float 0.000000e+00, %struct.ParticleCollisionElement* %18, float* %19), !dbg !14510
  store float %call19, float* %retval, align 4, !dbg !14511
  br label %return, !dbg !14511

sw.epilog:                                        ; preds = %if.end
  store float 0.000000e+00, float* %retval, align 4, !dbg !14512
  br label %return, !dbg !14512

return:                                           ; preds = %sw.epilog, %sw.bb18, %sw.bb1, %sw.bb
  %20 = load float, float* %retval, align 4, !dbg !14513
  ret float %20, !dbg !14513
}

; Function Attrs: noinline nounwind uwtable
define internal float @saacos(float %fac) #0 !dbg !14514 {
entry:
  %retval = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !14516, metadata !DIExpression()), !dbg !14517
  %0 = load float, float* %fac.addr, align 4, !dbg !14518
  %cmp = fcmp ole float %0, -1.000000e+00, !dbg !14518
  br i1 %cmp, label %if.then, label %if.else, !dbg !14520

if.then:                                          ; preds = %entry
  store float 0x400921FB60000000, float* %retval, align 4, !dbg !14521
  br label %return, !dbg !14521

if.else:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !14522
  %cmp1 = fcmp oge float %1, 1.000000e+00, !dbg !14522
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !14524

if.then2:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !14525
  br label %return, !dbg !14525

if.else3:                                         ; preds = %if.else
  %2 = load float, float* %fac.addr, align 4, !dbg !14526
  %call = call float @acosf(float %2) #5, !dbg !14527
  store float %call, float* %retval, align 4, !dbg !14528
  br label %return, !dbg !14528

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %3 = load float, float* %retval, align 4, !dbg !14529
  ret float %3, !dbg !14529
}

; Function Attrs: nounwind
declare dso_local float @acosf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @sph_spring_delete(%struct.ParticleSystem* %psys, i32 %j) #0 !dbg !14530 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %j.addr = alloca i32, align 4
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !14531, metadata !DIExpression()), !dbg !14532
  store i32 %j, i32* %j.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %j.addr, metadata !14533, metadata !DIExpression()), !dbg !14534
  %0 = load i32, i32* %j.addr, align 4, !dbg !14535
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14537
  %tot_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %1, i32 0, i32 44, !dbg !14538
  %2 = load i32, i32* %tot_fluidsprings, align 8, !dbg !14538
  %sub = sub nsw i32 %2, 1, !dbg !14539
  %cmp = icmp ne i32 %0, %sub, !dbg !14540
  br i1 %cmp, label %if.then, label %if.end, !dbg !14541

if.then:                                          ; preds = %entry
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14542
  %fluid_springs = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 43, !dbg !14543
  %4 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs, align 8, !dbg !14543
  %5 = load i32, i32* %j.addr, align 4, !dbg !14544
  %idxprom = sext i32 %5 to i64, !dbg !14542
  %arrayidx = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %4, i64 %idxprom, !dbg !14542
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14545
  %fluid_springs1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 43, !dbg !14546
  %7 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs1, align 8, !dbg !14546
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14547
  %tot_fluidsprings2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 44, !dbg !14548
  %9 = load i32, i32* %tot_fluidsprings2, align 8, !dbg !14548
  %sub3 = sub nsw i32 %9, 1, !dbg !14549
  %idxprom4 = sext i32 %sub3 to i64, !dbg !14545
  %arrayidx5 = getelementptr inbounds %struct.ParticleSpring, %struct.ParticleSpring* %7, i64 %idxprom4, !dbg !14545
  %10 = bitcast %struct.ParticleSpring* %arrayidx to i8*, !dbg !14545
  %11 = bitcast %struct.ParticleSpring* %arrayidx5 to i8*, !dbg !14545
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 16, i1 false), !dbg !14545
  br label %if.end, !dbg !14542

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14550
  %tot_fluidsprings6 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %12, i32 0, i32 44, !dbg !14551
  %13 = load i32, i32* %tot_fluidsprings6, align 8, !dbg !14552
  %dec = add nsw i32 %13, -1, !dbg !14552
  store i32 %dec, i32* %tot_fluidsprings6, align 8, !dbg !14552
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14553
  %tot_fluidsprings7 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 44, !dbg !14555
  %15 = load i32, i32* %tot_fluidsprings7, align 8, !dbg !14555
  %16 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14556
  %alloc_fluidsprings = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %16, i32 0, i32 45, !dbg !14557
  %17 = load i32, i32* %alloc_fluidsprings, align 4, !dbg !14557
  %div = sdiv i32 %17, 2, !dbg !14558
  %cmp8 = icmp slt i32 %15, %div, !dbg !14559
  br i1 %cmp8, label %land.lhs.true, label %if.end17, !dbg !14560

land.lhs.true:                                    ; preds = %if.end
  %18 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14561
  %alloc_fluidsprings9 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %18, i32 0, i32 45, !dbg !14562
  %19 = load i32, i32* %alloc_fluidsprings9, align 4, !dbg !14562
  %cmp10 = icmp sgt i32 %19, 256, !dbg !14563
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !14564

if.then11:                                        ; preds = %land.lhs.true
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14565
  %alloc_fluidsprings12 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 45, !dbg !14567
  %21 = load i32, i32* %alloc_fluidsprings12, align 4, !dbg !14568
  %div13 = sdiv i32 %21, 2, !dbg !14568
  store i32 %div13, i32* %alloc_fluidsprings12, align 4, !dbg !14568
  %22 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !14569
  %23 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14569
  %fluid_springs14 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %23, i32 0, i32 43, !dbg !14569
  %24 = load %struct.ParticleSpring*, %struct.ParticleSpring** %fluid_springs14, align 8, !dbg !14569
  %25 = bitcast %struct.ParticleSpring* %24 to i8*, !dbg !14569
  %26 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14569
  %alloc_fluidsprings15 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %26, i32 0, i32 45, !dbg !14569
  %27 = load i32, i32* %alloc_fluidsprings15, align 4, !dbg !14569
  %conv = sext i32 %27 to i64, !dbg !14569
  %mul = mul i64 %conv, 16, !dbg !14569
  %call = call i8* %22(i8* %25, i64 %mul, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.sph_spring_delete, i64 0, i64 0)), !dbg !14569
  %28 = bitcast i8* %call to %struct.ParticleSpring*, !dbg !14570
  %29 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14571
  %fluid_springs16 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %29, i32 0, i32 43, !dbg !14572
  store %struct.ParticleSpring* %28, %struct.ParticleSpring** %fluid_springs16, align 8, !dbg !14573
  br label %if.end17, !dbg !14574

if.end17:                                         ; preds = %if.then11, %land.lhs.true, %if.end
  ret void, !dbg !14575
}

; Function Attrs: noinline nounwind uwtable
define internal float @interpf(float %target, float %origin, float %fac) #0 !dbg !14576 {
entry:
  %target.addr = alloca float, align 4
  %origin.addr = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %target, float* %target.addr, align 4
  call void @llvm.dbg.declare(metadata float* %target.addr, metadata !14579, metadata !DIExpression()), !dbg !14580
  store float %origin, float* %origin.addr, align 4
  call void @llvm.dbg.declare(metadata float* %origin.addr, metadata !14581, metadata !DIExpression()), !dbg !14582
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !14583, metadata !DIExpression()), !dbg !14584
  %0 = load float, float* %fac.addr, align 4, !dbg !14585
  %1 = load float, float* %target.addr, align 4, !dbg !14586
  %mul = fmul float %0, %1, !dbg !14587
  %2 = load float, float* %fac.addr, align 4, !dbg !14588
  %sub = fsub float 1.000000e+00, %2, !dbg !14589
  %3 = load float, float* %origin.addr, align 4, !dbg !14590
  %mul1 = fmul float %sub, %3, !dbg !14591
  %add = fadd float %mul, %mul1, !dbg !14592
  ret float %add, !dbg !14593
}

declare dso_local void @psys_vec_rot_to_face(%struct.DerivedMesh*, %struct.ParticleData*, float*) #2

declare dso_local void @cloth_free_modifier(%struct.ClothModifierData*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @do_hair_dynamics(%struct.ParticleSimulationData* %sim) #0 !dbg !14594 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %dvert = alloca %struct.MDeformVert*, align 8
  %key = alloca %struct.HairKey*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %totpoint = alloca i32, align 4
  %totedge = alloca i32, align 4
  %k = alloca i32, align 4
  %hairmat = alloca [4 x [4 x float]], align 16
  %deformedVerts = alloca [3 x float]*, align 8
  %temp = alloca [3 x float], align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !14595, metadata !DIExpression()), !dbg !14596
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !14597, metadata !DIExpression()), !dbg !14598
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !14599
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !14600
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !14600
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !14598
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !14601, metadata !DIExpression()), !dbg !14602
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14603
  %hair_in_dm = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 12, !dbg !14604
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hair_in_dm, align 8, !dbg !14604
  store %struct.DerivedMesh* %3, %struct.DerivedMesh** %dm, align 8, !dbg !14602
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !14605, metadata !DIExpression()), !dbg !14606
  store %struct.MVert* null, %struct.MVert** %mvert, align 8, !dbg !14606
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !14607, metadata !DIExpression()), !dbg !14610
  store %struct.MEdge* null, %struct.MEdge** %medge, align 8, !dbg !14610
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert, metadata !14611, metadata !DIExpression()), !dbg !14614
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert, align 8, !dbg !14614
  call void @llvm.dbg.declare(metadata %struct.HairKey** %key, metadata !14615, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !14617, metadata !DIExpression()), !dbg !14618
  call void @llvm.dbg.declare(metadata i32* %p, metadata !14619, metadata !DIExpression()), !dbg !14618
  call void @llvm.dbg.declare(metadata i32* %totpoint, metadata !14620, metadata !DIExpression()), !dbg !14621
  store i32 0, i32* %totpoint, align 4, !dbg !14621
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !14622, metadata !DIExpression()), !dbg !14623
  call void @llvm.dbg.declare(metadata i32* %k, metadata !14624, metadata !DIExpression()), !dbg !14625
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %hairmat, metadata !14626, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.declare(metadata [3 x float]** %deformedVerts, metadata !14628, metadata !DIExpression()), !dbg !14629
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14630
  %clmd = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %4, i32 0, i32 11, !dbg !14632
  %5 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !14632
  %tobool = icmp ne %struct.ClothModifierData* %5, null, !dbg !14630
  br i1 %tobool, label %if.end, label %if.then, !dbg !14633

if.then:                                          ; preds = %entry
  %call = call %struct.ModifierData* @modifier_new(i32 22), !dbg !14634
  %6 = bitcast %struct.ModifierData* %call to %struct.ClothModifierData*, !dbg !14636
  %7 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14637
  %clmd2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %7, i32 0, i32 11, !dbg !14638
  store %struct.ClothModifierData* %6, %struct.ClothModifierData** %clmd2, align 8, !dbg !14639
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14640
  %clmd3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 11, !dbg !14641
  %9 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd3, align 8, !dbg !14641
  %sim_parms = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %9, i32 0, i32 3, !dbg !14642
  %10 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %sim_parms, align 8, !dbg !14642
  %goalspring = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %10, i32 0, i32 21, !dbg !14643
  store float 0.000000e+00, float* %goalspring, align 8, !dbg !14644
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14645
  %clmd4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 11, !dbg !14646
  %12 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd4, align 8, !dbg !14646
  %sim_parms5 = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %12, i32 0, i32 3, !dbg !14647
  %13 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %sim_parms5, align 8, !dbg !14647
  %vel_damping = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %13, i32 0, i32 25, !dbg !14648
  store float 1.000000e+00, float* %vel_damping, align 8, !dbg !14649
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14650
  %clmd6 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 11, !dbg !14651
  %15 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd6, align 8, !dbg !14651
  %sim_parms7 = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %15, i32 0, i32 3, !dbg !14652
  %16 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %sim_parms7, align 8, !dbg !14652
  %flags = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %16, i32 0, i32 29, !dbg !14653
  %17 = load i32, i32* %flags, align 8, !dbg !14654
  %or = or i32 %17, 8200, !dbg !14654
  store i32 %or, i32* %flags, align 8, !dbg !14654
  %18 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14655
  %clmd8 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %18, i32 0, i32 11, !dbg !14656
  %19 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd8, align 8, !dbg !14656
  %coll_parms = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %19, i32 0, i32 4, !dbg !14657
  %20 = load %struct.ClothCollSettings*, %struct.ClothCollSettings** %coll_parms, align 8, !dbg !14657
  %flags9 = getelementptr inbounds %struct.ClothCollSettings, %struct.ClothCollSettings* %20, i32 0, i32 7, !dbg !14658
  %21 = load i32, i32* %flags9, align 8, !dbg !14659
  %and = and i32 %21, -5, !dbg !14659
  store i32 %and, i32* %flags9, align 8, !dbg !14659
  br label %if.end, !dbg !14660

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %p, align 4, !dbg !14661
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14661
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %22, i32 0, i32 3, !dbg !14661
  %23 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !14661
  store %struct.ParticleData* %23, %struct.ParticleData** %pa, align 8, !dbg !14661
  br label %for.cond, !dbg !14661

for.cond:                                         ; preds = %for.inc, %if.end
  %24 = load i32, i32* %p, align 4, !dbg !14663
  %25 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14663
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %25, i32 0, i32 26, !dbg !14663
  %26 = load i32, i32* %totpart, align 8, !dbg !14663
  %cmp = icmp slt i32 %24, %26, !dbg !14663
  br i1 %cmp, label %for.body, label %for.end, !dbg !14661

for.body:                                         ; preds = %for.cond
  %27 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14665
  %totkey = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %27, i32 0, i32 5, !dbg !14666
  %28 = load i32, i32* %totkey, align 8, !dbg !14666
  %29 = load i32, i32* %totpoint, align 4, !dbg !14667
  %add = add nsw i32 %29, %28, !dbg !14667
  store i32 %add, i32* %totpoint, align 4, !dbg !14667
  br label %for.inc, !dbg !14668

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %p, align 4, !dbg !14663
  %inc = add nsw i32 %30, 1, !dbg !14663
  store i32 %inc, i32* %p, align 4, !dbg !14663
  %31 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14663
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %31, i32 1, !dbg !14663
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !14663
  br label %for.cond, !dbg !14663, !llvm.loop !14669

for.end:                                          ; preds = %for.cond
  %32 = load i32, i32* %totpoint, align 4, !dbg !14671
  store i32 %32, i32* %totedge, align 4, !dbg !14672
  %33 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14673
  %totpart10 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %33, i32 0, i32 26, !dbg !14674
  %34 = load i32, i32* %totpart10, align 8, !dbg !14674
  %35 = load i32, i32* %totpoint, align 4, !dbg !14675
  %add11 = add nsw i32 %35, %34, !dbg !14675
  store i32 %add11, i32* %totpoint, align 4, !dbg !14675
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14676
  %tobool12 = icmp ne %struct.DerivedMesh* %36, null, !dbg !14676
  br i1 %tobool12, label %land.lhs.true, label %if.end19, !dbg !14678

land.lhs.true:                                    ; preds = %for.end
  %37 = load i32, i32* %totpoint, align 4, !dbg !14679
  %38 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14680
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %38, i32 0, i32 23, !dbg !14681
  %39 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !14681
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14682
  %call13 = call i32 %39(%struct.DerivedMesh* %40), !dbg !14680
  %cmp14 = icmp ne i32 %37, %call13, !dbg !14683
  br i1 %cmp14, label %if.then17, label %lor.lhs.false, !dbg !14684

lor.lhs.false:                                    ; preds = %land.lhs.true
  %41 = load i32, i32* %totedge, align 4, !dbg !14685
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14686
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %42, i32 0, i32 24, !dbg !14687
  %43 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !14687
  %44 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14688
  %call15 = call i32 %43(%struct.DerivedMesh* %44), !dbg !14686
  %cmp16 = icmp ne i32 %41, %call15, !dbg !14689
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !14690

if.then17:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %45 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14691
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %45, i32 0, i32 95, !dbg !14693
  %46 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !14693
  %47 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14694
  call void %46(%struct.DerivedMesh* %47), !dbg !14691
  %48 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14695
  %hair_in_dm18 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %48, i32 0, i32 12, !dbg !14696
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %hair_in_dm18, align 8, !dbg !14697
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !14698
  br label %if.end19, !dbg !14699

if.end19:                                         ; preds = %if.then17, %lor.lhs.false, %for.end
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14700
  %tobool20 = icmp ne %struct.DerivedMesh* %49, null, !dbg !14700
  br i1 %tobool20, label %if.end24, label %if.then21, !dbg !14702

if.then21:                                        ; preds = %if.end19
  %50 = load i32, i32* %totpoint, align 4, !dbg !14703
  %51 = load i32, i32* %totedge, align 4, !dbg !14705
  %call22 = call %struct.DerivedMesh* @CDDM_new(i32 %50, i32 %51, i32 0, i32 0, i32 0), !dbg !14706
  %52 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14707
  %hair_in_dm23 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %52, i32 0, i32 12, !dbg !14708
  store %struct.DerivedMesh* %call22, %struct.DerivedMesh** %hair_in_dm23, align 8, !dbg !14709
  store %struct.DerivedMesh* %call22, %struct.DerivedMesh** %dm, align 8, !dbg !14710
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14711
  call void @DM_add_vert_layer(%struct.DerivedMesh* %53, i32 2, i32 1, i8* null), !dbg !14712
  br label %if.end24, !dbg !14713

if.end24:                                         ; preds = %if.then21, %if.end19
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14714
  %call25 = call %struct.MVert* @CDDM_get_verts(%struct.DerivedMesh* %54), !dbg !14715
  store %struct.MVert* %call25, %struct.MVert** %mvert, align 8, !dbg !14716
  %55 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14717
  %call26 = call %struct.MEdge* @CDDM_get_edges(%struct.DerivedMesh* %55), !dbg !14718
  store %struct.MEdge* %call26, %struct.MEdge** %medge, align 8, !dbg !14719
  %56 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14720
  %call27 = call i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %56, i32 2), !dbg !14721
  %57 = bitcast i8* %call27 to %struct.MDeformVert*, !dbg !14721
  store %struct.MDeformVert* %57, %struct.MDeformVert** %dvert, align 8, !dbg !14722
  %58 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14723
  %clmd28 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %58, i32 0, i32 11, !dbg !14724
  %59 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd28, align 8, !dbg !14724
  %sim_parms29 = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %59, i32 0, i32 3, !dbg !14725
  %60 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %sim_parms29, align 8, !dbg !14725
  %vgroup_mass = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %60, i32 0, i32 34, !dbg !14726
  store i16 1, i16* %vgroup_mass, align 8, !dbg !14727
  %61 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14728
  %particles30 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %61, i32 0, i32 3, !dbg !14729
  %62 = load %struct.ParticleData*, %struct.ParticleData** %particles30, align 8, !dbg !14729
  %hair_index = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %62, i32 0, i32 16, !dbg !14730
  store i32 1, i32* %hair_index, align 8, !dbg !14731
  store i32 0, i32* %p, align 4, !dbg !14732
  %63 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14732
  %particles31 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %63, i32 0, i32 3, !dbg !14732
  %64 = load %struct.ParticleData*, %struct.ParticleData** %particles31, align 8, !dbg !14732
  store %struct.ParticleData* %64, %struct.ParticleData** %pa, align 8, !dbg !14732
  br label %for.cond32, !dbg !14732

for.cond32:                                       ; preds = %for.inc121, %if.end24
  %65 = load i32, i32* %p, align 4, !dbg !14734
  %66 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14734
  %totpart33 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %66, i32 0, i32 26, !dbg !14734
  %67 = load i32, i32* %totpart33, align 8, !dbg !14734
  %cmp34 = icmp slt i32 %65, %67, !dbg !14734
  br i1 %cmp34, label %for.body35, label %for.end124, !dbg !14732

for.body35:                                       ; preds = %for.cond32
  %68 = load i32, i32* %p, align 4, !dbg !14736
  %tobool36 = icmp ne i32 %68, 0, !dbg !14736
  br i1 %tobool36, label %if.then37, label %if.end44, !dbg !14739

if.then37:                                        ; preds = %for.body35
  %69 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14740
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %69, i64 -1, !dbg !14741
  %hair_index38 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr, i32 0, i32 16, !dbg !14742
  %70 = load i32, i32* %hair_index38, align 8, !dbg !14742
  %71 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14743
  %add.ptr39 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %71, i64 -1, !dbg !14744
  %totkey40 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr39, i32 0, i32 5, !dbg !14745
  %72 = load i32, i32* %totkey40, align 8, !dbg !14745
  %add41 = add nsw i32 %70, %72, !dbg !14746
  %add42 = add nsw i32 %add41, 1, !dbg !14747
  %73 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14748
  %hair_index43 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %73, i32 0, i32 16, !dbg !14749
  store i32 %add42, i32* %hair_index43, align 8, !dbg !14750
  br label %if.end44, !dbg !14748

if.end44:                                         ; preds = %if.then37, %for.body35
  %74 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !14751
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %74, i32 0, i32 1, !dbg !14752
  %75 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14752
  %76 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !14753
  %psmd = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %76, i32 0, i32 3, !dbg !14754
  %77 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !14754
  %dm45 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %77, i32 0, i32 2, !dbg !14755
  %78 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm45, align 8, !dbg !14755
  %79 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14756
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %79, i32 0, i32 2, !dbg !14757
  %80 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !14757
  %from = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %80, i32 0, i32 8, !dbg !14758
  %81 = load i16, i16* %from, align 2, !dbg !14758
  %82 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14759
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hairmat, i64 0, i64 0, !dbg !14760
  call void @psys_mat_hair_to_object(%struct.Object* %75, %struct.DerivedMesh* %78, i16 signext %81, %struct.ParticleData* %82, [4 x float]* %arraydecay), !dbg !14761
  store i32 0, i32* %k, align 4, !dbg !14762
  %83 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14764
  %hair = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %83, i32 0, i32 2, !dbg !14765
  %84 = load %struct.HairKey*, %struct.HairKey** %hair, align 8, !dbg !14765
  store %struct.HairKey* %84, %struct.HairKey** %key, align 8, !dbg !14766
  br label %for.cond46, !dbg !14767

for.cond46:                                       ; preds = %for.inc117, %if.end44
  %85 = load i32, i32* %k, align 4, !dbg !14768
  %86 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14770
  %totkey47 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %86, i32 0, i32 5, !dbg !14771
  %87 = load i32, i32* %totkey47, align 8, !dbg !14771
  %cmp48 = icmp slt i32 %85, %87, !dbg !14772
  br i1 %cmp48, label %for.body49, label %for.end120, !dbg !14773

for.body49:                                       ; preds = %for.cond46
  %88 = load i32, i32* %k, align 4, !dbg !14774
  %cmp50 = icmp eq i32 %88, 0, !dbg !14777
  br i1 %cmp50, label %if.then51, label %if.end83, !dbg !14778

if.then51:                                        ; preds = %for.body49
  call void @llvm.dbg.declare(metadata [3 x float]* %temp, metadata !14779, metadata !DIExpression()), !dbg !14781
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !14782
  %89 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !14783
  %co = getelementptr inbounds %struct.HairKey, %struct.HairKey* %89, i32 0, i32 0, !dbg !14784
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !14783
  %90 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !14785
  %add.ptr54 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %90, i64 1, !dbg !14786
  %co55 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %add.ptr54, i32 0, i32 0, !dbg !14787
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %co55, i64 0, i64 0, !dbg !14788
  call void @sub_v3_v3v3(float* %arraydecay52, float* %arraydecay53, float* %arraydecay56), !dbg !14789
  %91 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14790
  %co57 = getelementptr inbounds %struct.MVert, %struct.MVert* %91, i32 0, i32 0, !dbg !14791
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %co57, i64 0, i64 0, !dbg !14790
  %92 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !14792
  %co59 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %92, i32 0, i32 0, !dbg !14793
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %co59, i64 0, i64 0, !dbg !14792
  call void @copy_v3_v3(float* %arraydecay58, float* %arraydecay60), !dbg !14794
  %93 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14795
  %co61 = getelementptr inbounds %struct.MVert, %struct.MVert* %93, i32 0, i32 0, !dbg !14796
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %co61, i64 0, i64 0, !dbg !14795
  %94 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14797
  %co63 = getelementptr inbounds %struct.MVert, %struct.MVert* %94, i32 0, i32 0, !dbg !14798
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %co63, i64 0, i64 0, !dbg !14797
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !14799
  call void @add_v3_v3v3(float* %arraydecay62, float* %arraydecay64, float* %arraydecay65), !dbg !14800
  %arraydecay66 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hairmat, i64 0, i64 0, !dbg !14801
  %95 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14802
  %co67 = getelementptr inbounds %struct.MVert, %struct.MVert* %95, i32 0, i32 0, !dbg !14803
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %co67, i64 0, i64 0, !dbg !14802
  call void @mul_m4_v3([4 x float]* %arraydecay66, float* %arraydecay68), !dbg !14804
  %96 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14805
  %incdec.ptr69 = getelementptr inbounds %struct.MVert, %struct.MVert* %96, i32 1, !dbg !14805
  store %struct.MVert* %incdec.ptr69, %struct.MVert** %mvert, align 8, !dbg !14805
  %97 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14806
  %hair_index70 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %97, i32 0, i32 16, !dbg !14807
  %98 = load i32, i32* %hair_index70, align 8, !dbg !14807
  %sub = sub nsw i32 %98, 1, !dbg !14808
  %99 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !14809
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %99, i32 0, i32 0, !dbg !14810
  store i32 %sub, i32* %v1, align 4, !dbg !14811
  %100 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14812
  %hair_index71 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %100, i32 0, i32 16, !dbg !14813
  %101 = load i32, i32* %hair_index71, align 8, !dbg !14813
  %102 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !14814
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %102, i32 0, i32 1, !dbg !14815
  store i32 %101, i32* %v2, align 4, !dbg !14816
  %103 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !14817
  %incdec.ptr72 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %103, i32 1, !dbg !14817
  store %struct.MEdge* %incdec.ptr72, %struct.MEdge** %medge, align 8, !dbg !14817
  %104 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14818
  %tobool73 = icmp ne %struct.MDeformVert* %104, null, !dbg !14818
  br i1 %tobool73, label %if.then74, label %if.end82, !dbg !14820

if.then74:                                        ; preds = %if.then51
  %105 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14821
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %105, i32 0, i32 1, !dbg !14824
  %106 = load i32, i32* %totweight, align 8, !dbg !14824
  %tobool75 = icmp ne i32 %106, 0, !dbg !14821
  br i1 %tobool75, label %if.end79, label %if.then76, !dbg !14825

if.then76:                                        ; preds = %if.then74
  %107 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14826
  %call77 = call i8* %107(i64 8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)), !dbg !14826
  %108 = bitcast i8* %call77 to %struct.MDeformWeight*, !dbg !14826
  %109 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14828
  %dw = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %109, i32 0, i32 0, !dbg !14829
  store %struct.MDeformWeight* %108, %struct.MDeformWeight** %dw, align 8, !dbg !14830
  %110 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14831
  %totweight78 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %110, i32 0, i32 1, !dbg !14832
  store i32 1, i32* %totweight78, align 8, !dbg !14833
  br label %if.end79, !dbg !14834

if.end79:                                         ; preds = %if.then76, %if.then74
  %111 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14835
  %dw80 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %111, i32 0, i32 0, !dbg !14836
  %112 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw80, align 8, !dbg !14836
  %weight = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %112, i32 0, i32 1, !dbg !14837
  store float 1.000000e+00, float* %weight, align 4, !dbg !14838
  %113 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14839
  %incdec.ptr81 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %113, i32 1, !dbg !14839
  store %struct.MDeformVert* %incdec.ptr81, %struct.MDeformVert** %dvert, align 8, !dbg !14839
  br label %if.end82, !dbg !14840

if.end82:                                         ; preds = %if.end79, %if.then51
  br label %if.end83, !dbg !14841

if.end83:                                         ; preds = %if.end82, %for.body49
  %114 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14842
  %co84 = getelementptr inbounds %struct.MVert, %struct.MVert* %114, i32 0, i32 0, !dbg !14843
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %co84, i64 0, i64 0, !dbg !14842
  %115 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !14844
  %co86 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %115, i32 0, i32 0, !dbg !14845
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %co86, i64 0, i64 0, !dbg !14844
  call void @copy_v3_v3(float* %arraydecay85, float* %arraydecay87), !dbg !14846
  %arraydecay88 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %hairmat, i64 0, i64 0, !dbg !14847
  %116 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14848
  %co89 = getelementptr inbounds %struct.MVert, %struct.MVert* %116, i32 0, i32 0, !dbg !14849
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %co89, i64 0, i64 0, !dbg !14848
  call void @mul_m4_v3([4 x float]* %arraydecay88, float* %arraydecay90), !dbg !14850
  %117 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14851
  %incdec.ptr91 = getelementptr inbounds %struct.MVert, %struct.MVert* %117, i32 1, !dbg !14851
  store %struct.MVert* %incdec.ptr91, %struct.MVert** %mvert, align 8, !dbg !14851
  %118 = load i32, i32* %k, align 4, !dbg !14852
  %tobool92 = icmp ne i32 %118, 0, !dbg !14852
  br i1 %tobool92, label %if.then93, label %if.end102, !dbg !14854

if.then93:                                        ; preds = %if.end83
  %119 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14855
  %hair_index94 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %119, i32 0, i32 16, !dbg !14857
  %120 = load i32, i32* %hair_index94, align 8, !dbg !14857
  %121 = load i32, i32* %k, align 4, !dbg !14858
  %add95 = add nsw i32 %120, %121, !dbg !14859
  %sub96 = sub nsw i32 %add95, 1, !dbg !14860
  %122 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !14861
  %v197 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %122, i32 0, i32 0, !dbg !14862
  store i32 %sub96, i32* %v197, align 4, !dbg !14863
  %123 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14864
  %hair_index98 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %123, i32 0, i32 16, !dbg !14865
  %124 = load i32, i32* %hair_index98, align 8, !dbg !14865
  %125 = load i32, i32* %k, align 4, !dbg !14866
  %add99 = add nsw i32 %124, %125, !dbg !14867
  %126 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !14868
  %v2100 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %126, i32 0, i32 1, !dbg !14869
  store i32 %add99, i32* %v2100, align 4, !dbg !14870
  %127 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !14871
  %incdec.ptr101 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %127, i32 1, !dbg !14871
  store %struct.MEdge* %incdec.ptr101, %struct.MEdge** %medge, align 8, !dbg !14871
  br label %if.end102, !dbg !14872

if.end102:                                        ; preds = %if.then93, %if.end83
  %128 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14873
  %tobool103 = icmp ne %struct.MDeformVert* %128, null, !dbg !14873
  br i1 %tobool103, label %if.then104, label %if.end116, !dbg !14875

if.then104:                                       ; preds = %if.end102
  %129 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14876
  %totweight105 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %129, i32 0, i32 1, !dbg !14879
  %130 = load i32, i32* %totweight105, align 8, !dbg !14879
  %tobool106 = icmp ne i32 %130, 0, !dbg !14876
  br i1 %tobool106, label %if.end111, label %if.then107, !dbg !14880

if.then107:                                       ; preds = %if.then104
  %131 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14881
  %call108 = call i8* %131(i64 8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)), !dbg !14881
  %132 = bitcast i8* %call108 to %struct.MDeformWeight*, !dbg !14881
  %133 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14883
  %dw109 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %133, i32 0, i32 0, !dbg !14884
  store %struct.MDeformWeight* %132, %struct.MDeformWeight** %dw109, align 8, !dbg !14885
  %134 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14886
  %totweight110 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %134, i32 0, i32 1, !dbg !14887
  store i32 1, i32* %totweight110, align 8, !dbg !14888
  br label %if.end111, !dbg !14889

if.end111:                                        ; preds = %if.then107, %if.then104
  %135 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !14890
  %weight112 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %135, i32 0, i32 2, !dbg !14891
  %136 = load float, float* %weight112, align 4, !dbg !14891
  %137 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14892
  %dw113 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %137, i32 0, i32 0, !dbg !14893
  %138 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw113, align 8, !dbg !14893
  %weight114 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %138, i32 0, i32 1, !dbg !14894
  store float %136, float* %weight114, align 4, !dbg !14895
  %139 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !14896
  %incdec.ptr115 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %139, i32 1, !dbg !14896
  store %struct.MDeformVert* %incdec.ptr115, %struct.MDeformVert** %dvert, align 8, !dbg !14896
  br label %if.end116, !dbg !14897

if.end116:                                        ; preds = %if.end111, %if.end102
  br label %for.inc117, !dbg !14898

for.inc117:                                       ; preds = %if.end116
  %140 = load i32, i32* %k, align 4, !dbg !14899
  %inc118 = add nsw i32 %140, 1, !dbg !14899
  store i32 %inc118, i32* %k, align 4, !dbg !14899
  %141 = load %struct.HairKey*, %struct.HairKey** %key, align 8, !dbg !14900
  %incdec.ptr119 = getelementptr inbounds %struct.HairKey, %struct.HairKey* %141, i32 1, !dbg !14900
  store %struct.HairKey* %incdec.ptr119, %struct.HairKey** %key, align 8, !dbg !14900
  br label %for.cond46, !dbg !14901, !llvm.loop !14902

for.end120:                                       ; preds = %for.cond46
  br label %for.inc121, !dbg !14904

for.inc121:                                       ; preds = %for.end120
  %142 = load i32, i32* %p, align 4, !dbg !14734
  %inc122 = add nsw i32 %142, 1, !dbg !14734
  store i32 %inc122, i32* %p, align 4, !dbg !14734
  %143 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !14734
  %incdec.ptr123 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %143, i32 1, !dbg !14734
  store %struct.ParticleData* %incdec.ptr123, %struct.ParticleData** %pa, align 8, !dbg !14734
  br label %for.cond32, !dbg !14734, !llvm.loop !14905

for.end124:                                       ; preds = %for.cond32
  %144 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14907
  %hair_out_dm = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %144, i32 0, i32 13, !dbg !14909
  %145 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hair_out_dm, align 8, !dbg !14909
  %tobool125 = icmp ne %struct.DerivedMesh* %145, null, !dbg !14907
  br i1 %tobool125, label %if.then126, label %if.end130, !dbg !14910

if.then126:                                       ; preds = %for.end124
  %146 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14911
  %hair_out_dm127 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %146, i32 0, i32 13, !dbg !14912
  %147 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hair_out_dm127, align 8, !dbg !14912
  %release128 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %147, i32 0, i32 95, !dbg !14913
  %148 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release128, align 8, !dbg !14913
  %149 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14914
  %hair_out_dm129 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %149, i32 0, i32 13, !dbg !14915
  %150 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hair_out_dm129, align 8, !dbg !14915
  call void %148(%struct.DerivedMesh* %150), !dbg !14911
  br label %if.end130, !dbg !14911

if.end130:                                        ; preds = %if.then126, %for.end124
  %151 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14916
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %151, i32 0, i32 40, !dbg !14917
  %152 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !14917
  %153 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14918
  %clmd131 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %153, i32 0, i32 11, !dbg !14919
  %154 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd131, align 8, !dbg !14919
  %point_cache = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %154, i32 0, i32 5, !dbg !14920
  store %struct.PointCache* %152, %struct.PointCache** %point_cache, align 8, !dbg !14921
  %155 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14922
  %part132 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %155, i32 0, i32 2, !dbg !14923
  %156 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part132, align 8, !dbg !14923
  %effector_weights = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %156, i32 0, i32 4, !dbg !14924
  %157 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !14924
  %158 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14925
  %clmd133 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %158, i32 0, i32 11, !dbg !14926
  %159 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd133, align 8, !dbg !14926
  %sim_parms134 = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %159, i32 0, i32 3, !dbg !14927
  %160 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %sim_parms134, align 8, !dbg !14927
  %effector_weights135 = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %160, i32 0, i32 41, !dbg !14928
  store %struct.EffectorWeights* %157, %struct.EffectorWeights** %effector_weights135, align 8, !dbg !14929
  %161 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !14930
  %162 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14931
  %getNumVerts136 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %162, i32 0, i32 23, !dbg !14932
  %163 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts136, align 8, !dbg !14932
  %164 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14933
  %call137 = call i32 %163(%struct.DerivedMesh* %164), !dbg !14931
  %conv = sext i32 %call137 to i64, !dbg !14931
  %mul = mul i64 12, %conv, !dbg !14934
  %call138 = call i8* %161(i64 %mul, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)), !dbg !14930
  %165 = bitcast i8* %call138 to [3 x float]*, !dbg !14930
  store [3 x float]* %165, [3 x float]** %deformedVerts, align 8, !dbg !14935
  %166 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14936
  %call139 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %166), !dbg !14937
  %167 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14938
  %hair_out_dm140 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %167, i32 0, i32 13, !dbg !14939
  store %struct.DerivedMesh* %call139, %struct.DerivedMesh** %hair_out_dm140, align 8, !dbg !14940
  %168 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14941
  %hair_out_dm141 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %168, i32 0, i32 13, !dbg !14942
  %169 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hair_out_dm141, align 8, !dbg !14942
  %getVertCos = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %169, i32 0, i32 77, !dbg !14943
  %170 = load void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos, align 8, !dbg !14943
  %171 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14944
  %hair_out_dm142 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %171, i32 0, i32 13, !dbg !14945
  %172 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hair_out_dm142, align 8, !dbg !14945
  %173 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !14946
  call void %170(%struct.DerivedMesh* %172, [3 x float]* %173), !dbg !14941
  %174 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14947
  %clmd143 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %174, i32 0, i32 11, !dbg !14948
  %175 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd143, align 8, !dbg !14948
  %176 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !14949
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %176, i32 0, i32 0, !dbg !14950
  %177 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !14950
  %178 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !14951
  %ob144 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %178, i32 0, i32 1, !dbg !14952
  %179 = load %struct.Object*, %struct.Object** %ob144, align 8, !dbg !14952
  %180 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14953
  %181 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !14954
  call void @clothModifier_do(%struct.ClothModifierData* %175, %struct.Scene* %177, %struct.Object* %179, %struct.DerivedMesh* %180, [3 x float]* %181), !dbg !14955
  %182 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14956
  %hair_out_dm145 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %182, i32 0, i32 13, !dbg !14957
  %183 = load %struct.DerivedMesh*, %struct.DerivedMesh** %hair_out_dm145, align 8, !dbg !14957
  %184 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !14958
  call void @CDDM_apply_vert_coords(%struct.DerivedMesh* %183, [3 x float]* %184), !dbg !14959
  %185 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14960
  %186 = load [3 x float]*, [3 x float]** %deformedVerts, align 8, !dbg !14961
  %187 = bitcast [3 x float]* %186 to i8*, !dbg !14961
  call void %185(i8* %187), !dbg !14960
  %188 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14962
  %clmd146 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %188, i32 0, i32 11, !dbg !14963
  %189 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd146, align 8, !dbg !14963
  %sim_parms147 = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %189, i32 0, i32 3, !dbg !14964
  %190 = load %struct.ClothSimSettings*, %struct.ClothSimSettings** %sim_parms147, align 8, !dbg !14964
  %effector_weights148 = getelementptr inbounds %struct.ClothSimSettings, %struct.ClothSimSettings* %190, i32 0, i32 41, !dbg !14965
  store %struct.EffectorWeights* null, %struct.EffectorWeights** %effector_weights148, align 8, !dbg !14966
  ret void, !dbg !14967
}

declare dso_local %struct.ModifierData* @modifier_new(i32) #2

declare dso_local %struct.DerivedMesh* @CDDM_new(i32, i32, i32, i32, i32) #2

declare dso_local void @DM_add_vert_layer(%struct.DerivedMesh*, i32, i32, i8*) #2

declare dso_local %struct.MVert* @CDDM_get_verts(%struct.DerivedMesh*) #2

declare dso_local %struct.MEdge* @CDDM_get_edges(%struct.DerivedMesh*) #2

declare dso_local i8* @DM_get_vert_data_layer(%struct.DerivedMesh*, i32) #2

declare dso_local void @psys_mat_hair_to_object(%struct.Object*, %struct.DerivedMesh*, i16 signext, %struct.ParticleData*, [4 x float]*) #2

declare dso_local %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh*) #2

declare dso_local void @clothModifier_do(%struct.ClothModifierData*, %struct.Scene*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*) #2

declare dso_local void @CDDM_apply_vert_coords(%struct.DerivedMesh*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @realloc_particles(%struct.ParticleSimulationData* %sim, i32 %new_totpart) #0 !dbg !14968 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %new_totpart.addr = alloca i32, align 4
  %psys = alloca %struct.ParticleSystem*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %newpars = alloca %struct.ParticleData*, align 8
  %newboids = alloca %struct.BoidParticle*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %totpart = alloca i32, align 4
  %totsaved = alloca i32, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !14969, metadata !DIExpression()), !dbg !14970
  store i32 %new_totpart, i32* %new_totpart.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_totpart.addr, metadata !14971, metadata !DIExpression()), !dbg !14972
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !14973, metadata !DIExpression()), !dbg !14974
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !14975
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 2, !dbg !14976
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !14976
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !14974
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !14977, metadata !DIExpression()), !dbg !14978
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !14979
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !14980
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !14980
  store %struct.ParticleSettings* %3, %struct.ParticleSettings** %part, align 8, !dbg !14978
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %newpars, metadata !14981, metadata !DIExpression()), !dbg !14982
  store %struct.ParticleData* null, %struct.ParticleData** %newpars, align 8, !dbg !14982
  call void @llvm.dbg.declare(metadata %struct.BoidParticle** %newboids, metadata !14983, metadata !DIExpression()), !dbg !14984
  store %struct.BoidParticle* null, %struct.BoidParticle** %newboids, align 8, !dbg !14984
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !14985, metadata !DIExpression()), !dbg !14986
  call void @llvm.dbg.declare(metadata i32* %p, metadata !14987, metadata !DIExpression()), !dbg !14986
  call void @llvm.dbg.declare(metadata i32* %totpart, metadata !14988, metadata !DIExpression()), !dbg !14989
  call void @llvm.dbg.declare(metadata i32* %totsaved, metadata !14990, metadata !DIExpression()), !dbg !14991
  store i32 0, i32* %totsaved, align 4, !dbg !14991
  %4 = load i32, i32* %new_totpart.addr, align 4, !dbg !14992
  %cmp = icmp slt i32 %4, 0, !dbg !14994
  br i1 %cmp, label %if.then, label %if.else11, !dbg !14995

if.then:                                          ; preds = %entry
  %5 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !14996
  %distr = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %5, i32 0, i32 9, !dbg !14999
  %6 = load i16, i16* %distr, align 4, !dbg !14999
  %conv = sext i16 %6 to i32, !dbg !14996
  %cmp3 = icmp eq i32 %conv, 2, !dbg !15000
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !15001

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !15002
  %from = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %7, i32 0, i32 8, !dbg !15003
  %8 = load i16, i16* %from, align 2, !dbg !15003
  %conv5 = sext i16 %8 to i32, !dbg !15002
  %cmp6 = icmp ne i32 %conv5, 0, !dbg !15004
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !15005

if.then8:                                         ; preds = %land.lhs.true
  %9 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !15006
  %grid_res = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %9, i32 0, i32 65, !dbg !15008
  %10 = load i32, i32* %grid_res, align 4, !dbg !15008
  store i32 %10, i32* %totpart, align 4, !dbg !15009
  %11 = load i32, i32* %totpart, align 4, !dbg !15010
  %12 = load i32, i32* %totpart, align 4, !dbg !15011
  %mul = mul nsw i32 %11, %12, !dbg !15012
  %13 = load i32, i32* %totpart, align 4, !dbg !15013
  %mul9 = mul nsw i32 %13, %mul, !dbg !15013
  store i32 %mul9, i32* %totpart, align 4, !dbg !15013
  br label %if.end, !dbg !15014

if.else:                                          ; preds = %land.lhs.true, %if.then
  %14 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !15015
  %totpart10 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %14, i32 0, i32 63, !dbg !15016
  %15 = load i32, i32* %totpart10, align 4, !dbg !15016
  store i32 %15, i32* %totpart, align 4, !dbg !15017
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end12, !dbg !15018

if.else11:                                        ; preds = %entry
  %16 = load i32, i32* %new_totpart.addr, align 4, !dbg !15019
  store i32 %16, i32* %totpart, align 4, !dbg !15020
  br label %if.end12

if.end12:                                         ; preds = %if.else11, %if.end
  %17 = load i32, i32* %totpart, align 4, !dbg !15021
  %18 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15023
  %totpart13 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %18, i32 0, i32 26, !dbg !15024
  %19 = load i32, i32* %totpart13, align 8, !dbg !15024
  %cmp14 = icmp ne i32 %17, %19, !dbg !15025
  br i1 %cmp14, label %if.then16, label %if.end123, !dbg !15026

if.then16:                                        ; preds = %if.end12
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15027
  %edit = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 5, !dbg !15030
  %21 = load %struct.PTCacheEdit*, %struct.PTCacheEdit** %edit, align 8, !dbg !15030
  %tobool = icmp ne %struct.PTCacheEdit* %21, null, !dbg !15027
  br i1 %tobool, label %land.lhs.true17, label %if.end24, !dbg !15031

land.lhs.true17:                                  ; preds = %if.then16
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15032
  %free_edit = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %22, i32 0, i32 6, !dbg !15033
  %23 = load void (%struct.PTCacheEdit*)*, void (%struct.PTCacheEdit*)** %free_edit, align 8, !dbg !15033
  %tobool18 = icmp ne void (%struct.PTCacheEdit*)* %23, null, !dbg !15032
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !15034

if.then19:                                        ; preds = %land.lhs.true17
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15035
  %free_edit20 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %24, i32 0, i32 6, !dbg !15037
  %25 = load void (%struct.PTCacheEdit*)*, void (%struct.PTCacheEdit*)** %free_edit20, align 8, !dbg !15037
  %26 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15038
  %edit21 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %26, i32 0, i32 5, !dbg !15039
  %27 = load %struct.PTCacheEdit*, %struct.PTCacheEdit** %edit21, align 8, !dbg !15039
  call void %25(%struct.PTCacheEdit* %27), !dbg !15035
  %28 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15040
  %edit22 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %28, i32 0, i32 5, !dbg !15041
  store %struct.PTCacheEdit* null, %struct.PTCacheEdit** %edit22, align 8, !dbg !15042
  %29 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15043
  %free_edit23 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %29, i32 0, i32 6, !dbg !15044
  store void (%struct.PTCacheEdit*)* null, void (%struct.PTCacheEdit*)** %free_edit23, align 8, !dbg !15045
  br label %if.end24, !dbg !15046

if.end24:                                         ; preds = %if.then19, %land.lhs.true17, %if.then16
  %30 = load i32, i32* %totpart, align 4, !dbg !15047
  %tobool25 = icmp ne i32 %30, 0, !dbg !15047
  br i1 %tobool25, label %if.then26, label %if.end49, !dbg !15049

if.then26:                                        ; preds = %if.end24
  %31 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !15050
  %32 = load i32, i32* %totpart, align 4, !dbg !15052
  %conv27 = sext i32 %32 to i64, !dbg !15052
  %mul28 = mul i64 %conv27, 200, !dbg !15053
  %call = call i8* %31(i64 %mul28, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)), !dbg !15050
  %33 = bitcast i8* %call to %struct.ParticleData*, !dbg !15050
  store %struct.ParticleData* %33, %struct.ParticleData** %newpars, align 8, !dbg !15054
  %34 = load %struct.ParticleData*, %struct.ParticleData** %newpars, align 8, !dbg !15055
  %cmp29 = icmp eq %struct.ParticleData* %34, null, !dbg !15057
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !15058

if.then31:                                        ; preds = %if.then26
  br label %if.end128, !dbg !15059

if.end32:                                         ; preds = %if.then26
  %35 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15060
  %part33 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %35, i32 0, i32 2, !dbg !15062
  %36 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part33, align 8, !dbg !15062
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %36, i32 0, i32 11, !dbg !15063
  %37 = load i16, i16* %phystype, align 8, !dbg !15063
  %conv34 = sext i16 %37 to i32, !dbg !15060
  %cmp35 = icmp eq i32 %conv34, 3, !dbg !15064
  br i1 %cmp35, label %if.then37, label %if.end48, !dbg !15065

if.then37:                                        ; preds = %if.end32
  %38 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !15066
  %39 = load i32, i32* %totpart, align 4, !dbg !15068
  %conv38 = sext i32 %39 to i64, !dbg !15068
  %mul39 = mul i64 %conv38, 56, !dbg !15069
  %call40 = call i8* %38(i64 %mul39, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0)), !dbg !15066
  %40 = bitcast i8* %call40 to %struct.BoidParticle*, !dbg !15066
  store %struct.BoidParticle* %40, %struct.BoidParticle** %newboids, align 8, !dbg !15070
  %41 = load %struct.BoidParticle*, %struct.BoidParticle** %newboids, align 8, !dbg !15071
  %cmp41 = icmp eq %struct.BoidParticle* %41, null, !dbg !15073
  br i1 %cmp41, label %if.then43, label %if.end47, !dbg !15074

if.then43:                                        ; preds = %if.then37
  %42 = load %struct.ParticleData*, %struct.ParticleData** %newpars, align 8, !dbg !15075
  %tobool44 = icmp ne %struct.ParticleData* %42, null, !dbg !15075
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !15078

if.then45:                                        ; preds = %if.then43
  %43 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15079
  %44 = load %struct.ParticleData*, %struct.ParticleData** %newpars, align 8, !dbg !15080
  %45 = bitcast %struct.ParticleData* %44 to i8*, !dbg !15080
  call void %43(i8* %45), !dbg !15079
  br label %if.end46, !dbg !15079

if.end46:                                         ; preds = %if.then45, %if.then43
  br label %if.end128, !dbg !15081

if.end47:                                         ; preds = %if.then37
  br label %if.end48, !dbg !15082

if.end48:                                         ; preds = %if.end47, %if.end32
  br label %if.end49, !dbg !15083

if.end49:                                         ; preds = %if.end48, %if.end24
  %46 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15084
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %46, i32 0, i32 3, !dbg !15086
  %47 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !15086
  %tobool50 = icmp ne %struct.ParticleData* %47, null, !dbg !15084
  br i1 %tobool50, label %if.then51, label %if.end105, !dbg !15087

if.then51:                                        ; preds = %if.end49
  %48 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15088
  %totpart52 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %48, i32 0, i32 26, !dbg !15088
  %49 = load i32, i32* %totpart52, align 8, !dbg !15088
  %50 = load i32, i32* %totpart, align 4, !dbg !15088
  %cmp53 = icmp slt i32 %49, %50, !dbg !15088
  br i1 %cmp53, label %cond.true, label %cond.false, !dbg !15088

cond.true:                                        ; preds = %if.then51
  %51 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15088
  %totpart55 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %51, i32 0, i32 26, !dbg !15088
  %52 = load i32, i32* %totpart55, align 8, !dbg !15088
  br label %cond.end, !dbg !15088

cond.false:                                       ; preds = %if.then51
  %53 = load i32, i32* %totpart, align 4, !dbg !15088
  br label %cond.end, !dbg !15088

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %52, %cond.true ], [ %53, %cond.false ], !dbg !15088
  store i32 %cond, i32* %totsaved, align 4, !dbg !15090
  %54 = load i32, i32* %totsaved, align 4, !dbg !15091
  %tobool56 = icmp ne i32 %54, 0, !dbg !15091
  br i1 %tobool56, label %if.then57, label %if.end69, !dbg !15093

if.then57:                                        ; preds = %cond.end
  %55 = load %struct.ParticleData*, %struct.ParticleData** %newpars, align 8, !dbg !15094
  %56 = bitcast %struct.ParticleData* %55 to i8*, !dbg !15096
  %57 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15097
  %particles58 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %57, i32 0, i32 3, !dbg !15098
  %58 = load %struct.ParticleData*, %struct.ParticleData** %particles58, align 8, !dbg !15098
  %59 = bitcast %struct.ParticleData* %58 to i8*, !dbg !15096
  %60 = load i32, i32* %totsaved, align 4, !dbg !15099
  %conv59 = sext i32 %60 to i64, !dbg !15099
  %mul60 = mul i64 %conv59, 200, !dbg !15100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %59, i64 %mul60, i1 false), !dbg !15096
  %61 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15101
  %particles61 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %61, i32 0, i32 3, !dbg !15103
  %62 = load %struct.ParticleData*, %struct.ParticleData** %particles61, align 8, !dbg !15103
  %boid = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %62, i32 0, i32 4, !dbg !15104
  %63 = load %struct.BoidParticle*, %struct.BoidParticle** %boid, align 8, !dbg !15104
  %tobool62 = icmp ne %struct.BoidParticle* %63, null, !dbg !15101
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !15105

if.then63:                                        ; preds = %if.then57
  %64 = load %struct.BoidParticle*, %struct.BoidParticle** %newboids, align 8, !dbg !15106
  %65 = bitcast %struct.BoidParticle* %64 to i8*, !dbg !15107
  %66 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15108
  %particles64 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %66, i32 0, i32 3, !dbg !15109
  %67 = load %struct.ParticleData*, %struct.ParticleData** %particles64, align 8, !dbg !15109
  %boid65 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %67, i32 0, i32 4, !dbg !15110
  %68 = load %struct.BoidParticle*, %struct.BoidParticle** %boid65, align 8, !dbg !15110
  %69 = bitcast %struct.BoidParticle* %68 to i8*, !dbg !15107
  %70 = load i32, i32* %totsaved, align 4, !dbg !15111
  %conv66 = sext i32 %70 to i64, !dbg !15111
  %mul67 = mul i64 %conv66, 56, !dbg !15112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %69, i64 %mul67, i1 false), !dbg !15107
  br label %if.end68, !dbg !15107

if.end68:                                         ; preds = %if.then63, %if.then57
  br label %if.end69, !dbg !15113

if.end69:                                         ; preds = %if.end68, %cond.end
  %71 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15114
  %particles70 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %71, i32 0, i32 3, !dbg !15116
  %72 = load %struct.ParticleData*, %struct.ParticleData** %particles70, align 8, !dbg !15116
  %keys = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %72, i32 0, i32 3, !dbg !15117
  %73 = load %struct.ParticleKey*, %struct.ParticleKey** %keys, align 8, !dbg !15117
  %tobool71 = icmp ne %struct.ParticleKey* %73, null, !dbg !15114
  br i1 %tobool71, label %if.then72, label %if.end75, !dbg !15118

if.then72:                                        ; preds = %if.end69
  %74 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15119
  %75 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15120
  %particles73 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %75, i32 0, i32 3, !dbg !15121
  %76 = load %struct.ParticleData*, %struct.ParticleData** %particles73, align 8, !dbg !15121
  %keys74 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %76, i32 0, i32 3, !dbg !15122
  %77 = load %struct.ParticleKey*, %struct.ParticleKey** %keys74, align 8, !dbg !15122
  %78 = bitcast %struct.ParticleKey* %77 to i8*, !dbg !15120
  call void %74(i8* %78), !dbg !15119
  br label %if.end75, !dbg !15119

if.end75:                                         ; preds = %if.then72, %if.end69
  %79 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15123
  %particles76 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %79, i32 0, i32 3, !dbg !15125
  %80 = load %struct.ParticleData*, %struct.ParticleData** %particles76, align 8, !dbg !15125
  %boid77 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %80, i32 0, i32 4, !dbg !15126
  %81 = load %struct.BoidParticle*, %struct.BoidParticle** %boid77, align 8, !dbg !15126
  %tobool78 = icmp ne %struct.BoidParticle* %81, null, !dbg !15123
  br i1 %tobool78, label %if.then79, label %if.end82, !dbg !15127

if.then79:                                        ; preds = %if.end75
  %82 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15128
  %83 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15129
  %particles80 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %83, i32 0, i32 3, !dbg !15130
  %84 = load %struct.ParticleData*, %struct.ParticleData** %particles80, align 8, !dbg !15130
  %boid81 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %84, i32 0, i32 4, !dbg !15131
  %85 = load %struct.BoidParticle*, %struct.BoidParticle** %boid81, align 8, !dbg !15131
  %86 = bitcast %struct.BoidParticle* %85 to i8*, !dbg !15129
  call void %82(i8* %86), !dbg !15128
  br label %if.end82, !dbg !15128

if.end82:                                         ; preds = %if.then79, %if.end75
  store i32 0, i32* %p, align 4, !dbg !15132
  %87 = load %struct.ParticleData*, %struct.ParticleData** %newpars, align 8, !dbg !15134
  store %struct.ParticleData* %87, %struct.ParticleData** %pa, align 8, !dbg !15135
  br label %for.cond, !dbg !15136

for.cond:                                         ; preds = %for.inc, %if.end82
  %88 = load i32, i32* %p, align 4, !dbg !15137
  %89 = load i32, i32* %totsaved, align 4, !dbg !15139
  %cmp83 = icmp slt i32 %88, %89, !dbg !15140
  br i1 %cmp83, label %for.body, label %for.end, !dbg !15141

for.body:                                         ; preds = %for.cond
  %90 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15142
  %keys85 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %90, i32 0, i32 3, !dbg !15145
  %91 = load %struct.ParticleKey*, %struct.ParticleKey** %keys85, align 8, !dbg !15145
  %tobool86 = icmp ne %struct.ParticleKey* %91, null, !dbg !15142
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !15146

if.then87:                                        ; preds = %for.body
  %92 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15147
  %keys88 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %92, i32 0, i32 3, !dbg !15149
  store %struct.ParticleKey* null, %struct.ParticleKey** %keys88, align 8, !dbg !15150
  %93 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15151
  %totkey = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %93, i32 0, i32 5, !dbg !15152
  store i32 0, i32* %totkey, align 8, !dbg !15153
  br label %if.end89, !dbg !15154

if.end89:                                         ; preds = %if.then87, %for.body
  br label %for.inc, !dbg !15155

for.inc:                                          ; preds = %if.end89
  %94 = load i32, i32* %p, align 4, !dbg !15156
  %inc = add nsw i32 %94, 1, !dbg !15156
  store i32 %inc, i32* %p, align 4, !dbg !15156
  %95 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15157
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %95, i32 1, !dbg !15157
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !15157
  br label %for.cond, !dbg !15158, !llvm.loop !15159

for.end:                                          ; preds = %for.cond
  %96 = load i32, i32* %totsaved, align 4, !dbg !15161
  store i32 %96, i32* %p, align 4, !dbg !15163
  %97 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15164
  %particles90 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %97, i32 0, i32 3, !dbg !15165
  %98 = load %struct.ParticleData*, %struct.ParticleData** %particles90, align 8, !dbg !15165
  %99 = load i32, i32* %totsaved, align 4, !dbg !15166
  %idx.ext = sext i32 %99 to i64, !dbg !15167
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %98, i64 %idx.ext, !dbg !15167
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %pa, align 8, !dbg !15168
  br label %for.cond91, !dbg !15169

for.cond91:                                       ; preds = %for.inc100, %for.end
  %100 = load i32, i32* %p, align 4, !dbg !15170
  %101 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15172
  %totpart92 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %101, i32 0, i32 26, !dbg !15173
  %102 = load i32, i32* %totpart92, align 8, !dbg !15173
  %cmp93 = icmp slt i32 %100, %102, !dbg !15174
  br i1 %cmp93, label %for.body95, label %for.end103, !dbg !15175

for.body95:                                       ; preds = %for.cond91
  %103 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15176
  %hair = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %103, i32 0, i32 2, !dbg !15178
  %104 = load %struct.HairKey*, %struct.HairKey** %hair, align 8, !dbg !15178
  %tobool96 = icmp ne %struct.HairKey* %104, null, !dbg !15176
  br i1 %tobool96, label %if.then97, label %if.end99, !dbg !15179

if.then97:                                        ; preds = %for.body95
  %105 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15180
  %106 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15181
  %hair98 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %106, i32 0, i32 2, !dbg !15182
  %107 = load %struct.HairKey*, %struct.HairKey** %hair98, align 8, !dbg !15182
  %108 = bitcast %struct.HairKey* %107 to i8*, !dbg !15181
  call void %105(i8* %108), !dbg !15180
  br label %if.end99, !dbg !15180

if.end99:                                         ; preds = %if.then97, %for.body95
  br label %for.inc100, !dbg !15178

for.inc100:                                       ; preds = %if.end99
  %109 = load i32, i32* %p, align 4, !dbg !15183
  %inc101 = add nsw i32 %109, 1, !dbg !15183
  store i32 %inc101, i32* %p, align 4, !dbg !15183
  %110 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15184
  %incdec.ptr102 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %110, i32 1, !dbg !15184
  store %struct.ParticleData* %incdec.ptr102, %struct.ParticleData** %pa, align 8, !dbg !15184
  br label %for.cond91, !dbg !15185, !llvm.loop !15186

for.end103:                                       ; preds = %for.cond91
  %111 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15188
  %112 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15189
  %particles104 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %112, i32 0, i32 3, !dbg !15190
  %113 = load %struct.ParticleData*, %struct.ParticleData** %particles104, align 8, !dbg !15190
  %114 = bitcast %struct.ParticleData* %113 to i8*, !dbg !15189
  call void %111(i8* %114), !dbg !15188
  %115 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15191
  call void @psys_free_pdd(%struct.ParticleSystem* %115), !dbg !15192
  br label %if.end105, !dbg !15193

if.end105:                                        ; preds = %for.end103, %if.end49
  %116 = load %struct.ParticleData*, %struct.ParticleData** %newpars, align 8, !dbg !15194
  %117 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15195
  %particles106 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %117, i32 0, i32 3, !dbg !15196
  store %struct.ParticleData* %116, %struct.ParticleData** %particles106, align 8, !dbg !15197
  %118 = load i32, i32* %totpart, align 4, !dbg !15198
  %119 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15199
  %totpart107 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %119, i32 0, i32 26, !dbg !15200
  store i32 %118, i32* %totpart107, align 8, !dbg !15201
  %120 = load %struct.BoidParticle*, %struct.BoidParticle** %newboids, align 8, !dbg !15202
  %tobool108 = icmp ne %struct.BoidParticle* %120, null, !dbg !15202
  br i1 %tobool108, label %if.then109, label %if.end122, !dbg !15204

if.then109:                                       ; preds = %if.end105
  store i32 0, i32* %p, align 4, !dbg !15205
  %121 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15205
  %particles110 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %121, i32 0, i32 3, !dbg !15205
  %122 = load %struct.ParticleData*, %struct.ParticleData** %particles110, align 8, !dbg !15205
  store %struct.ParticleData* %122, %struct.ParticleData** %pa, align 8, !dbg !15205
  br label %for.cond111, !dbg !15205

for.cond111:                                      ; preds = %for.inc118, %if.then109
  %123 = load i32, i32* %p, align 4, !dbg !15208
  %124 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15208
  %totpart112 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %124, i32 0, i32 26, !dbg !15208
  %125 = load i32, i32* %totpart112, align 8, !dbg !15208
  %cmp113 = icmp slt i32 %123, %125, !dbg !15208
  br i1 %cmp113, label %for.body115, label %for.end121, !dbg !15205

for.body115:                                      ; preds = %for.cond111
  %126 = load %struct.BoidParticle*, %struct.BoidParticle** %newboids, align 8, !dbg !15210
  %incdec.ptr116 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %126, i32 1, !dbg !15210
  store %struct.BoidParticle* %incdec.ptr116, %struct.BoidParticle** %newboids, align 8, !dbg !15210
  %127 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15211
  %boid117 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %127, i32 0, i32 4, !dbg !15212
  store %struct.BoidParticle* %126, %struct.BoidParticle** %boid117, align 8, !dbg !15213
  br label %for.inc118, !dbg !15211

for.inc118:                                       ; preds = %for.body115
  %128 = load i32, i32* %p, align 4, !dbg !15208
  %inc119 = add nsw i32 %128, 1, !dbg !15208
  store i32 %inc119, i32* %p, align 4, !dbg !15208
  %129 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15208
  %incdec.ptr120 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %129, i32 1, !dbg !15208
  store %struct.ParticleData* %incdec.ptr120, %struct.ParticleData** %pa, align 8, !dbg !15208
  br label %for.cond111, !dbg !15208, !llvm.loop !15214

for.end121:                                       ; preds = %for.cond111
  br label %if.end122, !dbg !15216

if.end122:                                        ; preds = %for.end121, %if.end105
  br label %if.end123, !dbg !15217

if.end123:                                        ; preds = %if.end122, %if.end12
  %130 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15218
  %child = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %130, i32 0, i32 4, !dbg !15220
  %131 = load %struct.ChildParticle*, %struct.ChildParticle** %child, align 8, !dbg !15220
  %tobool124 = icmp ne %struct.ChildParticle* %131, null, !dbg !15218
  br i1 %tobool124, label %if.then125, label %if.end128, !dbg !15221

if.then125:                                       ; preds = %if.end123
  %132 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15222
  %133 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15224
  %child126 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %133, i32 0, i32 4, !dbg !15225
  %134 = load %struct.ChildParticle*, %struct.ChildParticle** %child126, align 8, !dbg !15225
  %135 = bitcast %struct.ChildParticle* %134 to i8*, !dbg !15224
  call void %132(i8* %135), !dbg !15222
  %136 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15226
  %child127 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %136, i32 0, i32 4, !dbg !15227
  store %struct.ChildParticle* null, %struct.ChildParticle** %child127, align 8, !dbg !15228
  %137 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15229
  %totchild = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %137, i32 0, i32 28, !dbg !15230
  store i32 0, i32* %totchild, align 8, !dbg !15231
  br label %if.end128, !dbg !15232

if.end128:                                        ; preds = %if.then31, %if.end46, %if.then125, %if.end123
  ret void, !dbg !15233
}

declare dso_local void @psys_free_pdd(%struct.ParticleSystem*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @distribute_particles_on_dm(%struct.ParticleSimulationData* %sim, i32 %from) #0 !dbg !15234 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %from.addr = alloca i32, align 4
  %finaldm = alloca %struct.DerivedMesh*, align 8
  %threads = alloca %struct.ListBase, align 8
  %pthreads = alloca %struct.ParticleThread*, align 8
  %ctx = alloca %struct.ParticleThreadContext*, align 8
  %i = alloca i32, align 4
  %totthread = alloca i32, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !15235, metadata !DIExpression()), !dbg !15236
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !15237, metadata !DIExpression()), !dbg !15238
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %finaldm, metadata !15239, metadata !DIExpression()), !dbg !15240
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !15241
  %psmd = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 3, !dbg !15242
  %1 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !15242
  %dm = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %1, i32 0, i32 2, !dbg !15243
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15243
  store %struct.DerivedMesh* %2, %struct.DerivedMesh** %finaldm, align 8, !dbg !15240
  call void @llvm.dbg.declare(metadata %struct.ListBase* %threads, metadata !15244, metadata !DIExpression()), !dbg !15245
  call void @llvm.dbg.declare(metadata %struct.ParticleThread** %pthreads, metadata !15246, metadata !DIExpression()), !dbg !15247
  call void @llvm.dbg.declare(metadata %struct.ParticleThreadContext** %ctx, metadata !15248, metadata !DIExpression()), !dbg !15249
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15250, metadata !DIExpression()), !dbg !15251
  call void @llvm.dbg.declare(metadata i32* %totthread, metadata !15252, metadata !DIExpression()), !dbg !15253
  %3 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !15254
  %call = call %struct.ParticleThread* @psys_threads_create(%struct.ParticleSimulationData* %3), !dbg !15255
  store %struct.ParticleThread* %call, %struct.ParticleThread** %pthreads, align 8, !dbg !15256
  %4 = load %struct.ParticleThread*, %struct.ParticleThread** %pthreads, align 8, !dbg !15257
  %5 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !15259
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %5, i32 0, i32 0, !dbg !15260
  %6 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !15260
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm, align 8, !dbg !15261
  %8 = load i32, i32* %from.addr, align 4, !dbg !15262
  %call1 = call i32 @distribute_threads_init_data(%struct.ParticleThread* %4, %struct.Scene* %6, %struct.DerivedMesh* %7, i32 %8), !dbg !15263
  %tobool = icmp ne i32 %call1, 0, !dbg !15263
  br i1 %tobool, label %if.end, label %if.then, !dbg !15264

if.then:                                          ; preds = %entry
  %9 = load %struct.ParticleThread*, %struct.ParticleThread** %pthreads, align 8, !dbg !15265
  call void @psys_threads_free(%struct.ParticleThread* %9), !dbg !15267
  br label %return, !dbg !15268

if.end:                                           ; preds = %entry
  %10 = load %struct.ParticleThread*, %struct.ParticleThread** %pthreads, align 8, !dbg !15269
  %arrayidx = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %10, i64 0, !dbg !15269
  %tot = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx, i32 0, i32 4, !dbg !15270
  %11 = load i32, i32* %tot, align 4, !dbg !15270
  store i32 %11, i32* %totthread, align 4, !dbg !15271
  %12 = load i32, i32* %totthread, align 4, !dbg !15272
  %cmp = icmp sgt i32 %12, 1, !dbg !15274
  br i1 %cmp, label %if.then2, label %if.else, !dbg !15275

if.then2:                                         ; preds = %if.end
  %13 = load i32, i32* %totthread, align 4, !dbg !15276
  call void @BLI_init_threads(%struct.ListBase* %threads, i8* (i8*)* @distribute_threads_exec_cb, i32 %13), !dbg !15278
  store i32 0, i32* %i, align 4, !dbg !15279
  br label %for.cond, !dbg !15281

for.cond:                                         ; preds = %for.inc, %if.then2
  %14 = load i32, i32* %i, align 4, !dbg !15282
  %15 = load i32, i32* %totthread, align 4, !dbg !15284
  %cmp3 = icmp slt i32 %14, %15, !dbg !15285
  br i1 %cmp3, label %for.body, label %for.end, !dbg !15286

for.body:                                         ; preds = %for.cond
  %16 = load %struct.ParticleThread*, %struct.ParticleThread** %pthreads, align 8, !dbg !15287
  %17 = load i32, i32* %i, align 4, !dbg !15288
  %idxprom = sext i32 %17 to i64, !dbg !15287
  %arrayidx4 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %16, i64 %idxprom, !dbg !15287
  %18 = bitcast %struct.ParticleThread* %arrayidx4 to i8*, !dbg !15289
  call void @BLI_insert_thread(%struct.ListBase* %threads, i8* %18), !dbg !15290
  br label %for.inc, !dbg !15290

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !15291
  %inc = add nsw i32 %19, 1, !dbg !15291
  store i32 %inc, i32* %i, align 4, !dbg !15291
  br label %for.cond, !dbg !15292, !llvm.loop !15293

for.end:                                          ; preds = %for.cond
  call void @BLI_end_threads(%struct.ListBase* %threads), !dbg !15295
  br label %if.end7, !dbg !15296

if.else:                                          ; preds = %if.end
  %20 = load %struct.ParticleThread*, %struct.ParticleThread** %pthreads, align 8, !dbg !15297
  %arrayidx5 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %20, i64 0, !dbg !15297
  %21 = bitcast %struct.ParticleThread* %arrayidx5 to i8*, !dbg !15298
  %call6 = call i8* @distribute_threads_exec_cb(i8* %21), !dbg !15299
  br label %if.end7

if.end7:                                          ; preds = %if.else, %for.end
  %22 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !15300
  %ob = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %22, i32 0, i32 1, !dbg !15301
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15301
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm, align 8, !dbg !15302
  %25 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !15303
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %25, i32 0, i32 2, !dbg !15304
  %26 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15304
  call void @psys_calc_dmcache(%struct.Object* %23, %struct.DerivedMesh* %24, %struct.ParticleSystem* %26), !dbg !15305
  %27 = load %struct.ParticleThread*, %struct.ParticleThread** %pthreads, align 8, !dbg !15306
  %arrayidx8 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %27, i64 0, !dbg !15306
  %ctx9 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx8, i32 0, i32 0, !dbg !15307
  %28 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx9, align 8, !dbg !15307
  store %struct.ParticleThreadContext* %28, %struct.ParticleThreadContext** %ctx, align 8, !dbg !15308
  %29 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !15309
  %dm10 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %29, i32 0, i32 1, !dbg !15311
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm10, align 8, !dbg !15311
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm, align 8, !dbg !15312
  %cmp11 = icmp ne %struct.DerivedMesh* %30, %31, !dbg !15313
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !15314

if.then12:                                        ; preds = %if.end7
  %32 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !15315
  %dm13 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %32, i32 0, i32 1, !dbg !15316
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm13, align 8, !dbg !15316
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 95, !dbg !15317
  %34 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !15317
  %35 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !15318
  %dm14 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %35, i32 0, i32 1, !dbg !15319
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm14, align 8, !dbg !15319
  call void %34(%struct.DerivedMesh* %36), !dbg !15315
  br label %if.end15, !dbg !15315

if.end15:                                         ; preds = %if.then12, %if.end7
  %37 = load %struct.ParticleThread*, %struct.ParticleThread** %pthreads, align 8, !dbg !15320
  call void @psys_threads_free(%struct.ParticleThread* %37), !dbg !15321
  br label %return, !dbg !15322

return:                                           ; preds = %if.end15, %if.then
  ret void, !dbg !15322
}

; Function Attrs: noinline nounwind uwtable
define internal void @distribute_particles_on_shape(%struct.ParticleSimulationData* %sim, i32 %UNUSED_from) #0 !dbg !15323 {
entry:
  %sim.addr = alloca %struct.ParticleSimulationData*, align 8
  %UNUSED_from.addr = alloca i32, align 4
  store %struct.ParticleSimulationData* %sim, %struct.ParticleSimulationData** %sim.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData** %sim.addr, metadata !15324, metadata !DIExpression()), !dbg !15325
  store i32 %UNUSED_from, i32* %UNUSED_from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_from.addr, metadata !15326, metadata !DIExpression()), !dbg !15327
  %0 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !15328
  %scene = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %0, i32 0, i32 0, !dbg !15329
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !15329
  %2 = load %struct.ParticleSimulationData*, %struct.ParticleSimulationData** %sim.addr, align 8, !dbg !15330
  %psys = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %2, i32 0, i32 2, !dbg !15331
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15331
  call void @distribute_invalid(%struct.Scene* %1, %struct.ParticleSystem* %3, i32 0), !dbg !15332
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15333
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23, i64 0, i64 0)), !dbg !15334
  ret void, !dbg !15335
}

; Function Attrs: noinline nounwind uwtable
define internal void @distribute_invalid(%struct.Scene* %scene, %struct.ParticleSystem* %psys, i32 %from) #0 !dbg !15336 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %from.addr = alloca i32, align 4
  %cpa = alloca %struct.ChildParticle*, align 8
  %p = alloca i32, align 4
  %totchild = alloca i32, align 4
  %pa18 = alloca %struct.ParticleData*, align 8
  %p19 = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !15339, metadata !DIExpression()), !dbg !15340
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !15341, metadata !DIExpression()), !dbg !15342
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !15343, metadata !DIExpression()), !dbg !15344
  %0 = load i32, i32* %from.addr, align 4, !dbg !15345
  %cmp = icmp eq i32 %0, 4, !dbg !15347
  br i1 %cmp, label %if.then, label %if.else, !dbg !15348

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ChildParticle** %cpa, metadata !15349, metadata !DIExpression()), !dbg !15351
  call void @llvm.dbg.declare(metadata i32* %p, metadata !15352, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.declare(metadata i32* %totchild, metadata !15354, metadata !DIExpression()), !dbg !15355
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !15356
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !15357
  %call = call i32 @get_psys_tot_child(%struct.Scene* %1, %struct.ParticleSystem* %2), !dbg !15358
  store i32 %call, i32* %totchild, align 4, !dbg !15355
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !15359
  %child = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 4, !dbg !15361
  %4 = load %struct.ChildParticle*, %struct.ChildParticle** %child, align 8, !dbg !15361
  %tobool = icmp ne %struct.ChildParticle* %4, null, !dbg !15359
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !15362

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %totchild, align 4, !dbg !15363
  %tobool1 = icmp ne i32 %5, 0, !dbg !15363
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !15364

if.then2:                                         ; preds = %land.lhs.true
  store i32 0, i32* %p, align 4, !dbg !15365
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !15368
  %child3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 4, !dbg !15369
  %7 = load %struct.ChildParticle*, %struct.ChildParticle** %child3, align 8, !dbg !15369
  store %struct.ChildParticle* %7, %struct.ChildParticle** %cpa, align 8, !dbg !15370
  br label %for.cond, !dbg !15371

for.cond:                                         ; preds = %for.inc, %if.then2
  %8 = load i32, i32* %p, align 4, !dbg !15372
  %9 = load i32, i32* %totchild, align 4, !dbg !15374
  %cmp4 = icmp slt i32 %8, %9, !dbg !15375
  br i1 %cmp4, label %for.body, label %for.end, !dbg !15376

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !15377
  %fuv = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %10, i32 0, i32 4, !dbg !15379
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %fuv, i64 0, i64 3, !dbg !15377
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !15380
  %11 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !15381
  %fuv5 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %11, i32 0, i32 4, !dbg !15382
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %fuv5, i64 0, i64 2, !dbg !15381
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !15383
  %12 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !15384
  %fuv7 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %12, i32 0, i32 4, !dbg !15385
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %fuv7, i64 0, i64 1, !dbg !15384
  store float 0.000000e+00, float* %arrayidx8, align 4, !dbg !15386
  %13 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !15387
  %fuv9 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %13, i32 0, i32 4, !dbg !15388
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %fuv9, i64 0, i64 0, !dbg !15387
  store float 0.000000e+00, float* %arrayidx10, align 4, !dbg !15389
  %14 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !15390
  %foffset = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %14, i32 0, i32 5, !dbg !15391
  store float 0.000000e+00, float* %foffset, align 4, !dbg !15392
  %15 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !15393
  %parent = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %15, i32 0, i32 1, !dbg !15394
  store i32 0, i32* %parent, align 4, !dbg !15395
  %16 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !15396
  %pa = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %16, i32 0, i32 2, !dbg !15397
  %arrayidx11 = getelementptr inbounds [4 x i32], [4 x i32]* %pa, i64 0, i64 3, !dbg !15396
  store i32 0, i32* %arrayidx11, align 4, !dbg !15398
  %17 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !15399
  %pa12 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %17, i32 0, i32 2, !dbg !15400
  %arrayidx13 = getelementptr inbounds [4 x i32], [4 x i32]* %pa12, i64 0, i64 2, !dbg !15399
  store i32 0, i32* %arrayidx13, align 4, !dbg !15401
  %18 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !15402
  %pa14 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %18, i32 0, i32 2, !dbg !15403
  %arrayidx15 = getelementptr inbounds [4 x i32], [4 x i32]* %pa14, i64 0, i64 1, !dbg !15402
  store i32 0, i32* %arrayidx15, align 4, !dbg !15404
  %19 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !15405
  %pa16 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %19, i32 0, i32 2, !dbg !15406
  %arrayidx17 = getelementptr inbounds [4 x i32], [4 x i32]* %pa16, i64 0, i64 0, !dbg !15405
  store i32 0, i32* %arrayidx17, align 4, !dbg !15407
  %20 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !15408
  %num = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %20, i32 0, i32 0, !dbg !15409
  store i32 -1, i32* %num, align 4, !dbg !15410
  br label %for.inc, !dbg !15411

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %p, align 4, !dbg !15412
  %inc = add nsw i32 %21, 1, !dbg !15412
  store i32 %inc, i32* %p, align 4, !dbg !15412
  %22 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !15413
  %incdec.ptr = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %22, i32 1, !dbg !15413
  store %struct.ChildParticle* %incdec.ptr, %struct.ChildParticle** %cpa, align 8, !dbg !15413
  br label %for.cond, !dbg !15414, !llvm.loop !15415

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !15417

if.end:                                           ; preds = %for.end, %land.lhs.true, %if.then
  br label %if.end37, !dbg !15418

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa18, metadata !15419, metadata !DIExpression()), !dbg !15421
  call void @llvm.dbg.declare(metadata i32* %p19, metadata !15422, metadata !DIExpression()), !dbg !15421
  store i32 0, i32* %p19, align 4, !dbg !15423
  %23 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !15423
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %23, i32 0, i32 3, !dbg !15423
  %24 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !15423
  store %struct.ParticleData* %24, %struct.ParticleData** %pa18, align 8, !dbg !15423
  br label %for.cond20, !dbg !15423

for.cond20:                                       ; preds = %for.inc33, %if.else
  %25 = load i32, i32* %p19, align 4, !dbg !15425
  %26 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !15425
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %26, i32 0, i32 26, !dbg !15425
  %27 = load i32, i32* %totpart, align 8, !dbg !15425
  %cmp21 = icmp slt i32 %25, %27, !dbg !15425
  br i1 %cmp21, label %for.body22, label %for.end36, !dbg !15423

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.ParticleData*, %struct.ParticleData** %pa18, align 8, !dbg !15427
  %fuv23 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %28, i32 0, i32 11, !dbg !15429
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %fuv23, i64 0, i64 3, !dbg !15427
  store float 0.000000e+00, float* %arrayidx24, align 4, !dbg !15430
  %29 = load %struct.ParticleData*, %struct.ParticleData** %pa18, align 8, !dbg !15431
  %fuv25 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %29, i32 0, i32 11, !dbg !15432
  %arrayidx26 = getelementptr inbounds [4 x float], [4 x float]* %fuv25, i64 0, i64 2, !dbg !15431
  store float 0.000000e+00, float* %arrayidx26, align 8, !dbg !15433
  %30 = load %struct.ParticleData*, %struct.ParticleData** %pa18, align 8, !dbg !15434
  %fuv27 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %30, i32 0, i32 11, !dbg !15435
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %fuv27, i64 0, i64 1, !dbg !15434
  store float 0.000000e+00, float* %arrayidx28, align 4, !dbg !15436
  %31 = load %struct.ParticleData*, %struct.ParticleData** %pa18, align 8, !dbg !15437
  %fuv29 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %31, i32 0, i32 11, !dbg !15438
  %arrayidx30 = getelementptr inbounds [4 x float], [4 x float]* %fuv29, i64 0, i64 0, !dbg !15437
  store float 0.000000e+00, float* %arrayidx30, align 8, !dbg !15439
  %32 = load %struct.ParticleData*, %struct.ParticleData** %pa18, align 8, !dbg !15440
  %foffset31 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %32, i32 0, i32 12, !dbg !15441
  store float 0.000000e+00, float* %foffset31, align 8, !dbg !15442
  %33 = load %struct.ParticleData*, %struct.ParticleData** %pa18, align 8, !dbg !15443
  %num32 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %33, i32 0, i32 9, !dbg !15444
  store i32 -1, i32* %num32, align 8, !dbg !15445
  br label %for.inc33, !dbg !15446

for.inc33:                                        ; preds = %for.body22
  %34 = load i32, i32* %p19, align 4, !dbg !15425
  %inc34 = add nsw i32 %34, 1, !dbg !15425
  store i32 %inc34, i32* %p19, align 4, !dbg !15425
  %35 = load %struct.ParticleData*, %struct.ParticleData** %pa18, align 8, !dbg !15425
  %incdec.ptr35 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %35, i32 1, !dbg !15425
  store %struct.ParticleData* %incdec.ptr35, %struct.ParticleData** %pa18, align 8, !dbg !15425
  br label %for.cond20, !dbg !15425, !llvm.loop !15447

for.end36:                                        ; preds = %for.cond20
  br label %if.end37

if.end37:                                         ; preds = %for.end36, %if.end
  ret void, !dbg !15449
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @distribute_threads_init_data(%struct.ParticleThread* %threads, %struct.Scene* %scene, %struct.DerivedMesh* %finaldm, i32 %from) #0 !dbg !15450 {
entry:
  %retval = alloca i32, align 4
  %threads.addr = alloca %struct.ParticleThread*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %finaldm.addr = alloca %struct.DerivedMesh*, align 8
  %from.addr = alloca i32, align 4
  %ctx = alloca %struct.ParticleThreadContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %tpars = alloca %struct.ParticleData*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %seams = alloca %struct.ParticleSeam*, align 8
  %tree = alloca %struct.KDTree*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %jit = alloca float*, align 8
  %i = alloca i32, align 4
  %seed = alloca i32, align 4
  %p = alloca i32, align 4
  %totthread = alloca i32, align 4
  %cfrom = alloca i32, align 4
  %totelem = alloca i32, align 4
  %totpart = alloca i32, align 4
  %particle_element = alloca i32*, align 8
  %children = alloca i32, align 4
  %totseam = alloca i32, align 4
  %jitlevel = alloca i32, align 4
  %distr = alloca i32, align 4
  %element_weight = alloca float*, align 8
  %element_sum = alloca float*, align 8
  %jitter_offset = alloca float*, align 8
  %vweight = alloca float*, align 8
  %cur = alloca float, align 4
  %maxweight = alloca float, align 4
  %tweight = alloca float, align 4
  %totweight = alloca float, align 4
  %inv_totweight = alloca float, align 4
  %co = alloca [3 x float], align 4
  %nor = alloca [3 x float], align 4
  %orco = alloca [3 x float], align 4
  %mv = alloca %struct.MVert*, align 8
  %orcodata = alloca [3 x float]*, align 8
  %totvert = alloca i32, align 4
  %v1 = alloca %struct.MVert*, align 8
  %v2 = alloca %struct.MVert*, align 8
  %v3 = alloca %struct.MVert*, align 8
  %v4 = alloca %struct.MVert*, align 8
  %totarea = alloca float, align 4
  %co1 = alloca [3 x float], align 4
  %co2 = alloca [3 x float], align 4
  %co3 = alloca [3 x float], align 4
  %co4 = alloca [3 x float], align 4
  %orcodata150 = alloca [3 x float]*, align 8
  %mf = alloca %struct.MFace*, align 8
  %min = alloca float, align 4
  %mf294 = alloca %struct.MFace*, align 8
  %pos = alloca float, align 4
  %step = alloca double, align 8
  %pos401 = alloca double, align 8
  %orig_index = alloca i32*, align 8
  store %struct.ParticleThread* %threads, %struct.ParticleThread** %threads.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleThread** %threads.addr, metadata !15453, metadata !DIExpression()), !dbg !15454
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !15455, metadata !DIExpression()), !dbg !15456
  store %struct.DerivedMesh* %finaldm, %struct.DerivedMesh** %finaldm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %finaldm.addr, metadata !15457, metadata !DIExpression()), !dbg !15458
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !15459, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.declare(metadata %struct.ParticleThreadContext** %ctx, metadata !15461, metadata !DIExpression()), !dbg !15462
  %0 = load %struct.ParticleThread*, %struct.ParticleThread** %threads.addr, align 8, !dbg !15463
  %arrayidx = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %0, i64 0, !dbg !15463
  %ctx1 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx, i32 0, i32 0, !dbg !15464
  %1 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx1, align 8, !dbg !15464
  store %struct.ParticleThreadContext* %1, %struct.ParticleThreadContext** %ctx, align 8, !dbg !15462
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !15465, metadata !DIExpression()), !dbg !15466
  %2 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !15467
  %sim = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %2, i32 0, i32 0, !dbg !15468
  %ob2 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 1, !dbg !15469
  %3 = load %struct.Object*, %struct.Object** %ob2, align 8, !dbg !15469
  store %struct.Object* %3, %struct.Object** %ob, align 8, !dbg !15466
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !15470, metadata !DIExpression()), !dbg !15471
  %4 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !15472
  %sim3 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %4, i32 0, i32 0, !dbg !15473
  %psys4 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim3, i32 0, i32 2, !dbg !15474
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys4, align 8, !dbg !15474
  store %struct.ParticleSystem* %5, %struct.ParticleSystem** %psys, align 8, !dbg !15471
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !15475, metadata !DIExpression()), !dbg !15476
  store %struct.ParticleData* null, %struct.ParticleData** %pa, align 8, !dbg !15476
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %tpars, metadata !15477, metadata !DIExpression()), !dbg !15478
  store %struct.ParticleData* null, %struct.ParticleData** %tpars, align 8, !dbg !15478
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !15479, metadata !DIExpression()), !dbg !15480
  call void @llvm.dbg.declare(metadata %struct.ParticleSeam** %seams, metadata !15481, metadata !DIExpression()), !dbg !15484
  store %struct.ParticleSeam* null, %struct.ParticleSeam** %seams, align 8, !dbg !15484
  call void @llvm.dbg.declare(metadata %struct.KDTree** %tree, metadata !15485, metadata !DIExpression()), !dbg !15489
  store %struct.KDTree* null, %struct.KDTree** %tree, align 8, !dbg !15489
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !15490, metadata !DIExpression()), !dbg !15491
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !15491
  call void @llvm.dbg.declare(metadata float** %jit, metadata !15492, metadata !DIExpression()), !dbg !15493
  store float* null, float** %jit, align 8, !dbg !15493
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15494, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.declare(metadata i32* %seed, metadata !15496, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.declare(metadata i32* %p, metadata !15498, metadata !DIExpression()), !dbg !15499
  store i32 0, i32* %p, align 4, !dbg !15499
  call void @llvm.dbg.declare(metadata i32* %totthread, metadata !15500, metadata !DIExpression()), !dbg !15501
  %6 = load %struct.ParticleThread*, %struct.ParticleThread** %threads.addr, align 8, !dbg !15502
  %arrayidx5 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %6, i64 0, !dbg !15502
  %tot = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx5, i32 0, i32 4, !dbg !15503
  %7 = load i32, i32* %tot, align 4, !dbg !15503
  store i32 %7, i32* %totthread, align 4, !dbg !15501
  call void @llvm.dbg.declare(metadata i32* %cfrom, metadata !15504, metadata !DIExpression()), !dbg !15505
  store i32 0, i32* %cfrom, align 4, !dbg !15505
  call void @llvm.dbg.declare(metadata i32* %totelem, metadata !15506, metadata !DIExpression()), !dbg !15507
  store i32 0, i32* %totelem, align 4, !dbg !15507
  call void @llvm.dbg.declare(metadata i32* %totpart, metadata !15508, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.declare(metadata i32** %particle_element, metadata !15510, metadata !DIExpression()), !dbg !15511
  store i32* null, i32** %particle_element, align 8, !dbg !15511
  call void @llvm.dbg.declare(metadata i32* %children, metadata !15512, metadata !DIExpression()), !dbg !15513
  store i32 0, i32* %children, align 4, !dbg !15513
  call void @llvm.dbg.declare(metadata i32* %totseam, metadata !15514, metadata !DIExpression()), !dbg !15515
  store i32 0, i32* %totseam, align 4, !dbg !15515
  call void @llvm.dbg.declare(metadata i32* %jitlevel, metadata !15516, metadata !DIExpression()), !dbg !15517
  store i32 1, i32* %jitlevel, align 4, !dbg !15517
  call void @llvm.dbg.declare(metadata i32* %distr, metadata !15518, metadata !DIExpression()), !dbg !15519
  call void @llvm.dbg.declare(metadata float** %element_weight, metadata !15520, metadata !DIExpression()), !dbg !15521
  store float* null, float** %element_weight, align 8, !dbg !15521
  call void @llvm.dbg.declare(metadata float** %element_sum, metadata !15522, metadata !DIExpression()), !dbg !15523
  store float* null, float** %element_sum, align 8, !dbg !15523
  call void @llvm.dbg.declare(metadata float** %jitter_offset, metadata !15524, metadata !DIExpression()), !dbg !15525
  store float* null, float** %jitter_offset, align 8, !dbg !15525
  call void @llvm.dbg.declare(metadata float** %vweight, metadata !15526, metadata !DIExpression()), !dbg !15527
  store float* null, float** %vweight, align 8, !dbg !15527
  call void @llvm.dbg.declare(metadata float* %cur, metadata !15528, metadata !DIExpression()), !dbg !15529
  call void @llvm.dbg.declare(metadata float* %maxweight, metadata !15530, metadata !DIExpression()), !dbg !15531
  store float 0.000000e+00, float* %maxweight, align 4, !dbg !15531
  call void @llvm.dbg.declare(metadata float* %tweight, metadata !15532, metadata !DIExpression()), !dbg !15533
  call void @llvm.dbg.declare(metadata float* %totweight, metadata !15534, metadata !DIExpression()), !dbg !15535
  call void @llvm.dbg.declare(metadata float* %inv_totweight, metadata !15536, metadata !DIExpression()), !dbg !15537
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !15538, metadata !DIExpression()), !dbg !15539
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !15540, metadata !DIExpression()), !dbg !15541
  call void @llvm.dbg.declare(metadata [3 x float]* %orco, metadata !15542, metadata !DIExpression()), !dbg !15543
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15544
  %cmp = icmp eq %struct.Object* null, %8, !dbg !15544
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15544

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15544
  %cmp6 = icmp eq %struct.ParticleSystem* null, %9, !dbg !15544
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !15544

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15544
  %part8 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 2, !dbg !15544
  %11 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part8, align 8, !dbg !15544
  %cmp9 = icmp eq %struct.ParticleSettings* null, %11, !dbg !15544
  br i1 %cmp9, label %if.then, label %if.end, !dbg !15546

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !15547
  br label %return, !dbg !15547

if.end:                                           ; preds = %lor.lhs.false7
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15548
  %part10 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %12, i32 0, i32 2, !dbg !15549
  %13 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part10, align 8, !dbg !15549
  store %struct.ParticleSettings* %13, %struct.ParticleSettings** %part, align 8, !dbg !15550
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15551
  %totpart11 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %14, i32 0, i32 26, !dbg !15552
  %15 = load i32, i32* %totpart11, align 8, !dbg !15552
  store i32 %15, i32* %totpart, align 4, !dbg !15553
  %16 = load i32, i32* %totpart, align 4, !dbg !15554
  %cmp12 = icmp eq i32 %16, 0, !dbg !15556
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !15557

if.then13:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15558
  br label %return, !dbg !15558

if.end14:                                         ; preds = %if.end
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm.addr, align 8, !dbg !15559
  %deformedOnly = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 11, !dbg !15561
  %18 = load i32, i32* %deformedOnly, align 8, !dbg !15561
  %tobool = icmp ne i32 %18, 0, !dbg !15559
  br i1 %tobool, label %if.end18, label %land.lhs.true, !dbg !15562

land.lhs.true:                                    ; preds = %if.end14
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm.addr, align 8, !dbg !15563
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 52, !dbg !15564
  %20 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !15564
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm.addr, align 8, !dbg !15565
  %call = call i8* %20(%struct.DerivedMesh* %21, i32 7), !dbg !15563
  %tobool15 = icmp ne i8* %call, null, !dbg !15563
  br i1 %tobool15, label %if.end18, label %if.then16, !dbg !15566

if.then16:                                        ; preds = %land.lhs.true
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.14, i64 0, i64 0)), !dbg !15567
  store i32 0, i32* %retval, align 4, !dbg !15569
  br label %return, !dbg !15569

if.end18:                                         ; preds = %land.lhs.true, %if.end14
  %22 = load i32, i32* %from.addr, align 4, !dbg !15570
  %cmp19 = icmp eq i32 %22, 4, !dbg !15572
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !15573

if.then20:                                        ; preds = %if.end18
  %23 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !15574
  %childtype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %23, i32 0, i32 19, !dbg !15577
  %24 = load i16, i16* %childtype, align 4, !dbg !15577
  %conv = sext i16 %24 to i32, !dbg !15574
  %cmp21 = icmp ne i32 %conv, 2, !dbg !15578
  br i1 %cmp21, label %if.then23, label %if.end26, !dbg !15579

if.then23:                                        ; preds = %if.then20
  %25 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15580
  %seed24 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %25, i32 0, i32 23, !dbg !15582
  %26 = load i32, i32* %seed24, align 4, !dbg !15582
  %add = add nsw i32 31415926, %26, !dbg !15583
  %27 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15584
  %child_seed = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %27, i32 0, i32 24, !dbg !15585
  %28 = load i32, i32* %child_seed, align 8, !dbg !15585
  %add25 = add nsw i32 %add, %28, !dbg !15586
  call void @BLI_srandom(i32 %add25), !dbg !15587
  %29 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !15588
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15589
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm.addr, align 8, !dbg !15590
  %32 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15591
  call void @distribute_simple_children(%struct.Scene* %29, %struct.Object* %30, %struct.DerivedMesh* %31, %struct.ParticleSystem* %32), !dbg !15592
  store i32 0, i32* %retval, align 4, !dbg !15593
  br label %return, !dbg !15593

if.end26:                                         ; preds = %if.then20
  br label %if.end39, !dbg !15594

if.else:                                          ; preds = %if.end18
  %33 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !15595
  %distr27 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %33, i32 0, i32 9, !dbg !15598
  %34 = load i16, i16* %distr27, align 4, !dbg !15598
  %conv28 = sext i16 %34 to i32, !dbg !15595
  %cmp29 = icmp eq i32 %conv28, 2, !dbg !15599
  br i1 %cmp29, label %land.lhs.true31, label %if.end38, !dbg !15600

land.lhs.true31:                                  ; preds = %if.else
  %35 = load i32, i32* %from.addr, align 4, !dbg !15601
  %cmp32 = icmp ne i32 %35, 0, !dbg !15602
  br i1 %cmp32, label %if.then34, label %if.end38, !dbg !15603

if.then34:                                        ; preds = %land.lhs.true31
  %36 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15604
  %seed35 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %36, i32 0, i32 23, !dbg !15606
  %37 = load i32, i32* %seed35, align 4, !dbg !15606
  %add36 = add nsw i32 31415926, %37, !dbg !15607
  call void @BLI_srandom(i32 %add36), !dbg !15608
  %38 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15609
  %data = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 19, !dbg !15610
  %39 = load i8*, i8** %data, align 8, !dbg !15610
  %40 = bitcast i8* %39 to %struct.Mesh*, !dbg !15611
  %call37 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %40), !dbg !15612
  store %struct.DerivedMesh* %call37, %struct.DerivedMesh** %dm, align 8, !dbg !15613
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15614
  call void @DM_ensure_tessface(%struct.DerivedMesh* %41), !dbg !15615
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15616
  %43 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15617
  call void @distribute_grid(%struct.DerivedMesh* %42, %struct.ParticleSystem* %43), !dbg !15618
  %44 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15619
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %44, i32 0, i32 95, !dbg !15620
  %45 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !15620
  %46 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15621
  call void %45(%struct.DerivedMesh* %46), !dbg !15619
  store i32 0, i32* %retval, align 4, !dbg !15622
  br label %return, !dbg !15622

if.end38:                                         ; preds = %land.lhs.true31, %if.else
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end26
  %47 = load i32, i32* %from.addr, align 4, !dbg !15623
  %cmp40 = icmp eq i32 %47, 4, !dbg !15625
  br i1 %cmp40, label %if.then42, label %if.else58, !dbg !15626

if.then42:                                        ; preds = %if.end39
  store i32 1, i32* %distr, align 4, !dbg !15627
  %48 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15629
  %seed43 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %48, i32 0, i32 23, !dbg !15630
  %49 = load i32, i32* %seed43, align 4, !dbg !15630
  %add44 = add nsw i32 31415926, %49, !dbg !15631
  %50 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15632
  %child_seed45 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %50, i32 0, i32 24, !dbg !15633
  %51 = load i32, i32* %child_seed45, align 8, !dbg !15633
  %add46 = add nsw i32 %add44, %51, !dbg !15634
  call void @BLI_srandom(i32 %add46), !dbg !15635
  %52 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm.addr, align 8, !dbg !15636
  store %struct.DerivedMesh* %52, %struct.DerivedMesh** %dm, align 8, !dbg !15637
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15638
  call void @DM_ensure_tessface(%struct.DerivedMesh* %53), !dbg !15639
  store i32 1, i32* %children, align 4, !dbg !15640
  %54 = load i32, i32* %totpart, align 4, !dbg !15641
  %call47 = call %struct.KDTree* @BLI_kdtree_new(i32 %54), !dbg !15642
  store %struct.KDTree* %call47, %struct.KDTree** %tree, align 8, !dbg !15643
  store i32 0, i32* %p, align 4, !dbg !15644
  %55 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15646
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %55, i32 0, i32 3, !dbg !15647
  %56 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !15647
  store %struct.ParticleData* %56, %struct.ParticleData** %pa, align 8, !dbg !15648
  br label %for.cond, !dbg !15649

for.cond:                                         ; preds = %for.inc, %if.then42
  %57 = load i32, i32* %p, align 4, !dbg !15650
  %58 = load i32, i32* %totpart, align 4, !dbg !15652
  %cmp48 = icmp slt i32 %57, %58, !dbg !15653
  br i1 %cmp48, label %for.body, label %for.end, !dbg !15654

for.body:                                         ; preds = %for.cond
  %59 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15655
  %60 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !15657
  %from50 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %60, i32 0, i32 8, !dbg !15658
  %61 = load i16, i16* %from50, align 2, !dbg !15658
  %conv51 = sext i16 %61 to i32, !dbg !15657
  %62 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15659
  %num = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %62, i32 0, i32 9, !dbg !15660
  %63 = load i32, i32* %num, align 8, !dbg !15660
  %64 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15661
  %num_dmcache = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %64, i32 0, i32 10, !dbg !15662
  %65 = load i32, i32* %num_dmcache, align 4, !dbg !15662
  %66 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15663
  %fuv = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %66, i32 0, i32 11, !dbg !15664
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %fuv, i64 0, i64 0, !dbg !15663
  %67 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15665
  %foffset = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %67, i32 0, i32 12, !dbg !15666
  %68 = load float, float* %foffset, align 8, !dbg !15666
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !15667
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !15668
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %orco, i64 0, i64 0, !dbg !15669
  call void @psys_particle_on_dm(%struct.DerivedMesh* %59, i32 %conv51, i32 %63, i32 %65, float* %arraydecay, float %68, float* %arraydecay52, float* %arraydecay53, float* null, float* null, float* %arraydecay54, float* null), !dbg !15670
  %69 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15671
  %data55 = getelementptr inbounds %struct.Object, %struct.Object* %69, i32 0, i32 19, !dbg !15672
  %70 = load i8*, i8** %data55, align 8, !dbg !15672
  %71 = bitcast i8* %70 to %struct.Mesh*, !dbg !15673
  call void @BKE_mesh_orco_verts_transform(%struct.Mesh* %71, [3 x float]* %orco, i32 1, i32 1), !dbg !15674
  %72 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15675
  %73 = load i32, i32* %p, align 4, !dbg !15676
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %orco, i64 0, i64 0, !dbg !15677
  call void @BLI_kdtree_insert(%struct.KDTree* %72, i32 %73, float* %arraydecay56), !dbg !15678
  br label %for.inc, !dbg !15679

for.inc:                                          ; preds = %for.body
  %74 = load i32, i32* %p, align 4, !dbg !15680
  %inc = add nsw i32 %74, 1, !dbg !15680
  store i32 %inc, i32* %p, align 4, !dbg !15680
  %75 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !15681
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %75, i32 1, !dbg !15681
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !15681
  br label %for.cond, !dbg !15682, !llvm.loop !15683

for.end:                                          ; preds = %for.cond
  %76 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15685
  call void @BLI_kdtree_balance(%struct.KDTree* %76), !dbg !15686
  %77 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !15687
  %78 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15688
  %call57 = call i32 @get_psys_tot_child(%struct.Scene* %77, %struct.ParticleSystem* %78), !dbg !15689
  store i32 %call57, i32* %totpart, align 4, !dbg !15690
  store i32 1, i32* %from.addr, align 4, !dbg !15691
  store i32 1, i32* %cfrom, align 4, !dbg !15692
  br label %if.end109, !dbg !15693

if.else58:                                        ; preds = %if.end39
  %79 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !15694
  %distr59 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %79, i32 0, i32 9, !dbg !15696
  %80 = load i16, i16* %distr59, align 4, !dbg !15696
  %conv60 = sext i16 %80 to i32, !dbg !15694
  store i32 %conv60, i32* %distr, align 4, !dbg !15697
  %81 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15698
  %seed61 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %81, i32 0, i32 23, !dbg !15699
  %82 = load i32, i32* %seed61, align 4, !dbg !15699
  %add62 = add nsw i32 31415926, %82, !dbg !15700
  call void @BLI_srandom(i32 %add62), !dbg !15701
  %83 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15702
  %part63 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %83, i32 0, i32 2, !dbg !15704
  %84 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part63, align 8, !dbg !15704
  %use_modifier_stack = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %84, i32 0, i32 130, !dbg !15705
  %85 = load i16, i16* %use_modifier_stack, align 8, !dbg !15705
  %tobool64 = icmp ne i16 %85, 0, !dbg !15702
  br i1 %tobool64, label %if.then65, label %if.else66, !dbg !15706

if.then65:                                        ; preds = %if.else58
  %86 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm.addr, align 8, !dbg !15707
  store %struct.DerivedMesh* %86, %struct.DerivedMesh** %dm, align 8, !dbg !15708
  br label %if.end69, !dbg !15709

if.else66:                                        ; preds = %if.else58
  %87 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15710
  %data67 = getelementptr inbounds %struct.Object, %struct.Object* %87, i32 0, i32 19, !dbg !15711
  %88 = load i8*, i8** %data67, align 8, !dbg !15711
  %89 = bitcast i8* %88 to %struct.Mesh*, !dbg !15712
  %call68 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %89), !dbg !15713
  store %struct.DerivedMesh* %call68, %struct.DerivedMesh** %dm, align 8, !dbg !15714
  br label %if.end69

if.end69:                                         ; preds = %if.else66, %if.then65
  %90 = load i32, i32* %from.addr, align 4, !dbg !15715
  %cmp70 = icmp ne i32 %90, 0, !dbg !15717
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !15718

if.then72:                                        ; preds = %if.end69
  %91 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15719
  call void @DM_ensure_tessface(%struct.DerivedMesh* %91), !dbg !15721
  br label %if.end73, !dbg !15722

if.end73:                                         ; preds = %if.then72, %if.end69
  %92 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15723
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %92, i32 0, i32 0, !dbg !15725
  %call74 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %vertData, i32 14), !dbg !15726
  %tobool75 = icmp ne i8 %call74, 0, !dbg !15726
  br i1 %tobool75, label %if.end78, label %if.then76, !dbg !15727

if.then76:                                        ; preds = %if.end73
  %93 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15728
  %94 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15729
  %call77 = call [3 x float]* @BKE_mesh_orco_verts_get(%struct.Object* %94), !dbg !15730
  %95 = bitcast [3 x float]* %call77 to i8*, !dbg !15730
  call void @DM_add_vert_layer(%struct.DerivedMesh* %93, i32 14, i32 0, i8* %95), !dbg !15731
  br label %if.end78, !dbg !15731

if.end78:                                         ; preds = %if.then76, %if.end73
  %96 = load i32, i32* %from.addr, align 4, !dbg !15732
  %cmp79 = icmp eq i32 %96, 0, !dbg !15734
  br i1 %cmp79, label %if.then81, label %if.end108, !dbg !15735

if.then81:                                        ; preds = %if.end78
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !15736, metadata !DIExpression()), !dbg !15738
  %97 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15739
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %97, i32 0, i32 50, !dbg !15740
  %98 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !15740
  %99 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15741
  %call82 = call i8* %98(%struct.DerivedMesh* %99, i32 0), !dbg !15739
  %100 = bitcast i8* %call82 to %struct.MVert*, !dbg !15739
  store %struct.MVert* %100, %struct.MVert** %mv, align 8, !dbg !15738
  call void @llvm.dbg.declare(metadata [3 x float]** %orcodata, metadata !15742, metadata !DIExpression()), !dbg !15743
  %101 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15744
  %getVertDataArray83 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %101, i32 0, i32 50, !dbg !15745
  %102 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray83, align 8, !dbg !15745
  %103 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15746
  %call84 = call i8* %102(%struct.DerivedMesh* %103, i32 14), !dbg !15744
  %104 = bitcast i8* %call84 to [3 x float]*, !dbg !15744
  store [3 x float]* %104, [3 x float]** %orcodata, align 8, !dbg !15743
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !15747, metadata !DIExpression()), !dbg !15748
  %105 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15749
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %105, i32 0, i32 23, !dbg !15750
  %106 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !15750
  %107 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15751
  %call85 = call i32 %106(%struct.DerivedMesh* %107), !dbg !15749
  store i32 %call85, i32* %totvert, align 4, !dbg !15748
  %108 = load i32, i32* %totvert, align 4, !dbg !15752
  %call86 = call %struct.KDTree* @BLI_kdtree_new(i32 %108), !dbg !15753
  store %struct.KDTree* %call86, %struct.KDTree** %tree, align 8, !dbg !15754
  store i32 0, i32* %p, align 4, !dbg !15755
  br label %for.cond87, !dbg !15757

for.cond87:                                       ; preds = %for.inc105, %if.then81
  %109 = load i32, i32* %p, align 4, !dbg !15758
  %110 = load i32, i32* %totvert, align 4, !dbg !15760
  %cmp88 = icmp slt i32 %109, %110, !dbg !15761
  br i1 %cmp88, label %for.body90, label %for.end107, !dbg !15762

for.body90:                                       ; preds = %for.cond87
  %111 = load [3 x float]*, [3 x float]** %orcodata, align 8, !dbg !15763
  %tobool91 = icmp ne [3 x float]* %111, null, !dbg !15763
  br i1 %tobool91, label %if.then92, label %if.else97, !dbg !15766

if.then92:                                        ; preds = %for.body90
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !15767
  %112 = load [3 x float]*, [3 x float]** %orcodata, align 8, !dbg !15769
  %113 = load i32, i32* %p, align 4, !dbg !15770
  %idxprom = sext i32 %113 to i64, !dbg !15769
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %112, i64 %idxprom, !dbg !15769
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx94, i64 0, i64 0, !dbg !15769
  call void @copy_v3_v3(float* %arraydecay93, float* %arraydecay95), !dbg !15771
  %114 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15772
  %data96 = getelementptr inbounds %struct.Object, %struct.Object* %114, i32 0, i32 19, !dbg !15773
  %115 = load i8*, i8** %data96, align 8, !dbg !15773
  %116 = bitcast i8* %115 to %struct.Mesh*, !dbg !15774
  call void @BKE_mesh_orco_verts_transform(%struct.Mesh* %116, [3 x float]* %co, i32 1, i32 1), !dbg !15775
  br label %if.end103, !dbg !15776

if.else97:                                        ; preds = %for.body90
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !15777
  %117 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !15778
  %118 = load i32, i32* %p, align 4, !dbg !15779
  %idxprom99 = sext i32 %118 to i64, !dbg !15778
  %arrayidx100 = getelementptr inbounds %struct.MVert, %struct.MVert* %117, i64 %idxprom99, !dbg !15778
  %co101 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx100, i32 0, i32 0, !dbg !15780
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %co101, i64 0, i64 0, !dbg !15778
  call void @copy_v3_v3(float* %arraydecay98, float* %arraydecay102), !dbg !15781
  br label %if.end103

if.end103:                                        ; preds = %if.else97, %if.then92
  %119 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15782
  %120 = load i32, i32* %p, align 4, !dbg !15783
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !15784
  call void @BLI_kdtree_insert(%struct.KDTree* %119, i32 %120, float* %arraydecay104), !dbg !15785
  br label %for.inc105, !dbg !15786

for.inc105:                                       ; preds = %if.end103
  %121 = load i32, i32* %p, align 4, !dbg !15787
  %inc106 = add nsw i32 %121, 1, !dbg !15787
  store i32 %inc106, i32* %p, align 4, !dbg !15787
  br label %for.cond87, !dbg !15788, !llvm.loop !15789

for.end107:                                       ; preds = %for.cond87
  %122 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15791
  call void @BLI_kdtree_balance(%struct.KDTree* %122), !dbg !15792
  br label %if.end108, !dbg !15793

if.end108:                                        ; preds = %for.end107, %if.end78
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %for.end
  %123 = load i32, i32* %from.addr, align 4, !dbg !15794
  %cmp110 = icmp eq i32 %123, 0, !dbg !15795
  br i1 %cmp110, label %cond.true, label %cond.false, !dbg !15796

cond.true:                                        ; preds = %if.end109
  %124 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15797
  %getNumVerts112 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %124, i32 0, i32 23, !dbg !15798
  %125 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts112, align 8, !dbg !15798
  %126 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15799
  %call113 = call i32 %125(%struct.DerivedMesh* %126), !dbg !15797
  br label %cond.end, !dbg !15796

cond.false:                                       ; preds = %if.end109
  %127 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15800
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %127, i32 0, i32 25, !dbg !15801
  %128 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !15801
  %129 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15802
  %call114 = call i32 %128(%struct.DerivedMesh* %129), !dbg !15800
  br label %cond.end, !dbg !15796

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call113, %cond.true ], [ %call114, %cond.false ], !dbg !15796
  store i32 %cond, i32* %totelem, align 4, !dbg !15803
  %130 = load i32, i32* %totelem, align 4, !dbg !15804
  %cmp115 = icmp eq i32 %130, 0, !dbg !15806
  br i1 %cmp115, label %if.then117, label %if.end129, !dbg !15807

if.then117:                                       ; preds = %cond.end
  %131 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !15808
  %132 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !15810
  %133 = load i32, i32* %children, align 4, !dbg !15811
  %tobool118 = icmp ne i32 %133, 0, !dbg !15811
  %134 = zext i1 %tobool118 to i64, !dbg !15811
  %cond119 = select i1 %tobool118, i32 4, i32 0, !dbg !15811
  call void @distribute_invalid(%struct.Scene* %131, %struct.ParticleSystem* %132, i32 %cond119), !dbg !15812
  %135 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !15813
  %and = and i32 %135, 1, !dbg !15815
  %tobool120 = icmp ne i32 %and, 0, !dbg !15815
  br i1 %tobool120, label %if.then121, label %if.end123, !dbg !15816

if.then121:                                       ; preds = %if.then117
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15817
  %call122 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %136, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15, i64 0, i64 0)), !dbg !15818
  br label %if.end123, !dbg !15818

if.end123:                                        ; preds = %if.then121, %if.then117
  %137 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15819
  %138 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm.addr, align 8, !dbg !15821
  %cmp124 = icmp ne %struct.DerivedMesh* %137, %138, !dbg !15822
  br i1 %cmp124, label %if.then126, label %if.end128, !dbg !15823

if.then126:                                       ; preds = %if.end123
  %139 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15824
  %release127 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %139, i32 0, i32 95, !dbg !15825
  %140 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release127, align 8, !dbg !15825
  %141 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15826
  call void %140(%struct.DerivedMesh* %141), !dbg !15824
  br label %if.end128, !dbg !15824

if.end128:                                        ; preds = %if.then126, %if.end123
  %142 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15827
  call void @BLI_kdtree_free(%struct.KDTree* %142), !dbg !15828
  store i32 0, i32* %retval, align 4, !dbg !15829
  br label %return, !dbg !15829

if.end129:                                        ; preds = %cond.end
  %143 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !15830
  %144 = load i32, i32* %totelem, align 4, !dbg !15831
  %conv130 = sext i32 %144 to i64, !dbg !15831
  %mul = mul i64 4, %conv130, !dbg !15832
  %call131 = call i8* %143(i64 %mul, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0)), !dbg !15830
  %145 = bitcast i8* %call131 to float*, !dbg !15830
  store float* %145, float** %element_weight, align 8, !dbg !15833
  %146 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !15834
  %147 = load i32, i32* %totpart, align 4, !dbg !15835
  %conv132 = sext i32 %147 to i64, !dbg !15835
  %mul133 = mul i64 4, %conv132, !dbg !15836
  %call134 = call i8* %146(i64 %mul133, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0)), !dbg !15834
  %148 = bitcast i8* %call134 to i32*, !dbg !15834
  store i32* %148, i32** %particle_element, align 8, !dbg !15837
  %149 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !15838
  %150 = load i32, i32* %totelem, align 4, !dbg !15839
  %add135 = add nsw i32 %150, 1, !dbg !15840
  %conv136 = sext i32 %add135 to i64, !dbg !15841
  %mul137 = mul i64 4, %conv136, !dbg !15842
  %call138 = call i8* %149(i64 %mul137, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i64 0, i64 0)), !dbg !15838
  %151 = bitcast i8* %call138 to float*, !dbg !15838
  store float* %151, float** %element_sum, align 8, !dbg !15843
  %152 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !15844
  %153 = load i32, i32* %totelem, align 4, !dbg !15845
  %conv139 = sext i32 %153 to i64, !dbg !15845
  %mul140 = mul i64 4, %conv139, !dbg !15846
  %call141 = call i8* %152(i64 %mul140, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i64 0, i64 0)), !dbg !15844
  %154 = bitcast i8* %call141 to float*, !dbg !15844
  store float* %154, float** %jitter_offset, align 8, !dbg !15847
  %155 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !15848
  %flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %155, i32 0, i32 5, !dbg !15850
  %156 = load i32, i32* %flag, align 8, !dbg !15850
  %and142 = and i32 %156, 256, !dbg !15851
  %tobool143 = icmp ne i32 %and142, 0, !dbg !15851
  br i1 %tobool143, label %land.lhs.true146, label %lor.lhs.false144, !dbg !15852

lor.lhs.false144:                                 ; preds = %if.end129
  %157 = load i32, i32* %children, align 4, !dbg !15853
  %tobool145 = icmp ne i32 %157, 0, !dbg !15853
  br i1 %tobool145, label %land.lhs.true146, label %if.else252, !dbg !15854

land.lhs.true146:                                 ; preds = %lor.lhs.false144, %if.end129
  %158 = load i32, i32* %from.addr, align 4, !dbg !15855
  %cmp147 = icmp ne i32 %158, 0, !dbg !15856
  br i1 %cmp147, label %if.then149, label %if.else252, !dbg !15857

if.then149:                                       ; preds = %land.lhs.true146
  call void @llvm.dbg.declare(metadata %struct.MVert** %v1, metadata !15858, metadata !DIExpression()), !dbg !15860
  call void @llvm.dbg.declare(metadata %struct.MVert** %v2, metadata !15861, metadata !DIExpression()), !dbg !15862
  call void @llvm.dbg.declare(metadata %struct.MVert** %v3, metadata !15863, metadata !DIExpression()), !dbg !15864
  call void @llvm.dbg.declare(metadata %struct.MVert** %v4, metadata !15865, metadata !DIExpression()), !dbg !15866
  call void @llvm.dbg.declare(metadata float* %totarea, metadata !15867, metadata !DIExpression()), !dbg !15868
  store float 0.000000e+00, float* %totarea, align 4, !dbg !15868
  call void @llvm.dbg.declare(metadata [3 x float]* %co1, metadata !15869, metadata !DIExpression()), !dbg !15870
  call void @llvm.dbg.declare(metadata [3 x float]* %co2, metadata !15871, metadata !DIExpression()), !dbg !15872
  call void @llvm.dbg.declare(metadata [3 x float]* %co3, metadata !15873, metadata !DIExpression()), !dbg !15874
  call void @llvm.dbg.declare(metadata [3 x float]* %co4, metadata !15875, metadata !DIExpression()), !dbg !15876
  call void @llvm.dbg.declare(metadata [3 x float]** %orcodata150, metadata !15877, metadata !DIExpression()), !dbg !15878
  %159 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15879
  %getVertDataArray151 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %159, i32 0, i32 50, !dbg !15880
  %160 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray151, align 8, !dbg !15880
  %161 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15881
  %call152 = call i8* %160(%struct.DerivedMesh* %161, i32 14), !dbg !15879
  %162 = bitcast i8* %call152 to [3 x float]*, !dbg !15879
  store [3 x float]* %162, [3 x float]** %orcodata150, align 8, !dbg !15882
  store i32 0, i32* %i, align 4, !dbg !15883
  br label %for.cond153, !dbg !15885

for.cond153:                                      ; preds = %for.inc239, %if.then149
  %163 = load i32, i32* %i, align 4, !dbg !15886
  %164 = load i32, i32* %totelem, align 4, !dbg !15888
  %cmp154 = icmp slt i32 %163, %164, !dbg !15889
  br i1 %cmp154, label %for.body156, label %for.end241, !dbg !15890

for.body156:                                      ; preds = %for.cond153
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !15891, metadata !DIExpression()), !dbg !15893
  %165 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15894
  %getTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %165, i32 0, i32 48, !dbg !15895
  %166 = load i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)** %getTessFaceData, align 8, !dbg !15895
  %167 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15896
  %168 = load i32, i32* %i, align 4, !dbg !15897
  %call157 = call i8* %166(%struct.DerivedMesh* %167, i32 %168, i32 4), !dbg !15894
  %169 = bitcast i8* %call157 to %struct.MFace*, !dbg !15894
  store %struct.MFace* %169, %struct.MFace** %mf, align 8, !dbg !15893
  %170 = load [3 x float]*, [3 x float]** %orcodata150, align 8, !dbg !15898
  %tobool158 = icmp ne [3 x float]* %170, null, !dbg !15898
  br i1 %tobool158, label %if.then159, label %if.else188, !dbg !15900

if.then159:                                       ; preds = %for.body156
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !15901
  %171 = load [3 x float]*, [3 x float]** %orcodata150, align 8, !dbg !15903
  %172 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15904
  %v1161 = getelementptr inbounds %struct.MFace, %struct.MFace* %172, i32 0, i32 0, !dbg !15905
  %173 = load i32, i32* %v1161, align 4, !dbg !15905
  %idxprom162 = zext i32 %173 to i64, !dbg !15903
  %arrayidx163 = getelementptr inbounds [3 x float], [3 x float]* %171, i64 %idxprom162, !dbg !15903
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx163, i64 0, i64 0, !dbg !15903
  call void @copy_v3_v3(float* %arraydecay160, float* %arraydecay164), !dbg !15906
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !15907
  %174 = load [3 x float]*, [3 x float]** %orcodata150, align 8, !dbg !15908
  %175 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15909
  %v2166 = getelementptr inbounds %struct.MFace, %struct.MFace* %175, i32 0, i32 1, !dbg !15910
  %176 = load i32, i32* %v2166, align 4, !dbg !15910
  %idxprom167 = zext i32 %176 to i64, !dbg !15908
  %arrayidx168 = getelementptr inbounds [3 x float], [3 x float]* %174, i64 %idxprom167, !dbg !15908
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx168, i64 0, i64 0, !dbg !15908
  call void @copy_v3_v3(float* %arraydecay165, float* %arraydecay169), !dbg !15911
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %co3, i64 0, i64 0, !dbg !15912
  %177 = load [3 x float]*, [3 x float]** %orcodata150, align 8, !dbg !15913
  %178 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15914
  %v3171 = getelementptr inbounds %struct.MFace, %struct.MFace* %178, i32 0, i32 2, !dbg !15915
  %179 = load i32, i32* %v3171, align 4, !dbg !15915
  %idxprom172 = zext i32 %179 to i64, !dbg !15913
  %arrayidx173 = getelementptr inbounds [3 x float], [3 x float]* %177, i64 %idxprom172, !dbg !15913
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx173, i64 0, i64 0, !dbg !15913
  call void @copy_v3_v3(float* %arraydecay170, float* %arraydecay174), !dbg !15916
  %180 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15917
  %data175 = getelementptr inbounds %struct.Object, %struct.Object* %180, i32 0, i32 19, !dbg !15918
  %181 = load i8*, i8** %data175, align 8, !dbg !15918
  %182 = bitcast i8* %181 to %struct.Mesh*, !dbg !15919
  call void @BKE_mesh_orco_verts_transform(%struct.Mesh* %182, [3 x float]* %co1, i32 1, i32 1), !dbg !15920
  %183 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15921
  %data176 = getelementptr inbounds %struct.Object, %struct.Object* %183, i32 0, i32 19, !dbg !15922
  %184 = load i8*, i8** %data176, align 8, !dbg !15922
  %185 = bitcast i8* %184 to %struct.Mesh*, !dbg !15923
  call void @BKE_mesh_orco_verts_transform(%struct.Mesh* %185, [3 x float]* %co2, i32 1, i32 1), !dbg !15924
  %186 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15925
  %data177 = getelementptr inbounds %struct.Object, %struct.Object* %186, i32 0, i32 19, !dbg !15926
  %187 = load i8*, i8** %data177, align 8, !dbg !15926
  %188 = bitcast i8* %187 to %struct.Mesh*, !dbg !15927
  call void @BKE_mesh_orco_verts_transform(%struct.Mesh* %188, [3 x float]* %co3, i32 1, i32 1), !dbg !15928
  %189 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15929
  %v4178 = getelementptr inbounds %struct.MFace, %struct.MFace* %189, i32 0, i32 3, !dbg !15931
  %190 = load i32, i32* %v4178, align 4, !dbg !15931
  %tobool179 = icmp ne i32 %190, 0, !dbg !15929
  br i1 %tobool179, label %if.then180, label %if.end187, !dbg !15932

if.then180:                                       ; preds = %if.then159
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %co4, i64 0, i64 0, !dbg !15933
  %191 = load [3 x float]*, [3 x float]** %orcodata150, align 8, !dbg !15935
  %192 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15936
  %v4182 = getelementptr inbounds %struct.MFace, %struct.MFace* %192, i32 0, i32 3, !dbg !15937
  %193 = load i32, i32* %v4182, align 4, !dbg !15937
  %idxprom183 = zext i32 %193 to i64, !dbg !15935
  %arrayidx184 = getelementptr inbounds [3 x float], [3 x float]* %191, i64 %idxprom183, !dbg !15935
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx184, i64 0, i64 0, !dbg !15935
  call void @copy_v3_v3(float* %arraydecay181, float* %arraydecay185), !dbg !15938
  %194 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15939
  %data186 = getelementptr inbounds %struct.Object, %struct.Object* %194, i32 0, i32 19, !dbg !15940
  %195 = load i8*, i8** %data186, align 8, !dbg !15940
  %196 = bitcast i8* %195 to %struct.Mesh*, !dbg !15941
  call void @BKE_mesh_orco_verts_transform(%struct.Mesh* %196, [3 x float]* %co4, i32 1, i32 1), !dbg !15942
  br label %if.end187, !dbg !15943

if.end187:                                        ; preds = %if.then180, %if.then159
  br label %if.end216, !dbg !15944

if.else188:                                       ; preds = %for.body156
  %197 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15945
  %getVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %197, i32 0, i32 46, !dbg !15947
  %198 = load i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)** %getVertData, align 8, !dbg !15947
  %199 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15948
  %200 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15949
  %v1189 = getelementptr inbounds %struct.MFace, %struct.MFace* %200, i32 0, i32 0, !dbg !15950
  %201 = load i32, i32* %v1189, align 4, !dbg !15950
  %call190 = call i8* %198(%struct.DerivedMesh* %199, i32 %201, i32 0), !dbg !15945
  %202 = bitcast i8* %call190 to %struct.MVert*, !dbg !15951
  store %struct.MVert* %202, %struct.MVert** %v1, align 8, !dbg !15952
  %203 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15953
  %getVertData191 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %203, i32 0, i32 46, !dbg !15954
  %204 = load i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)** %getVertData191, align 8, !dbg !15954
  %205 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15955
  %206 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15956
  %v2192 = getelementptr inbounds %struct.MFace, %struct.MFace* %206, i32 0, i32 1, !dbg !15957
  %207 = load i32, i32* %v2192, align 4, !dbg !15957
  %call193 = call i8* %204(%struct.DerivedMesh* %205, i32 %207, i32 0), !dbg !15953
  %208 = bitcast i8* %call193 to %struct.MVert*, !dbg !15958
  store %struct.MVert* %208, %struct.MVert** %v2, align 8, !dbg !15959
  %209 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15960
  %getVertData194 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %209, i32 0, i32 46, !dbg !15961
  %210 = load i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)** %getVertData194, align 8, !dbg !15961
  %211 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15962
  %212 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15963
  %v3195 = getelementptr inbounds %struct.MFace, %struct.MFace* %212, i32 0, i32 2, !dbg !15964
  %213 = load i32, i32* %v3195, align 4, !dbg !15964
  %call196 = call i8* %210(%struct.DerivedMesh* %211, i32 %213, i32 0), !dbg !15960
  %214 = bitcast i8* %call196 to %struct.MVert*, !dbg !15965
  store %struct.MVert* %214, %struct.MVert** %v3, align 8, !dbg !15966
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !15967
  %215 = load %struct.MVert*, %struct.MVert** %v1, align 8, !dbg !15968
  %co198 = getelementptr inbounds %struct.MVert, %struct.MVert* %215, i32 0, i32 0, !dbg !15969
  %arraydecay199 = getelementptr inbounds [3 x float], [3 x float]* %co198, i64 0, i64 0, !dbg !15968
  call void @copy_v3_v3(float* %arraydecay197, float* %arraydecay199), !dbg !15970
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !15971
  %216 = load %struct.MVert*, %struct.MVert** %v2, align 8, !dbg !15972
  %co201 = getelementptr inbounds %struct.MVert, %struct.MVert* %216, i32 0, i32 0, !dbg !15973
  %arraydecay202 = getelementptr inbounds [3 x float], [3 x float]* %co201, i64 0, i64 0, !dbg !15972
  call void @copy_v3_v3(float* %arraydecay200, float* %arraydecay202), !dbg !15974
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %co3, i64 0, i64 0, !dbg !15975
  %217 = load %struct.MVert*, %struct.MVert** %v3, align 8, !dbg !15976
  %co204 = getelementptr inbounds %struct.MVert, %struct.MVert* %217, i32 0, i32 0, !dbg !15977
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %co204, i64 0, i64 0, !dbg !15976
  call void @copy_v3_v3(float* %arraydecay203, float* %arraydecay205), !dbg !15978
  %218 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15979
  %v4206 = getelementptr inbounds %struct.MFace, %struct.MFace* %218, i32 0, i32 3, !dbg !15981
  %219 = load i32, i32* %v4206, align 4, !dbg !15981
  %tobool207 = icmp ne i32 %219, 0, !dbg !15979
  br i1 %tobool207, label %if.then208, label %if.end215, !dbg !15982

if.then208:                                       ; preds = %if.else188
  %220 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15983
  %getVertData209 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %220, i32 0, i32 46, !dbg !15985
  %221 = load i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)** %getVertData209, align 8, !dbg !15985
  %222 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15986
  %223 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15987
  %v4210 = getelementptr inbounds %struct.MFace, %struct.MFace* %223, i32 0, i32 3, !dbg !15988
  %224 = load i32, i32* %v4210, align 4, !dbg !15988
  %call211 = call i8* %221(%struct.DerivedMesh* %222, i32 %224, i32 0), !dbg !15983
  %225 = bitcast i8* %call211 to %struct.MVert*, !dbg !15989
  store %struct.MVert* %225, %struct.MVert** %v4, align 8, !dbg !15990
  %arraydecay212 = getelementptr inbounds [3 x float], [3 x float]* %co4, i64 0, i64 0, !dbg !15991
  %226 = load %struct.MVert*, %struct.MVert** %v4, align 8, !dbg !15992
  %co213 = getelementptr inbounds %struct.MVert, %struct.MVert* %226, i32 0, i32 0, !dbg !15993
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %co213, i64 0, i64 0, !dbg !15992
  call void @copy_v3_v3(float* %arraydecay212, float* %arraydecay214), !dbg !15994
  br label %if.end215, !dbg !15995

if.end215:                                        ; preds = %if.then208, %if.else188
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %if.end187
  %227 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !15996
  %v4217 = getelementptr inbounds %struct.MFace, %struct.MFace* %227, i32 0, i32 3, !dbg !15997
  %228 = load i32, i32* %v4217, align 4, !dbg !15997
  %tobool218 = icmp ne i32 %228, 0, !dbg !15996
  br i1 %tobool218, label %cond.true219, label %cond.false225, !dbg !15996

cond.true219:                                     ; preds = %if.end216
  %arraydecay220 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !15998
  %arraydecay221 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !15999
  %arraydecay222 = getelementptr inbounds [3 x float], [3 x float]* %co3, i64 0, i64 0, !dbg !16000
  %arraydecay223 = getelementptr inbounds [3 x float], [3 x float]* %co4, i64 0, i64 0, !dbg !16001
  %call224 = call float @area_quad_v3(float* %arraydecay220, float* %arraydecay221, float* %arraydecay222, float* %arraydecay223), !dbg !16002
  br label %cond.end230, !dbg !15996

cond.false225:                                    ; preds = %if.end216
  %arraydecay226 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !16003
  %arraydecay227 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !16004
  %arraydecay228 = getelementptr inbounds [3 x float], [3 x float]* %co3, i64 0, i64 0, !dbg !16005
  %call229 = call float @area_tri_v3(float* %arraydecay226, float* %arraydecay227, float* %arraydecay228), !dbg !16006
  br label %cond.end230, !dbg !15996

cond.end230:                                      ; preds = %cond.false225, %cond.true219
  %cond231 = phi float [ %call224, %cond.true219 ], [ %call229, %cond.false225 ], !dbg !15996
  store float %cond231, float* %cur, align 4, !dbg !16007
  %229 = load float, float* %cur, align 4, !dbg !16008
  %230 = load float, float* %maxweight, align 4, !dbg !16010
  %cmp232 = fcmp ogt float %229, %230, !dbg !16011
  br i1 %cmp232, label %if.then234, label %if.end235, !dbg !16012

if.then234:                                       ; preds = %cond.end230
  %231 = load float, float* %cur, align 4, !dbg !16013
  store float %231, float* %maxweight, align 4, !dbg !16014
  br label %if.end235, !dbg !16015

if.end235:                                        ; preds = %if.then234, %cond.end230
  %232 = load float, float* %cur, align 4, !dbg !16016
  %233 = load float*, float** %element_weight, align 8, !dbg !16017
  %234 = load i32, i32* %i, align 4, !dbg !16018
  %idxprom236 = sext i32 %234 to i64, !dbg !16017
  %arrayidx237 = getelementptr inbounds float, float* %233, i64 %idxprom236, !dbg !16017
  store float %232, float* %arrayidx237, align 4, !dbg !16019
  %235 = load float, float* %cur, align 4, !dbg !16020
  %236 = load float, float* %totarea, align 4, !dbg !16021
  %add238 = fadd float %236, %235, !dbg !16021
  store float %add238, float* %totarea, align 4, !dbg !16021
  br label %for.inc239, !dbg !16022

for.inc239:                                       ; preds = %if.end235
  %237 = load i32, i32* %i, align 4, !dbg !16023
  %inc240 = add nsw i32 %237, 1, !dbg !16023
  store i32 %inc240, i32* %i, align 4, !dbg !16023
  br label %for.cond153, !dbg !16024, !llvm.loop !16025

for.end241:                                       ; preds = %for.cond153
  store i32 0, i32* %i, align 4, !dbg !16027
  br label %for.cond242, !dbg !16029

for.cond242:                                      ; preds = %for.inc248, %for.end241
  %238 = load i32, i32* %i, align 4, !dbg !16030
  %239 = load i32, i32* %totelem, align 4, !dbg !16032
  %cmp243 = icmp slt i32 %238, %239, !dbg !16033
  br i1 %cmp243, label %for.body245, label %for.end250, !dbg !16034

for.body245:                                      ; preds = %for.cond242
  %240 = load float, float* %totarea, align 4, !dbg !16035
  %241 = load float*, float** %element_weight, align 8, !dbg !16036
  %242 = load i32, i32* %i, align 4, !dbg !16037
  %idxprom246 = sext i32 %242 to i64, !dbg !16036
  %arrayidx247 = getelementptr inbounds float, float* %241, i64 %idxprom246, !dbg !16036
  %243 = load float, float* %arrayidx247, align 4, !dbg !16038
  %div = fdiv float %243, %240, !dbg !16038
  store float %div, float* %arrayidx247, align 4, !dbg !16038
  br label %for.inc248, !dbg !16036

for.inc248:                                       ; preds = %for.body245
  %244 = load i32, i32* %i, align 4, !dbg !16039
  %inc249 = add nsw i32 %244, 1, !dbg !16039
  store i32 %inc249, i32* %i, align 4, !dbg !16039
  br label %for.cond242, !dbg !16040, !llvm.loop !16041

for.end250:                                       ; preds = %for.cond242
  %245 = load float, float* %totarea, align 4, !dbg !16043
  %246 = load float, float* %maxweight, align 4, !dbg !16044
  %div251 = fdiv float %246, %245, !dbg !16044
  store float %div251, float* %maxweight, align 4, !dbg !16044
  br label %if.end270, !dbg !16045

if.else252:                                       ; preds = %land.lhs.true146, %lor.lhs.false144
  call void @llvm.dbg.declare(metadata float* %min, metadata !16046, metadata !DIExpression()), !dbg !16048
  %247 = load i32, i32* %totelem, align 4, !dbg !16049
  %248 = load i32, i32* %totpart, align 4, !dbg !16049
  %cmp253 = icmp slt i32 %247, %248, !dbg !16049
  br i1 %cmp253, label %cond.true255, label %cond.false256, !dbg !16049

cond.true255:                                     ; preds = %if.else252
  %249 = load i32, i32* %totelem, align 4, !dbg !16049
  br label %cond.end257, !dbg !16049

cond.false256:                                    ; preds = %if.else252
  %250 = load i32, i32* %totpart, align 4, !dbg !16049
  br label %cond.end257, !dbg !16049

cond.end257:                                      ; preds = %cond.false256, %cond.true255
  %cond258 = phi i32 [ %249, %cond.true255 ], [ %250, %cond.false256 ], !dbg !16049
  %conv259 = sitofp i32 %cond258 to float, !dbg !16050
  %div260 = fdiv float 1.000000e+00, %conv259, !dbg !16051
  store float %div260, float* %min, align 4, !dbg !16048
  store i32 0, i32* %i, align 4, !dbg !16052
  br label %for.cond261, !dbg !16054

for.cond261:                                      ; preds = %for.inc267, %cond.end257
  %251 = load i32, i32* %i, align 4, !dbg !16055
  %252 = load i32, i32* %totelem, align 4, !dbg !16057
  %cmp262 = icmp slt i32 %251, %252, !dbg !16058
  br i1 %cmp262, label %for.body264, label %for.end269, !dbg !16059

for.body264:                                      ; preds = %for.cond261
  %253 = load float, float* %min, align 4, !dbg !16060
  %254 = load float*, float** %element_weight, align 8, !dbg !16061
  %255 = load i32, i32* %i, align 4, !dbg !16062
  %idxprom265 = sext i32 %255 to i64, !dbg !16061
  %arrayidx266 = getelementptr inbounds float, float* %254, i64 %idxprom265, !dbg !16061
  store float %253, float* %arrayidx266, align 4, !dbg !16063
  br label %for.inc267, !dbg !16061

for.inc267:                                       ; preds = %for.body264
  %256 = load i32, i32* %i, align 4, !dbg !16064
  %inc268 = add nsw i32 %256, 1, !dbg !16064
  store i32 %inc268, i32* %i, align 4, !dbg !16064
  br label %for.cond261, !dbg !16065, !llvm.loop !16066

for.end269:                                       ; preds = %for.cond261
  %257 = load float, float* %min, align 4, !dbg !16068
  store float %257, float* %maxweight, align 4, !dbg !16069
  br label %if.end270

if.end270:                                        ; preds = %for.end269, %for.end250
  %258 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !16070
  %259 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16071
  %call271 = call float* @psys_cache_vgroup(%struct.DerivedMesh* %258, %struct.ParticleSystem* %259, i32 0), !dbg !16072
  store float* %call271, float** %vweight, align 8, !dbg !16073
  %260 = load float*, float** %vweight, align 8, !dbg !16074
  %tobool272 = icmp ne float* %260, null, !dbg !16074
  br i1 %tobool272, label %if.then273, label %if.end326, !dbg !16076

if.then273:                                       ; preds = %if.end270
  %261 = load i32, i32* %from.addr, align 4, !dbg !16077
  %cmp274 = icmp eq i32 %261, 0, !dbg !16080
  br i1 %cmp274, label %if.then276, label %if.else289, !dbg !16081

if.then276:                                       ; preds = %if.then273
  store i32 0, i32* %i, align 4, !dbg !16082
  br label %for.cond277, !dbg !16085

for.cond277:                                      ; preds = %for.inc286, %if.then276
  %262 = load i32, i32* %i, align 4, !dbg !16086
  %263 = load i32, i32* %totelem, align 4, !dbg !16088
  %cmp278 = icmp slt i32 %262, %263, !dbg !16089
  br i1 %cmp278, label %for.body280, label %for.end288, !dbg !16090

for.body280:                                      ; preds = %for.cond277
  %264 = load float*, float** %vweight, align 8, !dbg !16091
  %265 = load i32, i32* %i, align 4, !dbg !16092
  %idxprom281 = sext i32 %265 to i64, !dbg !16091
  %arrayidx282 = getelementptr inbounds float, float* %264, i64 %idxprom281, !dbg !16091
  %266 = load float, float* %arrayidx282, align 4, !dbg !16091
  %267 = load float*, float** %element_weight, align 8, !dbg !16093
  %268 = load i32, i32* %i, align 4, !dbg !16094
  %idxprom283 = sext i32 %268 to i64, !dbg !16093
  %arrayidx284 = getelementptr inbounds float, float* %267, i64 %idxprom283, !dbg !16093
  %269 = load float, float* %arrayidx284, align 4, !dbg !16095
  %mul285 = fmul float %269, %266, !dbg !16095
  store float %mul285, float* %arrayidx284, align 4, !dbg !16095
  br label %for.inc286, !dbg !16093

for.inc286:                                       ; preds = %for.body280
  %270 = load i32, i32* %i, align 4, !dbg !16096
  %inc287 = add nsw i32 %270, 1, !dbg !16096
  store i32 %inc287, i32* %i, align 4, !dbg !16096
  br label %for.cond277, !dbg !16097, !llvm.loop !16098

for.end288:                                       ; preds = %for.cond277
  br label %if.end325, !dbg !16100

if.else289:                                       ; preds = %if.then273
  store i32 0, i32* %i, align 4, !dbg !16101
  br label %for.cond290, !dbg !16104

for.cond290:                                      ; preds = %for.inc322, %if.else289
  %271 = load i32, i32* %i, align 4, !dbg !16105
  %272 = load i32, i32* %totelem, align 4, !dbg !16107
  %cmp291 = icmp slt i32 %271, %272, !dbg !16108
  br i1 %cmp291, label %for.body293, label %for.end324, !dbg !16109

for.body293:                                      ; preds = %for.cond290
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf294, metadata !16110, metadata !DIExpression()), !dbg !16112
  %273 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !16113
  %getTessFaceData295 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %273, i32 0, i32 48, !dbg !16114
  %274 = load i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)** %getTessFaceData295, align 8, !dbg !16114
  %275 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !16115
  %276 = load i32, i32* %i, align 4, !dbg !16116
  %call296 = call i8* %274(%struct.DerivedMesh* %275, i32 %276, i32 4), !dbg !16113
  %277 = bitcast i8* %call296 to %struct.MFace*, !dbg !16113
  store %struct.MFace* %277, %struct.MFace** %mf294, align 8, !dbg !16112
  %278 = load float*, float** %vweight, align 8, !dbg !16117
  %279 = load %struct.MFace*, %struct.MFace** %mf294, align 8, !dbg !16118
  %v1297 = getelementptr inbounds %struct.MFace, %struct.MFace* %279, i32 0, i32 0, !dbg !16119
  %280 = load i32, i32* %v1297, align 4, !dbg !16119
  %idxprom298 = zext i32 %280 to i64, !dbg !16117
  %arrayidx299 = getelementptr inbounds float, float* %278, i64 %idxprom298, !dbg !16117
  %281 = load float, float* %arrayidx299, align 4, !dbg !16117
  %282 = load float*, float** %vweight, align 8, !dbg !16120
  %283 = load %struct.MFace*, %struct.MFace** %mf294, align 8, !dbg !16121
  %v2300 = getelementptr inbounds %struct.MFace, %struct.MFace* %283, i32 0, i32 1, !dbg !16122
  %284 = load i32, i32* %v2300, align 4, !dbg !16122
  %idxprom301 = zext i32 %284 to i64, !dbg !16120
  %arrayidx302 = getelementptr inbounds float, float* %282, i64 %idxprom301, !dbg !16120
  %285 = load float, float* %arrayidx302, align 4, !dbg !16120
  %add303 = fadd float %281, %285, !dbg !16123
  %286 = load float*, float** %vweight, align 8, !dbg !16124
  %287 = load %struct.MFace*, %struct.MFace** %mf294, align 8, !dbg !16125
  %v3304 = getelementptr inbounds %struct.MFace, %struct.MFace* %287, i32 0, i32 2, !dbg !16126
  %288 = load i32, i32* %v3304, align 4, !dbg !16126
  %idxprom305 = zext i32 %288 to i64, !dbg !16124
  %arrayidx306 = getelementptr inbounds float, float* %286, i64 %idxprom305, !dbg !16124
  %289 = load float, float* %arrayidx306, align 4, !dbg !16124
  %add307 = fadd float %add303, %289, !dbg !16127
  store float %add307, float* %tweight, align 4, !dbg !16128
  %290 = load %struct.MFace*, %struct.MFace** %mf294, align 8, !dbg !16129
  %v4308 = getelementptr inbounds %struct.MFace, %struct.MFace* %290, i32 0, i32 3, !dbg !16131
  %291 = load i32, i32* %v4308, align 4, !dbg !16131
  %tobool309 = icmp ne i32 %291, 0, !dbg !16129
  br i1 %tobool309, label %if.then310, label %if.else316, !dbg !16132

if.then310:                                       ; preds = %for.body293
  %292 = load float*, float** %vweight, align 8, !dbg !16133
  %293 = load %struct.MFace*, %struct.MFace** %mf294, align 8, !dbg !16135
  %v4311 = getelementptr inbounds %struct.MFace, %struct.MFace* %293, i32 0, i32 3, !dbg !16136
  %294 = load i32, i32* %v4311, align 4, !dbg !16136
  %idxprom312 = zext i32 %294 to i64, !dbg !16133
  %arrayidx313 = getelementptr inbounds float, float* %292, i64 %idxprom312, !dbg !16133
  %295 = load float, float* %arrayidx313, align 4, !dbg !16133
  %296 = load float, float* %tweight, align 4, !dbg !16137
  %add314 = fadd float %296, %295, !dbg !16137
  store float %add314, float* %tweight, align 4, !dbg !16137
  %297 = load float, float* %tweight, align 4, !dbg !16138
  %div315 = fdiv float %297, 4.000000e+00, !dbg !16138
  store float %div315, float* %tweight, align 4, !dbg !16138
  br label %if.end318, !dbg !16139

if.else316:                                       ; preds = %for.body293
  %298 = load float, float* %tweight, align 4, !dbg !16140
  %div317 = fdiv float %298, 3.000000e+00, !dbg !16140
  store float %div317, float* %tweight, align 4, !dbg !16140
  br label %if.end318

if.end318:                                        ; preds = %if.else316, %if.then310
  %299 = load float, float* %tweight, align 4, !dbg !16142
  %300 = load float*, float** %element_weight, align 8, !dbg !16143
  %301 = load i32, i32* %i, align 4, !dbg !16144
  %idxprom319 = sext i32 %301 to i64, !dbg !16143
  %arrayidx320 = getelementptr inbounds float, float* %300, i64 %idxprom319, !dbg !16143
  %302 = load float, float* %arrayidx320, align 4, !dbg !16145
  %mul321 = fmul float %302, %299, !dbg !16145
  store float %mul321, float* %arrayidx320, align 4, !dbg !16145
  br label %for.inc322, !dbg !16146

for.inc322:                                       ; preds = %if.end318
  %303 = load i32, i32* %i, align 4, !dbg !16147
  %inc323 = add nsw i32 %303, 1, !dbg !16147
  store i32 %inc323, i32* %i, align 4, !dbg !16147
  br label %for.cond290, !dbg !16148, !llvm.loop !16149

for.end324:                                       ; preds = %for.cond290
  br label %if.end325

if.end325:                                        ; preds = %for.end324, %for.end288
  %304 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16151
  %305 = load float*, float** %vweight, align 8, !dbg !16152
  %306 = bitcast float* %305 to i8*, !dbg !16152
  call void %304(i8* %306), !dbg !16151
  br label %if.end326, !dbg !16153

if.end326:                                        ; preds = %if.end325, %if.end270
  store float 0.000000e+00, float* %totweight, align 4, !dbg !16154
  store i32 0, i32* %i, align 4, !dbg !16155
  br label %for.cond327, !dbg !16157

for.cond327:                                      ; preds = %for.inc334, %if.end326
  %307 = load i32, i32* %i, align 4, !dbg !16158
  %308 = load i32, i32* %totelem, align 4, !dbg !16160
  %cmp328 = icmp slt i32 %307, %308, !dbg !16161
  br i1 %cmp328, label %for.body330, label %for.end336, !dbg !16162

for.body330:                                      ; preds = %for.cond327
  %309 = load float*, float** %element_weight, align 8, !dbg !16163
  %310 = load i32, i32* %i, align 4, !dbg !16164
  %idxprom331 = sext i32 %310 to i64, !dbg !16163
  %arrayidx332 = getelementptr inbounds float, float* %309, i64 %idxprom331, !dbg !16163
  %311 = load float, float* %arrayidx332, align 4, !dbg !16163
  %312 = load float, float* %totweight, align 4, !dbg !16165
  %add333 = fadd float %312, %311, !dbg !16165
  store float %add333, float* %totweight, align 4, !dbg !16165
  br label %for.inc334, !dbg !16166

for.inc334:                                       ; preds = %for.body330
  %313 = load i32, i32* %i, align 4, !dbg !16167
  %inc335 = add nsw i32 %313, 1, !dbg !16167
  store i32 %inc335, i32* %i, align 4, !dbg !16167
  br label %for.cond327, !dbg !16168, !llvm.loop !16169

for.end336:                                       ; preds = %for.cond327
  %314 = load float, float* %totweight, align 4, !dbg !16171
  %cmp337 = fcmp ogt float %314, 0.000000e+00, !dbg !16172
  br i1 %cmp337, label %cond.true339, label %cond.false341, !dbg !16171

cond.true339:                                     ; preds = %for.end336
  %315 = load float, float* %totweight, align 4, !dbg !16173
  %div340 = fdiv float 1.000000e+00, %315, !dbg !16174
  br label %cond.end342, !dbg !16171

cond.false341:                                    ; preds = %for.end336
  br label %cond.end342, !dbg !16171

cond.end342:                                      ; preds = %cond.false341, %cond.true339
  %cond343 = phi float [ %div340, %cond.true339 ], [ 0.000000e+00, %cond.false341 ], !dbg !16171
  store float %cond343, float* %inv_totweight, align 4, !dbg !16175
  %316 = load float*, float** %element_sum, align 8, !dbg !16176
  %arrayidx344 = getelementptr inbounds float, float* %316, i64 0, !dbg !16176
  store float 0.000000e+00, float* %arrayidx344, align 4, !dbg !16177
  store i32 0, i32* %i, align 4, !dbg !16178
  br label %for.cond345, !dbg !16180

for.cond345:                                      ; preds = %for.inc358, %cond.end342
  %317 = load i32, i32* %i, align 4, !dbg !16181
  %318 = load i32, i32* %totelem, align 4, !dbg !16183
  %cmp346 = icmp slt i32 %317, %318, !dbg !16184
  br i1 %cmp346, label %for.body348, label %for.end360, !dbg !16185

for.body348:                                      ; preds = %for.cond345
  %319 = load float*, float** %element_sum, align 8, !dbg !16186
  %320 = load i32, i32* %i, align 4, !dbg !16187
  %idxprom349 = sext i32 %320 to i64, !dbg !16186
  %arrayidx350 = getelementptr inbounds float, float* %319, i64 %idxprom349, !dbg !16186
  %321 = load float, float* %arrayidx350, align 4, !dbg !16186
  %322 = load float*, float** %element_weight, align 8, !dbg !16188
  %323 = load i32, i32* %i, align 4, !dbg !16189
  %idxprom351 = sext i32 %323 to i64, !dbg !16188
  %arrayidx352 = getelementptr inbounds float, float* %322, i64 %idxprom351, !dbg !16188
  %324 = load float, float* %arrayidx352, align 4, !dbg !16188
  %325 = load float, float* %inv_totweight, align 4, !dbg !16190
  %mul353 = fmul float %324, %325, !dbg !16191
  %add354 = fadd float %321, %mul353, !dbg !16192
  %326 = load float*, float** %element_sum, align 8, !dbg !16193
  %327 = load i32, i32* %i, align 4, !dbg !16194
  %add355 = add nsw i32 %327, 1, !dbg !16195
  %idxprom356 = sext i32 %add355 to i64, !dbg !16193
  %arrayidx357 = getelementptr inbounds float, float* %326, i64 %idxprom356, !dbg !16193
  store float %add354, float* %arrayidx357, align 4, !dbg !16196
  br label %for.inc358, !dbg !16193

for.inc358:                                       ; preds = %for.body348
  %328 = load i32, i32* %i, align 4, !dbg !16197
  %inc359 = add nsw i32 %328, 1, !dbg !16197
  store i32 %inc359, i32* %i, align 4, !dbg !16197
  br label %for.cond345, !dbg !16198, !llvm.loop !16199

for.end360:                                       ; preds = %for.cond345
  %329 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !16201
  %flag361 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %329, i32 0, i32 5, !dbg !16203
  %330 = load i32, i32* %flag361, align 8, !dbg !16203
  %and362 = and i32 %330, 128, !dbg !16204
  %tobool363 = icmp ne i32 %and362, 0, !dbg !16204
  br i1 %tobool363, label %if.then368, label %lor.lhs.false364, !dbg !16205

lor.lhs.false364:                                 ; preds = %for.end360
  %331 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !16206
  %simplify_flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %331, i32 0, i32 48, !dbg !16207
  %332 = load i16, i16* %simplify_flag, align 4, !dbg !16207
  %conv365 = sext i16 %332 to i32, !dbg !16206
  %and366 = and i32 %conv365, 1, !dbg !16208
  %tobool367 = icmp ne i32 %and366, 0, !dbg !16208
  br i1 %tobool367, label %if.then368, label %if.else400, !dbg !16209

if.then368:                                       ; preds = %lor.lhs.false364, %for.end360
  call void @llvm.dbg.declare(metadata float* %pos, metadata !16210, metadata !DIExpression()), !dbg !16212
  store i32 0, i32* %p, align 4, !dbg !16213
  br label %for.cond369, !dbg !16215

for.cond369:                                      ; preds = %for.inc397, %if.then368
  %333 = load i32, i32* %p, align 4, !dbg !16216
  %334 = load i32, i32* %totpart, align 4, !dbg !16218
  %cmp370 = icmp slt i32 %333, %334, !dbg !16219
  br i1 %cmp370, label %for.body372, label %for.end399, !dbg !16220

for.body372:                                      ; preds = %for.cond369
  %call373 = call float @BLI_frand(), !dbg !16221
  %335 = load float*, float** %element_sum, align 8, !dbg !16223
  %336 = load i32, i32* %totelem, align 4, !dbg !16224
  %idxprom374 = sext i32 %336 to i64, !dbg !16223
  %arrayidx375 = getelementptr inbounds float, float* %335, i64 %idxprom374, !dbg !16223
  %337 = load float, float* %arrayidx375, align 4, !dbg !16223
  %mul376 = fmul float %call373, %337, !dbg !16225
  store float %mul376, float* %pos, align 4, !dbg !16226
  %338 = load float*, float** %element_sum, align 8, !dbg !16227
  %339 = load i32, i32* %totelem, align 4, !dbg !16228
  %340 = load float, float* %pos, align 4, !dbg !16229
  %call377 = call i32 @distribute_binary_search(float* %338, i32 %339, float %340), !dbg !16230
  %341 = load i32*, i32** %particle_element, align 8, !dbg !16231
  %342 = load i32, i32* %p, align 4, !dbg !16232
  %idxprom378 = sext i32 %342 to i64, !dbg !16231
  %arrayidx379 = getelementptr inbounds i32, i32* %341, i64 %idxprom378, !dbg !16231
  store i32 %call377, i32* %arrayidx379, align 4, !dbg !16233
  %343 = load i32, i32* %totelem, align 4, !dbg !16234
  %sub = sub nsw i32 %343, 1, !dbg !16234
  %344 = load i32*, i32** %particle_element, align 8, !dbg !16234
  %345 = load i32, i32* %p, align 4, !dbg !16234
  %idxprom380 = sext i32 %345 to i64, !dbg !16234
  %arrayidx381 = getelementptr inbounds i32, i32* %344, i64 %idxprom380, !dbg !16234
  %346 = load i32, i32* %arrayidx381, align 4, !dbg !16234
  %cmp382 = icmp slt i32 %sub, %346, !dbg !16234
  br i1 %cmp382, label %cond.true384, label %cond.false386, !dbg !16234

cond.true384:                                     ; preds = %for.body372
  %347 = load i32, i32* %totelem, align 4, !dbg !16234
  %sub385 = sub nsw i32 %347, 1, !dbg !16234
  br label %cond.end389, !dbg !16234

cond.false386:                                    ; preds = %for.body372
  %348 = load i32*, i32** %particle_element, align 8, !dbg !16234
  %349 = load i32, i32* %p, align 4, !dbg !16234
  %idxprom387 = sext i32 %349 to i64, !dbg !16234
  %arrayidx388 = getelementptr inbounds i32, i32* %348, i64 %idxprom387, !dbg !16234
  %350 = load i32, i32* %arrayidx388, align 4, !dbg !16234
  br label %cond.end389, !dbg !16234

cond.end389:                                      ; preds = %cond.false386, %cond.true384
  %cond390 = phi i32 [ %sub385, %cond.true384 ], [ %350, %cond.false386 ], !dbg !16234
  %351 = load i32*, i32** %particle_element, align 8, !dbg !16235
  %352 = load i32, i32* %p, align 4, !dbg !16236
  %idxprom391 = sext i32 %352 to i64, !dbg !16235
  %arrayidx392 = getelementptr inbounds i32, i32* %351, i64 %idxprom391, !dbg !16235
  store i32 %cond390, i32* %arrayidx392, align 4, !dbg !16237
  %353 = load float, float* %pos, align 4, !dbg !16238
  %354 = load float*, float** %jitter_offset, align 8, !dbg !16239
  %355 = load i32*, i32** %particle_element, align 8, !dbg !16240
  %356 = load i32, i32* %p, align 4, !dbg !16241
  %idxprom393 = sext i32 %356 to i64, !dbg !16240
  %arrayidx394 = getelementptr inbounds i32, i32* %355, i64 %idxprom393, !dbg !16240
  %357 = load i32, i32* %arrayidx394, align 4, !dbg !16240
  %idxprom395 = sext i32 %357 to i64, !dbg !16239
  %arrayidx396 = getelementptr inbounds float, float* %354, i64 %idxprom395, !dbg !16239
  store float %353, float* %arrayidx396, align 4, !dbg !16242
  br label %for.inc397, !dbg !16243

for.inc397:                                       ; preds = %cond.end389
  %358 = load i32, i32* %p, align 4, !dbg !16244
  %inc398 = add nsw i32 %358, 1, !dbg !16244
  store i32 %inc398, i32* %p, align 4, !dbg !16244
  br label %for.cond369, !dbg !16245, !llvm.loop !16246

for.end399:                                       ; preds = %for.cond369
  br label %if.end459, !dbg !16248

if.else400:                                       ; preds = %lor.lhs.false364
  call void @llvm.dbg.declare(metadata double* %step, metadata !16249, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.declare(metadata double* %pos401, metadata !16252, metadata !DIExpression()), !dbg !16253
  %359 = load i32, i32* %totpart, align 4, !dbg !16254
  %cmp402 = icmp slt i32 %359, 2, !dbg !16255
  br i1 %cmp402, label %cond.true404, label %cond.false405, !dbg !16256

cond.true404:                                     ; preds = %if.else400
  br label %cond.end408, !dbg !16256

cond.false405:                                    ; preds = %if.else400
  %360 = load i32, i32* %totpart, align 4, !dbg !16257
  %conv406 = sitofp i32 %360 to double, !dbg !16258
  %div407 = fdiv double 1.000000e+00, %conv406, !dbg !16259
  br label %cond.end408, !dbg !16256

cond.end408:                                      ; preds = %cond.false405, %cond.true404
  %cond409 = phi double [ 5.000000e-01, %cond.true404 ], [ %div407, %cond.false405 ], !dbg !16256
  store double %cond409, double* %step, align 8, !dbg !16260
  store double 0x3EB0C6F7A0B5ED8D, double* %pos401, align 8, !dbg !16261
  store i32 0, i32* %i, align 4, !dbg !16262
  store i32 0, i32* %p, align 4, !dbg !16263
  br label %for.cond410, !dbg !16265

for.cond410:                                      ; preds = %for.inc455, %cond.end408
  %361 = load i32, i32* %p, align 4, !dbg !16266
  %362 = load i32, i32* %totpart, align 4, !dbg !16268
  %cmp411 = icmp slt i32 %361, %362, !dbg !16269
  br i1 %cmp411, label %for.body413, label %for.end458, !dbg !16270

for.body413:                                      ; preds = %for.cond410
  br label %while.cond, !dbg !16271

while.cond:                                       ; preds = %while.body, %for.body413
  %363 = load i32, i32* %i, align 4, !dbg !16273
  %364 = load i32, i32* %totelem, align 4, !dbg !16274
  %cmp414 = icmp slt i32 %363, %364, !dbg !16275
  br i1 %cmp414, label %land.rhs, label %land.end, !dbg !16276

land.rhs:                                         ; preds = %while.cond
  %365 = load double, double* %pos401, align 8, !dbg !16277
  %366 = load float*, float** %element_sum, align 8, !dbg !16278
  %367 = load i32, i32* %i, align 4, !dbg !16279
  %add416 = add nsw i32 %367, 1, !dbg !16280
  %idxprom417 = sext i32 %add416 to i64, !dbg !16278
  %arrayidx418 = getelementptr inbounds float, float* %366, i64 %idxprom417, !dbg !16278
  %368 = load float, float* %arrayidx418, align 4, !dbg !16278
  %conv419 = fpext float %368 to double, !dbg !16281
  %cmp420 = fcmp ogt double %365, %conv419, !dbg !16282
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %369 = phi i1 [ false, %while.cond ], [ %cmp420, %land.rhs ], !dbg !16283
  br i1 %369, label %while.body, label %while.end, !dbg !16271

while.body:                                       ; preds = %land.end
  %370 = load i32, i32* %i, align 4, !dbg !16284
  %inc422 = add nsw i32 %370, 1, !dbg !16284
  store i32 %inc422, i32* %i, align 4, !dbg !16284
  br label %while.cond, !dbg !16271, !llvm.loop !16285

while.end:                                        ; preds = %land.end
  %371 = load i32, i32* %totelem, align 4, !dbg !16286
  %sub423 = sub nsw i32 %371, 1, !dbg !16286
  %372 = load i32, i32* %i, align 4, !dbg !16286
  %cmp424 = icmp slt i32 %sub423, %372, !dbg !16286
  br i1 %cmp424, label %cond.true426, label %cond.false428, !dbg !16286

cond.true426:                                     ; preds = %while.end
  %373 = load i32, i32* %totelem, align 4, !dbg !16286
  %sub427 = sub nsw i32 %373, 1, !dbg !16286
  br label %cond.end429, !dbg !16286

cond.false428:                                    ; preds = %while.end
  %374 = load i32, i32* %i, align 4, !dbg !16286
  br label %cond.end429, !dbg !16286

cond.end429:                                      ; preds = %cond.false428, %cond.true426
  %cond430 = phi i32 [ %sub427, %cond.true426 ], [ %374, %cond.false428 ], !dbg !16286
  %375 = load i32*, i32** %particle_element, align 8, !dbg !16287
  %376 = load i32, i32* %p, align 4, !dbg !16288
  %idxprom431 = sext i32 %376 to i64, !dbg !16287
  %arrayidx432 = getelementptr inbounds i32, i32* %375, i64 %idxprom431, !dbg !16287
  store i32 %cond430, i32* %arrayidx432, align 4, !dbg !16289
  %377 = load i32, i32* %p, align 4, !dbg !16290
  %378 = load i32, i32* %totpart, align 4, !dbg !16292
  %sub433 = sub nsw i32 %378, 1, !dbg !16293
  %cmp434 = icmp eq i32 %377, %sub433, !dbg !16294
  br i1 %cmp434, label %land.lhs.true436, label %if.end449, !dbg !16295

land.lhs.true436:                                 ; preds = %cond.end429
  %379 = load float*, float** %element_weight, align 8, !dbg !16296
  %380 = load i32*, i32** %particle_element, align 8, !dbg !16297
  %381 = load i32, i32* %p, align 4, !dbg !16298
  %idxprom437 = sext i32 %381 to i64, !dbg !16297
  %arrayidx438 = getelementptr inbounds i32, i32* %380, i64 %idxprom437, !dbg !16297
  %382 = load i32, i32* %arrayidx438, align 4, !dbg !16297
  %idxprom439 = sext i32 %382 to i64, !dbg !16296
  %arrayidx440 = getelementptr inbounds float, float* %379, i64 %idxprom439, !dbg !16296
  %383 = load float, float* %arrayidx440, align 4, !dbg !16296
  %cmp441 = fcmp oeq float %383, 0.000000e+00, !dbg !16299
  br i1 %cmp441, label %if.then443, label %if.end449, !dbg !16300

if.then443:                                       ; preds = %land.lhs.true436
  %384 = load i32*, i32** %particle_element, align 8, !dbg !16301
  %385 = load i32, i32* %p, align 4, !dbg !16302
  %sub444 = sub nsw i32 %385, 1, !dbg !16303
  %idxprom445 = sext i32 %sub444 to i64, !dbg !16301
  %arrayidx446 = getelementptr inbounds i32, i32* %384, i64 %idxprom445, !dbg !16301
  %386 = load i32, i32* %arrayidx446, align 4, !dbg !16301
  %387 = load i32*, i32** %particle_element, align 8, !dbg !16304
  %388 = load i32, i32* %p, align 4, !dbg !16305
  %idxprom447 = sext i32 %388 to i64, !dbg !16304
  %arrayidx448 = getelementptr inbounds i32, i32* %387, i64 %idxprom447, !dbg !16304
  store i32 %386, i32* %arrayidx448, align 4, !dbg !16306
  br label %if.end449, !dbg !16304

if.end449:                                        ; preds = %if.then443, %land.lhs.true436, %cond.end429
  %389 = load double, double* %pos401, align 8, !dbg !16307
  %conv450 = fptrunc double %389 to float, !dbg !16307
  %390 = load float*, float** %jitter_offset, align 8, !dbg !16308
  %391 = load i32*, i32** %particle_element, align 8, !dbg !16309
  %392 = load i32, i32* %p, align 4, !dbg !16310
  %idxprom451 = sext i32 %392 to i64, !dbg !16309
  %arrayidx452 = getelementptr inbounds i32, i32* %391, i64 %idxprom451, !dbg !16309
  %393 = load i32, i32* %arrayidx452, align 4, !dbg !16309
  %idxprom453 = sext i32 %393 to i64, !dbg !16308
  %arrayidx454 = getelementptr inbounds float, float* %390, i64 %idxprom453, !dbg !16308
  store float %conv450, float* %arrayidx454, align 4, !dbg !16311
  br label %for.inc455, !dbg !16312

for.inc455:                                       ; preds = %if.end449
  %394 = load i32, i32* %p, align 4, !dbg !16313
  %inc456 = add nsw i32 %394, 1, !dbg !16313
  store i32 %inc456, i32* %p, align 4, !dbg !16313
  %395 = load double, double* %step, align 8, !dbg !16314
  %396 = load double, double* %pos401, align 8, !dbg !16315
  %add457 = fadd double %396, %395, !dbg !16315
  store double %add457, double* %pos401, align 8, !dbg !16315
  br label %for.cond410, !dbg !16316, !llvm.loop !16317

for.end458:                                       ; preds = %for.cond410
  br label %if.end459

if.end459:                                        ; preds = %for.end458, %for.end399
  %397 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16319
  %398 = load float*, float** %element_sum, align 8, !dbg !16320
  %399 = bitcast float* %398 to i8*, !dbg !16320
  call void %397(i8* %399), !dbg !16319
  %400 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !16321
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %400, i32 0, i32 7, !dbg !16323
  %401 = load i16, i16* %type, align 8, !dbg !16323
  %conv460 = sext i16 %401 to i32, !dbg !16321
  %cmp461 = icmp eq i32 %conv460, 2, !dbg !16324
  br i1 %cmp461, label %land.lhs.true463, label %if.end491, !dbg !16325

land.lhs.true463:                                 ; preds = %if.end459
  %402 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !16326
  %childtype464 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %402, i32 0, i32 19, !dbg !16327
  %403 = load i16, i16* %childtype464, align 4, !dbg !16327
  %conv465 = sext i16 %403 to i32, !dbg !16326
  %cmp466 = icmp eq i32 %conv465, 2, !dbg !16328
  br i1 %cmp466, label %land.lhs.true468, label %if.then471, !dbg !16329

land.lhs.true468:                                 ; preds = %land.lhs.true463
  %404 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !16330
  %parents = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %404, i32 0, i32 91, !dbg !16331
  %405 = load float, float* %parents, align 4, !dbg !16331
  %cmp469 = fcmp une float %405, 0.000000e+00, !dbg !16332
  br i1 %cmp469, label %if.end491, label %if.then471, !dbg !16333

if.then471:                                       ; preds = %land.lhs.true468, %land.lhs.true463
  call void @llvm.dbg.declare(metadata i32** %orig_index, metadata !16334, metadata !DIExpression()), !dbg !16336
  store i32* null, i32** %orig_index, align 8, !dbg !16336
  %406 = load i32, i32* %from.addr, align 4, !dbg !16337
  %cmp472 = icmp eq i32 %406, 0, !dbg !16339
  br i1 %cmp472, label %if.then474, label %if.else480, !dbg !16340

if.then474:                                       ; preds = %if.then471
  %407 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !16341
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %407, i32 0, i32 5, !dbg !16344
  %408 = load i32, i32* %numVertData, align 8, !dbg !16344
  %tobool475 = icmp ne i32 %408, 0, !dbg !16341
  br i1 %tobool475, label %if.then476, label %if.end479, !dbg !16345

if.then476:                                       ; preds = %if.then474
  %409 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !16346
  %getVertDataArray477 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %409, i32 0, i32 50, !dbg !16347
  %410 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray477, align 8, !dbg !16347
  %411 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !16348
  %call478 = call i8* %410(%struct.DerivedMesh* %411, i32 7), !dbg !16346
  %412 = bitcast i8* %call478 to i32*, !dbg !16346
  store i32* %412, i32** %orig_index, align 8, !dbg !16349
  br label %if.end479, !dbg !16350

if.end479:                                        ; preds = %if.then476, %if.then474
  br label %if.end486, !dbg !16351

if.else480:                                       ; preds = %if.then471
  %413 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !16352
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %413, i32 0, i32 7, !dbg !16355
  %414 = load i32, i32* %numTessFaceData, align 8, !dbg !16355
  %tobool481 = icmp ne i32 %414, 0, !dbg !16352
  br i1 %tobool481, label %if.then482, label %if.end485, !dbg !16356

if.then482:                                       ; preds = %if.else480
  %415 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !16357
  %getTessFaceDataArray483 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %415, i32 0, i32 52, !dbg !16358
  %416 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray483, align 8, !dbg !16358
  %417 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !16359
  %call484 = call i8* %416(%struct.DerivedMesh* %417, i32 7), !dbg !16357
  %418 = bitcast i8* %call484 to i32*, !dbg !16357
  store i32* %418, i32** %orig_index, align 8, !dbg !16360
  br label %if.end485, !dbg !16361

if.end485:                                        ; preds = %if.then482, %if.else480
  br label %if.end486

if.end486:                                        ; preds = %if.end485, %if.end479
  %419 = load i32*, i32** %orig_index, align 8, !dbg !16362
  %tobool487 = icmp ne i32* %419, null, !dbg !16362
  br i1 %tobool487, label %if.then488, label %if.end490, !dbg !16364

if.then488:                                       ; preds = %if.end486
  %420 = load i32*, i32** %particle_element, align 8, !dbg !16365
  %421 = bitcast i32* %420 to i8*, !dbg !16365
  %422 = load i32, i32* %totpart, align 4, !dbg !16367
  %conv489 = sext i32 %422 to i64, !dbg !16367
  %423 = load i32*, i32** %orig_index, align 8, !dbg !16368
  %424 = bitcast i32* %423 to i8*, !dbg !16368
  call void @qsort_r(i8* %421, i64 %conv489, i64 4, i32 (i8*, i8*, i8*)* @distribute_compare_orig_index, i8* %424), !dbg !16369
  br label %if.end490, !dbg !16370

if.end490:                                        ; preds = %if.then488, %if.end486
  br label %if.end491, !dbg !16371

if.end491:                                        ; preds = %if.end490, %land.lhs.true468, %if.end459
  %425 = load i32, i32* %distr, align 4, !dbg !16372
  %cmp492 = icmp eq i32 %425, 0, !dbg !16374
  br i1 %cmp492, label %land.lhs.true494, label %if.end531, !dbg !16375

land.lhs.true494:                                 ; preds = %if.end491
  %426 = load i32, i32* %from.addr, align 4, !dbg !16376
  %cmp495 = icmp eq i32 %426, 1, !dbg !16376
  br i1 %cmp495, label %if.then500, label %lor.lhs.false497, !dbg !16376

lor.lhs.false497:                                 ; preds = %land.lhs.true494
  %427 = load i32, i32* %from.addr, align 4, !dbg !16376
  %cmp498 = icmp eq i32 %427, 2, !dbg !16376
  br i1 %cmp498, label %if.then500, label %if.end531, !dbg !16377

if.then500:                                       ; preds = %lor.lhs.false497, %land.lhs.true494
  %428 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !16378
  %userjit = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %428, i32 0, i32 64, !dbg !16380
  %429 = load i32, i32* %userjit, align 8, !dbg !16380
  store i32 %429, i32* %jitlevel, align 4, !dbg !16381
  %430 = load i32, i32* %jitlevel, align 4, !dbg !16382
  %cmp501 = icmp eq i32 %430, 0, !dbg !16384
  br i1 %cmp501, label %if.then503, label %if.end515, !dbg !16385

if.then503:                                       ; preds = %if.then500
  %431 = load i32, i32* %totpart, align 4, !dbg !16386
  %432 = load i32, i32* %totelem, align 4, !dbg !16388
  %div504 = sdiv i32 %431, %432, !dbg !16389
  store i32 %div504, i32* %jitlevel, align 4, !dbg !16390
  %433 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !16391
  %flag505 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %433, i32 0, i32 5, !dbg !16393
  %434 = load i32, i32* %flag505, align 8, !dbg !16393
  %and506 = and i32 %434, 256, !dbg !16394
  %tobool507 = icmp ne i32 %and506, 0, !dbg !16394
  br i1 %tobool507, label %if.then508, label %if.end510, !dbg !16395

if.then508:                                       ; preds = %if.then503
  %435 = load i32, i32* %jitlevel, align 4, !dbg !16396
  %mul509 = mul nsw i32 %435, 2, !dbg !16396
  store i32 %mul509, i32* %jitlevel, align 4, !dbg !16396
  br label %if.end510, !dbg !16397

if.end510:                                        ; preds = %if.then508, %if.then503
  %436 = load i32, i32* %jitlevel, align 4, !dbg !16398
  %cmp511 = icmp slt i32 %436, 3, !dbg !16400
  br i1 %cmp511, label %if.then513, label %if.end514, !dbg !16401

if.then513:                                       ; preds = %if.end510
  store i32 3, i32* %jitlevel, align 4, !dbg !16402
  br label %if.end514, !dbg !16403

if.end514:                                        ; preds = %if.then513, %if.end510
  br label %if.end515, !dbg !16404

if.end515:                                        ; preds = %if.end514, %if.then500
  %437 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !16405
  %438 = load i32, i32* %jitlevel, align 4, !dbg !16406
  %mul516 = mul nsw i32 %438, 2, !dbg !16407
  %add517 = add nsw i32 2, %mul516, !dbg !16408
  %conv518 = sext i32 %add517 to i64, !dbg !16409
  %mul519 = mul i64 %conv518, 4, !dbg !16410
  %call520 = call i8* %437(i64 %mul519, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0)), !dbg !16405
  %439 = bitcast i8* %call520 to float*, !dbg !16405
  store float* %439, float** %jit, align 8, !dbg !16411
  %440 = load i32, i32* %jitlevel, align 4, !dbg !16412
  %cmp521 = icmp slt i32 %440, 25, !dbg !16414
  br i1 %cmp521, label %if.then523, label %if.else525, !dbg !16415

if.then523:                                       ; preds = %if.end515
  %441 = load float*, float** %jit, align 8, !dbg !16416
  %442 = load i32, i32* %jitlevel, align 4, !dbg !16417
  %443 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16418
  %seed524 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %443, i32 0, i32 23, !dbg !16419
  %444 = load i32, i32* %seed524, align 4, !dbg !16419
  %445 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !16420
  %jitfac = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %445, i32 0, i32 59, !dbg !16421
  %446 = load float, float* %jitfac, align 4, !dbg !16421
  call void @init_mv_jit(float* %441, i32 %442, i32 %444, float %446), !dbg !16422
  br label %if.end529, !dbg !16422

if.else525:                                       ; preds = %if.end515
  %447 = load float*, float** %jit, align 8, !dbg !16423
  %448 = load i32, i32* %jitlevel, align 4, !dbg !16424
  %add526 = add nsw i32 %448, 1, !dbg !16425
  %449 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16426
  %seed527 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %449, i32 0, i32 23, !dbg !16427
  %450 = load i32, i32* %seed527, align 4, !dbg !16427
  %451 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !16428
  %jitfac528 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %451, i32 0, i32 59, !dbg !16429
  %452 = load float, float* %jitfac528, align 4, !dbg !16429
  call void @hammersley_create(float* %447, i32 %add526, i32 %450, float %452), !dbg !16430
  br label %if.end529

if.end529:                                        ; preds = %if.else525, %if.then523
  %453 = load float*, float** %jit, align 8, !dbg !16431
  %454 = bitcast float* %453 to i8*, !dbg !16431
  %455 = load i32, i32* %jitlevel, align 4, !dbg !16432
  %456 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16433
  %seed530 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %456, i32 0, i32 23, !dbg !16434
  %457 = load i32, i32* %seed530, align 4, !dbg !16434
  call void @BLI_array_randomize(i8* %454, i32 8, i32 %455, i32 %457), !dbg !16435
  br label %if.end531, !dbg !16436

if.end531:                                        ; preds = %if.end529, %lor.lhs.false497, %if.end491
  %458 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !16437
  %459 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16438
  %tree532 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %459, i32 0, i32 3, !dbg !16439
  store %struct.KDTree* %458, %struct.KDTree** %tree532, align 8, !dbg !16440
  %460 = load %struct.ParticleSeam*, %struct.ParticleSeam** %seams, align 8, !dbg !16441
  %461 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16442
  %seams533 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %461, i32 0, i32 4, !dbg !16443
  store %struct.ParticleSeam* %460, %struct.ParticleSeam** %seams533, align 8, !dbg !16444
  %462 = load i32, i32* %totseam, align 4, !dbg !16445
  %463 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16446
  %totseam534 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %463, i32 0, i32 5, !dbg !16447
  store i32 %462, i32* %totseam534, align 8, !dbg !16448
  %464 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16449
  %465 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16450
  %sim535 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %465, i32 0, i32 0, !dbg !16451
  %psys536 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim535, i32 0, i32 2, !dbg !16452
  store %struct.ParticleSystem* %464, %struct.ParticleSystem** %psys536, align 8, !dbg !16453
  %466 = load i32*, i32** %particle_element, align 8, !dbg !16454
  %467 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16455
  %index = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %467, i32 0, i32 10, !dbg !16456
  store i32* %466, i32** %index, align 8, !dbg !16457
  %468 = load float*, float** %jit, align 8, !dbg !16458
  %469 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16459
  %jit537 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %469, i32 0, i32 6, !dbg !16460
  store float* %468, float** %jit537, align 8, !dbg !16461
  %470 = load i32, i32* %jitlevel, align 4, !dbg !16462
  %471 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16463
  %jitlevel538 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %471, i32 0, i32 12, !dbg !16464
  store i32 %470, i32* %jitlevel538, align 8, !dbg !16465
  %472 = load float*, float** %jitter_offset, align 8, !dbg !16466
  %473 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16467
  %jitoff = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %473, i32 0, i32 7, !dbg !16468
  store float* %472, float** %jitoff, align 8, !dbg !16469
  %474 = load float*, float** %element_weight, align 8, !dbg !16470
  %475 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16471
  %weight = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %475, i32 0, i32 8, !dbg !16472
  store float* %474, float** %weight, align 8, !dbg !16473
  %476 = load float, float* %maxweight, align 4, !dbg !16474
  %477 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16475
  %maxweight539 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %477, i32 0, i32 9, !dbg !16476
  store float %476, float* %maxweight539, align 8, !dbg !16477
  %478 = load i32, i32* %children, align 4, !dbg !16478
  %tobool540 = icmp ne i32 %478, 0, !dbg !16479
  br i1 %tobool540, label %cond.true541, label %cond.false542, !dbg !16479

cond.true541:                                     ; preds = %if.end531
  br label %cond.end543, !dbg !16479

cond.false542:                                    ; preds = %if.end531
  %479 = load i32, i32* %from.addr, align 4, !dbg !16480
  br label %cond.end543, !dbg !16479

cond.end543:                                      ; preds = %cond.false542, %cond.true541
  %cond544 = phi i32 [ 4, %cond.true541 ], [ %479, %cond.false542 ], !dbg !16479
  %480 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16481
  %from545 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %480, i32 0, i32 13, !dbg !16482
  store i32 %cond544, i32* %from545, align 4, !dbg !16483
  %481 = load i32, i32* %cfrom, align 4, !dbg !16484
  %482 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16485
  %cfrom546 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %482, i32 0, i32 14, !dbg !16486
  store i32 %481, i32* %cfrom546, align 8, !dbg !16487
  %483 = load i32, i32* %distr, align 4, !dbg !16488
  %484 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16489
  %distr547 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %484, i32 0, i32 15, !dbg !16490
  store i32 %483, i32* %distr547, align 4, !dbg !16491
  %485 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !16492
  %486 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16493
  %dm548 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %486, i32 0, i32 1, !dbg !16494
  store %struct.DerivedMesh* %485, %struct.DerivedMesh** %dm548, align 8, !dbg !16495
  %487 = load %struct.ParticleData*, %struct.ParticleData** %tpars, align 8, !dbg !16496
  %488 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16497
  %tpars549 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %488, i32 0, i32 16, !dbg !16498
  store %struct.ParticleData* %487, %struct.ParticleData** %tpars549, align 8, !dbg !16499
  %489 = load i32, i32* %children, align 4, !dbg !16500
  %tobool550 = icmp ne i32 %489, 0, !dbg !16500
  br i1 %tobool550, label %if.then551, label %if.end553, !dbg !16502

if.then551:                                       ; preds = %cond.end543
  %490 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16503
  %491 = load i32, i32* %totpart, align 4, !dbg !16505
  %call552 = call i32 @psys_render_simplify_distribution(%struct.ParticleThreadContext* %490, i32 %491), !dbg !16506
  store i32 %call552, i32* %totpart, align 4, !dbg !16507
  %492 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16508
  %493 = load i32, i32* %totpart, align 4, !dbg !16509
  call void @alloc_child_particles(%struct.ParticleSystem* %492, i32 %493), !dbg !16510
  br label %if.end553, !dbg !16511

if.end553:                                        ; preds = %if.then551, %cond.end543
  %494 = load i32, i32* %children, align 4, !dbg !16512
  %tobool554 = icmp ne i32 %494, 0, !dbg !16512
  br i1 %tobool554, label %lor.lhs.false555, label %if.then558, !dbg !16514

lor.lhs.false555:                                 ; preds = %if.end553
  %495 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16515
  %totchild = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %495, i32 0, i32 28, !dbg !16516
  %496 = load i32, i32* %totchild, align 8, !dbg !16516
  %cmp556 = icmp slt i32 %496, 10000, !dbg !16517
  br i1 %cmp556, label %if.then558, label %if.end559, !dbg !16518

if.then558:                                       ; preds = %lor.lhs.false555, %if.end553
  store i32 1, i32* %totthread, align 4, !dbg !16519
  br label %if.end559, !dbg !16520

if.end559:                                        ; preds = %if.then558, %lor.lhs.false555
  %497 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16521
  %sim560 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %497, i32 0, i32 0, !dbg !16522
  %psys561 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim560, i32 0, i32 2, !dbg !16523
  %498 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys561, align 8, !dbg !16523
  %seed562 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %498, i32 0, i32 23, !dbg !16524
  %499 = load i32, i32* %seed562, align 4, !dbg !16524
  %add563 = add nsw i32 31415926, %499, !dbg !16525
  store i32 %add563, i32* %seed, align 4, !dbg !16526
  store i32 0, i32* %i, align 4, !dbg !16527
  br label %for.cond564, !dbg !16529

for.cond564:                                      ; preds = %for.inc574, %if.end559
  %500 = load i32, i32* %i, align 4, !dbg !16530
  %501 = load i32, i32* %totthread, align 4, !dbg !16532
  %cmp565 = icmp slt i32 %500, %501, !dbg !16533
  br i1 %cmp565, label %for.body567, label %for.end576, !dbg !16534

for.body567:                                      ; preds = %for.cond564
  %502 = load i32, i32* %seed, align 4, !dbg !16535
  %call568 = call %struct.RNG* @BLI_rng_new(i32 %502), !dbg !16537
  %503 = load %struct.ParticleThread*, %struct.ParticleThread** %threads.addr, align 8, !dbg !16538
  %504 = load i32, i32* %i, align 4, !dbg !16539
  %idxprom569 = sext i32 %504 to i64, !dbg !16538
  %arrayidx570 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %503, i64 %idxprom569, !dbg !16538
  %rng = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx570, i32 0, i32 1, !dbg !16540
  store %struct.RNG* %call568, %struct.RNG** %rng, align 8, !dbg !16541
  %505 = load i32, i32* %totthread, align 4, !dbg !16542
  %506 = load %struct.ParticleThread*, %struct.ParticleThread** %threads.addr, align 8, !dbg !16543
  %507 = load i32, i32* %i, align 4, !dbg !16544
  %idxprom571 = sext i32 %507 to i64, !dbg !16543
  %arrayidx572 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %506, i64 %idxprom571, !dbg !16543
  %tot573 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %arrayidx572, i32 0, i32 4, !dbg !16545
  store i32 %505, i32* %tot573, align 4, !dbg !16546
  br label %for.inc574, !dbg !16547

for.inc574:                                       ; preds = %for.body567
  %508 = load i32, i32* %i, align 4, !dbg !16548
  %inc575 = add nsw i32 %508, 1, !dbg !16548
  store i32 %inc575, i32* %i, align 4, !dbg !16548
  br label %for.cond564, !dbg !16549, !llvm.loop !16550

for.end576:                                       ; preds = %for.cond564
  store i32 1, i32* %retval, align 4, !dbg !16552
  br label %return, !dbg !16552

return:                                           ; preds = %for.end576, %if.end128, %if.then34, %if.then23, %if.then16, %if.then13, %if.then
  %509 = load i32, i32* %retval, align 4, !dbg !16553
  ret i32 %509, !dbg !16553
}

declare dso_local void @BLI_init_threads(%struct.ListBase*, i8* (i8*)*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @distribute_threads_exec_cb(i8* %data) #0 !dbg !16554 {
entry:
  %data.addr = alloca i8*, align 8
  %thread = alloca %struct.ParticleThread*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %cpa = alloca %struct.ChildParticle*, align 8
  %p = alloca i32, align 4
  %totpart = alloca i32, align 4
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16557, metadata !DIExpression()), !dbg !16558
  call void @llvm.dbg.declare(metadata %struct.ParticleThread** %thread, metadata !16559, metadata !DIExpression()), !dbg !16560
  %0 = load i8*, i8** %data.addr, align 8, !dbg !16561
  %1 = bitcast i8* %0 to %struct.ParticleThread*, !dbg !16562
  store %struct.ParticleThread* %1, %struct.ParticleThread** %thread, align 8, !dbg !16560
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !16563, metadata !DIExpression()), !dbg !16564
  %2 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16565
  %ctx = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %2, i32 0, i32 0, !dbg !16566
  %3 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !16566
  %sim = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %3, i32 0, i32 0, !dbg !16567
  %psys1 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 2, !dbg !16568
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys1, align 8, !dbg !16568
  store %struct.ParticleSystem* %4, %struct.ParticleSystem** %psys, align 8, !dbg !16564
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !16569, metadata !DIExpression()), !dbg !16570
  call void @llvm.dbg.declare(metadata %struct.ChildParticle** %cpa, metadata !16571, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.declare(metadata i32* %p, metadata !16573, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.declare(metadata i32* %totpart, metadata !16575, metadata !DIExpression()), !dbg !16576
  %5 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16577
  %ctx2 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %5, i32 0, i32 0, !dbg !16579
  %6 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx2, align 8, !dbg !16579
  %from = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %6, i32 0, i32 13, !dbg !16580
  %7 = load i32, i32* %from, align 4, !dbg !16580
  %cmp = icmp eq i32 %7, 4, !dbg !16581
  br i1 %cmp, label %if.then, label %if.else12, !dbg !16582

if.then:                                          ; preds = %entry
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16583
  %totchild = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 28, !dbg !16585
  %9 = load i32, i32* %totchild, align 8, !dbg !16585
  store i32 %9, i32* %totpart, align 4, !dbg !16586
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16587
  %child = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 4, !dbg !16588
  %11 = load %struct.ChildParticle*, %struct.ChildParticle** %child, align 8, !dbg !16588
  store %struct.ChildParticle* %11, %struct.ChildParticle** %cpa, align 8, !dbg !16589
  store i32 0, i32* %p, align 4, !dbg !16590
  br label %for.cond, !dbg !16592

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %p, align 4, !dbg !16593
  %13 = load i32, i32* %totpart, align 4, !dbg !16595
  %cmp3 = icmp slt i32 %12, %13, !dbg !16596
  br i1 %cmp3, label %for.body, label %for.end, !dbg !16597

for.body:                                         ; preds = %for.cond
  %14 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16598
  %ctx4 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %14, i32 0, i32 0, !dbg !16601
  %15 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx4, align 8, !dbg !16601
  %skip = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %15, i32 0, i32 11, !dbg !16602
  %16 = load i32*, i32** %skip, align 8, !dbg !16602
  %tobool = icmp ne i32* %16, null, !dbg !16598
  br i1 %tobool, label %if.then5, label %if.end, !dbg !16603

if.then5:                                         ; preds = %for.body
  %17 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16604
  %rng = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %17, i32 0, i32 1, !dbg !16605
  %18 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !16605
  %19 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16606
  %ctx6 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %19, i32 0, i32 0, !dbg !16607
  %20 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx6, align 8, !dbg !16607
  %skip7 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %20, i32 0, i32 11, !dbg !16608
  %21 = load i32*, i32** %skip7, align 8, !dbg !16608
  %22 = load i32, i32* %p, align 4, !dbg !16609
  %idxprom = sext i32 %22 to i64, !dbg !16606
  %arrayidx = getelementptr inbounds i32, i32* %21, i64 %idxprom, !dbg !16606
  %23 = load i32, i32* %arrayidx, align 4, !dbg !16606
  %mul = mul nsw i32 2, %23, !dbg !16610
  call void @BLI_rng_skip(%struct.RNG* %18, i32 %mul), !dbg !16611
  br label %if.end, !dbg !16611

if.end:                                           ; preds = %if.then5, %for.body
  %24 = load i32, i32* %p, align 4, !dbg !16612
  %25 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16614
  %num = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %25, i32 0, i32 3, !dbg !16615
  %26 = load i32, i32* %num, align 8, !dbg !16615
  %add = add nsw i32 %24, %26, !dbg !16616
  %27 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16617
  %tot = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %27, i32 0, i32 4, !dbg !16618
  %28 = load i32, i32* %tot, align 4, !dbg !16618
  %rem = srem i32 %add, %28, !dbg !16619
  %cmp8 = icmp eq i32 %rem, 0, !dbg !16620
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !16621

if.then9:                                         ; preds = %if.end
  %29 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16622
  %30 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !16623
  %31 = load i32, i32* %p, align 4, !dbg !16624
  call void @distribute_threads_exec(%struct.ParticleThread* %29, %struct.ParticleData* null, %struct.ChildParticle* %30, i32 %31), !dbg !16625
  br label %if.end11, !dbg !16625

if.else:                                          ; preds = %if.end
  %32 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16626
  %rng10 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %32, i32 0, i32 1, !dbg !16627
  %33 = load %struct.RNG*, %struct.RNG** %rng10, align 8, !dbg !16627
  call void @BLI_rng_skip(%struct.RNG* %33, i32 2), !dbg !16628
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then9
  br label %for.inc, !dbg !16629

for.inc:                                          ; preds = %if.end11
  %34 = load i32, i32* %p, align 4, !dbg !16630
  %inc = add nsw i32 %34, 1, !dbg !16630
  store i32 %inc, i32* %p, align 4, !dbg !16630
  %35 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !16631
  %incdec.ptr = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %35, i32 1, !dbg !16631
  store %struct.ChildParticle* %incdec.ptr, %struct.ChildParticle** %cpa, align 8, !dbg !16631
  br label %for.cond, !dbg !16632, !llvm.loop !16633

for.end:                                          ; preds = %for.cond
  br label %if.end26, !dbg !16635

if.else12:                                        ; preds = %entry
  %36 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16636
  %totpart13 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %36, i32 0, i32 26, !dbg !16638
  %37 = load i32, i32* %totpart13, align 8, !dbg !16638
  store i32 %37, i32* %totpart, align 4, !dbg !16639
  %38 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !16640
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %38, i32 0, i32 3, !dbg !16641
  %39 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !16641
  %40 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16642
  %num14 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %40, i32 0, i32 3, !dbg !16643
  %41 = load i32, i32* %num14, align 8, !dbg !16643
  %idx.ext = sext i32 %41 to i64, !dbg !16644
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %39, i64 %idx.ext, !dbg !16644
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %pa, align 8, !dbg !16645
  %42 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16646
  %num15 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %42, i32 0, i32 3, !dbg !16648
  %43 = load i32, i32* %num15, align 8, !dbg !16648
  store i32 %43, i32* %p, align 4, !dbg !16649
  br label %for.cond16, !dbg !16650

for.cond16:                                       ; preds = %for.inc19, %if.else12
  %44 = load i32, i32* %p, align 4, !dbg !16651
  %45 = load i32, i32* %totpart, align 4, !dbg !16653
  %cmp17 = icmp slt i32 %44, %45, !dbg !16654
  br i1 %cmp17, label %for.body18, label %for.end25, !dbg !16655

for.body18:                                       ; preds = %for.cond16
  %46 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16656
  %47 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !16657
  %48 = load i32, i32* %p, align 4, !dbg !16658
  call void @distribute_threads_exec(%struct.ParticleThread* %46, %struct.ParticleData* %47, %struct.ChildParticle* null, i32 %48), !dbg !16659
  br label %for.inc19, !dbg !16659

for.inc19:                                        ; preds = %for.body18
  %49 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16660
  %tot20 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %49, i32 0, i32 4, !dbg !16661
  %50 = load i32, i32* %tot20, align 4, !dbg !16661
  %51 = load i32, i32* %p, align 4, !dbg !16662
  %add21 = add nsw i32 %51, %50, !dbg !16662
  store i32 %add21, i32* %p, align 4, !dbg !16662
  %52 = load %struct.ParticleThread*, %struct.ParticleThread** %thread, align 8, !dbg !16663
  %tot22 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %52, i32 0, i32 4, !dbg !16664
  %53 = load i32, i32* %tot22, align 4, !dbg !16664
  %54 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !16665
  %idx.ext23 = sext i32 %53 to i64, !dbg !16665
  %add.ptr24 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %54, i64 %idx.ext23, !dbg !16665
  store %struct.ParticleData* %add.ptr24, %struct.ParticleData** %pa, align 8, !dbg !16665
  br label %for.cond16, !dbg !16666, !llvm.loop !16667

for.end25:                                        ; preds = %for.cond16
  br label %if.end26

if.end26:                                         ; preds = %for.end25, %for.end
  ret i8* null, !dbg !16669
}

declare dso_local void @BLI_insert_thread(%struct.ListBase*, i8*) #2

declare dso_local void @BLI_end_threads(%struct.ListBase*) #2

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @distribute_simple_children(%struct.Scene* %scene, %struct.Object* %ob, %struct.DerivedMesh* %finaldm, %struct.ParticleSystem* %psys) #0 !dbg !16670 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %finaldm.addr = alloca %struct.DerivedMesh*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %cpa = alloca %struct.ChildParticle*, align 8
  %i = alloca i32, align 4
  %p = alloca i32, align 4
  %child_nbr = alloca i32, align 4
  %totpart = alloca i32, align 4
  %length = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !16673, metadata !DIExpression()), !dbg !16674
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !16675, metadata !DIExpression()), !dbg !16676
  store %struct.DerivedMesh* %finaldm, %struct.DerivedMesh** %finaldm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %finaldm.addr, metadata !16677, metadata !DIExpression()), !dbg !16678
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !16679, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.declare(metadata %struct.ChildParticle** %cpa, metadata !16681, metadata !DIExpression()), !dbg !16682
  store %struct.ChildParticle* null, %struct.ChildParticle** %cpa, align 8, !dbg !16682
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16683, metadata !DIExpression()), !dbg !16684
  call void @llvm.dbg.declare(metadata i32* %p, metadata !16685, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.declare(metadata i32* %child_nbr, metadata !16687, metadata !DIExpression()), !dbg !16688
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !16689
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !16690
  %call = call i32 @get_psys_child_number(%struct.Scene* %0, %struct.ParticleSystem* %1), !dbg !16691
  store i32 %call, i32* %child_nbr, align 4, !dbg !16688
  call void @llvm.dbg.declare(metadata i32* %totpart, metadata !16692, metadata !DIExpression()), !dbg !16693
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !16694
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !16695
  %call1 = call i32 @get_psys_tot_child(%struct.Scene* %2, %struct.ParticleSystem* %3), !dbg !16696
  store i32 %call1, i32* %totpart, align 4, !dbg !16693
  %4 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !16697
  %5 = load i32, i32* %totpart, align 4, !dbg !16698
  call void @alloc_child_particles(%struct.ParticleSystem* %4, i32 %5), !dbg !16699
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !16700
  %child = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 4, !dbg !16701
  %7 = load %struct.ChildParticle*, %struct.ChildParticle** %child, align 8, !dbg !16701
  store %struct.ChildParticle* %7, %struct.ChildParticle** %cpa, align 8, !dbg !16702
  store i32 0, i32* %i, align 4, !dbg !16703
  br label %for.cond, !dbg !16705

for.cond:                                         ; preds = %for.inc20, %entry
  %8 = load i32, i32* %i, align 4, !dbg !16706
  %9 = load i32, i32* %child_nbr, align 4, !dbg !16708
  %cmp = icmp slt i32 %8, %9, !dbg !16709
  br i1 %cmp, label %for.body, label %for.end22, !dbg !16710

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %p, align 4, !dbg !16711
  br label %for.cond2, !dbg !16714

for.cond2:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %p, align 4, !dbg !16715
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !16717
  %totpart3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 26, !dbg !16718
  %12 = load i32, i32* %totpart3, align 8, !dbg !16718
  %cmp4 = icmp slt i32 %10, %12, !dbg !16719
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !16720

for.body5:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata float* %length, metadata !16721, metadata !DIExpression()), !dbg !16723
  store float 2.000000e+00, float* %length, align 4, !dbg !16723
  %13 = load i32, i32* %p, align 4, !dbg !16724
  %14 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !16725
  %parent = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %14, i32 0, i32 1, !dbg !16726
  store i32 %13, i32* %parent, align 4, !dbg !16727
  br label %while.cond, !dbg !16728

while.cond:                                       ; preds = %while.body, %for.body5
  %15 = load float, float* %length, align 4, !dbg !16729
  %cmp6 = fcmp oge float %15, 1.000000e+00, !dbg !16730
  br i1 %cmp6, label %while.body, label %while.end, !dbg !16728

while.body:                                       ; preds = %while.cond
  %call7 = call float @BLI_frand(), !dbg !16731
  %mul = fmul float 2.000000e+00, %call7, !dbg !16733
  %sub = fsub float %mul, 1.000000e+00, !dbg !16734
  %16 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !16735
  %fuv = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %16, i32 0, i32 4, !dbg !16736
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %fuv, i64 0, i64 0, !dbg !16735
  store float %sub, float* %arrayidx, align 4, !dbg !16737
  %call8 = call float @BLI_frand(), !dbg !16738
  %mul9 = fmul float 2.000000e+00, %call8, !dbg !16739
  %sub10 = fsub float %mul9, 1.000000e+00, !dbg !16740
  %17 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !16741
  %fuv11 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %17, i32 0, i32 4, !dbg !16742
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %fuv11, i64 0, i64 1, !dbg !16741
  store float %sub10, float* %arrayidx12, align 4, !dbg !16743
  %call13 = call float @BLI_frand(), !dbg !16744
  %mul14 = fmul float 2.000000e+00, %call13, !dbg !16745
  %sub15 = fsub float %mul14, 1.000000e+00, !dbg !16746
  %18 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !16747
  %fuv16 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %18, i32 0, i32 4, !dbg !16748
  %arrayidx17 = getelementptr inbounds [4 x float], [4 x float]* %fuv16, i64 0, i64 2, !dbg !16747
  store float %sub15, float* %arrayidx17, align 4, !dbg !16749
  %19 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !16750
  %fuv18 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %19, i32 0, i32 4, !dbg !16751
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %fuv18, i64 0, i64 0, !dbg !16750
  %call19 = call float @len_v3(float* %arraydecay), !dbg !16752
  store float %call19, float* %length, align 4, !dbg !16753
  br label %while.cond, !dbg !16728, !llvm.loop !16754

while.end:                                        ; preds = %while.cond
  %20 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !16756
  %num = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %20, i32 0, i32 0, !dbg !16757
  store i32 -1, i32* %num, align 4, !dbg !16758
  br label %for.inc, !dbg !16759

for.inc:                                          ; preds = %while.end
  %21 = load i32, i32* %p, align 4, !dbg !16760
  %inc = add nsw i32 %21, 1, !dbg !16760
  store i32 %inc, i32* %p, align 4, !dbg !16760
  %22 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !16761
  %incdec.ptr = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %22, i32 1, !dbg !16761
  store %struct.ChildParticle* %incdec.ptr, %struct.ChildParticle** %cpa, align 8, !dbg !16761
  br label %for.cond2, !dbg !16762, !llvm.loop !16763

for.end:                                          ; preds = %for.cond2
  br label %for.inc20, !dbg !16765

for.inc20:                                        ; preds = %for.end
  %23 = load i32, i32* %i, align 4, !dbg !16766
  %inc21 = add nsw i32 %23, 1, !dbg !16766
  store i32 %inc21, i32* %i, align 4, !dbg !16766
  br label %for.cond, !dbg !16767, !llvm.loop !16768

for.end22:                                        ; preds = %for.cond
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !16770
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %finaldm.addr, align 8, !dbg !16771
  %26 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !16772
  call void @psys_calc_dmcache(%struct.Object* %24, %struct.DerivedMesh* %25, %struct.ParticleSystem* %26), !dbg !16773
  ret void, !dbg !16774
}

declare dso_local %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @distribute_grid(%struct.DerivedMesh* %dm, %struct.ParticleSystem* %psys) #0 !dbg !16775 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  %delta = alloca [3 x float], align 4
  %d = alloca float, align 4
  %mv = alloca %struct.MVert*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %totvert = alloca i32, align 4
  %from = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %p = alloca i32, align 4
  %res = alloca i32, align 4
  %size = alloca [3 x i32], align 4
  %axis = alloca i32, align 4
  %vec = alloca [3 x float], align 4
  %co1 = alloca [3 x float], align 4
  %co2 = alloca [3 x float], align 4
  %mface = alloca %struct.MFace*, align 8
  %mface_array = alloca %struct.MFace*, align 8
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %v3 = alloca [3 x float], align 4
  %v4 = alloca [4 x float], align 16
  %lambda = alloca float, align 4
  %a = alloca i32, align 4
  %a1 = alloca i32, align 4
  %a2 = alloca i32, align 4
  %a0mul = alloca i32, align 4
  %a1mul = alloca i32, align 4
  %a2mul = alloca i32, align 4
  %totface = alloca i32, align 4
  %amax = alloca i32, align 4
  %in = alloca i32, align 4
  %rfac = alloca float, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !16778, metadata !DIExpression()), !dbg !16779
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !16780, metadata !DIExpression()), !dbg !16781
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !16782, metadata !DIExpression()), !dbg !16783
  store %struct.ParticleData* null, %struct.ParticleData** %pa, align 8, !dbg !16783
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !16784, metadata !DIExpression()), !dbg !16785
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !16786, metadata !DIExpression()), !dbg !16787
  call void @llvm.dbg.declare(metadata [3 x float]* %delta, metadata !16788, metadata !DIExpression()), !dbg !16789
  call void @llvm.dbg.declare(metadata float* %d, metadata !16790, metadata !DIExpression()), !dbg !16791
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !16792, metadata !DIExpression()), !dbg !16793
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !16794, metadata !DIExpression()), !dbg !16795
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16796
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 50, !dbg !16797
  %1 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !16797
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16798
  %call = call i8* %1(%struct.DerivedMesh* %2, i32 0), !dbg !16796
  %3 = bitcast i8* %call to %struct.MVert*, !dbg !16796
  store %struct.MVert* %3, %struct.MVert** %mvert, align 8, !dbg !16795
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !16799, metadata !DIExpression()), !dbg !16800
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16801
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 23, !dbg !16802
  %5 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !16802
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16803
  %call1 = call i32 %5(%struct.DerivedMesh* %6), !dbg !16801
  store i32 %call1, i32* %totvert, align 4, !dbg !16800
  call void @llvm.dbg.declare(metadata i32* %from, metadata !16804, metadata !DIExpression()), !dbg !16805
  %7 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !16806
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %7, i32 0, i32 2, !dbg !16807
  %8 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !16807
  %from2 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %8, i32 0, i32 8, !dbg !16808
  %9 = load i16, i16* %from2, align 2, !dbg !16808
  %conv = sext i16 %9 to i32, !dbg !16806
  store i32 %conv, i32* %from, align 4, !dbg !16805
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16809, metadata !DIExpression()), !dbg !16810
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16811, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.declare(metadata i32* %k, metadata !16813, metadata !DIExpression()), !dbg !16814
  call void @llvm.dbg.declare(metadata i32* %p, metadata !16815, metadata !DIExpression()), !dbg !16816
  call void @llvm.dbg.declare(metadata i32* %res, metadata !16817, metadata !DIExpression()), !dbg !16818
  %10 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !16819
  %part3 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %10, i32 0, i32 2, !dbg !16820
  %11 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part3, align 8, !dbg !16820
  %grid_res = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %11, i32 0, i32 65, !dbg !16821
  %12 = load i32, i32* %grid_res, align 4, !dbg !16821
  store i32 %12, i32* %res, align 4, !dbg !16818
  call void @llvm.dbg.declare(metadata [3 x i32]* %size, metadata !16822, metadata !DIExpression()), !dbg !16823
  call void @llvm.dbg.declare(metadata i32* %axis, metadata !16824, metadata !DIExpression()), !dbg !16825
  %13 = load i32, i32* %totvert, align 4, !dbg !16826
  %cmp = icmp sgt i32 %13, 0, !dbg !16828
  br i1 %cmp, label %if.then, label %if.else, !dbg !16829

if.then:                                          ; preds = %entry
  %14 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !16830
  store %struct.MVert* %14, %struct.MVert** %mv, align 8, !dbg !16832
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !16833
  %15 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !16834
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %15, i32 0, i32 0, !dbg !16835
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !16834
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay5), !dbg !16836
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !16837
  %16 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !16838
  %co7 = getelementptr inbounds %struct.MVert, %struct.MVert* %16, i32 0, i32 0, !dbg !16839
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co7, i64 0, i64 0, !dbg !16838
  call void @copy_v3_v3(float* %arraydecay6, float* %arraydecay8), !dbg !16840
  %17 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !16841
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %17, i32 1, !dbg !16841
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mv, align 8, !dbg !16841
  store i32 1, i32* %i, align 4, !dbg !16842
  br label %for.cond, !dbg !16844

for.cond:                                         ; preds = %for.inc, %if.then
  %18 = load i32, i32* %i, align 4, !dbg !16845
  %19 = load i32, i32* %totvert, align 4, !dbg !16847
  %cmp9 = icmp slt i32 %18, %19, !dbg !16848
  br i1 %cmp9, label %for.body, label %for.end, !dbg !16849

for.body:                                         ; preds = %for.cond
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !16850
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !16852
  %20 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !16853
  %co13 = getelementptr inbounds %struct.MVert, %struct.MVert* %20, i32 0, i32 0, !dbg !16854
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %co13, i64 0, i64 0, !dbg !16853
  call void @minmax_v3v3_v3(float* %arraydecay11, float* %arraydecay12, float* %arraydecay14), !dbg !16855
  br label %for.inc, !dbg !16856

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !16857
  %inc = add nsw i32 %21, 1, !dbg !16857
  store i32 %inc, i32* %i, align 4, !dbg !16857
  %22 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !16858
  %incdec.ptr15 = getelementptr inbounds %struct.MVert, %struct.MVert* %22, i32 1, !dbg !16858
  store %struct.MVert* %incdec.ptr15, %struct.MVert** %mv, align 8, !dbg !16858
  br label %for.cond, !dbg !16859, !llvm.loop !16860

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !16862

if.else:                                          ; preds = %entry
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !16863
  call void @zero_v3(float* %arraydecay16), !dbg !16865
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !16866
  call void @zero_v3(float* %arraydecay17), !dbg !16867
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !16868
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !16869
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !16870
  call void @sub_v3_v3v3(float* %arraydecay18, float* %arraydecay19, float* %arraydecay20), !dbg !16871
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !16872
  %call22 = call i32 @axis_dominant_v3_single(float* %arraydecay21), !dbg !16873
  store i32 %call22, i32* %axis, align 4, !dbg !16874
  %23 = load i32, i32* %axis, align 4, !dbg !16875
  %idxprom = sext i32 %23 to i64, !dbg !16876
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 %idxprom, !dbg !16876
  %24 = load float, float* %arrayidx, align 4, !dbg !16876
  %25 = load i32, i32* %res, align 4, !dbg !16877
  %conv23 = sitofp i32 %25 to float, !dbg !16878
  %div = fdiv float %24, %conv23, !dbg !16879
  store float %div, float* %d, align 4, !dbg !16880
  %26 = load i32, i32* %res, align 4, !dbg !16881
  %27 = load i32, i32* %axis, align 4, !dbg !16882
  %idxprom24 = sext i32 %27 to i64, !dbg !16883
  %arrayidx25 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom24, !dbg !16883
  store i32 %26, i32* %arrayidx25, align 4, !dbg !16884
  %28 = load i32, i32* %axis, align 4, !dbg !16885
  %add = add nsw i32 %28, 1, !dbg !16886
  %rem = srem i32 %add, 3, !dbg !16887
  %idxprom26 = sext i32 %rem to i64, !dbg !16888
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 %idxprom26, !dbg !16888
  %29 = load float, float* %arrayidx27, align 4, !dbg !16888
  %30 = load float, float* %d, align 4, !dbg !16889
  %div28 = fdiv float %29, %30, !dbg !16890
  %conv29 = fpext float %div28 to double, !dbg !16888
  %31 = call double @llvm.ceil.f64(double %conv29), !dbg !16891
  %conv30 = fptosi double %31 to i32, !dbg !16892
  %32 = load i32, i32* %axis, align 4, !dbg !16893
  %add31 = add nsw i32 %32, 1, !dbg !16894
  %rem32 = srem i32 %add31, 3, !dbg !16895
  %idxprom33 = sext i32 %rem32 to i64, !dbg !16896
  %arrayidx34 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom33, !dbg !16896
  store i32 %conv30, i32* %arrayidx34, align 4, !dbg !16897
  %33 = load i32, i32* %axis, align 4, !dbg !16898
  %add35 = add nsw i32 %33, 2, !dbg !16899
  %rem36 = srem i32 %add35, 3, !dbg !16900
  %idxprom37 = sext i32 %rem36 to i64, !dbg !16901
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 %idxprom37, !dbg !16901
  %34 = load float, float* %arrayidx38, align 4, !dbg !16901
  %35 = load float, float* %d, align 4, !dbg !16902
  %div39 = fdiv float %34, %35, !dbg !16903
  %conv40 = fpext float %div39 to double, !dbg !16901
  %36 = call double @llvm.ceil.f64(double %conv40), !dbg !16904
  %conv41 = fptosi double %36 to i32, !dbg !16905
  %37 = load i32, i32* %axis, align 4, !dbg !16906
  %add42 = add nsw i32 %37, 2, !dbg !16907
  %rem43 = srem i32 %add42, 3, !dbg !16908
  %idxprom44 = sext i32 %rem43 to i64, !dbg !16909
  %arrayidx45 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom44, !dbg !16909
  store i32 %conv41, i32* %arrayidx45, align 4, !dbg !16910
  %38 = load i32, i32* %axis, align 4, !dbg !16911
  %add46 = add nsw i32 %38, 1, !dbg !16911
  %rem47 = srem i32 %add46, 3, !dbg !16911
  %idxprom48 = sext i32 %rem47 to i64, !dbg !16911
  %arrayidx49 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom48, !dbg !16911
  %39 = load i32, i32* %arrayidx49, align 4, !dbg !16911
  %40 = load i32, i32* %res, align 4, !dbg !16911
  %cmp50 = icmp slt i32 %39, %40, !dbg !16911
  br i1 %cmp50, label %cond.true, label %cond.false, !dbg !16911

cond.true:                                        ; preds = %if.end
  %41 = load i32, i32* %axis, align 4, !dbg !16911
  %add52 = add nsw i32 %41, 1, !dbg !16911
  %rem53 = srem i32 %add52, 3, !dbg !16911
  %idxprom54 = sext i32 %rem53 to i64, !dbg !16911
  %arrayidx55 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom54, !dbg !16911
  %42 = load i32, i32* %arrayidx55, align 4, !dbg !16911
  br label %cond.end, !dbg !16911

cond.false:                                       ; preds = %if.end
  %43 = load i32, i32* %res, align 4, !dbg !16911
  br label %cond.end, !dbg !16911

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %42, %cond.true ], [ %43, %cond.false ], !dbg !16911
  %44 = load i32, i32* %axis, align 4, !dbg !16912
  %add56 = add nsw i32 %44, 1, !dbg !16913
  %rem57 = srem i32 %add56, 3, !dbg !16914
  %idxprom58 = sext i32 %rem57 to i64, !dbg !16915
  %arrayidx59 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom58, !dbg !16915
  store i32 %cond, i32* %arrayidx59, align 4, !dbg !16916
  %45 = load i32, i32* %axis, align 4, !dbg !16917
  %add60 = add nsw i32 %45, 2, !dbg !16917
  %rem61 = srem i32 %add60, 3, !dbg !16917
  %idxprom62 = sext i32 %rem61 to i64, !dbg !16917
  %arrayidx63 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom62, !dbg !16917
  %46 = load i32, i32* %arrayidx63, align 4, !dbg !16917
  %47 = load i32, i32* %res, align 4, !dbg !16917
  %cmp64 = icmp slt i32 %46, %47, !dbg !16917
  br i1 %cmp64, label %cond.true66, label %cond.false71, !dbg !16917

cond.true66:                                      ; preds = %cond.end
  %48 = load i32, i32* %axis, align 4, !dbg !16917
  %add67 = add nsw i32 %48, 2, !dbg !16917
  %rem68 = srem i32 %add67, 3, !dbg !16917
  %idxprom69 = sext i32 %rem68 to i64, !dbg !16917
  %arrayidx70 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom69, !dbg !16917
  %49 = load i32, i32* %arrayidx70, align 4, !dbg !16917
  br label %cond.end72, !dbg !16917

cond.false71:                                     ; preds = %cond.end
  %50 = load i32, i32* %res, align 4, !dbg !16917
  br label %cond.end72, !dbg !16917

cond.end72:                                       ; preds = %cond.false71, %cond.true66
  %cond73 = phi i32 [ %49, %cond.true66 ], [ %50, %cond.false71 ], !dbg !16917
  %51 = load i32, i32* %axis, align 4, !dbg !16918
  %add74 = add nsw i32 %51, 2, !dbg !16919
  %rem75 = srem i32 %add74, 3, !dbg !16920
  %idxprom76 = sext i32 %rem75 to i64, !dbg !16921
  %arrayidx77 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom76, !dbg !16921
  store i32 %cond73, i32* %arrayidx77, align 4, !dbg !16922
  %arrayidx78 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 0, !dbg !16923
  %52 = load i32, i32* %arrayidx78, align 4, !dbg !16923
  %cmp79 = icmp sgt i32 %52, 1, !dbg !16923
  br i1 %cmp79, label %cond.true81, label %cond.false83, !dbg !16923

cond.true81:                                      ; preds = %cond.end72
  %arrayidx82 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 0, !dbg !16923
  %53 = load i32, i32* %arrayidx82, align 4, !dbg !16923
  br label %cond.end84, !dbg !16923

cond.false83:                                     ; preds = %cond.end72
  br label %cond.end84, !dbg !16923

cond.end84:                                       ; preds = %cond.false83, %cond.true81
  %cond85 = phi i32 [ %53, %cond.true81 ], [ 1, %cond.false83 ], !dbg !16923
  %arrayidx86 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 0, !dbg !16924
  store i32 %cond85, i32* %arrayidx86, align 4, !dbg !16925
  %arrayidx87 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 1, !dbg !16926
  %54 = load i32, i32* %arrayidx87, align 4, !dbg !16926
  %cmp88 = icmp sgt i32 %54, 1, !dbg !16926
  br i1 %cmp88, label %cond.true90, label %cond.false92, !dbg !16926

cond.true90:                                      ; preds = %cond.end84
  %arrayidx91 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 1, !dbg !16926
  %55 = load i32, i32* %arrayidx91, align 4, !dbg !16926
  br label %cond.end93, !dbg !16926

cond.false92:                                     ; preds = %cond.end84
  br label %cond.end93, !dbg !16926

cond.end93:                                       ; preds = %cond.false92, %cond.true90
  %cond94 = phi i32 [ %55, %cond.true90 ], [ 1, %cond.false92 ], !dbg !16926
  %arrayidx95 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 1, !dbg !16927
  store i32 %cond94, i32* %arrayidx95, align 4, !dbg !16928
  %arrayidx96 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 2, !dbg !16929
  %56 = load i32, i32* %arrayidx96, align 4, !dbg !16929
  %cmp97 = icmp sgt i32 %56, 1, !dbg !16929
  br i1 %cmp97, label %cond.true99, label %cond.false101, !dbg !16929

cond.true99:                                      ; preds = %cond.end93
  %arrayidx100 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 2, !dbg !16929
  %57 = load i32, i32* %arrayidx100, align 4, !dbg !16929
  br label %cond.end102, !dbg !16929

cond.false101:                                    ; preds = %cond.end93
  br label %cond.end102, !dbg !16929

cond.end102:                                      ; preds = %cond.false101, %cond.true99
  %cond103 = phi i32 [ %57, %cond.true99 ], [ 1, %cond.false101 ], !dbg !16929
  %arrayidx104 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 2, !dbg !16930
  store i32 %cond103, i32* %arrayidx104, align 4, !dbg !16931
  %58 = load float, float* %d, align 4, !dbg !16932
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !16933
  %59 = load float, float* %arrayidx105, align 4, !dbg !16933
  %cmp106 = fcmp olt float %58, %59, !dbg !16934
  br i1 %cmp106, label %cond.true108, label %cond.false110, !dbg !16932

cond.true108:                                     ; preds = %cond.end102
  %60 = load float, float* %d, align 4, !dbg !16935
  %div109 = fdiv float %60, 2.000000e+00, !dbg !16936
  br label %cond.end113, !dbg !16932

cond.false110:                                    ; preds = %cond.end102
  %arrayidx111 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !16937
  %61 = load float, float* %arrayidx111, align 4, !dbg !16937
  %div112 = fdiv float %61, 2.000000e+00, !dbg !16938
  br label %cond.end113, !dbg !16932

cond.end113:                                      ; preds = %cond.false110, %cond.true108
  %cond114 = phi float [ %div109, %cond.true108 ], [ %div112, %cond.false110 ], !dbg !16932
  %arrayidx115 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !16939
  %62 = load float, float* %arrayidx115, align 4, !dbg !16940
  %add116 = fadd float %62, %cond114, !dbg !16940
  store float %add116, float* %arrayidx115, align 4, !dbg !16940
  %63 = load float, float* %d, align 4, !dbg !16941
  %arrayidx117 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 1, !dbg !16942
  %64 = load float, float* %arrayidx117, align 4, !dbg !16942
  %cmp118 = fcmp olt float %63, %64, !dbg !16943
  br i1 %cmp118, label %cond.true120, label %cond.false122, !dbg !16941

cond.true120:                                     ; preds = %cond.end113
  %65 = load float, float* %d, align 4, !dbg !16944
  %div121 = fdiv float %65, 2.000000e+00, !dbg !16945
  br label %cond.end125, !dbg !16941

cond.false122:                                    ; preds = %cond.end113
  %arrayidx123 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 1, !dbg !16946
  %66 = load float, float* %arrayidx123, align 4, !dbg !16946
  %div124 = fdiv float %66, 2.000000e+00, !dbg !16947
  br label %cond.end125, !dbg !16941

cond.end125:                                      ; preds = %cond.false122, %cond.true120
  %cond126 = phi float [ %div121, %cond.true120 ], [ %div124, %cond.false122 ], !dbg !16941
  %arrayidx127 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !16948
  %67 = load float, float* %arrayidx127, align 4, !dbg !16949
  %add128 = fadd float %67, %cond126, !dbg !16949
  store float %add128, float* %arrayidx127, align 4, !dbg !16949
  %68 = load float, float* %d, align 4, !dbg !16950
  %arrayidx129 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 2, !dbg !16951
  %69 = load float, float* %arrayidx129, align 4, !dbg !16951
  %cmp130 = fcmp olt float %68, %69, !dbg !16952
  br i1 %cmp130, label %cond.true132, label %cond.false134, !dbg !16950

cond.true132:                                     ; preds = %cond.end125
  %70 = load float, float* %d, align 4, !dbg !16953
  %div133 = fdiv float %70, 2.000000e+00, !dbg !16954
  br label %cond.end137, !dbg !16950

cond.false134:                                    ; preds = %cond.end125
  %arrayidx135 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 2, !dbg !16955
  %71 = load float, float* %arrayidx135, align 4, !dbg !16955
  %div136 = fdiv float %71, 2.000000e+00, !dbg !16956
  br label %cond.end137, !dbg !16950

cond.end137:                                      ; preds = %cond.false134, %cond.true132
  %cond138 = phi float [ %div133, %cond.true132 ], [ %div136, %cond.false134 ], !dbg !16950
  %arrayidx139 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !16957
  %72 = load float, float* %arrayidx139, align 4, !dbg !16958
  %add140 = fadd float %72, %cond138, !dbg !16958
  store float %add140, float* %arrayidx139, align 4, !dbg !16958
  store i32 0, i32* %i, align 4, !dbg !16959
  store i32 0, i32* %p, align 4, !dbg !16961
  %73 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !16962
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %73, i32 0, i32 3, !dbg !16963
  %74 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !16963
  store %struct.ParticleData* %74, %struct.ParticleData** %pa, align 8, !dbg !16964
  br label %for.cond141, !dbg !16965

for.cond141:                                      ; preds = %for.inc179, %cond.end137
  %75 = load i32, i32* %i, align 4, !dbg !16966
  %76 = load i32, i32* %res, align 4, !dbg !16968
  %cmp142 = icmp slt i32 %75, %76, !dbg !16969
  br i1 %cmp142, label %for.body144, label %for.end181, !dbg !16970

for.body144:                                      ; preds = %for.cond141
  store i32 0, i32* %j, align 4, !dbg !16971
  br label %for.cond145, !dbg !16974

for.cond145:                                      ; preds = %for.inc176, %for.body144
  %77 = load i32, i32* %j, align 4, !dbg !16975
  %78 = load i32, i32* %res, align 4, !dbg !16977
  %cmp146 = icmp slt i32 %77, %78, !dbg !16978
  br i1 %cmp146, label %for.body148, label %for.end178, !dbg !16979

for.body148:                                      ; preds = %for.cond145
  store i32 0, i32* %k, align 4, !dbg !16980
  br label %for.cond149, !dbg !16983

for.cond149:                                      ; preds = %for.inc171, %for.body148
  %79 = load i32, i32* %k, align 4, !dbg !16984
  %80 = load i32, i32* %res, align 4, !dbg !16986
  %cmp150 = icmp slt i32 %79, %80, !dbg !16987
  br i1 %cmp150, label %for.body152, label %for.end175, !dbg !16988

for.body152:                                      ; preds = %for.cond149
  %arrayidx153 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !16989
  %81 = load float, float* %arrayidx153, align 4, !dbg !16989
  %82 = load i32, i32* %i, align 4, !dbg !16991
  %conv154 = sitofp i32 %82 to float, !dbg !16992
  %83 = load float, float* %d, align 4, !dbg !16993
  %mul = fmul float %conv154, %83, !dbg !16994
  %add155 = fadd float %81, %mul, !dbg !16995
  %84 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !16996
  %fuv = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %84, i32 0, i32 11, !dbg !16997
  %arrayidx156 = getelementptr inbounds [4 x float], [4 x float]* %fuv, i64 0, i64 0, !dbg !16996
  store float %add155, float* %arrayidx156, align 8, !dbg !16998
  %arrayidx157 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !16999
  %85 = load float, float* %arrayidx157, align 4, !dbg !16999
  %86 = load i32, i32* %j, align 4, !dbg !17000
  %conv158 = sitofp i32 %86 to float, !dbg !17001
  %87 = load float, float* %d, align 4, !dbg !17002
  %mul159 = fmul float %conv158, %87, !dbg !17003
  %add160 = fadd float %85, %mul159, !dbg !17004
  %88 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17005
  %fuv161 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %88, i32 0, i32 11, !dbg !17006
  %arrayidx162 = getelementptr inbounds [4 x float], [4 x float]* %fuv161, i64 0, i64 1, !dbg !17005
  store float %add160, float* %arrayidx162, align 4, !dbg !17007
  %arrayidx163 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !17008
  %89 = load float, float* %arrayidx163, align 4, !dbg !17008
  %90 = load i32, i32* %k, align 4, !dbg !17009
  %conv164 = sitofp i32 %90 to float, !dbg !17010
  %91 = load float, float* %d, align 4, !dbg !17011
  %mul165 = fmul float %conv164, %91, !dbg !17012
  %add166 = fadd float %89, %mul165, !dbg !17013
  %92 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17014
  %fuv167 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %92, i32 0, i32 11, !dbg !17015
  %arrayidx168 = getelementptr inbounds [4 x float], [4 x float]* %fuv167, i64 0, i64 2, !dbg !17014
  store float %add166, float* %arrayidx168, align 8, !dbg !17016
  %93 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17017
  %flag = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %93, i32 0, i32 17, !dbg !17018
  %94 = load i16, i16* %flag, align 4, !dbg !17019
  %conv169 = sext i16 %94 to i32, !dbg !17019
  %or = or i32 %conv169, 1, !dbg !17019
  %conv170 = trunc i32 %or to i16, !dbg !17019
  store i16 %conv170, i16* %flag, align 4, !dbg !17019
  %95 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17020
  %hair_index = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %95, i32 0, i32 16, !dbg !17021
  store i32 0, i32* %hair_index, align 8, !dbg !17022
  br label %for.inc171, !dbg !17023

for.inc171:                                       ; preds = %for.body152
  %96 = load i32, i32* %k, align 4, !dbg !17024
  %inc172 = add nsw i32 %96, 1, !dbg !17024
  store i32 %inc172, i32* %k, align 4, !dbg !17024
  %97 = load i32, i32* %p, align 4, !dbg !17025
  %inc173 = add nsw i32 %97, 1, !dbg !17025
  store i32 %inc173, i32* %p, align 4, !dbg !17025
  %98 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17026
  %incdec.ptr174 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %98, i32 1, !dbg !17026
  store %struct.ParticleData* %incdec.ptr174, %struct.ParticleData** %pa, align 8, !dbg !17026
  br label %for.cond149, !dbg !17027, !llvm.loop !17028

for.end175:                                       ; preds = %for.cond149
  br label %for.inc176, !dbg !17030

for.inc176:                                       ; preds = %for.end175
  %99 = load i32, i32* %j, align 4, !dbg !17031
  %inc177 = add nsw i32 %99, 1, !dbg !17031
  store i32 %inc177, i32* %j, align 4, !dbg !17031
  br label %for.cond145, !dbg !17032, !llvm.loop !17033

for.end178:                                       ; preds = %for.cond145
  br label %for.inc179, !dbg !17035

for.inc179:                                       ; preds = %for.end178
  %100 = load i32, i32* %i, align 4, !dbg !17036
  %inc180 = add nsw i32 %100, 1, !dbg !17036
  store i32 %inc180, i32* %i, align 4, !dbg !17036
  br label %for.cond141, !dbg !17037, !llvm.loop !17038

for.end181:                                       ; preds = %for.cond141
  %101 = load i32, i32* %from, align 4, !dbg !17040
  %cmp182 = icmp eq i32 %101, 0, !dbg !17042
  br i1 %cmp182, label %if.then184, label %if.else242, !dbg !17043

if.then184:                                       ; preds = %for.end181
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !17044, metadata !DIExpression()), !dbg !17046
  %102 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17047
  %particles185 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %102, i32 0, i32 3, !dbg !17048
  %103 = load %struct.ParticleData*, %struct.ParticleData** %particles185, align 8, !dbg !17048
  store %struct.ParticleData* %103, %struct.ParticleData** %pa, align 8, !dbg !17049
  %104 = load float, float* %d, align 4, !dbg !17050
  %div186 = fdiv float %104, 2.000000e+00, !dbg !17051
  %arrayidx187 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !17052
  %105 = load float, float* %arrayidx187, align 4, !dbg !17053
  %sub = fsub float %105, %div186, !dbg !17053
  store float %sub, float* %arrayidx187, align 4, !dbg !17053
  %106 = load float, float* %d, align 4, !dbg !17054
  %div188 = fdiv float %106, 2.000000e+00, !dbg !17055
  %arrayidx189 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !17056
  %107 = load float, float* %arrayidx189, align 4, !dbg !17057
  %sub190 = fsub float %107, %div188, !dbg !17057
  store float %sub190, float* %arrayidx189, align 4, !dbg !17057
  %108 = load float, float* %d, align 4, !dbg !17058
  %div191 = fdiv float %108, 2.000000e+00, !dbg !17059
  %arrayidx192 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !17060
  %109 = load float, float* %arrayidx192, align 4, !dbg !17061
  %sub193 = fsub float %109, %div191, !dbg !17061
  store float %sub193, float* %arrayidx192, align 4, !dbg !17061
  store i32 0, i32* %i, align 4, !dbg !17062
  %110 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !17064
  store %struct.MVert* %110, %struct.MVert** %mv, align 8, !dbg !17065
  br label %for.cond194, !dbg !17066

for.cond194:                                      ; preds = %for.inc238, %if.then184
  %111 = load i32, i32* %i, align 4, !dbg !17067
  %112 = load i32, i32* %totvert, align 4, !dbg !17069
  %cmp195 = icmp slt i32 %111, %112, !dbg !17070
  br i1 %cmp195, label %for.body197, label %for.end241, !dbg !17071

for.body197:                                      ; preds = %for.cond194
  %arraydecay198 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !17072
  %113 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !17074
  %co199 = getelementptr inbounds %struct.MVert, %struct.MVert* %113, i32 0, i32 0, !dbg !17075
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %co199, i64 0, i64 0, !dbg !17074
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !17076
  call void @sub_v3_v3v3(float* %arraydecay198, float* %arraydecay200, float* %arraydecay201), !dbg !17077
  %arrayidx202 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 0, !dbg !17078
  %114 = load float, float* %arrayidx202, align 4, !dbg !17078
  %arrayidx203 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !17079
  %115 = load float, float* %arrayidx203, align 4, !dbg !17080
  %div204 = fdiv float %115, %114, !dbg !17080
  store float %div204, float* %arrayidx203, align 4, !dbg !17080
  %arrayidx205 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 1, !dbg !17081
  %116 = load float, float* %arrayidx205, align 4, !dbg !17081
  %arrayidx206 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !17082
  %117 = load float, float* %arrayidx206, align 4, !dbg !17083
  %div207 = fdiv float %117, %116, !dbg !17083
  store float %div207, float* %arrayidx206, align 4, !dbg !17083
  %arrayidx208 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 2, !dbg !17084
  %118 = load float, float* %arrayidx208, align 4, !dbg !17084
  %arrayidx209 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !17085
  %119 = load float, float* %arrayidx209, align 4, !dbg !17086
  %div210 = fdiv float %119, %118, !dbg !17086
  store float %div210, float* %arrayidx209, align 4, !dbg !17086
  %120 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17087
  %arrayidx211 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !17088
  %121 = load float, float* %arrayidx211, align 4, !dbg !17088
  %arrayidx212 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 0, !dbg !17089
  %122 = load i32, i32* %arrayidx212, align 4, !dbg !17089
  %sub213 = sub nsw i32 %122, 1, !dbg !17090
  %conv214 = sitofp i32 %sub213 to float, !dbg !17091
  %mul215 = fmul float %121, %conv214, !dbg !17092
  %conv216 = fptosi float %mul215 to i32, !dbg !17093
  %123 = load i32, i32* %res, align 4, !dbg !17094
  %mul217 = mul nsw i32 %conv216, %123, !dbg !17095
  %arrayidx218 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !17096
  %124 = load float, float* %arrayidx218, align 4, !dbg !17096
  %arrayidx219 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 1, !dbg !17097
  %125 = load i32, i32* %arrayidx219, align 4, !dbg !17097
  %sub220 = sub nsw i32 %125, 1, !dbg !17098
  %conv221 = sitofp i32 %sub220 to float, !dbg !17099
  %mul222 = fmul float %124, %conv221, !dbg !17100
  %conv223 = fptosi float %mul222 to i32, !dbg !17101
  %add224 = add nsw i32 %mul217, %conv223, !dbg !17102
  %126 = load i32, i32* %res, align 4, !dbg !17103
  %mul225 = mul nsw i32 %add224, %126, !dbg !17104
  %arrayidx226 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !17105
  %127 = load float, float* %arrayidx226, align 4, !dbg !17105
  %arrayidx227 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 2, !dbg !17106
  %128 = load i32, i32* %arrayidx227, align 4, !dbg !17106
  %sub228 = sub nsw i32 %128, 1, !dbg !17107
  %conv229 = sitofp i32 %sub228 to float, !dbg !17108
  %mul230 = fmul float %127, %conv229, !dbg !17109
  %conv231 = fptosi float %mul230 to i32, !dbg !17110
  %add232 = add nsw i32 %mul225, %conv231, !dbg !17111
  %idxprom233 = sext i32 %add232 to i64, !dbg !17087
  %arrayidx234 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %120, i64 %idxprom233, !dbg !17087
  %flag235 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %arrayidx234, i32 0, i32 17, !dbg !17112
  %129 = load i16, i16* %flag235, align 4, !dbg !17113
  %conv236 = sext i16 %129 to i32, !dbg !17113
  %and = and i32 %conv236, -2, !dbg !17113
  %conv237 = trunc i32 %and to i16, !dbg !17113
  store i16 %conv237, i16* %flag235, align 4, !dbg !17113
  br label %for.inc238, !dbg !17114

for.inc238:                                       ; preds = %for.body197
  %130 = load i32, i32* %i, align 4, !dbg !17115
  %inc239 = add nsw i32 %130, 1, !dbg !17115
  store i32 %inc239, i32* %i, align 4, !dbg !17115
  %131 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !17116
  %incdec.ptr240 = getelementptr inbounds %struct.MVert, %struct.MVert* %131, i32 1, !dbg !17116
  store %struct.MVert* %incdec.ptr240, %struct.MVert** %mv, align 8, !dbg !17116
  br label %for.cond194, !dbg !17117, !llvm.loop !17118

for.end241:                                       ; preds = %for.cond194
  br label %if.end482, !dbg !17120

if.else242:                                       ; preds = %for.end181
  %132 = load i32, i32* %from, align 4, !dbg !17121
  %cmp243 = icmp eq i32 %132, 1, !dbg !17121
  br i1 %cmp243, label %if.then247, label %lor.lhs.false, !dbg !17121

lor.lhs.false:                                    ; preds = %if.else242
  %133 = load i32, i32* %from, align 4, !dbg !17121
  %cmp245 = icmp eq i32 %133, 2, !dbg !17121
  br i1 %cmp245, label %if.then247, label %if.end481, !dbg !17123

if.then247:                                       ; preds = %lor.lhs.false, %if.else242
  call void @llvm.dbg.declare(metadata [3 x float]* %co1, metadata !17124, metadata !DIExpression()), !dbg !17126
  call void @llvm.dbg.declare(metadata [3 x float]* %co2, metadata !17127, metadata !DIExpression()), !dbg !17128
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !17129, metadata !DIExpression()), !dbg !17130
  store %struct.MFace* null, %struct.MFace** %mface, align 8, !dbg !17130
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface_array, metadata !17131, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !17133, metadata !DIExpression()), !dbg !17134
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !17135, metadata !DIExpression()), !dbg !17136
  call void @llvm.dbg.declare(metadata [3 x float]* %v3, metadata !17137, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.declare(metadata [4 x float]* %v4, metadata !17139, metadata !DIExpression()), !dbg !17140
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !17141, metadata !DIExpression()), !dbg !17142
  call void @llvm.dbg.declare(metadata i32* %a, metadata !17143, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !17145, metadata !DIExpression()), !dbg !17146
  call void @llvm.dbg.declare(metadata i32* %a2, metadata !17147, metadata !DIExpression()), !dbg !17148
  call void @llvm.dbg.declare(metadata i32* %a0mul, metadata !17149, metadata !DIExpression()), !dbg !17150
  call void @llvm.dbg.declare(metadata i32* %a1mul, metadata !17151, metadata !DIExpression()), !dbg !17152
  call void @llvm.dbg.declare(metadata i32* %a2mul, metadata !17153, metadata !DIExpression()), !dbg !17154
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !17155, metadata !DIExpression()), !dbg !17156
  call void @llvm.dbg.declare(metadata i32* %amax, metadata !17157, metadata !DIExpression()), !dbg !17158
  %134 = load i32, i32* %from, align 4, !dbg !17159
  %cmp248 = icmp eq i32 %134, 1, !dbg !17160
  %135 = zext i1 %cmp248 to i64, !dbg !17159
  %cond250 = select i1 %cmp248, i32 3, i32 1, !dbg !17159
  store i32 %cond250, i32* %amax, align 4, !dbg !17158
  %136 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !17161
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %136, i32 0, i32 25, !dbg !17162
  %137 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !17162
  %138 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !17163
  %call251 = call i32 %137(%struct.DerivedMesh* %138), !dbg !17161
  store i32 %call251, i32* %totface, align 4, !dbg !17164
  %139 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !17165
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %139, i32 0, i32 52, !dbg !17166
  %140 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !17166
  %141 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !17167
  %call252 = call i8* %140(%struct.DerivedMesh* %141, i32 4), !dbg !17165
  %142 = bitcast i8* %call252 to %struct.MFace*, !dbg !17165
  store %struct.MFace* %142, %struct.MFace** %mface_array, align 8, !dbg !17168
  store %struct.MFace* %142, %struct.MFace** %mface, align 8, !dbg !17169
  store i32 0, i32* %a, align 4, !dbg !17170
  br label %for.cond253, !dbg !17172

for.cond253:                                      ; preds = %for.inc478, %if.then247
  %143 = load i32, i32* %a, align 4, !dbg !17173
  %144 = load i32, i32* %amax, align 4, !dbg !17175
  %cmp254 = icmp slt i32 %143, %144, !dbg !17176
  br i1 %cmp254, label %for.body256, label %for.end480, !dbg !17177

for.body256:                                      ; preds = %for.cond253
  %145 = load i32, i32* %a, align 4, !dbg !17178
  %cmp257 = icmp eq i32 %145, 0, !dbg !17181
  br i1 %cmp257, label %if.then259, label %if.else261, !dbg !17182

if.then259:                                       ; preds = %for.body256
  %146 = load i32, i32* %res, align 4, !dbg !17183
  %147 = load i32, i32* %res, align 4, !dbg !17185
  %mul260 = mul nsw i32 %146, %147, !dbg !17186
  store i32 %mul260, i32* %a0mul, align 4, !dbg !17187
  %148 = load i32, i32* %res, align 4, !dbg !17188
  store i32 %148, i32* %a1mul, align 4, !dbg !17189
  store i32 1, i32* %a2mul, align 4, !dbg !17190
  br label %if.end269, !dbg !17191

if.else261:                                       ; preds = %for.body256
  %149 = load i32, i32* %a, align 4, !dbg !17192
  %cmp262 = icmp eq i32 %149, 1, !dbg !17194
  br i1 %cmp262, label %if.then264, label %if.else266, !dbg !17195

if.then264:                                       ; preds = %if.else261
  %150 = load i32, i32* %res, align 4, !dbg !17196
  store i32 %150, i32* %a0mul, align 4, !dbg !17198
  store i32 1, i32* %a1mul, align 4, !dbg !17199
  %151 = load i32, i32* %res, align 4, !dbg !17200
  %152 = load i32, i32* %res, align 4, !dbg !17201
  %mul265 = mul nsw i32 %151, %152, !dbg !17202
  store i32 %mul265, i32* %a2mul, align 4, !dbg !17203
  br label %if.end268, !dbg !17204

if.else266:                                       ; preds = %if.else261
  store i32 1, i32* %a0mul, align 4, !dbg !17205
  %153 = load i32, i32* %res, align 4, !dbg !17207
  %154 = load i32, i32* %res, align 4, !dbg !17208
  %mul267 = mul nsw i32 %153, %154, !dbg !17209
  store i32 %mul267, i32* %a1mul, align 4, !dbg !17210
  %155 = load i32, i32* %res, align 4, !dbg !17211
  store i32 %155, i32* %a2mul, align 4, !dbg !17212
  br label %if.end268

if.end268:                                        ; preds = %if.else266, %if.then264
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.then259
  store i32 0, i32* %a1, align 4, !dbg !17213
  br label %for.cond270, !dbg !17215

for.cond270:                                      ; preds = %for.inc475, %if.end269
  %156 = load i32, i32* %a1, align 4, !dbg !17216
  %157 = load i32, i32* %a, align 4, !dbg !17218
  %add271 = add nsw i32 %157, 1, !dbg !17219
  %rem272 = srem i32 %add271, 3, !dbg !17220
  %idxprom273 = sext i32 %rem272 to i64, !dbg !17221
  %arrayidx274 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom273, !dbg !17221
  %158 = load i32, i32* %arrayidx274, align 4, !dbg !17221
  %cmp275 = icmp slt i32 %156, %158, !dbg !17222
  br i1 %cmp275, label %for.body277, label %for.end477, !dbg !17223

for.body277:                                      ; preds = %for.cond270
  store i32 0, i32* %a2, align 4, !dbg !17224
  br label %for.cond278, !dbg !17227

for.cond278:                                      ; preds = %for.inc472, %for.body277
  %159 = load i32, i32* %a2, align 4, !dbg !17228
  %160 = load i32, i32* %a, align 4, !dbg !17230
  %add279 = add nsw i32 %160, 2, !dbg !17231
  %rem280 = srem i32 %add279, 3, !dbg !17232
  %idxprom281 = sext i32 %rem280 to i64, !dbg !17233
  %arrayidx282 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom281, !dbg !17233
  %161 = load i32, i32* %arrayidx282, align 4, !dbg !17233
  %cmp283 = icmp slt i32 %159, %161, !dbg !17234
  br i1 %cmp283, label %for.body285, label %for.end474, !dbg !17235

for.body285:                                      ; preds = %for.cond278
  %162 = load %struct.MFace*, %struct.MFace** %mface_array, align 8, !dbg !17236
  store %struct.MFace* %162, %struct.MFace** %mface, align 8, !dbg !17238
  %163 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17239
  %particles286 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %163, i32 0, i32 3, !dbg !17240
  %164 = load %struct.ParticleData*, %struct.ParticleData** %particles286, align 8, !dbg !17240
  %165 = load i32, i32* %a1, align 4, !dbg !17241
  %166 = load i32, i32* %a1mul, align 4, !dbg !17242
  %mul287 = mul nsw i32 %165, %166, !dbg !17243
  %idx.ext = sext i32 %mul287 to i64, !dbg !17244
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %164, i64 %idx.ext, !dbg !17244
  %167 = load i32, i32* %a2, align 4, !dbg !17245
  %168 = load i32, i32* %a2mul, align 4, !dbg !17246
  %mul288 = mul nsw i32 %167, %168, !dbg !17247
  %idx.ext289 = sext i32 %mul288 to i64, !dbg !17248
  %add.ptr290 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr, i64 %idx.ext289, !dbg !17248
  store %struct.ParticleData* %add.ptr290, %struct.ParticleData** %pa, align 8, !dbg !17249
  %arraydecay291 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !17250
  %169 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17251
  %fuv292 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %169, i32 0, i32 11, !dbg !17252
  %arraydecay293 = getelementptr inbounds [4 x float], [4 x float]* %fuv292, i64 0, i64 0, !dbg !17251
  call void @copy_v3_v3(float* %arraydecay291, float* %arraydecay293), !dbg !17253
  %170 = load float, float* %d, align 4, !dbg !17254
  %171 = load i32, i32* %a, align 4, !dbg !17255
  %idxprom294 = sext i32 %171 to i64, !dbg !17256
  %arrayidx295 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 %idxprom294, !dbg !17256
  %172 = load float, float* %arrayidx295, align 4, !dbg !17256
  %cmp296 = fcmp olt float %170, %172, !dbg !17257
  br i1 %cmp296, label %cond.true298, label %cond.false300, !dbg !17254

cond.true298:                                     ; preds = %for.body285
  %173 = load float, float* %d, align 4, !dbg !17258
  %div299 = fdiv float %173, 2.000000e+00, !dbg !17259
  br label %cond.end304, !dbg !17254

cond.false300:                                    ; preds = %for.body285
  %174 = load i32, i32* %a, align 4, !dbg !17260
  %idxprom301 = sext i32 %174 to i64, !dbg !17261
  %arrayidx302 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 %idxprom301, !dbg !17261
  %175 = load float, float* %arrayidx302, align 4, !dbg !17261
  %div303 = fdiv float %175, 2.000000e+00, !dbg !17262
  br label %cond.end304, !dbg !17254

cond.end304:                                      ; preds = %cond.false300, %cond.true298
  %cond305 = phi float [ %div299, %cond.true298 ], [ %div303, %cond.false300 ], !dbg !17254
  %176 = load i32, i32* %a, align 4, !dbg !17263
  %idxprom306 = sext i32 %176 to i64, !dbg !17264
  %arrayidx307 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 %idxprom306, !dbg !17264
  %177 = load float, float* %arrayidx307, align 4, !dbg !17265
  %sub308 = fsub float %177, %cond305, !dbg !17265
  store float %sub308, float* %arrayidx307, align 4, !dbg !17265
  %arraydecay309 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !17266
  %arraydecay310 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !17267
  call void @copy_v3_v3(float* %arraydecay309, float* %arraydecay310), !dbg !17268
  %178 = load i32, i32* %a, align 4, !dbg !17269
  %idxprom311 = sext i32 %178 to i64, !dbg !17270
  %arrayidx312 = getelementptr inbounds [3 x float], [3 x float]* %delta, i64 0, i64 %idxprom311, !dbg !17270
  %179 = load float, float* %arrayidx312, align 4, !dbg !17270
  %180 = load float, float* %d, align 4, !dbg !17271
  %mul313 = fmul float 0x3F50624DE0000000, %180, !dbg !17272
  %add314 = fadd float %179, %mul313, !dbg !17273
  %181 = load i32, i32* %a, align 4, !dbg !17274
  %idxprom315 = sext i32 %181 to i64, !dbg !17275
  %arrayidx316 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 %idxprom315, !dbg !17275
  %182 = load float, float* %arrayidx316, align 4, !dbg !17276
  %add317 = fadd float %182, %add314, !dbg !17276
  store float %add317, float* %arrayidx316, align 4, !dbg !17276
  %183 = load float, float* %d, align 4, !dbg !17277
  %mul318 = fmul float 0x3F50624DE0000000, %183, !dbg !17278
  %184 = load i32, i32* %a, align 4, !dbg !17279
  %idxprom319 = sext i32 %184 to i64, !dbg !17280
  %arrayidx320 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 %idxprom319, !dbg !17280
  %185 = load float, float* %arrayidx320, align 4, !dbg !17281
  %sub321 = fsub float %185, %mul318, !dbg !17281
  store float %sub321, float* %arrayidx320, align 4, !dbg !17281
  store i32 0, i32* %i, align 4, !dbg !17282
  br label %for.cond322, !dbg !17284

for.cond322:                                      ; preds = %for.inc426, %cond.end304
  %186 = load i32, i32* %i, align 4, !dbg !17285
  %187 = load i32, i32* %totface, align 4, !dbg !17287
  %cmp323 = icmp slt i32 %186, %187, !dbg !17288
  br i1 %cmp323, label %for.body325, label %for.end429, !dbg !17289

for.body325:                                      ; preds = %for.cond322
  %arraydecay326 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !17290
  %188 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !17292
  %189 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !17293
  %v1327 = getelementptr inbounds %struct.MFace, %struct.MFace* %189, i32 0, i32 0, !dbg !17294
  %190 = load i32, i32* %v1327, align 4, !dbg !17294
  %idxprom328 = zext i32 %190 to i64, !dbg !17292
  %arrayidx329 = getelementptr inbounds %struct.MVert, %struct.MVert* %188, i64 %idxprom328, !dbg !17292
  %co330 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx329, i32 0, i32 0, !dbg !17295
  %arraydecay331 = getelementptr inbounds [3 x float], [3 x float]* %co330, i64 0, i64 0, !dbg !17292
  call void @copy_v3_v3(float* %arraydecay326, float* %arraydecay331), !dbg !17296
  %arraydecay332 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !17297
  %191 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !17298
  %192 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !17299
  %v2333 = getelementptr inbounds %struct.MFace, %struct.MFace* %192, i32 0, i32 1, !dbg !17300
  %193 = load i32, i32* %v2333, align 4, !dbg !17300
  %idxprom334 = zext i32 %193 to i64, !dbg !17298
  %arrayidx335 = getelementptr inbounds %struct.MVert, %struct.MVert* %191, i64 %idxprom334, !dbg !17298
  %co336 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx335, i32 0, i32 0, !dbg !17301
  %arraydecay337 = getelementptr inbounds [3 x float], [3 x float]* %co336, i64 0, i64 0, !dbg !17298
  call void @copy_v3_v3(float* %arraydecay332, float* %arraydecay337), !dbg !17302
  %arraydecay338 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !17303
  %194 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !17304
  %195 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !17305
  %v3339 = getelementptr inbounds %struct.MFace, %struct.MFace* %195, i32 0, i32 2, !dbg !17306
  %196 = load i32, i32* %v3339, align 4, !dbg !17306
  %idxprom340 = zext i32 %196 to i64, !dbg !17304
  %arrayidx341 = getelementptr inbounds %struct.MVert, %struct.MVert* %194, i64 %idxprom340, !dbg !17304
  %co342 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx341, i32 0, i32 0, !dbg !17307
  %arraydecay343 = getelementptr inbounds [3 x float], [3 x float]* %co342, i64 0, i64 0, !dbg !17304
  call void @copy_v3_v3(float* %arraydecay338, float* %arraydecay343), !dbg !17308
  %197 = load i32, i32* %a, align 4, !dbg !17309
  %arraydecay344 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !17311
  %arraydecay345 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !17312
  %arraydecay346 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !17313
  %arraydecay347 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !17314
  %arraydecay348 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !17315
  %call349 = call zeroext i8 @isect_axial_line_tri_v3(i32 %197, float* %arraydecay344, float* %arraydecay345, float* %arraydecay346, float* %arraydecay347, float* %arraydecay348, float* %lambda), !dbg !17316
  %tobool = icmp ne i8 %call349, 0, !dbg !17316
  br i1 %tobool, label %if.then350, label %if.else378, !dbg !17317

if.then350:                                       ; preds = %for.body325
  %198 = load i32, i32* %from, align 4, !dbg !17318
  %cmp351 = icmp eq i32 %198, 1, !dbg !17321
  br i1 %cmp351, label %if.then353, label %if.else366, !dbg !17322

if.then353:                                       ; preds = %if.then350
  %199 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17323
  %200 = load float, float* %lambda, align 4, !dbg !17324
  %201 = load i32, i32* %a, align 4, !dbg !17325
  %idxprom354 = sext i32 %201 to i64, !dbg !17326
  %arrayidx355 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom354, !dbg !17326
  %202 = load i32, i32* %arrayidx355, align 4, !dbg !17326
  %conv356 = sitofp i32 %202 to float, !dbg !17326
  %mul357 = fmul float %200, %conv356, !dbg !17327
  %conv358 = fptosi float %mul357 to i32, !dbg !17328
  %203 = load i32, i32* %a0mul, align 4, !dbg !17329
  %mul359 = mul nsw i32 %conv358, %203, !dbg !17330
  %idx.ext360 = sext i32 %mul359 to i64, !dbg !17331
  %add.ptr361 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %199, i64 %idx.ext360, !dbg !17331
  %flag362 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr361, i32 0, i32 17, !dbg !17332
  %204 = load i16, i16* %flag362, align 4, !dbg !17333
  %conv363 = sext i16 %204 to i32, !dbg !17333
  %and364 = and i32 %conv363, -2, !dbg !17333
  %conv365 = trunc i32 %and364 to i16, !dbg !17333
  store i16 %conv365, i16* %flag362, align 4, !dbg !17333
  br label %if.end377, !dbg !17334

if.else366:                                       ; preds = %if.then350
  %205 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17335
  %206 = load float, float* %lambda, align 4, !dbg !17336
  %207 = load i32, i32* %a, align 4, !dbg !17337
  %idxprom367 = sext i32 %207 to i64, !dbg !17338
  %arrayidx368 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom367, !dbg !17338
  %208 = load i32, i32* %arrayidx368, align 4, !dbg !17338
  %conv369 = sitofp i32 %208 to float, !dbg !17338
  %mul370 = fmul float %206, %conv369, !dbg !17339
  %conv371 = fptosi float %mul370 to i32, !dbg !17340
  %209 = load i32, i32* %a0mul, align 4, !dbg !17341
  %mul372 = mul nsw i32 %conv371, %209, !dbg !17342
  %idx.ext373 = sext i32 %mul372 to i64, !dbg !17343
  %add.ptr374 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %205, i64 %idx.ext373, !dbg !17343
  %hair_index375 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr374, i32 0, i32 16, !dbg !17344
  %210 = load i32, i32* %hair_index375, align 8, !dbg !17345
  %inc376 = add nsw i32 %210, 1, !dbg !17345
  store i32 %inc376, i32* %hair_index375, align 8, !dbg !17345
  br label %if.end377

if.end377:                                        ; preds = %if.else366, %if.then353
  br label %if.end425, !dbg !17346

if.else378:                                       ; preds = %for.body325
  %211 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !17347
  %v4379 = getelementptr inbounds %struct.MFace, %struct.MFace* %211, i32 0, i32 3, !dbg !17349
  %212 = load i32, i32* %v4379, align 4, !dbg !17349
  %tobool380 = icmp ne i32 %212, 0, !dbg !17347
  br i1 %tobool380, label %if.then381, label %if.end424, !dbg !17350

if.then381:                                       ; preds = %if.else378
  %arraydecay382 = getelementptr inbounds [4 x float], [4 x float]* %v4, i64 0, i64 0, !dbg !17351
  %213 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !17353
  %214 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !17354
  %v4383 = getelementptr inbounds %struct.MFace, %struct.MFace* %214, i32 0, i32 3, !dbg !17355
  %215 = load i32, i32* %v4383, align 4, !dbg !17355
  %idxprom384 = zext i32 %215 to i64, !dbg !17353
  %arrayidx385 = getelementptr inbounds %struct.MVert, %struct.MVert* %213, i64 %idxprom384, !dbg !17353
  %co386 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx385, i32 0, i32 0, !dbg !17356
  %arraydecay387 = getelementptr inbounds [3 x float], [3 x float]* %co386, i64 0, i64 0, !dbg !17353
  call void @copy_v3_v3(float* %arraydecay382, float* %arraydecay387), !dbg !17357
  %216 = load i32, i32* %a, align 4, !dbg !17358
  %arraydecay388 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !17360
  %arraydecay389 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !17361
  %arraydecay390 = getelementptr inbounds [4 x float], [4 x float]* %v4, i64 0, i64 0, !dbg !17362
  %arraydecay391 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !17363
  %arraydecay392 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !17364
  %call393 = call zeroext i8 @isect_axial_line_tri_v3(i32 %216, float* %arraydecay388, float* %arraydecay389, float* %arraydecay390, float* %arraydecay391, float* %arraydecay392, float* %lambda), !dbg !17365
  %tobool394 = icmp ne i8 %call393, 0, !dbg !17365
  br i1 %tobool394, label %if.then395, label %if.end423, !dbg !17366

if.then395:                                       ; preds = %if.then381
  %217 = load i32, i32* %from, align 4, !dbg !17367
  %cmp396 = icmp eq i32 %217, 1, !dbg !17370
  br i1 %cmp396, label %if.then398, label %if.else411, !dbg !17371

if.then398:                                       ; preds = %if.then395
  %218 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17372
  %219 = load float, float* %lambda, align 4, !dbg !17373
  %220 = load i32, i32* %a, align 4, !dbg !17374
  %idxprom399 = sext i32 %220 to i64, !dbg !17375
  %arrayidx400 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom399, !dbg !17375
  %221 = load i32, i32* %arrayidx400, align 4, !dbg !17375
  %conv401 = sitofp i32 %221 to float, !dbg !17375
  %mul402 = fmul float %219, %conv401, !dbg !17376
  %conv403 = fptosi float %mul402 to i32, !dbg !17377
  %222 = load i32, i32* %a0mul, align 4, !dbg !17378
  %mul404 = mul nsw i32 %conv403, %222, !dbg !17379
  %idx.ext405 = sext i32 %mul404 to i64, !dbg !17380
  %add.ptr406 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %218, i64 %idx.ext405, !dbg !17380
  %flag407 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr406, i32 0, i32 17, !dbg !17381
  %223 = load i16, i16* %flag407, align 4, !dbg !17382
  %conv408 = sext i16 %223 to i32, !dbg !17382
  %and409 = and i32 %conv408, -2, !dbg !17382
  %conv410 = trunc i32 %and409 to i16, !dbg !17382
  store i16 %conv410, i16* %flag407, align 4, !dbg !17382
  br label %if.end422, !dbg !17383

if.else411:                                       ; preds = %if.then395
  %224 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17384
  %225 = load float, float* %lambda, align 4, !dbg !17385
  %226 = load i32, i32* %a, align 4, !dbg !17386
  %idxprom412 = sext i32 %226 to i64, !dbg !17387
  %arrayidx413 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 %idxprom412, !dbg !17387
  %227 = load i32, i32* %arrayidx413, align 4, !dbg !17387
  %conv414 = sitofp i32 %227 to float, !dbg !17387
  %mul415 = fmul float %225, %conv414, !dbg !17388
  %conv416 = fptosi float %mul415 to i32, !dbg !17389
  %228 = load i32, i32* %a0mul, align 4, !dbg !17390
  %mul417 = mul nsw i32 %conv416, %228, !dbg !17391
  %idx.ext418 = sext i32 %mul417 to i64, !dbg !17392
  %add.ptr419 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %224, i64 %idx.ext418, !dbg !17392
  %hair_index420 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr419, i32 0, i32 16, !dbg !17393
  %229 = load i32, i32* %hair_index420, align 8, !dbg !17394
  %inc421 = add nsw i32 %229, 1, !dbg !17394
  store i32 %inc421, i32* %hair_index420, align 8, !dbg !17394
  br label %if.end422

if.end422:                                        ; preds = %if.else411, %if.then398
  br label %if.end423, !dbg !17395

if.end423:                                        ; preds = %if.end422, %if.then381
  br label %if.end424, !dbg !17396

if.end424:                                        ; preds = %if.end423, %if.else378
  br label %if.end425

if.end425:                                        ; preds = %if.end424, %if.end377
  br label %for.inc426, !dbg !17397

for.inc426:                                       ; preds = %if.end425
  %230 = load i32, i32* %i, align 4, !dbg !17398
  %inc427 = add nsw i32 %230, 1, !dbg !17398
  store i32 %inc427, i32* %i, align 4, !dbg !17398
  %231 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !17399
  %incdec.ptr428 = getelementptr inbounds %struct.MFace, %struct.MFace* %231, i32 1, !dbg !17399
  store %struct.MFace* %incdec.ptr428, %struct.MFace** %mface, align 8, !dbg !17399
  br label %for.cond322, !dbg !17400, !llvm.loop !17401

for.end429:                                       ; preds = %for.cond322
  %232 = load i32, i32* %from, align 4, !dbg !17403
  %cmp430 = icmp eq i32 %232, 2, !dbg !17405
  br i1 %cmp430, label %if.then432, label %if.end471, !dbg !17406

if.then432:                                       ; preds = %for.end429
  call void @llvm.dbg.declare(metadata i32* %in, metadata !17407, metadata !DIExpression()), !dbg !17409
  %233 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17410
  %hair_index433 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %233, i32 0, i32 16, !dbg !17411
  %234 = load i32, i32* %hair_index433, align 8, !dbg !17411
  %rem434 = srem i32 %234, 2, !dbg !17412
  store i32 %rem434, i32* %in, align 4, !dbg !17409
  %235 = load i32, i32* %in, align 4, !dbg !17413
  %tobool435 = icmp ne i32 %235, 0, !dbg !17413
  br i1 %tobool435, label %if.then436, label %if.end439, !dbg !17415

if.then436:                                       ; preds = %if.then432
  %236 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17416
  %hair_index437 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %236, i32 0, i32 16, !dbg !17417
  %237 = load i32, i32* %hair_index437, align 8, !dbg !17418
  %inc438 = add nsw i32 %237, 1, !dbg !17418
  store i32 %inc438, i32* %hair_index437, align 8, !dbg !17418
  br label %if.end439, !dbg !17416

if.end439:                                        ; preds = %if.then436, %if.then432
  store i32 0, i32* %i, align 4, !dbg !17419
  br label %for.cond440, !dbg !17421

for.cond440:                                      ; preds = %for.inc468, %if.end439
  %238 = load i32, i32* %i, align 4, !dbg !17422
  %arrayidx441 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 0, !dbg !17424
  %239 = load i32, i32* %arrayidx441, align 4, !dbg !17424
  %cmp442 = icmp slt i32 %238, %239, !dbg !17425
  br i1 %cmp442, label %for.body444, label %for.end470, !dbg !17426

for.body444:                                      ; preds = %for.cond440
  %240 = load i32, i32* %in, align 4, !dbg !17427
  %tobool445 = icmp ne i32 %240, 0, !dbg !17427
  br i1 %tobool445, label %if.then453, label %lor.lhs.false446, !dbg !17430

lor.lhs.false446:                                 ; preds = %for.body444
  %241 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17431
  %242 = load i32, i32* %i, align 4, !dbg !17432
  %243 = load i32, i32* %a0mul, align 4, !dbg !17433
  %mul447 = mul nsw i32 %242, %243, !dbg !17434
  %idx.ext448 = sext i32 %mul447 to i64, !dbg !17435
  %add.ptr449 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %241, i64 %idx.ext448, !dbg !17435
  %hair_index450 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr449, i32 0, i32 16, !dbg !17436
  %244 = load i32, i32* %hair_index450, align 8, !dbg !17436
  %rem451 = srem i32 %244, 2, !dbg !17437
  %tobool452 = icmp ne i32 %rem451, 0, !dbg !17437
  br i1 %tobool452, label %if.then453, label %if.end461, !dbg !17438

if.then453:                                       ; preds = %lor.lhs.false446, %for.body444
  %245 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17439
  %246 = load i32, i32* %i, align 4, !dbg !17440
  %247 = load i32, i32* %a0mul, align 4, !dbg !17441
  %mul454 = mul nsw i32 %246, %247, !dbg !17442
  %idx.ext455 = sext i32 %mul454 to i64, !dbg !17443
  %add.ptr456 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %245, i64 %idx.ext455, !dbg !17443
  %flag457 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr456, i32 0, i32 17, !dbg !17444
  %248 = load i16, i16* %flag457, align 4, !dbg !17445
  %conv458 = sext i16 %248 to i32, !dbg !17445
  %and459 = and i32 %conv458, -2, !dbg !17445
  %conv460 = trunc i32 %and459 to i16, !dbg !17445
  store i16 %conv460, i16* %flag457, align 4, !dbg !17445
  br label %if.end461, !dbg !17446

if.end461:                                        ; preds = %if.then453, %lor.lhs.false446
  %249 = load i32, i32* %in, align 4, !dbg !17447
  %250 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17448
  %251 = load i32, i32* %i, align 4, !dbg !17449
  %252 = load i32, i32* %a0mul, align 4, !dbg !17450
  %mul462 = mul nsw i32 %251, %252, !dbg !17451
  %idx.ext463 = sext i32 %mul462 to i64, !dbg !17452
  %add.ptr464 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %250, i64 %idx.ext463, !dbg !17452
  %hair_index465 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %add.ptr464, i32 0, i32 16, !dbg !17453
  %253 = load i32, i32* %hair_index465, align 8, !dbg !17453
  %add466 = add nsw i32 %249, %253, !dbg !17454
  %rem467 = srem i32 %add466, 2, !dbg !17455
  store i32 %rem467, i32* %in, align 4, !dbg !17456
  br label %for.inc468, !dbg !17457

for.inc468:                                       ; preds = %if.end461
  %254 = load i32, i32* %i, align 4, !dbg !17458
  %inc469 = add nsw i32 %254, 1, !dbg !17458
  store i32 %inc469, i32* %i, align 4, !dbg !17458
  br label %for.cond440, !dbg !17459, !llvm.loop !17460

for.end470:                                       ; preds = %for.cond440
  br label %if.end471, !dbg !17462

if.end471:                                        ; preds = %for.end470, %for.end429
  br label %for.inc472, !dbg !17463

for.inc472:                                       ; preds = %if.end471
  %255 = load i32, i32* %a2, align 4, !dbg !17464
  %inc473 = add nsw i32 %255, 1, !dbg !17464
  store i32 %inc473, i32* %a2, align 4, !dbg !17464
  br label %for.cond278, !dbg !17465, !llvm.loop !17466

for.end474:                                       ; preds = %for.cond278
  br label %for.inc475, !dbg !17468

for.inc475:                                       ; preds = %for.end474
  %256 = load i32, i32* %a1, align 4, !dbg !17469
  %inc476 = add nsw i32 %256, 1, !dbg !17469
  store i32 %inc476, i32* %a1, align 4, !dbg !17469
  br label %for.cond270, !dbg !17470, !llvm.loop !17471

for.end477:                                       ; preds = %for.cond270
  br label %for.inc478, !dbg !17473

for.inc478:                                       ; preds = %for.end477
  %257 = load i32, i32* %a, align 4, !dbg !17474
  %inc479 = add nsw i32 %257, 1, !dbg !17474
  store i32 %inc479, i32* %a, align 4, !dbg !17474
  br label %for.cond253, !dbg !17475, !llvm.loop !17476

for.end480:                                       ; preds = %for.cond253
  br label %if.end481, !dbg !17478

if.end481:                                        ; preds = %for.end480, %lor.lhs.false
  br label %if.end482

if.end482:                                        ; preds = %if.end481, %for.end241
  %258 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17479
  %part483 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %258, i32 0, i32 2, !dbg !17481
  %259 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part483, align 8, !dbg !17481
  %flag484 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %259, i32 0, i32 5, !dbg !17482
  %260 = load i32, i32* %flag484, align 8, !dbg !17482
  %and485 = and i32 %260, 16777216, !dbg !17483
  %tobool486 = icmp ne i32 %and485, 0, !dbg !17483
  br i1 %tobool486, label %if.then487, label %if.end532, !dbg !17484

if.then487:                                       ; preds = %if.end482
  store i32 0, i32* %i, align 4, !dbg !17485
  store i32 0, i32* %p, align 4, !dbg !17488
  %261 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17489
  %particles488 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %261, i32 0, i32 3, !dbg !17490
  %262 = load %struct.ParticleData*, %struct.ParticleData** %particles488, align 8, !dbg !17490
  store %struct.ParticleData* %262, %struct.ParticleData** %pa, align 8, !dbg !17491
  br label %for.cond489, !dbg !17492

for.cond489:                                      ; preds = %for.inc529, %if.then487
  %263 = load i32, i32* %i, align 4, !dbg !17493
  %264 = load i32, i32* %res, align 4, !dbg !17495
  %cmp490 = icmp slt i32 %263, %264, !dbg !17496
  br i1 %cmp490, label %for.body492, label %for.end531, !dbg !17497

for.body492:                                      ; preds = %for.cond489
  store i32 0, i32* %j, align 4, !dbg !17498
  br label %for.cond493, !dbg !17501

for.cond493:                                      ; preds = %for.inc526, %for.body492
  %265 = load i32, i32* %j, align 4, !dbg !17502
  %266 = load i32, i32* %res, align 4, !dbg !17504
  %cmp494 = icmp slt i32 %265, %266, !dbg !17505
  br i1 %cmp494, label %for.body496, label %for.end528, !dbg !17506

for.body496:                                      ; preds = %for.cond493
  store i32 0, i32* %k, align 4, !dbg !17507
  br label %for.cond497, !dbg !17510

for.cond497:                                      ; preds = %for.inc521, %for.body496
  %267 = load i32, i32* %k, align 4, !dbg !17511
  %268 = load i32, i32* %res, align 4, !dbg !17513
  %cmp498 = icmp slt i32 %267, %268, !dbg !17514
  br i1 %cmp498, label %for.body500, label %for.end525, !dbg !17515

for.body500:                                      ; preds = %for.cond497
  %269 = load i32, i32* %j, align 4, !dbg !17516
  %rem501 = srem i32 %269, 2, !dbg !17519
  %tobool502 = icmp ne i32 %rem501, 0, !dbg !17519
  br i1 %tobool502, label %if.then503, label %if.end508, !dbg !17520

if.then503:                                       ; preds = %for.body500
  %270 = load float, float* %d, align 4, !dbg !17521
  %div504 = fdiv float %270, 2.000000e+00, !dbg !17522
  %271 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17523
  %fuv505 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %271, i32 0, i32 11, !dbg !17524
  %arrayidx506 = getelementptr inbounds [4 x float], [4 x float]* %fuv505, i64 0, i64 0, !dbg !17523
  %272 = load float, float* %arrayidx506, align 8, !dbg !17525
  %add507 = fadd float %272, %div504, !dbg !17525
  store float %add507, float* %arrayidx506, align 8, !dbg !17525
  br label %if.end508, !dbg !17523

if.end508:                                        ; preds = %if.then503, %for.body500
  %273 = load i32, i32* %k, align 4, !dbg !17526
  %rem509 = srem i32 %273, 2, !dbg !17528
  %tobool510 = icmp ne i32 %rem509, 0, !dbg !17528
  br i1 %tobool510, label %if.then511, label %if.end520, !dbg !17529

if.then511:                                       ; preds = %if.end508
  %274 = load float, float* %d, align 4, !dbg !17530
  %div512 = fdiv float %274, 2.000000e+00, !dbg !17532
  %275 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17533
  %fuv513 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %275, i32 0, i32 11, !dbg !17534
  %arrayidx514 = getelementptr inbounds [4 x float], [4 x float]* %fuv513, i64 0, i64 0, !dbg !17533
  %276 = load float, float* %arrayidx514, align 8, !dbg !17535
  %add515 = fadd float %276, %div512, !dbg !17535
  store float %add515, float* %arrayidx514, align 8, !dbg !17535
  %277 = load float, float* %d, align 4, !dbg !17536
  %div516 = fdiv float %277, 2.000000e+00, !dbg !17537
  %278 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17538
  %fuv517 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %278, i32 0, i32 11, !dbg !17539
  %arrayidx518 = getelementptr inbounds [4 x float], [4 x float]* %fuv517, i64 0, i64 1, !dbg !17538
  %279 = load float, float* %arrayidx518, align 4, !dbg !17540
  %add519 = fadd float %279, %div516, !dbg !17540
  store float %add519, float* %arrayidx518, align 4, !dbg !17540
  br label %if.end520, !dbg !17541

if.end520:                                        ; preds = %if.then511, %if.end508
  br label %for.inc521, !dbg !17542

for.inc521:                                       ; preds = %if.end520
  %280 = load i32, i32* %k, align 4, !dbg !17543
  %inc522 = add nsw i32 %280, 1, !dbg !17543
  store i32 %inc522, i32* %k, align 4, !dbg !17543
  %281 = load i32, i32* %p, align 4, !dbg !17544
  %inc523 = add nsw i32 %281, 1, !dbg !17544
  store i32 %inc523, i32* %p, align 4, !dbg !17544
  %282 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17545
  %incdec.ptr524 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %282, i32 1, !dbg !17545
  store %struct.ParticleData* %incdec.ptr524, %struct.ParticleData** %pa, align 8, !dbg !17545
  br label %for.cond497, !dbg !17546, !llvm.loop !17547

for.end525:                                       ; preds = %for.cond497
  br label %for.inc526, !dbg !17549

for.inc526:                                       ; preds = %for.end525
  %283 = load i32, i32* %j, align 4, !dbg !17550
  %inc527 = add nsw i32 %283, 1, !dbg !17550
  store i32 %inc527, i32* %j, align 4, !dbg !17550
  br label %for.cond493, !dbg !17551, !llvm.loop !17552

for.end528:                                       ; preds = %for.cond493
  br label %for.inc529, !dbg !17554

for.inc529:                                       ; preds = %for.end528
  %284 = load i32, i32* %i, align 4, !dbg !17555
  %inc530 = add nsw i32 %284, 1, !dbg !17555
  store i32 %inc530, i32* %i, align 4, !dbg !17555
  br label %for.cond489, !dbg !17556, !llvm.loop !17557

for.end531:                                       ; preds = %for.cond489
  br label %if.end532, !dbg !17559

if.end532:                                        ; preds = %for.end531, %if.end482
  %285 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17560
  %part533 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %285, i32 0, i32 2, !dbg !17562
  %286 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part533, align 8, !dbg !17562
  %flag534 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %286, i32 0, i32 5, !dbg !17563
  %287 = load i32, i32* %flag534, align 8, !dbg !17563
  %and535 = and i32 %287, 67108864, !dbg !17564
  %tobool536 = icmp ne i32 %and535, 0, !dbg !17564
  br i1 %tobool536, label %if.then537, label %if.end572, !dbg !17565

if.then537:                                       ; preds = %if.end532
  store i32 0, i32* %i, align 4, !dbg !17566
  br label %for.cond538, !dbg !17569

for.cond538:                                      ; preds = %for.inc569, %if.then537
  %288 = load i32, i32* %i, align 4, !dbg !17570
  %arrayidx539 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 0, !dbg !17572
  %289 = load i32, i32* %arrayidx539, align 4, !dbg !17572
  %cmp540 = icmp slt i32 %288, %289, !dbg !17573
  br i1 %cmp540, label %for.body542, label %for.end571, !dbg !17574

for.body542:                                      ; preds = %for.cond538
  store i32 0, i32* %j, align 4, !dbg !17575
  br label %for.cond543, !dbg !17578

for.cond543:                                      ; preds = %for.inc566, %for.body542
  %290 = load i32, i32* %j, align 4, !dbg !17579
  %arrayidx544 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 1, !dbg !17581
  %291 = load i32, i32* %arrayidx544, align 4, !dbg !17581
  %cmp545 = icmp slt i32 %290, %291, !dbg !17582
  br i1 %cmp545, label %for.body547, label %for.end568, !dbg !17583

for.body547:                                      ; preds = %for.cond543
  %292 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17584
  %particles548 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %292, i32 0, i32 3, !dbg !17586
  %293 = load %struct.ParticleData*, %struct.ParticleData** %particles548, align 8, !dbg !17586
  %294 = load i32, i32* %res, align 4, !dbg !17587
  %295 = load i32, i32* %i, align 4, !dbg !17588
  %296 = load i32, i32* %res, align 4, !dbg !17589
  %mul549 = mul nsw i32 %295, %296, !dbg !17590
  %297 = load i32, i32* %j, align 4, !dbg !17591
  %add550 = add nsw i32 %mul549, %297, !dbg !17592
  %mul551 = mul nsw i32 %294, %add550, !dbg !17593
  %idx.ext552 = sext i32 %mul551 to i64, !dbg !17594
  %add.ptr553 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %293, i64 %idx.ext552, !dbg !17594
  store %struct.ParticleData* %add.ptr553, %struct.ParticleData** %pa, align 8, !dbg !17595
  store i32 0, i32* %k, align 4, !dbg !17596
  br label %for.cond554, !dbg !17598

for.cond554:                                      ; preds = %for.inc562, %for.body547
  %298 = load i32, i32* %k, align 4, !dbg !17599
  %arrayidx555 = getelementptr inbounds [3 x i32], [3 x i32]* %size, i64 0, i64 2, !dbg !17601
  %299 = load i32, i32* %arrayidx555, align 4, !dbg !17601
  %cmp556 = icmp slt i32 %298, %299, !dbg !17602
  br i1 %cmp556, label %for.body558, label %for.end565, !dbg !17603

for.body558:                                      ; preds = %for.cond554
  %300 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17604
  %flag559 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %300, i32 0, i32 17, !dbg !17606
  %301 = load i16, i16* %flag559, align 4, !dbg !17607
  %conv560 = sext i16 %301 to i32, !dbg !17607
  %xor = xor i32 %conv560, 1, !dbg !17607
  %conv561 = trunc i32 %xor to i16, !dbg !17607
  store i16 %conv561, i16* %flag559, align 4, !dbg !17607
  br label %for.inc562, !dbg !17608

for.inc562:                                       ; preds = %for.body558
  %302 = load i32, i32* %k, align 4, !dbg !17609
  %inc563 = add nsw i32 %302, 1, !dbg !17609
  store i32 %inc563, i32* %k, align 4, !dbg !17609
  %303 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17610
  %incdec.ptr564 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %303, i32 1, !dbg !17610
  store %struct.ParticleData* %incdec.ptr564, %struct.ParticleData** %pa, align 8, !dbg !17610
  br label %for.cond554, !dbg !17611, !llvm.loop !17612

for.end565:                                       ; preds = %for.cond554
  br label %for.inc566, !dbg !17614

for.inc566:                                       ; preds = %for.end565
  %304 = load i32, i32* %j, align 4, !dbg !17615
  %inc567 = add nsw i32 %304, 1, !dbg !17615
  store i32 %inc567, i32* %j, align 4, !dbg !17615
  br label %for.cond543, !dbg !17616, !llvm.loop !17617

for.end568:                                       ; preds = %for.cond543
  br label %for.inc569, !dbg !17619

for.inc569:                                       ; preds = %for.end568
  %305 = load i32, i32* %i, align 4, !dbg !17620
  %inc570 = add nsw i32 %305, 1, !dbg !17620
  store i32 %inc570, i32* %i, align 4, !dbg !17620
  br label %for.cond538, !dbg !17621, !llvm.loop !17622

for.end571:                                       ; preds = %for.cond538
  br label %if.end572, !dbg !17624

if.end572:                                        ; preds = %for.end571, %if.end532
  %306 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17625
  %part573 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %306, i32 0, i32 2, !dbg !17627
  %307 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part573, align 8, !dbg !17627
  %grid_rand = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %307, i32 0, i32 61, !dbg !17628
  %308 = load float, float* %grid_rand, align 4, !dbg !17628
  %cmp574 = fcmp ogt float %308, 0.000000e+00, !dbg !17629
  br i1 %cmp574, label %if.then576, label %if.end616, !dbg !17630

if.then576:                                       ; preds = %if.end572
  call void @llvm.dbg.declare(metadata float* %rfac, metadata !17631, metadata !DIExpression()), !dbg !17633
  %309 = load float, float* %d, align 4, !dbg !17634
  %310 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17635
  %part577 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %310, i32 0, i32 2, !dbg !17636
  %311 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part577, align 8, !dbg !17636
  %grid_rand578 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %311, i32 0, i32 61, !dbg !17637
  %312 = load float, float* %grid_rand578, align 4, !dbg !17637
  %mul579 = fmul float %309, %312, !dbg !17638
  store float %mul579, float* %rfac, align 4, !dbg !17633
  store i32 0, i32* %p, align 4, !dbg !17639
  %313 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17641
  %particles580 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %313, i32 0, i32 3, !dbg !17642
  %314 = load %struct.ParticleData*, %struct.ParticleData** %particles580, align 8, !dbg !17642
  store %struct.ParticleData* %314, %struct.ParticleData** %pa, align 8, !dbg !17643
  br label %for.cond581, !dbg !17644

for.cond581:                                      ; preds = %for.inc612, %if.then576
  %315 = load i32, i32* %p, align 4, !dbg !17645
  %316 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17647
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %316, i32 0, i32 26, !dbg !17648
  %317 = load i32, i32* %totpart, align 8, !dbg !17648
  %cmp582 = icmp slt i32 %315, %317, !dbg !17649
  br i1 %cmp582, label %for.body584, label %for.end615, !dbg !17650

for.body584:                                      ; preds = %for.cond581
  %318 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17651
  %flag585 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %318, i32 0, i32 17, !dbg !17654
  %319 = load i16, i16* %flag585, align 4, !dbg !17654
  %conv586 = sext i16 %319 to i32, !dbg !17651
  %and587 = and i32 %conv586, 1, !dbg !17655
  %tobool588 = icmp ne i32 %and587, 0, !dbg !17655
  br i1 %tobool588, label %if.then589, label %if.end590, !dbg !17656

if.then589:                                       ; preds = %for.body584
  br label %for.inc612, !dbg !17657

if.end590:                                        ; preds = %for.body584
  %320 = load float, float* %rfac, align 4, !dbg !17658
  %321 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17659
  %322 = load i32, i32* %p, align 4, !dbg !17660
  %add591 = add nsw i32 %322, 31, !dbg !17661
  %call592 = call float @psys_frand(%struct.ParticleSystem* %321, i32 %add591), !dbg !17662
  %sub593 = fsub float %call592, 5.000000e-01, !dbg !17663
  %mul594 = fmul float %320, %sub593, !dbg !17664
  %323 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17665
  %fuv595 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %323, i32 0, i32 11, !dbg !17666
  %arrayidx596 = getelementptr inbounds [4 x float], [4 x float]* %fuv595, i64 0, i64 0, !dbg !17665
  %324 = load float, float* %arrayidx596, align 8, !dbg !17667
  %add597 = fadd float %324, %mul594, !dbg !17667
  store float %add597, float* %arrayidx596, align 8, !dbg !17667
  %325 = load float, float* %rfac, align 4, !dbg !17668
  %326 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17669
  %327 = load i32, i32* %p, align 4, !dbg !17670
  %add598 = add nsw i32 %327, 32, !dbg !17671
  %call599 = call float @psys_frand(%struct.ParticleSystem* %326, i32 %add598), !dbg !17672
  %sub600 = fsub float %call599, 5.000000e-01, !dbg !17673
  %mul601 = fmul float %325, %sub600, !dbg !17674
  %328 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17675
  %fuv602 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %328, i32 0, i32 11, !dbg !17676
  %arrayidx603 = getelementptr inbounds [4 x float], [4 x float]* %fuv602, i64 0, i64 1, !dbg !17675
  %329 = load float, float* %arrayidx603, align 4, !dbg !17677
  %add604 = fadd float %329, %mul601, !dbg !17677
  store float %add604, float* %arrayidx603, align 4, !dbg !17677
  %330 = load float, float* %rfac, align 4, !dbg !17678
  %331 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !17679
  %332 = load i32, i32* %p, align 4, !dbg !17680
  %add605 = add nsw i32 %332, 33, !dbg !17681
  %call606 = call float @psys_frand(%struct.ParticleSystem* %331, i32 %add605), !dbg !17682
  %sub607 = fsub float %call606, 5.000000e-01, !dbg !17683
  %mul608 = fmul float %330, %sub607, !dbg !17684
  %333 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17685
  %fuv609 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %333, i32 0, i32 11, !dbg !17686
  %arrayidx610 = getelementptr inbounds [4 x float], [4 x float]* %fuv609, i64 0, i64 2, !dbg !17685
  %334 = load float, float* %arrayidx610, align 8, !dbg !17687
  %add611 = fadd float %334, %mul608, !dbg !17687
  store float %add611, float* %arrayidx610, align 8, !dbg !17687
  br label %for.inc612, !dbg !17688

for.inc612:                                       ; preds = %if.end590, %if.then589
  %335 = load i32, i32* %p, align 4, !dbg !17689
  %inc613 = add nsw i32 %335, 1, !dbg !17689
  store i32 %inc613, i32* %p, align 4, !dbg !17689
  %336 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !17690
  %incdec.ptr614 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %336, i32 1, !dbg !17690
  store %struct.ParticleData* %incdec.ptr614, %struct.ParticleData** %pa, align 8, !dbg !17690
  br label %for.cond581, !dbg !17691, !llvm.loop !17692

for.end615:                                       ; preds = %for.cond581
  br label %if.end616, !dbg !17694

if.end616:                                        ; preds = %for.end615, %if.end572
  ret void, !dbg !17695
}

declare dso_local void @psys_particle_on_dm(%struct.DerivedMesh*, i32, i32, i32, float*, float, float*, float*, float*, float*, float*, float*) #2

declare dso_local void @BKE_mesh_orco_verts_transform(%struct.Mesh*, [3 x float]*, i32, i32) #2

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #2

declare dso_local [3 x float]* @BKE_mesh_orco_verts_get(%struct.Object*) #2

declare dso_local float @area_quad_v3(float*, float*, float*, float*) #2

declare dso_local float @area_tri_v3(float*, float*, float*) #2

declare dso_local float* @psys_cache_vgroup(%struct.DerivedMesh*, %struct.ParticleSystem*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @distribute_binary_search(float* %sum, i32 %n, float %value) #0 !dbg !17696 {
entry:
  %retval = alloca i32, align 4
  %sum.addr = alloca float*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca float, align 4
  %mid = alloca i32, align 4
  %low = alloca i32, align 4
  %high = alloca i32, align 4
  store float* %sum, float** %sum.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sum.addr, metadata !17699, metadata !DIExpression()), !dbg !17700
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !17701, metadata !DIExpression()), !dbg !17702
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !17703, metadata !DIExpression()), !dbg !17704
  call void @llvm.dbg.declare(metadata i32* %mid, metadata !17705, metadata !DIExpression()), !dbg !17706
  call void @llvm.dbg.declare(metadata i32* %low, metadata !17707, metadata !DIExpression()), !dbg !17708
  store i32 0, i32* %low, align 4, !dbg !17708
  call void @llvm.dbg.declare(metadata i32* %high, metadata !17709, metadata !DIExpression()), !dbg !17710
  %0 = load i32, i32* %n.addr, align 4, !dbg !17711
  store i32 %0, i32* %high, align 4, !dbg !17710
  %1 = load float, float* %value.addr, align 4, !dbg !17712
  %cmp = fcmp oeq float %1, 0.000000e+00, !dbg !17714
  br i1 %cmp, label %if.then, label %if.end, !dbg !17715

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17716
  br label %return, !dbg !17716

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !17717

while.cond:                                       ; preds = %if.end20, %if.end
  %2 = load i32, i32* %low, align 4, !dbg !17718
  %3 = load i32, i32* %high, align 4, !dbg !17719
  %cmp1 = icmp sle i32 %2, %3, !dbg !17720
  br i1 %cmp1, label %while.body, label %while.end, !dbg !17717

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %low, align 4, !dbg !17721
  %5 = load i32, i32* %high, align 4, !dbg !17723
  %add = add nsw i32 %4, %5, !dbg !17724
  %div = sdiv i32 %add, 2, !dbg !17725
  store i32 %div, i32* %mid, align 4, !dbg !17726
  %6 = load float*, float** %sum.addr, align 8, !dbg !17727
  %7 = load i32, i32* %mid, align 4, !dbg !17729
  %idxprom = sext i32 %7 to i64, !dbg !17727
  %arrayidx = getelementptr inbounds float, float* %6, i64 %idxprom, !dbg !17727
  %8 = load float, float* %arrayidx, align 4, !dbg !17727
  %9 = load float, float* %value.addr, align 4, !dbg !17730
  %cmp2 = fcmp olt float %8, %9, !dbg !17731
  br i1 %cmp2, label %land.lhs.true, label %if.end8, !dbg !17732

land.lhs.true:                                    ; preds = %while.body
  %10 = load float, float* %value.addr, align 4, !dbg !17733
  %11 = load float*, float** %sum.addr, align 8, !dbg !17734
  %12 = load i32, i32* %mid, align 4, !dbg !17735
  %add3 = add nsw i32 %12, 1, !dbg !17736
  %idxprom4 = sext i32 %add3 to i64, !dbg !17734
  %arrayidx5 = getelementptr inbounds float, float* %11, i64 %idxprom4, !dbg !17734
  %13 = load float, float* %arrayidx5, align 4, !dbg !17734
  %cmp6 = fcmp ole float %10, %13, !dbg !17737
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !17738

if.then7:                                         ; preds = %land.lhs.true
  %14 = load i32, i32* %mid, align 4, !dbg !17739
  store i32 %14, i32* %retval, align 4, !dbg !17740
  br label %return, !dbg !17740

if.end8:                                          ; preds = %land.lhs.true, %while.body
  %15 = load float*, float** %sum.addr, align 8, !dbg !17741
  %16 = load i32, i32* %mid, align 4, !dbg !17743
  %idxprom9 = sext i32 %16 to i64, !dbg !17741
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 %idxprom9, !dbg !17741
  %17 = load float, float* %arrayidx10, align 4, !dbg !17741
  %18 = load float, float* %value.addr, align 4, !dbg !17744
  %cmp11 = fcmp oge float %17, %18, !dbg !17745
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !17746

if.then12:                                        ; preds = %if.end8
  %19 = load i32, i32* %mid, align 4, !dbg !17747
  %sub = sub nsw i32 %19, 1, !dbg !17748
  store i32 %sub, i32* %high, align 4, !dbg !17749
  br label %if.end20, !dbg !17750

if.else:                                          ; preds = %if.end8
  %20 = load float*, float** %sum.addr, align 8, !dbg !17751
  %21 = load i32, i32* %mid, align 4, !dbg !17753
  %idxprom13 = sext i32 %21 to i64, !dbg !17751
  %arrayidx14 = getelementptr inbounds float, float* %20, i64 %idxprom13, !dbg !17751
  %22 = load float, float* %arrayidx14, align 4, !dbg !17751
  %23 = load float, float* %value.addr, align 4, !dbg !17754
  %cmp15 = fcmp olt float %22, %23, !dbg !17755
  br i1 %cmp15, label %if.then16, label %if.else18, !dbg !17756

if.then16:                                        ; preds = %if.else
  %24 = load i32, i32* %mid, align 4, !dbg !17757
  %add17 = add nsw i32 %24, 1, !dbg !17758
  store i32 %add17, i32* %low, align 4, !dbg !17759
  br label %if.end19, !dbg !17760

if.else18:                                        ; preds = %if.else
  %25 = load i32, i32* %mid, align 4, !dbg !17761
  store i32 %25, i32* %retval, align 4, !dbg !17762
  br label %return, !dbg !17762

if.end19:                                         ; preds = %if.then16
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then12
  br label %while.cond, !dbg !17717, !llvm.loop !17763

while.end:                                        ; preds = %while.cond
  %26 = load i32, i32* %low, align 4, !dbg !17765
  store i32 %26, i32* %retval, align 4, !dbg !17766
  br label %return, !dbg !17766

return:                                           ; preds = %while.end, %if.else18, %if.then7, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !17767
  ret i32 %27, !dbg !17767
}

declare dso_local void @qsort_r(i8*, i64, i64, i32 (i8*, i8*, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @distribute_compare_orig_index(i8* %p1, i8* %p2, i8* %user_data) #0 !dbg !17768 {
entry:
  %retval = alloca i32, align 4
  %p1.addr = alloca i8*, align 8
  %p2.addr = alloca i8*, align 8
  %user_data.addr = alloca i8*, align 8
  %orig_index = alloca i32*, align 8
  %index1 = alloca i32, align 4
  %index2 = alloca i32, align 4
  store i8* %p1, i8** %p1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p1.addr, metadata !17773, metadata !DIExpression()), !dbg !17774
  store i8* %p2, i8** %p2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p2.addr, metadata !17775, metadata !DIExpression()), !dbg !17776
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !17777, metadata !DIExpression()), !dbg !17778
  call void @llvm.dbg.declare(metadata i32** %orig_index, metadata !17779, metadata !DIExpression()), !dbg !17780
  %0 = load i8*, i8** %user_data.addr, align 8, !dbg !17781
  %1 = bitcast i8* %0 to i32*, !dbg !17782
  store i32* %1, i32** %orig_index, align 8, !dbg !17780
  call void @llvm.dbg.declare(metadata i32* %index1, metadata !17783, metadata !DIExpression()), !dbg !17784
  %2 = load i32*, i32** %orig_index, align 8, !dbg !17785
  %3 = load i8*, i8** %p1.addr, align 8, !dbg !17786
  %4 = bitcast i8* %3 to i32*, !dbg !17787
  %5 = load i32, i32* %4, align 4, !dbg !17788
  %idxprom = sext i32 %5 to i64, !dbg !17785
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom, !dbg !17785
  %6 = load i32, i32* %arrayidx, align 4, !dbg !17785
  store i32 %6, i32* %index1, align 4, !dbg !17784
  call void @llvm.dbg.declare(metadata i32* %index2, metadata !17789, metadata !DIExpression()), !dbg !17790
  %7 = load i32*, i32** %orig_index, align 8, !dbg !17791
  %8 = load i8*, i8** %p2.addr, align 8, !dbg !17792
  %9 = bitcast i8* %8 to i32*, !dbg !17793
  %10 = load i32, i32* %9, align 4, !dbg !17794
  %idxprom1 = sext i32 %10 to i64, !dbg !17791
  %arrayidx2 = getelementptr inbounds i32, i32* %7, i64 %idxprom1, !dbg !17791
  %11 = load i32, i32* %arrayidx2, align 4, !dbg !17791
  store i32 %11, i32* %index2, align 4, !dbg !17790
  %12 = load i32, i32* %index1, align 4, !dbg !17795
  %13 = load i32, i32* %index2, align 4, !dbg !17797
  %cmp = icmp slt i32 %12, %13, !dbg !17798
  br i1 %cmp, label %if.then, label %if.else, !dbg !17799

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !17800
  br label %return, !dbg !17800

if.else:                                          ; preds = %entry
  %14 = load i32, i32* %index1, align 4, !dbg !17801
  %15 = load i32, i32* %index2, align 4, !dbg !17803
  %cmp3 = icmp eq i32 %14, %15, !dbg !17804
  br i1 %cmp3, label %if.then4, label %if.else11, !dbg !17805

if.then4:                                         ; preds = %if.else
  %16 = load i8*, i8** %p1.addr, align 8, !dbg !17806
  %17 = load i8*, i8** %p2.addr, align 8, !dbg !17809
  %cmp5 = icmp ult i8* %16, %17, !dbg !17810
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !17811

if.then6:                                         ; preds = %if.then4
  store i32 -1, i32* %retval, align 4, !dbg !17812
  br label %return, !dbg !17812

if.else7:                                         ; preds = %if.then4
  %18 = load i8*, i8** %p1.addr, align 8, !dbg !17813
  %19 = load i8*, i8** %p2.addr, align 8, !dbg !17815
  %cmp8 = icmp eq i8* %18, %19, !dbg !17816
  br i1 %cmp8, label %if.then9, label %if.else10, !dbg !17817

if.then9:                                         ; preds = %if.else7
  store i32 0, i32* %retval, align 4, !dbg !17818
  br label %return, !dbg !17818

if.else10:                                        ; preds = %if.else7
  store i32 1, i32* %retval, align 4, !dbg !17819
  br label %return, !dbg !17819

if.else11:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !17820
  br label %return, !dbg !17820

return:                                           ; preds = %if.else11, %if.else10, %if.then9, %if.then6, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !17821
  ret i32 %20, !dbg !17821
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_mv_jit(float* %jit, i32 %num, i32 %seed2, float %amount) #0 !dbg !17822 {
entry:
  %jit.addr = alloca float*, align 8
  %num.addr = alloca i32, align 4
  %seed2.addr = alloca i32, align 4
  %amount.addr = alloca float, align 4
  %rng = alloca %struct.RNG*, align 8
  %jit2 = alloca float*, align 8
  %x = alloca float, align 4
  %rad1 = alloca float, align 4
  %rad2 = alloca float, align 4
  %rad3 = alloca float, align 4
  %i = alloca i32, align 4
  %num2 = alloca i32, align 4
  store float* %jit, float** %jit.addr, align 8
  call void @llvm.dbg.declare(metadata float** %jit.addr, metadata !17825, metadata !DIExpression()), !dbg !17826
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !17827, metadata !DIExpression()), !dbg !17828
  store i32 %seed2, i32* %seed2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seed2.addr, metadata !17829, metadata !DIExpression()), !dbg !17830
  store float %amount, float* %amount.addr, align 4
  call void @llvm.dbg.declare(metadata float* %amount.addr, metadata !17831, metadata !DIExpression()), !dbg !17832
  call void @llvm.dbg.declare(metadata %struct.RNG** %rng, metadata !17833, metadata !DIExpression()), !dbg !17834
  call void @llvm.dbg.declare(metadata float** %jit2, metadata !17835, metadata !DIExpression()), !dbg !17836
  call void @llvm.dbg.declare(metadata float* %x, metadata !17837, metadata !DIExpression()), !dbg !17838
  call void @llvm.dbg.declare(metadata float* %rad1, metadata !17839, metadata !DIExpression()), !dbg !17840
  call void @llvm.dbg.declare(metadata float* %rad2, metadata !17841, metadata !DIExpression()), !dbg !17842
  call void @llvm.dbg.declare(metadata float* %rad3, metadata !17843, metadata !DIExpression()), !dbg !17844
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17845, metadata !DIExpression()), !dbg !17846
  call void @llvm.dbg.declare(metadata i32* %num2, metadata !17847, metadata !DIExpression()), !dbg !17848
  %0 = load i32, i32* %num.addr, align 4, !dbg !17849
  %cmp = icmp eq i32 %0, 0, !dbg !17851
  br i1 %cmp, label %if.then, label %if.end, !dbg !17852

if.then:                                          ; preds = %entry
  br label %return, !dbg !17853

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %num.addr, align 4, !dbg !17854
  %conv = sitofp i32 %1 to float, !dbg !17855
  %call = call float @sqrtf(float %conv) #5, !dbg !17856
  %div = fdiv float 1.000000e+00, %call, !dbg !17857
  store float %div, float* %rad1, align 4, !dbg !17858
  %2 = load i32, i32* %num.addr, align 4, !dbg !17859
  %conv1 = sitofp i32 %2 to float, !dbg !17860
  %div2 = fdiv float 1.000000e+00, %conv1, !dbg !17861
  store float %div2, float* %rad2, align 4, !dbg !17862
  %3 = load i32, i32* %num.addr, align 4, !dbg !17863
  %conv3 = sitofp i32 %3 to float, !dbg !17864
  %call4 = call float @sqrtf(float %conv3) #5, !dbg !17865
  %4 = load i32, i32* %num.addr, align 4, !dbg !17866
  %conv5 = sitofp i32 %4 to float, !dbg !17867
  %div6 = fdiv float %call4, %conv5, !dbg !17868
  store float %div6, float* %rad3, align 4, !dbg !17869
  %5 = load i32, i32* %num.addr, align 4, !dbg !17870
  %add = add nsw i32 31415926, %5, !dbg !17871
  %6 = load i32, i32* %seed2.addr, align 4, !dbg !17872
  %add7 = add nsw i32 %add, %6, !dbg !17873
  %call8 = call %struct.RNG* @BLI_rng_new(i32 %add7), !dbg !17874
  store %struct.RNG* %call8, %struct.RNG** %rng, align 8, !dbg !17875
  store float 0.000000e+00, float* %x, align 4, !dbg !17876
  %7 = load i32, i32* %num.addr, align 4, !dbg !17877
  %mul = mul nsw i32 2, %7, !dbg !17878
  store i32 %mul, i32* %num2, align 4, !dbg !17879
  store i32 0, i32* %i, align 4, !dbg !17880
  br label %for.cond, !dbg !17882

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !17883
  %9 = load i32, i32* %num2, align 4, !dbg !17885
  %cmp9 = icmp slt i32 %8, %9, !dbg !17886
  br i1 %cmp9, label %for.body, label %for.end, !dbg !17887

for.body:                                         ; preds = %for.cond
  %10 = load float, float* %x, align 4, !dbg !17888
  %11 = load float, float* %amount.addr, align 4, !dbg !17890
  %12 = load float, float* %rad1, align 4, !dbg !17891
  %mul11 = fmul float %11, %12, !dbg !17892
  %13 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !17893
  %call12 = call float @BLI_rng_get_float(%struct.RNG* %13), !dbg !17894
  %sub = fsub float 5.000000e-01, %call12, !dbg !17895
  %mul13 = fmul float %mul11, %sub, !dbg !17896
  %add14 = fadd float %10, %mul13, !dbg !17897
  %14 = load float*, float** %jit.addr, align 8, !dbg !17898
  %15 = load i32, i32* %i, align 4, !dbg !17899
  %idxprom = sext i32 %15 to i64, !dbg !17898
  %arrayidx = getelementptr inbounds float, float* %14, i64 %idxprom, !dbg !17898
  store float %add14, float* %arrayidx, align 4, !dbg !17900
  %16 = load i32, i32* %i, align 4, !dbg !17901
  %conv15 = sitofp i32 %16 to float, !dbg !17901
  %17 = load i32, i32* %num.addr, align 4, !dbg !17902
  %conv16 = sitofp i32 %17 to float, !dbg !17902
  %mul17 = fmul float 2.000000e+00, %conv16, !dbg !17903
  %div18 = fdiv float %conv15, %mul17, !dbg !17904
  %18 = load float, float* %amount.addr, align 4, !dbg !17905
  %19 = load float, float* %rad1, align 4, !dbg !17906
  %mul19 = fmul float %18, %19, !dbg !17907
  %20 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !17908
  %call20 = call float @BLI_rng_get_float(%struct.RNG* %20), !dbg !17909
  %sub21 = fsub float 5.000000e-01, %call20, !dbg !17910
  %mul22 = fmul float %mul19, %sub21, !dbg !17911
  %add23 = fadd float %div18, %mul22, !dbg !17912
  %21 = load float*, float** %jit.addr, align 8, !dbg !17913
  %22 = load i32, i32* %i, align 4, !dbg !17914
  %add24 = add nsw i32 %22, 1, !dbg !17915
  %idxprom25 = sext i32 %add24 to i64, !dbg !17913
  %arrayidx26 = getelementptr inbounds float, float* %21, i64 %idxprom25, !dbg !17913
  store float %add23, float* %arrayidx26, align 4, !dbg !17916
  %23 = load float*, float** %jit.addr, align 8, !dbg !17917
  %24 = load i32, i32* %i, align 4, !dbg !17918
  %idxprom27 = sext i32 %24 to i64, !dbg !17917
  %arrayidx28 = getelementptr inbounds float, float* %23, i64 %idxprom27, !dbg !17917
  %25 = load float, float* %arrayidx28, align 4, !dbg !17917
  %conv29 = fpext float %25 to double, !dbg !17917
  %26 = call double @llvm.floor.f64(double %conv29), !dbg !17919
  %conv30 = fptrunc double %26 to float, !dbg !17920
  %27 = load float*, float** %jit.addr, align 8, !dbg !17921
  %28 = load i32, i32* %i, align 4, !dbg !17922
  %idxprom31 = sext i32 %28 to i64, !dbg !17921
  %arrayidx32 = getelementptr inbounds float, float* %27, i64 %idxprom31, !dbg !17921
  %29 = load float, float* %arrayidx32, align 4, !dbg !17923
  %sub33 = fsub float %29, %conv30, !dbg !17923
  store float %sub33, float* %arrayidx32, align 4, !dbg !17923
  %30 = load float*, float** %jit.addr, align 8, !dbg !17924
  %31 = load i32, i32* %i, align 4, !dbg !17925
  %add34 = add nsw i32 %31, 1, !dbg !17926
  %idxprom35 = sext i32 %add34 to i64, !dbg !17924
  %arrayidx36 = getelementptr inbounds float, float* %30, i64 %idxprom35, !dbg !17924
  %32 = load float, float* %arrayidx36, align 4, !dbg !17924
  %conv37 = fpext float %32 to double, !dbg !17924
  %33 = call double @llvm.floor.f64(double %conv37), !dbg !17927
  %conv38 = fptrunc double %33 to float, !dbg !17928
  %34 = load float*, float** %jit.addr, align 8, !dbg !17929
  %35 = load i32, i32* %i, align 4, !dbg !17930
  %add39 = add nsw i32 %35, 1, !dbg !17931
  %idxprom40 = sext i32 %add39 to i64, !dbg !17929
  %arrayidx41 = getelementptr inbounds float, float* %34, i64 %idxprom40, !dbg !17929
  %36 = load float, float* %arrayidx41, align 4, !dbg !17932
  %sub42 = fsub float %36, %conv38, !dbg !17932
  store float %sub42, float* %arrayidx41, align 4, !dbg !17932
  %37 = load float, float* %rad3, align 4, !dbg !17933
  %38 = load float, float* %x, align 4, !dbg !17934
  %add43 = fadd float %38, %37, !dbg !17934
  store float %add43, float* %x, align 4, !dbg !17934
  %39 = load float, float* %x, align 4, !dbg !17935
  %conv44 = fpext float %39 to double, !dbg !17935
  %40 = call double @llvm.floor.f64(double %conv44), !dbg !17936
  %conv45 = fptrunc double %40 to float, !dbg !17937
  %41 = load float, float* %x, align 4, !dbg !17938
  %sub46 = fsub float %41, %conv45, !dbg !17938
  store float %sub46, float* %x, align 4, !dbg !17938
  br label %for.inc, !dbg !17939

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %i, align 4, !dbg !17940
  %add47 = add nsw i32 %42, 2, !dbg !17940
  store i32 %add47, i32* %i, align 4, !dbg !17940
  br label %for.cond, !dbg !17941, !llvm.loop !17942

for.end:                                          ; preds = %for.cond
  %43 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !17944
  %44 = load i32, i32* %num.addr, align 4, !dbg !17945
  %conv48 = sext i32 %44 to i64, !dbg !17945
  %mul49 = mul i64 8, %conv48, !dbg !17946
  %add50 = add i64 12, %mul49, !dbg !17947
  %call51 = call i8* %43(i64 %add50, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0)), !dbg !17944
  %45 = bitcast i8* %call51 to float*, !dbg !17944
  store float* %45, float** %jit2, align 8, !dbg !17948
  store i32 0, i32* %i, align 4, !dbg !17949
  br label %for.cond52, !dbg !17951

for.cond52:                                       ; preds = %for.inc56, %for.end
  %46 = load i32, i32* %i, align 4, !dbg !17952
  %cmp53 = icmp slt i32 %46, 4, !dbg !17954
  br i1 %cmp53, label %for.body55, label %for.end57, !dbg !17955

for.body55:                                       ; preds = %for.cond52
  %47 = load float*, float** %jit.addr, align 8, !dbg !17956
  %48 = bitcast float* %47 to [2 x float]*, !dbg !17958
  %49 = load float*, float** %jit2, align 8, !dbg !17959
  %50 = bitcast float* %49 to [2 x float]*, !dbg !17960
  %51 = load i32, i32* %num.addr, align 4, !dbg !17961
  %52 = load float, float* %rad1, align 4, !dbg !17962
  call void @BLI_jitterate1([2 x float]* %48, [2 x float]* %50, i32 %51, float %52), !dbg !17963
  %53 = load float*, float** %jit.addr, align 8, !dbg !17964
  %54 = bitcast float* %53 to [2 x float]*, !dbg !17965
  %55 = load float*, float** %jit2, align 8, !dbg !17966
  %56 = bitcast float* %55 to [2 x float]*, !dbg !17967
  %57 = load i32, i32* %num.addr, align 4, !dbg !17968
  %58 = load float, float* %rad1, align 4, !dbg !17969
  call void @BLI_jitterate1([2 x float]* %54, [2 x float]* %56, i32 %57, float %58), !dbg !17970
  %59 = load float*, float** %jit.addr, align 8, !dbg !17971
  %60 = bitcast float* %59 to [2 x float]*, !dbg !17972
  %61 = load float*, float** %jit2, align 8, !dbg !17973
  %62 = bitcast float* %61 to [2 x float]*, !dbg !17974
  %63 = load i32, i32* %num.addr, align 4, !dbg !17975
  %64 = load float, float* %rad2, align 4, !dbg !17976
  call void @BLI_jitterate2([2 x float]* %60, [2 x float]* %62, i32 %63, float %64), !dbg !17977
  br label %for.inc56, !dbg !17978

for.inc56:                                        ; preds = %for.body55
  %65 = load i32, i32* %i, align 4, !dbg !17979
  %inc = add nsw i32 %65, 1, !dbg !17979
  store i32 %inc, i32* %i, align 4, !dbg !17979
  br label %for.cond52, !dbg !17980, !llvm.loop !17981

for.end57:                                        ; preds = %for.cond52
  %66 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !17983
  %67 = load float*, float** %jit2, align 8, !dbg !17984
  %68 = bitcast float* %67 to i8*, !dbg !17984
  call void %66(i8* %68), !dbg !17983
  %69 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !17985
  call void @BLI_rng_free(%struct.RNG* %69), !dbg !17986
  br label %return, !dbg !17987

return:                                           ; preds = %for.end57, %if.then
  ret void, !dbg !17987
}

; Function Attrs: noinline nounwind uwtable
define internal void @hammersley_create(float* %out, i32 %n, i32 %seed, float %amount) #0 !dbg !17988 {
entry:
  %out.addr = alloca float*, align 8
  %n.addr = alloca i32, align 4
  %seed.addr = alloca i32, align 4
  %amount.addr = alloca float, align 4
  %rng = alloca %struct.RNG*, align 8
  %p = alloca double, align 8
  %t = alloca double, align 8
  %offs = alloca [2 x double], align 16
  %k = alloca i32, align 4
  %kk = alloca i32, align 4
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !17989, metadata !DIExpression()), !dbg !17990
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !17991, metadata !DIExpression()), !dbg !17992
  store i32 %seed, i32* %seed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seed.addr, metadata !17993, metadata !DIExpression()), !dbg !17994
  store float %amount, float* %amount.addr, align 4
  call void @llvm.dbg.declare(metadata float* %amount.addr, metadata !17995, metadata !DIExpression()), !dbg !17996
  call void @llvm.dbg.declare(metadata %struct.RNG** %rng, metadata !17997, metadata !DIExpression()), !dbg !17998
  call void @llvm.dbg.declare(metadata double* %p, metadata !17999, metadata !DIExpression()), !dbg !18000
  call void @llvm.dbg.declare(metadata double* %t, metadata !18001, metadata !DIExpression()), !dbg !18002
  call void @llvm.dbg.declare(metadata [2 x double]* %offs, metadata !18003, metadata !DIExpression()), !dbg !18005
  call void @llvm.dbg.declare(metadata i32* %k, metadata !18006, metadata !DIExpression()), !dbg !18007
  call void @llvm.dbg.declare(metadata i32* %kk, metadata !18008, metadata !DIExpression()), !dbg !18009
  %0 = load i32, i32* %n.addr, align 4, !dbg !18010
  %add = add nsw i32 31415926, %0, !dbg !18011
  %1 = load i32, i32* %seed.addr, align 4, !dbg !18012
  %add1 = add nsw i32 %add, %1, !dbg !18013
  %call = call %struct.RNG* @BLI_rng_new(i32 %add1), !dbg !18014
  store %struct.RNG* %call, %struct.RNG** %rng, align 8, !dbg !18015
  %2 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !18016
  %call2 = call double @BLI_rng_get_double(%struct.RNG* %2), !dbg !18017
  %3 = load float, float* %amount.addr, align 4, !dbg !18018
  %conv = fpext float %3 to double, !dbg !18019
  %add3 = fadd double %call2, %conv, !dbg !18020
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %offs, i64 0, i64 0, !dbg !18021
  store double %add3, double* %arrayidx, align 16, !dbg !18022
  %4 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !18023
  %call4 = call double @BLI_rng_get_double(%struct.RNG* %4), !dbg !18024
  %5 = load float, float* %amount.addr, align 4, !dbg !18025
  %conv5 = fpext float %5 to double, !dbg !18026
  %add6 = fadd double %call4, %conv5, !dbg !18027
  %arrayidx7 = getelementptr inbounds [2 x double], [2 x double]* %offs, i64 0, i64 1, !dbg !18028
  store double %add6, double* %arrayidx7, align 8, !dbg !18029
  %6 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !18030
  call void @BLI_rng_free(%struct.RNG* %6), !dbg !18031
  store i32 0, i32* %k, align 4, !dbg !18032
  br label %for.cond, !dbg !18034

for.cond:                                         ; preds = %for.inc30, %entry
  %7 = load i32, i32* %k, align 4, !dbg !18035
  %8 = load i32, i32* %n.addr, align 4, !dbg !18037
  %cmp = icmp slt i32 %7, %8, !dbg !18038
  br i1 %cmp, label %for.body, label %for.end31, !dbg !18039

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %t, align 8, !dbg !18040
  store double 5.000000e-01, double* %p, align 8, !dbg !18042
  %9 = load i32, i32* %k, align 4, !dbg !18044
  store i32 %9, i32* %kk, align 4, !dbg !18045
  br label %for.cond9, !dbg !18046

for.cond9:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %kk, align 4, !dbg !18047
  %tobool = icmp ne i32 %10, 0, !dbg !18049
  br i1 %tobool, label %for.body10, label %for.end, !dbg !18049

for.body10:                                       ; preds = %for.cond9
  %11 = load i32, i32* %kk, align 4, !dbg !18050
  %and = and i32 %11, 1, !dbg !18052
  %tobool11 = icmp ne i32 %and, 0, !dbg !18052
  br i1 %tobool11, label %if.then, label %if.end, !dbg !18053

if.then:                                          ; preds = %for.body10
  %12 = load double, double* %p, align 8, !dbg !18054
  %13 = load double, double* %t, align 8, !dbg !18055
  %add12 = fadd double %13, %12, !dbg !18055
  store double %add12, double* %t, align 8, !dbg !18055
  br label %if.end, !dbg !18056

if.end:                                           ; preds = %if.then, %for.body10
  br label %for.inc, !dbg !18057

for.inc:                                          ; preds = %if.end
  %14 = load double, double* %p, align 8, !dbg !18058
  %mul = fmul double %14, 5.000000e-01, !dbg !18058
  store double %mul, double* %p, align 8, !dbg !18058
  %15 = load i32, i32* %kk, align 4, !dbg !18059
  %shr = ashr i32 %15, 1, !dbg !18059
  store i32 %shr, i32* %kk, align 4, !dbg !18059
  br label %for.cond9, !dbg !18060, !llvm.loop !18061

for.end:                                          ; preds = %for.cond9
  %16 = load i32, i32* %k, align 4, !dbg !18063
  %conv13 = sitofp i32 %16 to double, !dbg !18064
  %17 = load i32, i32* %n.addr, align 4, !dbg !18065
  %conv14 = sitofp i32 %17 to double, !dbg !18066
  %div = fdiv double %conv13, %conv14, !dbg !18067
  %arrayidx15 = getelementptr inbounds [2 x double], [2 x double]* %offs, i64 0, i64 0, !dbg !18068
  %18 = load double, double* %arrayidx15, align 16, !dbg !18068
  %add16 = fadd double %div, %18, !dbg !18069
  %call17 = call double @fmod(double %add16, double 1.000000e+00) #5, !dbg !18070
  %conv18 = fptrunc double %call17 to float, !dbg !18070
  %19 = load float*, float** %out.addr, align 8, !dbg !18071
  %20 = load i32, i32* %k, align 4, !dbg !18072
  %mul19 = mul nsw i32 2, %20, !dbg !18073
  %add20 = add nsw i32 %mul19, 0, !dbg !18074
  %idxprom = sext i32 %add20 to i64, !dbg !18071
  %arrayidx21 = getelementptr inbounds float, float* %19, i64 %idxprom, !dbg !18071
  store float %conv18, float* %arrayidx21, align 4, !dbg !18075
  %21 = load double, double* %t, align 8, !dbg !18076
  %arrayidx22 = getelementptr inbounds [2 x double], [2 x double]* %offs, i64 0, i64 1, !dbg !18077
  %22 = load double, double* %arrayidx22, align 8, !dbg !18077
  %add23 = fadd double %21, %22, !dbg !18078
  %call24 = call double @fmod(double %add23, double 1.000000e+00) #5, !dbg !18079
  %conv25 = fptrunc double %call24 to float, !dbg !18079
  %23 = load float*, float** %out.addr, align 8, !dbg !18080
  %24 = load i32, i32* %k, align 4, !dbg !18081
  %mul26 = mul nsw i32 2, %24, !dbg !18082
  %add27 = add nsw i32 %mul26, 1, !dbg !18083
  %idxprom28 = sext i32 %add27 to i64, !dbg !18080
  %arrayidx29 = getelementptr inbounds float, float* %23, i64 %idxprom28, !dbg !18080
  store float %conv25, float* %arrayidx29, align 4, !dbg !18084
  br label %for.inc30, !dbg !18085

for.inc30:                                        ; preds = %for.end
  %25 = load i32, i32* %k, align 4, !dbg !18086
  %inc = add nsw i32 %25, 1, !dbg !18086
  store i32 %inc, i32* %k, align 4, !dbg !18086
  br label %for.cond, !dbg !18087, !llvm.loop !18088

for.end31:                                        ; preds = %for.cond
  ret void, !dbg !18090
}

declare dso_local void @BLI_array_randomize(i8*, i32, i32, i32) #2

declare dso_local i32 @psys_render_simplify_distribution(%struct.ParticleThreadContext*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @alloc_child_particles(%struct.ParticleSystem* %psys, i32 %tot) #0 !dbg !18091 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %tot.addr = alloca i32, align 4
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !18092, metadata !DIExpression()), !dbg !18093
  store i32 %tot, i32* %tot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tot.addr, metadata !18094, metadata !DIExpression()), !dbg !18095
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !18096
  %child = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 4, !dbg !18098
  %1 = load %struct.ChildParticle*, %struct.ChildParticle** %child, align 8, !dbg !18098
  %tobool = icmp ne %struct.ChildParticle* %1, null, !dbg !18096
  br i1 %tobool, label %if.then, label %if.end9, !dbg !18099

if.then:                                          ; preds = %entry
  %2 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !18100
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %2, i32 0, i32 2, !dbg !18103
  %3 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !18103
  %childtype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %3, i32 0, i32 19, !dbg !18104
  %4 = load i16, i16* %childtype, align 4, !dbg !18104
  %conv = sext i16 %4 to i32, !dbg !18100
  %tobool1 = icmp ne i32 %conv, 0, !dbg !18100
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !18105

land.lhs.true:                                    ; preds = %if.then
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !18106
  %totchild = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 28, !dbg !18107
  %6 = load i32, i32* %totchild, align 8, !dbg !18107
  %7 = load i32, i32* %tot.addr, align 4, !dbg !18108
  %cmp = icmp eq i32 %6, %7, !dbg !18109
  br i1 %cmp, label %if.then3, label %if.end, !dbg !18110

if.then3:                                         ; preds = %land.lhs.true
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !18111
  %child4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 4, !dbg !18113
  %9 = load %struct.ChildParticle*, %struct.ChildParticle** %child4, align 8, !dbg !18113
  %10 = bitcast %struct.ChildParticle* %9 to i8*, !dbg !18114
  %11 = load i32, i32* %tot.addr, align 4, !dbg !18115
  %conv5 = sext i32 %11 to i64, !dbg !18115
  %mul = mul i64 %conv5, 64, !dbg !18116
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 %mul, i1 false), !dbg !18114
  br label %if.end23, !dbg !18117

if.end:                                           ; preds = %land.lhs.true, %if.then
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !18118
  %13 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !18119
  %child6 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %13, i32 0, i32 4, !dbg !18120
  %14 = load %struct.ChildParticle*, %struct.ChildParticle** %child6, align 8, !dbg !18120
  %15 = bitcast %struct.ChildParticle* %14 to i8*, !dbg !18119
  call void %12(i8* %15), !dbg !18118
  %16 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !18121
  %child7 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %16, i32 0, i32 4, !dbg !18122
  store %struct.ChildParticle* null, %struct.ChildParticle** %child7, align 8, !dbg !18123
  %17 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !18124
  %totchild8 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %17, i32 0, i32 28, !dbg !18125
  store i32 0, i32* %totchild8, align 8, !dbg !18126
  br label %if.end9, !dbg !18127

if.end9:                                          ; preds = %if.end, %entry
  %18 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !18128
  %part10 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %18, i32 0, i32 2, !dbg !18130
  %19 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part10, align 8, !dbg !18130
  %childtype11 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %19, i32 0, i32 19, !dbg !18131
  %20 = load i16, i16* %childtype11, align 4, !dbg !18131
  %tobool12 = icmp ne i16 %20, 0, !dbg !18128
  br i1 %tobool12, label %if.then13, label %if.end23, !dbg !18132

if.then13:                                        ; preds = %if.end9
  %21 = load i32, i32* %tot.addr, align 4, !dbg !18133
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !18135
  %totchild14 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %22, i32 0, i32 28, !dbg !18136
  store i32 %21, i32* %totchild14, align 8, !dbg !18137
  %23 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !18138
  %totchild15 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %23, i32 0, i32 28, !dbg !18140
  %24 = load i32, i32* %totchild15, align 8, !dbg !18140
  %tobool16 = icmp ne i32 %24, 0, !dbg !18138
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !18141

if.then17:                                        ; preds = %if.then13
  %25 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !18142
  %26 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !18143
  %totchild18 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %26, i32 0, i32 28, !dbg !18144
  %27 = load i32, i32* %totchild18, align 8, !dbg !18144
  %conv19 = sext i32 %27 to i64, !dbg !18143
  %mul20 = mul i64 %conv19, 64, !dbg !18145
  %call = call i8* %25(i64 %mul20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0)), !dbg !18142
  %28 = bitcast i8* %call to %struct.ChildParticle*, !dbg !18142
  %29 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !18146
  %child21 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %29, i32 0, i32 4, !dbg !18147
  store %struct.ChildParticle* %28, %struct.ChildParticle** %child21, align 8, !dbg !18148
  br label %if.end22, !dbg !18146

if.end22:                                         ; preds = %if.then17, %if.then13
  br label %if.end23, !dbg !18149

if.end23:                                         ; preds = %if.then3, %if.end22, %if.end9
  ret void, !dbg !18150
}

declare dso_local %struct.RNG* @BLI_rng_new(i32) #2

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @axis_dominant_v3_single(float* %vec) #0 !dbg !18151 {
entry:
  %vec.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  %z = alloca float, align 4
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !18155, metadata !DIExpression()), !dbg !18156
  call void @llvm.dbg.declare(metadata float* %x, metadata !18157, metadata !DIExpression()), !dbg !18158
  %0 = load float*, float** %vec.addr, align 8, !dbg !18159
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !18159
  %1 = load float, float* %arrayidx, align 4, !dbg !18159
  %2 = call float @llvm.fabs.f32(float %1), !dbg !18160
  store float %2, float* %x, align 4, !dbg !18158
  call void @llvm.dbg.declare(metadata float* %y, metadata !18161, metadata !DIExpression()), !dbg !18162
  %3 = load float*, float** %vec.addr, align 8, !dbg !18163
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !18163
  %4 = load float, float* %arrayidx1, align 4, !dbg !18163
  %5 = call float @llvm.fabs.f32(float %4), !dbg !18164
  store float %5, float* %y, align 4, !dbg !18162
  call void @llvm.dbg.declare(metadata float* %z, metadata !18165, metadata !DIExpression()), !dbg !18166
  %6 = load float*, float** %vec.addr, align 8, !dbg !18167
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 2, !dbg !18167
  %7 = load float, float* %arrayidx2, align 4, !dbg !18167
  %8 = call float @llvm.fabs.f32(float %7), !dbg !18168
  store float %8, float* %z, align 4, !dbg !18166
  %9 = load float, float* %x, align 4, !dbg !18169
  %10 = load float, float* %y, align 4, !dbg !18170
  %cmp = fcmp ogt float %9, %10, !dbg !18171
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !18172

cond.true:                                        ; preds = %entry
  %11 = load float, float* %x, align 4, !dbg !18173
  %12 = load float, float* %z, align 4, !dbg !18174
  %cmp3 = fcmp ogt float %11, %12, !dbg !18175
  %13 = zext i1 %cmp3 to i64, !dbg !18176
  %cond = select i1 %cmp3, i32 0, i32 2, !dbg !18176
  br label %cond.end, !dbg !18172

cond.false:                                       ; preds = %entry
  %14 = load float, float* %y, align 4, !dbg !18177
  %15 = load float, float* %z, align 4, !dbg !18178
  %cmp4 = fcmp ogt float %14, %15, !dbg !18179
  %16 = zext i1 %cmp4 to i64, !dbg !18180
  %cond5 = select i1 %cmp4, i32 1, i32 2, !dbg !18180
  br label %cond.end, !dbg !18172

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond6 = phi i32 [ %cond, %cond.true ], [ %cond5, %cond.false ], !dbg !18172
  ret i32 %cond6, !dbg !18181
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

declare dso_local zeroext i8 @isect_axial_line_tri_v3(i32, float*, float*, float*, float*, float*, float*) #2

declare dso_local float @BLI_rng_get_float(%struct.RNG*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

declare dso_local void @BLI_jitterate1([2 x float]*, [2 x float]*, i32, float) #2

declare dso_local void @BLI_jitterate2([2 x float]*, [2 x float]*, i32, float) #2

declare dso_local double @BLI_rng_get_double(%struct.RNG*) #2

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #4

declare dso_local void @BLI_rng_skip(%struct.RNG*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @distribute_threads_exec(%struct.ParticleThread* %thread, %struct.ParticleData* %pa, %struct.ChildParticle* %cpa, i32 %p) #0 !dbg !18182 {
entry:
  %thread.addr = alloca %struct.ParticleThread*, align 8
  %pa.addr = alloca %struct.ParticleData*, align 8
  %cpa.addr = alloca %struct.ChildParticle*, align 8
  %p.addr = alloca i32, align 4
  %ctx = alloca %struct.ParticleThreadContext*, align 8
  %ob = alloca %struct.Object*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %v1 = alloca float*, align 8
  %v2 = alloca float*, align 8
  %v3 = alloca float*, align 8
  %v4 = alloca float*, align 8
  %nor = alloca [3 x float], align 4
  %orco1 = alloca [3 x float], align 4
  %co1 = alloca [3 x float], align 4
  %co2 = alloca [3 x float], align 4
  %nor1 = alloca [3 x float], align 4
  %cur_d = alloca float, align 4
  %min_d = alloca float, align 4
  %randu = alloca float, align 4
  %randv = alloca float, align 4
  %from = alloca i32, align 4
  %cfrom = alloca i32, align 4
  %distr = alloca i32, align 4
  %i = alloca i32, align 4
  %intersect = alloca i32, align 4
  %tot = alloca i32, align 4
  %rng_skip_tot = alloca i32, align 4
  %mface = alloca %struct.MFace*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mf = alloca %struct.MFace*, align 8
  %ptn = alloca [10 x %struct.KDTreeNearest], align 16
  %w = alloca i32, align 4
  %maxw = alloca i32, align 4
  %maxd = alloca float, align 4
  %totw = alloca float, align 4
  %parent = alloca [10 x i32], align 16
  %pweight = alloca [10 x float], align 16
  store %struct.ParticleThread* %thread, %struct.ParticleThread** %thread.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleThread** %thread.addr, metadata !18185, metadata !DIExpression()), !dbg !18186
  store %struct.ParticleData* %pa, %struct.ParticleData** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa.addr, metadata !18187, metadata !DIExpression()), !dbg !18188
  store %struct.ChildParticle* %cpa, %struct.ChildParticle** %cpa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChildParticle** %cpa.addr, metadata !18189, metadata !DIExpression()), !dbg !18190
  store i32 %p, i32* %p.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr, metadata !18191, metadata !DIExpression()), !dbg !18192
  call void @llvm.dbg.declare(metadata %struct.ParticleThreadContext** %ctx, metadata !18193, metadata !DIExpression()), !dbg !18194
  %0 = load %struct.ParticleThread*, %struct.ParticleThread** %thread.addr, align 8, !dbg !18195
  %ctx1 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %0, i32 0, i32 0, !dbg !18196
  %1 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx1, align 8, !dbg !18196
  store %struct.ParticleThreadContext* %1, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18194
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !18197, metadata !DIExpression()), !dbg !18198
  %2 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18199
  %sim = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %2, i32 0, i32 0, !dbg !18200
  %ob2 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 1, !dbg !18201
  %3 = load %struct.Object*, %struct.Object** %ob2, align 8, !dbg !18201
  store %struct.Object* %3, %struct.Object** %ob, align 8, !dbg !18198
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !18202, metadata !DIExpression()), !dbg !18203
  %4 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18204
  %dm3 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %4, i32 0, i32 1, !dbg !18205
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm3, align 8, !dbg !18205
  store %struct.DerivedMesh* %5, %struct.DerivedMesh** %dm, align 8, !dbg !18203
  call void @llvm.dbg.declare(metadata float** %v1, metadata !18206, metadata !DIExpression()), !dbg !18207
  call void @llvm.dbg.declare(metadata float** %v2, metadata !18208, metadata !DIExpression()), !dbg !18209
  call void @llvm.dbg.declare(metadata float** %v3, metadata !18210, metadata !DIExpression()), !dbg !18211
  call void @llvm.dbg.declare(metadata float** %v4, metadata !18212, metadata !DIExpression()), !dbg !18213
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !18214, metadata !DIExpression()), !dbg !18215
  call void @llvm.dbg.declare(metadata [3 x float]* %orco1, metadata !18216, metadata !DIExpression()), !dbg !18217
  call void @llvm.dbg.declare(metadata [3 x float]* %co1, metadata !18218, metadata !DIExpression()), !dbg !18219
  call void @llvm.dbg.declare(metadata [3 x float]* %co2, metadata !18220, metadata !DIExpression()), !dbg !18221
  call void @llvm.dbg.declare(metadata [3 x float]* %nor1, metadata !18222, metadata !DIExpression()), !dbg !18223
  call void @llvm.dbg.declare(metadata float* %cur_d, metadata !18224, metadata !DIExpression()), !dbg !18225
  call void @llvm.dbg.declare(metadata float* %min_d, metadata !18226, metadata !DIExpression()), !dbg !18227
  call void @llvm.dbg.declare(metadata float* %randu, metadata !18228, metadata !DIExpression()), !dbg !18229
  call void @llvm.dbg.declare(metadata float* %randv, metadata !18230, metadata !DIExpression()), !dbg !18231
  call void @llvm.dbg.declare(metadata i32* %from, metadata !18232, metadata !DIExpression()), !dbg !18233
  %6 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18234
  %from4 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %6, i32 0, i32 13, !dbg !18235
  %7 = load i32, i32* %from4, align 4, !dbg !18235
  store i32 %7, i32* %from, align 4, !dbg !18233
  call void @llvm.dbg.declare(metadata i32* %cfrom, metadata !18236, metadata !DIExpression()), !dbg !18237
  %8 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18238
  %cfrom5 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %8, i32 0, i32 14, !dbg !18239
  %9 = load i32, i32* %cfrom5, align 8, !dbg !18239
  store i32 %9, i32* %cfrom, align 4, !dbg !18237
  call void @llvm.dbg.declare(metadata i32* %distr, metadata !18240, metadata !DIExpression()), !dbg !18241
  %10 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18242
  %distr6 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %10, i32 0, i32 15, !dbg !18243
  %11 = load i32, i32* %distr6, align 4, !dbg !18243
  store i32 %11, i32* %distr, align 4, !dbg !18241
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18244, metadata !DIExpression()), !dbg !18245
  call void @llvm.dbg.declare(metadata i32* %intersect, metadata !18246, metadata !DIExpression()), !dbg !18247
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !18248, metadata !DIExpression()), !dbg !18249
  call void @llvm.dbg.declare(metadata i32* %rng_skip_tot, metadata !18250, metadata !DIExpression()), !dbg !18251
  store i32 2, i32* %rng_skip_tot, align 4, !dbg !18251
  %12 = load i32, i32* %from, align 4, !dbg !18252
  %cmp = icmp eq i32 %12, 0, !dbg !18254
  br i1 %cmp, label %if.then, label %if.else, !dbg !18255

if.then:                                          ; preds = %entry
  %13 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18256
  %index = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %13, i32 0, i32 10, !dbg !18258
  %14 = load i32*, i32** %index, align 8, !dbg !18258
  %15 = load i32, i32* %p.addr, align 4, !dbg !18259
  %idxprom = sext i32 %15 to i64, !dbg !18256
  %arrayidx = getelementptr inbounds i32, i32* %14, i64 %idxprom, !dbg !18256
  %16 = load i32, i32* %arrayidx, align 4, !dbg !18256
  %17 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18260
  %num = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %17, i32 0, i32 9, !dbg !18261
  store i32 %16, i32* %num, align 8, !dbg !18262
  %18 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18263
  %fuv = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %18, i32 0, i32 11, !dbg !18264
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %fuv, i64 0, i64 0, !dbg !18263
  store float 1.000000e+00, float* %arrayidx7, align 8, !dbg !18265
  %19 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18266
  %fuv8 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %19, i32 0, i32 11, !dbg !18267
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %fuv8, i64 0, i64 3, !dbg !18266
  store float 0.000000e+00, float* %arrayidx9, align 4, !dbg !18268
  %20 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18269
  %fuv10 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %20, i32 0, i32 11, !dbg !18270
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %fuv10, i64 0, i64 2, !dbg !18269
  store float 0.000000e+00, float* %arrayidx11, align 8, !dbg !18271
  %21 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18272
  %fuv12 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %21, i32 0, i32 11, !dbg !18273
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %fuv12, i64 0, i64 1, !dbg !18272
  store float 0.000000e+00, float* %arrayidx13, align 4, !dbg !18274
  br label %if.end323, !dbg !18275

if.else:                                          ; preds = %entry
  %22 = load i32, i32* %from, align 4, !dbg !18276
  %cmp14 = icmp eq i32 %22, 1, !dbg !18278
  br i1 %cmp14, label %if.then16, label %lor.lhs.false, !dbg !18279

lor.lhs.false:                                    ; preds = %if.else
  %23 = load i32, i32* %from, align 4, !dbg !18280
  %cmp15 = icmp eq i32 %23, 2, !dbg !18281
  br i1 %cmp15, label %if.then16, label %if.else167, !dbg !18282

if.then16:                                        ; preds = %lor.lhs.false, %if.else
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !18283, metadata !DIExpression()), !dbg !18285
  %24 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18286
  %index17 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %24, i32 0, i32 10, !dbg !18287
  %25 = load i32*, i32** %index17, align 8, !dbg !18287
  %26 = load i32, i32* %p.addr, align 4, !dbg !18288
  %idxprom18 = sext i32 %26 to i64, !dbg !18286
  %arrayidx19 = getelementptr inbounds i32, i32* %25, i64 %idxprom18, !dbg !18286
  %27 = load i32, i32* %arrayidx19, align 4, !dbg !18286
  store i32 %27, i32* %i, align 4, !dbg !18289
  %28 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18290
  %num20 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %28, i32 0, i32 9, !dbg !18291
  store i32 %27, i32* %num20, align 8, !dbg !18292
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18293
  %getTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %29, i32 0, i32 48, !dbg !18294
  %30 = load i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)** %getTessFaceData, align 8, !dbg !18294
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18295
  %32 = load i32, i32* %i, align 4, !dbg !18296
  %call = call i8* %30(%struct.DerivedMesh* %31, i32 %32, i32 4), !dbg !18293
  %33 = bitcast i8* %call to %struct.MFace*, !dbg !18293
  store %struct.MFace* %33, %struct.MFace** %mface, align 8, !dbg !18297
  %34 = load i32, i32* %distr, align 4, !dbg !18298
  switch i32 %34, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb69
  ], !dbg !18299

sw.bb:                                            ; preds = %if.then16
  %35 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18300
  %jitlevel = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %35, i32 0, i32 12, !dbg !18303
  %36 = load i32, i32* %jitlevel, align 8, !dbg !18303
  %cmp21 = icmp eq i32 %36, 1, !dbg !18304
  br i1 %cmp21, label %if.then22, label %if.else31, !dbg !18305

if.then22:                                        ; preds = %sw.bb
  %37 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18306
  %v423 = getelementptr inbounds %struct.MFace, %struct.MFace* %37, i32 0, i32 3, !dbg !18309
  %38 = load i32, i32* %v423, align 4, !dbg !18309
  %tobool = icmp ne i32 %38, 0, !dbg !18306
  br i1 %tobool, label %if.then24, label %if.else27, !dbg !18310

if.then24:                                        ; preds = %if.then22
  %39 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18311
  %v425 = getelementptr inbounds %struct.MFace, %struct.MFace* %39, i32 0, i32 3, !dbg !18312
  %40 = load i32, i32* %v425, align 4, !dbg !18312
  %41 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18313
  %fuv26 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %41, i32 0, i32 11, !dbg !18314
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %fuv26, i64 0, i64 0, !dbg !18313
  call void @psys_uv_to_w(float 5.000000e-01, float 5.000000e-01, i32 %40, float* %arraydecay), !dbg !18315
  br label %if.end, !dbg !18315

if.else27:                                        ; preds = %if.then22
  %42 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18316
  %v428 = getelementptr inbounds %struct.MFace, %struct.MFace* %42, i32 0, i32 3, !dbg !18317
  %43 = load i32, i32* %v428, align 4, !dbg !18317
  %44 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18318
  %fuv29 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %44, i32 0, i32 11, !dbg !18319
  %arraydecay30 = getelementptr inbounds [4 x float], [4 x float]* %fuv29, i64 0, i64 0, !dbg !18318
  call void @psys_uv_to_w(float 0x3FD5555560000000, float 0x3FD5555560000000, i32 %43, float* %arraydecay30), !dbg !18320
  br label %if.end

if.end:                                           ; preds = %if.else27, %if.then24
  br label %if.end68, !dbg !18321

if.else31:                                        ; preds = %sw.bb
  %45 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18322
  %jitoff = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %45, i32 0, i32 7, !dbg !18324
  %46 = load float*, float** %jitoff, align 8, !dbg !18324
  %47 = load i32, i32* %i, align 4, !dbg !18325
  %idxprom32 = sext i32 %47 to i64, !dbg !18322
  %arrayidx33 = getelementptr inbounds float, float* %46, i64 %idxprom32, !dbg !18322
  %48 = load float, float* %arrayidx33, align 4, !dbg !18322
  %conv = fpext float %48 to double, !dbg !18322
  %49 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18326
  %jitlevel34 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %49, i32 0, i32 12, !dbg !18327
  %50 = load i32, i32* %jitlevel34, align 8, !dbg !18327
  %conv35 = sitofp i32 %50 to float, !dbg !18328
  %conv36 = fpext float %conv35 to double, !dbg !18328
  %call37 = call double @fmod(double %conv, double %conv36) #5, !dbg !18329
  %conv38 = fptrunc double %call37 to float, !dbg !18329
  %51 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18330
  %jitoff39 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %51, i32 0, i32 7, !dbg !18331
  %52 = load float*, float** %jitoff39, align 8, !dbg !18331
  %53 = load i32, i32* %i, align 4, !dbg !18332
  %idxprom40 = sext i32 %53 to i64, !dbg !18330
  %arrayidx41 = getelementptr inbounds float, float* %52, i64 %idxprom40, !dbg !18330
  store float %conv38, float* %arrayidx41, align 4, !dbg !18333
  %54 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18334
  %jitoff42 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %54, i32 0, i32 7, !dbg !18334
  %55 = load float*, float** %jitoff42, align 8, !dbg !18334
  %56 = load i32, i32* %i, align 4, !dbg !18334
  %idxprom43 = sext i32 %56 to i64, !dbg !18334
  %arrayidx44 = getelementptr inbounds float, float* %55, i64 %idxprom43, !dbg !18334
  %57 = load float, float* %arrayidx44, align 4, !dbg !18334
  %cmp45 = fcmp uno float %57, %57, !dbg !18334
  br i1 %cmp45, label %if.end67, label %if.then46, !dbg !18336

if.then46:                                        ; preds = %if.else31
  %58 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18337
  %jit = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %58, i32 0, i32 6, !dbg !18339
  %59 = load float*, float** %jit, align 8, !dbg !18339
  %60 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18340
  %jitoff47 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %60, i32 0, i32 7, !dbg !18341
  %61 = load float*, float** %jitoff47, align 8, !dbg !18341
  %62 = load i32, i32* %i, align 4, !dbg !18342
  %idxprom48 = sext i32 %62 to i64, !dbg !18340
  %arrayidx49 = getelementptr inbounds float, float* %61, i64 %idxprom48, !dbg !18340
  %63 = load float, float* %arrayidx49, align 4, !dbg !18340
  %conv50 = fptosi float %63 to i32, !dbg !18343
  %mul = mul nsw i32 2, %conv50, !dbg !18344
  %idxprom51 = sext i32 %mul to i64, !dbg !18337
  %arrayidx52 = getelementptr inbounds float, float* %59, i64 %idxprom51, !dbg !18337
  %64 = load float, float* %arrayidx52, align 4, !dbg !18337
  %65 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18345
  %jit53 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %65, i32 0, i32 6, !dbg !18346
  %66 = load float*, float** %jit53, align 8, !dbg !18346
  %67 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18347
  %jitoff54 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %67, i32 0, i32 7, !dbg !18348
  %68 = load float*, float** %jitoff54, align 8, !dbg !18348
  %69 = load i32, i32* %i, align 4, !dbg !18349
  %idxprom55 = sext i32 %69 to i64, !dbg !18347
  %arrayidx56 = getelementptr inbounds float, float* %68, i64 %idxprom55, !dbg !18347
  %70 = load float, float* %arrayidx56, align 4, !dbg !18347
  %conv57 = fptosi float %70 to i32, !dbg !18350
  %mul58 = mul nsw i32 2, %conv57, !dbg !18351
  %add = add nsw i32 %mul58, 1, !dbg !18352
  %idxprom59 = sext i32 %add to i64, !dbg !18345
  %arrayidx60 = getelementptr inbounds float, float* %66, i64 %idxprom59, !dbg !18345
  %71 = load float, float* %arrayidx60, align 4, !dbg !18345
  %72 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18353
  %v461 = getelementptr inbounds %struct.MFace, %struct.MFace* %72, i32 0, i32 3, !dbg !18354
  %73 = load i32, i32* %v461, align 4, !dbg !18354
  %74 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18355
  %fuv62 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %74, i32 0, i32 11, !dbg !18356
  %arraydecay63 = getelementptr inbounds [4 x float], [4 x float]* %fuv62, i64 0, i64 0, !dbg !18355
  call void @psys_uv_to_w(float %64, float %71, i32 %73, float* %arraydecay63), !dbg !18357
  %75 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18358
  %jitoff64 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %75, i32 0, i32 7, !dbg !18359
  %76 = load float*, float** %jitoff64, align 8, !dbg !18359
  %77 = load i32, i32* %i, align 4, !dbg !18360
  %idxprom65 = sext i32 %77 to i64, !dbg !18358
  %arrayidx66 = getelementptr inbounds float, float* %76, i64 %idxprom65, !dbg !18358
  %78 = load float, float* %arrayidx66, align 4, !dbg !18361
  %inc = fadd float %78, 1.000000e+00, !dbg !18361
  store float %inc, float* %arrayidx66, align 4, !dbg !18361
  br label %if.end67, !dbg !18362

if.end67:                                         ; preds = %if.then46, %if.else31
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.end
  br label %sw.epilog, !dbg !18363

sw.bb69:                                          ; preds = %if.then16
  %79 = load %struct.ParticleThread*, %struct.ParticleThread** %thread.addr, align 8, !dbg !18364
  %rng = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %79, i32 0, i32 1, !dbg !18365
  %80 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !18365
  %call70 = call float @BLI_rng_get_float(%struct.RNG* %80), !dbg !18366
  store float %call70, float* %randu, align 4, !dbg !18367
  %81 = load %struct.ParticleThread*, %struct.ParticleThread** %thread.addr, align 8, !dbg !18368
  %rng71 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %81, i32 0, i32 1, !dbg !18369
  %82 = load %struct.RNG*, %struct.RNG** %rng71, align 8, !dbg !18369
  %call72 = call float @BLI_rng_get_float(%struct.RNG* %82), !dbg !18370
  store float %call72, float* %randv, align 4, !dbg !18371
  %83 = load i32, i32* %rng_skip_tot, align 4, !dbg !18372
  %sub = sub nsw i32 %83, 2, !dbg !18372
  store i32 %sub, i32* %rng_skip_tot, align 4, !dbg !18372
  %84 = load float, float* %randu, align 4, !dbg !18373
  %85 = load float, float* %randv, align 4, !dbg !18374
  %86 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18375
  %v473 = getelementptr inbounds %struct.MFace, %struct.MFace* %86, i32 0, i32 3, !dbg !18376
  %87 = load i32, i32* %v473, align 4, !dbg !18376
  %88 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18377
  %fuv74 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %88, i32 0, i32 11, !dbg !18378
  %arraydecay75 = getelementptr inbounds [4 x float], [4 x float]* %fuv74, i64 0, i64 0, !dbg !18377
  call void @psys_uv_to_w(float %84, float %85, i32 %87, float* %arraydecay75), !dbg !18379
  br label %sw.epilog, !dbg !18380

sw.epilog:                                        ; preds = %if.then16, %sw.bb69, %if.end68
  %89 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18381
  %foffset = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %89, i32 0, i32 12, !dbg !18382
  store float 0.000000e+00, float* %foffset, align 8, !dbg !18383
  %90 = load i32, i32* %from, align 4, !dbg !18384
  %cmp76 = icmp eq i32 %90, 2, !dbg !18386
  br i1 %cmp76, label %if.then78, label %if.end166, !dbg !18387

if.then78:                                        ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !18388, metadata !DIExpression()), !dbg !18390
  %91 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18391
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %91, i32 0, i32 50, !dbg !18392
  %92 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !18392
  %93 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18393
  %call79 = call i8* %92(%struct.DerivedMesh* %93, i32 0), !dbg !18391
  %94 = bitcast i8* %call79 to %struct.MVert*, !dbg !18391
  store %struct.MVert* %94, %struct.MVert** %mvert, align 8, !dbg !18390
  %95 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18394
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %95, i32 0, i32 25, !dbg !18395
  %96 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !18395
  %97 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18396
  %call80 = call i32 %96(%struct.DerivedMesh* %97), !dbg !18394
  store i32 %call80, i32* %tot, align 4, !dbg !18397
  %98 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !18398
  %99 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18399
  %100 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18400
  %fuv81 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %100, i32 0, i32 11, !dbg !18401
  %arraydecay82 = getelementptr inbounds [4 x float], [4 x float]* %fuv81, i64 0, i64 0, !dbg !18400
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !18402
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !18403
  call void @psys_interpolate_face(%struct.MVert* %98, %struct.MFace* %99, %struct.MTFace* null, [3 x float]* null, float* %arraydecay82, float* %arraydecay83, float* %arraydecay84, float* null, float* null, float* null, float* null), !dbg !18404
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !18405
  %call86 = call float @normalize_v3(float* %arraydecay85), !dbg !18406
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !18407
  call void @mul_v3_fl(float* %arraydecay87, float -1.000000e+02), !dbg !18408
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !18409
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !18410
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !18411
  call void @add_v3_v3v3(float* %arraydecay88, float* %arraydecay89, float* %arraydecay90), !dbg !18412
  store float 2.000000e+00, float* %min_d, align 4, !dbg !18413
  store i32 0, i32* %intersect, align 4, !dbg !18414
  store i32 0, i32* %i, align 4, !dbg !18415
  %101 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18417
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %101, i32 0, i32 52, !dbg !18418
  %102 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !18418
  %103 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18419
  %call91 = call i8* %102(%struct.DerivedMesh* %103, i32 4), !dbg !18417
  %104 = bitcast i8* %call91 to %struct.MFace*, !dbg !18417
  store %struct.MFace* %104, %struct.MFace** %mface, align 8, !dbg !18420
  br label %for.cond, !dbg !18421

for.cond:                                         ; preds = %for.inc, %if.then78
  %105 = load i32, i32* %i, align 4, !dbg !18422
  %106 = load i32, i32* %tot, align 4, !dbg !18424
  %cmp92 = icmp slt i32 %105, %106, !dbg !18425
  br i1 %cmp92, label %for.body, label %for.end, !dbg !18426

for.body:                                         ; preds = %for.cond
  %107 = load i32, i32* %i, align 4, !dbg !18427
  %108 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18430
  %num94 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %108, i32 0, i32 9, !dbg !18431
  %109 = load i32, i32* %num94, align 8, !dbg !18431
  %cmp95 = icmp eq i32 %107, %109, !dbg !18432
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !18433

if.then97:                                        ; preds = %for.body
  br label %for.inc, !dbg !18434

if.end98:                                         ; preds = %for.body
  %110 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !18435
  %111 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18436
  %v199 = getelementptr inbounds %struct.MFace, %struct.MFace* %111, i32 0, i32 0, !dbg !18437
  %112 = load i32, i32* %v199, align 4, !dbg !18437
  %idxprom100 = zext i32 %112 to i64, !dbg !18435
  %arrayidx101 = getelementptr inbounds %struct.MVert, %struct.MVert* %110, i64 %idxprom100, !dbg !18435
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx101, i32 0, i32 0, !dbg !18438
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !18435
  store float* %arraydecay102, float** %v1, align 8, !dbg !18439
  %113 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !18440
  %114 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18441
  %v2103 = getelementptr inbounds %struct.MFace, %struct.MFace* %114, i32 0, i32 1, !dbg !18442
  %115 = load i32, i32* %v2103, align 4, !dbg !18442
  %idxprom104 = zext i32 %115 to i64, !dbg !18440
  %arrayidx105 = getelementptr inbounds %struct.MVert, %struct.MVert* %113, i64 %idxprom104, !dbg !18440
  %co106 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx105, i32 0, i32 0, !dbg !18443
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %co106, i64 0, i64 0, !dbg !18440
  store float* %arraydecay107, float** %v2, align 8, !dbg !18444
  %116 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !18445
  %117 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18446
  %v3108 = getelementptr inbounds %struct.MFace, %struct.MFace* %117, i32 0, i32 2, !dbg !18447
  %118 = load i32, i32* %v3108, align 4, !dbg !18447
  %idxprom109 = zext i32 %118 to i64, !dbg !18445
  %arrayidx110 = getelementptr inbounds %struct.MVert, %struct.MVert* %116, i64 %idxprom109, !dbg !18445
  %co111 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx110, i32 0, i32 0, !dbg !18448
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %co111, i64 0, i64 0, !dbg !18445
  store float* %arraydecay112, float** %v3, align 8, !dbg !18449
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !18450
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !18452
  %119 = load float*, float** %v2, align 8, !dbg !18453
  %120 = load float*, float** %v3, align 8, !dbg !18454
  %121 = load float*, float** %v1, align 8, !dbg !18455
  %call115 = call zeroext i8 @isect_line_tri_v3(float* %arraydecay113, float* %arraydecay114, float* %119, float* %120, float* %121, float* %cur_d, float* null), !dbg !18456
  %tobool116 = icmp ne i8 %call115, 0, !dbg !18456
  br i1 %tobool116, label %if.then117, label %if.end124, !dbg !18457

if.then117:                                       ; preds = %if.end98
  %122 = load float, float* %cur_d, align 4, !dbg !18458
  %123 = load float, float* %min_d, align 4, !dbg !18461
  %cmp118 = fcmp olt float %122, %123, !dbg !18462
  br i1 %cmp118, label %if.then120, label %if.end123, !dbg !18463

if.then120:                                       ; preds = %if.then117
  %124 = load float, float* %cur_d, align 4, !dbg !18464
  store float %124, float* %min_d, align 4, !dbg !18466
  %125 = load float, float* %cur_d, align 4, !dbg !18467
  %mul121 = fmul float %125, 5.000000e+01, !dbg !18468
  %126 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18469
  %foffset122 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %126, i32 0, i32 12, !dbg !18470
  store float %mul121, float* %foffset122, align 8, !dbg !18471
  store i32 1, i32* %intersect, align 4, !dbg !18472
  br label %if.end123, !dbg !18473

if.end123:                                        ; preds = %if.then120, %if.then117
  br label %if.end124, !dbg !18474

if.end124:                                        ; preds = %if.end123, %if.end98
  %127 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18475
  %v4125 = getelementptr inbounds %struct.MFace, %struct.MFace* %127, i32 0, i32 3, !dbg !18477
  %128 = load i32, i32* %v4125, align 4, !dbg !18477
  %tobool126 = icmp ne i32 %128, 0, !dbg !18475
  br i1 %tobool126, label %if.then127, label %if.end145, !dbg !18478

if.then127:                                       ; preds = %if.end124
  %129 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !18479
  %130 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18481
  %v4128 = getelementptr inbounds %struct.MFace, %struct.MFace* %130, i32 0, i32 3, !dbg !18482
  %131 = load i32, i32* %v4128, align 4, !dbg !18482
  %idxprom129 = zext i32 %131 to i64, !dbg !18479
  %arrayidx130 = getelementptr inbounds %struct.MVert, %struct.MVert* %129, i64 %idxprom129, !dbg !18479
  %co131 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx130, i32 0, i32 0, !dbg !18483
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %co131, i64 0, i64 0, !dbg !18479
  store float* %arraydecay132, float** %v4, align 8, !dbg !18484
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !18485
  %arraydecay134 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !18487
  %132 = load float*, float** %v4, align 8, !dbg !18488
  %133 = load float*, float** %v1, align 8, !dbg !18489
  %134 = load float*, float** %v3, align 8, !dbg !18490
  %call135 = call zeroext i8 @isect_line_tri_v3(float* %arraydecay133, float* %arraydecay134, float* %132, float* %133, float* %134, float* %cur_d, float* null), !dbg !18491
  %tobool136 = icmp ne i8 %call135, 0, !dbg !18491
  br i1 %tobool136, label %if.then137, label %if.end144, !dbg !18492

if.then137:                                       ; preds = %if.then127
  %135 = load float, float* %cur_d, align 4, !dbg !18493
  %136 = load float, float* %min_d, align 4, !dbg !18496
  %cmp138 = fcmp olt float %135, %136, !dbg !18497
  br i1 %cmp138, label %if.then140, label %if.end143, !dbg !18498

if.then140:                                       ; preds = %if.then137
  %137 = load float, float* %cur_d, align 4, !dbg !18499
  store float %137, float* %min_d, align 4, !dbg !18501
  %138 = load float, float* %cur_d, align 4, !dbg !18502
  %mul141 = fmul float %138, 5.000000e+01, !dbg !18503
  %139 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18504
  %foffset142 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %139, i32 0, i32 12, !dbg !18505
  store float %mul141, float* %foffset142, align 8, !dbg !18506
  store i32 1, i32* %intersect, align 4, !dbg !18507
  br label %if.end143, !dbg !18508

if.end143:                                        ; preds = %if.then140, %if.then137
  br label %if.end144, !dbg !18509

if.end144:                                        ; preds = %if.end143, %if.then127
  br label %if.end145, !dbg !18510

if.end145:                                        ; preds = %if.end144, %if.end124
  br label %for.inc, !dbg !18511

for.inc:                                          ; preds = %if.end145, %if.then97
  %140 = load i32, i32* %i, align 4, !dbg !18512
  %inc146 = add nsw i32 %140, 1, !dbg !18512
  store i32 %inc146, i32* %i, align 4, !dbg !18512
  %141 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18513
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %141, i32 1, !dbg !18513
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mface, align 8, !dbg !18513
  br label %for.cond, !dbg !18514, !llvm.loop !18515

for.end:                                          ; preds = %for.cond
  %142 = load i32, i32* %intersect, align 4, !dbg !18517
  %cmp147 = icmp eq i32 %142, 0, !dbg !18519
  br i1 %cmp147, label %if.then149, label %if.else151, !dbg !18520

if.then149:                                       ; preds = %for.end
  %143 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18521
  %foffset150 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %143, i32 0, i32 12, !dbg !18522
  store float 0.000000e+00, float* %foffset150, align 8, !dbg !18523
  br label %if.end165, !dbg !18521

if.else151:                                       ; preds = %for.end
  %144 = load i32, i32* %distr, align 4, !dbg !18524
  switch i32 %144, label %sw.epilog164 [
    i32 0, label %sw.bb152
    i32 1, label %sw.bb160
  ], !dbg !18526

sw.bb152:                                         ; preds = %if.else151
  %145 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18527
  %jit153 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %145, i32 0, i32 6, !dbg !18529
  %146 = load float*, float** %jit153, align 8, !dbg !18529
  %147 = load i32, i32* %p.addr, align 4, !dbg !18530
  %148 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18531
  %jitlevel154 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %148, i32 0, i32 12, !dbg !18532
  %149 = load i32, i32* %jitlevel154, align 8, !dbg !18532
  %mul155 = mul nsw i32 2, %149, !dbg !18533
  %rem = srem i32 %147, %mul155, !dbg !18534
  %idxprom156 = sext i32 %rem to i64, !dbg !18527
  %arrayidx157 = getelementptr inbounds float, float* %146, i64 %idxprom156, !dbg !18527
  %150 = load float, float* %arrayidx157, align 4, !dbg !18527
  %151 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18535
  %foffset158 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %151, i32 0, i32 12, !dbg !18536
  %152 = load float, float* %foffset158, align 8, !dbg !18537
  %mul159 = fmul float %152, %150, !dbg !18537
  store float %mul159, float* %foffset158, align 8, !dbg !18537
  br label %sw.epilog164, !dbg !18538

sw.bb160:                                         ; preds = %if.else151
  %call161 = call float @BLI_frand(), !dbg !18539
  %153 = load %struct.ParticleData*, %struct.ParticleData** %pa.addr, align 8, !dbg !18540
  %foffset162 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %153, i32 0, i32 12, !dbg !18541
  %154 = load float, float* %foffset162, align 8, !dbg !18542
  %mul163 = fmul float %154, %call161, !dbg !18542
  store float %mul163, float* %foffset162, align 8, !dbg !18542
  br label %sw.epilog164, !dbg !18543

sw.epilog164:                                     ; preds = %if.else151, %sw.bb160, %sw.bb152
  br label %if.end165

if.end165:                                        ; preds = %sw.epilog164, %if.then149
  br label %if.end166, !dbg !18544

if.end166:                                        ; preds = %if.end165, %sw.epilog
  br label %if.end322, !dbg !18545

if.else167:                                       ; preds = %lor.lhs.false
  %155 = load i32, i32* %from, align 4, !dbg !18546
  %cmp168 = icmp eq i32 %155, 4, !dbg !18548
  br i1 %cmp168, label %if.then170, label %if.end321, !dbg !18549

if.then170:                                       ; preds = %if.else167
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !18550, metadata !DIExpression()), !dbg !18552
  %156 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18553
  %index171 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %156, i32 0, i32 10, !dbg !18555
  %157 = load i32*, i32** %index171, align 8, !dbg !18555
  %158 = load i32, i32* %p.addr, align 4, !dbg !18556
  %idxprom172 = sext i32 %158 to i64, !dbg !18553
  %arrayidx173 = getelementptr inbounds i32, i32* %157, i64 %idxprom172, !dbg !18553
  %159 = load i32, i32* %arrayidx173, align 4, !dbg !18553
  %cmp174 = icmp slt i32 %159, 0, !dbg !18557
  br i1 %cmp174, label %if.then176, label %if.end194, !dbg !18558

if.then176:                                       ; preds = %if.then170
  %160 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18559
  %num177 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %160, i32 0, i32 0, !dbg !18561
  store i32 0, i32* %num177, align 4, !dbg !18562
  %161 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18563
  %fuv178 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %161, i32 0, i32 4, !dbg !18564
  %arrayidx179 = getelementptr inbounds [4 x float], [4 x float]* %fuv178, i64 0, i64 3, !dbg !18563
  store float 0.000000e+00, float* %arrayidx179, align 4, !dbg !18565
  %162 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18566
  %fuv180 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %162, i32 0, i32 4, !dbg !18567
  %arrayidx181 = getelementptr inbounds [4 x float], [4 x float]* %fuv180, i64 0, i64 2, !dbg !18566
  store float 0.000000e+00, float* %arrayidx181, align 4, !dbg !18568
  %163 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18569
  %fuv182 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %163, i32 0, i32 4, !dbg !18570
  %arrayidx183 = getelementptr inbounds [4 x float], [4 x float]* %fuv182, i64 0, i64 1, !dbg !18569
  store float 0.000000e+00, float* %arrayidx183, align 4, !dbg !18571
  %164 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18572
  %fuv184 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %164, i32 0, i32 4, !dbg !18573
  %arrayidx185 = getelementptr inbounds [4 x float], [4 x float]* %fuv184, i64 0, i64 0, !dbg !18572
  store float 0.000000e+00, float* %arrayidx185, align 4, !dbg !18574
  %165 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18575
  %pa186 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %165, i32 0, i32 2, !dbg !18576
  %arrayidx187 = getelementptr inbounds [4 x i32], [4 x i32]* %pa186, i64 0, i64 3, !dbg !18575
  store i32 0, i32* %arrayidx187, align 4, !dbg !18577
  %166 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18578
  %pa188 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %166, i32 0, i32 2, !dbg !18579
  %arrayidx189 = getelementptr inbounds [4 x i32], [4 x i32]* %pa188, i64 0, i64 2, !dbg !18578
  store i32 0, i32* %arrayidx189, align 4, !dbg !18580
  %167 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18581
  %pa190 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %167, i32 0, i32 2, !dbg !18582
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %pa190, i64 0, i64 1, !dbg !18581
  store i32 0, i32* %arrayidx191, align 4, !dbg !18583
  %168 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18584
  %pa192 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %168, i32 0, i32 2, !dbg !18585
  %arrayidx193 = getelementptr inbounds [4 x i32], [4 x i32]* %pa192, i64 0, i64 0, !dbg !18584
  store i32 0, i32* %arrayidx193, align 4, !dbg !18586
  br label %if.end328, !dbg !18587

if.end194:                                        ; preds = %if.then170
  %169 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18588
  %getTessFaceData195 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %169, i32 0, i32 48, !dbg !18589
  %170 = load i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)** %getTessFaceData195, align 8, !dbg !18589
  %171 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18590
  %172 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18591
  %index196 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %172, i32 0, i32 10, !dbg !18592
  %173 = load i32*, i32** %index196, align 8, !dbg !18592
  %174 = load i32, i32* %p.addr, align 4, !dbg !18593
  %idxprom197 = sext i32 %174 to i64, !dbg !18591
  %arrayidx198 = getelementptr inbounds i32, i32* %173, i64 %idxprom197, !dbg !18591
  %175 = load i32, i32* %arrayidx198, align 4, !dbg !18591
  %call199 = call i8* %170(%struct.DerivedMesh* %171, i32 %175, i32 4), !dbg !18588
  %176 = bitcast i8* %call199 to %struct.MFace*, !dbg !18588
  store %struct.MFace* %176, %struct.MFace** %mf, align 8, !dbg !18594
  %177 = load %struct.ParticleThread*, %struct.ParticleThread** %thread.addr, align 8, !dbg !18595
  %rng200 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %177, i32 0, i32 1, !dbg !18596
  %178 = load %struct.RNG*, %struct.RNG** %rng200, align 8, !dbg !18596
  %call201 = call float @BLI_rng_get_float(%struct.RNG* %178), !dbg !18597
  store float %call201, float* %randu, align 4, !dbg !18598
  %179 = load %struct.ParticleThread*, %struct.ParticleThread** %thread.addr, align 8, !dbg !18599
  %rng202 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %179, i32 0, i32 1, !dbg !18600
  %180 = load %struct.RNG*, %struct.RNG** %rng202, align 8, !dbg !18600
  %call203 = call float @BLI_rng_get_float(%struct.RNG* %180), !dbg !18601
  store float %call203, float* %randv, align 4, !dbg !18602
  %181 = load i32, i32* %rng_skip_tot, align 4, !dbg !18603
  %sub204 = sub nsw i32 %181, 2, !dbg !18603
  store i32 %sub204, i32* %rng_skip_tot, align 4, !dbg !18603
  %182 = load float, float* %randu, align 4, !dbg !18604
  %183 = load float, float* %randv, align 4, !dbg !18605
  %184 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !18606
  %v4205 = getelementptr inbounds %struct.MFace, %struct.MFace* %184, i32 0, i32 3, !dbg !18607
  %185 = load i32, i32* %v4205, align 4, !dbg !18607
  %186 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18608
  %fuv206 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %186, i32 0, i32 4, !dbg !18609
  %arraydecay207 = getelementptr inbounds [4 x float], [4 x float]* %fuv206, i64 0, i64 0, !dbg !18608
  call void @psys_uv_to_w(float %182, float %183, i32 %185, float* %arraydecay207), !dbg !18610
  %187 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18611
  %index208 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %187, i32 0, i32 10, !dbg !18612
  %188 = load i32*, i32** %index208, align 8, !dbg !18612
  %189 = load i32, i32* %p.addr, align 4, !dbg !18613
  %idxprom209 = sext i32 %189 to i64, !dbg !18611
  %arrayidx210 = getelementptr inbounds i32, i32* %188, i64 %idxprom209, !dbg !18611
  %190 = load i32, i32* %arrayidx210, align 4, !dbg !18611
  %191 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18614
  %num211 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %191, i32 0, i32 0, !dbg !18615
  store i32 %190, i32* %num211, align 4, !dbg !18616
  %192 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18617
  %tree = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %192, i32 0, i32 3, !dbg !18619
  %193 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !18619
  %tobool212 = icmp ne %struct.KDTree* %193, null, !dbg !18617
  br i1 %tobool212, label %if.then213, label %if.end320, !dbg !18620

if.then213:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata [10 x %struct.KDTreeNearest]* %ptn, metadata !18621, metadata !DIExpression()), !dbg !18630
  call void @llvm.dbg.declare(metadata i32* %w, metadata !18631, metadata !DIExpression()), !dbg !18632
  call void @llvm.dbg.declare(metadata i32* %maxw, metadata !18633, metadata !DIExpression()), !dbg !18634
  call void @llvm.dbg.declare(metadata float* %maxd, metadata !18635, metadata !DIExpression()), !dbg !18636
  call void @llvm.dbg.declare(metadata float* %totw, metadata !18637, metadata !DIExpression()), !dbg !18638
  store float 0.000000e+00, float* %totw, align 4, !dbg !18638
  call void @llvm.dbg.declare(metadata [10 x i32]* %parent, metadata !18639, metadata !DIExpression()), !dbg !18641
  call void @llvm.dbg.declare(metadata [10 x float]* %pweight, metadata !18642, metadata !DIExpression()), !dbg !18644
  %194 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18645
  %195 = load i32, i32* %cfrom, align 4, !dbg !18646
  %196 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18647
  %num214 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %196, i32 0, i32 0, !dbg !18648
  %197 = load i32, i32* %num214, align 4, !dbg !18648
  %198 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18649
  %fuv215 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %198, i32 0, i32 4, !dbg !18650
  %arraydecay216 = getelementptr inbounds [4 x float], [4 x float]* %fuv215, i64 0, i64 0, !dbg !18649
  %199 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18651
  %foffset217 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %199, i32 0, i32 5, !dbg !18652
  %200 = load float, float* %foffset217, align 4, !dbg !18652
  %arraydecay218 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !18653
  %arraydecay219 = getelementptr inbounds [3 x float], [3 x float]* %nor1, i64 0, i64 0, !dbg !18654
  %arraydecay220 = getelementptr inbounds [3 x float], [3 x float]* %orco1, i64 0, i64 0, !dbg !18655
  call void @psys_particle_on_dm(%struct.DerivedMesh* %194, i32 %195, i32 %197, i32 -2, float* %arraydecay216, float %200, float* %arraydecay218, float* %arraydecay219, float* null, float* null, float* %arraydecay220, float* null), !dbg !18656
  %201 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !18657
  %data = getelementptr inbounds %struct.Object, %struct.Object* %201, i32 0, i32 19, !dbg !18658
  %202 = load i8*, i8** %data, align 8, !dbg !18658
  %203 = bitcast i8* %202 to %struct.Mesh*, !dbg !18659
  call void @BKE_mesh_orco_verts_transform(%struct.Mesh* %203, [3 x float]* %orco1, i32 1, i32 1), !dbg !18660
  %204 = load %struct.ParticleThreadContext*, %struct.ParticleThreadContext** %ctx, align 8, !dbg !18661
  %tree221 = getelementptr inbounds %struct.ParticleThreadContext, %struct.ParticleThreadContext* %204, i32 0, i32 3, !dbg !18661
  %205 = load %struct.KDTree*, %struct.KDTree** %tree221, align 8, !dbg !18661
  %arraydecay222 = getelementptr inbounds [3 x float], [3 x float]* %orco1, i64 0, i64 0, !dbg !18661
  %arraydecay223 = getelementptr inbounds [10 x %struct.KDTreeNearest], [10 x %struct.KDTreeNearest]* %ptn, i64 0, i64 0, !dbg !18661
  %call224 = call i32 @BLI_kdtree_find_nearest_n__normal(%struct.KDTree* %205, float* %arraydecay222, float* null, %struct.KDTreeNearest* %arraydecay223, i32 3), !dbg !18661
  store i32 %call224, i32* %maxw, align 4, !dbg !18662
  %206 = load i32, i32* %maxw, align 4, !dbg !18663
  %sub225 = sub nsw i32 %206, 1, !dbg !18664
  %idxprom226 = sext i32 %sub225 to i64, !dbg !18665
  %arrayidx227 = getelementptr inbounds [10 x %struct.KDTreeNearest], [10 x %struct.KDTreeNearest]* %ptn, i64 0, i64 %idxprom226, !dbg !18665
  %dist = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %arrayidx227, i32 0, i32 1, !dbg !18666
  %207 = load float, float* %dist, align 4, !dbg !18666
  store float %207, float* %maxd, align 4, !dbg !18667
  store i32 0, i32* %w, align 4, !dbg !18668
  br label %for.cond228, !dbg !18670

for.cond228:                                      ; preds = %for.inc246, %if.then213
  %208 = load i32, i32* %w, align 4, !dbg !18671
  %209 = load i32, i32* %maxw, align 4, !dbg !18673
  %cmp229 = icmp slt i32 %208, %209, !dbg !18674
  br i1 %cmp229, label %for.body231, label %for.end248, !dbg !18675

for.body231:                                      ; preds = %for.cond228
  %210 = load i32, i32* %w, align 4, !dbg !18676
  %idxprom232 = sext i32 %210 to i64, !dbg !18678
  %arrayidx233 = getelementptr inbounds [10 x %struct.KDTreeNearest], [10 x %struct.KDTreeNearest]* %ptn, i64 0, i64 %idxprom232, !dbg !18678
  %index234 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %arrayidx233, i32 0, i32 0, !dbg !18679
  %211 = load i32, i32* %index234, align 4, !dbg !18679
  %212 = load i32, i32* %w, align 4, !dbg !18680
  %idxprom235 = sext i32 %212 to i64, !dbg !18681
  %arrayidx236 = getelementptr inbounds [10 x i32], [10 x i32]* %parent, i64 0, i64 %idxprom235, !dbg !18681
  store i32 %211, i32* %arrayidx236, align 4, !dbg !18682
  %213 = load i32, i32* %w, align 4, !dbg !18683
  %idxprom237 = sext i32 %213 to i64, !dbg !18684
  %arrayidx238 = getelementptr inbounds [10 x %struct.KDTreeNearest], [10 x %struct.KDTreeNearest]* %ptn, i64 0, i64 %idxprom237, !dbg !18684
  %dist239 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %arrayidx238, i32 0, i32 1, !dbg !18685
  %214 = load float, float* %dist239, align 4, !dbg !18685
  %mul240 = fmul float -6.000000e+00, %214, !dbg !18686
  %215 = load float, float* %maxd, align 4, !dbg !18687
  %div = fdiv float %mul240, %215, !dbg !18688
  %conv241 = fpext float %div to double, !dbg !18689
  %call242 = call double @pow(double 2.000000e+00, double %conv241) #5, !dbg !18690
  %conv243 = fptrunc double %call242 to float, !dbg !18691
  %216 = load i32, i32* %w, align 4, !dbg !18692
  %idxprom244 = sext i32 %216 to i64, !dbg !18693
  %arrayidx245 = getelementptr inbounds [10 x float], [10 x float]* %pweight, i64 0, i64 %idxprom244, !dbg !18693
  store float %conv243, float* %arrayidx245, align 4, !dbg !18694
  br label %for.inc246, !dbg !18695

for.inc246:                                       ; preds = %for.body231
  %217 = load i32, i32* %w, align 4, !dbg !18696
  %inc247 = add nsw i32 %217, 1, !dbg !18696
  store i32 %inc247, i32* %w, align 4, !dbg !18696
  br label %for.cond228, !dbg !18697, !llvm.loop !18698

for.end248:                                       ; preds = %for.cond228
  br label %for.cond249, !dbg !18700

for.cond249:                                      ; preds = %for.inc257, %for.end248
  %218 = load i32, i32* %w, align 4, !dbg !18701
  %cmp250 = icmp slt i32 %218, 10, !dbg !18704
  br i1 %cmp250, label %for.body252, label %for.end259, !dbg !18705

for.body252:                                      ; preds = %for.cond249
  %219 = load i32, i32* %w, align 4, !dbg !18706
  %idxprom253 = sext i32 %219 to i64, !dbg !18708
  %arrayidx254 = getelementptr inbounds [10 x i32], [10 x i32]* %parent, i64 0, i64 %idxprom253, !dbg !18708
  store i32 -1, i32* %arrayidx254, align 4, !dbg !18709
  %220 = load i32, i32* %w, align 4, !dbg !18710
  %idxprom255 = sext i32 %220 to i64, !dbg !18711
  %arrayidx256 = getelementptr inbounds [10 x float], [10 x float]* %pweight, i64 0, i64 %idxprom255, !dbg !18711
  store float 0.000000e+00, float* %arrayidx256, align 4, !dbg !18712
  br label %for.inc257, !dbg !18713

for.inc257:                                       ; preds = %for.body252
  %221 = load i32, i32* %w, align 4, !dbg !18714
  %inc258 = add nsw i32 %221, 1, !dbg !18714
  store i32 %inc258, i32* %w, align 4, !dbg !18714
  br label %for.cond249, !dbg !18715, !llvm.loop !18716

for.end259:                                       ; preds = %for.cond249
  store i32 0, i32* %w, align 4, !dbg !18718
  store i32 0, i32* %i, align 4, !dbg !18720
  br label %for.cond260, !dbg !18721

for.cond260:                                      ; preds = %for.inc286, %for.end259
  %222 = load i32, i32* %w, align 4, !dbg !18722
  %223 = load i32, i32* %maxw, align 4, !dbg !18724
  %cmp261 = icmp slt i32 %222, %223, !dbg !18725
  br i1 %cmp261, label %land.rhs, label %land.end, !dbg !18726

land.rhs:                                         ; preds = %for.cond260
  %224 = load i32, i32* %i, align 4, !dbg !18727
  %cmp263 = icmp slt i32 %224, 4, !dbg !18728
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond260
  %225 = phi i1 [ false, %for.cond260 ], [ %cmp263, %land.rhs ], !dbg !18729
  br i1 %225, label %for.body265, label %for.end288, !dbg !18730

for.body265:                                      ; preds = %land.end
  %226 = load i32, i32* %w, align 4, !dbg !18731
  %idxprom266 = sext i32 %226 to i64, !dbg !18734
  %arrayidx267 = getelementptr inbounds [10 x i32], [10 x i32]* %parent, i64 0, i64 %idxprom266, !dbg !18734
  %227 = load i32, i32* %arrayidx267, align 4, !dbg !18734
  %cmp268 = icmp sge i32 %227, 0, !dbg !18735
  br i1 %cmp268, label %if.then270, label %if.end285, !dbg !18736

if.then270:                                       ; preds = %for.body265
  %228 = load i32, i32* %w, align 4, !dbg !18737
  %idxprom271 = sext i32 %228 to i64, !dbg !18739
  %arrayidx272 = getelementptr inbounds [10 x i32], [10 x i32]* %parent, i64 0, i64 %idxprom271, !dbg !18739
  %229 = load i32, i32* %arrayidx272, align 4, !dbg !18739
  %230 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18740
  %pa273 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %230, i32 0, i32 2, !dbg !18741
  %231 = load i32, i32* %i, align 4, !dbg !18742
  %idxprom274 = sext i32 %231 to i64, !dbg !18740
  %arrayidx275 = getelementptr inbounds [4 x i32], [4 x i32]* %pa273, i64 0, i64 %idxprom274, !dbg !18740
  store i32 %229, i32* %arrayidx275, align 4, !dbg !18743
  %232 = load i32, i32* %w, align 4, !dbg !18744
  %idxprom276 = sext i32 %232 to i64, !dbg !18745
  %arrayidx277 = getelementptr inbounds [10 x float], [10 x float]* %pweight, i64 0, i64 %idxprom276, !dbg !18745
  %233 = load float, float* %arrayidx277, align 4, !dbg !18745
  %234 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18746
  %w278 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %234, i32 0, i32 3, !dbg !18747
  %235 = load i32, i32* %i, align 4, !dbg !18748
  %idxprom279 = sext i32 %235 to i64, !dbg !18746
  %arrayidx280 = getelementptr inbounds [4 x float], [4 x float]* %w278, i64 0, i64 %idxprom279, !dbg !18746
  store float %233, float* %arrayidx280, align 4, !dbg !18749
  %236 = load i32, i32* %w, align 4, !dbg !18750
  %idxprom281 = sext i32 %236 to i64, !dbg !18751
  %arrayidx282 = getelementptr inbounds [10 x float], [10 x float]* %pweight, i64 0, i64 %idxprom281, !dbg !18751
  %237 = load float, float* %arrayidx282, align 4, !dbg !18751
  %238 = load float, float* %totw, align 4, !dbg !18752
  %add283 = fadd float %238, %237, !dbg !18752
  store float %add283, float* %totw, align 4, !dbg !18752
  %239 = load i32, i32* %i, align 4, !dbg !18753
  %inc284 = add nsw i32 %239, 1, !dbg !18753
  store i32 %inc284, i32* %i, align 4, !dbg !18753
  br label %if.end285, !dbg !18754

if.end285:                                        ; preds = %if.then270, %for.body265
  br label %for.inc286, !dbg !18755

for.inc286:                                       ; preds = %if.end285
  %240 = load i32, i32* %w, align 4, !dbg !18756
  %inc287 = add nsw i32 %240, 1, !dbg !18756
  store i32 %inc287, i32* %w, align 4, !dbg !18756
  br label %for.cond260, !dbg !18757, !llvm.loop !18758

for.end288:                                       ; preds = %land.end
  br label %for.cond289, !dbg !18760

for.cond289:                                      ; preds = %for.inc299, %for.end288
  %241 = load i32, i32* %i, align 4, !dbg !18761
  %cmp290 = icmp slt i32 %241, 4, !dbg !18764
  br i1 %cmp290, label %for.body292, label %for.end301, !dbg !18765

for.body292:                                      ; preds = %for.cond289
  %242 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18766
  %pa293 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %242, i32 0, i32 2, !dbg !18768
  %243 = load i32, i32* %i, align 4, !dbg !18769
  %idxprom294 = sext i32 %243 to i64, !dbg !18766
  %arrayidx295 = getelementptr inbounds [4 x i32], [4 x i32]* %pa293, i64 0, i64 %idxprom294, !dbg !18766
  store i32 -1, i32* %arrayidx295, align 4, !dbg !18770
  %244 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18771
  %w296 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %244, i32 0, i32 3, !dbg !18772
  %245 = load i32, i32* %i, align 4, !dbg !18773
  %idxprom297 = sext i32 %245 to i64, !dbg !18771
  %arrayidx298 = getelementptr inbounds [4 x float], [4 x float]* %w296, i64 0, i64 %idxprom297, !dbg !18771
  store float 0.000000e+00, float* %arrayidx298, align 4, !dbg !18774
  br label %for.inc299, !dbg !18775

for.inc299:                                       ; preds = %for.body292
  %246 = load i32, i32* %i, align 4, !dbg !18776
  %inc300 = add nsw i32 %246, 1, !dbg !18776
  store i32 %inc300, i32* %i, align 4, !dbg !18776
  br label %for.cond289, !dbg !18777, !llvm.loop !18778

for.end301:                                       ; preds = %for.cond289
  %247 = load float, float* %totw, align 4, !dbg !18780
  %cmp302 = fcmp ogt float %247, 0.000000e+00, !dbg !18782
  br i1 %cmp302, label %if.then304, label %if.end316, !dbg !18783

if.then304:                                       ; preds = %for.end301
  store i32 0, i32* %w, align 4, !dbg !18784
  br label %for.cond305, !dbg !18786

for.cond305:                                      ; preds = %for.inc313, %if.then304
  %248 = load i32, i32* %w, align 4, !dbg !18787
  %cmp306 = icmp slt i32 %248, 4, !dbg !18789
  br i1 %cmp306, label %for.body308, label %for.end315, !dbg !18790

for.body308:                                      ; preds = %for.cond305
  %249 = load float, float* %totw, align 4, !dbg !18791
  %250 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18792
  %w309 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %250, i32 0, i32 3, !dbg !18793
  %251 = load i32, i32* %w, align 4, !dbg !18794
  %idxprom310 = sext i32 %251 to i64, !dbg !18792
  %arrayidx311 = getelementptr inbounds [4 x float], [4 x float]* %w309, i64 0, i64 %idxprom310, !dbg !18792
  %252 = load float, float* %arrayidx311, align 4, !dbg !18795
  %div312 = fdiv float %252, %249, !dbg !18795
  store float %div312, float* %arrayidx311, align 4, !dbg !18795
  br label %for.inc313, !dbg !18792

for.inc313:                                       ; preds = %for.body308
  %253 = load i32, i32* %w, align 4, !dbg !18796
  %inc314 = add nsw i32 %253, 1, !dbg !18796
  store i32 %inc314, i32* %w, align 4, !dbg !18796
  br label %for.cond305, !dbg !18797, !llvm.loop !18798

for.end315:                                       ; preds = %for.cond305
  br label %if.end316, !dbg !18799

if.end316:                                        ; preds = %for.end315, %for.end301
  %254 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18800
  %pa317 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %254, i32 0, i32 2, !dbg !18801
  %arrayidx318 = getelementptr inbounds [4 x i32], [4 x i32]* %pa317, i64 0, i64 0, !dbg !18800
  %255 = load i32, i32* %arrayidx318, align 4, !dbg !18800
  %256 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa.addr, align 8, !dbg !18802
  %parent319 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %256, i32 0, i32 1, !dbg !18803
  store i32 %255, i32* %parent319, align 4, !dbg !18804
  br label %if.end320, !dbg !18805

if.end320:                                        ; preds = %if.end316, %if.end194
  br label %if.end321, !dbg !18806

if.end321:                                        ; preds = %if.end320, %if.else167
  br label %if.end322

if.end322:                                        ; preds = %if.end321, %if.end166
  br label %if.end323

if.end323:                                        ; preds = %if.end322, %if.then
  %257 = load i32, i32* %rng_skip_tot, align 4, !dbg !18807
  %cmp324 = icmp sgt i32 %257, 0, !dbg !18809
  br i1 %cmp324, label %if.then326, label %if.end328, !dbg !18810

if.then326:                                       ; preds = %if.end323
  %258 = load %struct.ParticleThread*, %struct.ParticleThread** %thread.addr, align 8, !dbg !18811
  %rng327 = getelementptr inbounds %struct.ParticleThread, %struct.ParticleThread* %258, i32 0, i32 1, !dbg !18812
  %259 = load %struct.RNG*, %struct.RNG** %rng327, align 8, !dbg !18812
  %260 = load i32, i32* %rng_skip_tot, align 4, !dbg !18813
  call void @BLI_rng_skip(%struct.RNG* %259, i32 %260), !dbg !18814
  br label %if.end328, !dbg !18814

if.end328:                                        ; preds = %if.then176, %if.then326, %if.end323
  ret void, !dbg !18815
}

; Function Attrs: noinline nounwind uwtable
define internal void @psys_uv_to_w(float %u, float %v, i32 %quad, float* %w) #0 !dbg !18816 {
entry:
  %u.addr = alloca float, align 4
  %v.addr = alloca float, align 4
  %quad.addr = alloca i32, align 4
  %w.addr = alloca float*, align 8
  %vert = alloca [4 x [3 x float]], align 16
  %co = alloca [3 x float], align 4
  store float %u, float* %u.addr, align 4
  call void @llvm.dbg.declare(metadata float* %u.addr, metadata !18819, metadata !DIExpression()), !dbg !18820
  store float %v, float* %v.addr, align 4
  call void @llvm.dbg.declare(metadata float* %v.addr, metadata !18821, metadata !DIExpression()), !dbg !18822
  store i32 %quad, i32* %quad.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quad.addr, metadata !18823, metadata !DIExpression()), !dbg !18824
  store float* %w, float** %w.addr, align 8
  call void @llvm.dbg.declare(metadata float** %w.addr, metadata !18825, metadata !DIExpression()), !dbg !18826
  call void @llvm.dbg.declare(metadata [4 x [3 x float]]* %vert, metadata !18827, metadata !DIExpression()), !dbg !18828
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !18829, metadata !DIExpression()), !dbg !18830
  %0 = load i32, i32* %quad.addr, align 4, !dbg !18831
  %tobool = icmp ne i32 %0, 0, !dbg !18831
  br i1 %tobool, label %if.end3, label %if.then, !dbg !18833

if.then:                                          ; preds = %entry
  %1 = load float, float* %u.addr, align 4, !dbg !18834
  %2 = load float, float* %v.addr, align 4, !dbg !18837
  %add = fadd float %1, %2, !dbg !18838
  %cmp = fcmp ogt float %add, 1.000000e+00, !dbg !18839
  br i1 %cmp, label %if.then1, label %if.else, !dbg !18840

if.then1:                                         ; preds = %if.then
  %3 = load float, float* %v.addr, align 4, !dbg !18841
  %sub = fsub float 1.000000e+00, %3, !dbg !18842
  store float %sub, float* %v.addr, align 4, !dbg !18843
  br label %if.end, !dbg !18844

if.else:                                          ; preds = %if.then
  %4 = load float, float* %u.addr, align 4, !dbg !18845
  %sub2 = fsub float 1.000000e+00, %4, !dbg !18846
  store float %sub2, float* %u.addr, align 4, !dbg !18847
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  br label %if.end3, !dbg !18848

if.end3:                                          ; preds = %if.end, %entry
  %arrayidx = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 0, !dbg !18849
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !18849
  store float 0.000000e+00, float* %arrayidx4, align 16, !dbg !18850
  %arrayidx5 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 0, !dbg !18851
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 1, !dbg !18851
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !18852
  %arrayidx7 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 0, !dbg !18853
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 2, !dbg !18853
  store float 0.000000e+00, float* %arrayidx8, align 8, !dbg !18854
  %arrayidx9 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 1, !dbg !18855
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !18855
  store float 1.000000e+00, float* %arrayidx10, align 4, !dbg !18856
  %arrayidx11 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 1, !dbg !18857
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 1, !dbg !18857
  store float 0.000000e+00, float* %arrayidx12, align 4, !dbg !18858
  %arrayidx13 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 1, !dbg !18859
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 2, !dbg !18859
  store float 0.000000e+00, float* %arrayidx14, align 4, !dbg !18860
  %arrayidx15 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 2, !dbg !18861
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !18861
  store float 1.000000e+00, float* %arrayidx16, align 8, !dbg !18862
  %arrayidx17 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 2, !dbg !18863
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx17, i64 0, i64 1, !dbg !18863
  store float 1.000000e+00, float* %arrayidx18, align 4, !dbg !18864
  %arrayidx19 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 2, !dbg !18865
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 2, !dbg !18865
  store float 0.000000e+00, float* %arrayidx20, align 8, !dbg !18866
  %5 = load float, float* %u.addr, align 4, !dbg !18867
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !18868
  store float %5, float* %arrayidx21, align 4, !dbg !18869
  %6 = load float, float* %v.addr, align 4, !dbg !18870
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 1, !dbg !18871
  store float %6, float* %arrayidx22, align 4, !dbg !18872
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 2, !dbg !18873
  store float 0.000000e+00, float* %arrayidx23, align 4, !dbg !18874
  %7 = load i32, i32* %quad.addr, align 4, !dbg !18875
  %tobool24 = icmp ne i32 %7, 0, !dbg !18875
  br i1 %tobool24, label %if.then25, label %if.else33, !dbg !18877

if.then25:                                        ; preds = %if.end3
  %arrayidx26 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 3, !dbg !18878
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 0, !dbg !18878
  store float 0.000000e+00, float* %arrayidx27, align 4, !dbg !18880
  %arrayidx28 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 3, !dbg !18881
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx28, i64 0, i64 1, !dbg !18881
  store float 1.000000e+00, float* %arrayidx29, align 4, !dbg !18882
  %arrayidx30 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 3, !dbg !18883
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx30, i64 0, i64 2, !dbg !18883
  store float 0.000000e+00, float* %arrayidx31, align 4, !dbg !18884
  %8 = load float*, float** %w.addr, align 8, !dbg !18885
  %arraydecay = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 0, !dbg !18886
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !18887
  call void @interp_weights_poly_v3(float* %8, [3 x float]* %arraydecay, i32 4, float* %arraydecay32), !dbg !18888
  br label %if.end37, !dbg !18889

if.else33:                                        ; preds = %if.end3
  %9 = load float*, float** %w.addr, align 8, !dbg !18890
  %arraydecay34 = getelementptr inbounds [4 x [3 x float]], [4 x [3 x float]]* %vert, i64 0, i64 0, !dbg !18892
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !18893
  call void @interp_weights_poly_v3(float* %9, [3 x float]* %arraydecay34, i32 3, float* %arraydecay35), !dbg !18894
  %10 = load float*, float** %w.addr, align 8, !dbg !18895
  %arrayidx36 = getelementptr inbounds float, float* %10, i64 3, !dbg !18895
  store float 0.000000e+00, float* %arrayidx36, align 4, !dbg !18896
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.then25
  ret void, !dbg !18897
}

declare dso_local void @psys_interpolate_face(%struct.MVert*, %struct.MFace*, %struct.MTFace*, [3 x float]*, float*, float*, float*, float*, float*, float*, float*) #2

declare dso_local zeroext i8 @isect_line_tri_v3(float*, float*, float*, float*, float*, float*, float*) #2

declare dso_local i32 @BLI_kdtree_find_nearest_n__normal(%struct.KDTree*, float*, float*, %struct.KDTreeNearest*, i32) #2

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #4

declare dso_local void @interp_weights_poly_v3(float*, [3 x float]*, i32, float*) #2

declare dso_local i32 @psys_get_particle_state(%struct.ParticleSimulationData*, i32, %struct.ParticleKey*, i32) #2

declare dso_local void @psys_find_parents(%struct.ParticleSimulationData*) #2

declare dso_local i32 @psys_in_edit_mode(%struct.Scene*, %struct.ParticleSystem*) #2

declare dso_local %struct.ModifierData* @modifiers_findByType(%struct.Object*, i32) #2

declare dso_local void @psys_cache_paths(%struct.ParticleSimulationData*, float) #2

declare dso_local void @psys_cache_child_paths(%struct.ParticleSimulationData*, float, i32) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3324, !3325, !3326}
!llvm.ident = !{!3327}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "psys_bvhtree_rwlock", scope: !2, file: !3, line: 106, type: !3318, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !217, globals: !3311, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/particle_system.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !17, !21, !27, !33, !77, !86, !95, !101, !107, !119, !171, !181, !185, !197, !207}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !6, line: 128, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !6, line: 164, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !6, line: 159, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20}
!19 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !6, line: 134, baseType: !7, size: 32, elements: !22)
!22 = !{!23, !24, !25, !26}
!23 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !6, line: 152, baseType: !7, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 76, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76}
!36 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!37 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!38 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!39 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!40 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!42 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!43 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!44 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!45 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!46 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!47 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!48 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!49 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!50 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!51 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!52 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!53 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!54 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!55 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!56 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!57 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!58 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!59 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!60 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!61 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!62 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!63 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!64 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!65 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!66 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!67 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!68 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!69 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!70 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!71 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!72 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!73 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!74 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!75 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!76 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !78, line: 420, baseType: !7, size: 32, elements: !79)
!78 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!79 = !{!80, !81, !82, !83, !84, !85}
!80 = !DIEnumerator(name: "OB_POSX", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "OB_POSY", value: 1, isUnsigned: true)
!82 = !DIEnumerator(name: "OB_POSZ", value: 2, isUnsigned: true)
!83 = !DIEnumerator(name: "OB_NEGX", value: 3, isUnsigned: true)
!84 = !DIEnumerator(name: "OB_NEGY", value: 4, isUnsigned: true)
!85 = !DIEnumerator(name: "OB_NEGZ", value: 5, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BoidMode", file: !87, line: 99, baseType: !7, size: 32, elements: !88)
!87 = !DIFile(filename: "blender/source/blender/makesdna/DNA_boid_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!88 = !{!89, !90, !91, !92, !93, !94}
!89 = !DIEnumerator(name: "eBoidMode_InAir", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "eBoidMode_OnLand", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "eBoidMode_Climbing", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "eBoidMode_Falling", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "eBoidMode_Liftoff", value: 4, isUnsigned: true)
!94 = !DIEnumerator(name: "NUM_BOID_MODES", value: 5, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !96, line: 674, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "eParticleSystemFlag_Pars", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "eParticleSystemFlag_psys_updated", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "eParticleSystemFlag_file_loaded", value: 4, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimData_Recalc", file: !102, line: 899, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "ADT_RECALC_DRIVERS", value: 1, isUnsigned: true)
!105 = !DIEnumerator(name: "ADT_RECALC_ANIM", value: 2, isUnsigned: true)
!106 = !DIEnumerator(name: "ADT_RECALC_ALL", value: 3, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BoidRuleType", file: !87, line: 37, baseType: !7, size: 32, elements: !108)
!108 = !{!109, !110, !111, !112, !113, !114, !115, !116, !117, !118}
!109 = !DIEnumerator(name: "eBoidRuleType_None", value: 0, isUnsigned: true)
!110 = !DIEnumerator(name: "eBoidRuleType_Goal", value: 1, isUnsigned: true)
!111 = !DIEnumerator(name: "eBoidRuleType_Avoid", value: 2, isUnsigned: true)
!112 = !DIEnumerator(name: "eBoidRuleType_AvoidCollision", value: 3, isUnsigned: true)
!113 = !DIEnumerator(name: "eBoidRuleType_Separate", value: 4, isUnsigned: true)
!114 = !DIEnumerator(name: "eBoidRuleType_Flock", value: 5, isUnsigned: true)
!115 = !DIEnumerator(name: "eBoidRuleType_FollowLeader", value: 6, isUnsigned: true)
!116 = !DIEnumerator(name: "eBoidRuleType_AverageSpeed", value: 7, isUnsigned: true)
!117 = !DIEnumerator(name: "eBoidRuleType_Fight", value: 8, isUnsigned: true)
!118 = !DIEnumerator(name: "NUM_BOID_RULE_TYPES", value: 9, isUnsigned: true)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !96, line: 35, baseType: !7, size: 32, elements: !120)
!120 = !{!121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170}
!121 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!124 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!125 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!126 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!127 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!128 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!129 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!130 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!131 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!132 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!133 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!134 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!135 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!136 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!137 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!138 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!139 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!140 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!141 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!142 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!143 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!144 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!145 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!146 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!147 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!148 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!149 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!150 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!151 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!152 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!153 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!154 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!155 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!156 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!157 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!158 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!159 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!160 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!161 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!162 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!163 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!164 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!165 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!166 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!167 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!168 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!169 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!170 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!171 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !172, line: 147, baseType: !7, size: 32, elements: !173)
!172 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_cloth.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!173 = !{!174, !175, !176, !177, !178, !179, !180}
!174 = !DIEnumerator(name: "CLOTH_SIMSETTINGS_FLAG_COLLOBJ", value: 4, isUnsigned: true)
!175 = !DIEnumerator(name: "CLOTH_SIMSETTINGS_FLAG_GOAL", value: 8, isUnsigned: true)
!176 = !DIEnumerator(name: "CLOTH_SIMSETTINGS_FLAG_TEARING", value: 16, isUnsigned: true)
!177 = !DIEnumerator(name: "CLOTH_SIMSETTINGS_FLAG_SCALING", value: 256, isUnsigned: true)
!178 = !DIEnumerator(name: "CLOTH_SIMSETTINGS_FLAG_CCACHE_EDIT", value: 4096, isUnsigned: true)
!179 = !DIEnumerator(name: "CLOTH_SIMSETTINGS_FLAG_NO_SPRING_COMPRESS", value: 8192, isUnsigned: true)
!180 = !DIEnumerator(name: "CLOTH_SIMSETTINGS_FLAG_SEW", value: 16384, isUnsigned: true)
!181 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !172, line: 158, baseType: !7, size: 32, elements: !182)
!182 = !{!183, !184}
!183 = !DIEnumerator(name: "CLOTH_COLLSETTINGS_FLAG_ENABLED", value: 2, isUnsigned: true)
!184 = !DIEnumerator(name: "CLOTH_COLLSETTINGS_FLAG_SELF", value: 4, isUnsigned: true)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !186, line: 123, baseType: !7, size: 32, elements: !187)
!186 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!187 = !{!188, !189, !190, !191, !192, !193, !194, !195, !196}
!188 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!189 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!190 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!191 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!192 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!193 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!194 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!195 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!196 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ObjectMode", file: !78, line: 666, baseType: !7, size: 32, elements: !198)
!198 = !{!199, !200, !201, !202, !203, !204, !205, !206}
!199 = !DIEnumerator(name: "OB_MODE_OBJECT", value: 0, isUnsigned: true)
!200 = !DIEnumerator(name: "OB_MODE_EDIT", value: 1, isUnsigned: true)
!201 = !DIEnumerator(name: "OB_MODE_SCULPT", value: 2, isUnsigned: true)
!202 = !DIEnumerator(name: "OB_MODE_VERTEX_PAINT", value: 4, isUnsigned: true)
!203 = !DIEnumerator(name: "OB_MODE_WEIGHT_PAINT", value: 8, isUnsigned: true)
!204 = !DIEnumerator(name: "OB_MODE_TEXTURE_PAINT", value: 16, isUnsigned: true)
!205 = !DIEnumerator(name: "OB_MODE_PARTICLE_EDIT", value: 32, isUnsigned: true)
!206 = !DIEnumerator(name: "OB_MODE_POSE", value: 64, isUnsigned: true)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !96, line: 680, baseType: !7, size: 32, elements: !208)
!208 = !{!209, !210, !211, !212, !213, !214, !215, !216}
!209 = !DIEnumerator(name: "eParticleInstanceFlag_Parents", value: 1, isUnsigned: true)
!210 = !DIEnumerator(name: "eParticleInstanceFlag_Children", value: 2, isUnsigned: true)
!211 = !DIEnumerator(name: "eParticleInstanceFlag_Path", value: 4, isUnsigned: true)
!212 = !DIEnumerator(name: "eParticleInstanceFlag_Unborn", value: 8, isUnsigned: true)
!213 = !DIEnumerator(name: "eParticleInstanceFlag_Alive", value: 16, isUnsigned: true)
!214 = !DIEnumerator(name: "eParticleInstanceFlag_Dead", value: 32, isUnsigned: true)
!215 = !DIEnumerator(name: "eParticleInstanceFlag_KeepShape", value: 64, isUnsigned: true)
!216 = !DIEnumerator(name: "eParticleInstanceFlag_UseSize", value: 128, isUnsigned: true)
!217 = !{!218, !229, !687, !260, !341, !690, !712, !3138, !2988, !3163, !3184, !3194, !3240, !669, !3242, !2797, !3243, !3245, !3246, !3299, !3144}
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !220, line: 133, baseType: !221)
!220 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !220, line: 58, size: 11008, elements: !222)
!222 = !{!223, !295, !365, !376, !380, !384, !388, !395, !404, !500, !506, !513, !521, !532, !545, !558, !569, !578, !590, !598, !600, !603, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !221, file: !220, line: 59, baseType: !224, size: 960)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !225, line: 130, baseType: !226)
!225 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !225, line: 117, size: 960, elements: !227)
!227 = !{!228, !230, !231, !233, !253, !257, !259, !261, !262, !263}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !226, file: !225, line: 118, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !226, file: !225, line: 118, baseType: !229, size: 64, offset: 64)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !226, file: !225, line: 119, baseType: !232, size: 64, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !226, file: !225, line: 120, baseType: !234, size: 64, offset: 192)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !225, line: 136, size: 17600, elements: !236)
!236 = !{!237, !238, !240, !243, !248, !249, !250}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !235, file: !225, line: 137, baseType: !224, size: 960)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !235, file: !225, line: 138, baseType: !239, size: 64, offset: 960)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !235, file: !225, line: 139, baseType: !241, size: 64, offset: 1024)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64)
!242 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !225, line: 43, flags: DIFlagFwdDecl)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !235, file: !225, line: 140, baseType: !244, size: 8192, offset: 1088)
!244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 8192, elements: !246)
!245 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!246 = !{!247}
!247 = !DISubrange(count: 1024)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !235, file: !225, line: 141, baseType: !244, size: 8192, offset: 9280)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !235, file: !225, line: 148, baseType: !234, size: 64, offset: 17472)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !235, file: !225, line: 150, baseType: !251, size: 64, offset: 17536)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!252 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !225, line: 45, flags: DIFlagFwdDecl)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !226, file: !225, line: 121, baseType: !254, size: 528, offset: 256)
!254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 528, elements: !255)
!255 = !{!256}
!256 = !DISubrange(count: 66)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !226, file: !225, line: 126, baseType: !258, size: 16, offset: 784)
!258 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !226, file: !225, line: 127, baseType: !260, size: 32, offset: 800)
!260 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !226, file: !225, line: 128, baseType: !260, size: 32, offset: 832)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !226, file: !225, line: 128, baseType: !260, size: 32, offset: 864)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !226, file: !225, line: 129, baseType: !264, size: 64, offset: 896)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !225, line: 75, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !225, line: 62, size: 1024, elements: !267)
!267 = !{!268, !270, !271, !272, !273, !274, !278, !279, !293, !294}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !266, file: !225, line: 63, baseType: !269, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !266, file: !225, line: 63, baseType: !269, size: 64, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !266, file: !225, line: 64, baseType: !245, size: 8, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !266, file: !225, line: 64, baseType: !245, size: 8, offset: 136)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !266, file: !225, line: 65, baseType: !258, size: 16, offset: 144)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !266, file: !225, line: 66, baseType: !275, size: 512, offset: 160)
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 512, elements: !276)
!276 = !{!277}
!277 = !DISubrange(count: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !266, file: !225, line: 67, baseType: !260, size: 32, offset: 672)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !266, file: !225, line: 69, baseType: !280, size: 256, offset: 704)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !225, line: 60, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !225, line: 48, size: 256, elements: !282)
!282 = !{!283, !284, !291, !292}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !281, file: !225, line: 49, baseType: !229, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !281, file: !225, line: 58, baseType: !285, size: 128, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !286, line: 71, baseType: !287)
!286 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !286, line: 69, size: 128, elements: !288)
!288 = !{!289, !290}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !287, file: !286, line: 70, baseType: !229, size: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !287, file: !286, line: 70, baseType: !229, size: 64, offset: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !281, file: !225, line: 59, baseType: !260, size: 32, offset: 192)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !281, file: !225, line: 59, baseType: !260, size: 32, offset: 224)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !266, file: !225, line: 70, baseType: !260, size: 32, offset: 960)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !266, file: !225, line: 74, baseType: !260, size: 32, offset: 992)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !221, file: !220, line: 60, baseType: !296, size: 64, offset: 960)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !102, line: 838, size: 768, elements: !298)
!298 = !{!299, !314, !315, !325, !326, !358, !359, !360, !361, !362, !363, !364}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !297, file: !102, line: 840, baseType: !300, size: 64)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !302, line: 499, baseType: !303)
!302 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !302, line: 486, size: 1600, elements: !304)
!304 = !{!305, !306, !307, !308, !309, !310, !311, !312, !313}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !303, file: !302, line: 487, baseType: !224, size: 960)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !303, file: !302, line: 489, baseType: !285, size: 128, offset: 960)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !303, file: !302, line: 490, baseType: !285, size: 128, offset: 1088)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !303, file: !302, line: 491, baseType: !285, size: 128, offset: 1216)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !303, file: !302, line: 492, baseType: !285, size: 128, offset: 1344)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !303, file: !302, line: 494, baseType: !260, size: 32, offset: 1472)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !303, file: !302, line: 495, baseType: !260, size: 32, offset: 1504)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !303, file: !302, line: 497, baseType: !260, size: 32, offset: 1536)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !303, file: !302, line: 498, baseType: !260, size: 32, offset: 1568)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !297, file: !102, line: 844, baseType: !300, size: 64, offset: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !297, file: !102, line: 848, baseType: !316, size: 64, offset: 128)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !102, line: 549, baseType: !318)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !102, line: 544, size: 320, elements: !319)
!319 = !{!320, !322, !323, !324}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !318, file: !102, line: 545, baseType: !321, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !318, file: !102, line: 545, baseType: !321, size: 64, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !318, file: !102, line: 547, baseType: !300, size: 64, offset: 128)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !318, file: !102, line: 548, baseType: !285, size: 128, offset: 192)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !297, file: !102, line: 851, baseType: !285, size: 128, offset: 192)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !297, file: !102, line: 853, baseType: !327, size: 64, offset: 320)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !102, line: 594, baseType: !329)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !102, line: 561, size: 1664, elements: !330)
!330 = !{!331, !333, !334, !335, !336, !337, !338, !339, !340, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !329, file: !102, line: 562, baseType: !332, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !329, file: !102, line: 562, baseType: !332, size: 64, offset: 64)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !329, file: !102, line: 564, baseType: !285, size: 128, offset: 128)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !329, file: !102, line: 565, baseType: !300, size: 64, offset: 256)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !329, file: !102, line: 566, baseType: !316, size: 64, offset: 320)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !329, file: !102, line: 568, baseType: !285, size: 128, offset: 384)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !329, file: !102, line: 569, baseType: !285, size: 128, offset: 512)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !329, file: !102, line: 571, baseType: !275, size: 512, offset: 640)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !329, file: !102, line: 573, baseType: !341, size: 32, offset: 1152)
!341 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !329, file: !102, line: 574, baseType: !341, size: 32, offset: 1184)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !329, file: !102, line: 576, baseType: !341, size: 32, offset: 1216)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !329, file: !102, line: 576, baseType: !341, size: 32, offset: 1248)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !329, file: !102, line: 577, baseType: !341, size: 32, offset: 1280)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !329, file: !102, line: 577, baseType: !341, size: 32, offset: 1312)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !329, file: !102, line: 579, baseType: !341, size: 32, offset: 1344)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !329, file: !102, line: 580, baseType: !341, size: 32, offset: 1376)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !329, file: !102, line: 582, baseType: !341, size: 32, offset: 1408)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !329, file: !102, line: 582, baseType: !341, size: 32, offset: 1440)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !329, file: !102, line: 583, baseType: !258, size: 16, offset: 1472)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !329, file: !102, line: 585, baseType: !258, size: 16, offset: 1488)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !329, file: !102, line: 586, baseType: !258, size: 16, offset: 1504)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !329, file: !102, line: 588, baseType: !258, size: 16, offset: 1520)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !329, file: !102, line: 590, baseType: !229, size: 64, offset: 1536)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !329, file: !102, line: 592, baseType: !260, size: 32, offset: 1600)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !329, file: !102, line: 593, baseType: !260, size: 32, offset: 1632)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !297, file: !102, line: 858, baseType: !285, size: 128, offset: 384)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !297, file: !102, line: 859, baseType: !285, size: 128, offset: 512)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !297, file: !102, line: 862, baseType: !260, size: 32, offset: 640)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !297, file: !102, line: 863, baseType: !260, size: 32, offset: 672)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !297, file: !102, line: 866, baseType: !258, size: 16, offset: 704)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !297, file: !102, line: 867, baseType: !258, size: 16, offset: 720)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !297, file: !102, line: 868, baseType: !341, size: 32, offset: 736)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !221, file: !220, line: 62, baseType: !366, size: 64, offset: 1024)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !78, line: 97, size: 832, elements: !368)
!368 = !{!369, !374, !375}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !367, file: !78, line: 98, baseType: !370, size: 768)
!370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 768, elements: !371)
!371 = !{!372, !373}
!372 = !DISubrange(count: 8)
!373 = !DISubrange(count: 3)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !367, file: !78, line: 99, baseType: !260, size: 32, offset: 768)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !367, file: !78, line: 99, baseType: !260, size: 32, offset: 800)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !221, file: !220, line: 64, baseType: !377, size: 64, offset: 1088)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !379, line: 46, flags: DIFlagFwdDecl)
!379 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!380 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !221, file: !220, line: 65, baseType: !381, size: 64, offset: 1152)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !383, line: 45, flags: DIFlagFwdDecl)
!383 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!384 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !221, file: !220, line: 66, baseType: !385, size: 64, offset: 1216)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !383, line: 46, flags: DIFlagFwdDecl)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !221, file: !220, line: 67, baseType: !389, size: 64, offset: 1280)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !391, line: 154, size: 64, elements: !392)
!391 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!392 = !{!393, !394}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !390, file: !391, line: 155, baseType: !260, size: 32)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !390, file: !391, line: 156, baseType: !260, size: 32, offset: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !221, file: !220, line: 71, baseType: !396, size: 64, offset: 1344)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !391, line: 79, size: 96, elements: !398)
!398 = !{!399, !400, !401, !402, !403}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !397, file: !391, line: 81, baseType: !260, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !397, file: !391, line: 82, baseType: !260, size: 32, offset: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !397, file: !391, line: 83, baseType: !258, size: 16, offset: 64)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !397, file: !391, line: 84, baseType: !245, size: 8, offset: 80)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !397, file: !391, line: 84, baseType: !245, size: 8, offset: 88)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !221, file: !220, line: 72, baseType: !405, size: 64, offset: 1408)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !391, line: 93, size: 128, elements: !407)
!407 = !{!408, !495, !496, !497, !498, !499}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !406, file: !391, line: 94, baseType: !409, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !411, line: 77, size: 15424, elements: !412)
!411 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!412 = !{!413, !414, !415, !418, !421, !424, !427, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !446, !447, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !476, !477, !478, !484, !485, !489}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !410, file: !411, line: 78, baseType: !224, size: 960)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !411, line: 80, baseType: !244, size: 8192, offset: 960)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !410, file: !411, line: 82, baseType: !416, size: 64, offset: 9152)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !411, line: 43, flags: DIFlagFwdDecl)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !410, file: !411, line: 83, baseType: !419, size: 64, offset: 9216)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !225, line: 46, flags: DIFlagFwdDecl)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !410, file: !411, line: 86, baseType: !422, size: 64, offset: 9280)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !411, line: 41, flags: DIFlagFwdDecl)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !410, file: !411, line: 87, baseType: !425, size: 64, offset: 9344)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !411, line: 44, flags: DIFlagFwdDecl)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !410, file: !411, line: 89, baseType: !428, size: 512, offset: 9408)
!428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !425, size: 512, elements: !429)
!429 = !{!372}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !410, file: !411, line: 90, baseType: !258, size: 16, offset: 9920)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !410, file: !411, line: 90, baseType: !258, size: 16, offset: 9936)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !410, file: !411, line: 92, baseType: !258, size: 16, offset: 9952)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !410, file: !411, line: 92, baseType: !258, size: 16, offset: 9968)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !410, file: !411, line: 93, baseType: !258, size: 16, offset: 9984)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !410, file: !411, line: 93, baseType: !258, size: 16, offset: 10000)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !410, file: !411, line: 94, baseType: !260, size: 32, offset: 10016)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !410, file: !411, line: 97, baseType: !258, size: 16, offset: 10048)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !410, file: !411, line: 97, baseType: !258, size: 16, offset: 10064)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !410, file: !411, line: 98, baseType: !258, size: 16, offset: 10080)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !410, file: !411, line: 98, baseType: !258, size: 16, offset: 10096)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !410, file: !411, line: 99, baseType: !258, size: 16, offset: 10112)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !410, file: !411, line: 99, baseType: !258, size: 16, offset: 10128)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !410, file: !411, line: 100, baseType: !7, size: 32, offset: 10144)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !410, file: !411, line: 101, baseType: !445, size: 64, offset: 10176)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !410, file: !411, line: 103, baseType: !251, size: 64, offset: 10240)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !410, file: !411, line: 104, baseType: !448, size: 64, offset: 10304)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !225, line: 159, size: 448, elements: !450)
!450 = !{!451, !455, !456, !458, !459, !461}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !449, file: !225, line: 161, baseType: !452, size: 64)
!452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !453)
!453 = !{!454}
!454 = !DISubrange(count: 2)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !449, file: !225, line: 162, baseType: !452, size: 64, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !449, file: !225, line: 163, baseType: !457, size: 32, offset: 128)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 32, elements: !453)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !449, file: !225, line: 164, baseType: !457, size: 32, offset: 160)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !449, file: !225, line: 165, baseType: !460, size: 128, offset: 192)
!460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !445, size: 128, elements: !453)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !449, file: !225, line: 166, baseType: !462, size: 128, offset: 320)
!462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 128, elements: !453)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !410, file: !411, line: 107, baseType: !341, size: 32, offset: 10368)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !410, file: !411, line: 108, baseType: !260, size: 32, offset: 10400)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !410, file: !411, line: 109, baseType: !258, size: 16, offset: 10432)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !410, file: !411, line: 110, baseType: !258, size: 16, offset: 10448)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !410, file: !411, line: 113, baseType: !260, size: 32, offset: 10464)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !410, file: !411, line: 113, baseType: !260, size: 32, offset: 10496)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !410, file: !411, line: 114, baseType: !245, size: 8, offset: 10528)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !410, file: !411, line: 114, baseType: !245, size: 8, offset: 10536)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !410, file: !411, line: 115, baseType: !258, size: 16, offset: 10544)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !410, file: !411, line: 116, baseType: !473, size: 128, offset: 10560)
!473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 128, elements: !474)
!474 = !{!475}
!475 = !DISubrange(count: 4)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !410, file: !411, line: 119, baseType: !341, size: 32, offset: 10688)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !410, file: !411, line: 119, baseType: !341, size: 32, offset: 10720)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !410, file: !411, line: 122, baseType: !479, size: 512, offset: 10752)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !480, line: 182, baseType: !481)
!480 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !480, line: 180, size: 512, elements: !482)
!482 = !{!483}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !481, file: !480, line: 181, baseType: !275, size: 512)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !410, file: !411, line: 123, baseType: !245, size: 8, offset: 11264)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !410, file: !411, line: 125, baseType: !486, size: 56, offset: 11272)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 56, elements: !487)
!487 = !{!488}
!488 = !DISubrange(count: 7)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !410, file: !411, line: 126, baseType: !490, size: 4096, offset: 11328)
!490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !491, size: 4096, elements: !429)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !411, line: 69, baseType: !492)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !411, line: 67, size: 512, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !492, file: !411, line: 68, baseType: !275, size: 512)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !406, file: !391, line: 95, baseType: !245, size: 8, offset: 64)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !406, file: !391, line: 95, baseType: !245, size: 8, offset: 72)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !406, file: !391, line: 96, baseType: !258, size: 16, offset: 80)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !406, file: !391, line: 96, baseType: !258, size: 16, offset: 96)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !406, file: !391, line: 96, baseType: !258, size: 16, offset: 112)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !221, file: !220, line: 73, baseType: !501, size: 64, offset: 1472)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !391, line: 88, size: 64, elements: !503)
!503 = !{!504, !505}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !502, file: !391, line: 89, baseType: !7, size: 32)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !502, file: !391, line: 90, baseType: !7, size: 32, offset: 32)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !221, file: !220, line: 74, baseType: !507, size: 64, offset: 1536)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !391, line: 109, size: 96, elements: !509)
!509 = !{!510, !512}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !508, file: !391, line: 110, baseType: !511, size: 64)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 64, elements: !453)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !508, file: !391, line: 111, baseType: !260, size: 32, offset: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !221, file: !220, line: 75, baseType: !514, size: 64, offset: 1600)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !391, line: 129, size: 32, elements: !516)
!516 = !{!517, !518, !519, !520}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !515, file: !391, line: 130, baseType: !245, size: 8)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !515, file: !391, line: 130, baseType: !245, size: 8, offset: 8)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !515, file: !391, line: 130, baseType: !245, size: 8, offset: 16)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !515, file: !391, line: 130, baseType: !245, size: 8, offset: 24)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !221, file: !220, line: 80, baseType: !522, size: 64, offset: 1664)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !391, line: 42, size: 160, elements: !524)
!524 = !{!525, !526, !527, !528, !529, !530, !531}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !523, file: !391, line: 43, baseType: !7, size: 32)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !523, file: !391, line: 43, baseType: !7, size: 32, offset: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !523, file: !391, line: 43, baseType: !7, size: 32, offset: 64)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !523, file: !391, line: 43, baseType: !7, size: 32, offset: 96)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !523, file: !391, line: 44, baseType: !258, size: 16, offset: 128)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !523, file: !391, line: 45, baseType: !245, size: 8, offset: 144)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !523, file: !391, line: 45, baseType: !245, size: 8, offset: 152)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !221, file: !220, line: 81, baseType: !533, size: 64, offset: 1728)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !391, line: 160, size: 384, elements: !535)
!535 = !{!536, !539, !540, !541, !542, !543, !544}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !534, file: !391, line: 161, baseType: !537, size: 256)
!537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 256, elements: !538)
!538 = !{!475, !454}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !534, file: !391, line: 162, baseType: !409, size: 64, offset: 256)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !534, file: !391, line: 163, baseType: !245, size: 8, offset: 320)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !534, file: !391, line: 163, baseType: !245, size: 8, offset: 328)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !534, file: !391, line: 164, baseType: !258, size: 16, offset: 336)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !534, file: !391, line: 164, baseType: !258, size: 16, offset: 352)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !534, file: !391, line: 164, baseType: !258, size: 16, offset: 368)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !221, file: !220, line: 82, baseType: !546, size: 64, offset: 1792)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !220, line: 136, size: 512, elements: !548)
!548 = !{!549, !550, !551, !553, !554, !555, !556, !557}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !547, file: !220, line: 137, baseType: !229, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !547, file: !220, line: 138, baseType: !537, size: 256, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !547, file: !220, line: 139, baseType: !552, size: 128, offset: 320)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !474)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !547, file: !220, line: 140, baseType: !245, size: 8, offset: 448)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !547, file: !220, line: 140, baseType: !245, size: 8, offset: 456)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !547, file: !220, line: 141, baseType: !258, size: 16, offset: 464)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !547, file: !220, line: 141, baseType: !258, size: 16, offset: 480)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !547, file: !220, line: 141, baseType: !258, size: 16, offset: 496)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !221, file: !220, line: 83, baseType: !559, size: 64, offset: 1856)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !391, line: 65, size: 160, elements: !561)
!561 = !{!562, !565, !567, !568}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !560, file: !391, line: 66, baseType: !563, size: 96)
!563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 96, elements: !564)
!564 = !{!373}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !560, file: !391, line: 67, baseType: !566, size: 48, offset: 96)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 48, elements: !564)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !560, file: !391, line: 68, baseType: !245, size: 8, offset: 144)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !560, file: !391, line: 68, baseType: !245, size: 8, offset: 152)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !221, file: !220, line: 84, baseType: !570, size: 64, offset: 1920)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !391, line: 48, size: 96, elements: !572)
!572 = !{!573, !574, !575, !576, !577}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !571, file: !391, line: 49, baseType: !7, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !571, file: !391, line: 49, baseType: !7, size: 32, offset: 32)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !571, file: !391, line: 50, baseType: !245, size: 8, offset: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !571, file: !391, line: 50, baseType: !245, size: 8, offset: 72)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !571, file: !391, line: 51, baseType: !258, size: 16, offset: 80)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !221, file: !220, line: 85, baseType: !579, size: 64, offset: 1984)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !391, line: 59, size: 128, elements: !581)
!581 = !{!582, !588, !589}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !580, file: !391, line: 60, baseType: !583, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !391, line: 54, size: 64, elements: !585)
!585 = !{!586, !587}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !584, file: !391, line: 55, baseType: !260, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !584, file: !391, line: 56, baseType: !341, size: 32, offset: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !580, file: !391, line: 61, baseType: !260, size: 32, offset: 64)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !580, file: !391, line: 62, baseType: !260, size: 32, offset: 96)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !221, file: !220, line: 89, baseType: !591, size: 64, offset: 2048)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !391, line: 74, size: 32, elements: !593)
!593 = !{!594, !595, !596, !597}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !592, file: !391, line: 75, baseType: !245, size: 8)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !592, file: !391, line: 75, baseType: !245, size: 8, offset: 8)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !592, file: !391, line: 75, baseType: !245, size: 8, offset: 16)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !592, file: !391, line: 75, baseType: !245, size: 8, offset: 24)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !221, file: !220, line: 90, baseType: !599, size: 64, offset: 2112)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !221, file: !220, line: 93, baseType: !601, size: 64, offset: 2176)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !220, line: 93, flags: DIFlagFwdDecl)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !221, file: !220, line: 95, baseType: !604, size: 1600, offset: 2240)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !34, line: 64, size: 1600, elements: !605)
!605 = !{!606, !621, !625, !626, !627, !628, !631}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !604, file: !34, line: 65, baseType: !607, size: 64)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !34, line: 53, baseType: !609)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !34, line: 42, size: 832, elements: !610)
!610 = !{!611, !612, !613, !614, !615, !616, !617, !618, !619, !620}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !609, file: !34, line: 43, baseType: !260, size: 32)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !609, file: !34, line: 44, baseType: !260, size: 32, offset: 32)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !609, file: !34, line: 45, baseType: !260, size: 32, offset: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !609, file: !34, line: 46, baseType: !260, size: 32, offset: 96)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !609, file: !34, line: 47, baseType: !260, size: 32, offset: 128)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !609, file: !34, line: 48, baseType: !260, size: 32, offset: 160)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !609, file: !34, line: 49, baseType: !260, size: 32, offset: 192)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !609, file: !34, line: 50, baseType: !260, size: 32, offset: 224)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !609, file: !34, line: 51, baseType: !275, size: 512, offset: 256)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !609, file: !34, line: 52, baseType: !229, size: 64, offset: 768)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !604, file: !34, line: 66, baseType: !622, size: 1312, offset: 64)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !260, size: 1312, elements: !623)
!623 = !{!624}
!624 = !DISubrange(count: 41)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !604, file: !34, line: 69, baseType: !260, size: 32, offset: 1376)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !604, file: !34, line: 69, baseType: !260, size: 32, offset: 1408)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !604, file: !34, line: 70, baseType: !260, size: 32, offset: 1440)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !604, file: !34, line: 71, baseType: !629, size: 64, offset: 1472)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !34, line: 71, flags: DIFlagFwdDecl)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !604, file: !34, line: 72, baseType: !632, size: 64, offset: 1536)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !34, line: 59, baseType: !634)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !34, line: 57, size: 8192, elements: !635)
!635 = !{!636}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !634, file: !34, line: 58, baseType: !244, size: 8192)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !221, file: !220, line: 95, baseType: !604, size: 1600, offset: 3840)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !221, file: !220, line: 95, baseType: !604, size: 1600, offset: 5440)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !221, file: !220, line: 98, baseType: !604, size: 1600, offset: 7040)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !221, file: !220, line: 98, baseType: !604, size: 1600, offset: 8640)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !221, file: !220, line: 101, baseType: !260, size: 32, offset: 10240)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !221, file: !220, line: 101, baseType: !260, size: 32, offset: 10272)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !221, file: !220, line: 101, baseType: !260, size: 32, offset: 10304)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !221, file: !220, line: 101, baseType: !260, size: 32, offset: 10336)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !221, file: !220, line: 104, baseType: !260, size: 32, offset: 10368)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !221, file: !220, line: 104, baseType: !260, size: 32, offset: 10400)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !221, file: !220, line: 111, baseType: !260, size: 32, offset: 10432)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !221, file: !220, line: 114, baseType: !563, size: 96, offset: 10464)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !221, file: !220, line: 115, baseType: !563, size: 96, offset: 10560)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !221, file: !220, line: 116, baseType: !563, size: 96, offset: 10656)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !221, file: !220, line: 118, baseType: !260, size: 32, offset: 10752)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !221, file: !220, line: 119, baseType: !258, size: 16, offset: 10784)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !221, file: !220, line: 119, baseType: !258, size: 16, offset: 10800)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !221, file: !220, line: 120, baseType: !341, size: 32, offset: 10816)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !221, file: !220, line: 121, baseType: !260, size: 32, offset: 10848)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !221, file: !220, line: 124, baseType: !245, size: 8, offset: 10880)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !221, file: !220, line: 124, baseType: !245, size: 8, offset: 10888)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !221, file: !220, line: 126, baseType: !245, size: 8, offset: 10896)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !221, file: !220, line: 126, baseType: !245, size: 8, offset: 10904)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !221, file: !220, line: 127, baseType: !245, size: 8, offset: 10912)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !221, file: !220, line: 128, baseType: !245, size: 8, offset: 10920)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !221, file: !220, line: 130, baseType: !258, size: 16, offset: 10928)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !221, file: !220, line: 132, baseType: !664, size: 64, offset: 10944)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !391, line: 233, size: 3584, elements: !666)
!666 = !{!667, !668, !671, !673, !674, !675, !676, !677, !678, !679, !680, !682, !683, !685}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !665, file: !391, line: 234, baseType: !285, size: 128)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !665, file: !391, line: 235, baseType: !669, size: 64, offset: 128)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !391, line: 69, baseType: !560)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !665, file: !391, line: 237, baseType: !672, size: 8, offset: 192)
!672 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !665, file: !391, line: 237, baseType: !672, size: 8, offset: 200)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !665, file: !391, line: 237, baseType: !672, size: 8, offset: 208)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !665, file: !391, line: 237, baseType: !672, size: 8, offset: 216)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !665, file: !391, line: 237, baseType: !672, size: 8, offset: 224)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !665, file: !391, line: 237, baseType: !672, size: 8, offset: 232)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !665, file: !391, line: 238, baseType: !672, size: 8, offset: 240)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !665, file: !391, line: 238, baseType: !672, size: 8, offset: 248)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !665, file: !391, line: 241, baseType: !681, size: 1600, offset: 256)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !34, line: 73, baseType: !604)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !665, file: !391, line: 242, baseType: !681, size: 1600, offset: 1856)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !665, file: !391, line: 243, baseType: !684, size: 64, offset: 3456)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !665, file: !391, line: 244, baseType: !686, size: 64, offset: 3520)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !688, line: 87, baseType: !689)
!688 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!689 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidState", file: !87, line: 165, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidState", file: !87, line: 150, size: 1024, elements: !693)
!693 = !{!694, !696, !697, !698, !699, !700, !704, !705, !706, !707, !708, !709, !710, !711}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !692, file: !87, line: 151, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !692, file: !87, line: 151, baseType: !695, size: 64, offset: 64)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "rules", scope: !692, file: !87, line: 152, baseType: !285, size: 128, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "conditions", scope: !692, file: !87, line: 153, baseType: !285, size: 128, offset: 256)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "actions", scope: !692, file: !87, line: 154, baseType: !285, size: 128, offset: 384)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !692, file: !87, line: 155, baseType: !701, size: 256, offset: 512)
!701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 256, elements: !702)
!702 = !{!703}
!703 = !DISubrange(count: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !692, file: !87, line: 156, baseType: !260, size: 32, offset: 768)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !692, file: !87, line: 156, baseType: !260, size: 32, offset: 800)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "ruleset_type", scope: !692, file: !87, line: 159, baseType: !260, size: 32, offset: 832)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "rule_fuzziness", scope: !692, file: !87, line: 160, baseType: !341, size: 32, offset: 864)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "signal_id", scope: !692, file: !87, line: 163, baseType: !260, size: 32, offset: 896)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !692, file: !87, line: 163, baseType: !260, size: 32, offset: 928)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !692, file: !87, line: 164, baseType: !341, size: 32, offset: 960)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !692, file: !87, line: 164, baseType: !341, size: 32, offset: 992)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleCollision", file: !714, line: 235, baseType: !715)
!714 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_particle.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCollision", file: !714, line: 203, size: 2624, elements: !716)
!716 = !{!717, !3081, !3082, !3083, !3084, !3085, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !715, file: !714, line: 204, baseType: !718, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !78, line: 115, size: 11392, elements: !720)
!720 = !{!721, !722, !723, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !741, !742, !783, !784, !787, !788, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !920, !921, !922, !923, !924, !925, !926, !927, !928, !1844, !3038, !3039, !3040, !3041, !3042, !3043, !3046, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3059, !3062, !3065, !3066, !3069, !3070}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !719, file: !78, line: 116, baseType: !224, size: 960)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !719, file: !78, line: 117, baseType: !296, size: 64, offset: 960)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !719, file: !78, line: 119, baseType: !724, size: 64, offset: 1024)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !78, line: 57, flags: DIFlagFwdDecl)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !719, file: !78, line: 121, baseType: !258, size: 16, offset: 1088)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !719, file: !78, line: 121, baseType: !258, size: 16, offset: 1104)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !719, file: !78, line: 122, baseType: !260, size: 32, offset: 1120)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !719, file: !78, line: 122, baseType: !260, size: 32, offset: 1152)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !719, file: !78, line: 122, baseType: !260, size: 32, offset: 1184)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !719, file: !78, line: 123, baseType: !275, size: 512, offset: 1216)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !719, file: !78, line: 124, baseType: !718, size: 64, offset: 1728)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !719, file: !78, line: 124, baseType: !718, size: 64, offset: 1792)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !719, file: !78, line: 127, baseType: !718, size: 64, offset: 1856)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !719, file: !78, line: 127, baseType: !718, size: 64, offset: 1920)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !719, file: !78, line: 127, baseType: !718, size: 64, offset: 1984)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !719, file: !78, line: 128, baseType: !377, size: 64, offset: 2048)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !719, file: !78, line: 130, baseType: !366, size: 64, offset: 2112)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !719, file: !78, line: 131, baseType: !740, size: 64, offset: 2176)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !719, file: !78, line: 132, baseType: !740, size: 64, offset: 2240)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !719, file: !78, line: 133, baseType: !743, size: 64, offset: 2304)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !302, line: 334, size: 1728, elements: !745)
!745 = !{!746, !747, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !782}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !744, file: !302, line: 335, baseType: !285, size: 128)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !744, file: !302, line: 336, baseType: !748, size: 64, offset: 128)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !302, line: 47, flags: DIFlagFwdDecl)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !744, file: !302, line: 338, baseType: !258, size: 16, offset: 192)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !744, file: !302, line: 338, baseType: !258, size: 16, offset: 208)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !744, file: !302, line: 339, baseType: !7, size: 32, offset: 224)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !744, file: !302, line: 340, baseType: !260, size: 32, offset: 256)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !744, file: !302, line: 342, baseType: !341, size: 32, offset: 288)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !744, file: !302, line: 343, baseType: !563, size: 96, offset: 320)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !744, file: !302, line: 344, baseType: !563, size: 96, offset: 416)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !744, file: !302, line: 347, baseType: !285, size: 128, offset: 512)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !744, file: !302, line: 349, baseType: !260, size: 32, offset: 640)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !744, file: !302, line: 350, baseType: !260, size: 32, offset: 672)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !744, file: !302, line: 351, baseType: !229, size: 64, offset: 704)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !744, file: !302, line: 352, baseType: !229, size: 64, offset: 768)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !744, file: !302, line: 354, baseType: !763, size: 384, offset: 832)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !302, line: 116, baseType: !764)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !302, line: 94, size: 384, elements: !765)
!765 = !{!766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !764, file: !302, line: 96, baseType: !260, size: 32)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !764, file: !302, line: 96, baseType: !260, size: 32, offset: 32)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !764, file: !302, line: 97, baseType: !260, size: 32, offset: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !764, file: !302, line: 97, baseType: !260, size: 32, offset: 96)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !764, file: !302, line: 99, baseType: !258, size: 16, offset: 128)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !764, file: !302, line: 100, baseType: !258, size: 16, offset: 144)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !764, file: !302, line: 102, baseType: !258, size: 16, offset: 160)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !764, file: !302, line: 105, baseType: !258, size: 16, offset: 176)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !764, file: !302, line: 108, baseType: !258, size: 16, offset: 192)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !764, file: !302, line: 109, baseType: !258, size: 16, offset: 208)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !764, file: !302, line: 111, baseType: !258, size: 16, offset: 224)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !764, file: !302, line: 112, baseType: !258, size: 16, offset: 240)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !764, file: !302, line: 114, baseType: !260, size: 32, offset: 256)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !764, file: !302, line: 114, baseType: !260, size: 32, offset: 288)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !764, file: !302, line: 115, baseType: !260, size: 32, offset: 320)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !764, file: !302, line: 115, baseType: !260, size: 32, offset: 352)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !744, file: !302, line: 355, baseType: !275, size: 512, offset: 1216)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !719, file: !78, line: 134, baseType: !229, size: 64, offset: 2368)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !719, file: !78, line: 136, baseType: !785, size: 64, offset: 2432)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !78, line: 58, flags: DIFlagFwdDecl)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !719, file: !78, line: 138, baseType: !763, size: 384, offset: 2496)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !719, file: !78, line: 139, baseType: !789, size: 64, offset: 2880)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !302, line: 80, baseType: !791)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !302, line: 72, size: 192, elements: !792)
!792 = !{!793, !800, !801, !802, !803}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !791, file: !302, line: 73, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !302, line: 59, baseType: !796)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !302, line: 56, size: 128, elements: !797)
!797 = !{!798, !799}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !796, file: !302, line: 57, baseType: !563, size: 96)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !796, file: !302, line: 58, baseType: !260, size: 32, offset: 96)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !791, file: !302, line: 74, baseType: !260, size: 32, offset: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !791, file: !302, line: 76, baseType: !260, size: 32, offset: 96)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !791, file: !302, line: 77, baseType: !260, size: 32, offset: 128)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !791, file: !302, line: 79, baseType: !260, size: 32, offset: 160)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !719, file: !78, line: 141, baseType: !285, size: 128, offset: 2944)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !719, file: !78, line: 142, baseType: !285, size: 128, offset: 3072)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !719, file: !78, line: 143, baseType: !285, size: 128, offset: 3200)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !719, file: !78, line: 144, baseType: !285, size: 128, offset: 3328)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !719, file: !78, line: 146, baseType: !260, size: 32, offset: 3456)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !719, file: !78, line: 147, baseType: !260, size: 32, offset: 3488)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !719, file: !78, line: 150, baseType: !385, size: 64, offset: 3520)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !719, file: !78, line: 151, baseType: !686, size: 64, offset: 3584)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !719, file: !78, line: 152, baseType: !260, size: 32, offset: 3648)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !719, file: !78, line: 153, baseType: !260, size: 32, offset: 3680)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !719, file: !78, line: 156, baseType: !563, size: 96, offset: 3712)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !719, file: !78, line: 156, baseType: !563, size: 96, offset: 3808)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !719, file: !78, line: 156, baseType: !563, size: 96, offset: 3904)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !719, file: !78, line: 157, baseType: !563, size: 96, offset: 4000)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !719, file: !78, line: 158, baseType: !563, size: 96, offset: 4096)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !719, file: !78, line: 159, baseType: !563, size: 96, offset: 4192)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !719, file: !78, line: 160, baseType: !563, size: 96, offset: 4288)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !719, file: !78, line: 160, baseType: !563, size: 96, offset: 4384)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !719, file: !78, line: 161, baseType: !473, size: 128, offset: 4480)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !719, file: !78, line: 161, baseType: !473, size: 128, offset: 4608)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !719, file: !78, line: 162, baseType: !563, size: 96, offset: 4736)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !719, file: !78, line: 162, baseType: !563, size: 96, offset: 4832)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !719, file: !78, line: 163, baseType: !341, size: 32, offset: 4928)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !719, file: !78, line: 163, baseType: !341, size: 32, offset: 4960)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !719, file: !78, line: 164, baseType: !829, size: 512, offset: 4992)
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 512, elements: !830)
!830 = !{!475, !475}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !719, file: !78, line: 165, baseType: !829, size: 512, offset: 5504)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !719, file: !78, line: 166, baseType: !829, size: 512, offset: 6016)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !719, file: !78, line: 167, baseType: !829, size: 512, offset: 6528)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !719, file: !78, line: 176, baseType: !829, size: 512, offset: 7040)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !719, file: !78, line: 178, baseType: !7, size: 32, offset: 7552)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !719, file: !78, line: 180, baseType: !258, size: 16, offset: 7584)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !719, file: !78, line: 181, baseType: !258, size: 16, offset: 7600)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !719, file: !78, line: 183, baseType: !258, size: 16, offset: 7616)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !719, file: !78, line: 183, baseType: !258, size: 16, offset: 7632)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !719, file: !78, line: 184, baseType: !258, size: 16, offset: 7648)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !719, file: !78, line: 184, baseType: !258, size: 16, offset: 7664)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !719, file: !78, line: 185, baseType: !258, size: 16, offset: 7680)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !719, file: !78, line: 186, baseType: !258, size: 16, offset: 7696)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !719, file: !78, line: 187, baseType: !258, size: 16, offset: 7712)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !719, file: !78, line: 188, baseType: !245, size: 8, offset: 7728)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !719, file: !78, line: 189, baseType: !245, size: 8, offset: 7736)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !719, file: !78, line: 192, baseType: !260, size: 32, offset: 7744)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !719, file: !78, line: 192, baseType: !260, size: 32, offset: 7776)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !719, file: !78, line: 192, baseType: !260, size: 32, offset: 7808)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !719, file: !78, line: 192, baseType: !260, size: 32, offset: 7840)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !719, file: !78, line: 194, baseType: !260, size: 32, offset: 7872)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !719, file: !78, line: 202, baseType: !341, size: 32, offset: 7904)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !719, file: !78, line: 202, baseType: !341, size: 32, offset: 7936)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !719, file: !78, line: 202, baseType: !341, size: 32, offset: 7968)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !719, file: !78, line: 211, baseType: !341, size: 32, offset: 8000)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !719, file: !78, line: 212, baseType: !341, size: 32, offset: 8032)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !719, file: !78, line: 213, baseType: !341, size: 32, offset: 8064)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !719, file: !78, line: 214, baseType: !341, size: 32, offset: 8096)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !719, file: !78, line: 215, baseType: !341, size: 32, offset: 8128)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !719, file: !78, line: 216, baseType: !341, size: 32, offset: 8160)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !719, file: !78, line: 219, baseType: !341, size: 32, offset: 8192)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !719, file: !78, line: 220, baseType: !341, size: 32, offset: 8224)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !719, file: !78, line: 221, baseType: !341, size: 32, offset: 8256)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !719, file: !78, line: 224, baseType: !865, size: 16, offset: 8288)
!865 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !719, file: !78, line: 224, baseType: !865, size: 16, offset: 8304)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !719, file: !78, line: 226, baseType: !258, size: 16, offset: 8320)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !719, file: !78, line: 228, baseType: !245, size: 8, offset: 8336)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !719, file: !78, line: 229, baseType: !245, size: 8, offset: 8344)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !719, file: !78, line: 231, baseType: !258, size: 16, offset: 8352)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !719, file: !78, line: 232, baseType: !245, size: 8, offset: 8368)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !719, file: !78, line: 233, baseType: !245, size: 8, offset: 8376)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !719, file: !78, line: 234, baseType: !341, size: 32, offset: 8384)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !719, file: !78, line: 235, baseType: !341, size: 32, offset: 8416)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !719, file: !78, line: 237, baseType: !285, size: 128, offset: 8448)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !719, file: !78, line: 238, baseType: !285, size: 128, offset: 8576)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !719, file: !78, line: 239, baseType: !285, size: 128, offset: 8704)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !719, file: !78, line: 240, baseType: !285, size: 128, offset: 8832)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !719, file: !78, line: 242, baseType: !341, size: 32, offset: 8960)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !719, file: !78, line: 244, baseType: !258, size: 16, offset: 8992)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !719, file: !78, line: 245, baseType: !865, size: 16, offset: 9008)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !719, file: !78, line: 246, baseType: !473, size: 128, offset: 9024)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !719, file: !78, line: 248, baseType: !260, size: 32, offset: 9152)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !719, file: !78, line: 249, baseType: !260, size: 32, offset: 9184)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !719, file: !78, line: 251, baseType: !886, size: 64, offset: 9216)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !888, line: 215, size: 960, elements: !889)
!888 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_force.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!889 = !{!890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !887, file: !888, line: 216, baseType: !260, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "linStiff", scope: !887, file: !888, line: 217, baseType: !341, size: 32, offset: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "angStiff", scope: !887, file: !888, line: 218, baseType: !341, size: 32, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !887, file: !888, line: 219, baseType: !341, size: 32, offset: 96)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "viterations", scope: !887, file: !888, line: 221, baseType: !260, size: 32, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "piterations", scope: !887, file: !888, line: 222, baseType: !260, size: 32, offset: 160)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "diterations", scope: !887, file: !888, line: 223, baseType: !260, size: 32, offset: 192)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "citerations", scope: !887, file: !888, line: 224, baseType: !260, size: 32, offset: 224)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "kSRHR_CL", scope: !887, file: !888, line: 226, baseType: !341, size: 32, offset: 256)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "kSKHR_CL", scope: !887, file: !888, line: 227, baseType: !341, size: 32, offset: 288)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "kSSHR_CL", scope: !887, file: !888, line: 228, baseType: !341, size: 32, offset: 320)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "kSR_SPLT_CL", scope: !887, file: !888, line: 229, baseType: !341, size: 32, offset: 352)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "kSK_SPLT_CL", scope: !887, file: !888, line: 231, baseType: !341, size: 32, offset: 384)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "kSS_SPLT_CL", scope: !887, file: !888, line: 232, baseType: !341, size: 32, offset: 416)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "kVCF", scope: !887, file: !888, line: 233, baseType: !341, size: 32, offset: 448)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "kDP", scope: !887, file: !888, line: 234, baseType: !341, size: 32, offset: 480)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "kDG", scope: !887, file: !888, line: 236, baseType: !341, size: 32, offset: 512)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "kLF", scope: !887, file: !888, line: 237, baseType: !341, size: 32, offset: 544)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "kPR", scope: !887, file: !888, line: 238, baseType: !341, size: 32, offset: 576)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "kVC", scope: !887, file: !888, line: 239, baseType: !341, size: 32, offset: 608)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "kDF", scope: !887, file: !888, line: 241, baseType: !341, size: 32, offset: 640)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "kMT", scope: !887, file: !888, line: 242, baseType: !341, size: 32, offset: 672)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "kCHR", scope: !887, file: !888, line: 243, baseType: !341, size: 32, offset: 704)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "kKHR", scope: !887, file: !888, line: 244, baseType: !341, size: 32, offset: 736)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "kSHR", scope: !887, file: !888, line: 246, baseType: !341, size: 32, offset: 768)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "kAHR", scope: !887, file: !888, line: 247, baseType: !341, size: 32, offset: 800)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "collisionflags", scope: !887, file: !888, line: 248, baseType: !260, size: 32, offset: 832)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "numclusteriterations", scope: !887, file: !888, line: 249, baseType: !260, size: 32, offset: 864)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "welding", scope: !887, file: !888, line: 250, baseType: !341, size: 32, offset: 896)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !887, file: !888, line: 251, baseType: !341, size: 32, offset: 928)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !719, file: !78, line: 253, baseType: !245, size: 8, offset: 9280)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !719, file: !78, line: 254, baseType: !245, size: 8, offset: 9288)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !719, file: !78, line: 255, baseType: !258, size: 16, offset: 9296)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !719, file: !78, line: 256, baseType: !563, size: 96, offset: 9312)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !719, file: !78, line: 258, baseType: !285, size: 128, offset: 9408)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !719, file: !78, line: 259, baseType: !285, size: 128, offset: 9536)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !719, file: !78, line: 260, baseType: !285, size: 128, offset: 9664)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !719, file: !78, line: 261, baseType: !285, size: 128, offset: 9792)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !719, file: !78, line: 263, baseType: !929, size: 64, offset: 9920)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !888, line: 61, size: 1280, elements: !931)
!931 = !{!932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !1838, !1841, !1842, !1843}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !930, file: !888, line: 62, baseType: !260, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "deflect", scope: !930, file: !888, line: 63, baseType: !258, size: 16, offset: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "forcefield", scope: !930, file: !888, line: 64, baseType: !258, size: 16, offset: 48)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !930, file: !888, line: 65, baseType: !258, size: 16, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !930, file: !888, line: 66, baseType: !258, size: 16, offset: 80)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mode", scope: !930, file: !888, line: 67, baseType: !258, size: 16, offset: 96)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !930, file: !888, line: 68, baseType: !258, size: 16, offset: 112)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !930, file: !888, line: 68, baseType: !258, size: 16, offset: 128)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "zdir", scope: !930, file: !888, line: 69, baseType: !258, size: 16, offset: 144)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "f_strength", scope: !930, file: !888, line: 72, baseType: !341, size: 32, offset: 160)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "f_damp", scope: !930, file: !888, line: 73, baseType: !341, size: 32, offset: 192)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "f_flow", scope: !930, file: !888, line: 74, baseType: !341, size: 32, offset: 224)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "f_size", scope: !930, file: !888, line: 77, baseType: !341, size: 32, offset: 256)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "f_power", scope: !930, file: !888, line: 80, baseType: !341, size: 32, offset: 288)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !930, file: !888, line: 81, baseType: !341, size: 32, offset: 320)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "mindist", scope: !930, file: !888, line: 82, baseType: !341, size: 32, offset: 352)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "f_power_r", scope: !930, file: !888, line: 83, baseType: !341, size: 32, offset: 384)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "maxrad", scope: !930, file: !888, line: 84, baseType: !341, size: 32, offset: 416)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "minrad", scope: !930, file: !888, line: 85, baseType: !341, size: 32, offset: 448)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_damp", scope: !930, file: !888, line: 88, baseType: !341, size: 32, offset: 480)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rdamp", scope: !930, file: !888, line: 89, baseType: !341, size: 32, offset: 512)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_perm", scope: !930, file: !888, line: 90, baseType: !341, size: 32, offset: 544)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_frict", scope: !930, file: !888, line: 91, baseType: !341, size: 32, offset: 576)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rfrict", scope: !930, file: !888, line: 92, baseType: !341, size: 32, offset: 608)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_stickness", scope: !930, file: !888, line: 93, baseType: !341, size: 32, offset: 640)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "absorption", scope: !930, file: !888, line: 95, baseType: !341, size: 32, offset: 672)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbdamp", scope: !930, file: !888, line: 98, baseType: !341, size: 32, offset: 704)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbift", scope: !930, file: !888, line: 99, baseType: !341, size: 32, offset: 736)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sboft", scope: !930, file: !888, line: 100, baseType: !341, size: 32, offset: 768)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "clump_fac", scope: !930, file: !888, line: 103, baseType: !341, size: 32, offset: 800)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "clump_pow", scope: !930, file: !888, line: 103, baseType: !341, size: 32, offset: 832)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !930, file: !888, line: 104, baseType: !341, size: 32, offset: 864)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !930, file: !888, line: 104, baseType: !341, size: 32, offset: 896)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !930, file: !888, line: 104, baseType: !341, size: 32, offset: 928)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "free_end", scope: !930, file: !888, line: 104, baseType: !341, size: 32, offset: 960)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "tex_nabla", scope: !930, file: !888, line: 107, baseType: !341, size: 32, offset: 992)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !930, file: !888, line: 108, baseType: !969, size: 64, offset: 1024)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !379, line: 202, size: 3328, elements: !971)
!971 = !{!972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1727, !1728, !1729, !1730, !1751, !1777, !1778, !1808, !1828, !1836, !1837}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !970, file: !379, line: 203, baseType: !224, size: 960)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !970, file: !379, line: 204, baseType: !296, size: 64, offset: 960)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !970, file: !379, line: 206, baseType: !341, size: 32, offset: 1024)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !970, file: !379, line: 206, baseType: !341, size: 32, offset: 1056)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !970, file: !379, line: 207, baseType: !341, size: 32, offset: 1088)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !970, file: !379, line: 207, baseType: !341, size: 32, offset: 1120)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !970, file: !379, line: 207, baseType: !341, size: 32, offset: 1152)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !970, file: !379, line: 207, baseType: !341, size: 32, offset: 1184)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !970, file: !379, line: 207, baseType: !341, size: 32, offset: 1216)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !970, file: !379, line: 207, baseType: !341, size: 32, offset: 1248)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !970, file: !379, line: 208, baseType: !341, size: 32, offset: 1280)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !970, file: !379, line: 208, baseType: !341, size: 32, offset: 1312)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !970, file: !379, line: 211, baseType: !341, size: 32, offset: 1344)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !970, file: !379, line: 211, baseType: !341, size: 32, offset: 1376)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !970, file: !379, line: 211, baseType: !341, size: 32, offset: 1408)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !970, file: !379, line: 211, baseType: !341, size: 32, offset: 1440)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !970, file: !379, line: 211, baseType: !341, size: 32, offset: 1472)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !970, file: !379, line: 214, baseType: !341, size: 32, offset: 1504)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !970, file: !379, line: 214, baseType: !341, size: 32, offset: 1536)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !970, file: !379, line: 217, baseType: !341, size: 32, offset: 1568)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !970, file: !379, line: 218, baseType: !341, size: 32, offset: 1600)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !970, file: !379, line: 219, baseType: !341, size: 32, offset: 1632)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !970, file: !379, line: 220, baseType: !341, size: 32, offset: 1664)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !970, file: !379, line: 221, baseType: !341, size: 32, offset: 1696)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !970, file: !379, line: 222, baseType: !258, size: 16, offset: 1728)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !970, file: !379, line: 222, baseType: !258, size: 16, offset: 1744)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !970, file: !379, line: 224, baseType: !258, size: 16, offset: 1760)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !970, file: !379, line: 224, baseType: !258, size: 16, offset: 1776)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !970, file: !379, line: 227, baseType: !258, size: 16, offset: 1792)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !970, file: !379, line: 227, baseType: !258, size: 16, offset: 1808)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !970, file: !379, line: 229, baseType: !258, size: 16, offset: 1824)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !970, file: !379, line: 229, baseType: !258, size: 16, offset: 1840)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !970, file: !379, line: 230, baseType: !258, size: 16, offset: 1856)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !970, file: !379, line: 230, baseType: !258, size: 16, offset: 1872)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !970, file: !379, line: 232, baseType: !341, size: 32, offset: 1888)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !970, file: !379, line: 232, baseType: !341, size: 32, offset: 1920)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !970, file: !379, line: 232, baseType: !341, size: 32, offset: 1952)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !970, file: !379, line: 232, baseType: !341, size: 32, offset: 1984)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !970, file: !379, line: 233, baseType: !260, size: 32, offset: 2016)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !970, file: !379, line: 234, baseType: !260, size: 32, offset: 2048)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !970, file: !379, line: 235, baseType: !258, size: 16, offset: 2080)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !970, file: !379, line: 235, baseType: !258, size: 16, offset: 2096)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !970, file: !379, line: 236, baseType: !258, size: 16, offset: 2112)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !970, file: !379, line: 239, baseType: !258, size: 16, offset: 2128)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !970, file: !379, line: 240, baseType: !260, size: 32, offset: 2144)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !970, file: !379, line: 241, baseType: !260, size: 32, offset: 2176)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !970, file: !379, line: 241, baseType: !260, size: 32, offset: 2208)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !970, file: !379, line: 241, baseType: !260, size: 32, offset: 2240)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !970, file: !379, line: 243, baseType: !341, size: 32, offset: 2272)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !970, file: !379, line: 243, baseType: !341, size: 32, offset: 2304)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !970, file: !379, line: 244, baseType: !341, size: 32, offset: 2336)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !970, file: !379, line: 246, baseType: !1024, size: 320, offset: 2368)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !411, line: 50, size: 320, elements: !1025)
!1025 = !{!1026, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1024, file: !411, line: 51, baseType: !1027, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1029, line: 1216, size: 39680, elements: !1030)
!1029 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1030 = !{!1031, !1032, !1033, !1034, !1037, !1038, !1039, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1065, !1068, !1071, !1284, !1287, !1583, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1605, !1606, !1607, !1608, !1609, !1617, !1683, !1690, !1691, !1698, !1701, !1707, !1708, !1709, !1710, !1711}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1028, file: !1029, line: 1217, baseType: !224, size: 960)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1028, file: !1029, line: 1218, baseType: !296, size: 64, offset: 960)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1028, file: !1029, line: 1220, baseType: !718, size: 64, offset: 1024)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1028, file: !1029, line: 1221, baseType: !1035, size: 64, offset: 1088)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1029, line: 52, flags: DIFlagFwdDecl)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1028, file: !1029, line: 1223, baseType: !1027, size: 64, offset: 1152)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1028, file: !1029, line: 1225, baseType: !285, size: 128, offset: 1216)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1028, file: !1029, line: 1226, baseType: !1040, size: 64, offset: 1344)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1029, line: 69, size: 320, elements: !1042)
!1042 = !{!1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1041, file: !1029, line: 70, baseType: !1040, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1041, file: !1029, line: 70, baseType: !1040, size: 64, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1041, file: !1029, line: 71, baseType: !7, size: 32, offset: 128)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1041, file: !1029, line: 71, baseType: !7, size: 32, offset: 160)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1041, file: !1029, line: 72, baseType: !260, size: 32, offset: 192)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1041, file: !1029, line: 73, baseType: !258, size: 16, offset: 224)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1041, file: !1029, line: 73, baseType: !258, size: 16, offset: 240)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1041, file: !1029, line: 74, baseType: !718, size: 64, offset: 256)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1028, file: !1029, line: 1227, baseType: !718, size: 64, offset: 1408)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1028, file: !1029, line: 1229, baseType: !563, size: 96, offset: 1472)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1028, file: !1029, line: 1230, baseType: !563, size: 96, offset: 1568)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1028, file: !1029, line: 1231, baseType: !563, size: 96, offset: 1664)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1028, file: !1029, line: 1231, baseType: !563, size: 96, offset: 1760)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1028, file: !1029, line: 1233, baseType: !7, size: 32, offset: 1856)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1028, file: !1029, line: 1234, baseType: !260, size: 32, offset: 1888)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1028, file: !1029, line: 1235, baseType: !7, size: 32, offset: 1920)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1028, file: !1029, line: 1237, baseType: !258, size: 16, offset: 1952)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1028, file: !1029, line: 1239, baseType: !245, size: 8, offset: 1968)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1028, file: !1029, line: 1240, baseType: !1062, size: 8, offset: 1976)
!1062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 8, elements: !1063)
!1063 = !{!1064}
!1064 = !DISubrange(count: 1)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1028, file: !1029, line: 1242, baseType: !1066, size: 64, offset: 1984)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !379, line: 248, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1028, file: !1029, line: 1244, baseType: !1069, size: 64, offset: 2048)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1029, line: 59, flags: DIFlagFwdDecl)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1028, file: !1029, line: 1246, baseType: !1072, size: 64, offset: 2112)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1029, line: 1067, size: 5184, elements: !1074)
!1074 = !{!1075, !1102, !1103, !1118, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1140, !1156, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1267}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1073, file: !1029, line: 1068, baseType: !1076, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1029, line: 934, baseType: !1078)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1029, line: 925, size: 576, elements: !1079)
!1079 = !{!1080, !1096, !1097, !1098, !1099, !1100, !1101}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1078, file: !1029, line: 926, baseType: !1081, size: 320)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1029, line: 830, baseType: !1082)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1029, line: 813, size: 320, elements: !1083)
!1083 = !{!1084, !1087, !1090, !1091, !1093, !1094, !1095}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1082, file: !1029, line: 814, baseType: !1085, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1029, line: 51, flags: DIFlagFwdDecl)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1082, file: !1029, line: 815, baseType: !1088, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1029, line: 815, flags: DIFlagFwdDecl)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1082, file: !1029, line: 818, baseType: !229, size: 64, offset: 128)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1082, file: !1029, line: 819, baseType: !1092, size: 32, offset: 192)
!1092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !672, size: 32, elements: !474)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1082, file: !1029, line: 822, baseType: !260, size: 32, offset: 224)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1082, file: !1029, line: 826, baseType: !260, size: 32, offset: 256)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1082, file: !1029, line: 829, baseType: !260, size: 32, offset: 288)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1078, file: !1029, line: 928, baseType: !258, size: 16, offset: 320)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1078, file: !1029, line: 928, baseType: !258, size: 16, offset: 336)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1078, file: !1029, line: 929, baseType: !260, size: 32, offset: 352)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1078, file: !1029, line: 930, baseType: !445, size: 64, offset: 384)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1078, file: !1029, line: 931, baseType: !579, size: 64, offset: 448)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1078, file: !1029, line: 933, baseType: !229, size: 64, offset: 512)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1073, file: !1029, line: 1069, baseType: !1076, size: 64, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1073, file: !1029, line: 1070, baseType: !1104, size: 64, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1029, line: 916, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1029, line: 891, size: 704, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1112, !1113, !1114, !1115, !1116, !1117}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1106, file: !1029, line: 892, baseType: !1081, size: 320)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1106, file: !1029, line: 896, baseType: !260, size: 32, offset: 320)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1106, file: !1029, line: 900, baseType: !1111, size: 96, offset: 352)
!1111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !260, size: 96, elements: !564)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1106, file: !1029, line: 903, baseType: !341, size: 32, offset: 448)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1106, file: !1029, line: 906, baseType: !260, size: 32, offset: 480)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1106, file: !1029, line: 909, baseType: !341, size: 32, offset: 512)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1106, file: !1029, line: 912, baseType: !341, size: 32, offset: 544)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1106, file: !1029, line: 914, baseType: !718, size: 64, offset: 576)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1106, file: !1029, line: 915, baseType: !229, size: 64, offset: 640)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1073, file: !1029, line: 1071, baseType: !1119, size: 64, offset: 192)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1029, line: 920, baseType: !1121)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1029, line: 918, size: 320, elements: !1122)
!1122 = !{!1123}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1121, file: !1029, line: 919, baseType: !1081, size: 320)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1073, file: !1029, line: 1075, baseType: !341, size: 32, offset: 256)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1073, file: !1029, line: 1077, baseType: !341, size: 32, offset: 288)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1073, file: !1029, line: 1078, baseType: !341, size: 32, offset: 320)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1073, file: !1029, line: 1079, baseType: !258, size: 16, offset: 352)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1073, file: !1029, line: 1082, baseType: !258, size: 16, offset: 368)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1073, file: !1029, line: 1085, baseType: !245, size: 8, offset: 384)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1073, file: !1029, line: 1086, baseType: !245, size: 8, offset: 392)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1073, file: !1029, line: 1087, baseType: !245, size: 8, offset: 400)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1073, file: !1029, line: 1088, baseType: !245, size: 8, offset: 408)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1073, file: !1029, line: 1090, baseType: !341, size: 32, offset: 416)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1073, file: !1029, line: 1093, baseType: !258, size: 16, offset: 448)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1073, file: !1029, line: 1096, baseType: !245, size: 8, offset: 464)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1073, file: !1029, line: 1098, baseType: !1137, size: 40, offset: 472)
!1137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 40, elements: !1138)
!1138 = !{!1139}
!1139 = !DISubrange(count: 5)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1073, file: !1029, line: 1101, baseType: !1141, size: 832, offset: 512)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1029, line: 836, size: 832, elements: !1142)
!1142 = !{!1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1141, file: !1029, line: 837, baseType: !1081, size: 320)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1141, file: !1029, line: 839, baseType: !258, size: 16, offset: 320)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1141, file: !1029, line: 839, baseType: !258, size: 16, offset: 336)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1141, file: !1029, line: 842, baseType: !258, size: 16, offset: 352)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1141, file: !1029, line: 842, baseType: !258, size: 16, offset: 368)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1141, file: !1029, line: 843, baseType: !457, size: 32, offset: 384)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1141, file: !1029, line: 845, baseType: !260, size: 32, offset: 416)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1141, file: !1029, line: 847, baseType: !229, size: 64, offset: 448)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1141, file: !1029, line: 848, baseType: !409, size: 64, offset: 512)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1141, file: !1029, line: 849, baseType: !409, size: 64, offset: 576)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1141, file: !1029, line: 850, baseType: !409, size: 64, offset: 640)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1141, file: !1029, line: 851, baseType: !563, size: 96, offset: 704)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1141, file: !1029, line: 852, baseType: !341, size: 32, offset: 800)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1073, file: !1029, line: 1104, baseType: !1157, size: 1344, offset: 1344)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1029, line: 867, size: 1344, elements: !1158)
!1158 = !{!1159, !1160, !1161, !1162, !1163, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1157, file: !1029, line: 868, baseType: !258, size: 16)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1157, file: !1029, line: 869, baseType: !258, size: 16, offset: 16)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1157, file: !1029, line: 870, baseType: !258, size: 16, offset: 32)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1157, file: !1029, line: 871, baseType: !258, size: 16, offset: 48)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1157, file: !1029, line: 873, baseType: !1164, size: 896, offset: 64)
!1164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1165, size: 896, elements: !487)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1029, line: 864, baseType: !1166)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1029, line: 859, size: 128, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1171, !1172, !1173}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1166, file: !1029, line: 860, baseType: !258, size: 16)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1166, file: !1029, line: 861, baseType: !258, size: 16, offset: 16)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1166, file: !1029, line: 861, baseType: !258, size: 16, offset: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1166, file: !1029, line: 861, baseType: !258, size: 16, offset: 48)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1166, file: !1029, line: 862, baseType: !260, size: 32, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1166, file: !1029, line: 863, baseType: !341, size: 32, offset: 96)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1157, file: !1029, line: 874, baseType: !229, size: 64, offset: 960)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1157, file: !1029, line: 876, baseType: !341, size: 32, offset: 1024)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1157, file: !1029, line: 876, baseType: !341, size: 32, offset: 1056)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1157, file: !1029, line: 878, baseType: !260, size: 32, offset: 1088)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1157, file: !1029, line: 879, baseType: !260, size: 32, offset: 1120)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1157, file: !1029, line: 881, baseType: !260, size: 32, offset: 1152)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1157, file: !1029, line: 881, baseType: !260, size: 32, offset: 1184)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1157, file: !1029, line: 883, baseType: !1027, size: 64, offset: 1216)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1157, file: !1029, line: 884, baseType: !718, size: 64, offset: 1280)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1073, file: !1029, line: 1107, baseType: !341, size: 32, offset: 2688)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1073, file: !1029, line: 1110, baseType: !341, size: 32, offset: 2720)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1073, file: !1029, line: 1113, baseType: !258, size: 16, offset: 2752)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1073, file: !1029, line: 1113, baseType: !258, size: 16, offset: 2768)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1073, file: !1029, line: 1116, baseType: !245, size: 8, offset: 2784)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1073, file: !1029, line: 1117, baseType: !1062, size: 8, offset: 2792)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1073, file: !1029, line: 1120, baseType: !258, size: 16, offset: 2800)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1073, file: !1029, line: 1121, baseType: !341, size: 32, offset: 2816)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1073, file: !1029, line: 1122, baseType: !341, size: 32, offset: 2848)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1073, file: !1029, line: 1123, baseType: !341, size: 32, offset: 2880)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1073, file: !1029, line: 1124, baseType: !341, size: 32, offset: 2912)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1073, file: !1029, line: 1125, baseType: !341, size: 32, offset: 2944)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1073, file: !1029, line: 1126, baseType: !341, size: 32, offset: 2976)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1073, file: !1029, line: 1127, baseType: !341, size: 32, offset: 3008)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1073, file: !1029, line: 1128, baseType: !341, size: 32, offset: 3040)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1073, file: !1029, line: 1129, baseType: !341, size: 32, offset: 3072)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1073, file: !1029, line: 1130, baseType: !341, size: 32, offset: 3104)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1073, file: !1029, line: 1131, baseType: !258, size: 16, offset: 3136)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1073, file: !1029, line: 1132, baseType: !245, size: 8, offset: 3152)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1073, file: !1029, line: 1133, baseType: !245, size: 8, offset: 3160)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1073, file: !1029, line: 1134, baseType: !1204, size: 24, offset: 3168)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 24, elements: !564)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1073, file: !1029, line: 1135, baseType: !245, size: 8, offset: 3192)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1073, file: !1029, line: 1138, baseType: !718, size: 64, offset: 3200)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1073, file: !1029, line: 1139, baseType: !245, size: 8, offset: 3264)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1073, file: !1029, line: 1140, baseType: !245, size: 8, offset: 3272)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1073, file: !1029, line: 1141, baseType: !245, size: 8, offset: 3280)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1073, file: !1029, line: 1142, baseType: !245, size: 8, offset: 3288)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1073, file: !1029, line: 1143, baseType: !245, size: 8, offset: 3296)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1073, file: !1029, line: 1144, baseType: !1213, size: 64, offset: 3304)
!1213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 64, elements: !429)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1073, file: !1029, line: 1145, baseType: !1213, size: 64, offset: 3368)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1073, file: !1029, line: 1148, baseType: !245, size: 8, offset: 3432)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1073, file: !1029, line: 1149, baseType: !245, size: 8, offset: 3440)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1073, file: !1029, line: 1152, baseType: !245, size: 8, offset: 3448)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1073, file: !1029, line: 1152, baseType: !245, size: 8, offset: 3456)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1073, file: !1029, line: 1153, baseType: !245, size: 8, offset: 3464)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1073, file: !1029, line: 1154, baseType: !258, size: 16, offset: 3472)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1073, file: !1029, line: 1154, baseType: !258, size: 16, offset: 3488)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1073, file: !1029, line: 1155, baseType: !258, size: 16, offset: 3504)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1073, file: !1029, line: 1155, baseType: !258, size: 16, offset: 3520)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1073, file: !1029, line: 1156, baseType: !245, size: 8, offset: 3536)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1073, file: !1029, line: 1157, baseType: !245, size: 8, offset: 3544)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1073, file: !1029, line: 1159, baseType: !245, size: 8, offset: 3552)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1073, file: !1029, line: 1160, baseType: !245, size: 8, offset: 3560)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1073, file: !1029, line: 1161, baseType: !245, size: 8, offset: 3568)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1073, file: !1029, line: 1162, baseType: !245, size: 8, offset: 3576)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1073, file: !1029, line: 1165, baseType: !260, size: 32, offset: 3584)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1073, file: !1029, line: 1166, baseType: !260, size: 32, offset: 3616)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1073, file: !1029, line: 1167, baseType: !260, size: 32, offset: 3648)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1073, file: !1029, line: 1168, baseType: !260, size: 32, offset: 3680)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1073, file: !1029, line: 1171, baseType: !258, size: 16, offset: 3712)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1073, file: !1029, line: 1171, baseType: !258, size: 16, offset: 3728)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1073, file: !1029, line: 1172, baseType: !260, size: 32, offset: 3744)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1073, file: !1029, line: 1173, baseType: !341, size: 32, offset: 3776)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1073, file: !1029, line: 1174, baseType: !341, size: 32, offset: 3808)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1073, file: !1029, line: 1177, baseType: !1240, size: 1024, offset: 3840)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1029, line: 963, size: 1024, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1265, !1266}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1240, file: !1029, line: 965, baseType: !260, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1240, file: !1029, line: 968, baseType: !341, size: 32, offset: 32)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1240, file: !1029, line: 971, baseType: !341, size: 32, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1240, file: !1029, line: 974, baseType: !341, size: 32, offset: 96)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1240, file: !1029, line: 977, baseType: !563, size: 96, offset: 128)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1240, file: !1029, line: 979, baseType: !563, size: 96, offset: 224)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1240, file: !1029, line: 982, baseType: !260, size: 32, offset: 320)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1240, file: !1029, line: 987, baseType: !511, size: 64, offset: 352)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1240, file: !1029, line: 989, baseType: !341, size: 32, offset: 416)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1240, file: !1029, line: 994, baseType: !260, size: 32, offset: 448)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1240, file: !1029, line: 995, baseType: !260, size: 32, offset: 480)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1240, file: !1029, line: 997, baseType: !245, size: 8, offset: 512)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1240, file: !1029, line: 998, baseType: !486, size: 56, offset: 520)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1240, file: !1029, line: 1000, baseType: !341, size: 32, offset: 576)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1240, file: !1029, line: 1003, baseType: !511, size: 64, offset: 608)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1240, file: !1029, line: 1006, baseType: !260, size: 32, offset: 672)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1240, file: !1029, line: 1009, baseType: !341, size: 32, offset: 704)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1240, file: !1029, line: 1012, baseType: !511, size: 64, offset: 736)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1240, file: !1029, line: 1015, baseType: !511, size: 64, offset: 800)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1240, file: !1029, line: 1018, baseType: !260, size: 32, offset: 864)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1240, file: !1029, line: 1019, baseType: !1263, size: 64, offset: 896)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1029, line: 63, flags: DIFlagFwdDecl)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1240, file: !1029, line: 1023, baseType: !341, size: 32, offset: 960)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1240, file: !1029, line: 1024, baseType: !260, size: 32, offset: 992)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1073, file: !1029, line: 1179, baseType: !1268, size: 320, offset: 4864)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1029, line: 1043, size: 320, elements: !1269)
!1269 = !{!1270, !1271, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1268, file: !1029, line: 1044, baseType: !245, size: 8)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1268, file: !1029, line: 1045, baseType: !1272, size: 16, offset: 8)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 16, elements: !453)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1268, file: !1029, line: 1048, baseType: !245, size: 8, offset: 24)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1268, file: !1029, line: 1049, baseType: !341, size: 32, offset: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1268, file: !1029, line: 1049, baseType: !341, size: 32, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1268, file: !1029, line: 1052, baseType: !341, size: 32, offset: 96)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1268, file: !1029, line: 1052, baseType: !341, size: 32, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1268, file: !1029, line: 1053, baseType: !245, size: 8, offset: 160)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1268, file: !1029, line: 1054, baseType: !1204, size: 24, offset: 168)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1268, file: !1029, line: 1057, baseType: !341, size: 32, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1268, file: !1029, line: 1057, baseType: !341, size: 32, offset: 224)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1268, file: !1029, line: 1060, baseType: !341, size: 32, offset: 256)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1268, file: !1029, line: 1060, baseType: !341, size: 32, offset: 288)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1028, file: !1029, line: 1247, baseType: !1285, size: 64, offset: 2176)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1029, line: 60, flags: DIFlagFwdDecl)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1028, file: !1029, line: 1251, baseType: !1288, size: 31872, offset: 2240)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1029, line: 403, size: 31872, elements: !1289)
!1289 = !{!1290, !1373, !1393, !1402, !1422, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1562, !1563, !1564, !1565, !1581, !1582}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1288, file: !1029, line: 404, baseType: !1291, size: 1984)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1029, line: 259, size: 1984, elements: !1292)
!1292 = !{!1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1310, !1368}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1291, file: !1029, line: 260, baseType: !245, size: 8)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1291, file: !1029, line: 263, baseType: !245, size: 8, offset: 8)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1291, file: !1029, line: 266, baseType: !245, size: 8, offset: 16)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1291, file: !1029, line: 267, baseType: !245, size: 8, offset: 24)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1291, file: !1029, line: 269, baseType: !245, size: 8, offset: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1291, file: !1029, line: 270, baseType: !245, size: 8, offset: 40)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1291, file: !1029, line: 276, baseType: !245, size: 8, offset: 48)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1291, file: !1029, line: 279, baseType: !245, size: 8, offset: 56)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1291, file: !1029, line: 280, baseType: !258, size: 16, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1291, file: !1029, line: 280, baseType: !258, size: 16, offset: 80)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1291, file: !1029, line: 281, baseType: !341, size: 32, offset: 96)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1291, file: !1029, line: 284, baseType: !245, size: 8, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1291, file: !1029, line: 285, baseType: !245, size: 8, offset: 136)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1291, file: !1029, line: 287, baseType: !1307, size: 48, offset: 144)
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 48, elements: !1308)
!1308 = !{!1309}
!1309 = !DISubrange(count: 6)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1291, file: !1029, line: 290, baseType: !1311, size: 1280, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !480, line: 174, baseType: !1312)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !480, line: 166, size: 1280, elements: !1313)
!1313 = !{!1314, !1315, !1316, !1317, !1318, !1319, !1320, !1367}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1312, file: !480, line: 167, baseType: !260, size: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1312, file: !480, line: 167, baseType: !260, size: 32, offset: 32)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1312, file: !480, line: 168, baseType: !275, size: 512, offset: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1312, file: !480, line: 169, baseType: !275, size: 512, offset: 576)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1312, file: !480, line: 170, baseType: !341, size: 32, offset: 1088)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1312, file: !480, line: 171, baseType: !341, size: 32, offset: 1120)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1312, file: !480, line: 172, baseType: !1321, size: 64, offset: 1152)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !480, line: 72, size: 3072, elements: !1323)
!1323 = !{!1324, !1325, !1326, !1327, !1328, !1337, !1338, !1363, !1364, !1365, !1366}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1322, file: !480, line: 73, baseType: !260, size: 32)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1322, file: !480, line: 73, baseType: !260, size: 32, offset: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1322, file: !480, line: 74, baseType: !260, size: 32, offset: 64)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1322, file: !480, line: 75, baseType: !260, size: 32, offset: 96)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1322, file: !480, line: 77, baseType: !1329, size: 128, offset: 128)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1330, line: 95, baseType: !1331)
!1330 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1330, line: 92, size: 128, elements: !1332)
!1332 = !{!1333, !1334, !1335, !1336}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1331, file: !1330, line: 93, baseType: !341, size: 32)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1331, file: !1330, line: 93, baseType: !341, size: 32, offset: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1331, file: !1330, line: 94, baseType: !341, size: 32, offset: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1331, file: !1330, line: 94, baseType: !341, size: 32, offset: 96)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1322, file: !480, line: 77, baseType: !1329, size: 128, offset: 256)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1322, file: !480, line: 79, baseType: !1339, size: 2304, offset: 384)
!1339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1340, size: 2304, elements: !474)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !480, line: 67, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !480, line: 55, size: 576, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1359, !1360, !1361, !1362}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1341, file: !480, line: 56, baseType: !258, size: 16)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1341, file: !480, line: 56, baseType: !258, size: 16, offset: 16)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1341, file: !480, line: 58, baseType: !341, size: 32, offset: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1341, file: !480, line: 59, baseType: !341, size: 32, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1341, file: !480, line: 59, baseType: !341, size: 32, offset: 96)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1341, file: !480, line: 60, baseType: !511, size: 64, offset: 128)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1341, file: !480, line: 60, baseType: !511, size: 64, offset: 192)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1341, file: !480, line: 61, baseType: !1351, size: 64, offset: 256)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !480, line: 47, baseType: !1353)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !480, line: 44, size: 96, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1353, file: !480, line: 45, baseType: !341, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1353, file: !480, line: 45, baseType: !341, size: 32, offset: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1353, file: !480, line: 46, baseType: !258, size: 16, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1353, file: !480, line: 46, baseType: !258, size: 16, offset: 80)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1341, file: !480, line: 62, baseType: !1351, size: 64, offset: 320)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1341, file: !480, line: 64, baseType: !1351, size: 64, offset: 384)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1341, file: !480, line: 65, baseType: !511, size: 64, offset: 448)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1341, file: !480, line: 66, baseType: !511, size: 64, offset: 512)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1322, file: !480, line: 80, baseType: !563, size: 96, offset: 2688)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1322, file: !480, line: 80, baseType: !563, size: 96, offset: 2784)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1322, file: !480, line: 81, baseType: !563, size: 96, offset: 2880)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1322, file: !480, line: 83, baseType: !563, size: 96, offset: 2976)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1312, file: !480, line: 173, baseType: !229, size: 64, offset: 1216)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1291, file: !1029, line: 291, baseType: !1369, size: 512, offset: 1472)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !480, line: 178, baseType: !1370)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !480, line: 176, size: 512, elements: !1371)
!1371 = !{!1372}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1370, file: !480, line: 177, baseType: !275, size: 512)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1288, file: !1029, line: 406, baseType: !1374, size: 64, offset: 1984)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1029, line: 80, size: 1472, elements: !1376)
!1376 = !{!1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1375, file: !1029, line: 81, baseType: !229, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1375, file: !1029, line: 82, baseType: !229, size: 64, offset: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1375, file: !1029, line: 83, baseType: !7, size: 32, offset: 128)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1375, file: !1029, line: 84, baseType: !7, size: 32, offset: 160)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1375, file: !1029, line: 86, baseType: !7, size: 32, offset: 192)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1375, file: !1029, line: 87, baseType: !7, size: 32, offset: 224)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1375, file: !1029, line: 88, baseType: !7, size: 32, offset: 256)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1375, file: !1029, line: 89, baseType: !7, size: 32, offset: 288)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1375, file: !1029, line: 90, baseType: !7, size: 32, offset: 320)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1375, file: !1029, line: 91, baseType: !7, size: 32, offset: 352)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1375, file: !1029, line: 92, baseType: !7, size: 32, offset: 384)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1375, file: !1029, line: 93, baseType: !7, size: 32, offset: 416)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1375, file: !1029, line: 95, baseType: !1390, size: 1024, offset: 448)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 1024, elements: !1391)
!1391 = !{!1392}
!1392 = !DISubrange(count: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1288, file: !1029, line: 407, baseType: !1394, size: 64, offset: 2048)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1029, line: 98, size: 1216, elements: !1396)
!1396 = !{!1397, !1398, !1399, !1400, !1401}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1395, file: !1029, line: 100, baseType: !229, size: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1395, file: !1029, line: 101, baseType: !229, size: 64, offset: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1395, file: !1029, line: 103, baseType: !7, size: 32, offset: 128)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1395, file: !1029, line: 104, baseType: !7, size: 32, offset: 160)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1395, file: !1029, line: 106, baseType: !1390, size: 1024, offset: 192)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1288, file: !1029, line: 408, baseType: !1403, size: 512, offset: 2112)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1029, line: 109, size: 512, elements: !1404)
!1404 = !{!1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1403, file: !1029, line: 111, baseType: !260, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1403, file: !1029, line: 112, baseType: !260, size: 32, offset: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1403, file: !1029, line: 115, baseType: !260, size: 32, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1403, file: !1029, line: 116, baseType: !260, size: 32, offset: 96)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1403, file: !1029, line: 117, baseType: !260, size: 32, offset: 128)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1403, file: !1029, line: 118, baseType: !260, size: 32, offset: 160)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1403, file: !1029, line: 119, baseType: !260, size: 32, offset: 192)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1403, file: !1029, line: 120, baseType: !260, size: 32, offset: 224)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1403, file: !1029, line: 121, baseType: !260, size: 32, offset: 256)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1403, file: !1029, line: 122, baseType: !260, size: 32, offset: 288)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1403, file: !1029, line: 125, baseType: !260, size: 32, offset: 320)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1403, file: !1029, line: 126, baseType: !260, size: 32, offset: 352)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1403, file: !1029, line: 127, baseType: !258, size: 16, offset: 384)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1403, file: !1029, line: 128, baseType: !258, size: 16, offset: 400)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1403, file: !1029, line: 129, baseType: !260, size: 32, offset: 416)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1403, file: !1029, line: 130, baseType: !260, size: 32, offset: 448)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1403, file: !1029, line: 131, baseType: !260, size: 32, offset: 480)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1288, file: !1029, line: 409, baseType: !1423, size: 576, offset: 2624)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1029, line: 134, size: 576, elements: !1424)
!1424 = !{!1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1423, file: !1029, line: 135, baseType: !260, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1423, file: !1029, line: 136, baseType: !260, size: 32, offset: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1423, file: !1029, line: 137, baseType: !260, size: 32, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1423, file: !1029, line: 138, baseType: !260, size: 32, offset: 96)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1423, file: !1029, line: 139, baseType: !260, size: 32, offset: 128)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1423, file: !1029, line: 140, baseType: !260, size: 32, offset: 160)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1423, file: !1029, line: 141, baseType: !260, size: 32, offset: 192)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1423, file: !1029, line: 142, baseType: !260, size: 32, offset: 224)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1423, file: !1029, line: 143, baseType: !341, size: 32, offset: 256)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1423, file: !1029, line: 144, baseType: !260, size: 32, offset: 288)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1423, file: !1029, line: 145, baseType: !260, size: 32, offset: 320)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1423, file: !1029, line: 147, baseType: !260, size: 32, offset: 352)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1423, file: !1029, line: 148, baseType: !260, size: 32, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1423, file: !1029, line: 149, baseType: !260, size: 32, offset: 416)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1423, file: !1029, line: 150, baseType: !260, size: 32, offset: 448)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1423, file: !1029, line: 151, baseType: !260, size: 32, offset: 480)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1423, file: !1029, line: 152, baseType: !264, size: 64, offset: 512)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1288, file: !1029, line: 411, baseType: !260, size: 32, offset: 3200)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1288, file: !1029, line: 411, baseType: !260, size: 32, offset: 3232)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1288, file: !1029, line: 411, baseType: !260, size: 32, offset: 3264)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1288, file: !1029, line: 412, baseType: !341, size: 32, offset: 3296)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1288, file: !1029, line: 413, baseType: !260, size: 32, offset: 3328)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1288, file: !1029, line: 413, baseType: !260, size: 32, offset: 3360)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1288, file: !1029, line: 415, baseType: !260, size: 32, offset: 3392)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1288, file: !1029, line: 415, baseType: !260, size: 32, offset: 3424)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1288, file: !1029, line: 416, baseType: !258, size: 16, offset: 3456)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1288, file: !1029, line: 416, baseType: !258, size: 16, offset: 3472)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1288, file: !1029, line: 418, baseType: !341, size: 32, offset: 3488)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1288, file: !1029, line: 418, baseType: !341, size: 32, offset: 3520)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1288, file: !1029, line: 421, baseType: !341, size: 32, offset: 3552)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1288, file: !1029, line: 421, baseType: !341, size: 32, offset: 3584)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1288, file: !1029, line: 421, baseType: !341, size: 32, offset: 3616)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1288, file: !1029, line: 425, baseType: !258, size: 16, offset: 3648)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1288, file: !1029, line: 425, baseType: !258, size: 16, offset: 3664)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1288, file: !1029, line: 425, baseType: !258, size: 16, offset: 3680)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1288, file: !1029, line: 426, baseType: !258, size: 16, offset: 3696)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1288, file: !1029, line: 428, baseType: !258, size: 16, offset: 3712)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1288, file: !1029, line: 428, baseType: !258, size: 16, offset: 3728)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1288, file: !1029, line: 431, baseType: !260, size: 32, offset: 3744)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1288, file: !1029, line: 433, baseType: !258, size: 16, offset: 3776)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1288, file: !1029, line: 435, baseType: !258, size: 16, offset: 3792)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1288, file: !1029, line: 437, baseType: !258, size: 16, offset: 3808)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1288, file: !1029, line: 439, baseType: !258, size: 16, offset: 3824)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1288, file: !1029, line: 441, baseType: !258, size: 16, offset: 3840)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1288, file: !1029, line: 443, baseType: !258, size: 16, offset: 3856)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1288, file: !1029, line: 449, baseType: !260, size: 32, offset: 3872)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1288, file: !1029, line: 453, baseType: !260, size: 32, offset: 3904)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1288, file: !1029, line: 458, baseType: !258, size: 16, offset: 3936)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1288, file: !1029, line: 462, baseType: !258, size: 16, offset: 3952)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1288, file: !1029, line: 467, baseType: !260, size: 32, offset: 3968)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1288, file: !1029, line: 467, baseType: !260, size: 32, offset: 4000)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1288, file: !1029, line: 469, baseType: !258, size: 16, offset: 4032)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1288, file: !1029, line: 469, baseType: !258, size: 16, offset: 4048)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1288, file: !1029, line: 469, baseType: !258, size: 16, offset: 4064)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1288, file: !1029, line: 469, baseType: !258, size: 16, offset: 4080)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1288, file: !1029, line: 474, baseType: !258, size: 16, offset: 4096)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1288, file: !1029, line: 475, baseType: !245, size: 8, offset: 4112)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1288, file: !1029, line: 476, baseType: !245, size: 8, offset: 4120)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1288, file: !1029, line: 481, baseType: !260, size: 32, offset: 4128)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1288, file: !1029, line: 486, baseType: !260, size: 32, offset: 4160)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1288, file: !1029, line: 491, baseType: !260, size: 32, offset: 4192)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1288, file: !1029, line: 496, baseType: !258, size: 16, offset: 4224)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1288, file: !1029, line: 498, baseType: !258, size: 16, offset: 4240)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1288, file: !1029, line: 501, baseType: !258, size: 16, offset: 4256)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1288, file: !1029, line: 502, baseType: !258, size: 16, offset: 4272)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1288, file: !1029, line: 508, baseType: !258, size: 16, offset: 4288)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1288, file: !1029, line: 513, baseType: !258, size: 16, offset: 4304)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1288, file: !1029, line: 515, baseType: !258, size: 16, offset: 4320)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1288, file: !1029, line: 515, baseType: !258, size: 16, offset: 4336)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1288, file: !1029, line: 519, baseType: !1329, size: 128, offset: 4352)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1288, file: !1029, line: 519, baseType: !1329, size: 128, offset: 4480)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1288, file: !1029, line: 520, baseType: !1497, size: 128, offset: 4608)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1330, line: 89, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1330, line: 86, size: 128, elements: !1499)
!1499 = !{!1500, !1501, !1502, !1503}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1498, file: !1330, line: 87, baseType: !260, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1498, file: !1330, line: 87, baseType: !260, size: 32, offset: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1498, file: !1330, line: 88, baseType: !260, size: 32, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1498, file: !1330, line: 88, baseType: !260, size: 32, offset: 96)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1288, file: !1029, line: 523, baseType: !285, size: 128, offset: 4736)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1288, file: !1029, line: 524, baseType: !258, size: 16, offset: 4864)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1288, file: !1029, line: 527, baseType: !258, size: 16, offset: 4880)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1288, file: !1029, line: 532, baseType: !341, size: 32, offset: 4896)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1288, file: !1029, line: 532, baseType: !341, size: 32, offset: 4928)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1288, file: !1029, line: 534, baseType: !341, size: 32, offset: 4960)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1288, file: !1029, line: 538, baseType: !341, size: 32, offset: 4992)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1288, file: !1029, line: 542, baseType: !260, size: 32, offset: 5024)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1288, file: !1029, line: 545, baseType: !341, size: 32, offset: 5056)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1288, file: !1029, line: 545, baseType: !341, size: 32, offset: 5088)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1288, file: !1029, line: 545, baseType: !341, size: 32, offset: 5120)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1288, file: !1029, line: 548, baseType: !341, size: 32, offset: 5152)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1288, file: !1029, line: 551, baseType: !258, size: 16, offset: 5184)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1288, file: !1029, line: 551, baseType: !258, size: 16, offset: 5200)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1288, file: !1029, line: 551, baseType: !258, size: 16, offset: 5216)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1288, file: !1029, line: 551, baseType: !258, size: 16, offset: 5232)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1288, file: !1029, line: 552, baseType: !258, size: 16, offset: 5248)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1288, file: !1029, line: 552, baseType: !258, size: 16, offset: 5264)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1288, file: !1029, line: 553, baseType: !341, size: 32, offset: 5280)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1288, file: !1029, line: 553, baseType: !341, size: 32, offset: 5312)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1288, file: !1029, line: 554, baseType: !258, size: 16, offset: 5344)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1288, file: !1029, line: 554, baseType: !258, size: 16, offset: 5360)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1288, file: !1029, line: 555, baseType: !341, size: 32, offset: 5376)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1288, file: !1029, line: 555, baseType: !341, size: 32, offset: 5408)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1288, file: !1029, line: 558, baseType: !244, size: 8192, offset: 5440)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1288, file: !1029, line: 561, baseType: !260, size: 32, offset: 13632)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1288, file: !1029, line: 562, baseType: !258, size: 16, offset: 13664)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1288, file: !1029, line: 562, baseType: !258, size: 16, offset: 13680)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1288, file: !1029, line: 565, baseType: !1533, size: 6144, offset: 13696)
!1533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 6144, elements: !1534)
!1534 = !{!1535}
!1535 = !DISubrange(count: 768)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1288, file: !1029, line: 568, baseType: !473, size: 128, offset: 19840)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1288, file: !1029, line: 569, baseType: !473, size: 128, offset: 19968)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1288, file: !1029, line: 572, baseType: !245, size: 8, offset: 20096)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1288, file: !1029, line: 573, baseType: !245, size: 8, offset: 20104)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1288, file: !1029, line: 574, baseType: !245, size: 8, offset: 20112)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1288, file: !1029, line: 575, baseType: !1137, size: 40, offset: 20120)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1288, file: !1029, line: 578, baseType: !260, size: 32, offset: 20160)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1288, file: !1029, line: 579, baseType: !258, size: 16, offset: 20192)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1288, file: !1029, line: 580, baseType: !258, size: 16, offset: 20208)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1288, file: !1029, line: 581, baseType: !341, size: 32, offset: 20224)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1288, file: !1029, line: 582, baseType: !341, size: 32, offset: 20256)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1288, file: !1029, line: 585, baseType: !258, size: 16, offset: 20288)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1288, file: !1029, line: 585, baseType: !258, size: 16, offset: 20304)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1288, file: !1029, line: 586, baseType: !341, size: 32, offset: 20320)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1288, file: !1029, line: 589, baseType: !258, size: 16, offset: 20352)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1288, file: !1029, line: 589, baseType: !258, size: 16, offset: 20368)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1288, file: !1029, line: 590, baseType: !260, size: 32, offset: 20384)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1288, file: !1029, line: 593, baseType: !258, size: 16, offset: 20416)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1288, file: !1029, line: 593, baseType: !258, size: 16, offset: 20432)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1288, file: !1029, line: 594, baseType: !258, size: 16, offset: 20448)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1288, file: !1029, line: 594, baseType: !258, size: 16, offset: 20464)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1288, file: !1029, line: 595, baseType: !341, size: 32, offset: 20480)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1288, file: !1029, line: 596, baseType: !341, size: 32, offset: 20512)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1288, file: !1029, line: 597, baseType: !1560, size: 64, offset: 20544)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !102, line: 205, flags: DIFlagFwdDecl)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1288, file: !1029, line: 600, baseType: !260, size: 32, offset: 20608)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1288, file: !1029, line: 601, baseType: !341, size: 32, offset: 20640)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1288, file: !1029, line: 604, baseType: !701, size: 256, offset: 20672)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1288, file: !1029, line: 607, baseType: !1566, size: 10880, offset: 20928)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1029, line: 364, size: 10880, elements: !1567)
!1567 = !{!1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1566, file: !1029, line: 365, baseType: !1291, size: 1984)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1566, file: !1029, line: 367, baseType: !244, size: 8192, offset: 1984)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1566, file: !1029, line: 369, baseType: !258, size: 16, offset: 10176)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1566, file: !1029, line: 369, baseType: !258, size: 16, offset: 10192)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1566, file: !1029, line: 370, baseType: !258, size: 16, offset: 10208)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1566, file: !1029, line: 370, baseType: !258, size: 16, offset: 10224)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1566, file: !1029, line: 372, baseType: !341, size: 32, offset: 10240)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1566, file: !1029, line: 373, baseType: !341, size: 32, offset: 10272)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1566, file: !1029, line: 375, baseType: !1204, size: 24, offset: 10304)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1566, file: !1029, line: 376, baseType: !245, size: 8, offset: 10328)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1566, file: !1029, line: 378, baseType: !245, size: 8, offset: 10336)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1566, file: !1029, line: 379, baseType: !1204, size: 24, offset: 10344)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1566, file: !1029, line: 381, baseType: !275, size: 512, offset: 10368)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1288, file: !1029, line: 609, baseType: !260, size: 32, offset: 31808)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1288, file: !1029, line: 610, baseType: !260, size: 32, offset: 31840)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1028, file: !1029, line: 1252, baseType: !1584, size: 256, offset: 34112)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1029, line: 158, size: 256, elements: !1585)
!1585 = !{!1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1584, file: !1029, line: 159, baseType: !260, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1584, file: !1029, line: 160, baseType: !341, size: 32, offset: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1584, file: !1029, line: 161, baseType: !341, size: 32, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1584, file: !1029, line: 162, baseType: !341, size: 32, offset: 96)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1584, file: !1029, line: 163, baseType: !260, size: 32, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1584, file: !1029, line: 164, baseType: !258, size: 16, offset: 160)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1584, file: !1029, line: 165, baseType: !258, size: 16, offset: 176)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1584, file: !1029, line: 166, baseType: !341, size: 32, offset: 192)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1584, file: !1029, line: 167, baseType: !341, size: 32, offset: 224)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1028, file: !1029, line: 1254, baseType: !285, size: 128, offset: 34368)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1028, file: !1029, line: 1255, baseType: !285, size: 128, offset: 34496)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1028, file: !1029, line: 1257, baseType: !229, size: 64, offset: 34624)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1028, file: !1029, line: 1258, baseType: !229, size: 64, offset: 34688)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1028, file: !1029, line: 1259, baseType: !229, size: 64, offset: 34752)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1028, file: !1029, line: 1260, baseType: !229, size: 64, offset: 34816)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1028, file: !1029, line: 1262, baseType: !229, size: 64, offset: 34880)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1028, file: !1029, line: 1265, baseType: !1603, size: 64, offset: 34944)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1029, line: 1265, flags: DIFlagFwdDecl)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1028, file: !1029, line: 1266, baseType: !258, size: 16, offset: 35008)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1028, file: !1029, line: 1267, baseType: !258, size: 16, offset: 35024)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1028, file: !1029, line: 1270, baseType: !260, size: 32, offset: 35040)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1028, file: !1029, line: 1271, baseType: !285, size: 128, offset: 35072)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1028, file: !1029, line: 1274, baseType: !1610, size: 128, offset: 35200)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1029, line: 650, size: 128, elements: !1611)
!1611 = !{!1612, !1613, !1614, !1615, !1616}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1610, file: !1029, line: 651, baseType: !563, size: 96)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1610, file: !1029, line: 652, baseType: !245, size: 8, offset: 96)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1610, file: !1029, line: 652, baseType: !245, size: 8, offset: 104)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1610, file: !1029, line: 652, baseType: !245, size: 8, offset: 112)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1610, file: !1029, line: 652, baseType: !245, size: 8, offset: 120)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1028, file: !1029, line: 1275, baseType: !1618, size: 1472, offset: 35328)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1029, line: 676, size: 1472, elements: !1619)
!1619 = !{!1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1641, !1642, !1643, !1644, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1618, file: !1029, line: 679, baseType: !1610, size: 128)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1618, file: !1029, line: 680, baseType: !258, size: 16, offset: 128)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1618, file: !1029, line: 680, baseType: !258, size: 16, offset: 144)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1618, file: !1029, line: 680, baseType: !258, size: 16, offset: 160)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1618, file: !1029, line: 680, baseType: !258, size: 16, offset: 176)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1618, file: !1029, line: 681, baseType: !258, size: 16, offset: 192)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1618, file: !1029, line: 681, baseType: !258, size: 16, offset: 208)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1618, file: !1029, line: 681, baseType: !258, size: 16, offset: 224)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1618, file: !1029, line: 681, baseType: !258, size: 16, offset: 240)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1618, file: !1029, line: 682, baseType: !258, size: 16, offset: 256)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1618, file: !1029, line: 682, baseType: !566, size: 48, offset: 272)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1618, file: !1029, line: 685, baseType: !1632, size: 192, offset: 320)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1029, line: 633, size: 192, elements: !1633)
!1633 = !{!1634, !1635, !1636, !1637, !1638, !1639, !1640}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1632, file: !1029, line: 634, baseType: !258, size: 16)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1632, file: !1029, line: 634, baseType: !258, size: 16, offset: 16)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1632, file: !1029, line: 635, baseType: !258, size: 16, offset: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1632, file: !1029, line: 635, baseType: !258, size: 16, offset: 48)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1632, file: !1029, line: 636, baseType: !341, size: 32, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1632, file: !1029, line: 636, baseType: !341, size: 32, offset: 96)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1632, file: !1029, line: 637, baseType: !1560, size: 64, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1618, file: !1029, line: 686, baseType: !258, size: 16, offset: 512)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1618, file: !1029, line: 686, baseType: !258, size: 16, offset: 528)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1618, file: !1029, line: 687, baseType: !341, size: 32, offset: 544)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1618, file: !1029, line: 688, baseType: !1645, size: 448, offset: 576)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1029, line: 674, baseType: !1646)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1029, line: 659, size: 448, elements: !1647)
!1647 = !{!1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1646, file: !1029, line: 660, baseType: !341, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1646, file: !1029, line: 661, baseType: !341, size: 32, offset: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1646, file: !1029, line: 662, baseType: !341, size: 32, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1646, file: !1029, line: 663, baseType: !341, size: 32, offset: 96)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1646, file: !1029, line: 664, baseType: !341, size: 32, offset: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1646, file: !1029, line: 665, baseType: !341, size: 32, offset: 160)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1646, file: !1029, line: 666, baseType: !341, size: 32, offset: 192)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1646, file: !1029, line: 667, baseType: !341, size: 32, offset: 224)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1646, file: !1029, line: 668, baseType: !341, size: 32, offset: 256)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1646, file: !1029, line: 669, baseType: !341, size: 32, offset: 288)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1646, file: !1029, line: 670, baseType: !260, size: 32, offset: 320)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1646, file: !1029, line: 671, baseType: !341, size: 32, offset: 352)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1646, file: !1029, line: 672, baseType: !341, size: 32, offset: 384)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1646, file: !1029, line: 673, baseType: !258, size: 16, offset: 416)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1646, file: !1029, line: 673, baseType: !258, size: 16, offset: 432)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1618, file: !1029, line: 692, baseType: !341, size: 32, offset: 1024)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1618, file: !1029, line: 697, baseType: !341, size: 32, offset: 1056)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1618, file: !1029, line: 703, baseType: !260, size: 32, offset: 1088)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1618, file: !1029, line: 704, baseType: !258, size: 16, offset: 1120)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1618, file: !1029, line: 704, baseType: !258, size: 16, offset: 1136)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1618, file: !1029, line: 705, baseType: !258, size: 16, offset: 1152)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1618, file: !1029, line: 706, baseType: !258, size: 16, offset: 1168)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1618, file: !1029, line: 707, baseType: !258, size: 16, offset: 1184)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1618, file: !1029, line: 708, baseType: !258, size: 16, offset: 1200)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1618, file: !1029, line: 709, baseType: !258, size: 16, offset: 1216)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1618, file: !1029, line: 709, baseType: !258, size: 16, offset: 1232)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1618, file: !1029, line: 709, baseType: !258, size: 16, offset: 1248)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1618, file: !1029, line: 709, baseType: !258, size: 16, offset: 1264)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1618, file: !1029, line: 710, baseType: !258, size: 16, offset: 1280)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1618, file: !1029, line: 711, baseType: !258, size: 16, offset: 1296)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1618, file: !1029, line: 712, baseType: !341, size: 32, offset: 1312)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1618, file: !1029, line: 713, baseType: !341, size: 32, offset: 1344)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1618, file: !1029, line: 713, baseType: !341, size: 32, offset: 1376)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1618, file: !1029, line: 713, baseType: !341, size: 32, offset: 1408)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1618, file: !1029, line: 713, baseType: !341, size: 32, offset: 1440)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1028, file: !1029, line: 1278, baseType: !1684, size: 64, offset: 36800)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1029, line: 1197, size: 64, elements: !1685)
!1685 = !{!1686, !1687, !1688, !1689}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1684, file: !1029, line: 1199, baseType: !341, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1684, file: !1029, line: 1200, baseType: !245, size: 8, offset: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1684, file: !1029, line: 1201, baseType: !245, size: 8, offset: 40)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1684, file: !1029, line: 1202, baseType: !258, size: 16, offset: 48)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1028, file: !1029, line: 1281, baseType: !785, size: 64, offset: 36864)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1028, file: !1029, line: 1284, baseType: !1692, size: 192, offset: 36928)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1029, line: 1208, size: 192, elements: !1693)
!1693 = !{!1694, !1695, !1696, !1697}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1692, file: !1029, line: 1209, baseType: !563, size: 96)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1692, file: !1029, line: 1210, baseType: !260, size: 32, offset: 96)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1692, file: !1029, line: 1210, baseType: !260, size: 32, offset: 128)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1692, file: !1029, line: 1210, baseType: !260, size: 32, offset: 160)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1028, file: !1029, line: 1287, baseType: !1699, size: 64, offset: 37120)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1029, line: 62, flags: DIFlagFwdDecl)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1028, file: !1029, line: 1289, baseType: !1702, size: 64, offset: 37184)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1703, line: 27, baseType: !1704)
!1703 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1705, line: 45, baseType: !1706)
!1705 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1706 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1028, file: !1029, line: 1290, baseType: !1702, size: 64, offset: 37248)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1028, file: !1029, line: 1293, baseType: !1311, size: 1280, offset: 37312)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1028, file: !1029, line: 1294, baseType: !1369, size: 512, offset: 38592)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1028, file: !1029, line: 1295, baseType: !479, size: 512, offset: 39104)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1028, file: !1029, line: 1298, baseType: !1712, size: 64, offset: 39616)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1029, line: 1298, flags: DIFlagFwdDecl)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1024, file: !411, line: 53, baseType: !260, size: 32, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1024, file: !411, line: 54, baseType: !260, size: 32, offset: 96)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1024, file: !411, line: 55, baseType: !260, size: 32, offset: 128)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1024, file: !411, line: 55, baseType: !260, size: 32, offset: 160)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1024, file: !411, line: 56, baseType: !245, size: 8, offset: 192)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1024, file: !411, line: 56, baseType: !245, size: 8, offset: 200)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1024, file: !411, line: 57, baseType: !245, size: 8, offset: 208)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1024, file: !411, line: 57, baseType: !245, size: 8, offset: 216)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1024, file: !411, line: 59, baseType: !258, size: 16, offset: 224)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1024, file: !411, line: 59, baseType: !258, size: 16, offset: 240)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1024, file: !411, line: 59, baseType: !258, size: 16, offset: 256)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1024, file: !411, line: 61, baseType: !258, size: 16, offset: 272)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1024, file: !411, line: 63, baseType: !260, size: 32, offset: 288)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !970, file: !379, line: 248, baseType: !1066, size: 64, offset: 2688)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !970, file: !379, line: 249, baseType: !377, size: 64, offset: 2752)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !970, file: !379, line: 250, baseType: !409, size: 64, offset: 2816)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !970, file: !379, line: 251, baseType: !1731, size: 64, offset: 2880)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !379, line: 113, size: 6208, elements: !1733)
!1733 = !{!1734, !1735, !1736, !1737, !1738, !1739, !1740}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1732, file: !379, line: 114, baseType: !258, size: 16)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1732, file: !379, line: 114, baseType: !258, size: 16, offset: 16)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1732, file: !379, line: 115, baseType: !245, size: 8, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1732, file: !379, line: 115, baseType: !245, size: 8, offset: 40)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1732, file: !379, line: 116, baseType: !245, size: 8, offset: 48)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1732, file: !379, line: 117, baseType: !1062, size: 8, offset: 56)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1732, file: !379, line: 119, baseType: !1741, size: 6144, offset: 64)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1742, size: 6144, elements: !702)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !379, line: 109, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !379, line: 106, size: 192, elements: !1744)
!1744 = !{!1745, !1746, !1747, !1748, !1749, !1750}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1743, file: !379, line: 107, baseType: !341, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1743, file: !379, line: 107, baseType: !341, size: 32, offset: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1743, file: !379, line: 107, baseType: !341, size: 32, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1743, file: !379, line: 107, baseType: !341, size: 32, offset: 96)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1743, file: !379, line: 107, baseType: !341, size: 32, offset: 128)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1743, file: !379, line: 108, baseType: !260, size: 32, offset: 160)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !970, file: !379, line: 252, baseType: !1752, size: 64, offset: 2944)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !379, line: 122, size: 1600, elements: !1754)
!1754 = !{!1755, !1756, !1757, !1761, !1762, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1753, file: !379, line: 123, baseType: !718, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1753, file: !379, line: 124, baseType: !409, size: 64, offset: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1753, file: !379, line: 125, baseType: !1758, size: 384, offset: 128)
!1758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1759, size: 384, elements: !1308)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !480, line: 136, flags: DIFlagFwdDecl)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1753, file: !379, line: 126, baseType: !829, size: 512, offset: 512)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1753, file: !379, line: 127, baseType: !1763, size: 288, offset: 1024)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 288, elements: !1764)
!1764 = !{!373, !373}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1753, file: !379, line: 128, baseType: !258, size: 16, offset: 1312)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1753, file: !379, line: 128, baseType: !258, size: 16, offset: 1328)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1753, file: !379, line: 129, baseType: !341, size: 32, offset: 1344)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1753, file: !379, line: 129, baseType: !341, size: 32, offset: 1376)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1753, file: !379, line: 130, baseType: !341, size: 32, offset: 1408)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1753, file: !379, line: 131, baseType: !7, size: 32, offset: 1440)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1753, file: !379, line: 132, baseType: !258, size: 16, offset: 1472)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1753, file: !379, line: 132, baseType: !258, size: 16, offset: 1488)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1753, file: !379, line: 133, baseType: !260, size: 32, offset: 1504)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1753, file: !379, line: 133, baseType: !260, size: 32, offset: 1536)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1753, file: !379, line: 134, baseType: !258, size: 16, offset: 1568)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1753, file: !379, line: 134, baseType: !258, size: 16, offset: 1584)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !970, file: !379, line: 253, baseType: !448, size: 64, offset: 3008)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !970, file: !379, line: 254, baseType: !1779, size: 64, offset: 3072)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !379, line: 137, size: 832, elements: !1781)
!1781 = !{!1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1780, file: !379, line: 138, baseType: !258, size: 16)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1780, file: !379, line: 140, baseType: !258, size: 16, offset: 16)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1780, file: !379, line: 141, baseType: !341, size: 32, offset: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1780, file: !379, line: 142, baseType: !341, size: 32, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1780, file: !379, line: 143, baseType: !258, size: 16, offset: 96)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1780, file: !379, line: 144, baseType: !258, size: 16, offset: 112)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1780, file: !379, line: 145, baseType: !260, size: 32, offset: 128)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1780, file: !379, line: 147, baseType: !260, size: 32, offset: 160)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1780, file: !379, line: 149, baseType: !718, size: 64, offset: 192)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1780, file: !379, line: 150, baseType: !260, size: 32, offset: 256)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1780, file: !379, line: 151, baseType: !258, size: 16, offset: 288)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1780, file: !379, line: 152, baseType: !258, size: 16, offset: 304)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1780, file: !379, line: 154, baseType: !229, size: 64, offset: 320)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1780, file: !379, line: 155, baseType: !1796, size: 64, offset: 384)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1780, file: !379, line: 157, baseType: !341, size: 32, offset: 448)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1780, file: !379, line: 158, baseType: !258, size: 16, offset: 480)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1780, file: !379, line: 159, baseType: !258, size: 16, offset: 496)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1780, file: !379, line: 160, baseType: !258, size: 16, offset: 512)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1780, file: !379, line: 161, baseType: !566, size: 48, offset: 528)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1780, file: !379, line: 162, baseType: !341, size: 32, offset: 576)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1780, file: !379, line: 164, baseType: !341, size: 32, offset: 608)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1780, file: !379, line: 164, baseType: !341, size: 32, offset: 640)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1780, file: !379, line: 164, baseType: !341, size: 32, offset: 672)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1780, file: !379, line: 165, baseType: !1731, size: 64, offset: 704)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1780, file: !379, line: 167, baseType: !1321, size: 64, offset: 768)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !970, file: !379, line: 255, baseType: !1809, size: 64, offset: 3136)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !379, line: 170, size: 8704, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1810, file: !379, line: 171, baseType: !1111, size: 96)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1810, file: !379, line: 172, baseType: !260, size: 32, offset: 96)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1810, file: !379, line: 173, baseType: !258, size: 16, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1810, file: !379, line: 174, baseType: !258, size: 16, offset: 144)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1810, file: !379, line: 175, baseType: !258, size: 16, offset: 160)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1810, file: !379, line: 176, baseType: !258, size: 16, offset: 176)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1810, file: !379, line: 177, baseType: !258, size: 16, offset: 192)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1810, file: !379, line: 178, baseType: !258, size: 16, offset: 208)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1810, file: !379, line: 179, baseType: !260, size: 32, offset: 224)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1810, file: !379, line: 181, baseType: !718, size: 64, offset: 256)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1810, file: !379, line: 182, baseType: !341, size: 32, offset: 320)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1810, file: !379, line: 183, baseType: !260, size: 32, offset: 352)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1810, file: !379, line: 184, baseType: !244, size: 8192, offset: 384)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1810, file: !379, line: 187, baseType: !1796, size: 64, offset: 8576)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1810, file: !379, line: 188, baseType: !260, size: 32, offset: 8640)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1810, file: !379, line: 189, baseType: !260, size: 32, offset: 8672)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !970, file: !379, line: 256, baseType: !1829, size: 64, offset: 3200)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !379, line: 193, size: 640, elements: !1831)
!1831 = !{!1832, !1833, !1834, !1835}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1830, file: !379, line: 194, baseType: !718, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1830, file: !379, line: 195, baseType: !275, size: 512, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1830, file: !379, line: 197, baseType: !260, size: 32, offset: 576)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1830, file: !379, line: 198, baseType: !260, size: 32, offset: 608)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !970, file: !379, line: 258, baseType: !245, size: 8, offset: 3264)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !970, file: !379, line: 259, baseType: !486, size: 56, offset: 3272)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !930, file: !888, line: 111, baseType: !1839, size: 64, offset: 1088)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG", file: !888, line: 111, flags: DIFlagFwdDecl)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "f_noise", scope: !930, file: !888, line: 112, baseType: !341, size: 32, offset: 1152)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !930, file: !888, line: 113, baseType: !260, size: 32, offset: 1184)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "f_source", scope: !930, file: !888, line: 115, baseType: !718, size: 64, offset: 1216)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !719, file: !78, line: 264, baseType: !1845, size: 64, offset: 9984)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !888, line: 268, size: 3776, elements: !1847)
!1847 = !{!1848, !1849, !1850, !1853, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1905, !1906, !1907, !3032, !3033, !3034, !3035, !3036, !3037}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1846, file: !888, line: 270, baseType: !260, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "totspring", scope: !1846, file: !888, line: 270, baseType: !260, size: 32, offset: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "bpoint", scope: !1846, file: !888, line: 271, baseType: !1851, size: 64, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodyPoint", file: !888, line: 271, flags: DIFlagFwdDecl)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "bspring", scope: !1846, file: !888, line: 272, baseType: !1854, size: 64, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodySpring", file: !888, line: 272, flags: DIFlagFwdDecl)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1846, file: !888, line: 273, baseType: !245, size: 8, offset: 192)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "msg_lock", scope: !1846, file: !888, line: 274, baseType: !245, size: 8, offset: 200)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "msg_value", scope: !1846, file: !888, line: 275, baseType: !258, size: 16, offset: 208)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "nodemass", scope: !1846, file: !888, line: 280, baseType: !341, size: 32, offset: 224)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Mass", scope: !1846, file: !888, line: 281, baseType: !275, size: 512, offset: 256)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "grav", scope: !1846, file: !888, line: 285, baseType: !341, size: 32, offset: 768)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "mediafrict", scope: !1846, file: !888, line: 286, baseType: !341, size: 32, offset: 800)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "rklimit", scope: !1846, file: !888, line: 287, baseType: !341, size: 32, offset: 832)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "physics_speed", scope: !1846, file: !888, line: 288, baseType: !341, size: 32, offset: 864)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !1846, file: !888, line: 291, baseType: !341, size: 32, offset: 896)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !1846, file: !888, line: 292, baseType: !341, size: 32, offset: 928)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !1846, file: !888, line: 293, baseType: !341, size: 32, offset: 960)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !1846, file: !888, line: 294, baseType: !341, size: 32, offset: 992)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !1846, file: !888, line: 295, baseType: !341, size: 32, offset: 1024)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "vertgroup", scope: !1846, file: !888, line: 296, baseType: !258, size: 16, offset: 1056)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Softgoal", scope: !1846, file: !888, line: 297, baseType: !275, size: 512, offset: 1072)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "fuzzyness", scope: !1846, file: !888, line: 301, baseType: !258, size: 16, offset: 1584)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "inspring", scope: !1846, file: !888, line: 304, baseType: !341, size: 32, offset: 1600)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "infrict", scope: !1846, file: !888, line: 305, baseType: !341, size: 32, offset: 1632)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Spring_K", scope: !1846, file: !888, line: 306, baseType: !275, size: 512, offset: 1664)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1846, file: !888, line: 312, baseType: !260, size: 32, offset: 2176)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1846, file: !888, line: 312, baseType: !260, size: 32, offset: 2208)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1846, file: !888, line: 313, baseType: !260, size: 32, offset: 2240)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !1846, file: !888, line: 314, baseType: !258, size: 16, offset: 2272)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "solverflags", scope: !1846, file: !888, line: 314, baseType: !258, size: 16, offset: 2288)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1846, file: !888, line: 317, baseType: !1882, size: 64, offset: 2304)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBVertex", file: !888, line: 213, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBVertex", file: !888, line: 211, size: 128, elements: !1886)
!1886 = !{!1887}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1885, file: !888, line: 212, baseType: !473, size: 128)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "totpointkey", scope: !1846, file: !888, line: 318, baseType: !260, size: 32, offset: 2368)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !1846, file: !888, line: 318, baseType: !260, size: 32, offset: 2400)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "secondspring", scope: !1846, file: !888, line: 320, baseType: !341, size: 32, offset: 2432)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "colball", scope: !1846, file: !888, line: 323, baseType: !341, size: 32, offset: 2464)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "balldamp", scope: !1846, file: !888, line: 324, baseType: !341, size: 32, offset: 2496)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ballstiff", scope: !1846, file: !888, line: 325, baseType: !341, size: 32, offset: 2528)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "sbc_mode", scope: !1846, file: !888, line: 326, baseType: !258, size: 16, offset: 2560)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "aeroedge", scope: !1846, file: !888, line: 327, baseType: !258, size: 16, offset: 2576)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "minloops", scope: !1846, file: !888, line: 328, baseType: !258, size: 16, offset: 2592)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "maxloops", scope: !1846, file: !888, line: 329, baseType: !258, size: 16, offset: 2608)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "choke", scope: !1846, file: !888, line: 330, baseType: !258, size: 16, offset: 2624)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "solver_ID", scope: !1846, file: !888, line: 331, baseType: !258, size: 16, offset: 2640)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "plastic", scope: !1846, file: !888, line: 332, baseType: !258, size: 16, offset: 2656)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "springpreload", scope: !1846, file: !888, line: 332, baseType: !258, size: 16, offset: 2672)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !1846, file: !888, line: 335, baseType: !1903, size: 64, offset: 2688)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = !DICompositeType(tag: DW_TAG_structure_type, name: "SBScratch", file: !888, line: 335, flags: DIFlagFwdDecl)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "shearstiff", scope: !1846, file: !888, line: 336, baseType: !341, size: 32, offset: 2752)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "inpush", scope: !1846, file: !888, line: 337, baseType: !341, size: 32, offset: 2784)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !1846, file: !888, line: 339, baseType: !1908, size: 64, offset: 2816)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointCache", file: !888, line: 170, size: 10560, elements: !1910)
!1910 = !{!1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !3031}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1909, file: !888, line: 171, baseType: !1908, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1909, file: !888, line: 171, baseType: !1908, size: 64, offset: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1909, file: !888, line: 172, baseType: !260, size: 32, offset: 128)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1909, file: !888, line: 174, baseType: !260, size: 32, offset: 160)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "simframe", scope: !1909, file: !888, line: 186, baseType: !260, size: 32, offset: 192)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "startframe", scope: !1909, file: !888, line: 187, baseType: !260, size: 32, offset: 224)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "endframe", scope: !1909, file: !888, line: 188, baseType: !260, size: 32, offset: 256)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "editframe", scope: !1909, file: !888, line: 189, baseType: !260, size: 32, offset: 288)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "last_exact", scope: !1909, file: !888, line: 190, baseType: !260, size: 32, offset: 320)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "last_valid", scope: !1909, file: !888, line: 191, baseType: !260, size: 32, offset: 352)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1909, file: !888, line: 192, baseType: !260, size: 32, offset: 384)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1909, file: !888, line: 195, baseType: !260, size: 32, offset: 416)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1909, file: !888, line: 196, baseType: !260, size: 32, offset: 448)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !1909, file: !888, line: 197, baseType: !258, size: 16, offset: 480)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1909, file: !888, line: 197, baseType: !258, size: 16, offset: 496)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1909, file: !888, line: 199, baseType: !275, size: 512, offset: 512)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "prev_name", scope: !1909, file: !888, line: 200, baseType: !275, size: 512, offset: 1024)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1909, file: !888, line: 201, baseType: !275, size: 512, offset: 1536)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1909, file: !888, line: 202, baseType: !244, size: 8192, offset: 2048)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "cached_frames", scope: !1909, file: !888, line: 203, baseType: !686, size: 64, offset: 10240)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !1909, file: !888, line: 205, baseType: !287, size: 128, offset: 10304)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !1909, file: !888, line: 207, baseType: !1933, size: 64, offset: 10432)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEdit", file: !1935, line: 235, size: 2560, elements: !1936)
!1935 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pointcache.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1936 = !{!1937, !1938, !2027, !2030, !2185, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3030}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "undo", scope: !1934, file: !1935, line: 236, baseType: !285, size: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "curundo", scope: !1934, file: !1935, line: 237, baseType: !1939, size: 64, offset: 128)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheUndo", file: !1935, line: 218, size: 1152, elements: !1941)
!1941 = !{!1942, !1943, !1944, !1962, !2019, !2022, !2023, !2024, !2025, !2026}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1940, file: !1935, line: 219, baseType: !1939, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1940, file: !1935, line: 219, baseType: !1939, size: 64, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1940, file: !1935, line: 220, baseType: !1945, size: 64, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditPoint", file: !1935, line: 212, size: 128, elements: !1947)
!1947 = !{!1948, !1960, !1961}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1946, file: !1935, line: 213, baseType: !1949, size: 64)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditKey", file: !1935, line: 194, size: 448, elements: !1951)
!1951 = !{!1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1950, file: !1935, line: 195, baseType: !1796, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !1950, file: !1935, line: 196, baseType: !1796, size: 64, offset: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1950, file: !1935, line: 197, baseType: !1796, size: 64, offset: 128)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1950, file: !1935, line: 198, baseType: !1796, size: 64, offset: 192)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "world_co", scope: !1950, file: !1935, line: 200, baseType: !563, size: 96, offset: 256)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "ftime", scope: !1950, file: !1935, line: 201, baseType: !341, size: 32, offset: 352)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1950, file: !1935, line: 202, baseType: !341, size: 32, offset: 384)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1950, file: !1935, line: 203, baseType: !258, size: 16, offset: 416)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !1946, file: !1935, line: 214, baseType: !260, size: 32, offset: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1946, file: !1935, line: 215, baseType: !258, size: 16, offset: 96)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !1940, file: !1935, line: 223, baseType: !1963, size: 64, offset: 192)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleData", file: !1965, line: 95, size: 1600, elements: !1966)
!1965 = !DIFile(filename: "blender/source/blender/makesdna/DNA_particle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1966 = !{!1967, !1976, !1977, !1987, !1989, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1964, file: !1965, line: 96, baseType: !1968, size: 448)
!1968 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleKey", file: !1965, line: 55, baseType: !1969)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleKey", file: !1965, line: 49, size: 448, elements: !1970)
!1970 = !{!1971, !1972, !1973, !1974, !1975}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1969, file: !1965, line: 50, baseType: !563, size: 96)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !1969, file: !1965, line: 51, baseType: !563, size: 96, offset: 96)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1969, file: !1965, line: 52, baseType: !473, size: 128, offset: 192)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !1969, file: !1965, line: 53, baseType: !563, size: 96, offset: 320)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1969, file: !1965, line: 54, baseType: !341, size: 32, offset: 416)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "prev_state", scope: !1964, file: !1965, line: 98, baseType: !1968, size: 448, offset: 448)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "hair", scope: !1964, file: !1965, line: 100, baseType: !1978, size: 64, offset: 896)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "HairKey", file: !1965, line: 47, baseType: !1980)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HairKey", file: !1965, line: 41, size: 192, elements: !1981)
!1981 = !{!1982, !1983, !1984, !1985, !1986}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1980, file: !1965, line: 42, baseType: !563, size: 96)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1980, file: !1965, line: 43, baseType: !341, size: 32, offset: 96)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1980, file: !1965, line: 44, baseType: !341, size: 32, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !1980, file: !1965, line: 45, baseType: !258, size: 16, offset: 160)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1980, file: !1965, line: 46, baseType: !258, size: 16, offset: 176)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1964, file: !1965, line: 102, baseType: !1988, size: 64, offset: 960)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "boid", scope: !1964, file: !1965, line: 104, baseType: !1990, size: 64, offset: 1024)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidParticle", file: !1965, line: 63, baseType: !1992)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidParticle", file: !1965, line: 57, size: 448, elements: !1993)
!1993 = !{!1994, !1995, !2002, !2003, !2004}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ground", scope: !1992, file: !1965, line: 58, baseType: !718, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1992, file: !1965, line: 59, baseType: !1996, size: 160, offset: 64)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidData", file: !87, line: 109, size: 160, elements: !1997)
!1997 = !{!1998, !1999, !2000, !2001}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !1996, file: !87, line: 110, baseType: !341, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !1996, file: !87, line: 110, baseType: !563, size: 96, offset: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "state_id", scope: !1996, file: !87, line: 111, baseType: !258, size: 16, offset: 128)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1996, file: !87, line: 111, baseType: !258, size: 16, offset: 144)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1992, file: !1965, line: 60, baseType: !563, size: 96, offset: 224)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "wander", scope: !1992, file: !1965, line: 61, baseType: !563, size: 96, offset: 320)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1992, file: !1965, line: 62, baseType: !341, size: 32, offset: 416)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !1964, file: !1965, line: 106, baseType: !260, size: 32, offset: 1088)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1964, file: !1965, line: 108, baseType: !341, size: 32, offset: 1120)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !1964, file: !1965, line: 108, baseType: !341, size: 32, offset: 1152)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "dietime", scope: !1964, file: !1965, line: 109, baseType: !341, size: 32, offset: 1184)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1964, file: !1965, line: 111, baseType: !260, size: 32, offset: 1216)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "num_dmcache", scope: !1964, file: !1965, line: 112, baseType: !260, size: 32, offset: 1248)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !1964, file: !1965, line: 114, baseType: !473, size: 128, offset: 1280)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !1964, file: !1965, line: 114, baseType: !341, size: 32, offset: 1408)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1964, file: !1965, line: 117, baseType: !341, size: 32, offset: 1440)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "sphdensity", scope: !1964, file: !1965, line: 119, baseType: !341, size: 32, offset: 1472)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1964, file: !1965, line: 120, baseType: !260, size: 32, offset: 1504)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "hair_index", scope: !1964, file: !1965, line: 122, baseType: !260, size: 32, offset: 1536)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1964, file: !1965, line: 123, baseType: !258, size: 16, offset: 1568)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !1964, file: !1965, line: 124, baseType: !258, size: 16, offset: 1584)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !1940, file: !1935, line: 224, baseType: !2020, size: 64, offset: 256)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DICompositeType(tag: DW_TAG_structure_type, name: "KDTree", file: !1965, line: 307, flags: DIFlagFwdDecl)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !1940, file: !1935, line: 225, baseType: !1796, size: 64, offset: 320)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "psys_flag", scope: !1940, file: !1935, line: 226, baseType: !260, size: 32, offset: 384)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !1940, file: !1935, line: 229, baseType: !287, size: 128, offset: 448)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1940, file: !1935, line: 231, baseType: !260, size: 32, offset: 576)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1940, file: !1935, line: 232, baseType: !275, size: 512, offset: 608)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1934, file: !1935, line: 238, baseType: !2028, size: 64, offset: 192)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheEditPoint", file: !1935, line: 216, baseType: !1946)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1934, file: !1935, line: 240, baseType: !2031, size: 1600, offset: 256)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheID", file: !1935, line: 122, size: 1600, elements: !2032)
!2032 = !{!2033, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2051, !2055, !2059, !2139, !2140, !2156, !2160, !2164, !2168, !2174, !2175, !2179, !2180, !2181, !2183}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2031, file: !1935, line: 123, baseType: !2034, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2031, file: !1935, line: 123, baseType: !2034, size: 64, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2031, file: !1935, line: 125, baseType: !1027, size: 64, offset: 128)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2031, file: !1935, line: 126, baseType: !718, size: 64, offset: 192)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "calldata", scope: !2031, file: !1935, line: 127, baseType: !229, size: 64, offset: 256)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2031, file: !1935, line: 128, baseType: !7, size: 32, offset: 320)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !2031, file: !1935, line: 129, baseType: !7, size: 32, offset: 352)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2031, file: !1935, line: 130, baseType: !7, size: 32, offset: 384)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "default_step", scope: !2031, file: !1935, line: 132, baseType: !7, size: 32, offset: 416)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "max_step", scope: !2031, file: !1935, line: 133, baseType: !7, size: 32, offset: 448)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !2031, file: !1935, line: 136, baseType: !7, size: 32, offset: 480)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "info_types", scope: !2031, file: !1935, line: 136, baseType: !7, size: 32, offset: 512)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "write_point", scope: !2031, file: !1935, line: 139, baseType: !2047, size: 64, offset: 576)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{!260, !260, !229, !2050, !260}
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "read_point", scope: !2031, file: !1935, line: 141, baseType: !2052, size: 64, offset: 640)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{null, !260, !229, !2050, !341, !1796}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_point", scope: !2031, file: !1935, line: 143, baseType: !2056, size: 64, offset: 704)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{null, !260, !229, !2050, !341, !341, !341, !1796}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "write_stream", scope: !2031, file: !1935, line: 146, baseType: !2060, size: 64, offset: 768)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = !DISubroutineType(types: !2062)
!2062 = !{!260, !2063, !229}
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheFile", file: !1935, line: 118, baseType: !2065)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheFile", file: !1935, line: 109, size: 1536, elements: !2066)
!2066 = !{!2067, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2137}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !2065, file: !1935, line: 110, baseType: !2068, size: 64)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2070, line: 7, baseType: !2071)
!2070 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2072, line: 49, size: 1728, elements: !2073)
!2072 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2073 = !{!2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2089, !2091, !2092, !2093, !2095, !2096, !2098, !2099, !2102, !2104, !2107, !2110, !2111, !2112, !2115, !2116}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2071, file: !2072, line: 51, baseType: !260, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2071, file: !2072, line: 54, baseType: !686, size: 64, offset: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2071, file: !2072, line: 55, baseType: !686, size: 64, offset: 128)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2071, file: !2072, line: 56, baseType: !686, size: 64, offset: 192)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2071, file: !2072, line: 57, baseType: !686, size: 64, offset: 256)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2071, file: !2072, line: 58, baseType: !686, size: 64, offset: 320)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2071, file: !2072, line: 59, baseType: !686, size: 64, offset: 384)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2071, file: !2072, line: 60, baseType: !686, size: 64, offset: 448)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2071, file: !2072, line: 61, baseType: !686, size: 64, offset: 512)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2071, file: !2072, line: 64, baseType: !686, size: 64, offset: 576)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2071, file: !2072, line: 65, baseType: !686, size: 64, offset: 640)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2071, file: !2072, line: 66, baseType: !686, size: 64, offset: 704)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2071, file: !2072, line: 68, baseType: !2087, size: 64, offset: 768)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2072, line: 36, flags: DIFlagFwdDecl)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2071, file: !2072, line: 70, baseType: !2090, size: 64, offset: 832)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2071, file: !2072, line: 72, baseType: !260, size: 32, offset: 896)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2071, file: !2072, line: 73, baseType: !260, size: 32, offset: 928)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2071, file: !2072, line: 74, baseType: !2094, size: 64, offset: 960)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1705, line: 152, baseType: !689)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2071, file: !2072, line: 77, baseType: !865, size: 16, offset: 1024)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2071, file: !2072, line: 78, baseType: !2097, size: 8, offset: 1040)
!2097 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2071, file: !2072, line: 79, baseType: !1062, size: 8, offset: 1048)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2071, file: !2072, line: 81, baseType: !2100, size: 64, offset: 1088)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2072, line: 43, baseType: null)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2071, file: !2072, line: 89, baseType: !2103, size: 64, offset: 1152)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1705, line: 153, baseType: !689)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2071, file: !2072, line: 91, baseType: !2105, size: 64, offset: 1216)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2072, line: 37, flags: DIFlagFwdDecl)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2071, file: !2072, line: 92, baseType: !2108, size: 64, offset: 1280)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2072, line: 38, flags: DIFlagFwdDecl)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2071, file: !2072, line: 93, baseType: !2090, size: 64, offset: 1344)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2071, file: !2072, line: 94, baseType: !229, size: 64, offset: 1408)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2071, file: !2072, line: 95, baseType: !2113, size: 64, offset: 1472)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2114, line: 46, baseType: !1706)
!2114 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2071, file: !2072, line: 96, baseType: !260, size: 32, offset: 1536)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2071, file: !2072, line: 98, baseType: !2117, size: 160, offset: 1568)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 160, elements: !2118)
!2118 = !{!2119}
!2119 = !DISubrange(count: 20)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !2065, file: !1935, line: 112, baseType: !260, size: 32, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "old_format", scope: !2065, file: !1935, line: 112, baseType: !260, size: 32, offset: 96)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2065, file: !1935, line: 113, baseType: !7, size: 32, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2065, file: !1935, line: 113, baseType: !7, size: 32, offset: 160)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !2065, file: !1935, line: 114, baseType: !7, size: 32, offset: 192)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2065, file: !1935, line: 114, baseType: !7, size: 32, offset: 224)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2065, file: !1935, line: 116, baseType: !2127, size: 736, offset: 256)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheData", file: !1935, line: 98, size: 736, elements: !2128)
!2128 = !{!2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2127, file: !1935, line: 99, baseType: !7, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2127, file: !1935, line: 100, baseType: !563, size: 96, offset: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !2127, file: !1935, line: 101, baseType: !563, size: 96, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2127, file: !1935, line: 102, baseType: !473, size: 128, offset: 224)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !2127, file: !1935, line: 103, baseType: !563, size: 96, offset: 352)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2127, file: !1935, line: 104, baseType: !341, size: 32, offset: 448)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !2127, file: !1935, line: 105, baseType: !563, size: 96, offset: 480)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !2127, file: !1935, line: 106, baseType: !1996, size: 160, offset: 576)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2065, file: !1935, line: 117, baseType: !2138, size: 512, offset: 1024)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 512, elements: !429)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "read_stream", scope: !2031, file: !1935, line: 148, baseType: !2060, size: 64, offset: 832)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "write_extra_data", scope: !2031, file: !1935, line: 151, baseType: !2141, size: 64, offset: 896)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{null, !229, !2144, !260}
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheMem", file: !888, line: 159, size: 1408, elements: !2146)
!2146 = !{!2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2145, file: !888, line: 160, baseType: !2144, size: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2145, file: !888, line: 160, baseType: !2144, size: 64, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !2145, file: !888, line: 161, baseType: !7, size: 32, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2145, file: !888, line: 161, baseType: !7, size: 32, offset: 160)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !2145, file: !888, line: 162, baseType: !7, size: 32, offset: 192)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2145, file: !888, line: 162, baseType: !7, size: 32, offset: 224)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2145, file: !888, line: 164, baseType: !2138, size: 512, offset: 256)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2145, file: !888, line: 165, baseType: !2138, size: 512, offset: 768)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !2145, file: !888, line: 167, baseType: !287, size: 128, offset: 1280)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "read_extra_data", scope: !2031, file: !1935, line: 153, baseType: !2157, size: 64, offset: 960)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{null, !229, !2144, !341}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_extra_data", scope: !2031, file: !1935, line: 155, baseType: !2161, size: 64, offset: 1024)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{null, !229, !2144, !341, !341, !341}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2031, file: !1935, line: 158, baseType: !2165, size: 64, offset: 1088)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{!260, !229, !260}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2031, file: !1935, line: 160, baseType: !2169, size: 64, offset: 1152)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = !DISubroutineType(types: !2171)
!2171 = !{null, !229, !2172}
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !245)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "totwrite", scope: !2031, file: !1935, line: 162, baseType: !2165, size: 64, offset: 1216)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !2031, file: !1935, line: 164, baseType: !2176, size: 64, offset: 1280)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!260, !2063}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !2031, file: !1935, line: 165, baseType: !2176, size: 64, offset: 1344)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2031, file: !1935, line: 167, baseType: !1908, size: 64, offset: 1408)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ptr", scope: !2031, file: !1935, line: 169, baseType: !2182, size: 64, offset: 1472)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !2031, file: !1935, line: 170, baseType: !2184, size: 64, offset: 1536)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1934, file: !1935, line: 243, baseType: !2186, size: 64, offset: 1856)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystem", file: !1965, line: 253, size: 5248, elements: !2188)
!2188 = !{!2189, !2190, !2191, !2460, !2463, !2476, !2477, !2481, !2492, !2493, !2494, !2495, !2637, !2950, !2951, !2952, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2977, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2995, !2996, !2997, !2998, !2999, !3016, !3017}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2187, file: !1965, line: 257, baseType: !2186, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2187, file: !1965, line: 257, baseType: !2186, size: 64, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2187, file: !1965, line: 259, baseType: !2192, size: 64, offset: 128)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSettings", file: !1965, line: 251, baseType: !2194)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSettings", file: !1965, line: 153, size: 6400, elements: !2195)
!2195 = !{!2196, !2197, !2198, !2225, !2246, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2194, file: !1965, line: 154, baseType: !224, size: 960)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2194, file: !1965, line: 155, baseType: !296, size: 64, offset: 960)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !2194, file: !1965, line: 157, baseType: !2199, size: 64, offset: 1024)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidSettings", file: !87, line: 189, size: 832, elements: !2201)
!2201 = !{!2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !2200, file: !87, line: 190, baseType: !260, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "last_state_id", scope: !2200, file: !87, line: 190, baseType: !260, size: 32, offset: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "landing_smoothness", scope: !2200, file: !87, line: 192, baseType: !341, size: 32, offset: 64)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2200, file: !87, line: 192, baseType: !341, size: 32, offset: 96)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "banking", scope: !2200, file: !87, line: 193, baseType: !341, size: 32, offset: 128)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !2200, file: !87, line: 193, baseType: !341, size: 32, offset: 160)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !2200, file: !87, line: 195, baseType: !341, size: 32, offset: 192)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "aggression", scope: !2200, file: !87, line: 195, baseType: !341, size: 32, offset: 224)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2200, file: !87, line: 196, baseType: !341, size: 32, offset: 256)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !2200, file: !87, line: 196, baseType: !341, size: 32, offset: 288)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2200, file: !87, line: 196, baseType: !341, size: 32, offset: 320)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "air_min_speed", scope: !2200, file: !87, line: 199, baseType: !341, size: 32, offset: 352)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_speed", scope: !2200, file: !87, line: 199, baseType: !341, size: 32, offset: 384)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_acc", scope: !2200, file: !87, line: 200, baseType: !341, size: 32, offset: 416)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_ave", scope: !2200, file: !87, line: 200, baseType: !341, size: 32, offset: 448)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "air_personal_space", scope: !2200, file: !87, line: 201, baseType: !341, size: 32, offset: 480)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "land_jump_speed", scope: !2200, file: !87, line: 204, baseType: !341, size: 32, offset: 512)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_speed", scope: !2200, file: !87, line: 204, baseType: !341, size: 32, offset: 544)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_acc", scope: !2200, file: !87, line: 205, baseType: !341, size: 32, offset: 576)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_ave", scope: !2200, file: !87, line: 205, baseType: !341, size: 32, offset: 608)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "land_personal_space", scope: !2200, file: !87, line: 206, baseType: !341, size: 32, offset: 640)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "land_stick_force", scope: !2200, file: !87, line: 207, baseType: !341, size: 32, offset: 672)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !2200, file: !87, line: 209, baseType: !287, size: 128, offset: 704)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "fluid", scope: !2194, file: !1965, line: 158, baseType: !2226, size: 64, offset: 1088)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SPHFluidSettings", file: !1965, line: 127, size: 544, elements: !2228)
!2228 = !{!2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2227, file: !1965, line: 129, baseType: !341, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "spring_k", scope: !2227, file: !1965, line: 129, baseType: !341, size: 32, offset: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !2227, file: !1965, line: 129, baseType: !341, size: 32, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_constant", scope: !2227, file: !1965, line: 130, baseType: !341, size: 32, offset: 96)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "yield_ratio", scope: !2227, file: !1965, line: 130, baseType: !341, size: 32, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_balance", scope: !2227, file: !1965, line: 131, baseType: !341, size: 32, offset: 160)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "yield_balance", scope: !2227, file: !1965, line: 131, baseType: !341, size: 32, offset: 192)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_omega", scope: !2227, file: !1965, line: 132, baseType: !341, size: 32, offset: 224)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_beta", scope: !2227, file: !1965, line: 132, baseType: !341, size: 32, offset: 256)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_k", scope: !2227, file: !1965, line: 133, baseType: !341, size: 32, offset: 288)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_knear", scope: !2227, file: !1965, line: 133, baseType: !341, size: 32, offset: 320)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "rest_density", scope: !2227, file: !1965, line: 133, baseType: !341, size: 32, offset: 352)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "buoyancy", scope: !2227, file: !1965, line: 134, baseType: !341, size: 32, offset: 384)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2227, file: !1965, line: 135, baseType: !260, size: 32, offset: 416)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "spring_frames", scope: !2227, file: !1965, line: 135, baseType: !260, size: 32, offset: 448)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "solver", scope: !2227, file: !1965, line: 136, baseType: !258, size: 16, offset: 480)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2227, file: !1965, line: 137, baseType: !566, size: 48, offset: 496)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !2194, file: !1965, line: 160, baseType: !2247, size: 64, offset: 1152)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorWeights", file: !888, line: 118, size: 640, elements: !2249)
!2249 = !{!2250, !2253, !2257, !2258, !2259, !2260}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2248, file: !888, line: 119, baseType: !2251, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!2252 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !302, line: 46, flags: DIFlagFwdDecl)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2248, file: !888, line: 121, baseType: !2254, size: 448, offset: 64)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 448, elements: !2255)
!2255 = !{!2256}
!2256 = !DISubrange(count: 14)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "global_gravity", scope: !2248, file: !888, line: 122, baseType: !341, size: 32, offset: 512)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2248, file: !888, line: 123, baseType: !258, size: 16, offset: 544)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2248, file: !888, line: 123, baseType: !566, size: 48, offset: 560)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2248, file: !888, line: 124, baseType: !260, size: 32, offset: 608)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2194, file: !1965, line: 162, baseType: !260, size: 32, offset: 1216)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2194, file: !1965, line: 162, baseType: !260, size: 32, offset: 1248)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2194, file: !1965, line: 163, baseType: !258, size: 16, offset: 1280)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2194, file: !1965, line: 163, baseType: !258, size: 16, offset: 1296)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "distr", scope: !2194, file: !1965, line: 163, baseType: !258, size: 16, offset: 1312)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !2194, file: !1965, line: 163, baseType: !258, size: 16, offset: 1328)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "phystype", scope: !2194, file: !1965, line: 165, baseType: !258, size: 16, offset: 1344)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !2194, file: !1965, line: 165, baseType: !258, size: 16, offset: 1360)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "avemode", scope: !2194, file: !1965, line: 165, baseType: !258, size: 16, offset: 1376)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "reactevent", scope: !2194, file: !1965, line: 165, baseType: !258, size: 16, offset: 1392)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !2194, file: !1965, line: 166, baseType: !260, size: 32, offset: 1408)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2194, file: !1965, line: 166, baseType: !260, size: 32, offset: 1440)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "draw_as", scope: !2194, file: !1965, line: 167, baseType: !258, size: 16, offset: 1472)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "draw_size", scope: !2194, file: !1965, line: 167, baseType: !258, size: 16, offset: 1488)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "childtype", scope: !2194, file: !1965, line: 167, baseType: !258, size: 16, offset: 1504)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2194, file: !1965, line: 167, baseType: !258, size: 16, offset: 1520)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "ren_as", scope: !2194, file: !1965, line: 168, baseType: !258, size: 16, offset: 1536)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !2194, file: !1965, line: 168, baseType: !258, size: 16, offset: 1552)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "draw_col", scope: !2194, file: !1965, line: 168, baseType: !258, size: 16, offset: 1568)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2194, file: !1965, line: 170, baseType: !258, size: 16, offset: 1584)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "ren_step", scope: !2194, file: !1965, line: 170, baseType: !258, size: 16, offset: 1600)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "hair_step", scope: !2194, file: !1965, line: 171, baseType: !258, size: 16, offset: 1616)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "keys_step", scope: !2194, file: !1965, line: 171, baseType: !258, size: 16, offset: 1632)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_angle", scope: !2194, file: !1965, line: 174, baseType: !258, size: 16, offset: 1648)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_pix", scope: !2194, file: !1965, line: 174, baseType: !258, size: 16, offset: 1664)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !2194, file: !1965, line: 176, baseType: !258, size: 16, offset: 1680)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "omat", scope: !2194, file: !1965, line: 176, baseType: !258, size: 16, offset: 1696)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation", scope: !2194, file: !1965, line: 176, baseType: !258, size: 16, offset: 1712)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "integrator", scope: !2194, file: !1965, line: 176, baseType: !258, size: 16, offset: 1728)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "rotfrom", scope: !2194, file: !1965, line: 177, baseType: !258, size: 16, offset: 1744)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !2194, file: !1965, line: 178, baseType: !258, size: 16, offset: 1760)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !2194, file: !1965, line: 178, baseType: !258, size: 16, offset: 1776)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "bb_align", scope: !2194, file: !1965, line: 181, baseType: !258, size: 16, offset: 1792)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uv_split", scope: !2194, file: !1965, line: 181, baseType: !258, size: 16, offset: 1808)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "bb_anim", scope: !2194, file: !1965, line: 181, baseType: !258, size: 16, offset: 1824)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "bb_split_offset", scope: !2194, file: !1965, line: 181, baseType: !258, size: 16, offset: 1840)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "bb_tilt", scope: !2194, file: !1965, line: 182, baseType: !341, size: 32, offset: 1856)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "bb_rand_tilt", scope: !2194, file: !1965, line: 182, baseType: !341, size: 32, offset: 1888)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "bb_offset", scope: !2194, file: !1965, line: 182, baseType: !511, size: 64, offset: 1920)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "bb_size", scope: !2194, file: !1965, line: 182, baseType: !511, size: 64, offset: 1984)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_head", scope: !2194, file: !1965, line: 182, baseType: !341, size: 32, offset: 2048)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_tail", scope: !2194, file: !1965, line: 182, baseType: !341, size: 32, offset: 2080)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "color_vec_max", scope: !2194, file: !1965, line: 185, baseType: !341, size: 32, offset: 2112)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2194, file: !1965, line: 188, baseType: !258, size: 16, offset: 2144)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_refsize", scope: !2194, file: !1965, line: 188, baseType: !258, size: 16, offset: 2160)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_rate", scope: !2194, file: !1965, line: 189, baseType: !341, size: 32, offset: 2176)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_transition", scope: !2194, file: !1965, line: 189, baseType: !341, size: 32, offset: 2208)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_viewport", scope: !2194, file: !1965, line: 190, baseType: !341, size: 32, offset: 2240)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "sta", scope: !2194, file: !1965, line: 193, baseType: !341, size: 32, offset: 2272)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2194, file: !1965, line: 193, baseType: !341, size: 32, offset: 2304)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !2194, file: !1965, line: 193, baseType: !341, size: 32, offset: 2336)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "randlife", scope: !2194, file: !1965, line: 193, baseType: !341, size: 32, offset: 2368)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "timetweak", scope: !2194, file: !1965, line: 194, baseType: !341, size: 32, offset: 2400)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "courant_target", scope: !2194, file: !1965, line: 194, baseType: !341, size: 32, offset: 2432)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "jitfac", scope: !2194, file: !1965, line: 195, baseType: !341, size: 32, offset: 2464)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "eff_hair", scope: !2194, file: !1965, line: 195, baseType: !341, size: 32, offset: 2496)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "grid_rand", scope: !2194, file: !1965, line: 195, baseType: !341, size: 32, offset: 2528)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "ps_offset", scope: !2194, file: !1965, line: 195, baseType: !2319, size: 32, offset: 2560)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 32, elements: !1063)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !2194, file: !1965, line: 196, baseType: !260, size: 32, offset: 2592)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "userjit", scope: !2194, file: !1965, line: 196, baseType: !260, size: 32, offset: 2624)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "grid_res", scope: !2194, file: !1965, line: 196, baseType: !260, size: 32, offset: 2656)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "effector_amount", scope: !2194, file: !1965, line: 196, baseType: !260, size: 32, offset: 2688)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "time_flag", scope: !2194, file: !1965, line: 197, baseType: !258, size: 16, offset: 2720)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "time_pad", scope: !2194, file: !1965, line: 197, baseType: !566, size: 48, offset: 2736)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "normfac", scope: !2194, file: !1965, line: 200, baseType: !341, size: 32, offset: 2784)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "obfac", scope: !2194, file: !1965, line: 200, baseType: !341, size: 32, offset: 2816)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "randfac", scope: !2194, file: !1965, line: 200, baseType: !341, size: 32, offset: 2848)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "partfac", scope: !2194, file: !1965, line: 200, baseType: !341, size: 32, offset: 2880)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "tanfac", scope: !2194, file: !1965, line: 200, baseType: !341, size: 32, offset: 2912)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "tanphase", scope: !2194, file: !1965, line: 200, baseType: !341, size: 32, offset: 2944)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "reactfac", scope: !2194, file: !1965, line: 200, baseType: !341, size: 32, offset: 2976)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "ob_vel", scope: !2194, file: !1965, line: 201, baseType: !563, size: 96, offset: 3008)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "avefac", scope: !2194, file: !1965, line: 202, baseType: !341, size: 32, offset: 3104)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "phasefac", scope: !2194, file: !1965, line: 202, baseType: !341, size: 32, offset: 3136)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "randrotfac", scope: !2194, file: !1965, line: 202, baseType: !341, size: 32, offset: 3168)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "randphasefac", scope: !2194, file: !1965, line: 202, baseType: !341, size: 32, offset: 3200)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !2194, file: !1965, line: 204, baseType: !341, size: 32, offset: 3232)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2194, file: !1965, line: 204, baseType: !341, size: 32, offset: 3264)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "randsize", scope: !2194, file: !1965, line: 204, baseType: !341, size: 32, offset: 3296)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !2194, file: !1965, line: 206, baseType: !563, size: 96, offset: 3328)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "dragfac", scope: !2194, file: !1965, line: 206, baseType: !341, size: 32, offset: 3424)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "brownfac", scope: !2194, file: !1965, line: 206, baseType: !341, size: 32, offset: 3456)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !2194, file: !1965, line: 206, baseType: !341, size: 32, offset: 3488)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "randlength", scope: !2194, file: !1965, line: 208, baseType: !341, size: 32, offset: 3520)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "child_nbr", scope: !2194, file: !1965, line: 210, baseType: !260, size: 32, offset: 3552)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "ren_child_nbr", scope: !2194, file: !1965, line: 210, baseType: !260, size: 32, offset: 3584)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "parents", scope: !2194, file: !1965, line: 211, baseType: !341, size: 32, offset: 3616)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "childsize", scope: !2194, file: !1965, line: 211, baseType: !341, size: 32, offset: 3648)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "childrandsize", scope: !2194, file: !1965, line: 211, baseType: !341, size: 32, offset: 3680)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "childrad", scope: !2194, file: !1965, line: 212, baseType: !341, size: 32, offset: 3712)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "childflat", scope: !2194, file: !1965, line: 212, baseType: !341, size: 32, offset: 3744)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !2194, file: !1965, line: 214, baseType: !341, size: 32, offset: 3776)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "clumppow", scope: !2194, file: !1965, line: 214, baseType: !341, size: 32, offset: 3808)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !2194, file: !1965, line: 216, baseType: !341, size: 32, offset: 3840)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !2194, file: !1965, line: 216, baseType: !341, size: 32, offset: 3872)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !2194, file: !1965, line: 216, baseType: !341, size: 32, offset: 3904)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "kink_flat", scope: !2194, file: !1965, line: 216, baseType: !341, size: 32, offset: 3936)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp_clump", scope: !2194, file: !1965, line: 217, baseType: !341, size: 32, offset: 3968)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "rough1", scope: !2194, file: !1965, line: 219, baseType: !341, size: 32, offset: 4000)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "rough1_size", scope: !2194, file: !1965, line: 219, baseType: !341, size: 32, offset: 4032)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "rough2", scope: !2194, file: !1965, line: 220, baseType: !341, size: 32, offset: 4064)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_size", scope: !2194, file: !1965, line: 220, baseType: !341, size: 32, offset: 4096)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_thres", scope: !2194, file: !1965, line: 220, baseType: !341, size: 32, offset: 4128)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end", scope: !2194, file: !1965, line: 221, baseType: !341, size: 32, offset: 4160)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end_shape", scope: !2194, file: !1965, line: 221, baseType: !341, size: 32, offset: 4192)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "clength", scope: !2194, file: !1965, line: 223, baseType: !341, size: 32, offset: 4224)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "clength_thres", scope: !2194, file: !1965, line: 223, baseType: !341, size: 32, offset: 4256)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "parting_fac", scope: !2194, file: !1965, line: 225, baseType: !341, size: 32, offset: 4288)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "parting_min", scope: !2194, file: !1965, line: 226, baseType: !341, size: 32, offset: 4320)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "parting_max", scope: !2194, file: !1965, line: 226, baseType: !341, size: 32, offset: 4352)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "branch_thres", scope: !2194, file: !1965, line: 228, baseType: !341, size: 32, offset: 4384)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "draw_line", scope: !2194, file: !1965, line: 230, baseType: !511, size: 64, offset: 4416)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "path_start", scope: !2194, file: !1965, line: 231, baseType: !341, size: 32, offset: 4480)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "path_end", scope: !2194, file: !1965, line: 231, baseType: !341, size: 32, offset: 4512)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "trail_count", scope: !2194, file: !1965, line: 232, baseType: !260, size: 32, offset: 4544)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "keyed_loops", scope: !2194, file: !1965, line: 234, baseType: !260, size: 32, offset: 4576)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2194, file: !1965, line: 236, baseType: !2379, size: 1152, offset: 4608)
!2379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2380, size: 1152, elements: !2448)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !379, line: 57, size: 2496, elements: !2382)
!2382 = !{!2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !2381, file: !379, line: 59, baseType: !258, size: 16)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !2381, file: !379, line: 59, baseType: !258, size: 16, offset: 16)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !2381, file: !379, line: 59, baseType: !258, size: 16, offset: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !2381, file: !379, line: 59, baseType: !258, size: 16, offset: 48)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2381, file: !379, line: 60, baseType: !718, size: 64, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2381, file: !379, line: 61, baseType: !969, size: 64, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2381, file: !379, line: 62, baseType: !275, size: 512, offset: 192)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !2381, file: !379, line: 64, baseType: !245, size: 8, offset: 704)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !2381, file: !379, line: 64, baseType: !245, size: 8, offset: 712)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !2381, file: !379, line: 64, baseType: !245, size: 8, offset: 720)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !2381, file: !379, line: 64, baseType: !245, size: 8, offset: 728)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !2381, file: !379, line: 65, baseType: !563, size: 96, offset: 736)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2381, file: !379, line: 65, baseType: !563, size: 96, offset: 832)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2381, file: !379, line: 65, baseType: !341, size: 32, offset: 928)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !2381, file: !379, line: 67, baseType: !258, size: 16, offset: 960)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !2381, file: !379, line: 67, baseType: !258, size: 16, offset: 976)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !2381, file: !379, line: 67, baseType: !258, size: 16, offset: 992)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !2381, file: !379, line: 67, baseType: !258, size: 16, offset: 1008)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !2381, file: !379, line: 68, baseType: !258, size: 16, offset: 1024)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !2381, file: !379, line: 68, baseType: !258, size: 16, offset: 1040)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !2381, file: !379, line: 69, baseType: !245, size: 8, offset: 1056)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2381, file: !379, line: 69, baseType: !486, size: 56, offset: 1064)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2381, file: !379, line: 70, baseType: !341, size: 32, offset: 1120)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2381, file: !379, line: 70, baseType: !341, size: 32, offset: 1152)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2381, file: !379, line: 70, baseType: !341, size: 32, offset: 1184)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !2381, file: !379, line: 70, baseType: !341, size: 32, offset: 1216)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !2381, file: !379, line: 71, baseType: !341, size: 32, offset: 1248)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2381, file: !379, line: 71, baseType: !341, size: 32, offset: 1280)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !2381, file: !379, line: 74, baseType: !341, size: 32, offset: 1312)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !2381, file: !379, line: 74, baseType: !341, size: 32, offset: 1344)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !2381, file: !379, line: 77, baseType: !341, size: 32, offset: 1376)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !2381, file: !379, line: 77, baseType: !341, size: 32, offset: 1408)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !2381, file: !379, line: 77, baseType: !341, size: 32, offset: 1440)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !2381, file: !379, line: 78, baseType: !341, size: 32, offset: 1472)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !2381, file: !379, line: 78, baseType: !341, size: 32, offset: 1504)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !2381, file: !379, line: 78, baseType: !341, size: 32, offset: 1536)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !2381, file: !379, line: 79, baseType: !341, size: 32, offset: 1568)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !2381, file: !379, line: 79, baseType: !341, size: 32, offset: 1600)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !2381, file: !379, line: 79, baseType: !341, size: 32, offset: 1632)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !2381, file: !379, line: 79, baseType: !341, size: 32, offset: 1664)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !2381, file: !379, line: 80, baseType: !341, size: 32, offset: 1696)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !2381, file: !379, line: 80, baseType: !341, size: 32, offset: 1728)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !2381, file: !379, line: 80, baseType: !341, size: 32, offset: 1760)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !2381, file: !379, line: 81, baseType: !341, size: 32, offset: 1792)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !2381, file: !379, line: 81, baseType: !341, size: 32, offset: 1824)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !2381, file: !379, line: 81, baseType: !341, size: 32, offset: 1856)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !2381, file: !379, line: 82, baseType: !341, size: 32, offset: 1888)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !2381, file: !379, line: 82, baseType: !341, size: 32, offset: 1920)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !2381, file: !379, line: 82, baseType: !341, size: 32, offset: 1952)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !2381, file: !379, line: 85, baseType: !341, size: 32, offset: 1984)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !2381, file: !379, line: 85, baseType: !341, size: 32, offset: 2016)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !2381, file: !379, line: 85, baseType: !341, size: 32, offset: 2048)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !2381, file: !379, line: 85, baseType: !341, size: 32, offset: 2080)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !2381, file: !379, line: 86, baseType: !341, size: 32, offset: 2112)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !2381, file: !379, line: 86, baseType: !341, size: 32, offset: 2144)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !2381, file: !379, line: 86, baseType: !341, size: 32, offset: 2176)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !2381, file: !379, line: 86, baseType: !341, size: 32, offset: 2208)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !2381, file: !379, line: 87, baseType: !341, size: 32, offset: 2240)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !2381, file: !379, line: 87, baseType: !341, size: 32, offset: 2272)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !2381, file: !379, line: 87, baseType: !341, size: 32, offset: 2304)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !2381, file: !379, line: 87, baseType: !341, size: 32, offset: 2336)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !2381, file: !379, line: 90, baseType: !341, size: 32, offset: 2368)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !2381, file: !379, line: 93, baseType: !341, size: 32, offset: 2400)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !2381, file: !379, line: 93, baseType: !341, size: 32, offset: 2432)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !2381, file: !379, line: 93, baseType: !341, size: 32, offset: 2464)
!2448 = !{!2449}
!2449 = !DISubrange(count: 18)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !2194, file: !1965, line: 238, baseType: !2251, size: 64, offset: 5760)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "dupliweights", scope: !2194, file: !1965, line: 239, baseType: !287, size: 128, offset: 5824)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "eff_group", scope: !2194, file: !1965, line: 240, baseType: !2251, size: 64, offset: 5952)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "dup_ob", scope: !2194, file: !1965, line: 241, baseType: !718, size: 64, offset: 6016)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "bb_ob", scope: !2194, file: !1965, line: 242, baseType: !718, size: 64, offset: 6080)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2194, file: !1965, line: 243, baseType: !377, size: 64, offset: 6144)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2194, file: !1965, line: 244, baseType: !929, size: 64, offset: 6208)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "pd2", scope: !2194, file: !1965, line: 245, baseType: !929, size: 64, offset: 6272)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "use_modifier_stack", scope: !2194, file: !1965, line: 248, baseType: !258, size: 16, offset: 6336)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2194, file: !1965, line: 249, baseType: !566, size: 48, offset: 6352)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !2187, file: !1965, line: 261, baseType: !2461, size: 64, offset: 192)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleData", file: !1965, line: 125, baseType: !1964)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2187, file: !1965, line: 262, baseType: !2464, size: 64, offset: 256)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChildParticle", file: !1965, line: 77, baseType: !2466)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChildParticle", file: !1965, line: 71, size: 512, elements: !2467)
!2467 = !{!2468, !2469, !2470, !2472, !2473, !2474, !2475}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2466, file: !1965, line: 72, baseType: !260, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2466, file: !1965, line: 72, baseType: !260, size: 32, offset: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !2466, file: !1965, line: 73, baseType: !2471, size: 128, offset: 64)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !260, size: 128, elements: !474)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2466, file: !1965, line: 74, baseType: !473, size: 128, offset: 192)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !2466, file: !1965, line: 75, baseType: !473, size: 128, offset: 320)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !2466, file: !1965, line: 75, baseType: !341, size: 32, offset: 448)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2466, file: !1965, line: 76, baseType: !341, size: 32, offset: 480)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !2187, file: !1965, line: 264, baseType: !1933, size: 64, offset: 320)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !2187, file: !1965, line: 265, baseType: !2478, size: 64, offset: 384)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{null, !1933}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !2187, file: !1965, line: 267, baseType: !2482, size: 64, offset: 448)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 64)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCacheKey", file: !714, line: 123, size: 480, elements: !2485)
!2485 = !{!2486, !2487, !2488, !2489, !2490, !2491}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2484, file: !714, line: 124, baseType: !563, size: 96)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !2484, file: !714, line: 125, baseType: !563, size: 96, offset: 96)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2484, file: !714, line: 126, baseType: !473, size: 128, offset: 192)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2484, file: !714, line: 127, baseType: !563, size: 96, offset: 320)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2484, file: !714, line: 128, baseType: !341, size: 32, offset: 416)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "steps", scope: !2484, file: !714, line: 129, baseType: !260, size: 32, offset: 448)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "childcache", scope: !2187, file: !1965, line: 268, baseType: !2482, size: 64, offset: 512)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !2187, file: !1965, line: 269, baseType: !285, size: 128, offset: 576)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "childcachebufs", scope: !2187, file: !1965, line: 269, baseType: !285, size: 128, offset: 704)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "clmd", scope: !2187, file: !1965, line: 271, baseType: !2496, size: 64, offset: 832)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothModifierData", file: !96, line: 557, size: 1344, elements: !2498)
!2498 = !{!2499, !2513, !2514, !2569, !2617, !2635, !2636}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !2497, file: !96, line: 558, baseType: !2500, size: 896)
!2500 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !96, line: 110, baseType: !2501)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !96, line: 99, size: 896, elements: !2502)
!2502 = !{!2503, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2501, file: !96, line: 100, baseType: !2504, size: 64)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2501, file: !96, line: 100, baseType: !2504, size: 64, offset: 64)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2501, file: !96, line: 102, baseType: !260, size: 32, offset: 128)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2501, file: !96, line: 102, baseType: !260, size: 32, offset: 160)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !2501, file: !96, line: 103, baseType: !260, size: 32, offset: 192)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2501, file: !96, line: 103, baseType: !260, size: 32, offset: 224)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2501, file: !96, line: 104, baseType: !275, size: 512, offset: 256)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2501, file: !96, line: 107, baseType: !1027, size: 64, offset: 768)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2501, file: !96, line: 109, baseType: !686, size: 64, offset: 832)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2497, file: !96, line: 560, baseType: !1027, size: 64, offset: 896)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "clothObject", scope: !2497, file: !96, line: 561, baseType: !2515, size: 64, offset: 960)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 64)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Cloth", file: !172, line: 69, size: 704, elements: !2517)
!2517 = !{!2518, !2541, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2557, !2558, !2559, !2562, !2563, !2567, !2568}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !2516, file: !172, line: 70, baseType: !2519, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothVertex", file: !172, line: 90, size: 1216, elements: !2521)
!2521 = !{!2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2520, file: !172, line: 91, baseType: !260, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2520, file: !172, line: 92, baseType: !563, size: 96, offset: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "xconst", scope: !2520, file: !172, line: 93, baseType: !563, size: 96, offset: 128)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2520, file: !172, line: 94, baseType: !563, size: 96, offset: 224)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "xold", scope: !2520, file: !172, line: 95, baseType: !563, size: 96, offset: 320)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !2520, file: !172, line: 96, baseType: !563, size: 96, offset: 416)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "txold", scope: !2520, file: !172, line: 97, baseType: !563, size: 96, offset: 512)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "tv", scope: !2520, file: !172, line: 98, baseType: !563, size: 96, offset: 608)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !2520, file: !172, line: 99, baseType: !341, size: 32, offset: 704)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "goal", scope: !2520, file: !172, line: 100, baseType: !341, size: 32, offset: 736)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "impulse", scope: !2520, file: !172, line: 101, baseType: !563, size: 96, offset: 768)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "xrest", scope: !2520, file: !172, line: 102, baseType: !1796, size: 64, offset: 896)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "impulse_count", scope: !2520, file: !172, line: 103, baseType: !7, size: 32, offset: 960)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "avg_spring_len", scope: !2520, file: !172, line: 104, baseType: !341, size: 32, offset: 992)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "struct_stiff", scope: !2520, file: !172, line: 105, baseType: !341, size: 32, offset: 1024)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "bend_stiff", scope: !2520, file: !172, line: 106, baseType: !341, size: 32, offset: 1056)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "shear_stiff", scope: !2520, file: !172, line: 107, baseType: !341, size: 32, offset: 1088)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "spring_count", scope: !2520, file: !172, line: 108, baseType: !260, size: 32, offset: 1120)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !2520, file: !172, line: 109, baseType: !341, size: 32, offset: 1152)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "springs", scope: !2516, file: !172, line: 71, baseType: !2542, size: 64, offset: 64)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !2544, line: 45, size: 128, elements: !2545)
!2544 = !DIFile(filename: "blender/source/blender/blenlib/BLI_linklist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2545 = !{!2546, !2547}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2543, file: !2544, line: 46, baseType: !2542, size: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2543, file: !2544, line: 47, baseType: !229, size: 64, offset: 64)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "numverts", scope: !2516, file: !172, line: 72, baseType: !7, size: 32, offset: 128)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "numsprings", scope: !2516, file: !172, line: 73, baseType: !7, size: 32, offset: 160)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "numfaces", scope: !2516, file: !172, line: 74, baseType: !7, size: 32, offset: 192)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "old_solver_type", scope: !2516, file: !172, line: 75, baseType: !672, size: 8, offset: 224)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2516, file: !172, line: 76, baseType: !672, size: 8, offset: 232)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2516, file: !172, line: 77, baseType: !258, size: 16, offset: 240)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !2516, file: !172, line: 78, baseType: !2555, size: 64, offset: 256)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTree", file: !1965, line: 308, flags: DIFlagFwdDecl)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "bvhselftree", scope: !2516, file: !172, line: 79, baseType: !2555, size: 64, offset: 320)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "mfaces", scope: !2516, file: !172, line: 80, baseType: !522, size: 64, offset: 384)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "implicit", scope: !2516, file: !172, line: 81, baseType: !2560, size: 64, offset: 448)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implicit_Data", file: !172, line: 81, flags: DIFlagFwdDecl)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "implicitEM", scope: !2516, file: !172, line: 82, baseType: !2560, size: 64, offset: 512)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "edgeset", scope: !2516, file: !172, line: 83, baseType: !2564, size: 64, offset: 576)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64)
!2565 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeSet", file: !2566, line: 96, flags: DIFlagFwdDecl)
!2566 = !DIFile(filename: "blender/source/blender/blenlib/BLI_edgehash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !2516, file: !172, line: 84, baseType: !260, size: 32, offset: 640)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2516, file: !172, line: 84, baseType: !260, size: 32, offset: 672)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "sim_parms", scope: !2497, file: !96, line: 562, baseType: !2570, size: 64, offset: 1024)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothSimSettings", file: !2572, line: 47, size: 1344, elements: !2573)
!2572 = !DIFile(filename: "blender/source/blender/makesdna/DNA_cloth_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2616}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2571, file: !2572, line: 48, baseType: !2542, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !2571, file: !2572, line: 49, baseType: !341, size: 32, offset: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "Cdis", scope: !2571, file: !2572, line: 50, baseType: !341, size: 32, offset: 96)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "Cvi", scope: !2571, file: !2572, line: 51, baseType: !341, size: 32, offset: 128)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2571, file: !2572, line: 52, baseType: !563, size: 96, offset: 160)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !2571, file: !2572, line: 53, baseType: !341, size: 32, offset: 256)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !2571, file: !2572, line: 54, baseType: !341, size: 32, offset: 288)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "structural", scope: !2571, file: !2572, line: 55, baseType: !341, size: 32, offset: 320)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !2571, file: !2572, line: 56, baseType: !341, size: 32, offset: 352)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "bending", scope: !2571, file: !2572, line: 57, baseType: !341, size: 32, offset: 384)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "max_bend", scope: !2571, file: !2572, line: 58, baseType: !341, size: 32, offset: 416)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "max_struct", scope: !2571, file: !2572, line: 59, baseType: !341, size: 32, offset: 448)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "max_shear", scope: !2571, file: !2572, line: 60, baseType: !341, size: 32, offset: 480)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "max_sewing", scope: !2571, file: !2572, line: 61, baseType: !341, size: 32, offset: 512)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "avg_spring_len", scope: !2571, file: !2572, line: 62, baseType: !341, size: 32, offset: 544)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "timescale", scope: !2571, file: !2572, line: 63, baseType: !341, size: 32, offset: 576)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !2571, file: !2572, line: 64, baseType: !341, size: 32, offset: 608)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "eff_force_scale", scope: !2571, file: !2572, line: 65, baseType: !341, size: 32, offset: 640)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "eff_wind_scale", scope: !2571, file: !2572, line: 66, baseType: !341, size: 32, offset: 672)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "sim_time_old", scope: !2571, file: !2572, line: 67, baseType: !341, size: 32, offset: 704)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !2571, file: !2572, line: 68, baseType: !341, size: 32, offset: 736)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !2571, file: !2572, line: 69, baseType: !341, size: 32, offset: 768)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !2571, file: !2572, line: 70, baseType: !341, size: 32, offset: 800)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "velocity_smooth", scope: !2571, file: !2572, line: 71, baseType: !341, size: 32, offset: 832)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "collider_friction", scope: !2571, file: !2572, line: 72, baseType: !341, size: 32, offset: 864)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "vel_damping", scope: !2571, file: !2572, line: 73, baseType: !341, size: 32, offset: 896)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_min", scope: !2571, file: !2572, line: 74, baseType: !341, size: 32, offset: 928)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_max", scope: !2571, file: !2572, line: 75, baseType: !341, size: 32, offset: 960)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "stepsPerFrame", scope: !2571, file: !2572, line: 77, baseType: !260, size: 32, offset: 992)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2571, file: !2572, line: 78, baseType: !260, size: 32, offset: 1024)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "preroll", scope: !2571, file: !2572, line: 79, baseType: !260, size: 32, offset: 1056)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "maxspringlen", scope: !2571, file: !2572, line: 80, baseType: !260, size: 32, offset: 1088)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "solver_type", scope: !2571, file: !2572, line: 81, baseType: !258, size: 16, offset: 1120)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_bend", scope: !2571, file: !2572, line: 82, baseType: !258, size: 16, offset: 1136)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_mass", scope: !2571, file: !2572, line: 83, baseType: !258, size: 16, offset: 1152)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_struct", scope: !2571, file: !2572, line: 84, baseType: !258, size: 16, offset: 1168)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_shrink", scope: !2571, file: !2572, line: 85, baseType: !258, size: 16, offset: 1184)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "shapekey_rest", scope: !2571, file: !2572, line: 86, baseType: !258, size: 16, offset: 1200)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "presets", scope: !2571, file: !2572, line: 87, baseType: !258, size: 16, offset: 1216)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2571, file: !2572, line: 88, baseType: !258, size: 16, offset: 1232)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2571, file: !2572, line: 89, baseType: !2615, size: 32, offset: 1248)
!2615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 32, elements: !474)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !2571, file: !2572, line: 91, baseType: !2247, size: 64, offset: 1280)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "coll_parms", scope: !2497, file: !96, line: 563, baseType: !2618, size: 64, offset: 1088)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothCollSettings", file: !2572, line: 95, size: 448, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "collision_list", scope: !2619, file: !2572, line: 96, baseType: !2542, size: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "epsilon", scope: !2619, file: !2572, line: 97, baseType: !341, size: 32, offset: 64)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "self_friction", scope: !2619, file: !2572, line: 98, baseType: !341, size: 32, offset: 96)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !2619, file: !2572, line: 99, baseType: !341, size: 32, offset: 128)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "selfepsilon", scope: !2619, file: !2572, line: 100, baseType: !341, size: 32, offset: 160)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "repel_force", scope: !2619, file: !2572, line: 101, baseType: !341, size: 32, offset: 192)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "distance_repel", scope: !2619, file: !2572, line: 101, baseType: !341, size: 32, offset: 224)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2619, file: !2572, line: 102, baseType: !260, size: 32, offset: 256)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "self_loop_count", scope: !2619, file: !2572, line: 103, baseType: !258, size: 16, offset: 288)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "loop_count", scope: !2619, file: !2572, line: 104, baseType: !258, size: 16, offset: 304)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2619, file: !2572, line: 105, baseType: !2251, size: 64, offset: 320)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_selfcol", scope: !2619, file: !2572, line: 106, baseType: !258, size: 16, offset: 384)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2619, file: !2572, line: 107, baseType: !258, size: 16, offset: 400)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2619, file: !2572, line: 108, baseType: !260, size: 32, offset: 416)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !2497, file: !96, line: 564, baseType: !1908, size: 64, offset: 1152)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !2497, file: !96, line: 565, baseType: !287, size: 128, offset: 1216)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "hair_in_dm", scope: !2187, file: !1965, line: 272, baseType: !2638, size: 64, offset: 896)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 178, size: 13504, elements: !2640)
!2640 = !{!2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2656, !2659, !2661, !2662, !2664, !2665, !2666, !2667, !2673, !2678, !2679, !2683, !2684, !2685, !2686, !2687, !2691, !2695, !2699, !2703, !2707, !2711, !2715, !2719, !2723, !2727, !2731, !2735, !2739, !2740, !2741, !2742, !2743, !2744, !2748, !2749, !2750, !2751, !2755, !2756, !2757, !2758, !2759, !2764, !2765, !2766, !2767, !2768, !2772, !2773, !2774, !2775, !2776, !2783, !2793, !2798, !2804, !2814, !2819, !2830, !2837, !2844, !2848, !2852, !2856, !2861, !2862, !2863, !2870, !2876, !2877, !2878, !2882, !2883, !2892, !2907, !2911, !2919, !2923, !2927, !2931, !2939, !2949}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !2639, file: !6, line: 180, baseType: !681, size: 1600)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !2639, file: !6, line: 180, baseType: !681, size: 1600, offset: 1600)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !2639, file: !6, line: 180, baseType: !681, size: 1600, offset: 3200)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !2639, file: !6, line: 180, baseType: !681, size: 1600, offset: 4800)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !2639, file: !6, line: 180, baseType: !681, size: 1600, offset: 6400)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !2639, file: !6, line: 181, baseType: !260, size: 32, offset: 8000)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !2639, file: !6, line: 181, baseType: !260, size: 32, offset: 8032)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !2639, file: !6, line: 181, baseType: !260, size: 32, offset: 8064)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !2639, file: !6, line: 181, baseType: !260, size: 32, offset: 8096)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !2639, file: !6, line: 181, baseType: !260, size: 32, offset: 8128)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !2639, file: !6, line: 182, baseType: !260, size: 32, offset: 8160)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !2639, file: !6, line: 183, baseType: !260, size: 32, offset: 8192)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !2639, file: !6, line: 184, baseType: !2654, size: 64, offset: 8256)
!2654 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !2655, line: 124, baseType: !2542)
!2655 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !2639, file: !6, line: 185, baseType: !2657, size: 64, offset: 8320)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !6, line: 97, flags: DIFlagFwdDecl)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2639, file: !6, line: 186, baseType: !2660, size: 32, offset: 8384)
!2660 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !6, line: 132, baseType: !5)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !2639, file: !6, line: 187, baseType: !341, size: 32, offset: 8416)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !2639, file: !6, line: 188, baseType: !2663, size: 32, offset: 8448)
!2663 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !6, line: 175, baseType: !12)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !2639, file: !6, line: 189, baseType: !260, size: 32, offset: 8480)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2639, file: !6, line: 190, baseType: !385, size: 64, offset: 8512)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !2639, file: !6, line: 193, baseType: !245, size: 8, offset: 8576)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !2639, file: !6, line: 196, baseType: !2668, size: 64, offset: 8640)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64)
!2669 = !DISubroutineType(types: !2670)
!2670 = !{null, !2671}
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 64)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !6, line: 177, baseType: !2639)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !2639, file: !6, line: 199, baseType: !2674, size: 64, offset: 8704)
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 64)
!2675 = !DISubroutineType(types: !2676)
!2676 = !{null, !2671, !2677}
!2677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !341)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !2639, file: !6, line: 202, baseType: !2668, size: 64, offset: 8768)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !2639, file: !6, line: 207, baseType: !2680, size: 64, offset: 8832)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!260, !2671}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !2639, file: !6, line: 208, baseType: !2680, size: 64, offset: 8896)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !2639, file: !6, line: 209, baseType: !2680, size: 64, offset: 8960)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !2639, file: !6, line: 210, baseType: !2680, size: 64, offset: 9024)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !2639, file: !6, line: 211, baseType: !2680, size: 64, offset: 9088)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !2639, file: !6, line: 218, baseType: !2688, size: 64, offset: 9152)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{null, !2671, !260, !559}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !2639, file: !6, line: 219, baseType: !2692, size: 64, offset: 9216)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{null, !2671, !260, !570}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !2639, file: !6, line: 220, baseType: !2696, size: 64, offset: 9280)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 64)
!2697 = !DISubroutineType(types: !2698)
!2698 = !{null, !2671, !260, !522}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !2639, file: !6, line: 227, baseType: !2700, size: 64, offset: 9344)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = !DISubroutineType(types: !2702)
!2702 = !{!559, !2671}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !2639, file: !6, line: 228, baseType: !2704, size: 64, offset: 9408)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 64)
!2705 = !DISubroutineType(types: !2706)
!2706 = !{!570, !2671}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !2639, file: !6, line: 229, baseType: !2708, size: 64, offset: 9472)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2709 = !DISubroutineType(types: !2710)
!2710 = !{!522, !2671}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !2639, file: !6, line: 230, baseType: !2712, size: 64, offset: 9536)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = !DISubroutineType(types: !2714)
!2714 = !{!501, !2671}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !2639, file: !6, line: 231, baseType: !2716, size: 64, offset: 9600)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64)
!2717 = !DISubroutineType(types: !2718)
!2718 = !{!396, !2671}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !2639, file: !6, line: 236, baseType: !2720, size: 64, offset: 9664)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{null, !2671, !559}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !2639, file: !6, line: 237, baseType: !2724, size: 64, offset: 9728)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{null, !2671, !570}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !2639, file: !6, line: 238, baseType: !2728, size: 64, offset: 9792)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{null, !2671, !522}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !2639, file: !6, line: 239, baseType: !2732, size: 64, offset: 9856)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{null, !2671, !501}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !2639, file: !6, line: 240, baseType: !2736, size: 64, offset: 9920)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{null, !2671, !396}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !2639, file: !6, line: 245, baseType: !2700, size: 64, offset: 9984)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !2639, file: !6, line: 246, baseType: !2704, size: 64, offset: 10048)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !2639, file: !6, line: 247, baseType: !2708, size: 64, offset: 10112)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !2639, file: !6, line: 248, baseType: !2712, size: 64, offset: 10176)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !2639, file: !6, line: 249, baseType: !2716, size: 64, offset: 10240)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !2639, file: !6, line: 255, baseType: !2745, size: 64, offset: 10304)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{!229, !2671, !260, !260}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !2639, file: !6, line: 256, baseType: !2745, size: 64, offset: 10368)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !2639, file: !6, line: 257, baseType: !2745, size: 64, offset: 10432)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !2639, file: !6, line: 258, baseType: !2745, size: 64, offset: 10496)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !2639, file: !6, line: 264, baseType: !2752, size: 64, offset: 10560)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 64)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{!229, !2671, !260}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !2639, file: !6, line: 265, baseType: !2752, size: 64, offset: 10624)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !2639, file: !6, line: 266, baseType: !2752, size: 64, offset: 10688)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !2639, file: !6, line: 267, baseType: !2752, size: 64, offset: 10752)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !2639, file: !6, line: 268, baseType: !2752, size: 64, offset: 10816)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !2639, file: !6, line: 272, baseType: !2760, size: 64, offset: 10880)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = !DISubroutineType(types: !2762)
!2762 = !{!2763, !2671}
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !2639, file: !6, line: 273, baseType: !2760, size: 64, offset: 10944)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !2639, file: !6, line: 274, baseType: !2760, size: 64, offset: 11008)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !2639, file: !6, line: 275, baseType: !2760, size: 64, offset: 11072)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !2639, file: !6, line: 276, baseType: !2760, size: 64, offset: 11136)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !2639, file: !6, line: 279, baseType: !2769, size: 64, offset: 11200)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{null, !2671, !260, !2763, !260}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !2639, file: !6, line: 280, baseType: !2769, size: 64, offset: 11264)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !2639, file: !6, line: 281, baseType: !2769, size: 64, offset: 11328)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !2639, file: !6, line: 284, baseType: !2680, size: 64, offset: 11392)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !2639, file: !6, line: 285, baseType: !2680, size: 64, offset: 11456)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !2639, file: !6, line: 286, baseType: !2777, size: 64, offset: 11520)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 64)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{!2780, !2671}
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !6, line: 82, flags: DIFlagFwdDecl)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !2639, file: !6, line: 287, baseType: !2784, size: 64, offset: 11584)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = !DISubroutineType(types: !2786)
!2786 = !{!2787, !2671}
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 64)
!2788 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !6, line: 120, baseType: !2789)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !6, line: 117, size: 256, elements: !2790)
!2790 = !{!2791, !2792}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2789, file: !6, line: 118, baseType: !2471, size: 128)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !2789, file: !6, line: 119, baseType: !2471, size: 128, offset: 128)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !2639, file: !6, line: 288, baseType: !2794, size: 64, offset: 11648)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 64)
!2795 = !DISubroutineType(types: !2796)
!2796 = !{!2797, !2671}
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !2639, file: !6, line: 289, baseType: !2799, size: 64, offset: 11712)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DISubroutineType(types: !2801)
!2801 = !{null, !2671, !2802}
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !6, line: 83, flags: DIFlagFwdDecl)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !2639, file: !6, line: 290, baseType: !2805, size: 64, offset: 11776)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = !DISubroutineType(types: !2807)
!2807 = !{!2808, !2671}
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !6, line: 126, baseType: !2810)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !6, line: 123, size: 32, elements: !2811)
!2811 = !{!2812, !2813}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2810, file: !6, line: 124, baseType: !258, size: 16)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2810, file: !6, line: 125, baseType: !245, size: 8, offset: 16)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !2639, file: !6, line: 291, baseType: !2815, size: 64, offset: 11840)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64)
!2816 = !DISubroutineType(types: !2817)
!2817 = !{!2818, !2671}
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !2639, file: !6, line: 299, baseType: !2820, size: 64, offset: 11904)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{null, !2671, !2823, !229, !2829}
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{null, !229, !260, !2826, !2826, !2827}
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !258)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !6, line: 162, baseType: !17)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !2639, file: !6, line: 309, baseType: !2831, size: 64, offset: 11968)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{null, !2671, !2834, !229}
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2835, size: 64)
!2835 = !DISubroutineType(types: !2836)
!2836 = !{null, !229, !260, !2826, !2826}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !2639, file: !6, line: 317, baseType: !2838, size: 64, offset: 12032)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 64)
!2839 = !DISubroutineType(types: !2840)
!2840 = !{null, !2671, !2841, !229, !2829}
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{null, !229, !260, !260, !2826, !2826}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !2639, file: !6, line: 327, baseType: !2845, size: 64, offset: 12096)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{null, !2671, !2834, !229, !2829}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !2639, file: !6, line: 337, baseType: !2849, size: 64, offset: 12160)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{null, !2671, !1796, !1796}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !2639, file: !6, line: 344, baseType: !2853, size: 64, offset: 12224)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{null, !2671, !260, !1796}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !2639, file: !6, line: 347, baseType: !2857, size: 64, offset: 12288)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{null, !2671, !2860}
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !2639, file: !6, line: 350, baseType: !2853, size: 64, offset: 12352)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !2639, file: !6, line: 351, baseType: !2853, size: 64, offset: 12416)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !2639, file: !6, line: 355, baseType: !2864, size: 64, offset: 12480)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!2867, !718, !2671}
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2869)
!2869 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !6, line: 355, flags: DIFlagFwdDecl)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !2639, file: !6, line: 359, baseType: !2871, size: 64, offset: 12544)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = !DISubroutineType(types: !2873)
!2873 = !{!2874, !718, !2671}
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 64)
!2875 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !6, line: 100, flags: DIFlagFwdDecl)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !2639, file: !6, line: 364, baseType: !2668, size: 64, offset: 12608)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !2639, file: !6, line: 367, baseType: !2668, size: 64, offset: 12672)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !2639, file: !6, line: 373, baseType: !2879, size: 64, offset: 12736)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{null, !2671, !672, !672}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !2639, file: !6, line: 376, baseType: !2668, size: 64, offset: 12800)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !2639, file: !6, line: 385, baseType: !2884, size: 64, offset: 12864)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = !DISubroutineType(types: !2886)
!2886 = !{null, !2671, !2887, !672, !2888}
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !6, line: 146, baseType: !2889)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2890, size: 64)
!2890 = !DISubroutineType(types: !2891)
!2891 = !{!260, !260, !229}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !2639, file: !6, line: 391, baseType: !2893, size: 64, offset: 12928)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DISubroutineType(types: !2895)
!2895 = !{null, !2671, !2896, !2902, !229, !2906}
!2896 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !6, line: 150, baseType: !2897)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!2900, !533, !2901, !260}
!2900 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !6, line: 143, baseType: !21)
!2901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !672)
!2902 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !6, line: 147, baseType: !2903)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{!260, !229, !260, !260}
!2906 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !6, line: 157, baseType: !27)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !2639, file: !6, line: 400, baseType: !2908, size: 64, offset: 12992)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!2909 = !DISubroutineType(types: !2910)
!2910 = !{null, !2671, !2888}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !2639, file: !6, line: 415, baseType: !2912, size: 64, offset: 13056)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!2913 = !DISubroutineType(types: !2914)
!2914 = !{null, !2671, !2915, !2888, !2902, !229, !2906}
!2915 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !6, line: 149, baseType: !2916)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DISubroutineType(types: !2918)
!2918 = !{!2900, !229, !260}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !2639, file: !6, line: 425, baseType: !2920, size: 64, offset: 13120)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = !DISubroutineType(types: !2922)
!2922 = !{null, !2671, !2915, !2902, !229, !2906}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !2639, file: !6, line: 435, baseType: !2924, size: 64, offset: 13184)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{null, !2671, !2888, !2915, !229}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !2639, file: !6, line: 444, baseType: !2928, size: 64, offset: 13248)
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 64)
!2929 = !DISubroutineType(types: !2930)
!2930 = !{null, !2671, !2915, !229}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !2639, file: !6, line: 455, baseType: !2932, size: 64, offset: 13312)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = !DISubroutineType(types: !2934)
!2934 = !{null, !2671, !2915, !2935, !229}
!2935 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !6, line: 148, baseType: !2936)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 64)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{null, !229, !260, !341}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !2639, file: !6, line: 464, baseType: !2940, size: 64, offset: 13376)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = !DISubroutineType(types: !2942)
!2942 = !{null, !2671, !2943, !2946, !229}
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{null, !229, !260, !229}
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = !DISubroutineType(types: !2948)
!2948 = !{!672, !229, !260}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2639, file: !6, line: 470, baseType: !2668, size: 64, offset: 13440)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "hair_out_dm", scope: !2187, file: !1965, line: 272, baseType: !2638, size: 64, offset: 960)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "target_ob", scope: !2187, file: !1965, line: 274, baseType: !718, size: 64, offset: 1024)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "lattice_deform_data", scope: !2187, file: !1965, line: 276, baseType: !2953, size: 64, offset: 1088)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeDeformData", file: !1965, line: 276, flags: DIFlagFwdDecl)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2187, file: !1965, line: 278, baseType: !718, size: 64, offset: 1152)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !2187, file: !1965, line: 280, baseType: !287, size: 128, offset: 1216)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2187, file: !1965, line: 282, baseType: !275, size: 512, offset: 1344)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2187, file: !1965, line: 284, baseType: !829, size: 512, offset: 1856)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2187, file: !1965, line: 285, baseType: !341, size: 32, offset: 2368)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "tree_frame", scope: !2187, file: !1965, line: 285, baseType: !341, size: 32, offset: 2400)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree_frame", scope: !2187, file: !1965, line: 285, baseType: !341, size: 32, offset: 2432)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2187, file: !1965, line: 286, baseType: !260, size: 32, offset: 2464)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "child_seed", scope: !2187, file: !1965, line: 286, baseType: !260, size: 32, offset: 2496)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2187, file: !1965, line: 287, baseType: !260, size: 32, offset: 2528)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !2187, file: !1965, line: 287, baseType: !260, size: 32, offset: 2560)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "totunexist", scope: !2187, file: !1965, line: 287, baseType: !260, size: 32, offset: 2592)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "totchild", scope: !2187, file: !1965, line: 287, baseType: !260, size: 32, offset: 2624)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !2187, file: !1965, line: 287, baseType: !260, size: 32, offset: 2656)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "totchildcache", scope: !2187, file: !1965, line: 287, baseType: !260, size: 32, offset: 2688)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2187, file: !1965, line: 288, baseType: !258, size: 16, offset: 2720)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "target_psys", scope: !2187, file: !1965, line: 288, baseType: !258, size: 16, offset: 2736)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "totkeyed", scope: !2187, file: !1965, line: 288, baseType: !258, size: 16, offset: 2752)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "bakespace", scope: !2187, file: !1965, line: 288, baseType: !258, size: 16, offset: 2768)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uvname", scope: !2187, file: !1965, line: 290, baseType: !2975, size: 1536, offset: 2784)
!2975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 1536, elements: !2976)
!2976 = !{!373, !277}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !2187, file: !1965, line: 293, baseType: !2978, size: 192, offset: 4320)
!2978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 192, elements: !2979)
!2979 = !{!2980}
!2980 = !DISubrange(count: 12)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "vg_neg", scope: !2187, file: !1965, line: 293, baseType: !258, size: 16, offset: 4512)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "rt3", scope: !2187, file: !1965, line: 293, baseType: !258, size: 16, offset: 4528)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "renderdata", scope: !2187, file: !1965, line: 296, baseType: !229, size: 64, offset: 4544)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !2187, file: !1965, line: 299, baseType: !1908, size: 64, offset: 4608)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !2187, file: !1965, line: 300, baseType: !287, size: 128, offset: 4672)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "effectors", scope: !2187, file: !1965, line: 302, baseType: !2184, size: 64, offset: 4800)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_springs", scope: !2187, file: !1965, line: 304, baseType: !2988, size: 64, offset: 4864)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSpring", file: !1965, line: 68, baseType: !2990)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSpring", file: !1965, line: 65, size: 128, elements: !2991)
!2991 = !{!2992, !2993, !2994}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !2990, file: !1965, line: 66, baseType: !341, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "particle_index", scope: !2990, file: !1965, line: 67, baseType: !452, size: 64, offset: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "delete_flag", scope: !2990, file: !1965, line: 67, baseType: !7, size: 32, offset: 96)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "tot_fluidsprings", scope: !2187, file: !1965, line: 305, baseType: !260, size: 32, offset: 4928)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fluidsprings", scope: !2187, file: !1965, line: 305, baseType: !260, size: 32, offset: 4960)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !2187, file: !1965, line: 307, baseType: !2020, size: 64, offset: 4992)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !2187, file: !1965, line: 308, baseType: !2555, size: 64, offset: 5056)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "pdd", scope: !2187, file: !1965, line: 310, baseType: !3000, size: 64, offset: 5120)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleDrawData", file: !714, line: 237, size: 704, elements: !3002)
!3002 = !{!3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3001, file: !714, line: 238, baseType: !1796, size: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !3001, file: !714, line: 238, baseType: !1796, size: 64, offset: 64)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "ndata", scope: !3001, file: !714, line: 239, baseType: !1796, size: 64, offset: 128)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "nd", scope: !3001, file: !714, line: 239, baseType: !1796, size: 64, offset: 192)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "cdata", scope: !3001, file: !714, line: 240, baseType: !1796, size: 64, offset: 256)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "cd", scope: !3001, file: !714, line: 240, baseType: !1796, size: 64, offset: 320)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "vedata", scope: !3001, file: !714, line: 241, baseType: !1796, size: 64, offset: 384)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "ved", scope: !3001, file: !714, line: 241, baseType: !1796, size: 64, offset: 448)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "ma_col", scope: !3001, file: !714, line: 242, baseType: !1796, size: 64, offset: 512)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "tot_vec_size", scope: !3001, file: !714, line: 243, baseType: !260, size: 32, offset: 576)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3001, file: !714, line: 243, baseType: !260, size: 32, offset: 608)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3001, file: !714, line: 244, baseType: !260, size: 32, offset: 640)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "totve", scope: !3001, file: !714, line: 244, baseType: !260, size: 32, offset: 672)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "dt_frac", scope: !2187, file: !1965, line: 312, baseType: !341, size: 32, offset: 5184)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2187, file: !1965, line: 313, baseType: !341, size: 32, offset: 5216)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !1934, file: !1935, line: 244, baseType: !1963, size: 64, offset: 1920)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !1934, file: !1935, line: 245, baseType: !2020, size: 64, offset: 1984)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !1934, file: !1935, line: 246, baseType: !1796, size: 64, offset: 2048)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cache", scope: !1934, file: !1935, line: 247, baseType: !2797, size: 64, offset: 2112)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !1934, file: !1935, line: 249, baseType: !2482, size: 64, offset: 2176)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !1934, file: !1935, line: 250, baseType: !285, size: 128, offset: 2240)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1934, file: !1935, line: 252, baseType: !260, size: 32, offset: 2368)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "totframes", scope: !1934, file: !1935, line: 252, baseType: !260, size: 32, offset: 2400)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !1934, file: !1935, line: 252, baseType: !260, size: 32, offset: 2432)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "edited", scope: !1934, file: !1935, line: 252, baseType: !260, size: 32, offset: 2464)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "sel_col", scope: !1934, file: !1935, line: 254, baseType: !3029, size: 24, offset: 2496)
!3029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !672, size: 24, elements: !564)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "nosel_col", scope: !1934, file: !1935, line: 255, baseType: !3029, size: 24, offset: 2520)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !1909, file: !888, line: 208, baseType: !2478, size: 64, offset: 10496)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !1846, file: !888, line: 340, baseType: !287, size: 128, offset: 2880)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !1846, file: !888, line: 342, baseType: !2247, size: 64, offset: 3008)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "lcom", scope: !1846, file: !888, line: 344, baseType: !563, size: 96, offset: 3072)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "lrot", scope: !1846, file: !888, line: 345, baseType: !1763, size: 288, offset: 3168)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "lscale", scope: !1846, file: !888, line: 346, baseType: !1763, size: 288, offset: 3456)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !1846, file: !888, line: 348, baseType: !260, size: 32, offset: 3744)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !719, file: !78, line: 265, baseType: !2251, size: 64, offset: 10048)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !719, file: !78, line: 267, baseType: !245, size: 8, offset: 10112)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !719, file: !78, line: 268, baseType: !245, size: 8, offset: 10120)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !719, file: !78, line: 269, baseType: !258, size: 16, offset: 10128)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !719, file: !78, line: 270, baseType: !341, size: 32, offset: 10144)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !719, file: !78, line: 272, baseType: !3044, size: 64, offset: 10176)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !96, line: 732, flags: DIFlagFwdDecl)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !719, file: !78, line: 275, baseType: !3047, size: 64, offset: 10240)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !78, line: 275, flags: DIFlagFwdDecl)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !719, file: !78, line: 277, baseType: !2638, size: 64, offset: 10304)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !719, file: !78, line: 277, baseType: !2638, size: 64, offset: 10368)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !719, file: !78, line: 278, baseType: !1702, size: 64, offset: 10432)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !719, file: !78, line: 279, baseType: !1702, size: 64, offset: 10496)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !719, file: !78, line: 280, baseType: !7, size: 32, offset: 10560)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !719, file: !78, line: 281, baseType: !7, size: 32, offset: 10592)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !719, file: !78, line: 283, baseType: !285, size: 128, offset: 10624)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !719, file: !78, line: 284, baseType: !285, size: 128, offset: 10752)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !719, file: !78, line: 285, baseType: !3058, size: 64, offset: 10880)
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !719, file: !78, line: 287, baseType: !3060, size: 64, offset: 10944)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !78, line: 59, flags: DIFlagFwdDecl)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !719, file: !78, line: 288, baseType: !3063, size: 64, offset: 11008)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !78, line: 288, flags: DIFlagFwdDecl)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !719, file: !78, line: 290, baseType: !511, size: 64, offset: 11072)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !719, file: !78, line: 291, baseType: !3067, size: 64, offset: 11136)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !411, line: 65, baseType: !1024)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !719, file: !78, line: 293, baseType: !285, size: 128, offset: 11200)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !719, file: !78, line: 294, baseType: !3071, size: 64, offset: 11328)
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 64)
!3072 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !78, line: 113, baseType: !3073)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !78, line: 108, size: 256, elements: !3074)
!3074 = !{!3075, !3077, !3078, !3079, !3080}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3073, file: !78, line: 109, baseType: !3076, size: 64)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3073, size: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3073, file: !78, line: 109, baseType: !3076, size: 64, offset: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3073, file: !78, line: 110, baseType: !718, size: 64, offset: 128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3073, file: !78, line: 111, baseType: !260, size: 32, offset: 192)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !3073, file: !78, line: 112, baseType: !341, size: 32, offset: 224)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "hit", scope: !715, file: !714, line: 205, baseType: !718, size: 64, offset: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !715, file: !714, line: 206, baseType: !718, size: 64, offset: 128)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !715, file: !714, line: 207, baseType: !718, size: 64, offset: 192)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "emitter", scope: !715, file: !714, line: 208, baseType: !718, size: 64, offset: 256)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "md", scope: !715, file: !714, line: 210, baseType: !3086, size: 64, offset: 320)
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 64)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollisionModifierData", file: !96, line: 568, size: 1536, elements: !3088)
!3088 = !{!3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3087, file: !96, line: 569, baseType: !2500, size: 896)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3087, file: !96, line: 571, baseType: !559, size: 64, offset: 896)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "xnew", scope: !3087, file: !96, line: 572, baseType: !559, size: 64, offset: 960)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "xold", scope: !3087, file: !96, line: 573, baseType: !559, size: 64, offset: 1024)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "current_xnew", scope: !3087, file: !96, line: 574, baseType: !559, size: 64, offset: 1088)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "current_x", scope: !3087, file: !96, line: 575, baseType: !559, size: 64, offset: 1152)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "current_v", scope: !3087, file: !96, line: 576, baseType: !559, size: 64, offset: 1216)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "mfaces", scope: !3087, file: !96, line: 578, baseType: !522, size: 64, offset: 1280)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "numverts", scope: !3087, file: !96, line: 580, baseType: !7, size: 32, offset: 1344)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "numfaces", scope: !3087, file: !96, line: 581, baseType: !7, size: 32, offset: 1376)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "time_x", scope: !3087, file: !96, line: 582, baseType: !341, size: 32, offset: 1408)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "time_xnew", scope: !3087, file: !96, line: 582, baseType: !341, size: 32, offset: 1440)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !3087, file: !96, line: 583, baseType: !2555, size: 64, offset: 1472)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !715, file: !714, line: 212, baseType: !341, size: 32, offset: 384)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "fac1", scope: !715, file: !714, line: 213, baseType: !341, size: 32, offset: 416)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "fac2", scope: !715, file: !714, line: 213, baseType: !341, size: 32, offset: 448)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !715, file: !714, line: 215, baseType: !341, size: 32, offset: 480)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "old_cfra", scope: !715, file: !714, line: 215, baseType: !341, size: 32, offset: 512)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "original_ray_length", scope: !715, file: !714, line: 217, baseType: !341, size: 32, offset: 544)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "prev_index", scope: !715, file: !714, line: 219, baseType: !260, size: 32, offset: 576)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "pce", scope: !715, file: !714, line: 221, baseType: !3110, size: 1280, offset: 640)
!3110 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleCollisionElement", file: !714, line: 200, baseType: !3111)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCollisionElement", file: !714, line: 182, size: 1280, elements: !3112)
!3112 = !{!3113, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3111, file: !714, line: 184, baseType: !3114, size: 256)
!3114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1796, size: 256, elements: !474)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3111, file: !714, line: 184, baseType: !3114, size: 256, offset: 256)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "x0", scope: !3111, file: !714, line: 187, baseType: !563, size: 96, offset: 512)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !3111, file: !714, line: 187, baseType: !563, size: 96, offset: 608)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !3111, file: !714, line: 187, baseType: !563, size: 96, offset: 704)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3111, file: !714, line: 187, baseType: !563, size: 96, offset: 800)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "nor", scope: !3111, file: !714, line: 190, baseType: !563, size: 96, offset: 896)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !3111, file: !714, line: 190, baseType: !563, size: 96, offset: 992)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3111, file: !714, line: 190, baseType: !511, size: 64, offset: 1088)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !3111, file: !714, line: 193, baseType: !260, size: 32, offset: 1152)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3111, file: !714, line: 196, baseType: !260, size: 32, offset: 1184)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "inv_nor", scope: !3111, file: !714, line: 199, baseType: !258, size: 16, offset: 1216)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "inside", scope: !3111, file: !714, line: 199, baseType: !258, size: 16, offset: 1232)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !715, file: !714, line: 226, baseType: !341, size: 32, offset: 1920)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "inv_total_time", scope: !715, file: !714, line: 226, baseType: !341, size: 32, offset: 1952)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "inv_timestep", scope: !715, file: !714, line: 226, baseType: !341, size: 32, offset: 1984)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !715, file: !714, line: 228, baseType: !341, size: 32, offset: 2016)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "co1", scope: !715, file: !714, line: 229, baseType: !563, size: 96, offset: 2048)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "co2", scope: !715, file: !714, line: 229, baseType: !563, size: 96, offset: 2144)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "ve1", scope: !715, file: !714, line: 230, baseType: !563, size: 96, offset: 2240)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "ve2", scope: !715, file: !714, line: 230, baseType: !563, size: 96, offset: 2336)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !715, file: !714, line: 232, baseType: !563, size: 96, offset: 2432)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "boid_z", scope: !715, file: !714, line: 232, baseType: !341, size: 32, offset: 2528)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "boid", scope: !715, file: !714, line: 234, baseType: !260, size: 32, offset: 2560)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3139 = !DIDerivedType(tag: DW_TAG_typedef, name: "SPHData", file: !714, line: 107, baseType: !3140)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SPHData", file: !714, line: 91, size: 1216, elements: !3141)
!3141 = !{!3142, !3148, !3149, !3150, !3153, !3154, !3155, !3156, !3157, !3158, !3162}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !3140, file: !714, line: 92, baseType: !3143, size: 640)
!3143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3144, size: 640, elements: !3146)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 64)
!3145 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSystem", file: !1965, line: 314, baseType: !2187)
!3146 = !{!3147}
!3147 = !DISubrange(count: 10)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !3140, file: !714, line: 93, baseType: !2461, size: 64, offset: 640)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !3140, file: !714, line: 94, baseType: !341, size: 32, offset: 704)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !3140, file: !714, line: 95, baseType: !3151, size: 64, offset: 768)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeHash", file: !2566, line: 34, flags: DIFlagFwdDecl)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3140, file: !714, line: 96, baseType: !1796, size: 64, offset: 832)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "hfac", scope: !3140, file: !714, line: 97, baseType: !341, size: 32, offset: 896)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !3140, file: !714, line: 100, baseType: !260, size: 32, offset: 928)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "element_size", scope: !3140, file: !714, line: 101, baseType: !341, size: 32, offset: 960)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "flow", scope: !3140, file: !714, line: 102, baseType: !563, size: 96, offset: 992)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "force_cb", scope: !3140, file: !714, line: 105, baseType: !3159, size: 64, offset: 1088)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = !DISubroutineType(types: !3161)
!3161 = !{null, !229, !1988, !1796, !1796}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "density_cb", scope: !3140, file: !714, line: 106, baseType: !2936, size: 64, offset: 1152)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "SPHRangeData", file: !3, line: 2557, baseType: !3165)
!3165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SPHRangeData", file: !3, line: 2544, size: 65920, elements: !3166)
!3166 = !{!3167, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "neighbors", scope: !3165, file: !3, line: 2545, baseType: !3168, size: 65536)
!3168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3169, size: 65536, elements: !3174)
!3169 = !DIDerivedType(tag: DW_TAG_typedef, name: "SPHNeighbor", file: !3, line: 2542, baseType: !3170)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SPHNeighbor", file: !3, line: 2539, size: 128, elements: !3171)
!3171 = !{!3172, !3173}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !3170, file: !3, line: 2540, baseType: !3144, size: 64)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3170, file: !3, line: 2541, baseType: !260, size: 32, offset: 64)
!3174 = !{!3175}
!3175 = !DISubrange(count: 512)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "tot_neighbors", scope: !3165, file: !3, line: 2546, baseType: !260, size: 32, offset: 65536)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3165, file: !3, line: 2548, baseType: !1796, size: 64, offset: 65600)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "npsys", scope: !3165, file: !3, line: 2550, baseType: !3144, size: 64, offset: 65664)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !3165, file: !3, line: 2551, baseType: !2461, size: 64, offset: 65728)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !3165, file: !3, line: 2553, baseType: !341, size: 32, offset: 65792)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !3165, file: !3, line: 2554, baseType: !341, size: 32, offset: 65824)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "massfac", scope: !3165, file: !3, line: 2555, baseType: !341, size: 32, offset: 65856)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "use_size", scope: !3165, file: !3, line: 2556, baseType: !260, size: 32, offset: 65888)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidRule", file: !87, line: 62, baseType: !3186)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidRule", file: !87, line: 58, size: 448, elements: !3187)
!3187 = !{!3188, !3190, !3191, !3192, !3193}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3186, file: !87, line: 59, baseType: !3189, size: 64)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 64)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3186, file: !87, line: 59, baseType: !3189, size: 64, offset: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3186, file: !87, line: 60, baseType: !260, size: 32, offset: 128)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3186, file: !87, line: 60, baseType: !260, size: 32, offset: 160)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3186, file: !87, line: 61, baseType: !701, size: 256, offset: 192)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3195 = !DIDerivedType(tag: DW_TAG_typedef, name: "EfData", file: !3, line: 3057, baseType: !3196)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EfData", file: !3, line: 3053, size: 640, elements: !3197)
!3197 = !{!3198, !3217, !3239}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "ptex", scope: !3196, file: !3, line: 3054, baseType: !3199, size: 480)
!3199 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleTexture", file: !714, line: 115, baseType: !3200)
!3200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleTexture", file: !714, line: 109, size: 480, elements: !3201)
!3201 = !{!3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "ivel", scope: !3200, file: !714, line: 110, baseType: !341, size: 32)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3200, file: !714, line: 111, baseType: !341, size: 32, offset: 32)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "life", scope: !3200, file: !714, line: 111, baseType: !341, size: 32, offset: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "exist", scope: !3200, file: !714, line: 111, baseType: !341, size: 32, offset: 96)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3200, file: !714, line: 111, baseType: !341, size: 32, offset: 128)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "damp", scope: !3200, file: !714, line: 112, baseType: !341, size: 32, offset: 160)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3200, file: !714, line: 112, baseType: !341, size: 32, offset: 192)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "field", scope: !3200, file: !714, line: 112, baseType: !341, size: 32, offset: 224)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3200, file: !714, line: 113, baseType: !341, size: 32, offset: 256)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "clump", scope: !3200, file: !714, line: 113, baseType: !341, size: 32, offset: 288)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !3200, file: !714, line: 113, baseType: !341, size: 32, offset: 320)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "effector", scope: !3200, file: !714, line: 113, baseType: !341, size: 32, offset: 352)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "rough1", scope: !3200, file: !714, line: 114, baseType: !341, size: 32, offset: 384)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "rough2", scope: !3200, file: !714, line: 114, baseType: !341, size: 32, offset: 416)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "roughe", scope: !3200, file: !714, line: 114, baseType: !341, size: 32, offset: 448)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "sim", scope: !3196, file: !3, line: 3055, baseType: !3218, size: 64, offset: 512)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSimulationData", file: !714, line: 89, baseType: !3220)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSimulationData", file: !714, line: 79, size: 384, elements: !3221)
!3221 = !{!3222, !3223, !3224, !3225, !3237, !3238}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3220, file: !714, line: 80, baseType: !1027, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3220, file: !714, line: 81, baseType: !718, size: 64, offset: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !3220, file: !714, line: 82, baseType: !2186, size: 64, offset: 128)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "psmd", scope: !3220, file: !714, line: 83, baseType: !3226, size: 64, offset: 192)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystemModifierData", file: !96, line: 665, size: 1152, elements: !3228)
!3228 = !{!3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3227, file: !96, line: 666, baseType: !2500, size: 896)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !3227, file: !96, line: 668, baseType: !2186, size: 64, offset: 896)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !3227, file: !96, line: 669, baseType: !2638, size: 64, offset: 960)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "totdmvert", scope: !3227, file: !96, line: 670, baseType: !260, size: 32, offset: 1024)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "totdmedge", scope: !3227, file: !96, line: 670, baseType: !260, size: 32, offset: 1056)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "totdmface", scope: !3227, file: !96, line: 670, baseType: !260, size: 32, offset: 1088)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3227, file: !96, line: 671, baseType: !258, size: 16, offset: 1120)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3227, file: !96, line: 671, baseType: !258, size: 16, offset: 1136)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "colliders", scope: !3220, file: !714, line: 84, baseType: !2184, size: 64, offset: 256)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "courant_num", scope: !3220, file: !714, line: 88, baseType: !341, size: 32, offset: 320)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !3196, file: !3, line: 3056, baseType: !2461, size: 64, offset: 576)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClothModifierData", file: !96, line: 566, baseType: !2497)
!3242 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !260)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!3246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleThread", file: !714, line: 167, baseType: !3248)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleThread", file: !714, line: 163, size: 256, elements: !3249)
!3249 = !{!3250, !3295, !3296, !3297, !3298}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !3248, file: !714, line: 164, baseType: !3251, size: 64)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleThreadContext", file: !714, line: 161, baseType: !3253)
!3253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleThreadContext", file: !714, line: 132, size: 1984, elements: !3254)
!3254 = !{!3255, !3256, !3257, !3258, !3259, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "sim", scope: !3253, file: !714, line: 134, baseType: !3220, size: 384)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !3253, file: !714, line: 135, baseType: !2638, size: 64, offset: 384)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !3253, file: !714, line: 136, baseType: !386, size: 64, offset: 448)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !3253, file: !714, line: 139, baseType: !2020, size: 64, offset: 512)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "seams", scope: !3253, file: !714, line: 141, baseType: !3260, size: 64, offset: 576)
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSeam", file: !714, line: 117, size: 512, elements: !3262)
!3262 = !{!3263, !3264, !3265, !3266, !3267, !3268}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "v0", scope: !3261, file: !714, line: 118, baseType: !563, size: 96)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3261, file: !714, line: 118, baseType: !563, size: 96, offset: 96)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "nor", scope: !3261, file: !714, line: 119, baseType: !563, size: 96, offset: 192)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3261, file: !714, line: 119, baseType: !563, size: 96, offset: 288)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "tan", scope: !3261, file: !714, line: 119, baseType: !563, size: 96, offset: 384)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "length2", scope: !3261, file: !714, line: 120, baseType: !341, size: 32, offset: 480)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "totseam", scope: !3253, file: !714, line: 142, baseType: !260, size: 32, offset: 640)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !3253, file: !714, line: 144, baseType: !1796, size: 64, offset: 704)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "jitoff", scope: !3253, file: !714, line: 144, baseType: !1796, size: 64, offset: 768)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3253, file: !714, line: 144, baseType: !1796, size: 64, offset: 832)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "maxweight", scope: !3253, file: !714, line: 145, baseType: !341, size: 32, offset: 896)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3253, file: !714, line: 146, baseType: !2797, size: 64, offset: 960)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !3253, file: !714, line: 146, baseType: !2797, size: 64, offset: 1024)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "jitlevel", scope: !3253, file: !714, line: 146, baseType: !260, size: 32, offset: 1088)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !3253, file: !714, line: 148, baseType: !260, size: 32, offset: 1120)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "cfrom", scope: !3253, file: !714, line: 148, baseType: !260, size: 32, offset: 1152)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "distr", scope: !3253, file: !714, line: 148, baseType: !260, size: 32, offset: 1184)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "tpars", scope: !3253, file: !714, line: 150, baseType: !1963, size: 64, offset: 1216)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "editupdate", scope: !3253, file: !714, line: 153, baseType: !260, size: 32, offset: 1280)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "between", scope: !3253, file: !714, line: 153, baseType: !260, size: 32, offset: 1312)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "steps", scope: !3253, file: !714, line: 153, baseType: !260, size: 32, offset: 1344)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "totchild", scope: !3253, file: !714, line: 154, baseType: !260, size: 32, offset: 1376)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "totparent", scope: !3253, file: !714, line: 154, baseType: !260, size: 32, offset: 1408)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "parent_pass", scope: !3253, file: !714, line: 154, baseType: !260, size: 32, offset: 1440)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !3253, file: !714, line: 156, baseType: !341, size: 32, offset: 1472)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "vg_length", scope: !3253, file: !714, line: 158, baseType: !1796, size: 64, offset: 1536)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "vg_clump", scope: !3253, file: !714, line: 158, baseType: !1796, size: 64, offset: 1600)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "vg_kink", scope: !3253, file: !714, line: 158, baseType: !1796, size: 64, offset: 1664)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "vg_rough1", scope: !3253, file: !714, line: 159, baseType: !1796, size: 64, offset: 1728)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "vg_rough2", scope: !3253, file: !714, line: 159, baseType: !1796, size: 64, offset: 1792)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "vg_roughe", scope: !3253, file: !714, line: 159, baseType: !1796, size: 64, offset: 1856)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "vg_effector", scope: !3253, file: !714, line: 160, baseType: !1796, size: 64, offset: 1920)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !3248, file: !714, line: 165, baseType: !1839, size: 64, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "rng_path", scope: !3248, file: !714, line: 165, baseType: !1839, size: 64, offset: 128)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3248, file: !714, line: 166, baseType: !260, size: 32, offset: 192)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !3248, file: !714, line: 166, baseType: !260, size: 32, offset: 224)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleInstanceModifierData", file: !96, line: 697, baseType: !3301)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleInstanceModifierData", file: !96, line: 691, size: 1088, elements: !3302)
!3302 = !{!3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3301, file: !96, line: 692, baseType: !2500, size: 896)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3301, file: !96, line: 694, baseType: !718, size: 64, offset: 896)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !3301, file: !96, line: 695, baseType: !258, size: 16, offset: 960)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3301, file: !96, line: 695, baseType: !258, size: 16, offset: 976)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "axis", scope: !3301, file: !96, line: 695, baseType: !258, size: 16, offset: 992)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3301, file: !96, line: 695, baseType: !258, size: 16, offset: 1008)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !3301, file: !96, line: 696, baseType: !341, size: 32, offset: 1024)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "random_position", scope: !3301, file: !96, line: 696, baseType: !341, size: 32, offset: 1056)
!3311 = !{!0, !3312, !3314, !3316}
!3312 = !DIGlobalVariableExpression(var: !3313, expr: !DIExpression(DW_OP_constu, 1008875459, DW_OP_stack_value))
!3313 = distinct !DIGlobalVariable(name: "MIN_TIMESTEP", scope: !2, file: !3, line: 4205, type: !2677, isLocal: true, isDefinition: true)
!3314 = !DIGlobalVariableExpression(var: !3315, expr: !DIExpression(DW_OP_constu, 1036831949, DW_OP_stack_value))
!3315 = distinct !DIGlobalVariable(name: "TIMESTEP_EXPANSION_FACTOR", scope: !2, file: !3, line: 4209, type: !2677, isLocal: true, isDefinition: true)
!3316 = !DIGlobalVariableExpression(var: !3317, expr: !DIExpression(DW_OP_constu, 1069547520, DW_OP_stack_value))
!3317 = distinct !DIGlobalVariable(name: "TIMESTEP_EXPANSION_TOLERANCE", scope: !2, file: !3, line: 4210, type: !2677, isLocal: true, isDefinition: true)
!3318 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadRWMutex", file: !3319, line: 148, baseType: !3320)
!3319 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3320 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_rwlock_t", file: !3321, line: 10, baseType: !3322)
!3321 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3322 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1703, line: 26, baseType: !3323)
!3323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !1705, line: 42, baseType: !7)
!3324 = !{i32 7, !"Dwarf Version", i32 4}
!3325 = !{i32 2, !"Debug Info Version", i32 3}
!3326 = !{i32 1, !"wchar_size", i32 4}
!3327 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3328 = distinct !DISubprogram(name: "psys_get_current_display_percentage", scope: !3, file: !3, line: 123, type: !3329, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!3329 = !DISubroutineType(types: !3330)
!3330 = !{!341, !3144}
!3331 = !{}
!3332 = !DILocalVariable(name: "psys", arg: 1, scope: !3328, file: !3, line: 123, type: !3144)
!3333 = !DILocation(line: 123, column: 59, scope: !3328)
!3334 = !DILocalVariable(name: "part", scope: !3328, file: !3, line: 125, type: !2192)
!3335 = !DILocation(line: 125, column: 20, scope: !3328)
!3336 = !DILocation(line: 125, column: 25, scope: !3328)
!3337 = !DILocation(line: 125, column: 31, scope: !3328)
!3338 = !DILocation(line: 127, column: 7, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3328, file: !3, line: 127, column: 6)
!3340 = !DILocation(line: 127, column: 13, scope: !3339)
!3341 = !DILocation(line: 127, column: 24, scope: !3339)
!3342 = !DILocation(line: 127, column: 50, scope: !3339)
!3343 = !DILocation(line: 127, column: 28, scope: !3339)
!3344 = !DILocation(line: 127, column: 57, scope: !3339)
!3345 = !DILocation(line: 128, column: 7, scope: !3339)
!3346 = !DILocation(line: 128, column: 13, scope: !3339)
!3347 = !DILocation(line: 128, column: 23, scope: !3339)
!3348 = !DILocation(line: 128, column: 26, scope: !3339)
!3349 = !DILocation(line: 128, column: 32, scope: !3339)
!3350 = !DILocation(line: 128, column: 44, scope: !3339)
!3351 = !DILocation(line: 129, column: 7, scope: !3339)
!3352 = !DILocation(line: 129, column: 13, scope: !3339)
!3353 = !DILocation(line: 129, column: 25, scope: !3339)
!3354 = !DILocation(line: 129, column: 30, scope: !3339)
!3355 = !DILocation(line: 127, column: 6, scope: !3328)
!3356 = !DILocation(line: 131, column: 3, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 130, column: 2)
!3358 = !DILocation(line: 134, column: 9, scope: !3328)
!3359 = !DILocation(line: 134, column: 15, scope: !3328)
!3360 = !DILocation(line: 134, column: 21, scope: !3328)
!3361 = !DILocation(line: 134, column: 25, scope: !3328)
!3362 = !DILocation(line: 134, column: 2, scope: !3328)
!3363 = !DILocation(line: 135, column: 1, scope: !3328)
!3364 = distinct !DISubprogram(name: "particles_are_dynamic", scope: !3, file: !3, line: 112, type: !3365, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!3365 = !DISubroutineType(types: !3366)
!3366 = !{!260, !3144}
!3367 = !DILocalVariable(name: "psys", arg: 1, scope: !3364, file: !3, line: 112, type: !3144)
!3368 = !DILocation(line: 112, column: 50, scope: !3364)
!3369 = !DILocation(line: 114, column: 6, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 114, column: 6)
!3371 = !DILocation(line: 114, column: 12, scope: !3370)
!3372 = !DILocation(line: 114, column: 24, scope: !3370)
!3373 = !DILocation(line: 114, column: 29, scope: !3370)
!3374 = !DILocation(line: 114, column: 6, scope: !3364)
!3375 = !DILocation(line: 115, column: 3, scope: !3370)
!3376 = !DILocation(line: 117, column: 6, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 117, column: 6)
!3378 = !DILocation(line: 117, column: 12, scope: !3377)
!3379 = !DILocation(line: 117, column: 18, scope: !3377)
!3380 = !DILocation(line: 117, column: 23, scope: !3377)
!3381 = !DILocation(line: 117, column: 6, scope: !3364)
!3382 = !DILocation(line: 118, column: 10, scope: !3377)
!3383 = !DILocation(line: 118, column: 16, scope: !3377)
!3384 = !DILocation(line: 118, column: 21, scope: !3377)
!3385 = !DILocation(line: 118, column: 3, scope: !3377)
!3386 = !DILocation(line: 120, column: 10, scope: !3377)
!3387 = !DILocation(line: 120, column: 3, scope: !3377)
!3388 = !DILocation(line: 121, column: 1, scope: !3364)
!3389 = distinct !DISubprogram(name: "psys_reset", scope: !3, file: !3, line: 147, type: !3390, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{null, !3144, !260}
!3392 = !DILocalVariable(name: "psys", arg: 1, scope: !3389, file: !3, line: 147, type: !3144)
!3393 = !DILocation(line: 147, column: 33, scope: !3389)
!3394 = !DILocalVariable(name: "mode", arg: 2, scope: !3389, file: !3, line: 147, type: !260)
!3395 = !DILocation(line: 147, column: 43, scope: !3389)
!3396 = !DILocalVariable(name: "pa", scope: !3389, file: !3, line: 149, type: !2461)
!3397 = !DILocation(line: 149, column: 2, scope: !3389)
!3398 = !DILocalVariable(name: "p", scope: !3389, file: !3, line: 149, type: !260)
!3399 = !DILocation(line: 151, column: 6, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 151, column: 6)
!3401 = !DILocation(line: 151, column: 6, scope: !3389)
!3402 = !DILocation(line: 152, column: 7, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 152, column: 7)
!3404 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 151, column: 56)
!3405 = !DILocation(line: 152, column: 12, scope: !3403)
!3406 = !DILocation(line: 152, column: 30, scope: !3403)
!3407 = !DILocation(line: 152, column: 35, scope: !3403)
!3408 = !DILocation(line: 152, column: 41, scope: !3403)
!3409 = !DILocation(line: 152, column: 46, scope: !3403)
!3410 = !DILocation(line: 152, column: 7, scope: !3404)
!3411 = !DILocation(line: 154, column: 8, scope: !3412)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !3, line: 154, column: 8)
!3413 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 152, column: 62)
!3414 = !DILocation(line: 154, column: 14, scope: !3412)
!3415 = !DILocation(line: 154, column: 39, scope: !3412)
!3416 = !DILocation(line: 154, column: 25, scope: !3412)
!3417 = !DILocation(line: 154, column: 22, scope: !3412)
!3418 = !DILocation(line: 154, column: 8, scope: !3413)
!3419 = !DILocation(line: 155, column: 25, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3412, file: !3, line: 154, column: 52)
!3421 = !DILocation(line: 155, column: 5, scope: !3420)
!3422 = !DILocation(line: 156, column: 5, scope: !3420)
!3423 = !DILocation(line: 156, column: 11, scope: !3420)
!3424 = !DILocation(line: 156, column: 18, scope: !3420)
!3425 = !DILocation(line: 157, column: 4, scope: !3420)
!3426 = !DILocation(line: 159, column: 4, scope: !3413)
!3427 = !DILocation(line: 159, column: 10, scope: !3413)
!3428 = !DILocation(line: 159, column: 18, scope: !3413)
!3429 = !DILocation(line: 160, column: 4, scope: !3413)
!3430 = !DILocation(line: 160, column: 10, scope: !3413)
!3431 = !DILocation(line: 160, column: 15, scope: !3413)
!3432 = !DILocation(line: 162, column: 8, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3413, file: !3, line: 162, column: 8)
!3434 = !DILocation(line: 162, column: 14, scope: !3433)
!3435 = !DILocation(line: 162, column: 19, scope: !3433)
!3436 = !DILocation(line: 162, column: 22, scope: !3433)
!3437 = !DILocation(line: 162, column: 28, scope: !3433)
!3438 = !DILocation(line: 162, column: 8, scope: !3413)
!3439 = !DILocation(line: 163, column: 5, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 162, column: 39)
!3441 = !DILocation(line: 163, column: 11, scope: !3440)
!3442 = !DILocation(line: 163, column: 21, scope: !3440)
!3443 = !DILocation(line: 163, column: 27, scope: !3440)
!3444 = !DILocation(line: 164, column: 5, scope: !3440)
!3445 = !DILocation(line: 164, column: 11, scope: !3440)
!3446 = !DILocation(line: 164, column: 16, scope: !3440)
!3447 = !DILocation(line: 165, column: 5, scope: !3440)
!3448 = !DILocation(line: 165, column: 11, scope: !3440)
!3449 = !DILocation(line: 165, column: 21, scope: !3440)
!3450 = !DILocation(line: 166, column: 4, scope: !3440)
!3451 = !DILocation(line: 167, column: 3, scope: !3413)
!3452 = !DILocation(line: 168, column: 2, scope: !3404)
!3453 = !DILocation(line: 169, column: 11, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 169, column: 11)
!3455 = !DILocation(line: 169, column: 16, scope: !3454)
!3456 = !DILocation(line: 169, column: 11, scope: !3400)
!3457 = !DILocation(line: 171, column: 3, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !3, line: 171, column: 3)
!3459 = distinct !DILexicalBlock(scope: !3454, file: !3, line: 169, column: 42)
!3460 = !DILocation(line: 171, column: 3, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3458, file: !3, line: 171, column: 3)
!3462 = !DILocation(line: 172, column: 4, scope: !3461)
!3463 = !DILocation(line: 172, column: 8, scope: !3461)
!3464 = !DILocation(line: 172, column: 13, scope: !3461)
!3465 = distinct !{!3465, !3457, !3466}
!3466 = !DILocation(line: 172, column: 16, scope: !3458)
!3467 = !DILocation(line: 173, column: 2, scope: !3459)
!3468 = !DILocation(line: 176, column: 6, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 176, column: 6)
!3470 = !DILocation(line: 176, column: 12, scope: !3469)
!3471 = !DILocation(line: 176, column: 6, scope: !3389)
!3472 = !DILocation(line: 177, column: 3, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 176, column: 19)
!3474 = !DILocation(line: 177, column: 13, scope: !3473)
!3475 = !DILocation(line: 177, column: 19, scope: !3473)
!3476 = !DILocation(line: 178, column: 3, scope: !3473)
!3477 = !DILocation(line: 178, column: 9, scope: !3473)
!3478 = !DILocation(line: 178, column: 14, scope: !3473)
!3479 = !DILocation(line: 179, column: 2, scope: !3473)
!3480 = !DILocation(line: 181, column: 2, scope: !3389)
!3481 = !DILocation(line: 181, column: 8, scope: !3389)
!3482 = !DILocation(line: 181, column: 16, scope: !3389)
!3483 = !DILocation(line: 184, column: 23, scope: !3389)
!3484 = !DILocation(line: 184, column: 29, scope: !3389)
!3485 = !DILocation(line: 184, column: 35, scope: !3389)
!3486 = !DILocation(line: 184, column: 2, scope: !3389)
!3487 = !DILocation(line: 187, column: 25, scope: !3389)
!3488 = !DILocation(line: 187, column: 31, scope: !3389)
!3489 = !DILocation(line: 187, column: 2, scope: !3389)
!3490 = !DILocation(line: 189, column: 6, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 189, column: 6)
!3492 = !DILocation(line: 189, column: 12, scope: !3491)
!3493 = !DILocation(line: 189, column: 6, scope: !3389)
!3494 = !DILocation(line: 190, column: 3, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 189, column: 27)
!3496 = !DILocation(line: 190, column: 13, scope: !3495)
!3497 = !DILocation(line: 190, column: 19, scope: !3495)
!3498 = !DILocation(line: 191, column: 3, scope: !3495)
!3499 = !DILocation(line: 191, column: 9, scope: !3495)
!3500 = !DILocation(line: 191, column: 23, scope: !3495)
!3501 = !DILocation(line: 192, column: 2, scope: !3495)
!3502 = !DILocation(line: 194, column: 27, scope: !3389)
!3503 = !DILocation(line: 194, column: 33, scope: !3389)
!3504 = !DILocation(line: 194, column: 52, scope: !3389)
!3505 = !DILocation(line: 194, column: 2, scope: !3389)
!3506 = !DILocation(line: 194, column: 8, scope: !3389)
!3507 = !DILocation(line: 194, column: 25, scope: !3389)
!3508 = !DILocation(line: 195, column: 1, scope: !3389)
!3509 = distinct !DISubprogram(name: "tot_particles", scope: !3, file: !3, line: 137, type: !3510, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{!260, !3144, !3512}
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheID", file: !1935, line: 171, baseType: !2031)
!3514 = !DILocalVariable(name: "psys", arg: 1, scope: !3509, file: !3, line: 137, type: !3144)
!3515 = !DILocation(line: 137, column: 42, scope: !3509)
!3516 = !DILocalVariable(name: "pid", arg: 2, scope: !3509, file: !3, line: 137, type: !3512)
!3517 = !DILocation(line: 137, column: 59, scope: !3509)
!3518 = !DILocation(line: 139, column: 6, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3509, file: !3, line: 139, column: 6)
!3520 = !DILocation(line: 139, column: 10, scope: !3519)
!3521 = !DILocation(line: 139, column: 13, scope: !3519)
!3522 = !DILocation(line: 139, column: 19, scope: !3519)
!3523 = !DILocation(line: 139, column: 31, scope: !3519)
!3524 = !DILocation(line: 139, column: 36, scope: !3519)
!3525 = !DILocation(line: 139, column: 6, scope: !3509)
!3526 = !DILocation(line: 140, column: 10, scope: !3519)
!3527 = !DILocation(line: 140, column: 15, scope: !3519)
!3528 = !DILocation(line: 140, column: 22, scope: !3519)
!3529 = !DILocation(line: 140, column: 3, scope: !3519)
!3530 = !DILocation(line: 141, column: 11, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3519, file: !3, line: 141, column: 11)
!3532 = !DILocation(line: 141, column: 17, scope: !3531)
!3533 = !DILocation(line: 141, column: 23, scope: !3531)
!3534 = !DILocation(line: 141, column: 29, scope: !3531)
!3535 = !DILocation(line: 141, column: 48, scope: !3531)
!3536 = !DILocation(line: 141, column: 51, scope: !3531)
!3537 = !DILocation(line: 141, column: 57, scope: !3531)
!3538 = !DILocation(line: 141, column: 63, scope: !3531)
!3539 = !DILocation(line: 141, column: 68, scope: !3531)
!3540 = !DILocation(line: 141, column: 11, scope: !3519)
!3541 = !DILocation(line: 142, column: 10, scope: !3531)
!3542 = !DILocation(line: 142, column: 16, scope: !3531)
!3543 = !DILocation(line: 142, column: 22, scope: !3531)
!3544 = !DILocation(line: 142, column: 33, scope: !3531)
!3545 = !DILocation(line: 142, column: 39, scope: !3531)
!3546 = !DILocation(line: 142, column: 45, scope: !3531)
!3547 = !DILocation(line: 142, column: 31, scope: !3531)
!3548 = !DILocation(line: 142, column: 56, scope: !3531)
!3549 = !DILocation(line: 142, column: 62, scope: !3531)
!3550 = !DILocation(line: 142, column: 68, scope: !3531)
!3551 = !DILocation(line: 142, column: 54, scope: !3531)
!3552 = !DILocation(line: 142, column: 79, scope: !3531)
!3553 = !DILocation(line: 142, column: 85, scope: !3531)
!3554 = !DILocation(line: 142, column: 77, scope: !3531)
!3555 = !DILocation(line: 142, column: 3, scope: !3531)
!3556 = !DILocation(line: 144, column: 10, scope: !3531)
!3557 = !DILocation(line: 144, column: 16, scope: !3531)
!3558 = !DILocation(line: 144, column: 22, scope: !3531)
!3559 = !DILocation(line: 144, column: 32, scope: !3531)
!3560 = !DILocation(line: 144, column: 38, scope: !3531)
!3561 = !DILocation(line: 144, column: 30, scope: !3531)
!3562 = !DILocation(line: 144, column: 3, scope: !3531)
!3563 = !DILocation(line: 145, column: 1, scope: !3509)
!3564 = distinct !DISubprogram(name: "psys_calc_dmcache", scope: !3, file: !3, line: 332, type: !3565, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!3565 = !DISubroutineType(types: !3566)
!3566 = !{null, !3567, !2671, !3144}
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !78, line: 295, baseType: !719)
!3569 = !DILocalVariable(name: "ob", arg: 1, scope: !3564, file: !3, line: 332, type: !3567)
!3570 = !DILocation(line: 332, column: 32, scope: !3564)
!3571 = !DILocalVariable(name: "dm", arg: 2, scope: !3564, file: !3, line: 332, type: !2671)
!3572 = !DILocation(line: 332, column: 49, scope: !3564)
!3573 = !DILocalVariable(name: "psys", arg: 3, scope: !3564, file: !3, line: 332, type: !3144)
!3574 = !DILocation(line: 332, column: 69, scope: !3564)
!3575 = !DILocalVariable(name: "me", scope: !3564, file: !3, line: 340, type: !218)
!3576 = !DILocation(line: 340, column: 8, scope: !3564)
!3577 = !DILocation(line: 340, column: 19, scope: !3564)
!3578 = !DILocation(line: 340, column: 23, scope: !3564)
!3579 = !DILocation(line: 340, column: 12, scope: !3564)
!3580 = !DILocalVariable(name: "use_modifier_stack", scope: !3564, file: !3, line: 341, type: !672)
!3581 = !DILocation(line: 341, column: 7, scope: !3564)
!3582 = !DILocation(line: 341, column: 27, scope: !3564)
!3583 = !DILocation(line: 341, column: 33, scope: !3564)
!3584 = !DILocation(line: 341, column: 39, scope: !3564)
!3585 = !DILocalVariable(name: "pa", scope: !3564, file: !3, line: 342, type: !2461)
!3586 = !DILocation(line: 342, column: 2, scope: !3564)
!3587 = !DILocalVariable(name: "p", scope: !3564, file: !3, line: 342, type: !260)
!3588 = !DILocation(line: 345, column: 7, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3564, file: !3, line: 345, column: 6)
!3590 = !DILocation(line: 345, column: 11, scope: !3589)
!3591 = !DILocation(line: 345, column: 6, scope: !3564)
!3592 = !DILocalVariable(name: "node", scope: !3593, file: !3, line: 347, type: !3594)
!3593 = distinct !DILexicalBlock(scope: !3589, file: !3, line: 345, column: 25)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkNode", file: !2544, line: 48, baseType: !2543)
!3596 = !DILocation(line: 347, column: 13, scope: !3593)
!3597 = !DILocalVariable(name: "nodedmelem", scope: !3593, file: !3, line: 347, type: !3594)
!3598 = !DILocation(line: 347, column: 20, scope: !3593)
!3599 = !DILocalVariable(name: "nodearray", scope: !3593, file: !3, line: 347, type: !3600)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3601 = !DILocation(line: 347, column: 34, scope: !3593)
!3602 = !DILocalVariable(name: "totdmelem", scope: !3593, file: !3, line: 348, type: !260)
!3603 = !DILocation(line: 348, column: 7, scope: !3593)
!3604 = !DILocalVariable(name: "totelem", scope: !3593, file: !3, line: 348, type: !260)
!3605 = !DILocation(line: 348, column: 18, scope: !3593)
!3606 = !DILocalVariable(name: "i", scope: !3593, file: !3, line: 348, type: !260)
!3607 = !DILocation(line: 348, column: 27, scope: !3593)
!3608 = !DILocalVariable(name: "origindex", scope: !3593, file: !3, line: 348, type: !2797)
!3609 = !DILocation(line: 348, column: 31, scope: !3593)
!3610 = !DILocalVariable(name: "origindex_poly", scope: !3593, file: !3, line: 348, type: !2797)
!3611 = !DILocation(line: 348, column: 43, scope: !3593)
!3612 = !DILocation(line: 350, column: 7, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 350, column: 7)
!3614 = !DILocation(line: 350, column: 13, scope: !3613)
!3615 = !DILocation(line: 350, column: 19, scope: !3613)
!3616 = !DILocation(line: 350, column: 24, scope: !3613)
!3617 = !DILocation(line: 350, column: 7, scope: !3593)
!3618 = !DILocation(line: 351, column: 15, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 350, column: 43)
!3620 = !DILocation(line: 351, column: 19, scope: !3619)
!3621 = !DILocation(line: 351, column: 31, scope: !3619)
!3622 = !DILocation(line: 351, column: 13, scope: !3619)
!3623 = !DILocation(line: 353, column: 8, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 353, column: 8)
!3625 = !DILocation(line: 353, column: 8, scope: !3619)
!3626 = !DILocation(line: 354, column: 14, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 353, column: 28)
!3628 = !DILocation(line: 354, column: 12, scope: !3627)
!3629 = !DILocation(line: 355, column: 14, scope: !3627)
!3630 = !DILocation(line: 356, column: 4, scope: !3627)
!3631 = !DILocation(line: 358, column: 14, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 357, column: 9)
!3633 = !DILocation(line: 358, column: 18, scope: !3632)
!3634 = !DILocation(line: 358, column: 12, scope: !3632)
!3635 = !DILocation(line: 359, column: 16, scope: !3632)
!3636 = !DILocation(line: 359, column: 20, scope: !3632)
!3637 = !DILocation(line: 359, column: 37, scope: !3632)
!3638 = !DILocation(line: 359, column: 14, scope: !3632)
!3639 = !DILocation(line: 361, column: 3, scope: !3619)
!3640 = !DILocation(line: 363, column: 15, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 362, column: 8)
!3642 = !DILocation(line: 363, column: 19, scope: !3641)
!3643 = !DILocation(line: 363, column: 35, scope: !3641)
!3644 = !DILocation(line: 363, column: 13, scope: !3641)
!3645 = !DILocation(line: 365, column: 8, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 365, column: 8)
!3647 = !DILocation(line: 365, column: 8, scope: !3641)
!3648 = !DILocation(line: 366, column: 14, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 365, column: 28)
!3650 = !DILocation(line: 366, column: 12, scope: !3649)
!3651 = !DILocation(line: 367, column: 14, scope: !3649)
!3652 = !DILocation(line: 368, column: 19, scope: !3649)
!3653 = !DILocation(line: 369, column: 4, scope: !3649)
!3654 = !DILocation(line: 371, column: 14, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 370, column: 9)
!3656 = !DILocation(line: 371, column: 18, scope: !3655)
!3657 = !DILocation(line: 371, column: 12, scope: !3655)
!3658 = !DILocation(line: 372, column: 16, scope: !3655)
!3659 = !DILocation(line: 372, column: 20, scope: !3655)
!3660 = !DILocation(line: 372, column: 41, scope: !3655)
!3661 = !DILocation(line: 372, column: 14, scope: !3655)
!3662 = !DILocation(line: 375, column: 21, scope: !3655)
!3663 = !DILocation(line: 375, column: 25, scope: !3655)
!3664 = !DILocation(line: 375, column: 42, scope: !3655)
!3665 = !DILocation(line: 375, column: 19, scope: !3655)
!3666 = !DILocation(line: 376, column: 9, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 376, column: 9)
!3668 = !DILocation(line: 376, column: 24, scope: !3667)
!3669 = !DILocation(line: 376, column: 9, scope: !3655)
!3670 = !DILocation(line: 377, column: 15, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3667, file: !3, line: 376, column: 33)
!3672 = !DILocation(line: 378, column: 5, scope: !3671)
!3673 = !DILocation(line: 382, column: 15, scope: !3593)
!3674 = !DILocation(line: 382, column: 44, scope: !3593)
!3675 = !DILocation(line: 382, column: 43, scope: !3593)
!3676 = !DILocation(line: 382, column: 13, scope: !3593)
!3677 = !DILocation(line: 383, column: 14, scope: !3593)
!3678 = !DILocation(line: 383, column: 45, scope: !3593)
!3679 = !DILocation(line: 383, column: 44, scope: !3593)
!3680 = !DILocation(line: 383, column: 12, scope: !3593)
!3681 = !DILocation(line: 385, column: 9, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 385, column: 3)
!3683 = !DILocation(line: 385, column: 18, scope: !3682)
!3684 = !DILocation(line: 385, column: 17, scope: !3682)
!3685 = !DILocation(line: 385, column: 8, scope: !3682)
!3686 = !DILocation(line: 385, column: 30, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 385, column: 3)
!3688 = !DILocation(line: 385, column: 32, scope: !3687)
!3689 = !DILocation(line: 385, column: 31, scope: !3687)
!3690 = !DILocation(line: 385, column: 3, scope: !3682)
!3691 = !DILocalVariable(name: "origindex_final", scope: !3692, file: !3, line: 386, type: !260)
!3692 = distinct !DILexicalBlock(scope: !3687, file: !3, line: 385, column: 56)
!3693 = !DILocation(line: 386, column: 8, scope: !3692)
!3694 = !DILocation(line: 387, column: 17, scope: !3692)
!3695 = !DILocation(line: 387, column: 4, scope: !3692)
!3696 = !DILocation(line: 387, column: 10, scope: !3692)
!3697 = !DILocation(line: 387, column: 15, scope: !3692)
!3698 = !DILocation(line: 390, column: 8, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 390, column: 8)
!3700 = !DILocation(line: 390, column: 8, scope: !3692)
!3701 = !DILocation(line: 391, column: 23, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 390, column: 28)
!3703 = !DILocation(line: 391, column: 21, scope: !3702)
!3704 = !DILocation(line: 392, column: 4, scope: !3702)
!3705 = !DILocation(line: 394, column: 23, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 393, column: 9)
!3707 = !DILocation(line: 394, column: 35, scope: !3706)
!3708 = !DILocation(line: 394, column: 45, scope: !3706)
!3709 = !DILocation(line: 394, column: 21, scope: !3706)
!3710 = !DILocation(line: 397, column: 9, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3706, file: !3, line: 397, column: 9)
!3712 = !DILocation(line: 397, column: 24, scope: !3711)
!3713 = !DILocation(line: 397, column: 27, scope: !3711)
!3714 = !DILocation(line: 397, column: 43, scope: !3711)
!3715 = !DILocation(line: 397, column: 9, scope: !3706)
!3716 = !DILocation(line: 398, column: 24, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3711, file: !3, line: 397, column: 62)
!3718 = !DILocation(line: 398, column: 39, scope: !3717)
!3719 = !DILocation(line: 398, column: 22, scope: !3717)
!3720 = !DILocation(line: 399, column: 5, scope: !3717)
!3721 = !DILocation(line: 402, column: 8, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 402, column: 8)
!3723 = !DILocation(line: 402, column: 24, scope: !3722)
!3724 = !DILocation(line: 402, column: 42, scope: !3722)
!3725 = !DILocation(line: 402, column: 45, scope: !3722)
!3726 = !DILocation(line: 402, column: 63, scope: !3722)
!3727 = !DILocation(line: 402, column: 61, scope: !3722)
!3728 = !DILocation(line: 402, column: 8, scope: !3692)
!3729 = !DILocation(line: 403, column: 9, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 403, column: 9)
!3731 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 402, column: 72)
!3732 = !DILocation(line: 403, column: 19, scope: !3730)
!3733 = !DILocation(line: 403, column: 9, scope: !3731)
!3734 = !DILocation(line: 405, column: 19, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3730, file: !3, line: 403, column: 37)
!3736 = !DILocation(line: 405, column: 29, scope: !3735)
!3737 = !DILocation(line: 405, column: 6, scope: !3735)
!3738 = !DILocation(line: 405, column: 12, scope: !3735)
!3739 = !DILocation(line: 405, column: 17, scope: !3735)
!3740 = !DILocation(line: 406, column: 35, scope: !3735)
!3741 = !DILocation(line: 406, column: 6, scope: !3735)
!3742 = !DILocation(line: 406, column: 16, scope: !3735)
!3743 = !DILocation(line: 406, column: 33, scope: !3735)
!3744 = !DILocation(line: 407, column: 5, scope: !3735)
!3745 = !DILocation(line: 409, column: 35, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3730, file: !3, line: 408, column: 10)
!3747 = !DILocation(line: 409, column: 6, scope: !3746)
!3748 = !DILocation(line: 409, column: 16, scope: !3746)
!3749 = !DILocation(line: 409, column: 33, scope: !3746)
!3750 = !DILocation(line: 411, column: 4, scope: !3731)
!3751 = !DILocation(line: 412, column: 3, scope: !3692)
!3752 = !DILocation(line: 385, column: 44, scope: !3687)
!3753 = !DILocation(line: 385, column: 52, scope: !3687)
!3754 = !DILocation(line: 385, column: 3, scope: !3687)
!3755 = distinct !{!3755, !3690, !3756}
!3756 = !DILocation(line: 412, column: 3, scope: !3682)
!3757 = !DILocation(line: 415, column: 3, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 415, column: 3)
!3759 = !DILocation(line: 415, column: 3, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 415, column: 3)
!3761 = !DILocation(line: 416, column: 8, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 416, column: 8)
!3763 = distinct !DILexicalBlock(scope: !3760, file: !3, line: 415, column: 18)
!3764 = !DILocation(line: 416, column: 12, scope: !3762)
!3765 = !DILocation(line: 416, column: 16, scope: !3762)
!3766 = !DILocation(line: 416, column: 8, scope: !3763)
!3767 = !DILocation(line: 417, column: 5, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 416, column: 21)
!3769 = !DILocation(line: 417, column: 9, scope: !3768)
!3770 = !DILocation(line: 417, column: 21, scope: !3768)
!3771 = !DILocation(line: 418, column: 5, scope: !3768)
!3772 = !DILocation(line: 421, column: 8, scope: !3773)
!3773 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 421, column: 8)
!3774 = !DILocation(line: 421, column: 8, scope: !3763)
!3775 = !DILocation(line: 422, column: 9, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 422, column: 9)
!3777 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 421, column: 28)
!3778 = !DILocation(line: 422, column: 13, scope: !3776)
!3779 = !DILocation(line: 422, column: 19, scope: !3776)
!3780 = !DILocation(line: 422, column: 17, scope: !3776)
!3781 = !DILocation(line: 422, column: 9, scope: !3777)
!3782 = !DILocation(line: 423, column: 6, scope: !3776)
!3783 = !DILocation(line: 423, column: 10, scope: !3776)
!3784 = !DILocation(line: 423, column: 22, scope: !3776)
!3785 = !DILocation(line: 425, column: 6, scope: !3776)
!3786 = !DILocation(line: 425, column: 10, scope: !3776)
!3787 = !DILocation(line: 425, column: 22, scope: !3776)
!3788 = !DILocation(line: 426, column: 4, scope: !3777)
!3789 = !DILocation(line: 428, column: 9, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3791, file: !3, line: 428, column: 9)
!3791 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 427, column: 9)
!3792 = !DILocation(line: 428, column: 15, scope: !3790)
!3793 = !DILocation(line: 428, column: 21, scope: !3790)
!3794 = !DILocation(line: 428, column: 26, scope: !3790)
!3795 = !DILocation(line: 428, column: 9, scope: !3791)
!3796 = !DILocation(line: 429, column: 10, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 429, column: 10)
!3798 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 428, column: 45)
!3799 = !DILocation(line: 429, column: 14, scope: !3797)
!3800 = !DILocation(line: 429, column: 20, scope: !3797)
!3801 = !DILocation(line: 429, column: 18, scope: !3797)
!3802 = !DILocation(line: 429, column: 28, scope: !3797)
!3803 = !DILocation(line: 429, column: 31, scope: !3797)
!3804 = !DILocation(line: 429, column: 41, scope: !3797)
!3805 = !DILocation(line: 429, column: 45, scope: !3797)
!3806 = !DILocation(line: 429, column: 10, scope: !3798)
!3807 = !DILocation(line: 430, column: 24, scope: !3797)
!3808 = !DILocation(line: 430, column: 7, scope: !3797)
!3809 = !DILocation(line: 430, column: 11, scope: !3797)
!3810 = !DILocation(line: 430, column: 22, scope: !3797)
!3811 = !DILocation(line: 432, column: 7, scope: !3797)
!3812 = !DILocation(line: 432, column: 11, scope: !3797)
!3813 = !DILocation(line: 432, column: 23, scope: !3797)
!3814 = !DILocation(line: 433, column: 5, scope: !3798)
!3815 = !DILocation(line: 437, column: 52, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 434, column: 10)
!3817 = !DILocation(line: 437, column: 56, scope: !3816)
!3818 = !DILocation(line: 437, column: 60, scope: !3816)
!3819 = !DILocation(line: 437, column: 64, scope: !3816)
!3820 = !DILocation(line: 437, column: 69, scope: !3816)
!3821 = !DILocation(line: 437, column: 73, scope: !3816)
!3822 = !DILocation(line: 437, column: 78, scope: !3816)
!3823 = !DILocation(line: 437, column: 82, scope: !3816)
!3824 = !DILocation(line: 437, column: 88, scope: !3816)
!3825 = !DILocation(line: 437, column: 86, scope: !3816)
!3826 = !DILocation(line: 437, column: 98, scope: !3816)
!3827 = !DILocation(line: 437, column: 108, scope: !3816)
!3828 = !DILocation(line: 437, column: 112, scope: !3816)
!3829 = !DILocation(line: 437, column: 23, scope: !3816)
!3830 = !DILocation(line: 437, column: 6, scope: !3816)
!3831 = !DILocation(line: 437, column: 10, scope: !3816)
!3832 = !DILocation(line: 437, column: 21, scope: !3816)
!3833 = !DILocation(line: 440, column: 3, scope: !3763)
!3834 = distinct !{!3834, !3757, !3835}
!3835 = !DILocation(line: 440, column: 3, scope: !3758)
!3836 = !DILocation(line: 442, column: 3, scope: !3593)
!3837 = !DILocation(line: 442, column: 13, scope: !3593)
!3838 = !DILocation(line: 443, column: 3, scope: !3593)
!3839 = !DILocation(line: 443, column: 13, scope: !3593)
!3840 = !DILocation(line: 444, column: 2, scope: !3593)
!3841 = !DILocation(line: 450, column: 3, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3843, file: !3, line: 450, column: 3)
!3843 = distinct !DILexicalBlock(scope: !3589, file: !3, line: 445, column: 7)
!3844 = !DILocation(line: 450, column: 3, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 450, column: 3)
!3846 = !DILocation(line: 451, column: 4, scope: !3845)
!3847 = !DILocation(line: 451, column: 8, scope: !3845)
!3848 = !DILocation(line: 451, column: 20, scope: !3845)
!3849 = distinct !{!3849, !3841, !3850}
!3850 = !DILocation(line: 451, column: 22, scope: !3842)
!3851 = !DILocation(line: 453, column: 1, scope: !3564)
!3852 = distinct !DISubprogram(name: "psys_threads_create", scope: !3, file: !3, line: 1473, type: !3853, scopeLine: 1474, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!3853 = !DISubroutineType(types: !3854)
!3854 = !{!3246, !3218}
!3855 = !DILocalVariable(name: "sim", arg: 1, scope: !3852, file: !3, line: 1473, type: !3218)
!3856 = !DILocation(line: 1473, column: 61, scope: !3852)
!3857 = !DILocalVariable(name: "threads", scope: !3852, file: !3, line: 1475, type: !3246)
!3858 = !DILocation(line: 1475, column: 18, scope: !3852)
!3859 = !DILocalVariable(name: "ctx", scope: !3852, file: !3, line: 1476, type: !3251)
!3860 = !DILocation(line: 1476, column: 25, scope: !3852)
!3861 = !DILocalVariable(name: "i", scope: !3852, file: !3, line: 1477, type: !260)
!3862 = !DILocation(line: 1477, column: 6, scope: !3852)
!3863 = !DILocalVariable(name: "totthread", scope: !3852, file: !3, line: 1477, type: !260)
!3864 = !DILocation(line: 1477, column: 9, scope: !3852)
!3865 = !DILocation(line: 1477, column: 43, scope: !3852)
!3866 = !DILocation(line: 1477, column: 48, scope: !3852)
!3867 = !DILocation(line: 1477, column: 21, scope: !3852)
!3868 = !DILocation(line: 1479, column: 11, scope: !3852)
!3869 = !DILocation(line: 1479, column: 46, scope: !3852)
!3870 = !DILocation(line: 1479, column: 45, scope: !3852)
!3871 = !DILocation(line: 1479, column: 9, scope: !3852)
!3872 = !DILocation(line: 1480, column: 7, scope: !3852)
!3873 = !DILocation(line: 1480, column: 5, scope: !3852)
!3874 = !DILocation(line: 1482, column: 2, scope: !3852)
!3875 = !DILocation(line: 1482, column: 7, scope: !3852)
!3876 = !DILocation(line: 1482, column: 14, scope: !3852)
!3877 = !DILocation(line: 1482, column: 13, scope: !3852)
!3878 = !DILocation(line: 1483, column: 11, scope: !3852)
!3879 = !DILocation(line: 1483, column: 16, scope: !3852)
!3880 = !DILocation(line: 1483, column: 20, scope: !3852)
!3881 = !DILocation(line: 1483, column: 26, scope: !3852)
!3882 = !DILocation(line: 1483, column: 2, scope: !3852)
!3883 = !DILocation(line: 1483, column: 7, scope: !3852)
!3884 = !DILocation(line: 1483, column: 9, scope: !3852)
!3885 = !DILocation(line: 1484, column: 33, scope: !3852)
!3886 = !DILocation(line: 1484, column: 38, scope: !3852)
!3887 = !DILocation(line: 1484, column: 42, scope: !3852)
!3888 = !DILocation(line: 1484, column: 47, scope: !3852)
!3889 = !DILocation(line: 1484, column: 53, scope: !3852)
!3890 = !DILocation(line: 1484, column: 59, scope: !3852)
!3891 = !DILocation(line: 1484, column: 11, scope: !3852)
!3892 = !DILocation(line: 1484, column: 2, scope: !3852)
!3893 = !DILocation(line: 1484, column: 7, scope: !3852)
!3894 = !DILocation(line: 1484, column: 9, scope: !3852)
!3895 = !DILocation(line: 1486, column: 9, scope: !3852)
!3896 = !DILocation(line: 1486, column: 2, scope: !3852)
!3897 = !DILocation(line: 1486, column: 44, scope: !3852)
!3898 = !DILocation(line: 1486, column: 43, scope: !3852)
!3899 = !DILocation(line: 1488, column: 8, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 1488, column: 2)
!3901 = !DILocation(line: 1488, column: 7, scope: !3900)
!3902 = !DILocation(line: 1488, column: 12, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 1488, column: 2)
!3904 = !DILocation(line: 1488, column: 14, scope: !3903)
!3905 = !DILocation(line: 1488, column: 13, scope: !3903)
!3906 = !DILocation(line: 1488, column: 2, scope: !3900)
!3907 = !DILocation(line: 1489, column: 19, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3903, file: !3, line: 1488, column: 30)
!3909 = !DILocation(line: 1489, column: 3, scope: !3908)
!3910 = !DILocation(line: 1489, column: 11, scope: !3908)
!3911 = !DILocation(line: 1489, column: 14, scope: !3908)
!3912 = !DILocation(line: 1489, column: 17, scope: !3908)
!3913 = !DILocation(line: 1490, column: 19, scope: !3908)
!3914 = !DILocation(line: 1490, column: 3, scope: !3908)
!3915 = !DILocation(line: 1490, column: 11, scope: !3908)
!3916 = !DILocation(line: 1490, column: 14, scope: !3908)
!3917 = !DILocation(line: 1490, column: 17, scope: !3908)
!3918 = !DILocation(line: 1491, column: 19, scope: !3908)
!3919 = !DILocation(line: 1491, column: 3, scope: !3908)
!3920 = !DILocation(line: 1491, column: 11, scope: !3908)
!3921 = !DILocation(line: 1491, column: 14, scope: !3908)
!3922 = !DILocation(line: 1491, column: 17, scope: !3908)
!3923 = !DILocation(line: 1492, column: 2, scope: !3908)
!3924 = !DILocation(line: 1488, column: 26, scope: !3903)
!3925 = !DILocation(line: 1488, column: 2, scope: !3903)
!3926 = distinct !{!3926, !3906, !3927}
!3927 = !DILocation(line: 1492, column: 2, scope: !3900)
!3928 = !DILocation(line: 1494, column: 9, scope: !3852)
!3929 = !DILocation(line: 1494, column: 2, scope: !3852)
!3930 = distinct !DISubprogram(name: "psys_threads_free", scope: !3, file: !3, line: 1497, type: !3931, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{null, !3246}
!3933 = !DILocalVariable(name: "threads", arg: 1, scope: !3930, file: !3, line: 1497, type: !3246)
!3934 = !DILocation(line: 1497, column: 40, scope: !3930)
!3935 = !DILocalVariable(name: "ctx", scope: !3930, file: !3, line: 1499, type: !3251)
!3936 = !DILocation(line: 1499, column: 25, scope: !3930)
!3937 = !DILocation(line: 1499, column: 30, scope: !3930)
!3938 = !DILocation(line: 1499, column: 41, scope: !3930)
!3939 = !DILocalVariable(name: "i", scope: !3930, file: !3, line: 1500, type: !260)
!3940 = !DILocation(line: 1500, column: 6, scope: !3930)
!3941 = !DILocalVariable(name: "totthread", scope: !3930, file: !3, line: 1500, type: !260)
!3942 = !DILocation(line: 1500, column: 9, scope: !3930)
!3943 = !DILocation(line: 1500, column: 20, scope: !3930)
!3944 = !DILocation(line: 1500, column: 31, scope: !3930)
!3945 = !DILocation(line: 1503, column: 6, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1503, column: 6)
!3947 = !DILocation(line: 1503, column: 11, scope: !3946)
!3948 = !DILocation(line: 1503, column: 6, scope: !3930)
!3949 = !DILocation(line: 1504, column: 3, scope: !3946)
!3950 = !DILocation(line: 1504, column: 13, scope: !3946)
!3951 = !DILocation(line: 1504, column: 18, scope: !3946)
!3952 = !DILocation(line: 1505, column: 6, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1505, column: 6)
!3954 = !DILocation(line: 1505, column: 11, scope: !3953)
!3955 = !DILocation(line: 1505, column: 6, scope: !3930)
!3956 = !DILocation(line: 1506, column: 3, scope: !3953)
!3957 = !DILocation(line: 1506, column: 13, scope: !3953)
!3958 = !DILocation(line: 1506, column: 18, scope: !3953)
!3959 = !DILocation(line: 1507, column: 6, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1507, column: 6)
!3961 = !DILocation(line: 1507, column: 11, scope: !3960)
!3962 = !DILocation(line: 1507, column: 6, scope: !3930)
!3963 = !DILocation(line: 1508, column: 3, scope: !3960)
!3964 = !DILocation(line: 1508, column: 13, scope: !3960)
!3965 = !DILocation(line: 1508, column: 18, scope: !3960)
!3966 = !DILocation(line: 1509, column: 6, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1509, column: 6)
!3968 = !DILocation(line: 1509, column: 11, scope: !3967)
!3969 = !DILocation(line: 1509, column: 6, scope: !3930)
!3970 = !DILocation(line: 1510, column: 3, scope: !3967)
!3971 = !DILocation(line: 1510, column: 13, scope: !3967)
!3972 = !DILocation(line: 1510, column: 18, scope: !3967)
!3973 = !DILocation(line: 1511, column: 6, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1511, column: 6)
!3975 = !DILocation(line: 1511, column: 11, scope: !3974)
!3976 = !DILocation(line: 1511, column: 6, scope: !3930)
!3977 = !DILocation(line: 1512, column: 3, scope: !3974)
!3978 = !DILocation(line: 1512, column: 13, scope: !3974)
!3979 = !DILocation(line: 1512, column: 18, scope: !3974)
!3980 = !DILocation(line: 1513, column: 6, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1513, column: 6)
!3982 = !DILocation(line: 1513, column: 11, scope: !3981)
!3983 = !DILocation(line: 1513, column: 6, scope: !3930)
!3984 = !DILocation(line: 1514, column: 3, scope: !3981)
!3985 = !DILocation(line: 1514, column: 13, scope: !3981)
!3986 = !DILocation(line: 1514, column: 18, scope: !3981)
!3987 = !DILocation(line: 1516, column: 6, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1516, column: 6)
!3989 = !DILocation(line: 1516, column: 11, scope: !3988)
!3990 = !DILocation(line: 1516, column: 15, scope: !3988)
!3991 = !DILocation(line: 1516, column: 21, scope: !3988)
!3992 = !DILocation(line: 1516, column: 6, scope: !3930)
!3993 = !DILocation(line: 1517, column: 19, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 1516, column: 42)
!3995 = !DILocation(line: 1517, column: 24, scope: !3994)
!3996 = !DILocation(line: 1517, column: 28, scope: !3994)
!3997 = !DILocation(line: 1517, column: 34, scope: !3994)
!3998 = !DILocation(line: 1517, column: 3, scope: !3994)
!3999 = !DILocation(line: 1518, column: 3, scope: !3994)
!4000 = !DILocation(line: 1518, column: 8, scope: !3994)
!4001 = !DILocation(line: 1518, column: 12, scope: !3994)
!4002 = !DILocation(line: 1518, column: 18, scope: !3994)
!4003 = !DILocation(line: 1518, column: 38, scope: !3994)
!4004 = !DILocation(line: 1519, column: 2, scope: !3994)
!4005 = !DILocation(line: 1522, column: 6, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1522, column: 6)
!4007 = !DILocation(line: 1522, column: 11, scope: !4006)
!4008 = !DILocation(line: 1522, column: 6, scope: !3930)
!4009 = !DILocation(line: 1522, column: 16, scope: !4006)
!4010 = !DILocation(line: 1522, column: 26, scope: !4006)
!4011 = !DILocation(line: 1522, column: 31, scope: !4006)
!4012 = !DILocation(line: 1523, column: 6, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1523, column: 6)
!4014 = !DILocation(line: 1523, column: 11, scope: !4013)
!4015 = !DILocation(line: 1523, column: 6, scope: !3930)
!4016 = !DILocation(line: 1523, column: 19, scope: !4013)
!4017 = !DILocation(line: 1523, column: 29, scope: !4013)
!4018 = !DILocation(line: 1523, column: 34, scope: !4013)
!4019 = !DILocation(line: 1524, column: 6, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1524, column: 6)
!4021 = !DILocation(line: 1524, column: 11, scope: !4020)
!4022 = !DILocation(line: 1524, column: 6, scope: !3930)
!4023 = !DILocation(line: 1524, column: 19, scope: !4020)
!4024 = !DILocation(line: 1524, column: 29, scope: !4020)
!4025 = !DILocation(line: 1524, column: 34, scope: !4020)
!4026 = !DILocation(line: 1525, column: 6, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1525, column: 6)
!4028 = !DILocation(line: 1525, column: 11, scope: !4027)
!4029 = !DILocation(line: 1525, column: 6, scope: !3930)
!4030 = !DILocation(line: 1525, column: 18, scope: !4027)
!4031 = !DILocation(line: 1525, column: 28, scope: !4027)
!4032 = !DILocation(line: 1525, column: 33, scope: !4027)
!4033 = !DILocation(line: 1526, column: 6, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1526, column: 6)
!4035 = !DILocation(line: 1526, column: 11, scope: !4034)
!4036 = !DILocation(line: 1526, column: 6, scope: !3930)
!4037 = !DILocation(line: 1526, column: 17, scope: !4034)
!4038 = !DILocation(line: 1526, column: 27, scope: !4034)
!4039 = !DILocation(line: 1526, column: 32, scope: !4034)
!4040 = !DILocation(line: 1527, column: 6, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1527, column: 6)
!4042 = !DILocation(line: 1527, column: 11, scope: !4041)
!4043 = !DILocation(line: 1527, column: 6, scope: !3930)
!4044 = !DILocation(line: 1527, column: 18, scope: !4041)
!4045 = !DILocation(line: 1527, column: 28, scope: !4041)
!4046 = !DILocation(line: 1527, column: 33, scope: !4041)
!4047 = !DILocation(line: 1529, column: 18, scope: !3930)
!4048 = !DILocation(line: 1529, column: 23, scope: !3930)
!4049 = !DILocation(line: 1529, column: 2, scope: !3930)
!4050 = !DILocation(line: 1532, column: 8, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 1532, column: 2)
!4052 = !DILocation(line: 1532, column: 7, scope: !4051)
!4053 = !DILocation(line: 1532, column: 12, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 1532, column: 2)
!4055 = !DILocation(line: 1532, column: 14, scope: !4054)
!4056 = !DILocation(line: 1532, column: 13, scope: !4054)
!4057 = !DILocation(line: 1532, column: 2, scope: !4051)
!4058 = !DILocation(line: 1533, column: 7, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 1533, column: 7)
!4060 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1532, column: 30)
!4061 = !DILocation(line: 1533, column: 15, scope: !4059)
!4062 = !DILocation(line: 1533, column: 18, scope: !4059)
!4063 = !DILocation(line: 1533, column: 7, scope: !4060)
!4064 = !DILocation(line: 1534, column: 17, scope: !4059)
!4065 = !DILocation(line: 1534, column: 25, scope: !4059)
!4066 = !DILocation(line: 1534, column: 28, scope: !4059)
!4067 = !DILocation(line: 1534, column: 4, scope: !4059)
!4068 = !DILocation(line: 1535, column: 7, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 1535, column: 7)
!4070 = !DILocation(line: 1535, column: 15, scope: !4069)
!4071 = !DILocation(line: 1535, column: 18, scope: !4069)
!4072 = !DILocation(line: 1535, column: 7, scope: !4060)
!4073 = !DILocation(line: 1536, column: 17, scope: !4069)
!4074 = !DILocation(line: 1536, column: 25, scope: !4069)
!4075 = !DILocation(line: 1536, column: 28, scope: !4069)
!4076 = !DILocation(line: 1536, column: 4, scope: !4069)
!4077 = !DILocation(line: 1537, column: 2, scope: !4060)
!4078 = !DILocation(line: 1532, column: 26, scope: !4054)
!4079 = !DILocation(line: 1532, column: 2, scope: !4054)
!4080 = distinct !{!4080, !4057, !4081}
!4081 = !DILocation(line: 1537, column: 2, scope: !4051)
!4082 = !DILocation(line: 1539, column: 2, scope: !3930)
!4083 = !DILocation(line: 1539, column: 12, scope: !3930)
!4084 = !DILocation(line: 1540, column: 2, scope: !3930)
!4085 = !DILocation(line: 1540, column: 12, scope: !3930)
!4086 = !DILocation(line: 1541, column: 1, scope: !3930)
!4087 = distinct !DISubprogram(name: "initialize_particle", scope: !3, file: !3, line: 1568, type: !4088, scopeLine: 1569, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{null, !3218, !2461}
!4090 = !DILocalVariable(name: "sim", arg: 1, scope: !4087, file: !3, line: 1568, type: !3218)
!4091 = !DILocation(line: 1568, column: 50, scope: !4087)
!4092 = !DILocalVariable(name: "pa", arg: 2, scope: !4087, file: !3, line: 1568, type: !2461)
!4093 = !DILocation(line: 1568, column: 69, scope: !4087)
!4094 = !DILocalVariable(name: "part", scope: !4087, file: !3, line: 1570, type: !2192)
!4095 = !DILocation(line: 1570, column: 20, scope: !4087)
!4096 = !DILocation(line: 1570, column: 27, scope: !4087)
!4097 = !DILocation(line: 1570, column: 32, scope: !4087)
!4098 = !DILocation(line: 1570, column: 38, scope: !4087)
!4099 = !DILocalVariable(name: "birth_time", scope: !4087, file: !3, line: 1571, type: !341)
!4100 = !DILocation(line: 1571, column: 8, scope: !4087)
!4101 = !DILocation(line: 1571, column: 29, scope: !4087)
!4102 = !DILocation(line: 1571, column: 34, scope: !4087)
!4103 = !DILocation(line: 1571, column: 39, scope: !4087)
!4104 = !DILocation(line: 1571, column: 45, scope: !4087)
!4105 = !DILocation(line: 1571, column: 32, scope: !4087)
!4106 = !DILocation(line: 1571, column: 21, scope: !4087)
!4107 = !DILocation(line: 1571, column: 65, scope: !4087)
!4108 = !DILocation(line: 1571, column: 70, scope: !4087)
!4109 = !DILocation(line: 1571, column: 76, scope: !4087)
!4110 = !DILocation(line: 1571, column: 58, scope: !4087)
!4111 = !DILocation(line: 1571, column: 56, scope: !4087)
!4112 = !DILocation(line: 1573, column: 2, scope: !4087)
!4113 = !DILocation(line: 1573, column: 6, scope: !4087)
!4114 = !DILocation(line: 1573, column: 11, scope: !4087)
!4115 = !DILocation(line: 1574, column: 13, scope: !4087)
!4116 = !DILocation(line: 1574, column: 19, scope: !4087)
!4117 = !DILocation(line: 1574, column: 26, scope: !4087)
!4118 = !DILocation(line: 1574, column: 32, scope: !4087)
!4119 = !DILocation(line: 1574, column: 38, scope: !4087)
!4120 = !DILocation(line: 1574, column: 44, scope: !4087)
!4121 = !DILocation(line: 1574, column: 36, scope: !4087)
!4122 = !DILocation(line: 1574, column: 51, scope: !4087)
!4123 = !DILocation(line: 1574, column: 49, scope: !4087)
!4124 = !DILocation(line: 1574, column: 23, scope: !4087)
!4125 = !DILocation(line: 1574, column: 2, scope: !4087)
!4126 = !DILocation(line: 1574, column: 6, scope: !4087)
!4127 = !DILocation(line: 1574, column: 11, scope: !4087)
!4128 = !DILocation(line: 1576, column: 2, scope: !4087)
!4129 = !DILocation(line: 1576, column: 6, scope: !4087)
!4130 = !DILocation(line: 1576, column: 17, scope: !4087)
!4131 = !DILocation(line: 1580, column: 1, scope: !4087)
!4132 = distinct !DISubprogram(name: "psys_get_birth_coordinates", scope: !3, file: !3, line: 1673, type: !4133, scopeLine: 1674, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{null, !3218, !2461, !1988, !341, !341}
!4135 = !DILocalVariable(name: "sim", arg: 1, scope: !4132, file: !3, line: 1673, type: !3218)
!4136 = !DILocation(line: 1673, column: 57, scope: !4132)
!4137 = !DILocalVariable(name: "pa", arg: 2, scope: !4132, file: !3, line: 1673, type: !2461)
!4138 = !DILocation(line: 1673, column: 76, scope: !4132)
!4139 = !DILocalVariable(name: "state", arg: 3, scope: !4132, file: !3, line: 1673, type: !1988)
!4140 = !DILocation(line: 1673, column: 93, scope: !4132)
!4141 = !DILocalVariable(name: "dtime", arg: 4, scope: !4132, file: !3, line: 1673, type: !341)
!4142 = !DILocation(line: 1673, column: 106, scope: !4132)
!4143 = !DILocalVariable(name: "cfra", arg: 5, scope: !4132, file: !3, line: 1673, type: !341)
!4144 = !DILocation(line: 1673, column: 119, scope: !4132)
!4145 = !DILocalVariable(name: "ob", scope: !4132, file: !3, line: 1675, type: !3567)
!4146 = !DILocation(line: 1675, column: 10, scope: !4132)
!4147 = !DILocation(line: 1675, column: 15, scope: !4132)
!4148 = !DILocation(line: 1675, column: 20, scope: !4132)
!4149 = !DILocalVariable(name: "psys", scope: !4132, file: !3, line: 1676, type: !3144)
!4150 = !DILocation(line: 1676, column: 18, scope: !4132)
!4151 = !DILocation(line: 1676, column: 25, scope: !4132)
!4152 = !DILocation(line: 1676, column: 30, scope: !4132)
!4153 = !DILocalVariable(name: "part", scope: !4132, file: !3, line: 1677, type: !2192)
!4154 = !DILocation(line: 1677, column: 20, scope: !4132)
!4155 = !DILocation(line: 1677, column: 27, scope: !4132)
!4156 = !DILocation(line: 1677, column: 33, scope: !4132)
!4157 = !DILocalVariable(name: "ptex", scope: !4132, file: !3, line: 1678, type: !3199)
!4158 = !DILocation(line: 1678, column: 18, scope: !4132)
!4159 = !DILocalVariable(name: "fac", scope: !4132, file: !3, line: 1679, type: !341)
!4160 = !DILocation(line: 1679, column: 8, scope: !4132)
!4161 = !DILocalVariable(name: "phasefac", scope: !4132, file: !3, line: 1679, type: !341)
!4162 = !DILocation(line: 1679, column: 13, scope: !4132)
!4163 = !DILocalVariable(name: "nor", scope: !4132, file: !3, line: 1679, type: !563)
!4164 = !DILocation(line: 1679, column: 23, scope: !4132)
!4165 = !DILocalVariable(name: "loc", scope: !4132, file: !3, line: 1679, type: !563)
!4166 = !DILocation(line: 1679, column: 40, scope: !4132)
!4167 = !DILocalVariable(name: "vel", scope: !4132, file: !3, line: 1679, type: !563)
!4168 = !DILocation(line: 1679, column: 47, scope: !4132)
!4169 = !DILocalVariable(name: "rot", scope: !4132, file: !3, line: 1679, type: !473)
!4170 = !DILocation(line: 1679, column: 70, scope: !4132)
!4171 = !DILocalVariable(name: "q2", scope: !4132, file: !3, line: 1679, type: !473)
!4172 = !DILocation(line: 1679, column: 77, scope: !4132)
!4173 = !DILocalVariable(name: "r_vel", scope: !4132, file: !3, line: 1680, type: !563)
!4174 = !DILocation(line: 1680, column: 8, scope: !4132)
!4175 = !DILocalVariable(name: "r_ave", scope: !4132, file: !3, line: 1680, type: !563)
!4176 = !DILocation(line: 1680, column: 17, scope: !4132)
!4177 = !DILocalVariable(name: "r_rot", scope: !4132, file: !3, line: 1680, type: !473)
!4178 = !DILocation(line: 1680, column: 26, scope: !4132)
!4179 = !DILocalVariable(name: "vec", scope: !4132, file: !3, line: 1680, type: !563)
!4180 = !DILocation(line: 1680, column: 35, scope: !4132)
!4181 = !DILocalVariable(name: "p_vel", scope: !4132, file: !3, line: 1680, type: !563)
!4182 = !DILocation(line: 1680, column: 42, scope: !4132)
!4183 = !DILocalVariable(name: "x_vec", scope: !4132, file: !3, line: 1681, type: !563)
!4184 = !DILocation(line: 1681, column: 8, scope: !4132)
!4185 = !DILocalVariable(name: "utan", scope: !4132, file: !3, line: 1681, type: !563)
!4186 = !DILocation(line: 1681, column: 34, scope: !4132)
!4187 = !DILocalVariable(name: "vtan", scope: !4132, file: !3, line: 1681, type: !563)
!4188 = !DILocation(line: 1681, column: 59, scope: !4132)
!4189 = !DILocalVariable(name: "rot_vec", scope: !4132, file: !3, line: 1681, type: !563)
!4190 = !DILocation(line: 1681, column: 84, scope: !4132)
!4191 = !DILocalVariable(name: "q_phase", scope: !4132, file: !3, line: 1682, type: !473)
!4192 = !DILocation(line: 1682, column: 8, scope: !4132)
!4193 = !DILocalVariable(name: "use_boids", scope: !4132, file: !3, line: 1684, type: !2901)
!4194 = !DILocation(line: 1684, column: 13, scope: !4132)
!4195 = !DILocation(line: 1684, column: 27, scope: !4132)
!4196 = !DILocation(line: 1684, column: 33, scope: !4132)
!4197 = !DILocation(line: 1684, column: 42, scope: !4132)
!4198 = !DILocation(line: 1684, column: 62, scope: !4132)
!4199 = !DILocation(line: 1685, column: 27, scope: !4132)
!4200 = !DILocation(line: 1685, column: 31, scope: !4132)
!4201 = !DILocation(line: 1685, column: 36, scope: !4132)
!4202 = !DILocation(line: 0, scope: !4132)
!4203 = !DILocation(line: 1684, column: 25, scope: !4132)
!4204 = !DILocalVariable(name: "use_tangents", scope: !4132, file: !3, line: 1686, type: !2901)
!4205 = !DILocation(line: 1686, column: 13, scope: !4132)
!4206 = !DILocation(line: 1686, column: 30, scope: !4132)
!4207 = !DILocation(line: 1686, column: 40, scope: !4132)
!4208 = !DILocation(line: 1686, column: 50, scope: !4132)
!4209 = !DILocation(line: 1687, column: 31, scope: !4132)
!4210 = !DILocation(line: 1687, column: 37, scope: !4132)
!4211 = !DILocation(line: 1687, column: 44, scope: !4132)
!4212 = !DILocation(line: 1687, column: 53, scope: !4132)
!4213 = !DILocation(line: 1687, column: 57, scope: !4132)
!4214 = !DILocation(line: 1687, column: 63, scope: !4132)
!4215 = !DILocation(line: 1687, column: 71, scope: !4132)
!4216 = !DILocation(line: 1686, column: 28, scope: !4132)
!4217 = !DILocalVariable(name: "p", scope: !4132, file: !3, line: 1689, type: !260)
!4218 = !DILocation(line: 1689, column: 6, scope: !4132)
!4219 = !DILocation(line: 1689, column: 10, scope: !4132)
!4220 = !DILocation(line: 1689, column: 15, scope: !4132)
!4221 = !DILocation(line: 1689, column: 21, scope: !4132)
!4222 = !DILocation(line: 1689, column: 13, scope: !4132)
!4223 = !DILocation(line: 1692, column: 6, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1692, column: 6)
!4225 = !DILocation(line: 1692, column: 6, scope: !4132)
!4226 = !DILocation(line: 1693, column: 28, scope: !4224)
!4227 = !DILocation(line: 1693, column: 33, scope: !4224)
!4228 = !DILocation(line: 1693, column: 39, scope: !4224)
!4229 = !DILocation(line: 1693, column: 45, scope: !4224)
!4230 = !DILocation(line: 1693, column: 50, scope: !4224)
!4231 = !DILocation(line: 1693, column: 54, scope: !4224)
!4232 = !DILocation(line: 1693, column: 59, scope: !4224)
!4233 = !DILocation(line: 1693, column: 63, scope: !4224)
!4234 = !DILocation(line: 1693, column: 76, scope: !4224)
!4235 = !DILocation(line: 1693, column: 80, scope: !4224)
!4236 = !DILocation(line: 1693, column: 84, scope: !4224)
!4237 = !DILocation(line: 1693, column: 88, scope: !4224)
!4238 = !DILocation(line: 1693, column: 96, scope: !4224)
!4239 = !DILocation(line: 1693, column: 100, scope: !4224)
!4240 = !DILocation(line: 1693, column: 104, scope: !4224)
!4241 = !DILocation(line: 1693, column: 109, scope: !4224)
!4242 = !DILocation(line: 1693, column: 3, scope: !4224)
!4243 = !DILocation(line: 1695, column: 28, scope: !4224)
!4244 = !DILocation(line: 1695, column: 33, scope: !4224)
!4245 = !DILocation(line: 1695, column: 39, scope: !4224)
!4246 = !DILocation(line: 1695, column: 45, scope: !4224)
!4247 = !DILocation(line: 1695, column: 50, scope: !4224)
!4248 = !DILocation(line: 1695, column: 54, scope: !4224)
!4249 = !DILocation(line: 1695, column: 59, scope: !4224)
!4250 = !DILocation(line: 1695, column: 63, scope: !4224)
!4251 = !DILocation(line: 1695, column: 76, scope: !4224)
!4252 = !DILocation(line: 1695, column: 80, scope: !4224)
!4253 = !DILocation(line: 1695, column: 84, scope: !4224)
!4254 = !DILocation(line: 1695, column: 88, scope: !4224)
!4255 = !DILocation(line: 1695, column: 96, scope: !4224)
!4256 = !DILocation(line: 1695, column: 100, scope: !4224)
!4257 = !DILocation(line: 1695, column: 3, scope: !4224)
!4258 = !DILocation(line: 1698, column: 19, scope: !4132)
!4259 = !DILocation(line: 1698, column: 24, scope: !4132)
!4260 = !DILocation(line: 1698, column: 47, scope: !4132)
!4261 = !DILocation(line: 1698, column: 2, scope: !4132)
!4262 = !DILocation(line: 1703, column: 12, scope: !4132)
!4263 = !DILocation(line: 1703, column: 16, scope: !4132)
!4264 = !DILocation(line: 1703, column: 23, scope: !4132)
!4265 = !DILocation(line: 1703, column: 2, scope: !4132)
!4266 = !DILocation(line: 1706, column: 17, scope: !4132)
!4267 = !DILocation(line: 1706, column: 21, scope: !4132)
!4268 = !DILocation(line: 1706, column: 28, scope: !4132)
!4269 = !DILocation(line: 1706, column: 2, scope: !4132)
!4270 = !DILocation(line: 1707, column: 15, scope: !4132)
!4271 = !DILocation(line: 1707, column: 2, scope: !4132)
!4272 = !DILocation(line: 1710, column: 6, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1710, column: 6)
!4274 = !DILocation(line: 1710, column: 6, scope: !4132)
!4275 = !DILocalVariable(name: "phase", scope: !4276, file: !3, line: 1712, type: !341)
!4276 = distinct !DILexicalBlock(scope: !4273, file: !3, line: 1710, column: 20)
!4277 = !DILocation(line: 1712, column: 9, scope: !4276)
!4278 = !DILocation(line: 1713, column: 13, scope: !4276)
!4279 = !DILocation(line: 1713, column: 37, scope: !4276)
!4280 = !DILocation(line: 1713, column: 43, scope: !4276)
!4281 = !DILocation(line: 1713, column: 52, scope: !4276)
!4282 = !DILocation(line: 1713, column: 51, scope: !4276)
!4283 = !DILocation(line: 1713, column: 35, scope: !4276)
!4284 = !DILocation(line: 1713, column: 19, scope: !4276)
!4285 = !DILocation(line: 1713, column: 18, scope: !4276)
!4286 = !DILocation(line: 1713, column: 3, scope: !4276)
!4287 = !DILocation(line: 1714, column: 27, scope: !4276)
!4288 = !DILocation(line: 1714, column: 33, scope: !4276)
!4289 = !DILocation(line: 1714, column: 42, scope: !4276)
!4290 = !DILocation(line: 1714, column: 41, scope: !4276)
!4291 = !DILocation(line: 1714, column: 25, scope: !4276)
!4292 = !DILocation(line: 1714, column: 9, scope: !4276)
!4293 = !DILocation(line: 1714, column: 8, scope: !4276)
!4294 = !DILocation(line: 1714, column: 6, scope: !4276)
!4295 = !DILocation(line: 1715, column: 16, scope: !4276)
!4296 = !DILocation(line: 1715, column: 22, scope: !4276)
!4297 = !DILocation(line: 1715, column: 28, scope: !4276)
!4298 = !DILocation(line: 1715, column: 3, scope: !4276)
!4299 = !DILocation(line: 1717, column: 18, scope: !4276)
!4300 = !DILocation(line: 1717, column: 22, scope: !4276)
!4301 = !DILocation(line: 1717, column: 28, scope: !4276)
!4302 = !DILocation(line: 1717, column: 3, scope: !4276)
!4303 = !DILocation(line: 1719, column: 14, scope: !4276)
!4304 = !DILocation(line: 1719, column: 20, scope: !4276)
!4305 = !DILocation(line: 1719, column: 3, scope: !4276)
!4306 = !DILocation(line: 1720, column: 13, scope: !4276)
!4307 = !DILocation(line: 1720, column: 27, scope: !4276)
!4308 = !DILocation(line: 1720, column: 32, scope: !4276)
!4309 = !DILocation(line: 1720, column: 18, scope: !4276)
!4310 = !DILocation(line: 1720, column: 3, scope: !4276)
!4311 = !DILocation(line: 1721, column: 13, scope: !4276)
!4312 = !DILocation(line: 1721, column: 19, scope: !4276)
!4313 = !DILocation(line: 1721, column: 3, scope: !4276)
!4314 = !DILocation(line: 1723, column: 16, scope: !4276)
!4315 = !DILocation(line: 1723, column: 3, scope: !4276)
!4316 = !DILocation(line: 1724, column: 2, scope: !4276)
!4317 = !DILocation(line: 1728, column: 6, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1728, column: 6)
!4319 = !DILocation(line: 1728, column: 12, scope: !4318)
!4320 = !DILocation(line: 1728, column: 20, scope: !4318)
!4321 = !DILocation(line: 1728, column: 28, scope: !4318)
!4322 = !DILocation(line: 1728, column: 32, scope: !4318)
!4323 = !DILocation(line: 1728, column: 38, scope: !4318)
!4324 = !DILocation(line: 1728, column: 46, scope: !4318)
!4325 = !DILocation(line: 1728, column: 64, scope: !4318)
!4326 = !DILocation(line: 1728, column: 67, scope: !4318)
!4327 = !DILocation(line: 1728, column: 71, scope: !4318)
!4328 = !DILocation(line: 1728, column: 6, scope: !4132)
!4329 = !DILocation(line: 1729, column: 33, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 1728, column: 78)
!4331 = !DILocation(line: 1729, column: 39, scope: !4330)
!4332 = !DILocation(line: 1729, column: 41, scope: !4330)
!4333 = !DILocation(line: 1729, column: 22, scope: !4330)
!4334 = !DILocation(line: 1729, column: 47, scope: !4330)
!4335 = !DILocation(line: 1729, column: 19, scope: !4330)
!4336 = !DILocation(line: 1729, column: 3, scope: !4330)
!4337 = !DILocation(line: 1729, column: 12, scope: !4330)
!4338 = !DILocation(line: 1730, column: 33, scope: !4330)
!4339 = !DILocation(line: 1730, column: 39, scope: !4330)
!4340 = !DILocation(line: 1730, column: 41, scope: !4330)
!4341 = !DILocation(line: 1730, column: 22, scope: !4330)
!4342 = !DILocation(line: 1730, column: 47, scope: !4330)
!4343 = !DILocation(line: 1730, column: 19, scope: !4330)
!4344 = !DILocation(line: 1730, column: 3, scope: !4330)
!4345 = !DILocation(line: 1730, column: 12, scope: !4330)
!4346 = !DILocation(line: 1731, column: 33, scope: !4330)
!4347 = !DILocation(line: 1731, column: 39, scope: !4330)
!4348 = !DILocation(line: 1731, column: 41, scope: !4330)
!4349 = !DILocation(line: 1731, column: 22, scope: !4330)
!4350 = !DILocation(line: 1731, column: 47, scope: !4330)
!4351 = !DILocation(line: 1731, column: 19, scope: !4330)
!4352 = !DILocation(line: 1731, column: 3, scope: !4330)
!4353 = !DILocation(line: 1731, column: 12, scope: !4330)
!4354 = !DILocation(line: 1733, column: 18, scope: !4330)
!4355 = !DILocation(line: 1733, column: 22, scope: !4330)
!4356 = !DILocation(line: 1733, column: 29, scope: !4330)
!4357 = !DILocation(line: 1733, column: 3, scope: !4330)
!4358 = !DILocation(line: 1734, column: 16, scope: !4330)
!4359 = !DILocation(line: 1734, column: 3, scope: !4330)
!4360 = !DILocation(line: 1735, column: 2, scope: !4330)
!4361 = !DILocation(line: 1738, column: 6, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1738, column: 6)
!4363 = !DILocation(line: 1738, column: 12, scope: !4362)
!4364 = !DILocation(line: 1738, column: 19, scope: !4362)
!4365 = !DILocation(line: 1738, column: 6, scope: !4132)
!4366 = !DILocation(line: 1739, column: 33, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 1738, column: 36)
!4368 = !DILocation(line: 1739, column: 39, scope: !4367)
!4369 = !DILocation(line: 1739, column: 41, scope: !4367)
!4370 = !DILocation(line: 1739, column: 22, scope: !4367)
!4371 = !DILocation(line: 1739, column: 47, scope: !4367)
!4372 = !DILocation(line: 1739, column: 19, scope: !4367)
!4373 = !DILocation(line: 1739, column: 3, scope: !4367)
!4374 = !DILocation(line: 1739, column: 12, scope: !4367)
!4375 = !DILocation(line: 1740, column: 33, scope: !4367)
!4376 = !DILocation(line: 1740, column: 39, scope: !4367)
!4377 = !DILocation(line: 1740, column: 41, scope: !4367)
!4378 = !DILocation(line: 1740, column: 22, scope: !4367)
!4379 = !DILocation(line: 1740, column: 47, scope: !4367)
!4380 = !DILocation(line: 1740, column: 19, scope: !4367)
!4381 = !DILocation(line: 1740, column: 3, scope: !4367)
!4382 = !DILocation(line: 1740, column: 12, scope: !4367)
!4383 = !DILocation(line: 1741, column: 33, scope: !4367)
!4384 = !DILocation(line: 1741, column: 39, scope: !4367)
!4385 = !DILocation(line: 1741, column: 41, scope: !4367)
!4386 = !DILocation(line: 1741, column: 22, scope: !4367)
!4387 = !DILocation(line: 1741, column: 47, scope: !4367)
!4388 = !DILocation(line: 1741, column: 19, scope: !4367)
!4389 = !DILocation(line: 1741, column: 3, scope: !4367)
!4390 = !DILocation(line: 1741, column: 12, scope: !4367)
!4391 = !DILocation(line: 1743, column: 18, scope: !4367)
!4392 = !DILocation(line: 1743, column: 22, scope: !4367)
!4393 = !DILocation(line: 1743, column: 28, scope: !4367)
!4394 = !DILocation(line: 1743, column: 3, scope: !4367)
!4395 = !DILocation(line: 1744, column: 16, scope: !4367)
!4396 = !DILocation(line: 1744, column: 3, scope: !4367)
!4397 = !DILocation(line: 1745, column: 2, scope: !4367)
!4398 = !DILocation(line: 1748, column: 6, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1748, column: 6)
!4400 = !DILocation(line: 1748, column: 12, scope: !4399)
!4401 = !DILocation(line: 1748, column: 23, scope: !4399)
!4402 = !DILocation(line: 1748, column: 6, scope: !4132)
!4403 = !DILocation(line: 1749, column: 33, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 1748, column: 32)
!4405 = !DILocation(line: 1749, column: 39, scope: !4404)
!4406 = !DILocation(line: 1749, column: 41, scope: !4404)
!4407 = !DILocation(line: 1749, column: 22, scope: !4404)
!4408 = !DILocation(line: 1749, column: 47, scope: !4404)
!4409 = !DILocation(line: 1749, column: 19, scope: !4404)
!4410 = !DILocation(line: 1749, column: 3, scope: !4404)
!4411 = !DILocation(line: 1749, column: 12, scope: !4404)
!4412 = !DILocation(line: 1750, column: 33, scope: !4404)
!4413 = !DILocation(line: 1750, column: 39, scope: !4404)
!4414 = !DILocation(line: 1750, column: 41, scope: !4404)
!4415 = !DILocation(line: 1750, column: 22, scope: !4404)
!4416 = !DILocation(line: 1750, column: 47, scope: !4404)
!4417 = !DILocation(line: 1750, column: 19, scope: !4404)
!4418 = !DILocation(line: 1750, column: 3, scope: !4404)
!4419 = !DILocation(line: 1750, column: 12, scope: !4404)
!4420 = !DILocation(line: 1751, column: 33, scope: !4404)
!4421 = !DILocation(line: 1751, column: 39, scope: !4404)
!4422 = !DILocation(line: 1751, column: 41, scope: !4404)
!4423 = !DILocation(line: 1751, column: 22, scope: !4404)
!4424 = !DILocation(line: 1751, column: 47, scope: !4404)
!4425 = !DILocation(line: 1751, column: 19, scope: !4404)
!4426 = !DILocation(line: 1751, column: 3, scope: !4404)
!4427 = !DILocation(line: 1751, column: 12, scope: !4404)
!4428 = !DILocation(line: 1752, column: 33, scope: !4404)
!4429 = !DILocation(line: 1752, column: 39, scope: !4404)
!4430 = !DILocation(line: 1752, column: 41, scope: !4404)
!4431 = !DILocation(line: 1752, column: 22, scope: !4404)
!4432 = !DILocation(line: 1752, column: 47, scope: !4404)
!4433 = !DILocation(line: 1752, column: 19, scope: !4404)
!4434 = !DILocation(line: 1752, column: 3, scope: !4404)
!4435 = !DILocation(line: 1752, column: 12, scope: !4404)
!4436 = !DILocation(line: 1753, column: 16, scope: !4404)
!4437 = !DILocation(line: 1753, column: 3, scope: !4404)
!4438 = !DILocation(line: 1755, column: 16, scope: !4404)
!4439 = !DILocation(line: 1755, column: 20, scope: !4404)
!4440 = !DILocation(line: 1755, column: 24, scope: !4404)
!4441 = !DILocation(line: 1755, column: 3, scope: !4404)
!4442 = !DILocation(line: 1756, column: 15, scope: !4404)
!4443 = !DILocation(line: 1756, column: 21, scope: !4404)
!4444 = !DILocation(line: 1756, column: 27, scope: !4404)
!4445 = !DILocation(line: 1756, column: 3, scope: !4404)
!4446 = !DILocation(line: 1757, column: 2, scope: !4404)
!4447 = !DILocation(line: 1759, column: 6, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1759, column: 6)
!4449 = !DILocation(line: 1759, column: 6, scope: !4132)
!4450 = !DILocalVariable(name: "dvec", scope: !4451, file: !3, line: 1760, type: !563)
!4451 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 1759, column: 17)
!4452 = !DILocation(line: 1760, column: 9, scope: !4451)
!4453 = !DILocalVariable(name: "q", scope: !4451, file: !3, line: 1760, type: !473)
!4454 = !DILocation(line: 1760, column: 18, scope: !4451)
!4455 = !DILocalVariable(name: "mat", scope: !4451, file: !3, line: 1760, type: !1763)
!4456 = !DILocation(line: 1760, column: 24, scope: !4451)
!4457 = !DILocation(line: 1762, column: 14, scope: !4451)
!4458 = !DILocation(line: 1762, column: 21, scope: !4451)
!4459 = !DILocation(line: 1762, column: 24, scope: !4451)
!4460 = !DILocation(line: 1762, column: 3, scope: !4451)
!4461 = !DILocation(line: 1765, column: 11, scope: !4451)
!4462 = !DILocation(line: 1765, column: 18, scope: !4451)
!4463 = !DILocation(line: 1765, column: 3, scope: !4451)
!4464 = !DILocation(line: 1768, column: 13, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4451, file: !3, line: 1768, column: 7)
!4466 = !DILocation(line: 1768, column: 7, scope: !4465)
!4467 = !DILocation(line: 1768, column: 20, scope: !4465)
!4468 = !DILocation(line: 1768, column: 7, scope: !4451)
!4469 = !DILocation(line: 1769, column: 16, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4465, file: !3, line: 1768, column: 28)
!4471 = !DILocation(line: 1769, column: 23, scope: !4470)
!4472 = !DILocation(line: 1769, column: 28, scope: !4470)
!4473 = !DILocation(line: 1769, column: 33, scope: !4470)
!4474 = !DILocation(line: 1769, column: 37, scope: !4470)
!4475 = !DILocation(line: 1769, column: 4, scope: !4470)
!4476 = !DILocation(line: 1770, column: 17, scope: !4470)
!4477 = !DILocation(line: 1770, column: 24, scope: !4470)
!4478 = !DILocation(line: 1770, column: 4, scope: !4470)
!4479 = !DILocation(line: 1771, column: 3, scope: !4470)
!4480 = !DILocation(line: 1773, column: 15, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4465, file: !3, line: 1772, column: 8)
!4482 = !DILocation(line: 1773, column: 22, scope: !4481)
!4483 = !DILocation(line: 1773, column: 27, scope: !4481)
!4484 = !DILocation(line: 1773, column: 4, scope: !4481)
!4485 = !DILocation(line: 1777, column: 19, scope: !4451)
!4486 = !DILocation(line: 1777, column: 25, scope: !4451)
!4487 = !DILocation(line: 1777, column: 32, scope: !4451)
!4488 = !DILocation(line: 1777, column: 39, scope: !4451)
!4489 = !DILocation(line: 1777, column: 3, scope: !4451)
!4490 = !DILocation(line: 1778, column: 15, scope: !4451)
!4491 = !DILocation(line: 1778, column: 23, scope: !4451)
!4492 = !DILocation(line: 1778, column: 30, scope: !4451)
!4493 = !DILocation(line: 1778, column: 35, scope: !4451)
!4494 = !DILocation(line: 1778, column: 3, scope: !4451)
!4495 = !DILocation(line: 1779, column: 16, scope: !4451)
!4496 = !DILocation(line: 1779, column: 3, scope: !4451)
!4497 = !DILocation(line: 1780, column: 16, scope: !4451)
!4498 = !DILocation(line: 1780, column: 24, scope: !4451)
!4499 = !DILocation(line: 1780, column: 3, scope: !4451)
!4500 = !DILocation(line: 1781, column: 16, scope: !4451)
!4501 = !DILocation(line: 1781, column: 3, scope: !4451)
!4502 = !DILocation(line: 1782, column: 17, scope: !4451)
!4503 = !DILocation(line: 1782, column: 25, scope: !4451)
!4504 = !DILocation(line: 1782, column: 33, scope: !4451)
!4505 = !DILocation(line: 1782, column: 3, scope: !4451)
!4506 = !DILocation(line: 1785, column: 23, scope: !4451)
!4507 = !DILocation(line: 1785, column: 25, scope: !4451)
!4508 = !DILocation(line: 1785, column: 3, scope: !4451)
!4509 = !DILocation(line: 1786, column: 14, scope: !4451)
!4510 = !DILocation(line: 1786, column: 21, scope: !4451)
!4511 = !DILocation(line: 1786, column: 26, scope: !4451)
!4512 = !DILocation(line: 1786, column: 3, scope: !4451)
!4513 = !DILocation(line: 1787, column: 2, scope: !4451)
!4514 = !DILocation(line: 1793, column: 7, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1793, column: 7)
!4516 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 1788, column: 7)
!4517 = !DILocation(line: 1793, column: 13, scope: !4515)
!4518 = !DILocation(line: 1793, column: 7, scope: !4516)
!4519 = !DILocation(line: 1794, column: 16, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 1793, column: 20)
!4521 = !DILocation(line: 1794, column: 21, scope: !4520)
!4522 = !DILocation(line: 1794, column: 25, scope: !4520)
!4523 = !DILocation(line: 1794, column: 31, scope: !4520)
!4524 = !DILocation(line: 1794, column: 36, scope: !4520)
!4525 = !DILocation(line: 1794, column: 40, scope: !4520)
!4526 = !DILocation(line: 1794, column: 51, scope: !4520)
!4527 = !DILocation(line: 1794, column: 4, scope: !4520)
!4528 = !DILocation(line: 1795, column: 3, scope: !4520)
!4529 = !DILocation(line: 1798, column: 7, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1798, column: 7)
!4531 = !DILocation(line: 1798, column: 13, scope: !4530)
!4532 = !DILocation(line: 1798, column: 20, scope: !4530)
!4533 = !DILocation(line: 1798, column: 23, scope: !4530)
!4534 = !DILocation(line: 1798, column: 29, scope: !4530)
!4535 = !DILocation(line: 1798, column: 35, scope: !4530)
!4536 = !DILocation(line: 1798, column: 7, scope: !4516)
!4537 = !DILocation(line: 1799, column: 16, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 1798, column: 43)
!4539 = !DILocation(line: 1799, column: 21, scope: !4538)
!4540 = !DILocation(line: 1799, column: 26, scope: !4538)
!4541 = !DILocation(line: 1799, column: 33, scope: !4538)
!4542 = !DILocation(line: 1799, column: 4, scope: !4538)
!4543 = !DILocation(line: 1800, column: 14, scope: !4538)
!4544 = !DILocation(line: 1800, column: 19, scope: !4538)
!4545 = !DILocation(line: 1800, column: 25, scope: !4538)
!4546 = !DILocation(line: 1800, column: 31, scope: !4538)
!4547 = !DILocation(line: 1800, column: 30, scope: !4538)
!4548 = !DILocation(line: 1800, column: 4, scope: !4538)
!4549 = !DILocation(line: 1801, column: 3, scope: !4538)
!4550 = !DILocation(line: 1804, column: 7, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1804, column: 7)
!4552 = !DILocation(line: 1804, column: 13, scope: !4551)
!4553 = !DILocation(line: 1804, column: 21, scope: !4551)
!4554 = !DILocation(line: 1804, column: 7, scope: !4516)
!4555 = !DILocation(line: 1805, column: 17, scope: !4551)
!4556 = !DILocation(line: 1805, column: 22, scope: !4551)
!4557 = !DILocation(line: 1805, column: 27, scope: !4551)
!4558 = !DILocation(line: 1805, column: 33, scope: !4551)
!4559 = !DILocation(line: 1805, column: 4, scope: !4551)
!4560 = !DILocation(line: 1808, column: 7, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1808, column: 7)
!4562 = !DILocation(line: 1808, column: 12, scope: !4561)
!4563 = !DILocation(line: 1808, column: 17, scope: !4561)
!4564 = !DILocation(line: 1808, column: 20, scope: !4561)
!4565 = !DILocation(line: 1808, column: 26, scope: !4561)
!4566 = !DILocation(line: 1808, column: 33, scope: !4561)
!4567 = !DILocation(line: 1808, column: 7, scope: !4516)
!4568 = !DILocation(line: 1809, column: 17, scope: !4561)
!4569 = !DILocation(line: 1809, column: 22, scope: !4561)
!4570 = !DILocation(line: 1809, column: 28, scope: !4561)
!4571 = !DILocation(line: 1809, column: 34, scope: !4561)
!4572 = !DILocation(line: 1809, column: 4, scope: !4561)
!4573 = !DILocation(line: 1812, column: 7, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1812, column: 7)
!4575 = !DILocation(line: 1812, column: 13, scope: !4574)
!4576 = !DILocation(line: 1812, column: 23, scope: !4574)
!4577 = !DILocation(line: 1812, column: 7, scope: !4516)
!4578 = !DILocation(line: 1813, column: 20, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 1812, column: 31)
!4580 = !DILocation(line: 1813, column: 25, scope: !4579)
!4581 = !DILocation(line: 1813, column: 29, scope: !4579)
!4582 = !DILocation(line: 1813, column: 4, scope: !4579)
!4583 = !DILocation(line: 1814, column: 17, scope: !4579)
!4584 = !DILocation(line: 1814, column: 22, scope: !4579)
!4585 = !DILocation(line: 1814, column: 27, scope: !4579)
!4586 = !DILocation(line: 1814, column: 33, scope: !4579)
!4587 = !DILocation(line: 1814, column: 4, scope: !4579)
!4588 = !DILocation(line: 1815, column: 3, scope: !4579)
!4589 = !DILocation(line: 1816, column: 7, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1816, column: 7)
!4591 = !DILocation(line: 1816, column: 13, scope: !4590)
!4592 = !DILocation(line: 1816, column: 23, scope: !4590)
!4593 = !DILocation(line: 1816, column: 7, scope: !4516)
!4594 = !DILocation(line: 1817, column: 20, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 1816, column: 31)
!4596 = !DILocation(line: 1817, column: 25, scope: !4595)
!4597 = !DILocation(line: 1817, column: 29, scope: !4595)
!4598 = !DILocation(line: 1817, column: 4, scope: !4595)
!4599 = !DILocation(line: 1818, column: 17, scope: !4595)
!4600 = !DILocation(line: 1818, column: 22, scope: !4595)
!4601 = !DILocation(line: 1818, column: 27, scope: !4595)
!4602 = !DILocation(line: 1818, column: 33, scope: !4595)
!4603 = !DILocation(line: 1818, column: 4, scope: !4595)
!4604 = !DILocation(line: 1819, column: 3, scope: !4595)
!4605 = !DILocation(line: 1820, column: 7, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1820, column: 7)
!4607 = !DILocation(line: 1820, column: 13, scope: !4606)
!4608 = !DILocation(line: 1820, column: 23, scope: !4606)
!4609 = !DILocation(line: 1820, column: 7, scope: !4516)
!4610 = !DILocation(line: 1821, column: 20, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 1820, column: 31)
!4612 = !DILocation(line: 1821, column: 25, scope: !4611)
!4613 = !DILocation(line: 1821, column: 29, scope: !4611)
!4614 = !DILocation(line: 1821, column: 4, scope: !4611)
!4615 = !DILocation(line: 1822, column: 17, scope: !4611)
!4616 = !DILocation(line: 1822, column: 22, scope: !4611)
!4617 = !DILocation(line: 1822, column: 27, scope: !4611)
!4618 = !DILocation(line: 1822, column: 33, scope: !4611)
!4619 = !DILocation(line: 1822, column: 4, scope: !4611)
!4620 = !DILocation(line: 1823, column: 3, scope: !4611)
!4621 = !DILocation(line: 1829, column: 7, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1829, column: 7)
!4623 = !DILocation(line: 1829, column: 13, scope: !4622)
!4624 = !DILocation(line: 1829, column: 21, scope: !4622)
!4625 = !DILocation(line: 1829, column: 7, scope: !4516)
!4626 = !DILocation(line: 1830, column: 17, scope: !4622)
!4627 = !DILocation(line: 1830, column: 22, scope: !4622)
!4628 = !DILocation(line: 1830, column: 29, scope: !4622)
!4629 = !DILocation(line: 1830, column: 35, scope: !4622)
!4630 = !DILocation(line: 1830, column: 4, scope: !4622)
!4631 = !DILocation(line: 1833, column: 7, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1833, column: 7)
!4633 = !DILocation(line: 1833, column: 13, scope: !4632)
!4634 = !DILocation(line: 1833, column: 21, scope: !4632)
!4635 = !DILocation(line: 1833, column: 7, scope: !4516)
!4636 = !DILocation(line: 1834, column: 17, scope: !4632)
!4637 = !DILocation(line: 1834, column: 22, scope: !4632)
!4638 = !DILocation(line: 1834, column: 29, scope: !4632)
!4639 = !DILocation(line: 1834, column: 35, scope: !4632)
!4640 = !DILocation(line: 1834, column: 4, scope: !4632)
!4641 = !DILocation(line: 1836, column: 15, scope: !4516)
!4642 = !DILocation(line: 1836, column: 22, scope: !4516)
!4643 = !DILocation(line: 1836, column: 27, scope: !4516)
!4644 = !DILocation(line: 1836, column: 37, scope: !4516)
!4645 = !DILocation(line: 1836, column: 3, scope: !4516)
!4646 = !DILocation(line: 1839, column: 14, scope: !4516)
!4647 = !DILocation(line: 1839, column: 21, scope: !4516)
!4648 = !DILocation(line: 1839, column: 24, scope: !4516)
!4649 = !DILocation(line: 1839, column: 3, scope: !4516)
!4650 = !DILocation(line: 1842, column: 11, scope: !4516)
!4651 = !DILocation(line: 1842, column: 18, scope: !4516)
!4652 = !DILocation(line: 1842, column: 3, scope: !4516)
!4653 = !DILocation(line: 1844, column: 7, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1844, column: 7)
!4655 = !DILocation(line: 1844, column: 13, scope: !4654)
!4656 = !DILocation(line: 1844, column: 7, scope: !4516)
!4657 = !DILocalVariable(name: "use_global_space", scope: !4658, file: !3, line: 1845, type: !672)
!4658 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 1844, column: 22)
!4659 = !DILocation(line: 1845, column: 9, scope: !4658)
!4660 = !DILocation(line: 1848, column: 12, scope: !4658)
!4661 = !DILocation(line: 1848, column: 18, scope: !4658)
!4662 = !DILocation(line: 1848, column: 4, scope: !4658)
!4663 = !DILocation(line: 1851, column: 17, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 1848, column: 27)
!4665 = !DILocation(line: 1851, column: 26, scope: !4664)
!4666 = !DILocation(line: 1851, column: 6, scope: !4664)
!4667 = !DILocation(line: 1852, column: 23, scope: !4664)
!4668 = !DILocation(line: 1853, column: 6, scope: !4664)
!4669 = !DILocation(line: 1855, column: 17, scope: !4664)
!4670 = !DILocation(line: 1855, column: 26, scope: !4664)
!4671 = !DILocation(line: 1855, column: 6, scope: !4664)
!4672 = !DILocation(line: 1856, column: 23, scope: !4664)
!4673 = !DILocation(line: 1857, column: 6, scope: !4664)
!4674 = !DILocation(line: 1861, column: 14, scope: !4664)
!4675 = !DILocation(line: 1861, column: 20, scope: !4664)
!4676 = !DILocation(line: 1861, column: 28, scope: !4664)
!4677 = !DILocation(line: 1861, column: 6, scope: !4664)
!4678 = !DILocation(line: 1861, column: 47, scope: !4664)
!4679 = !DILocation(line: 1862, column: 23, scope: !4664)
!4680 = !DILocation(line: 1863, column: 6, scope: !4664)
!4681 = !DILocation(line: 1867, column: 17, scope: !4664)
!4682 = !DILocation(line: 1867, column: 26, scope: !4664)
!4683 = !DILocation(line: 1867, column: 30, scope: !4664)
!4684 = !DILocation(line: 1867, column: 36, scope: !4664)
!4685 = !DILocation(line: 1867, column: 42, scope: !4664)
!4686 = !DILocation(line: 1867, column: 50, scope: !4664)
!4687 = !DILocation(line: 1867, column: 6, scope: !4664)
!4688 = !DILocation(line: 1868, column: 23, scope: !4664)
!4689 = !DILocation(line: 1869, column: 6, scope: !4664)
!4690 = !DILocation(line: 1871, column: 23, scope: !4664)
!4691 = !DILocation(line: 1872, column: 6, scope: !4664)
!4692 = !DILocation(line: 1878, column: 8, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 1878, column: 8)
!4694 = !DILocation(line: 1878, column: 8, scope: !4658)
!4695 = !DILocation(line: 1879, column: 15, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 1878, column: 26)
!4697 = !DILocation(line: 1879, column: 5, scope: !4696)
!4698 = !DILocation(line: 1880, column: 17, scope: !4696)
!4699 = !DILocation(line: 1880, column: 21, scope: !4696)
!4700 = !DILocation(line: 1880, column: 5, scope: !4696)
!4701 = !DILocation(line: 1883, column: 9, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 1883, column: 9)
!4703 = !DILocation(line: 1883, column: 15, scope: !4702)
!4704 = !DILocation(line: 1883, column: 26, scope: !4702)
!4705 = !DILocation(line: 1883, column: 9, scope: !4696)
!4706 = !DILocation(line: 1884, column: 21, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 1883, column: 35)
!4708 = !DILocation(line: 1884, column: 26, scope: !4707)
!4709 = !DILocation(line: 1884, column: 30, scope: !4707)
!4710 = !DILocation(line: 1884, column: 37, scope: !4707)
!4711 = !DILocation(line: 1884, column: 43, scope: !4707)
!4712 = !DILocation(line: 1884, column: 6, scope: !4707)
!4713 = !DILocation(line: 1885, column: 5, scope: !4707)
!4714 = !DILocation(line: 1887, column: 17, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 1886, column: 10)
!4716 = !DILocation(line: 1887, column: 22, scope: !4715)
!4717 = !DILocation(line: 1887, column: 6, scope: !4715)
!4718 = !DILocation(line: 1889, column: 4, scope: !4696)
!4719 = !DILocalVariable(name: "q_obmat", scope: !4720, file: !3, line: 1892, type: !473)
!4720 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 1890, column: 9)
!4721 = !DILocation(line: 1892, column: 11, scope: !4720)
!4722 = !DILocalVariable(name: "q_imat", scope: !4720, file: !3, line: 1893, type: !473)
!4723 = !DILocation(line: 1893, column: 11, scope: !4720)
!4724 = !DILocation(line: 1895, column: 18, scope: !4720)
!4725 = !DILocation(line: 1895, column: 27, scope: !4720)
!4726 = !DILocation(line: 1895, column: 31, scope: !4720)
!4727 = !DILocation(line: 1895, column: 5, scope: !4720)
!4728 = !DILocation(line: 1896, column: 18, scope: !4720)
!4729 = !DILocation(line: 1896, column: 26, scope: !4720)
!4730 = !DILocation(line: 1896, column: 5, scope: !4720)
!4731 = !DILocation(line: 1899, column: 9, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 1899, column: 9)
!4733 = !DILocation(line: 1899, column: 15, scope: !4732)
!4734 = !DILocation(line: 1899, column: 23, scope: !4732)
!4735 = !DILocation(line: 1899, column: 9, scope: !4720)
!4736 = !DILocalVariable(name: "rot_vec_local", scope: !4737, file: !3, line: 1900, type: !563)
!4737 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 1899, column: 44)
!4738 = !DILocation(line: 1900, column: 12, scope: !4737)
!4739 = !DILocation(line: 1903, column: 16, scope: !4737)
!4740 = !DILocation(line: 1903, column: 6, scope: !4737)
!4741 = !DILocation(line: 1904, column: 17, scope: !4737)
!4742 = !DILocation(line: 1904, column: 32, scope: !4737)
!4743 = !DILocation(line: 1904, column: 6, scope: !4737)
!4744 = !DILocation(line: 1905, column: 16, scope: !4737)
!4745 = !DILocation(line: 1905, column: 24, scope: !4737)
!4746 = !DILocation(line: 1905, column: 6, scope: !4737)
!4747 = !DILocation(line: 1906, column: 19, scope: !4737)
!4748 = !DILocation(line: 1906, column: 6, scope: !4737)
!4749 = !DILocation(line: 1908, column: 18, scope: !4737)
!4750 = !DILocation(line: 1908, column: 22, scope: !4737)
!4751 = !DILocation(line: 1908, column: 6, scope: !4737)
!4752 = !DILocation(line: 1909, column: 5, scope: !4737)
!4753 = !DILocalVariable(name: "tmat", scope: !4754, file: !3, line: 1912, type: !1763)
!4754 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 1910, column: 10)
!4755 = !DILocation(line: 1912, column: 12, scope: !4754)
!4756 = !DILocalVariable(name: "rot_vec_local", scope: !4754, file: !3, line: 1917, type: !1796)
!4757 = !DILocation(line: 1917, column: 13, scope: !4754)
!4758 = !DILocation(line: 1917, column: 29, scope: !4754)
!4759 = !DILocalVariable(name: "vtan_local", scope: !4754, file: !3, line: 1918, type: !1796)
!4760 = !DILocation(line: 1918, column: 13, scope: !4754)
!4761 = !DILocation(line: 1918, column: 29, scope: !4754)
!4762 = !DILocalVariable(name: "utan_local", scope: !4754, file: !3, line: 1919, type: !1796)
!4763 = !DILocation(line: 1919, column: 13, scope: !4754)
!4764 = !DILocation(line: 1919, column: 29, scope: !4754)
!4765 = !DILocation(line: 1925, column: 17, scope: !4754)
!4766 = !DILocation(line: 1925, column: 32, scope: !4754)
!4767 = !DILocation(line: 1925, column: 6, scope: !4754)
!4768 = !DILocation(line: 1926, column: 16, scope: !4754)
!4769 = !DILocation(line: 1926, column: 24, scope: !4754)
!4770 = !DILocation(line: 1926, column: 6, scope: !4754)
!4771 = !DILocation(line: 1929, column: 17, scope: !4754)
!4772 = !DILocation(line: 1929, column: 29, scope: !4754)
!4773 = !DILocation(line: 1929, column: 6, scope: !4754)
!4774 = !DILocation(line: 1930, column: 16, scope: !4754)
!4775 = !DILocation(line: 1930, column: 24, scope: !4754)
!4776 = !DILocation(line: 1930, column: 6, scope: !4754)
!4777 = !DILocation(line: 1933, column: 20, scope: !4754)
!4778 = !DILocation(line: 1933, column: 32, scope: !4754)
!4779 = !DILocation(line: 1933, column: 44, scope: !4754)
!4780 = !DILocation(line: 1933, column: 6, scope: !4754)
!4781 = !DILocation(line: 1934, column: 20, scope: !4754)
!4782 = !DILocation(line: 1934, column: 32, scope: !4754)
!4783 = !DILocation(line: 1934, column: 44, scope: !4754)
!4784 = !DILocation(line: 1934, column: 6, scope: !4754)
!4785 = !DILocation(line: 1937, column: 19, scope: !4754)
!4786 = !DILocation(line: 1937, column: 23, scope: !4754)
!4787 = !DILocation(line: 1937, column: 6, scope: !4754)
!4788 = !DILocation(line: 1941, column: 9, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 1941, column: 9)
!4790 = !DILocation(line: 1941, column: 15, scope: !4789)
!4791 = !DILocation(line: 1941, column: 26, scope: !4789)
!4792 = !DILocation(line: 1941, column: 9, scope: !4720)
!4793 = !DILocation(line: 1942, column: 18, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4789, file: !3, line: 1941, column: 35)
!4795 = !DILocation(line: 1942, column: 25, scope: !4794)
!4796 = !DILocation(line: 1942, column: 32, scope: !4794)
!4797 = !DILocation(line: 1942, column: 6, scope: !4794)
!4798 = !DILocation(line: 1943, column: 21, scope: !4794)
!4799 = !DILocation(line: 1943, column: 26, scope: !4794)
!4800 = !DILocation(line: 1943, column: 30, scope: !4794)
!4801 = !DILocation(line: 1943, column: 37, scope: !4794)
!4802 = !DILocation(line: 1943, column: 43, scope: !4794)
!4803 = !DILocation(line: 1943, column: 6, scope: !4794)
!4804 = !DILocation(line: 1944, column: 5, scope: !4794)
!4805 = !DILocation(line: 1946, column: 17, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4789, file: !3, line: 1945, column: 10)
!4807 = !DILocation(line: 1946, column: 22, scope: !4806)
!4808 = !DILocation(line: 1946, column: 6, scope: !4806)
!4809 = !DILocation(line: 1949, column: 17, scope: !4720)
!4810 = !DILocation(line: 1949, column: 22, scope: !4720)
!4811 = !DILocation(line: 1949, column: 31, scope: !4720)
!4812 = !DILocation(line: 1949, column: 5, scope: !4720)
!4813 = !DILocation(line: 1953, column: 15, scope: !4658)
!4814 = !DILocation(line: 1953, column: 21, scope: !4658)
!4815 = !DILocation(line: 1953, column: 13, scope: !4658)
!4816 = !DILocation(line: 1954, column: 8, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 1954, column: 8)
!4818 = !DILocation(line: 1954, column: 14, scope: !4817)
!4819 = !DILocation(line: 1954, column: 27, scope: !4817)
!4820 = !DILocation(line: 1954, column: 8, scope: !4658)
!4821 = !DILocation(line: 1955, column: 17, scope: !4817)
!4822 = !DILocation(line: 1955, column: 23, scope: !4817)
!4823 = !DILocation(line: 1955, column: 49, scope: !4817)
!4824 = !DILocation(line: 1955, column: 55, scope: !4817)
!4825 = !DILocation(line: 1955, column: 57, scope: !4817)
!4826 = !DILocation(line: 1955, column: 38, scope: !4817)
!4827 = !DILocation(line: 1955, column: 36, scope: !4817)
!4828 = !DILocation(line: 1955, column: 14, scope: !4817)
!4829 = !DILocation(line: 1955, column: 5, scope: !4817)
!4830 = !DILocation(line: 1956, column: 24, scope: !4658)
!4831 = !DILocation(line: 1956, column: 32, scope: !4658)
!4832 = !DILocation(line: 1956, column: 39, scope: !4658)
!4833 = !DILocation(line: 1956, column: 47, scope: !4658)
!4834 = !DILocation(line: 1956, column: 4, scope: !4658)
!4835 = !DILocation(line: 1959, column: 16, scope: !4658)
!4836 = !DILocation(line: 1959, column: 23, scope: !4658)
!4837 = !DILocation(line: 1959, column: 28, scope: !4658)
!4838 = !DILocation(line: 1959, column: 33, scope: !4658)
!4839 = !DILocation(line: 1959, column: 4, scope: !4658)
!4840 = !DILocation(line: 1960, column: 3, scope: !4658)
!4841 = !DILocation(line: 1964, column: 11, scope: !4516)
!4842 = !DILocation(line: 1964, column: 18, scope: !4516)
!4843 = !DILocation(line: 1964, column: 3, scope: !4516)
!4844 = !DILocation(line: 1966, column: 7, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1966, column: 7)
!4846 = !DILocation(line: 1966, column: 13, scope: !4845)
!4847 = !DILocation(line: 1966, column: 7, scope: !4516)
!4848 = !DILocation(line: 1967, column: 8, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1967, column: 8)
!4850 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 1966, column: 22)
!4851 = !DILocation(line: 1967, column: 14, scope: !4849)
!4852 = !DILocation(line: 1967, column: 22, scope: !4849)
!4853 = !DILocation(line: 1967, column: 8, scope: !4850)
!4854 = !DILocation(line: 1968, column: 16, scope: !4849)
!4855 = !DILocation(line: 1968, column: 23, scope: !4849)
!4856 = !DILocation(line: 1968, column: 28, scope: !4849)
!4857 = !DILocation(line: 1968, column: 5, scope: !4849)
!4858 = !DILocation(line: 1970, column: 33, scope: !4849)
!4859 = !DILocation(line: 1970, column: 39, scope: !4849)
!4860 = !DILocation(line: 1970, column: 48, scope: !4849)
!4861 = !DILocation(line: 1970, column: 55, scope: !4849)
!4862 = !DILocation(line: 1970, column: 62, scope: !4849)
!4863 = !DILocation(line: 1970, column: 5, scope: !4849)
!4864 = !DILocation(line: 1972, column: 17, scope: !4850)
!4865 = !DILocation(line: 1972, column: 24, scope: !4850)
!4866 = !DILocation(line: 1972, column: 4, scope: !4850)
!4867 = !DILocation(line: 1973, column: 14, scope: !4850)
!4868 = !DILocation(line: 1973, column: 21, scope: !4850)
!4869 = !DILocation(line: 1973, column: 26, scope: !4850)
!4870 = !DILocation(line: 1973, column: 32, scope: !4850)
!4871 = !DILocation(line: 1973, column: 4, scope: !4850)
!4872 = !DILocation(line: 1974, column: 3, scope: !4850)
!4873 = !DILocation(line: 1976, column: 1, scope: !4132)
!4874 = distinct !DISubprogram(name: "normalize_v3", scope: !4875, file: !4875, line: 830, type: !4876, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!4875 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4876 = !DISubroutineType(types: !4877)
!4877 = !{!341, !1796}
!4878 = !DILocalVariable(name: "n", arg: 1, scope: !4874, file: !4875, line: 830, type: !1796)
!4879 = !DILocation(line: 830, column: 34, scope: !4874)
!4880 = !DILocation(line: 832, column: 25, scope: !4874)
!4881 = !DILocation(line: 832, column: 28, scope: !4874)
!4882 = !DILocation(line: 832, column: 9, scope: !4874)
!4883 = !DILocation(line: 832, column: 2, scope: !4874)
!4884 = distinct !DISubprogram(name: "mul_v3_fl", scope: !4875, file: !4875, line: 392, type: !4885, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!4885 = !DISubroutineType(types: !4886)
!4886 = !{null, !1796, !341}
!4887 = !DILocalVariable(name: "r", arg: 1, scope: !4884, file: !4875, line: 392, type: !1796)
!4888 = !DILocation(line: 392, column: 30, scope: !4884)
!4889 = !DILocalVariable(name: "f", arg: 2, scope: !4884, file: !4875, line: 392, type: !341)
!4890 = !DILocation(line: 392, column: 42, scope: !4884)
!4891 = !DILocation(line: 394, column: 10, scope: !4884)
!4892 = !DILocation(line: 394, column: 2, scope: !4884)
!4893 = !DILocation(line: 394, column: 7, scope: !4884)
!4894 = !DILocation(line: 395, column: 10, scope: !4884)
!4895 = !DILocation(line: 395, column: 2, scope: !4884)
!4896 = !DILocation(line: 395, column: 7, scope: !4884)
!4897 = !DILocation(line: 396, column: 10, scope: !4884)
!4898 = !DILocation(line: 396, column: 2, scope: !4884)
!4899 = !DILocation(line: 396, column: 7, scope: !4884)
!4900 = !DILocation(line: 397, column: 1, scope: !4884)
!4901 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !4875, file: !4875, line: 507, type: !4902, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!4902 = !DISubroutineType(types: !4903)
!4903 = !{null, !1796, !2826, !341}
!4904 = !DILocalVariable(name: "r", arg: 1, scope: !4901, file: !4875, line: 507, type: !1796)
!4905 = !DILocation(line: 507, column: 33, scope: !4901)
!4906 = !DILocalVariable(name: "a", arg: 2, scope: !4901, file: !4875, line: 507, type: !2826)
!4907 = !DILocation(line: 507, column: 51, scope: !4901)
!4908 = !DILocalVariable(name: "f", arg: 3, scope: !4901, file: !4875, line: 507, type: !341)
!4909 = !DILocation(line: 507, column: 63, scope: !4901)
!4910 = !DILocation(line: 509, column: 10, scope: !4901)
!4911 = !DILocation(line: 509, column: 17, scope: !4901)
!4912 = !DILocation(line: 509, column: 15, scope: !4901)
!4913 = !DILocation(line: 509, column: 2, scope: !4901)
!4914 = !DILocation(line: 509, column: 7, scope: !4901)
!4915 = !DILocation(line: 510, column: 10, scope: !4901)
!4916 = !DILocation(line: 510, column: 17, scope: !4901)
!4917 = !DILocation(line: 510, column: 15, scope: !4901)
!4918 = !DILocation(line: 510, column: 2, scope: !4901)
!4919 = !DILocation(line: 510, column: 7, scope: !4901)
!4920 = !DILocation(line: 511, column: 10, scope: !4901)
!4921 = !DILocation(line: 511, column: 17, scope: !4901)
!4922 = !DILocation(line: 511, column: 15, scope: !4901)
!4923 = !DILocation(line: 511, column: 2, scope: !4901)
!4924 = !DILocation(line: 511, column: 7, scope: !4901)
!4925 = !DILocation(line: 512, column: 1, scope: !4901)
!4926 = distinct !DISubprogram(name: "copy_v3_v3", scope: !4875, file: !4875, line: 64, type: !4927, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{null, !1796, !2826}
!4929 = !DILocalVariable(name: "r", arg: 1, scope: !4926, file: !4875, line: 64, type: !1796)
!4930 = !DILocation(line: 64, column: 31, scope: !4926)
!4931 = !DILocalVariable(name: "a", arg: 2, scope: !4926, file: !4875, line: 64, type: !2826)
!4932 = !DILocation(line: 64, column: 49, scope: !4926)
!4933 = !DILocation(line: 66, column: 9, scope: !4926)
!4934 = !DILocation(line: 66, column: 2, scope: !4926)
!4935 = !DILocation(line: 66, column: 7, scope: !4926)
!4936 = !DILocation(line: 67, column: 9, scope: !4926)
!4937 = !DILocation(line: 67, column: 2, scope: !4926)
!4938 = !DILocation(line: 67, column: 7, scope: !4926)
!4939 = !DILocation(line: 68, column: 9, scope: !4926)
!4940 = !DILocation(line: 68, column: 2, scope: !4926)
!4941 = !DILocation(line: 68, column: 7, scope: !4926)
!4942 = !DILocation(line: 69, column: 1, scope: !4926)
!4943 = distinct !DISubprogram(name: "dot_v3v3", scope: !4875, file: !4875, line: 619, type: !4944, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!4944 = !DISubroutineType(types: !4945)
!4945 = !{!341, !2826, !2826}
!4946 = !DILocalVariable(name: "a", arg: 1, scope: !4943, file: !4875, line: 619, type: !2826)
!4947 = !DILocation(line: 619, column: 36, scope: !4943)
!4948 = !DILocalVariable(name: "b", arg: 2, scope: !4943, file: !4875, line: 619, type: !2826)
!4949 = !DILocation(line: 619, column: 54, scope: !4943)
!4950 = !DILocation(line: 621, column: 9, scope: !4943)
!4951 = !DILocation(line: 621, column: 16, scope: !4943)
!4952 = !DILocation(line: 621, column: 14, scope: !4943)
!4953 = !DILocation(line: 621, column: 23, scope: !4943)
!4954 = !DILocation(line: 621, column: 30, scope: !4943)
!4955 = !DILocation(line: 621, column: 28, scope: !4943)
!4956 = !DILocation(line: 621, column: 21, scope: !4943)
!4957 = !DILocation(line: 621, column: 37, scope: !4943)
!4958 = !DILocation(line: 621, column: 44, scope: !4943)
!4959 = !DILocation(line: 621, column: 42, scope: !4943)
!4960 = !DILocation(line: 621, column: 35, scope: !4943)
!4961 = !DILocation(line: 621, column: 2, scope: !4943)
!4962 = distinct !DISubprogram(name: "sub_v3_v3", scope: !4875, file: !4875, line: 350, type: !4927, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!4963 = !DILocalVariable(name: "r", arg: 1, scope: !4962, file: !4875, line: 350, type: !1796)
!4964 = !DILocation(line: 350, column: 30, scope: !4962)
!4965 = !DILocalVariable(name: "a", arg: 2, scope: !4962, file: !4875, line: 350, type: !2826)
!4966 = !DILocation(line: 350, column: 48, scope: !4962)
!4967 = !DILocation(line: 352, column: 10, scope: !4962)
!4968 = !DILocation(line: 352, column: 2, scope: !4962)
!4969 = !DILocation(line: 352, column: 7, scope: !4962)
!4970 = !DILocation(line: 353, column: 10, scope: !4962)
!4971 = !DILocation(line: 353, column: 2, scope: !4962)
!4972 = !DILocation(line: 353, column: 7, scope: !4962)
!4973 = !DILocation(line: 354, column: 10, scope: !4962)
!4974 = !DILocation(line: 354, column: 2, scope: !4962)
!4975 = !DILocation(line: 354, column: 7, scope: !4962)
!4976 = !DILocation(line: 355, column: 1, scope: !4962)
!4977 = distinct !DISubprogram(name: "psys_frand", scope: !714, file: !714, line: 256, type: !4978, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{!341, !3144, !7}
!4980 = !DILocalVariable(name: "psys", arg: 1, scope: !4977, file: !714, line: 256, type: !3144)
!4981 = !DILocation(line: 256, column: 45, scope: !4977)
!4982 = !DILocalVariable(name: "seed", arg: 2, scope: !4977, file: !714, line: 256, type: !7)
!4983 = !DILocation(line: 256, column: 64, scope: !4977)
!4984 = !DILocalVariable(name: "offset", scope: !4977, file: !714, line: 263, type: !7)
!4985 = !DILocation(line: 263, column: 15, scope: !4977)
!4986 = !DILocation(line: 263, column: 47, scope: !4977)
!4987 = !DILocation(line: 263, column: 53, scope: !4977)
!4988 = !DILocation(line: 263, column: 58, scope: !4977)
!4989 = !DILocation(line: 263, column: 24, scope: !4977)
!4990 = !DILocalVariable(name: "multiplier", scope: !4977, file: !714, line: 264, type: !7)
!4991 = !DILocation(line: 264, column: 15, scope: !4977)
!4992 = !DILocation(line: 264, column: 55, scope: !4977)
!4993 = !DILocation(line: 264, column: 61, scope: !4977)
!4994 = !DILocation(line: 264, column: 66, scope: !4977)
!4995 = !DILocation(line: 264, column: 28, scope: !4977)
!4996 = !DILocation(line: 265, column: 26, scope: !4977)
!4997 = !DILocation(line: 265, column: 35, scope: !4977)
!4998 = !DILocation(line: 265, column: 42, scope: !4977)
!4999 = !DILocation(line: 265, column: 40, scope: !4977)
!5000 = !DILocation(line: 265, column: 33, scope: !4977)
!5001 = !DILocation(line: 265, column: 54, scope: !4977)
!5002 = !DILocation(line: 265, column: 9, scope: !4977)
!5003 = !DILocation(line: 265, column: 2, scope: !4977)
!5004 = distinct !DISubprogram(name: "zero_v3", scope: !4875, file: !4875, line: 43, type: !5005, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5005 = !DISubroutineType(types: !5006)
!5006 = !{null, !1796}
!5007 = !DILocalVariable(name: "r", arg: 1, scope: !5004, file: !4875, line: 43, type: !1796)
!5008 = !DILocation(line: 43, column: 28, scope: !5004)
!5009 = !DILocation(line: 45, column: 2, scope: !5004)
!5010 = !DILocation(line: 45, column: 7, scope: !5004)
!5011 = !DILocation(line: 46, column: 2, scope: !5004)
!5012 = !DILocation(line: 46, column: 7, scope: !5004)
!5013 = !DILocation(line: 47, column: 2, scope: !5004)
!5014 = !DILocation(line: 47, column: 7, scope: !5004)
!5015 = !DILocation(line: 48, column: 1, scope: !5004)
!5016 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !4875, file: !4875, line: 357, type: !5017, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5017 = !DISubroutineType(types: !5018)
!5018 = !{null, !1796, !2826, !2826}
!5019 = !DILocalVariable(name: "r", arg: 1, scope: !5016, file: !4875, line: 357, type: !1796)
!5020 = !DILocation(line: 357, column: 32, scope: !5016)
!5021 = !DILocalVariable(name: "a", arg: 2, scope: !5016, file: !4875, line: 357, type: !2826)
!5022 = !DILocation(line: 357, column: 50, scope: !5016)
!5023 = !DILocalVariable(name: "b", arg: 3, scope: !5016, file: !4875, line: 357, type: !2826)
!5024 = !DILocation(line: 357, column: 68, scope: !5016)
!5025 = !DILocation(line: 359, column: 9, scope: !5016)
!5026 = !DILocation(line: 359, column: 16, scope: !5016)
!5027 = !DILocation(line: 359, column: 14, scope: !5016)
!5028 = !DILocation(line: 359, column: 2, scope: !5016)
!5029 = !DILocation(line: 359, column: 7, scope: !5016)
!5030 = !DILocation(line: 360, column: 9, scope: !5016)
!5031 = !DILocation(line: 360, column: 16, scope: !5016)
!5032 = !DILocation(line: 360, column: 14, scope: !5016)
!5033 = !DILocation(line: 360, column: 2, scope: !5016)
!5034 = !DILocation(line: 360, column: 7, scope: !5016)
!5035 = !DILocation(line: 361, column: 9, scope: !5016)
!5036 = !DILocation(line: 361, column: 16, scope: !5016)
!5037 = !DILocation(line: 361, column: 14, scope: !5016)
!5038 = !DILocation(line: 361, column: 2, scope: !5016)
!5039 = !DILocation(line: 361, column: 7, scope: !5016)
!5040 = !DILocation(line: 362, column: 1, scope: !5016)
!5041 = distinct !DISubprogram(name: "negate_v3_v3", scope: !4875, file: !4875, line: 583, type: !4927, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5042 = !DILocalVariable(name: "r", arg: 1, scope: !5041, file: !4875, line: 583, type: !1796)
!5043 = !DILocation(line: 583, column: 33, scope: !5041)
!5044 = !DILocalVariable(name: "a", arg: 2, scope: !5041, file: !4875, line: 583, type: !2826)
!5045 = !DILocation(line: 583, column: 51, scope: !5041)
!5046 = !DILocation(line: 585, column: 10, scope: !5041)
!5047 = !DILocation(line: 585, column: 9, scope: !5041)
!5048 = !DILocation(line: 585, column: 2, scope: !5041)
!5049 = !DILocation(line: 585, column: 7, scope: !5041)
!5050 = !DILocation(line: 586, column: 10, scope: !5041)
!5051 = !DILocation(line: 586, column: 9, scope: !5041)
!5052 = !DILocation(line: 586, column: 2, scope: !5041)
!5053 = !DILocation(line: 586, column: 7, scope: !5041)
!5054 = !DILocation(line: 587, column: 10, scope: !5041)
!5055 = !DILocation(line: 587, column: 9, scope: !5041)
!5056 = !DILocation(line: 587, column: 2, scope: !5041)
!5057 = !DILocation(line: 587, column: 7, scope: !5041)
!5058 = !DILocation(line: 588, column: 1, scope: !5041)
!5059 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !4875, file: !4875, line: 634, type: !5017, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5060 = !DILocalVariable(name: "r", arg: 1, scope: !5059, file: !4875, line: 634, type: !1796)
!5061 = !DILocation(line: 634, column: 34, scope: !5059)
!5062 = !DILocalVariable(name: "a", arg: 2, scope: !5059, file: !4875, line: 634, type: !2826)
!5063 = !DILocation(line: 634, column: 52, scope: !5059)
!5064 = !DILocalVariable(name: "b", arg: 3, scope: !5059, file: !4875, line: 634, type: !2826)
!5065 = !DILocation(line: 634, column: 70, scope: !5059)
!5066 = !DILocation(line: 637, column: 9, scope: !5059)
!5067 = !DILocation(line: 637, column: 16, scope: !5059)
!5068 = !DILocation(line: 637, column: 14, scope: !5059)
!5069 = !DILocation(line: 637, column: 23, scope: !5059)
!5070 = !DILocation(line: 637, column: 30, scope: !5059)
!5071 = !DILocation(line: 637, column: 28, scope: !5059)
!5072 = !DILocation(line: 637, column: 21, scope: !5059)
!5073 = !DILocation(line: 637, column: 2, scope: !5059)
!5074 = !DILocation(line: 637, column: 7, scope: !5059)
!5075 = !DILocation(line: 638, column: 9, scope: !5059)
!5076 = !DILocation(line: 638, column: 16, scope: !5059)
!5077 = !DILocation(line: 638, column: 14, scope: !5059)
!5078 = !DILocation(line: 638, column: 23, scope: !5059)
!5079 = !DILocation(line: 638, column: 30, scope: !5059)
!5080 = !DILocation(line: 638, column: 28, scope: !5059)
!5081 = !DILocation(line: 638, column: 21, scope: !5059)
!5082 = !DILocation(line: 638, column: 2, scope: !5059)
!5083 = !DILocation(line: 638, column: 7, scope: !5059)
!5084 = !DILocation(line: 639, column: 9, scope: !5059)
!5085 = !DILocation(line: 639, column: 16, scope: !5059)
!5086 = !DILocation(line: 639, column: 14, scope: !5059)
!5087 = !DILocation(line: 639, column: 23, scope: !5059)
!5088 = !DILocation(line: 639, column: 30, scope: !5059)
!5089 = !DILocation(line: 639, column: 28, scope: !5059)
!5090 = !DILocation(line: 639, column: 21, scope: !5059)
!5091 = !DILocation(line: 639, column: 2, scope: !5059)
!5092 = !DILocation(line: 639, column: 7, scope: !5059)
!5093 = !DILocation(line: 640, column: 1, scope: !5059)
!5094 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !4875, file: !4875, line: 788, type: !5095, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5095 = !DISubroutineType(types: !5096)
!5096 = !{!341, !1796, !2826}
!5097 = !DILocalVariable(name: "r", arg: 1, scope: !5094, file: !4875, line: 788, type: !1796)
!5098 = !DILocation(line: 788, column: 37, scope: !5094)
!5099 = !DILocalVariable(name: "a", arg: 2, scope: !5094, file: !4875, line: 788, type: !2826)
!5100 = !DILocation(line: 788, column: 55, scope: !5094)
!5101 = !DILocalVariable(name: "d", scope: !5094, file: !4875, line: 790, type: !341)
!5102 = !DILocation(line: 790, column: 8, scope: !5094)
!5103 = !DILocation(line: 790, column: 21, scope: !5094)
!5104 = !DILocation(line: 790, column: 24, scope: !5094)
!5105 = !DILocation(line: 790, column: 12, scope: !5094)
!5106 = !DILocation(line: 794, column: 6, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5094, file: !4875, line: 794, column: 6)
!5108 = !DILocation(line: 794, column: 8, scope: !5107)
!5109 = !DILocation(line: 794, column: 6, scope: !5094)
!5110 = !DILocation(line: 795, column: 13, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5107, file: !4875, line: 794, column: 20)
!5112 = !DILocation(line: 795, column: 7, scope: !5111)
!5113 = !DILocation(line: 795, column: 5, scope: !5111)
!5114 = !DILocation(line: 796, column: 15, scope: !5111)
!5115 = !DILocation(line: 796, column: 18, scope: !5111)
!5116 = !DILocation(line: 796, column: 28, scope: !5111)
!5117 = !DILocation(line: 796, column: 26, scope: !5111)
!5118 = !DILocation(line: 796, column: 3, scope: !5111)
!5119 = !DILocation(line: 797, column: 2, scope: !5111)
!5120 = !DILocation(line: 799, column: 11, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5107, file: !4875, line: 798, column: 7)
!5122 = !DILocation(line: 799, column: 3, scope: !5121)
!5123 = !DILocation(line: 800, column: 5, scope: !5121)
!5124 = !DILocation(line: 803, column: 9, scope: !5094)
!5125 = !DILocation(line: 803, column: 2, scope: !5094)
!5126 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !4875, file: !4875, line: 399, type: !4902, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5127 = !DILocalVariable(name: "r", arg: 1, scope: !5126, file: !4875, line: 399, type: !1796)
!5128 = !DILocation(line: 399, column: 32, scope: !5126)
!5129 = !DILocalVariable(name: "a", arg: 2, scope: !5126, file: !4875, line: 399, type: !2826)
!5130 = !DILocation(line: 399, column: 50, scope: !5126)
!5131 = !DILocalVariable(name: "f", arg: 3, scope: !5126, file: !4875, line: 399, type: !341)
!5132 = !DILocation(line: 399, column: 62, scope: !5126)
!5133 = !DILocation(line: 401, column: 9, scope: !5126)
!5134 = !DILocation(line: 401, column: 16, scope: !5126)
!5135 = !DILocation(line: 401, column: 14, scope: !5126)
!5136 = !DILocation(line: 401, column: 2, scope: !5126)
!5137 = !DILocation(line: 401, column: 7, scope: !5126)
!5138 = !DILocation(line: 402, column: 9, scope: !5126)
!5139 = !DILocation(line: 402, column: 16, scope: !5126)
!5140 = !DILocation(line: 402, column: 14, scope: !5126)
!5141 = !DILocation(line: 402, column: 2, scope: !5126)
!5142 = !DILocation(line: 402, column: 7, scope: !5126)
!5143 = !DILocation(line: 403, column: 9, scope: !5126)
!5144 = !DILocation(line: 403, column: 16, scope: !5126)
!5145 = !DILocation(line: 403, column: 14, scope: !5126)
!5146 = !DILocation(line: 403, column: 2, scope: !5126)
!5147 = !DILocation(line: 403, column: 7, scope: !5126)
!5148 = !DILocation(line: 404, column: 1, scope: !5126)
!5149 = distinct !DISubprogram(name: "negate_v3", scope: !4875, file: !4875, line: 576, type: !5005, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5150 = !DILocalVariable(name: "r", arg: 1, scope: !5149, file: !4875, line: 576, type: !1796)
!5151 = !DILocation(line: 576, column: 30, scope: !5149)
!5152 = !DILocation(line: 578, column: 10, scope: !5149)
!5153 = !DILocation(line: 578, column: 9, scope: !5149)
!5154 = !DILocation(line: 578, column: 2, scope: !5149)
!5155 = !DILocation(line: 578, column: 7, scope: !5149)
!5156 = !DILocation(line: 579, column: 10, scope: !5149)
!5157 = !DILocation(line: 579, column: 9, scope: !5149)
!5158 = !DILocation(line: 579, column: 2, scope: !5149)
!5159 = !DILocation(line: 579, column: 7, scope: !5149)
!5160 = !DILocation(line: 580, column: 10, scope: !5149)
!5161 = !DILocation(line: 580, column: 9, scope: !5149)
!5162 = !DILocation(line: 580, column: 2, scope: !5149)
!5163 = !DILocation(line: 580, column: 7, scope: !5149)
!5164 = !DILocation(line: 581, column: 1, scope: !5149)
!5165 = distinct !DISubprogram(name: "get_angular_velocity_vector", scope: !3, file: !3, line: 1635, type: !5166, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5166 = !DISubroutineType(types: !5167)
!5167 = !{null, !258, !1988, !1796}
!5168 = !DILocalVariable(name: "avemode", arg: 1, scope: !5165, file: !3, line: 1635, type: !258)
!5169 = !DILocation(line: 1635, column: 47, scope: !5165)
!5170 = !DILocalVariable(name: "state", arg: 2, scope: !5165, file: !3, line: 1635, type: !1988)
!5171 = !DILocation(line: 1635, column: 69, scope: !5165)
!5172 = !DILocalVariable(name: "vec", arg: 3, scope: !5165, file: !3, line: 1635, type: !1796)
!5173 = !DILocation(line: 1635, column: 82, scope: !5165)
!5174 = !DILocation(line: 1637, column: 10, scope: !5165)
!5175 = !DILocation(line: 1637, column: 2, scope: !5165)
!5176 = !DILocation(line: 1639, column: 15, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 1637, column: 19)
!5178 = !DILocation(line: 1639, column: 20, scope: !5177)
!5179 = !DILocation(line: 1639, column: 27, scope: !5177)
!5180 = !DILocation(line: 1639, column: 4, scope: !5177)
!5181 = !DILocation(line: 1640, column: 4, scope: !5177)
!5182 = !DILocalVariable(name: "zvec", scope: !5183, file: !3, line: 1643, type: !563)
!5183 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 1642, column: 3)
!5184 = !DILocation(line: 1643, column: 10, scope: !5183)
!5185 = !DILocation(line: 1644, column: 14, scope: !5183)
!5186 = !DILocation(line: 1644, column: 22, scope: !5183)
!5187 = !DILocation(line: 1644, column: 4, scope: !5183)
!5188 = !DILocation(line: 1644, column: 12, scope: !5183)
!5189 = !DILocation(line: 1645, column: 4, scope: !5183)
!5190 = !DILocation(line: 1645, column: 12, scope: !5183)
!5191 = !DILocation(line: 1646, column: 18, scope: !5183)
!5192 = !DILocation(line: 1646, column: 23, scope: !5183)
!5193 = !DILocation(line: 1646, column: 30, scope: !5183)
!5194 = !DILocation(line: 1646, column: 35, scope: !5183)
!5195 = !DILocation(line: 1646, column: 4, scope: !5183)
!5196 = !DILocation(line: 1647, column: 4, scope: !5183)
!5197 = !DILocalVariable(name: "zvec", scope: !5198, file: !3, line: 1651, type: !563)
!5198 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 1650, column: 3)
!5199 = !DILocation(line: 1651, column: 10, scope: !5198)
!5200 = !DILocalVariable(name: "temp", scope: !5198, file: !3, line: 1651, type: !563)
!5201 = !DILocation(line: 1651, column: 19, scope: !5198)
!5202 = !DILocation(line: 1652, column: 14, scope: !5198)
!5203 = !DILocation(line: 1652, column: 22, scope: !5198)
!5204 = !DILocation(line: 1652, column: 4, scope: !5198)
!5205 = !DILocation(line: 1652, column: 12, scope: !5198)
!5206 = !DILocation(line: 1653, column: 4, scope: !5198)
!5207 = !DILocation(line: 1653, column: 12, scope: !5198)
!5208 = !DILocation(line: 1654, column: 18, scope: !5198)
!5209 = !DILocation(line: 1654, column: 24, scope: !5198)
!5210 = !DILocation(line: 1654, column: 31, scope: !5198)
!5211 = !DILocation(line: 1654, column: 36, scope: !5198)
!5212 = !DILocation(line: 1654, column: 4, scope: !5198)
!5213 = !DILocation(line: 1655, column: 18, scope: !5198)
!5214 = !DILocation(line: 1655, column: 23, scope: !5198)
!5215 = !DILocation(line: 1655, column: 29, scope: !5198)
!5216 = !DILocation(line: 1655, column: 36, scope: !5198)
!5217 = !DILocation(line: 1655, column: 4, scope: !5198)
!5218 = !DILocation(line: 1656, column: 4, scope: !5198)
!5219 = !DILocation(line: 1659, column: 4, scope: !5177)
!5220 = !DILocation(line: 1659, column: 11, scope: !5177)
!5221 = !DILocation(line: 1660, column: 13, scope: !5177)
!5222 = !DILocation(line: 1660, column: 20, scope: !5177)
!5223 = !DILocation(line: 1660, column: 4, scope: !5177)
!5224 = !DILocation(line: 1660, column: 11, scope: !5177)
!5225 = !DILocation(line: 1661, column: 4, scope: !5177)
!5226 = !DILocation(line: 1663, column: 4, scope: !5177)
!5227 = !DILocation(line: 1663, column: 11, scope: !5177)
!5228 = !DILocation(line: 1664, column: 13, scope: !5177)
!5229 = !DILocation(line: 1664, column: 20, scope: !5177)
!5230 = !DILocation(line: 1664, column: 4, scope: !5177)
!5231 = !DILocation(line: 1664, column: 11, scope: !5177)
!5232 = !DILocation(line: 1665, column: 4, scope: !5177)
!5233 = !DILocation(line: 1667, column: 4, scope: !5177)
!5234 = !DILocation(line: 1667, column: 11, scope: !5177)
!5235 = !DILocation(line: 1668, column: 13, scope: !5177)
!5236 = !DILocation(line: 1668, column: 20, scope: !5177)
!5237 = !DILocation(line: 1668, column: 4, scope: !5177)
!5238 = !DILocation(line: 1668, column: 11, scope: !5177)
!5239 = !DILocation(line: 1669, column: 4, scope: !5177)
!5240 = !DILocation(line: 1671, column: 1, scope: !5165)
!5241 = distinct !DISubprogram(name: "reset_particle", scope: !3, file: !3, line: 1990, type: !5242, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5242 = !DISubroutineType(types: !5243)
!5243 = !{null, !3218, !2461, !341, !341}
!5244 = !DILocalVariable(name: "sim", arg: 1, scope: !5241, file: !3, line: 1990, type: !3218)
!5245 = !DILocation(line: 1990, column: 45, scope: !5241)
!5246 = !DILocalVariable(name: "pa", arg: 2, scope: !5241, file: !3, line: 1990, type: !2461)
!5247 = !DILocation(line: 1990, column: 64, scope: !5241)
!5248 = !DILocalVariable(name: "dtime", arg: 3, scope: !5241, file: !3, line: 1990, type: !341)
!5249 = !DILocation(line: 1990, column: 74, scope: !5241)
!5250 = !DILocalVariable(name: "cfra", arg: 4, scope: !5241, file: !3, line: 1990, type: !341)
!5251 = !DILocation(line: 1990, column: 87, scope: !5241)
!5252 = !DILocalVariable(name: "psys", scope: !5241, file: !3, line: 1992, type: !3144)
!5253 = !DILocation(line: 1992, column: 18, scope: !5241)
!5254 = !DILocation(line: 1992, column: 25, scope: !5241)
!5255 = !DILocation(line: 1992, column: 30, scope: !5241)
!5256 = !DILocalVariable(name: "part", scope: !5241, file: !3, line: 1993, type: !2192)
!5257 = !DILocation(line: 1993, column: 20, scope: !5241)
!5258 = !DILocalVariable(name: "ptex", scope: !5241, file: !3, line: 1994, type: !3199)
!5259 = !DILocation(line: 1994, column: 18, scope: !5241)
!5260 = !DILocalVariable(name: "p", scope: !5241, file: !3, line: 1995, type: !260)
!5261 = !DILocation(line: 1995, column: 6, scope: !5241)
!5262 = !DILocation(line: 1995, column: 10, scope: !5241)
!5263 = !DILocation(line: 1995, column: 15, scope: !5241)
!5264 = !DILocation(line: 1995, column: 21, scope: !5241)
!5265 = !DILocation(line: 1995, column: 13, scope: !5241)
!5266 = !DILocation(line: 1996, column: 7, scope: !5241)
!5267 = !DILocation(line: 1996, column: 13, scope: !5241)
!5268 = !DILocation(line: 1996, column: 6, scope: !5241)
!5269 = !DILocation(line: 1999, column: 6, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 1999, column: 6)
!5271 = !DILocation(line: 1999, column: 12, scope: !5270)
!5272 = !DILocation(line: 1999, column: 16, scope: !5270)
!5273 = !DILocation(line: 1999, column: 28, scope: !5270)
!5274 = !DILocation(line: 1999, column: 31, scope: !5270)
!5275 = !DILocation(line: 1999, column: 37, scope: !5270)
!5276 = !DILocation(line: 1999, column: 43, scope: !5270)
!5277 = !DILocation(line: 1999, column: 46, scope: !5270)
!5278 = !DILocation(line: 1999, column: 50, scope: !5270)
!5279 = !DILocation(line: 1999, column: 57, scope: !5270)
!5280 = !DILocation(line: 1999, column: 55, scope: !5270)
!5281 = !DILocation(line: 1999, column: 62, scope: !5270)
!5282 = !DILocation(line: 1999, column: 65, scope: !5270)
!5283 = !DILocation(line: 1999, column: 69, scope: !5270)
!5284 = !DILocation(line: 1999, column: 77, scope: !5270)
!5285 = !DILocation(line: 1999, column: 82, scope: !5270)
!5286 = !DILocation(line: 1999, column: 88, scope: !5270)
!5287 = !DILocation(line: 1999, column: 74, scope: !5270)
!5288 = !DILocation(line: 1999, column: 6, scope: !5241)
!5289 = !DILocation(line: 2000, column: 25, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 1999, column: 94)
!5291 = !DILocation(line: 2000, column: 30, scope: !5290)
!5292 = !DILocation(line: 2000, column: 37, scope: !5290)
!5293 = !DILocation(line: 2000, column: 42, scope: !5290)
!5294 = !DILocation(line: 2000, column: 46, scope: !5290)
!5295 = !DILocation(line: 2000, column: 50, scope: !5290)
!5296 = !DILocation(line: 2000, column: 3, scope: !5290)
!5297 = !DILocation(line: 2002, column: 3, scope: !5290)
!5298 = !DILocation(line: 2002, column: 9, scope: !5290)
!5299 = !DILocation(line: 2002, column: 14, scope: !5290)
!5300 = !DILocation(line: 2003, column: 2, scope: !5290)
!5301 = !DILocation(line: 2005, column: 29, scope: !5241)
!5302 = !DILocation(line: 2005, column: 34, scope: !5241)
!5303 = !DILocation(line: 2005, column: 39, scope: !5241)
!5304 = !DILocation(line: 2005, column: 43, scope: !5241)
!5305 = !DILocation(line: 2005, column: 50, scope: !5241)
!5306 = !DILocation(line: 2005, column: 57, scope: !5241)
!5307 = !DILocation(line: 2005, column: 2, scope: !5241)
!5308 = !DILocation(line: 2012, column: 30, scope: !5241)
!5309 = !DILocation(line: 2012, column: 35, scope: !5241)
!5310 = !DILocation(line: 2012, column: 39, scope: !5241)
!5311 = !DILocation(line: 2012, column: 2, scope: !5241)
!5312 = !DILocation(line: 2014, column: 6, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2014, column: 6)
!5314 = !DILocation(line: 2014, column: 12, scope: !5313)
!5315 = !DILocation(line: 2014, column: 20, scope: !5313)
!5316 = !DILocation(line: 2014, column: 38, scope: !5313)
!5317 = !DILocation(line: 2014, column: 41, scope: !5313)
!5318 = !DILocation(line: 2014, column: 45, scope: !5313)
!5319 = !DILocation(line: 2014, column: 6, scope: !5241)
!5320 = !DILocalVariable(name: "bpa", scope: !5321, file: !3, line: 2015, type: !1990)
!5321 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 2014, column: 51)
!5322 = !DILocation(line: 2015, column: 17, scope: !5321)
!5323 = !DILocation(line: 2015, column: 23, scope: !5321)
!5324 = !DILocation(line: 2015, column: 27, scope: !5321)
!5325 = !DILocation(line: 2018, column: 21, scope: !5321)
!5326 = !DILocation(line: 2018, column: 26, scope: !5321)
!5327 = !DILocation(line: 2018, column: 37, scope: !5321)
!5328 = !DILocation(line: 2018, column: 3, scope: !5321)
!5329 = !DILocation(line: 2018, column: 8, scope: !5321)
!5330 = !DILocation(line: 2018, column: 19, scope: !5321)
!5331 = !DILocation(line: 2019, column: 3, scope: !5321)
!5332 = !DILocation(line: 2019, column: 8, scope: !5321)
!5333 = !DILocation(line: 2019, column: 19, scope: !5321)
!5334 = !DILocation(line: 2020, column: 8, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 2020, column: 7)
!5336 = !DILocation(line: 2020, column: 13, scope: !5335)
!5337 = !DILocation(line: 2020, column: 20, scope: !5335)
!5338 = !DILocation(line: 2020, column: 37, scope: !5335)
!5339 = !DILocation(line: 2020, column: 42, scope: !5335)
!5340 = !DILocation(line: 2020, column: 65, scope: !5335)
!5341 = !DILocation(line: 2021, column: 8, scope: !5335)
!5342 = !DILocation(line: 2021, column: 13, scope: !5335)
!5343 = !DILocation(line: 2021, column: 20, scope: !5335)
!5344 = !DILocation(line: 2021, column: 37, scope: !5335)
!5345 = !DILocation(line: 2021, column: 48, scope: !5335)
!5346 = !DILocation(line: 2020, column: 7, scope: !5321)
!5347 = !DILocation(line: 2023, column: 22, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 2022, column: 3)
!5349 = !DILocation(line: 2023, column: 27, scope: !5348)
!5350 = !DILocation(line: 2023, column: 34, scope: !5348)
!5351 = !DILocation(line: 2023, column: 51, scope: !5348)
!5352 = !DILocation(line: 2023, column: 4, scope: !5348)
!5353 = !DILocation(line: 2023, column: 9, scope: !5348)
!5354 = !DILocation(line: 2023, column: 20, scope: !5348)
!5355 = !DILocation(line: 2024, column: 3, scope: !5348)
!5356 = !DILocation(line: 2026, column: 22, scope: !5321)
!5357 = !DILocation(line: 2026, column: 28, scope: !5321)
!5358 = !DILocation(line: 2026, column: 35, scope: !5321)
!5359 = !DILocation(line: 2026, column: 3, scope: !5321)
!5360 = !DILocation(line: 2026, column: 8, scope: !5321)
!5361 = !DILocation(line: 2026, column: 13, scope: !5321)
!5362 = !DILocation(line: 2026, column: 20, scope: !5321)
!5363 = !DILocation(line: 2027, column: 3, scope: !5321)
!5364 = !DILocation(line: 2027, column: 8, scope: !5321)
!5365 = !DILocation(line: 2027, column: 13, scope: !5321)
!5366 = !DILocation(line: 2027, column: 18, scope: !5321)
!5367 = !DILocation(line: 2028, column: 37, scope: !5321)
!5368 = !DILocation(line: 2028, column: 43, scope: !5321)
!5369 = !DILocation(line: 2028, column: 50, scope: !5321)
!5370 = !DILocation(line: 2028, column: 57, scope: !5321)
!5371 = !DILocation(line: 2028, column: 25, scope: !5321)
!5372 = !DILocation(line: 2028, column: 65, scope: !5321)
!5373 = !DILocation(line: 2028, column: 24, scope: !5321)
!5374 = !DILocation(line: 2028, column: 3, scope: !5321)
!5375 = !DILocation(line: 2028, column: 8, scope: !5321)
!5376 = !DILocation(line: 2028, column: 13, scope: !5321)
!5377 = !DILocation(line: 2028, column: 22, scope: !5321)
!5378 = !DILocation(line: 2029, column: 37, scope: !5321)
!5379 = !DILocation(line: 2029, column: 42, scope: !5321)
!5380 = !DILocation(line: 2029, column: 47, scope: !5321)
!5381 = !DILocation(line: 2029, column: 53, scope: !5321)
!5382 = !DILocation(line: 2029, column: 20, scope: !5321)
!5383 = !DILocation(line: 2029, column: 25, scope: !5321)
!5384 = !DILocation(line: 2029, column: 30, scope: !5321)
!5385 = !DILocation(line: 2029, column: 36, scope: !5321)
!5386 = !DILocation(line: 2029, column: 3, scope: !5321)
!5387 = !DILocation(line: 2029, column: 8, scope: !5321)
!5388 = !DILocation(line: 2029, column: 13, scope: !5321)
!5389 = !DILocation(line: 2029, column: 19, scope: !5321)
!5390 = !DILocation(line: 2030, column: 2, scope: !5321)
!5391 = !DILocation(line: 2032, column: 6, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2032, column: 6)
!5393 = !DILocation(line: 2032, column: 12, scope: !5392)
!5394 = !DILocation(line: 2032, column: 17, scope: !5392)
!5395 = !DILocation(line: 2032, column: 6, scope: !5241)
!5396 = !DILocation(line: 2033, column: 3, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 2032, column: 31)
!5398 = !DILocation(line: 2033, column: 7, scope: !5397)
!5399 = !DILocation(line: 2033, column: 16, scope: !5397)
!5400 = !DILocation(line: 2034, column: 2, scope: !5397)
!5401 = !DILocation(line: 2039, column: 18, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 2035, column: 7)
!5403 = !DILocation(line: 2039, column: 24, scope: !5402)
!5404 = !DILocation(line: 2039, column: 43, scope: !5402)
!5405 = !DILocation(line: 2039, column: 49, scope: !5402)
!5406 = !DILocation(line: 2039, column: 71, scope: !5402)
!5407 = !DILocation(line: 2039, column: 77, scope: !5402)
!5408 = !DILocation(line: 2039, column: 79, scope: !5402)
!5409 = !DILocation(line: 2039, column: 60, scope: !5402)
!5410 = !DILocation(line: 2039, column: 58, scope: !5402)
!5411 = !DILocation(line: 2039, column: 41, scope: !5402)
!5412 = !DILocation(line: 2039, column: 33, scope: !5402)
!5413 = !DILocation(line: 2039, column: 3, scope: !5402)
!5414 = !DILocation(line: 2039, column: 7, scope: !5402)
!5415 = !DILocation(line: 2039, column: 16, scope: !5402)
!5416 = !DILocation(line: 2040, column: 17, scope: !5402)
!5417 = !DILocation(line: 2040, column: 21, scope: !5402)
!5418 = !DILocation(line: 2040, column: 28, scope: !5402)
!5419 = !DILocation(line: 2040, column: 32, scope: !5402)
!5420 = !DILocation(line: 2040, column: 26, scope: !5402)
!5421 = !DILocation(line: 2040, column: 3, scope: !5402)
!5422 = !DILocation(line: 2040, column: 7, scope: !5402)
!5423 = !DILocation(line: 2040, column: 15, scope: !5402)
!5424 = !DILocation(line: 2043, column: 20, scope: !5402)
!5425 = !DILocation(line: 2043, column: 25, scope: !5402)
!5426 = !DILocation(line: 2043, column: 48, scope: !5402)
!5427 = !DILocation(line: 2043, column: 3, scope: !5402)
!5428 = !DILocation(line: 2045, column: 18, scope: !5402)
!5429 = !DILocation(line: 2045, column: 24, scope: !5402)
!5430 = !DILocation(line: 2045, column: 40, scope: !5402)
!5431 = !DILocation(line: 2045, column: 33, scope: !5402)
!5432 = !DILocation(line: 2045, column: 3, scope: !5402)
!5433 = !DILocation(line: 2045, column: 7, scope: !5402)
!5434 = !DILocation(line: 2045, column: 16, scope: !5402)
!5435 = !DILocation(line: 2047, column: 7, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5402, file: !3, line: 2047, column: 7)
!5437 = !DILocation(line: 2047, column: 13, scope: !5436)
!5438 = !DILocation(line: 2047, column: 22, scope: !5436)
!5439 = !DILocation(line: 2047, column: 7, scope: !5402)
!5440 = !DILocation(line: 2048, column: 27, scope: !5436)
!5441 = !DILocation(line: 2048, column: 33, scope: !5436)
!5442 = !DILocation(line: 2048, column: 55, scope: !5436)
!5443 = !DILocation(line: 2048, column: 61, scope: !5436)
!5444 = !DILocation(line: 2048, column: 63, scope: !5436)
!5445 = !DILocation(line: 2048, column: 44, scope: !5436)
!5446 = !DILocation(line: 2048, column: 42, scope: !5436)
!5447 = !DILocation(line: 2048, column: 25, scope: !5436)
!5448 = !DILocation(line: 2048, column: 4, scope: !5436)
!5449 = !DILocation(line: 2048, column: 8, scope: !5436)
!5450 = !DILocation(line: 2048, column: 17, scope: !5436)
!5451 = !DILocation(line: 2051, column: 16, scope: !5241)
!5452 = !DILocation(line: 2051, column: 20, scope: !5241)
!5453 = !DILocation(line: 2051, column: 27, scope: !5241)
!5454 = !DILocation(line: 2051, column: 31, scope: !5241)
!5455 = !DILocation(line: 2051, column: 25, scope: !5241)
!5456 = !DILocation(line: 2051, column: 2, scope: !5241)
!5457 = !DILocation(line: 2051, column: 6, scope: !5241)
!5458 = !DILocation(line: 2051, column: 14, scope: !5241)
!5459 = !DILocation(line: 2053, column: 6, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2053, column: 6)
!5461 = !DILocation(line: 2053, column: 11, scope: !5460)
!5462 = !DILocation(line: 2053, column: 17, scope: !5460)
!5463 = !DILocation(line: 2053, column: 28, scope: !5460)
!5464 = !DILocation(line: 2053, column: 31, scope: !5460)
!5465 = !DILocation(line: 2053, column: 36, scope: !5460)
!5466 = !DILocation(line: 2053, column: 42, scope: !5460)
!5467 = !DILocation(line: 2053, column: 54, scope: !5460)
!5468 = !DILocation(line: 2053, column: 59, scope: !5460)
!5469 = !DILocation(line: 2053, column: 75, scope: !5460)
!5470 = !DILocation(line: 2054, column: 3, scope: !5460)
!5471 = !DILocation(line: 2054, column: 8, scope: !5460)
!5472 = !DILocation(line: 2054, column: 14, scope: !5460)
!5473 = !DILocation(line: 2054, column: 26, scope: !5460)
!5474 = !DILocation(line: 2054, column: 36, scope: !5460)
!5475 = !DILocation(line: 2053, column: 6, scope: !5241)
!5476 = !DILocalVariable(name: "dietime", scope: !5477, file: !3, line: 2055, type: !341)
!5477 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 2054, column: 43)
!5478 = !DILocation(line: 2055, column: 9, scope: !5477)
!5479 = !DILocation(line: 2055, column: 47, scope: !5477)
!5480 = !DILocation(line: 2055, column: 52, scope: !5477)
!5481 = !DILocation(line: 2055, column: 58, scope: !5477)
!5482 = !DILocation(line: 2055, column: 70, scope: !5477)
!5483 = !DILocation(line: 2055, column: 19, scope: !5477)
!5484 = !DILocation(line: 2056, column: 17, scope: !5477)
!5485 = !DILocation(line: 2056, column: 3, scope: !5477)
!5486 = !DILocation(line: 2056, column: 7, scope: !5477)
!5487 = !DILocation(line: 2056, column: 15, scope: !5477)
!5488 = !DILocation(line: 2057, column: 2, scope: !5477)
!5489 = !DILocation(line: 2059, column: 6, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2059, column: 6)
!5491 = !DILocation(line: 2059, column: 10, scope: !5490)
!5492 = !DILocation(line: 2059, column: 17, scope: !5490)
!5493 = !DILocation(line: 2059, column: 15, scope: !5490)
!5494 = !DILocation(line: 2059, column: 6, scope: !5241)
!5495 = !DILocation(line: 2060, column: 3, scope: !5490)
!5496 = !DILocation(line: 2060, column: 7, scope: !5490)
!5497 = !DILocation(line: 2060, column: 13, scope: !5490)
!5498 = !DILocation(line: 2061, column: 11, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5490, file: !3, line: 2061, column: 11)
!5500 = !DILocation(line: 2061, column: 15, scope: !5499)
!5501 = !DILocation(line: 2061, column: 26, scope: !5499)
!5502 = !DILocation(line: 2061, column: 23, scope: !5499)
!5503 = !DILocation(line: 2061, column: 11, scope: !5490)
!5504 = !DILocation(line: 2062, column: 3, scope: !5499)
!5505 = !DILocation(line: 2062, column: 7, scope: !5499)
!5506 = !DILocation(line: 2062, column: 13, scope: !5499)
!5507 = !DILocation(line: 2064, column: 3, scope: !5499)
!5508 = !DILocation(line: 2064, column: 7, scope: !5499)
!5509 = !DILocation(line: 2064, column: 13, scope: !5499)
!5510 = !DILocation(line: 2066, column: 19, scope: !5241)
!5511 = !DILocation(line: 2066, column: 2, scope: !5241)
!5512 = !DILocation(line: 2066, column: 6, scope: !5241)
!5513 = !DILocation(line: 2066, column: 12, scope: !5241)
!5514 = !DILocation(line: 2066, column: 17, scope: !5241)
!5515 = !DILocation(line: 2067, column: 1, scope: !5241)
!5516 = distinct !DISubprogram(name: "evaluate_emitter_anim", scope: !3, file: !3, line: 1979, type: !5517, scopeLine: 1980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5517 = !DISubroutineType(types: !5518)
!5518 = !{null, !5519, !3567, !341}
!5519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5520, size: 64)
!5520 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1029, line: 1299, baseType: !1028)
!5521 = !DILocalVariable(name: "scene", arg: 1, scope: !5516, file: !3, line: 1979, type: !5519)
!5522 = !DILocation(line: 1979, column: 42, scope: !5516)
!5523 = !DILocalVariable(name: "ob", arg: 2, scope: !5516, file: !3, line: 1979, type: !3567)
!5524 = !DILocation(line: 1979, column: 57, scope: !5516)
!5525 = !DILocalVariable(name: "cfra", arg: 3, scope: !5516, file: !3, line: 1979, type: !341)
!5526 = !DILocation(line: 1979, column: 67, scope: !5516)
!5527 = !DILocation(line: 1981, column: 6, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5516, file: !3, line: 1981, column: 6)
!5529 = !DILocation(line: 1981, column: 10, scope: !5528)
!5530 = !DILocation(line: 1981, column: 6, scope: !5516)
!5531 = !DILocation(line: 1982, column: 25, scope: !5528)
!5532 = !DILocation(line: 1982, column: 32, scope: !5528)
!5533 = !DILocation(line: 1982, column: 36, scope: !5528)
!5534 = !DILocation(line: 1982, column: 44, scope: !5528)
!5535 = !DILocation(line: 1982, column: 3, scope: !5528)
!5536 = !DILocation(line: 1985, column: 32, scope: !5516)
!5537 = !DILocation(line: 1985, column: 40, scope: !5516)
!5538 = !DILocation(line: 1985, column: 44, scope: !5516)
!5539 = !DILocation(line: 1985, column: 48, scope: !5516)
!5540 = !DILocation(line: 1985, column: 52, scope: !5516)
!5541 = !DILocation(line: 1985, column: 57, scope: !5516)
!5542 = !DILocation(line: 1985, column: 2, scope: !5516)
!5543 = !DILocation(line: 1986, column: 32, scope: !5516)
!5544 = !DILocation(line: 1986, column: 39, scope: !5516)
!5545 = !DILocation(line: 1986, column: 43, scope: !5516)
!5546 = !DILocation(line: 1986, column: 2, scope: !5516)
!5547 = !DILocation(line: 1987, column: 1, scope: !5516)
!5548 = distinct !DISubprogram(name: "initialize_particle_texture", scope: !3, file: !3, line: 1543, type: !5549, scopeLine: 1544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5549 = !DISubroutineType(types: !5550)
!5550 = !{null, !3218, !2461, !260}
!5551 = !DILocalVariable(name: "sim", arg: 1, scope: !5548, file: !3, line: 1543, type: !3218)
!5552 = !DILocation(line: 1543, column: 65, scope: !5548)
!5553 = !DILocalVariable(name: "pa", arg: 2, scope: !5548, file: !3, line: 1543, type: !2461)
!5554 = !DILocation(line: 1543, column: 84, scope: !5548)
!5555 = !DILocalVariable(name: "p", arg: 3, scope: !5548, file: !3, line: 1543, type: !260)
!5556 = !DILocation(line: 1543, column: 92, scope: !5548)
!5557 = !DILocalVariable(name: "psys", scope: !5548, file: !3, line: 1545, type: !3144)
!5558 = !DILocation(line: 1545, column: 18, scope: !5548)
!5559 = !DILocation(line: 1545, column: 25, scope: !5548)
!5560 = !DILocation(line: 1545, column: 30, scope: !5548)
!5561 = !DILocalVariable(name: "part", scope: !5548, file: !3, line: 1546, type: !2192)
!5562 = !DILocation(line: 1546, column: 20, scope: !5548)
!5563 = !DILocation(line: 1546, column: 27, scope: !5548)
!5564 = !DILocation(line: 1546, column: 33, scope: !5548)
!5565 = !DILocalVariable(name: "ptex", scope: !5548, file: !3, line: 1547, type: !3199)
!5566 = !DILocation(line: 1547, column: 18, scope: !5548)
!5567 = !DILocation(line: 1549, column: 19, scope: !5548)
!5568 = !DILocation(line: 1549, column: 24, scope: !5548)
!5569 = !DILocation(line: 1549, column: 2, scope: !5548)
!5570 = !DILocation(line: 1551, column: 10, scope: !5548)
!5571 = !DILocation(line: 1551, column: 16, scope: !5548)
!5572 = !DILocation(line: 1551, column: 2, scope: !5548)
!5573 = !DILocation(line: 1553, column: 12, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 1553, column: 7)
!5575 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 1551, column: 22)
!5576 = !DILocation(line: 1553, column: 31, scope: !5574)
!5577 = !DILocation(line: 1553, column: 37, scope: !5574)
!5578 = !DILocation(line: 1553, column: 38, scope: !5574)
!5579 = !DILocation(line: 1553, column: 20, scope: !5574)
!5580 = !DILocation(line: 1553, column: 18, scope: !5574)
!5581 = !DILocation(line: 1553, column: 7, scope: !5575)
!5582 = !DILocation(line: 1554, column: 4, scope: !5574)
!5583 = !DILocation(line: 1554, column: 8, scope: !5574)
!5584 = !DILocation(line: 1554, column: 13, scope: !5574)
!5585 = !DILocation(line: 1555, column: 14, scope: !5575)
!5586 = !DILocation(line: 1555, column: 20, scope: !5575)
!5587 = !DILocation(line: 1555, column: 27, scope: !5575)
!5588 = !DILocation(line: 1555, column: 33, scope: !5575)
!5589 = !DILocation(line: 1555, column: 39, scope: !5575)
!5590 = !DILocation(line: 1555, column: 45, scope: !5575)
!5591 = !DILocation(line: 1555, column: 37, scope: !5575)
!5592 = !DILocation(line: 1555, column: 55, scope: !5575)
!5593 = !DILocation(line: 1555, column: 49, scope: !5575)
!5594 = !DILocation(line: 1555, column: 24, scope: !5575)
!5595 = !DILocation(line: 1555, column: 3, scope: !5575)
!5596 = !DILocation(line: 1555, column: 7, scope: !5575)
!5597 = !DILocation(line: 1555, column: 12, scope: !5575)
!5598 = !DILocation(line: 1556, column: 3, scope: !5575)
!5599 = !DILocation(line: 1558, column: 12, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 1558, column: 7)
!5601 = !DILocation(line: 1558, column: 31, scope: !5600)
!5602 = !DILocation(line: 1558, column: 37, scope: !5600)
!5603 = !DILocation(line: 1558, column: 38, scope: !5600)
!5604 = !DILocation(line: 1558, column: 20, scope: !5600)
!5605 = !DILocation(line: 1558, column: 18, scope: !5600)
!5606 = !DILocation(line: 1558, column: 7, scope: !5575)
!5607 = !DILocation(line: 1559, column: 4, scope: !5600)
!5608 = !DILocation(line: 1559, column: 8, scope: !5600)
!5609 = !DILocation(line: 1559, column: 13, scope: !5600)
!5610 = !DILocation(line: 1560, column: 3, scope: !5575)
!5611 = !DILocation(line: 1560, column: 7, scope: !5575)
!5612 = !DILocation(line: 1560, column: 12, scope: !5575)
!5613 = !DILocation(line: 1561, column: 3, scope: !5575)
!5614 = !DILocation(line: 1563, column: 3, scope: !5575)
!5615 = !DILocation(line: 1565, column: 1, scope: !5548)
!5616 = distinct !DISubprogram(name: "psys_get_target_system", scope: !3, file: !3, line: 2079, type: !5617, scopeLine: 2080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5617 = !DISubroutineType(types: !5618)
!5618 = !{!2186, !3567, !5619}
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5620, size: 64)
!5620 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleTarget", file: !1965, line: 85, baseType: !5621)
!5621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleTarget", file: !1965, line: 79, size: 320, elements: !5622)
!5622 = !{!5623, !5625, !5626, !5627, !5628, !5629, !5630, !5631}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5621, file: !1965, line: 80, baseType: !5624, size: 64)
!5624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5621, size: 64)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5621, file: !1965, line: 80, baseType: !5624, size: 64, offset: 64)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !5621, file: !1965, line: 81, baseType: !718, size: 64, offset: 128)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !5621, file: !1965, line: 82, baseType: !260, size: 32, offset: 192)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5621, file: !1965, line: 83, baseType: !258, size: 16, offset: 224)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5621, file: !1965, line: 83, baseType: !258, size: 16, offset: 240)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !5621, file: !1965, line: 84, baseType: !341, size: 32, offset: 256)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !5621, file: !1965, line: 84, baseType: !341, size: 32, offset: 288)
!5632 = !DILocalVariable(name: "ob", arg: 1, scope: !5616, file: !3, line: 2079, type: !3567)
!5633 = !DILocation(line: 2079, column: 48, scope: !5616)
!5634 = !DILocalVariable(name: "pt", arg: 2, scope: !5616, file: !3, line: 2079, type: !5619)
!5635 = !DILocation(line: 2079, column: 68, scope: !5616)
!5636 = !DILocalVariable(name: "psys", scope: !5616, file: !3, line: 2081, type: !3144)
!5637 = !DILocation(line: 2081, column: 18, scope: !5616)
!5638 = !DILocation(line: 2083, column: 6, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 2083, column: 6)
!5640 = !DILocation(line: 2083, column: 10, scope: !5639)
!5641 = !DILocation(line: 2083, column: 13, scope: !5639)
!5642 = !DILocation(line: 2083, column: 21, scope: !5639)
!5643 = !DILocation(line: 2083, column: 24, scope: !5639)
!5644 = !DILocation(line: 2083, column: 28, scope: !5639)
!5645 = !DILocation(line: 2083, column: 34, scope: !5639)
!5646 = !DILocation(line: 2083, column: 31, scope: !5639)
!5647 = !DILocation(line: 2083, column: 6, scope: !5616)
!5648 = !DILocation(line: 2084, column: 24, scope: !5639)
!5649 = !DILocation(line: 2084, column: 28, scope: !5639)
!5650 = !DILocation(line: 2084, column: 44, scope: !5639)
!5651 = !DILocation(line: 2084, column: 48, scope: !5639)
!5652 = !DILocation(line: 2084, column: 52, scope: !5639)
!5653 = !DILocation(line: 2084, column: 10, scope: !5639)
!5654 = !DILocation(line: 2084, column: 8, scope: !5639)
!5655 = !DILocation(line: 2084, column: 3, scope: !5639)
!5656 = !DILocation(line: 2086, column: 24, scope: !5639)
!5657 = !DILocation(line: 2086, column: 28, scope: !5639)
!5658 = !DILocation(line: 2086, column: 32, scope: !5639)
!5659 = !DILocation(line: 2086, column: 48, scope: !5639)
!5660 = !DILocation(line: 2086, column: 52, scope: !5639)
!5661 = !DILocation(line: 2086, column: 56, scope: !5639)
!5662 = !DILocation(line: 2086, column: 10, scope: !5639)
!5663 = !DILocation(line: 2086, column: 8, scope: !5639)
!5664 = !DILocation(line: 2088, column: 6, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 2088, column: 6)
!5666 = !DILocation(line: 2088, column: 6, scope: !5616)
!5667 = !DILocation(line: 2089, column: 3, scope: !5665)
!5668 = !DILocation(line: 2089, column: 7, scope: !5665)
!5669 = !DILocation(line: 2089, column: 12, scope: !5665)
!5670 = !DILocation(line: 2091, column: 3, scope: !5665)
!5671 = !DILocation(line: 2091, column: 7, scope: !5665)
!5672 = !DILocation(line: 2091, column: 12, scope: !5665)
!5673 = !DILocation(line: 2093, column: 9, scope: !5616)
!5674 = !DILocation(line: 2093, column: 2, scope: !5616)
!5675 = distinct !DISubprogram(name: "psys_count_keyed_targets", scope: !3, file: !3, line: 2099, type: !5676, scopeLine: 2100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5676 = !DISubroutineType(types: !5677)
!5677 = !{null, !3218}
!5678 = !DILocalVariable(name: "sim", arg: 1, scope: !5675, file: !3, line: 2099, type: !3218)
!5679 = !DILocation(line: 2099, column: 55, scope: !5675)
!5680 = !DILocalVariable(name: "psys", scope: !5675, file: !3, line: 2101, type: !3144)
!5681 = !DILocation(line: 2101, column: 18, scope: !5675)
!5682 = !DILocation(line: 2101, column: 25, scope: !5675)
!5683 = !DILocation(line: 2101, column: 30, scope: !5675)
!5684 = !DILocalVariable(name: "kpsys", scope: !5675, file: !3, line: 2101, type: !3144)
!5685 = !DILocation(line: 2101, column: 37, scope: !5675)
!5686 = !DILocalVariable(name: "pt", scope: !5675, file: !3, line: 2102, type: !5619)
!5687 = !DILocation(line: 2102, column: 18, scope: !5675)
!5688 = !DILocation(line: 2102, column: 23, scope: !5675)
!5689 = !DILocation(line: 2102, column: 29, scope: !5675)
!5690 = !DILocation(line: 2102, column: 37, scope: !5675)
!5691 = !DILocalVariable(name: "keys_valid", scope: !5675, file: !3, line: 2103, type: !260)
!5692 = !DILocation(line: 2103, column: 6, scope: !5675)
!5693 = !DILocation(line: 2104, column: 2, scope: !5675)
!5694 = !DILocation(line: 2104, column: 8, scope: !5675)
!5695 = !DILocation(line: 2104, column: 17, scope: !5675)
!5696 = !DILocation(line: 2106, column: 2, scope: !5675)
!5697 = !DILocation(line: 2106, column: 9, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 2106, column: 2)
!5699 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 2106, column: 2)
!5700 = !DILocation(line: 2106, column: 2, scope: !5699)
!5701 = !DILocation(line: 2107, column: 34, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 2106, column: 26)
!5703 = !DILocation(line: 2107, column: 39, scope: !5702)
!5704 = !DILocation(line: 2107, column: 43, scope: !5702)
!5705 = !DILocation(line: 2107, column: 11, scope: !5702)
!5706 = !DILocation(line: 2107, column: 9, scope: !5702)
!5707 = !DILocation(line: 2109, column: 7, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 2109, column: 7)
!5709 = !DILocation(line: 2109, column: 13, scope: !5708)
!5710 = !DILocation(line: 2109, column: 16, scope: !5708)
!5711 = !DILocation(line: 2109, column: 23, scope: !5708)
!5712 = !DILocation(line: 2109, column: 7, scope: !5702)
!5713 = !DILocation(line: 2110, column: 22, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 2109, column: 32)
!5715 = !DILocation(line: 2110, column: 4, scope: !5714)
!5716 = !DILocation(line: 2110, column: 10, scope: !5714)
!5717 = !DILocation(line: 2110, column: 19, scope: !5714)
!5718 = !DILocation(line: 2111, column: 8, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 2111, column: 8)
!5720 = !DILocation(line: 2111, column: 14, scope: !5719)
!5721 = !DILocation(line: 2111, column: 19, scope: !5719)
!5722 = !DILocation(line: 2111, column: 39, scope: !5719)
!5723 = !DILocation(line: 2111, column: 42, scope: !5719)
!5724 = !DILocation(line: 2111, column: 46, scope: !5719)
!5725 = !DILocation(line: 2111, column: 55, scope: !5719)
!5726 = !DILocation(line: 2111, column: 8, scope: !5714)
!5727 = !DILocation(line: 2112, column: 5, scope: !5719)
!5728 = !DILocation(line: 2112, column: 11, scope: !5719)
!5729 = !DILocation(line: 2112, column: 20, scope: !5719)
!5730 = !DILocation(line: 2113, column: 3, scope: !5714)
!5731 = !DILocation(line: 2115, column: 15, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 2114, column: 8)
!5733 = !DILocation(line: 2117, column: 2, scope: !5702)
!5734 = !DILocation(line: 2106, column: 16, scope: !5698)
!5735 = !DILocation(line: 2106, column: 20, scope: !5698)
!5736 = !DILocation(line: 2106, column: 15, scope: !5698)
!5737 = !DILocation(line: 2106, column: 2, scope: !5698)
!5738 = distinct !{!5738, !5700, !5739}
!5739 = !DILocation(line: 2117, column: 2, scope: !5699)
!5740 = !DILocation(line: 2119, column: 20, scope: !5675)
!5741 = !DILocation(line: 2119, column: 26, scope: !5675)
!5742 = !DILocation(line: 2119, column: 31, scope: !5675)
!5743 = !DILocation(line: 2119, column: 57, scope: !5675)
!5744 = !DILocation(line: 2119, column: 63, scope: !5675)
!5745 = !DILocation(line: 2119, column: 69, scope: !5675)
!5746 = !DILocation(line: 2119, column: 2, scope: !5675)
!5747 = !DILocation(line: 2119, column: 8, scope: !5675)
!5748 = !DILocation(line: 2119, column: 17, scope: !5675)
!5749 = !DILocation(line: 2120, column: 1, scope: !5675)
!5750 = distinct !DISubprogram(name: "psys_make_temp_pointcache", scope: !3, file: !3, line: 2196, type: !5751, scopeLine: 2197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5751 = !DISubroutineType(types: !5752)
!5752 = !{null, !3567, !3144}
!5753 = !DILocalVariable(name: "ob", arg: 1, scope: !5750, file: !3, line: 2196, type: !3567)
!5754 = !DILocation(line: 2196, column: 40, scope: !5750)
!5755 = !DILocalVariable(name: "psys", arg: 2, scope: !5750, file: !3, line: 2196, type: !3144)
!5756 = !DILocation(line: 2196, column: 60, scope: !5750)
!5757 = !DILocalVariable(name: "cache", scope: !5750, file: !3, line: 2198, type: !5758)
!5758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5759, size: 64)
!5759 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointCache", file: !888, line: 209, baseType: !1909)
!5760 = !DILocation(line: 2198, column: 14, scope: !5750)
!5761 = !DILocation(line: 2198, column: 22, scope: !5750)
!5762 = !DILocation(line: 2198, column: 28, scope: !5750)
!5763 = !DILocation(line: 2200, column: 6, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 2200, column: 6)
!5765 = !DILocation(line: 2200, column: 13, scope: !5764)
!5766 = !DILocation(line: 2200, column: 18, scope: !5764)
!5767 = !DILocation(line: 2200, column: 39, scope: !5764)
!5768 = !DILocation(line: 2200, column: 65, scope: !5764)
!5769 = !DILocation(line: 2200, column: 72, scope: !5764)
!5770 = !DILocation(line: 2200, column: 42, scope: !5764)
!5771 = !DILocation(line: 2200, column: 6, scope: !5750)
!5772 = !DILocalVariable(name: "pid", scope: !5773, file: !3, line: 2201, type: !3513)
!5773 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 2200, column: 84)
!5774 = !DILocation(line: 2201, column: 13, scope: !5773)
!5775 = !DILocation(line: 2202, column: 39, scope: !5773)
!5776 = !DILocation(line: 2202, column: 43, scope: !5773)
!5777 = !DILocation(line: 2202, column: 3, scope: !5773)
!5778 = !DILocation(line: 2203, column: 3, scope: !5773)
!5779 = !DILocation(line: 2203, column: 10, scope: !5773)
!5780 = !DILocation(line: 2203, column: 15, scope: !5773)
!5781 = !DILocation(line: 2204, column: 3, scope: !5773)
!5782 = !DILocation(line: 2205, column: 3, scope: !5773)
!5783 = !DILocation(line: 2205, column: 10, scope: !5773)
!5784 = !DILocation(line: 2205, column: 15, scope: !5773)
!5785 = !DILocation(line: 2206, column: 2, scope: !5773)
!5786 = !DILocation(line: 2207, column: 1, scope: !5750)
!5787 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !5788, file: !5788, line: 88, type: !5789, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5788 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5789 = !DISubroutineType(types: !5790)
!5790 = !{!672, !5791}
!5791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5792, size: 64)
!5792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !287)
!5793 = !DILocalVariable(name: "lb", arg: 1, scope: !5787, file: !5788, line: 88, type: !5791)
!5794 = !DILocation(line: 88, column: 62, scope: !5787)
!5795 = !DILocation(line: 88, column: 76, scope: !5787)
!5796 = !DILocation(line: 88, column: 80, scope: !5787)
!5797 = !DILocation(line: 88, column: 86, scope: !5787)
!5798 = !DILocation(line: 88, column: 75, scope: !5787)
!5799 = !DILocation(line: 88, column: 68, scope: !5787)
!5800 = distinct !DISubprogram(name: "psys_get_pointcache_start_end", scope: !3, file: !3, line: 2213, type: !5801, scopeLine: 2214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5801 = !DISubroutineType(types: !5802)
!5802 = !{null, !5519, !3144, !2797, !2797}
!5803 = !DILocalVariable(name: "scene", arg: 1, scope: !5800, file: !3, line: 2213, type: !5519)
!5804 = !DILocation(line: 2213, column: 43, scope: !5800)
!5805 = !DILocalVariable(name: "psys", arg: 2, scope: !5800, file: !3, line: 2213, type: !3144)
!5806 = !DILocation(line: 2213, column: 66, scope: !5800)
!5807 = !DILocalVariable(name: "sfra", arg: 3, scope: !5800, file: !3, line: 2213, type: !2797)
!5808 = !DILocation(line: 2213, column: 77, scope: !5800)
!5809 = !DILocalVariable(name: "efra", arg: 4, scope: !5800, file: !3, line: 2213, type: !2797)
!5810 = !DILocation(line: 2213, column: 88, scope: !5800)
!5811 = !DILocalVariable(name: "part", scope: !5800, file: !3, line: 2215, type: !2192)
!5812 = !DILocation(line: 2215, column: 20, scope: !5800)
!5813 = !DILocation(line: 2215, column: 27, scope: !5800)
!5814 = !DILocation(line: 2215, column: 33, scope: !5800)
!5815 = !DILocation(line: 2217, column: 10, scope: !5800)
!5816 = !DILocation(line: 2217, column: 3, scope: !5800)
!5817 = !DILocation(line: 2217, column: 8, scope: !5800)
!5818 = !DILocation(line: 2218, column: 10, scope: !5800)
!5819 = !DILocation(line: 2218, column: 3, scope: !5800)
!5820 = !DILocation(line: 2218, column: 8, scope: !5800)
!5821 = !DILocation(line: 2219, column: 1, scope: !5800)
!5822 = distinct !DISubprogram(name: "psys_update_particle_tree", scope: !3, file: !3, line: 2261, type: !5823, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5823 = !DISubroutineType(types: !5824)
!5824 = !{null, !3144, !341}
!5825 = !DILocalVariable(name: "psys", arg: 1, scope: !5822, file: !3, line: 2261, type: !3144)
!5826 = !DILocation(line: 2261, column: 48, scope: !5822)
!5827 = !DILocalVariable(name: "cfra", arg: 2, scope: !5822, file: !3, line: 2261, type: !341)
!5828 = !DILocation(line: 2261, column: 60, scope: !5822)
!5829 = !DILocation(line: 2263, column: 6, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 2263, column: 6)
!5831 = !DILocation(line: 2263, column: 6, scope: !5822)
!5832 = !DILocalVariable(name: "pa", scope: !5833, file: !3, line: 2264, type: !2461)
!5833 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 2263, column: 12)
!5834 = !DILocation(line: 2264, column: 3, scope: !5833)
!5835 = !DILocalVariable(name: "p", scope: !5833, file: !3, line: 2264, type: !260)
!5836 = !DILocalVariable(name: "totpart", scope: !5833, file: !3, line: 2265, type: !260)
!5837 = !DILocation(line: 2265, column: 7, scope: !5833)
!5838 = !DILocation(line: 2267, column: 8, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 2267, column: 7)
!5840 = !DILocation(line: 2267, column: 14, scope: !5839)
!5841 = !DILocation(line: 2267, column: 19, scope: !5839)
!5842 = !DILocation(line: 2267, column: 22, scope: !5839)
!5843 = !DILocation(line: 2267, column: 28, scope: !5839)
!5844 = !DILocation(line: 2267, column: 42, scope: !5839)
!5845 = !DILocation(line: 2267, column: 39, scope: !5839)
!5846 = !DILocation(line: 2267, column: 7, scope: !5833)
!5847 = !DILocation(line: 2268, column: 4, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 2268, column: 4)
!5849 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 2267, column: 48)
!5850 = !DILocation(line: 2268, column: 4, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 2268, column: 4)
!5852 = !DILocation(line: 2268, column: 4, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 2268, column: 4)
!5854 = !DILocation(line: 2269, column: 12, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 2268, column: 25)
!5856 = !DILocation(line: 2270, column: 4, scope: !5855)
!5857 = distinct !{!5857, !5847, !5858}
!5858 = !DILocation(line: 2270, column: 4, scope: !5848)
!5859 = !DILocation(line: 2272, column: 20, scope: !5849)
!5860 = !DILocation(line: 2272, column: 26, scope: !5849)
!5861 = !DILocation(line: 2272, column: 4, scope: !5849)
!5862 = !DILocation(line: 2273, column: 32, scope: !5849)
!5863 = !DILocation(line: 2273, column: 38, scope: !5849)
!5864 = !DILocation(line: 2273, column: 17, scope: !5849)
!5865 = !DILocation(line: 2273, column: 4, scope: !5849)
!5866 = !DILocation(line: 2273, column: 10, scope: !5849)
!5867 = !DILocation(line: 2273, column: 15, scope: !5849)
!5868 = !DILocation(line: 2275, column: 4, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 2275, column: 4)
!5870 = !DILocation(line: 2275, column: 4, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 2275, column: 4)
!5872 = !DILocation(line: 2275, column: 4, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 2275, column: 4)
!5874 = !DILocation(line: 2276, column: 9, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 2276, column: 9)
!5876 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 2275, column: 25)
!5877 = !DILocation(line: 2276, column: 13, scope: !5875)
!5878 = !DILocation(line: 2276, column: 19, scope: !5875)
!5879 = !DILocation(line: 2276, column: 9, scope: !5876)
!5880 = !DILocation(line: 2277, column: 10, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 2277, column: 10)
!5882 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 2276, column: 34)
!5883 = !DILocation(line: 2277, column: 14, scope: !5881)
!5884 = !DILocation(line: 2277, column: 20, scope: !5881)
!5885 = !DILocation(line: 2277, column: 28, scope: !5881)
!5886 = !DILocation(line: 2277, column: 25, scope: !5881)
!5887 = !DILocation(line: 2277, column: 10, scope: !5882)
!5888 = !DILocation(line: 2278, column: 25, scope: !5881)
!5889 = !DILocation(line: 2278, column: 31, scope: !5881)
!5890 = !DILocation(line: 2278, column: 37, scope: !5881)
!5891 = !DILocation(line: 2278, column: 40, scope: !5881)
!5892 = !DILocation(line: 2278, column: 44, scope: !5881)
!5893 = !DILocation(line: 2278, column: 55, scope: !5881)
!5894 = !DILocation(line: 2278, column: 7, scope: !5881)
!5895 = !DILocation(line: 2280, column: 25, scope: !5881)
!5896 = !DILocation(line: 2280, column: 31, scope: !5881)
!5897 = !DILocation(line: 2280, column: 37, scope: !5881)
!5898 = !DILocation(line: 2280, column: 40, scope: !5881)
!5899 = !DILocation(line: 2280, column: 44, scope: !5881)
!5900 = !DILocation(line: 2280, column: 50, scope: !5881)
!5901 = !DILocation(line: 2280, column: 7, scope: !5881)
!5902 = !DILocation(line: 2281, column: 5, scope: !5882)
!5903 = !DILocation(line: 2282, column: 4, scope: !5876)
!5904 = distinct !{!5904, !5868, !5905}
!5905 = !DILocation(line: 2282, column: 4, scope: !5869)
!5906 = !DILocation(line: 2283, column: 23, scope: !5849)
!5907 = !DILocation(line: 2283, column: 29, scope: !5849)
!5908 = !DILocation(line: 2283, column: 4, scope: !5849)
!5909 = !DILocation(line: 2285, column: 23, scope: !5849)
!5910 = !DILocation(line: 2285, column: 4, scope: !5849)
!5911 = !DILocation(line: 2285, column: 10, scope: !5849)
!5912 = !DILocation(line: 2285, column: 21, scope: !5849)
!5913 = !DILocation(line: 2286, column: 3, scope: !5849)
!5914 = !DILocation(line: 2287, column: 2, scope: !5833)
!5915 = !DILocation(line: 2288, column: 1, scope: !5822)
!5916 = distinct !DISubprogram(name: "psys_sph_init", scope: !3, file: !3, line: 2964, type: !5917, scopeLine: 2965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!5917 = !DISubroutineType(types: !5918)
!5918 = !{null, !3218, !3138}
!5919 = !DILocalVariable(name: "sim", arg: 1, scope: !5916, file: !3, line: 2964, type: !3218)
!5920 = !DILocation(line: 2964, column: 44, scope: !5916)
!5921 = !DILocalVariable(name: "sphdata", arg: 2, scope: !5916, file: !3, line: 2964, type: !3138)
!5922 = !DILocation(line: 2964, column: 58, scope: !5916)
!5923 = !DILocalVariable(name: "pt", scope: !5916, file: !3, line: 2966, type: !5619)
!5924 = !DILocation(line: 2966, column: 18, scope: !5916)
!5925 = !DILocalVariable(name: "i", scope: !5916, file: !3, line: 2967, type: !260)
!5926 = !DILocation(line: 2967, column: 6, scope: !5916)
!5927 = !DILocation(line: 2970, column: 21, scope: !5916)
!5928 = !DILocation(line: 2970, column: 26, scope: !5916)
!5929 = !DILocation(line: 2970, column: 2, scope: !5916)
!5930 = !DILocation(line: 2970, column: 11, scope: !5916)
!5931 = !DILocation(line: 2970, column: 19, scope: !5916)
!5932 = !DILocation(line: 2971, column: 8, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 2971, column: 2)
!5934 = !DILocation(line: 2971, column: 15, scope: !5933)
!5935 = !DILocation(line: 2971, column: 20, scope: !5933)
!5936 = !DILocation(line: 2971, column: 26, scope: !5933)
!5937 = !DILocation(line: 2971, column: 34, scope: !5933)
!5938 = !DILocation(line: 2971, column: 14, scope: !5933)
!5939 = !DILocation(line: 2971, column: 7, scope: !5933)
!5940 = !DILocation(line: 2971, column: 41, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 2971, column: 2)
!5942 = !DILocation(line: 2971, column: 42, scope: !5941)
!5943 = !DILocation(line: 2971, column: 2, scope: !5933)
!5944 = !DILocation(line: 2972, column: 22, scope: !5941)
!5945 = !DILocation(line: 2972, column: 50, scope: !5941)
!5946 = !DILocation(line: 2972, column: 55, scope: !5941)
!5947 = !DILocation(line: 2972, column: 59, scope: !5941)
!5948 = !DILocation(line: 2972, column: 27, scope: !5941)
!5949 = !DILocation(line: 2972, column: 3, scope: !5941)
!5950 = !DILocation(line: 2972, column: 12, scope: !5941)
!5951 = !DILocation(line: 2972, column: 17, scope: !5941)
!5952 = !DILocation(line: 2972, column: 20, scope: !5941)
!5953 = !DILocation(line: 2971, column: 48, scope: !5941)
!5954 = !DILocation(line: 2971, column: 56, scope: !5941)
!5955 = !DILocation(line: 2971, column: 59, scope: !5941)
!5956 = !DILocation(line: 2971, column: 63, scope: !5941)
!5957 = !DILocation(line: 2971, column: 54, scope: !5941)
!5958 = !DILocation(line: 2971, column: 2, scope: !5941)
!5959 = distinct !{!5959, !5943, !5960}
!5960 = !DILocation(line: 2972, column: 65, scope: !5933)
!5961 = !DILocation(line: 2974, column: 24, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 2974, column: 6)
!5963 = !DILocation(line: 2974, column: 6, scope: !5962)
!5964 = !DILocation(line: 2974, column: 6, scope: !5916)
!5965 = !DILocation(line: 2975, column: 22, scope: !5962)
!5966 = !DILocation(line: 2975, column: 27, scope: !5962)
!5967 = !DILocation(line: 2975, column: 34, scope: !5962)
!5968 = !DILocation(line: 2975, column: 51, scope: !5962)
!5969 = !DILocation(line: 2975, column: 3, scope: !5962)
!5970 = !DILocation(line: 2975, column: 12, scope: !5962)
!5971 = !DILocation(line: 2975, column: 20, scope: !5962)
!5972 = !DILocation(line: 2977, column: 3, scope: !5962)
!5973 = !DILocation(line: 2977, column: 12, scope: !5962)
!5974 = !DILocation(line: 2977, column: 20, scope: !5962)
!5975 = !DILocation(line: 2978, column: 37, scope: !5916)
!5976 = !DILocation(line: 2978, column: 42, scope: !5916)
!5977 = !DILocation(line: 2978, column: 16, scope: !5916)
!5978 = !DILocation(line: 2978, column: 2, scope: !5916)
!5979 = !DILocation(line: 2978, column: 11, scope: !5916)
!5980 = !DILocation(line: 2978, column: 14, scope: !5916)
!5981 = !DILocation(line: 2982, column: 2, scope: !5916)
!5982 = !DILocation(line: 2982, column: 11, scope: !5916)
!5983 = !DILocation(line: 2982, column: 14, scope: !5916)
!5984 = !DILocation(line: 2983, column: 2, scope: !5916)
!5985 = !DILocation(line: 2983, column: 11, scope: !5916)
!5986 = !DILocation(line: 2983, column: 16, scope: !5916)
!5987 = !DILocation(line: 2985, column: 6, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 2985, column: 6)
!5989 = !DILocation(line: 2985, column: 11, scope: !5988)
!5990 = !DILocation(line: 2985, column: 17, scope: !5988)
!5991 = !DILocation(line: 2985, column: 23, scope: !5988)
!5992 = !DILocation(line: 2985, column: 30, scope: !5988)
!5993 = !DILocation(line: 2985, column: 37, scope: !5988)
!5994 = !DILocation(line: 2985, column: 6, scope: !5916)
!5995 = !DILocation(line: 2986, column: 3, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 2985, column: 56)
!5997 = !DILocation(line: 2986, column: 12, scope: !5996)
!5998 = !DILocation(line: 2986, column: 21, scope: !5996)
!5999 = !DILocation(line: 2987, column: 3, scope: !5996)
!6000 = !DILocation(line: 2987, column: 12, scope: !5996)
!6001 = !DILocation(line: 2987, column: 23, scope: !5996)
!6002 = !DILocation(line: 2988, column: 3, scope: !5996)
!6003 = !DILocation(line: 2988, column: 12, scope: !5996)
!6004 = !DILocation(line: 2988, column: 17, scope: !5996)
!6005 = !DILocation(line: 2989, column: 2, scope: !5996)
!6006 = !DILocation(line: 2992, column: 3, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 2990, column: 7)
!6008 = !DILocation(line: 2992, column: 12, scope: !6007)
!6009 = !DILocation(line: 2992, column: 21, scope: !6007)
!6010 = !DILocation(line: 2993, column: 3, scope: !6007)
!6011 = !DILocation(line: 2993, column: 12, scope: !6007)
!6012 = !DILocation(line: 2993, column: 23, scope: !6007)
!6013 = !DILocation(line: 2994, column: 3, scope: !6007)
!6014 = !DILocation(line: 2994, column: 12, scope: !6007)
!6015 = !DILocation(line: 2994, column: 17, scope: !6007)
!6016 = !DILocation(line: 2997, column: 1, scope: !5916)
!6017 = distinct !DISubprogram(name: "sph_springhash_build", scope: !3, file: !3, line: 2524, type: !6018, scopeLine: 2525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!6018 = !DISubroutineType(types: !6019)
!6019 = !{!6020, !3144}
!6020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6021, size: 64)
!6021 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeHash", file: !2566, line: 35, baseType: !3152)
!6022 = !DILocalVariable(name: "psys", arg: 1, scope: !6017, file: !3, line: 2524, type: !3144)
!6023 = !DILocation(line: 2524, column: 55, scope: !6017)
!6024 = !DILocalVariable(name: "springhash", scope: !6017, file: !3, line: 2526, type: !6020)
!6025 = !DILocation(line: 2526, column: 12, scope: !6017)
!6026 = !DILocalVariable(name: "spring", scope: !6017, file: !3, line: 2527, type: !2988)
!6027 = !DILocation(line: 2527, column: 18, scope: !6017)
!6028 = !DILocalVariable(name: "i", scope: !6017, file: !3, line: 2528, type: !260)
!6029 = !DILocation(line: 2528, column: 6, scope: !6017)
!6030 = !DILocation(line: 2530, column: 45, scope: !6017)
!6031 = !DILocation(line: 2530, column: 51, scope: !6017)
!6032 = !DILocation(line: 2530, column: 15, scope: !6017)
!6033 = !DILocation(line: 2530, column: 13, scope: !6017)
!6034 = !DILocation(line: 2532, column: 8, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 2532, column: 2)
!6036 = !DILocation(line: 2532, column: 19, scope: !6035)
!6037 = !DILocation(line: 2532, column: 25, scope: !6035)
!6038 = !DILocation(line: 2532, column: 18, scope: !6035)
!6039 = !DILocation(line: 2532, column: 7, scope: !6035)
!6040 = !DILocation(line: 2532, column: 40, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 2532, column: 2)
!6042 = !DILocation(line: 2532, column: 42, scope: !6041)
!6043 = !DILocation(line: 2532, column: 48, scope: !6041)
!6044 = !DILocation(line: 2532, column: 41, scope: !6041)
!6045 = !DILocation(line: 2532, column: 2, scope: !6035)
!6046 = !DILocation(line: 2533, column: 23, scope: !6041)
!6047 = !DILocation(line: 2533, column: 35, scope: !6041)
!6048 = !DILocation(line: 2533, column: 43, scope: !6041)
!6049 = !DILocation(line: 2533, column: 62, scope: !6041)
!6050 = !DILocation(line: 2533, column: 70, scope: !6041)
!6051 = !DILocation(line: 2533, column: 89, scope: !6041)
!6052 = !DILocation(line: 2533, column: 3, scope: !6041)
!6053 = !DILocation(line: 2532, column: 67, scope: !6041)
!6054 = !DILocation(line: 2532, column: 77, scope: !6041)
!6055 = !DILocation(line: 2532, column: 2, scope: !6041)
!6056 = distinct !{!6056, !6045, !6057}
!6057 = !DILocation(line: 2533, column: 112, scope: !6035)
!6058 = !DILocation(line: 2535, column: 9, scope: !6017)
!6059 = !DILocation(line: 2535, column: 2, scope: !6017)
!6060 = distinct !DISubprogram(name: "sph_force_cb", scope: !3, file: !3, line: 2645, type: !3160, scopeLine: 2646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!6061 = !DILocalVariable(name: "sphdata_v", arg: 1, scope: !6060, file: !3, line: 2645, type: !229)
!6062 = !DILocation(line: 2645, column: 32, scope: !6060)
!6063 = !DILocalVariable(name: "state", arg: 2, scope: !6060, file: !3, line: 2645, type: !1988)
!6064 = !DILocation(line: 2645, column: 56, scope: !6060)
!6065 = !DILocalVariable(name: "force", arg: 3, scope: !6060, file: !3, line: 2645, type: !1796)
!6066 = !DILocation(line: 2645, column: 70, scope: !6060)
!6067 = !DILocalVariable(name: "UNUSED_impulse", arg: 4, scope: !6060, file: !3, line: 2645, type: !1796)
!6068 = !DILocation(line: 2645, column: 84, scope: !6060)
!6069 = !DILocalVariable(name: "sphdata", scope: !6060, file: !3, line: 2647, type: !3138)
!6070 = !DILocation(line: 2647, column: 11, scope: !6060)
!6071 = !DILocation(line: 2647, column: 32, scope: !6060)
!6072 = !DILocation(line: 2647, column: 21, scope: !6060)
!6073 = !DILocalVariable(name: "psys", scope: !6060, file: !3, line: 2648, type: !6074)
!6074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!6075 = !DILocation(line: 2648, column: 19, scope: !6060)
!6076 = !DILocation(line: 2648, column: 26, scope: !6060)
!6077 = !DILocation(line: 2648, column: 35, scope: !6060)
!6078 = !DILocalVariable(name: "pa", scope: !6060, file: !3, line: 2649, type: !2461)
!6079 = !DILocation(line: 2649, column: 16, scope: !6060)
!6080 = !DILocation(line: 2649, column: 21, scope: !6060)
!6081 = !DILocation(line: 2649, column: 30, scope: !6060)
!6082 = !DILocalVariable(name: "fluid", scope: !6060, file: !3, line: 2650, type: !6083)
!6083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6084, size: 64)
!6084 = !DIDerivedType(tag: DW_TAG_typedef, name: "SPHFluidSettings", file: !1965, line: 138, baseType: !2227)
!6085 = !DILocation(line: 2650, column: 20, scope: !6060)
!6086 = !DILocation(line: 2650, column: 28, scope: !6060)
!6087 = !DILocation(line: 2650, column: 37, scope: !6060)
!6088 = !DILocation(line: 2650, column: 43, scope: !6060)
!6089 = !DILocalVariable(name: "spring", scope: !6060, file: !3, line: 2651, type: !2988)
!6090 = !DILocation(line: 2651, column: 18, scope: !6060)
!6091 = !DILocalVariable(name: "pfr", scope: !6060, file: !3, line: 2652, type: !3164)
!6092 = !DILocation(line: 2652, column: 15, scope: !6060)
!6093 = !DILocalVariable(name: "pfn", scope: !6060, file: !3, line: 2653, type: !6094)
!6094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 64)
!6095 = !DILocation(line: 2653, column: 15, scope: !6060)
!6096 = !DILocalVariable(name: "gravity", scope: !6060, file: !3, line: 2654, type: !1796)
!6097 = !DILocation(line: 2654, column: 9, scope: !6060)
!6098 = !DILocation(line: 2654, column: 19, scope: !6060)
!6099 = !DILocation(line: 2654, column: 28, scope: !6060)
!6100 = !DILocalVariable(name: "springhash", scope: !6060, file: !3, line: 2655, type: !6020)
!6101 = !DILocation(line: 2655, column: 12, scope: !6060)
!6102 = !DILocation(line: 2655, column: 25, scope: !6060)
!6103 = !DILocation(line: 2655, column: 34, scope: !6060)
!6104 = !DILocalVariable(name: "q", scope: !6060, file: !3, line: 2657, type: !341)
!6105 = !DILocation(line: 2657, column: 8, scope: !6060)
!6106 = !DILocalVariable(name: "u", scope: !6060, file: !3, line: 2657, type: !341)
!6107 = !DILocation(line: 2657, column: 11, scope: !6060)
!6108 = !DILocalVariable(name: "rij", scope: !6060, file: !3, line: 2657, type: !341)
!6109 = !DILocation(line: 2657, column: 14, scope: !6060)
!6110 = !DILocalVariable(name: "dv", scope: !6060, file: !3, line: 2657, type: !563)
!6111 = !DILocation(line: 2657, column: 19, scope: !6060)
!6112 = !DILocalVariable(name: "pressure", scope: !6060, file: !3, line: 2658, type: !341)
!6113 = !DILocation(line: 2658, column: 8, scope: !6060)
!6114 = !DILocalVariable(name: "near_pressure", scope: !6060, file: !3, line: 2658, type: !341)
!6115 = !DILocation(line: 2658, column: 18, scope: !6060)
!6116 = !DILocalVariable(name: "visc", scope: !6060, file: !3, line: 2660, type: !341)
!6117 = !DILocation(line: 2660, column: 8, scope: !6060)
!6118 = !DILocation(line: 2660, column: 15, scope: !6060)
!6119 = !DILocation(line: 2660, column: 22, scope: !6060)
!6120 = !DILocalVariable(name: "stiff_visc", scope: !6060, file: !3, line: 2661, type: !341)
!6121 = !DILocation(line: 2661, column: 8, scope: !6060)
!6122 = !DILocation(line: 2661, column: 21, scope: !6060)
!6123 = !DILocation(line: 2661, column: 28, scope: !6060)
!6124 = !DILocation(line: 2661, column: 46, scope: !6060)
!6125 = !DILocation(line: 2661, column: 53, scope: !6060)
!6126 = !DILocation(line: 2661, column: 58, scope: !6060)
!6127 = !DILocation(line: 2661, column: 80, scope: !6060)
!6128 = !DILocation(line: 2661, column: 87, scope: !6060)
!6129 = !DILocation(line: 2661, column: 43, scope: !6060)
!6130 = !DILocalVariable(name: "inv_mass", scope: !6060, file: !3, line: 2663, type: !341)
!6131 = !DILocation(line: 2663, column: 8, scope: !6060)
!6132 = !DILocation(line: 2663, column: 26, scope: !6060)
!6133 = !DILocation(line: 2663, column: 35, scope: !6060)
!6134 = !DILocation(line: 2663, column: 24, scope: !6060)
!6135 = !DILocalVariable(name: "spring_constant", scope: !6060, file: !3, line: 2664, type: !341)
!6136 = !DILocation(line: 2664, column: 8, scope: !6060)
!6137 = !DILocation(line: 2664, column: 26, scope: !6060)
!6138 = !DILocation(line: 2664, column: 33, scope: !6060)
!6139 = !DILocalVariable(name: "interaction_radius", scope: !6060, file: !3, line: 2667, type: !341)
!6140 = !DILocation(line: 2667, column: 8, scope: !6060)
!6141 = !DILocation(line: 2667, column: 29, scope: !6060)
!6142 = !DILocation(line: 2667, column: 36, scope: !6060)
!6143 = !DILocation(line: 2667, column: 46, scope: !6060)
!6144 = !DILocation(line: 2667, column: 53, scope: !6060)
!6145 = !DILocation(line: 2667, column: 58, scope: !6060)
!6146 = !DILocation(line: 2667, column: 84, scope: !6060)
!6147 = !DILocation(line: 2667, column: 88, scope: !6060)
!6148 = !DILocation(line: 2667, column: 82, scope: !6060)
!6149 = !DILocation(line: 2667, column: 43, scope: !6060)
!6150 = !DILocalVariable(name: "h", scope: !6060, file: !3, line: 2668, type: !341)
!6151 = !DILocation(line: 2668, column: 8, scope: !6060)
!6152 = !DILocation(line: 2668, column: 12, scope: !6060)
!6153 = !DILocation(line: 2668, column: 33, scope: !6060)
!6154 = !DILocation(line: 2668, column: 42, scope: !6060)
!6155 = !DILocation(line: 2668, column: 31, scope: !6060)
!6156 = !DILocalVariable(name: "rest_density", scope: !6060, file: !3, line: 2669, type: !341)
!6157 = !DILocation(line: 2669, column: 8, scope: !6060)
!6158 = !DILocation(line: 2669, column: 23, scope: !6060)
!6159 = !DILocation(line: 2669, column: 30, scope: !6060)
!6160 = !DILocation(line: 2669, column: 46, scope: !6060)
!6161 = !DILocation(line: 2669, column: 53, scope: !6060)
!6162 = !DILocation(line: 2669, column: 58, scope: !6060)
!6163 = !DILocation(line: 2669, column: 43, scope: !6060)
!6164 = !DILocalVariable(name: "rest_length", scope: !6060, file: !3, line: 2670, type: !341)
!6165 = !DILocation(line: 2670, column: 8, scope: !6060)
!6166 = !DILocation(line: 2670, column: 22, scope: !6060)
!6167 = !DILocation(line: 2670, column: 29, scope: !6060)
!6168 = !DILocation(line: 2670, column: 44, scope: !6060)
!6169 = !DILocation(line: 2670, column: 51, scope: !6060)
!6170 = !DILocation(line: 2670, column: 56, scope: !6060)
!6171 = !DILocation(line: 2670, column: 89, scope: !6060)
!6172 = !DILocation(line: 2670, column: 93, scope: !6060)
!6173 = !DILocation(line: 2670, column: 87, scope: !6060)
!6174 = !DILocation(line: 2670, column: 41, scope: !6060)
!6175 = !DILocalVariable(name: "stiffness", scope: !6060, file: !3, line: 2672, type: !341)
!6176 = !DILocation(line: 2672, column: 8, scope: !6060)
!6177 = !DILocation(line: 2672, column: 20, scope: !6060)
!6178 = !DILocation(line: 2672, column: 27, scope: !6060)
!6179 = !DILocalVariable(name: "stiffness_near_fac", scope: !6060, file: !3, line: 2673, type: !341)
!6180 = !DILocation(line: 2673, column: 8, scope: !6060)
!6181 = !DILocation(line: 2673, column: 29, scope: !6060)
!6182 = !DILocation(line: 2673, column: 36, scope: !6060)
!6183 = !DILocation(line: 2673, column: 55, scope: !6060)
!6184 = !DILocation(line: 2673, column: 62, scope: !6060)
!6185 = !DILocation(line: 2673, column: 67, scope: !6060)
!6186 = !DILocation(line: 2673, column: 89, scope: !6060)
!6187 = !DILocation(line: 2673, column: 96, scope: !6060)
!6188 = !DILocation(line: 2673, column: 52, scope: !6060)
!6189 = !DILocalVariable(name: "npa", scope: !6060, file: !3, line: 2675, type: !2461)
!6190 = !DILocation(line: 2675, column: 16, scope: !6060)
!6191 = !DILocalVariable(name: "vec", scope: !6060, file: !3, line: 2676, type: !563)
!6192 = !DILocation(line: 2676, column: 8, scope: !6060)
!6193 = !DILocalVariable(name: "vel", scope: !6060, file: !3, line: 2677, type: !563)
!6194 = !DILocation(line: 2677, column: 8, scope: !6060)
!6195 = !DILocalVariable(name: "co", scope: !6060, file: !3, line: 2678, type: !563)
!6196 = !DILocation(line: 2678, column: 8, scope: !6060)
!6197 = !DILocalVariable(name: "data", scope: !6060, file: !3, line: 2679, type: !511)
!6198 = !DILocation(line: 2679, column: 8, scope: !6060)
!6199 = !DILocalVariable(name: "density", scope: !6060, file: !3, line: 2680, type: !341)
!6200 = !DILocation(line: 2680, column: 8, scope: !6060)
!6201 = !DILocalVariable(name: "near_density", scope: !6060, file: !3, line: 2680, type: !341)
!6202 = !DILocation(line: 2680, column: 17, scope: !6060)
!6203 = !DILocalVariable(name: "i", scope: !6060, file: !3, line: 2682, type: !260)
!6204 = !DILocation(line: 2682, column: 6, scope: !6060)
!6205 = !DILocalVariable(name: "spring_index", scope: !6060, file: !3, line: 2682, type: !260)
!6206 = !DILocation(line: 2682, column: 9, scope: !6060)
!6207 = !DILocalVariable(name: "index", scope: !6060, file: !3, line: 2682, type: !260)
!6208 = !DILocation(line: 2682, column: 23, scope: !6060)
!6209 = !DILocation(line: 2682, column: 31, scope: !6060)
!6210 = !DILocation(line: 2682, column: 36, scope: !6060)
!6211 = !DILocation(line: 2682, column: 45, scope: !6060)
!6212 = !DILocation(line: 2682, column: 34, scope: !6060)
!6213 = !DILocation(line: 2684, column: 12, scope: !6060)
!6214 = !DILocation(line: 2684, column: 20, scope: !6060)
!6215 = !DILocation(line: 2684, column: 2, scope: !6060)
!6216 = !DILocation(line: 2684, column: 10, scope: !6060)
!6217 = !DILocation(line: 2685, column: 13, scope: !6060)
!6218 = !DILocation(line: 2685, column: 6, scope: !6060)
!6219 = !DILocation(line: 2685, column: 11, scope: !6060)
!6220 = !DILocation(line: 2686, column: 10, scope: !6060)
!6221 = !DILocation(line: 2686, column: 6, scope: !6060)
!6222 = !DILocation(line: 2686, column: 8, scope: !6060)
!6223 = !DILocation(line: 2687, column: 11, scope: !6060)
!6224 = !DILocation(line: 2687, column: 6, scope: !6060)
!6225 = !DILocation(line: 2687, column: 9, scope: !6060)
!6226 = !DILocation(line: 2688, column: 13, scope: !6060)
!6227 = !DILocation(line: 2688, column: 22, scope: !6060)
!6228 = !DILocation(line: 2688, column: 6, scope: !6060)
!6229 = !DILocation(line: 2688, column: 11, scope: !6060)
!6230 = !DILocation(line: 2690, column: 27, scope: !6060)
!6231 = !DILocation(line: 2690, column: 33, scope: !6060)
!6232 = !DILocation(line: 2690, column: 40, scope: !6060)
!6233 = !DILocation(line: 2690, column: 50, scope: !6060)
!6234 = !DILocation(line: 2690, column: 2, scope: !6060)
!6235 = !DILocation(line: 2692, column: 12, scope: !6060)
!6236 = !DILocation(line: 2692, column: 10, scope: !6060)
!6237 = !DILocation(line: 2693, column: 17, scope: !6060)
!6238 = !DILocation(line: 2693, column: 15, scope: !6060)
!6239 = !DILocation(line: 2695, column: 14, scope: !6060)
!6240 = !DILocation(line: 2695, column: 27, scope: !6060)
!6241 = !DILocation(line: 2695, column: 37, scope: !6060)
!6242 = !DILocation(line: 2695, column: 35, scope: !6060)
!6243 = !DILocation(line: 2695, column: 24, scope: !6060)
!6244 = !DILocation(line: 2695, column: 11, scope: !6060)
!6245 = !DILocation(line: 2696, column: 18, scope: !6060)
!6246 = !DILocation(line: 2696, column: 39, scope: !6060)
!6247 = !DILocation(line: 2696, column: 37, scope: !6060)
!6248 = !DILocation(line: 2696, column: 16, scope: !6060)
!6249 = !DILocation(line: 2698, column: 12, scope: !6060)
!6250 = !DILocation(line: 2698, column: 8, scope: !6060)
!6251 = !DILocation(line: 2698, column: 6, scope: !6060)
!6252 = !DILocation(line: 2699, column: 8, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 2699, column: 2)
!6254 = !DILocation(line: 2699, column: 7, scope: !6253)
!6255 = !DILocation(line: 2699, column: 12, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 2699, column: 2)
!6257 = !DILocation(line: 2699, column: 18, scope: !6256)
!6258 = !DILocation(line: 2699, column: 13, scope: !6256)
!6259 = !DILocation(line: 2699, column: 2, scope: !6253)
!6260 = !DILocation(line: 2700, column: 9, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 2699, column: 45)
!6262 = !DILocation(line: 2700, column: 14, scope: !6261)
!6263 = !DILocation(line: 2700, column: 20, scope: !6261)
!6264 = !DILocation(line: 2700, column: 32, scope: !6261)
!6265 = !DILocation(line: 2700, column: 37, scope: !6261)
!6266 = !DILocation(line: 2700, column: 30, scope: !6261)
!6267 = !DILocation(line: 2700, column: 7, scope: !6261)
!6268 = !DILocation(line: 2702, column: 18, scope: !6261)
!6269 = !DILocation(line: 2702, column: 22, scope: !6261)
!6270 = !DILocation(line: 2702, column: 27, scope: !6261)
!6271 = !DILocation(line: 2702, column: 38, scope: !6261)
!6272 = !DILocation(line: 2702, column: 42, scope: !6261)
!6273 = !DILocation(line: 2702, column: 47, scope: !6261)
!6274 = !DILocation(line: 2702, column: 58, scope: !6261)
!6275 = !DILocation(line: 2702, column: 63, scope: !6261)
!6276 = !DILocation(line: 2702, column: 70, scope: !6261)
!6277 = !DILocation(line: 2702, column: 3, scope: !6261)
!6278 = !DILocation(line: 2704, column: 15, scope: !6261)
!6279 = !DILocation(line: 2704, column: 20, scope: !6261)
!6280 = !DILocation(line: 2704, column: 24, scope: !6261)
!6281 = !DILocation(line: 2704, column: 31, scope: !6261)
!6282 = !DILocation(line: 2704, column: 3, scope: !6261)
!6283 = !DILocation(line: 2705, column: 22, scope: !6261)
!6284 = !DILocation(line: 2705, column: 9, scope: !6261)
!6285 = !DILocation(line: 2705, column: 7, scope: !6261)
!6286 = !DILocation(line: 2707, column: 14, scope: !6261)
!6287 = !DILocation(line: 2707, column: 18, scope: !6261)
!6288 = !DILocation(line: 2707, column: 17, scope: !6261)
!6289 = !DILocation(line: 2707, column: 12, scope: !6261)
!6290 = !DILocation(line: 2707, column: 23, scope: !6261)
!6291 = !DILocation(line: 2707, column: 28, scope: !6261)
!6292 = !DILocation(line: 2707, column: 34, scope: !6261)
!6293 = !DILocation(line: 2707, column: 40, scope: !6261)
!6294 = !DILocation(line: 2707, column: 21, scope: !6261)
!6295 = !DILocation(line: 2707, column: 47, scope: !6261)
!6296 = !DILocation(line: 2707, column: 45, scope: !6261)
!6297 = !DILocation(line: 2707, column: 5, scope: !6261)
!6298 = !DILocation(line: 2709, column: 7, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 2709, column: 7)
!6300 = !DILocation(line: 2709, column: 12, scope: !6299)
!6301 = !DILocation(line: 2709, column: 18, scope: !6299)
!6302 = !DILocation(line: 2709, column: 24, scope: !6299)
!6303 = !DILocation(line: 2709, column: 29, scope: !6299)
!6304 = !DILocation(line: 2709, column: 7, scope: !6261)
!6305 = !DILocation(line: 2710, column: 9, scope: !6299)
!6306 = !DILocation(line: 2710, column: 14, scope: !6299)
!6307 = !DILocation(line: 2710, column: 6, scope: !6299)
!6308 = !DILocation(line: 2710, column: 4, scope: !6299)
!6309 = !DILocation(line: 2712, column: 14, scope: !6261)
!6310 = !DILocation(line: 2712, column: 19, scope: !6261)
!6311 = !DILocation(line: 2712, column: 24, scope: !6261)
!6312 = !DILocation(line: 2712, column: 35, scope: !6261)
!6313 = !DILocation(line: 2712, column: 3, scope: !6261)
!6314 = !DILocation(line: 2715, column: 16, scope: !6261)
!6315 = !DILocation(line: 2715, column: 23, scope: !6261)
!6316 = !DILocation(line: 2715, column: 30, scope: !6261)
!6317 = !DILocation(line: 2715, column: 41, scope: !6261)
!6318 = !DILocation(line: 2715, column: 55, scope: !6261)
!6319 = !DILocation(line: 2715, column: 54, scope: !6261)
!6320 = !DILocation(line: 2715, column: 39, scope: !6261)
!6321 = !DILocation(line: 2715, column: 28, scope: !6261)
!6322 = !DILocation(line: 2715, column: 58, scope: !6261)
!6323 = !DILocation(line: 2715, column: 57, scope: !6261)
!6324 = !DILocation(line: 2715, column: 3, scope: !6261)
!6325 = !DILocation(line: 2718, column: 7, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 2718, column: 7)
!6327 = !DILocation(line: 2718, column: 12, scope: !6326)
!6328 = !DILocation(line: 2718, column: 19, scope: !6326)
!6329 = !DILocation(line: 2718, column: 22, scope: !6326)
!6330 = !DILocation(line: 2718, column: 33, scope: !6326)
!6331 = !DILocation(line: 2718, column: 7, scope: !6261)
!6332 = !DILocation(line: 2719, column: 16, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 2718, column: 40)
!6334 = !DILocation(line: 2719, column: 20, scope: !6333)
!6335 = !DILocation(line: 2719, column: 25, scope: !6333)
!6336 = !DILocation(line: 2719, column: 32, scope: !6333)
!6337 = !DILocation(line: 2719, column: 4, scope: !6333)
!6338 = !DILocation(line: 2720, column: 17, scope: !6333)
!6339 = !DILocation(line: 2720, column: 22, scope: !6333)
!6340 = !DILocation(line: 2720, column: 8, scope: !6333)
!6341 = !DILocation(line: 2720, column: 6, scope: !6333)
!6342 = !DILocation(line: 2722, column: 8, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 2722, column: 8)
!6344 = !DILocation(line: 2722, column: 10, scope: !6343)
!6345 = !DILocation(line: 2722, column: 16, scope: !6343)
!6346 = !DILocation(line: 2722, column: 19, scope: !6343)
!6347 = !DILocation(line: 2722, column: 24, scope: !6343)
!6348 = !DILocation(line: 2722, column: 8, scope: !6333)
!6349 = !DILocation(line: 2723, column: 18, scope: !6343)
!6350 = !DILocation(line: 2723, column: 25, scope: !6343)
!6351 = !DILocation(line: 2723, column: 37, scope: !6343)
!6352 = !DILocation(line: 2723, column: 35, scope: !6343)
!6353 = !DILocation(line: 2723, column: 41, scope: !6343)
!6354 = !DILocation(line: 2723, column: 39, scope: !6343)
!6355 = !DILocation(line: 2723, column: 48, scope: !6343)
!6356 = !DILocation(line: 2723, column: 46, scope: !6343)
!6357 = !DILocation(line: 2723, column: 5, scope: !6343)
!6358 = !DILocation(line: 2725, column: 8, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 2725, column: 8)
!6360 = !DILocation(line: 2725, column: 10, scope: !6359)
!6361 = !DILocation(line: 2725, column: 16, scope: !6359)
!6362 = !DILocation(line: 2725, column: 19, scope: !6359)
!6363 = !DILocation(line: 2725, column: 30, scope: !6359)
!6364 = !DILocation(line: 2725, column: 8, scope: !6333)
!6365 = !DILocation(line: 2726, column: 18, scope: !6359)
!6366 = !DILocation(line: 2726, column: 25, scope: !6359)
!6367 = !DILocation(line: 2726, column: 37, scope: !6359)
!6368 = !DILocation(line: 2726, column: 35, scope: !6359)
!6369 = !DILocation(line: 2726, column: 41, scope: !6359)
!6370 = !DILocation(line: 2726, column: 39, scope: !6359)
!6371 = !DILocation(line: 2726, column: 54, scope: !6359)
!6372 = !DILocation(line: 2726, column: 52, scope: !6359)
!6373 = !DILocation(line: 2726, column: 5, scope: !6359)
!6374 = !DILocation(line: 2727, column: 3, scope: !6333)
!6375 = !DILocation(line: 2729, column: 7, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 2729, column: 7)
!6377 = !DILocation(line: 2729, column: 23, scope: !6376)
!6378 = !DILocation(line: 2729, column: 7, scope: !6261)
!6379 = !DILocation(line: 2731, column: 8, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 2731, column: 8)
!6381 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 2729, column: 30)
!6382 = !DILocation(line: 2731, column: 13, scope: !6380)
!6383 = !DILocation(line: 2731, column: 21, scope: !6380)
!6384 = !DILocation(line: 2731, column: 18, scope: !6380)
!6385 = !DILocation(line: 2731, column: 29, scope: !6380)
!6386 = !DILocation(line: 2731, column: 32, scope: !6380)
!6387 = !DILocation(line: 2731, column: 39, scope: !6380)
!6388 = !DILocation(line: 2731, column: 44, scope: !6380)
!6389 = !DILocation(line: 2731, column: 71, scope: !6380)
!6390 = !DILocation(line: 2731, column: 74, scope: !6380)
!6391 = !DILocation(line: 2731, column: 8, scope: !6381)
!6392 = !DILocation(line: 2733, column: 20, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 2731, column: 86)
!6394 = !DILocation(line: 2733, column: 18, scope: !6393)
!6395 = !DILocation(line: 2735, column: 9, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 2735, column: 9)
!6397 = !DILocation(line: 2735, column: 9, scope: !6393)
!6398 = !DILocation(line: 2736, column: 15, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 2735, column: 23)
!6400 = !DILocation(line: 2736, column: 24, scope: !6399)
!6401 = !DILocation(line: 2736, column: 40, scope: !6399)
!6402 = !DILocation(line: 2736, column: 38, scope: !6399)
!6403 = !DILocation(line: 2736, column: 53, scope: !6399)
!6404 = !DILocation(line: 2736, column: 13, scope: !6399)
!6405 = !DILocation(line: 2738, column: 19, scope: !6399)
!6406 = !DILocation(line: 2738, column: 26, scope: !6399)
!6407 = !DILocation(line: 2738, column: 39, scope: !6399)
!6408 = !DILocation(line: 2738, column: 37, scope: !6399)
!6409 = !DILocation(line: 2738, column: 64, scope: !6399)
!6410 = !DILocation(line: 2738, column: 68, scope: !6399)
!6411 = !DILocation(line: 2738, column: 67, scope: !6399)
!6412 = !DILocation(line: 2738, column: 62, scope: !6399)
!6413 = !DILocation(line: 2738, column: 55, scope: !6399)
!6414 = !DILocation(line: 2738, column: 74, scope: !6399)
!6415 = !DILocation(line: 2738, column: 82, scope: !6399)
!6416 = !DILocation(line: 2738, column: 96, scope: !6399)
!6417 = !DILocation(line: 2738, column: 94, scope: !6399)
!6418 = !DILocation(line: 2738, column: 71, scope: !6399)
!6419 = !DILocation(line: 2738, column: 6, scope: !6399)
!6420 = !DILocation(line: 2739, column: 5, scope: !6399)
!6421 = !DILocation(line: 2740, column: 14, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 2740, column: 14)
!6423 = !DILocation(line: 2740, column: 21, scope: !6422)
!6424 = !DILocation(line: 2740, column: 35, scope: !6422)
!6425 = !DILocation(line: 2740, column: 40, scope: !6422)
!6426 = !DILocation(line: 2740, column: 44, scope: !6422)
!6427 = !DILocation(line: 2740, column: 48, scope: !6422)
!6428 = !DILocation(line: 2740, column: 59, scope: !6422)
!6429 = !DILocation(line: 2740, column: 64, scope: !6422)
!6430 = !DILocation(line: 2740, column: 68, scope: !6422)
!6431 = !DILocation(line: 2740, column: 63, scope: !6422)
!6432 = !DILocation(line: 2740, column: 77, scope: !6422)
!6433 = !DILocation(line: 2740, column: 84, scope: !6422)
!6434 = !DILocation(line: 2740, column: 74, scope: !6422)
!6435 = !DILocation(line: 2740, column: 14, scope: !6396)
!6436 = !DILocalVariable(name: "temp_spring", scope: !6437, file: !3, line: 2741, type: !2989)
!6437 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 2740, column: 99)
!6438 = !DILocation(line: 2741, column: 21, scope: !6437)
!6439 = !DILocation(line: 2742, column: 38, scope: !6437)
!6440 = !DILocation(line: 2742, column: 18, scope: !6437)
!6441 = !DILocation(line: 2742, column: 6, scope: !6437)
!6442 = !DILocation(line: 2742, column: 36, scope: !6437)
!6443 = !DILocation(line: 2743, column: 38, scope: !6437)
!6444 = !DILocation(line: 2743, column: 43, scope: !6437)
!6445 = !DILocation(line: 2743, column: 18, scope: !6437)
!6446 = !DILocation(line: 2743, column: 6, scope: !6437)
!6447 = !DILocation(line: 2743, column: 36, scope: !6437)
!6448 = !DILocation(line: 2744, column: 33, scope: !6437)
!6449 = !DILocation(line: 2744, column: 40, scope: !6437)
!6450 = !DILocation(line: 2744, column: 45, scope: !6437)
!6451 = !DILocation(line: 2744, column: 32, scope: !6437)
!6452 = !DILocation(line: 2744, column: 74, scope: !6437)
!6453 = !DILocation(line: 2744, column: 80, scope: !6437)
!6454 = !DILocation(line: 2744, column: 18, scope: !6437)
!6455 = !DILocation(line: 2744, column: 30, scope: !6437)
!6456 = !DILocation(line: 2745, column: 18, scope: !6437)
!6457 = !DILocation(line: 2745, column: 30, scope: !6437)
!6458 = !DILocation(line: 2751, column: 21, scope: !6437)
!6459 = !DILocation(line: 2751, column: 6, scope: !6437)
!6460 = !DILocation(line: 2752, column: 5, scope: !6437)
!6461 = !DILocation(line: 2753, column: 4, scope: !6393)
!6462 = !DILocation(line: 2755, column: 18, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 2754, column: 9)
!6464 = !DILocation(line: 2755, column: 25, scope: !6463)
!6465 = !DILocation(line: 2755, column: 38, scope: !6463)
!6466 = !DILocation(line: 2755, column: 36, scope: !6463)
!6467 = !DILocation(line: 2755, column: 63, scope: !6463)
!6468 = !DILocation(line: 2755, column: 67, scope: !6463)
!6469 = !DILocation(line: 2755, column: 66, scope: !6463)
!6470 = !DILocation(line: 2755, column: 61, scope: !6463)
!6471 = !DILocation(line: 2755, column: 54, scope: !6463)
!6472 = !DILocation(line: 2755, column: 73, scope: !6463)
!6473 = !DILocation(line: 2755, column: 87, scope: !6463)
!6474 = !DILocation(line: 2755, column: 85, scope: !6463)
!6475 = !DILocation(line: 2755, column: 70, scope: !6463)
!6476 = !DILocation(line: 2755, column: 5, scope: !6463)
!6477 = !DILocation(line: 2757, column: 3, scope: !6381)
!6478 = !DILocation(line: 2758, column: 2, scope: !6261)
!6479 = !DILocation(line: 2699, column: 34, scope: !6256)
!6480 = !DILocation(line: 2699, column: 41, scope: !6256)
!6481 = !DILocation(line: 2699, column: 2, scope: !6256)
!6482 = distinct !{!6482, !6259, !6483}
!6483 = !DILocation(line: 2758, column: 2, scope: !6253)
!6484 = !DILocation(line: 2761, column: 6, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 2761, column: 6)
!6486 = !DILocation(line: 2761, column: 13, scope: !6485)
!6487 = !DILocation(line: 2761, column: 22, scope: !6485)
!6488 = !DILocation(line: 2761, column: 28, scope: !6485)
!6489 = !DILocation(line: 2761, column: 31, scope: !6485)
!6490 = !DILocation(line: 2761, column: 6, scope: !6060)
!6491 = !DILocation(line: 2762, column: 16, scope: !6485)
!6492 = !DILocation(line: 2762, column: 23, scope: !6485)
!6493 = !DILocation(line: 2762, column: 32, scope: !6485)
!6494 = !DILocation(line: 2762, column: 39, scope: !6485)
!6495 = !DILocation(line: 2762, column: 51, scope: !6485)
!6496 = !DILocation(line: 2762, column: 59, scope: !6485)
!6497 = !DILocation(line: 2762, column: 58, scope: !6485)
!6498 = !DILocation(line: 2762, column: 48, scope: !6485)
!6499 = !DILocation(line: 2762, column: 3, scope: !6485)
!6500 = !DILocation(line: 2764, column: 6, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 2764, column: 6)
!6502 = !DILocation(line: 2764, column: 15, scope: !6501)
!6503 = !DILocation(line: 2764, column: 20, scope: !6501)
!6504 = !DILocation(line: 2764, column: 25, scope: !6501)
!6505 = !DILocation(line: 2764, column: 28, scope: !6501)
!6506 = !DILocation(line: 2764, column: 37, scope: !6501)
!6507 = !DILocation(line: 2764, column: 43, scope: !6501)
!6508 = !DILocation(line: 2764, column: 53, scope: !6501)
!6509 = !DILocation(line: 2764, column: 6, scope: !6060)
!6510 = !DILocation(line: 2765, column: 24, scope: !6501)
!6511 = !DILocation(line: 2765, column: 3, scope: !6501)
!6512 = !DILocation(line: 2766, column: 2, scope: !6060)
!6513 = !DILocation(line: 2766, column: 11, scope: !6060)
!6514 = !DILocation(line: 2766, column: 15, scope: !6060)
!6515 = !DILocation(line: 2767, column: 1, scope: !6060)
!6516 = distinct !DISubprogram(name: "sph_density_accum_cb", scope: !3, file: !3, line: 2583, type: !2937, scopeLine: 2584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!6517 = !DILocalVariable(name: "userdata", arg: 1, scope: !6516, file: !3, line: 2583, type: !229)
!6518 = !DILocation(line: 2583, column: 40, scope: !6516)
!6519 = !DILocalVariable(name: "index", arg: 2, scope: !6516, file: !3, line: 2583, type: !260)
!6520 = !DILocation(line: 2583, column: 54, scope: !6516)
!6521 = !DILocalVariable(name: "squared_dist", arg: 3, scope: !6516, file: !3, line: 2583, type: !341)
!6522 = !DILocation(line: 2583, column: 67, scope: !6516)
!6523 = !DILocalVariable(name: "pfr", scope: !6516, file: !3, line: 2585, type: !3163)
!6524 = !DILocation(line: 2585, column: 16, scope: !6516)
!6525 = !DILocation(line: 2585, column: 38, scope: !6516)
!6526 = !DILocation(line: 2585, column: 22, scope: !6516)
!6527 = !DILocalVariable(name: "npa", scope: !6516, file: !3, line: 2586, type: !2461)
!6528 = !DILocation(line: 2586, column: 16, scope: !6516)
!6529 = !DILocation(line: 2586, column: 22, scope: !6516)
!6530 = !DILocation(line: 2586, column: 27, scope: !6516)
!6531 = !DILocation(line: 2586, column: 34, scope: !6516)
!6532 = !DILocation(line: 2586, column: 46, scope: !6516)
!6533 = !DILocation(line: 2586, column: 44, scope: !6516)
!6534 = !DILocalVariable(name: "q", scope: !6516, file: !3, line: 2587, type: !341)
!6535 = !DILocation(line: 2587, column: 8, scope: !6516)
!6536 = !DILocalVariable(name: "dist", scope: !6516, file: !3, line: 2588, type: !341)
!6537 = !DILocation(line: 2588, column: 8, scope: !6516)
!6538 = !DILocation(line: 2590, column: 6, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 2590, column: 6)
!6540 = !DILocation(line: 2590, column: 13, scope: !6539)
!6541 = !DILocation(line: 2590, column: 18, scope: !6539)
!6542 = !DILocation(line: 2590, column: 10, scope: !6539)
!6543 = !DILocation(line: 2590, column: 21, scope: !6539)
!6544 = !DILocation(line: 2590, column: 24, scope: !6539)
!6545 = !DILocation(line: 2590, column: 37, scope: !6539)
!6546 = !DILocation(line: 2590, column: 6, scope: !6516)
!6547 = !DILocation(line: 2591, column: 3, scope: !6539)
!6548 = !DILocation(line: 2599, column: 6, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 2599, column: 6)
!6550 = !DILocation(line: 2599, column: 11, scope: !6549)
!6551 = !DILocation(line: 2599, column: 25, scope: !6549)
!6552 = !DILocation(line: 2599, column: 6, scope: !6516)
!6553 = !DILocation(line: 2600, column: 3, scope: !6549)
!6554 = !DILocation(line: 2602, column: 45, scope: !6516)
!6555 = !DILocation(line: 2602, column: 2, scope: !6516)
!6556 = !DILocation(line: 2602, column: 7, scope: !6516)
!6557 = !DILocation(line: 2602, column: 17, scope: !6516)
!6558 = !DILocation(line: 2602, column: 22, scope: !6516)
!6559 = !DILocation(line: 2602, column: 37, scope: !6516)
!6560 = !DILocation(line: 2602, column: 43, scope: !6516)
!6561 = !DILocation(line: 2603, column: 44, scope: !6516)
!6562 = !DILocation(line: 2603, column: 49, scope: !6516)
!6563 = !DILocation(line: 2603, column: 2, scope: !6516)
!6564 = !DILocation(line: 2603, column: 7, scope: !6516)
!6565 = !DILocation(line: 2603, column: 17, scope: !6516)
!6566 = !DILocation(line: 2603, column: 22, scope: !6516)
!6567 = !DILocation(line: 2603, column: 37, scope: !6516)
!6568 = !DILocation(line: 2603, column: 42, scope: !6516)
!6569 = !DILocation(line: 2604, column: 2, scope: !6516)
!6570 = !DILocation(line: 2604, column: 7, scope: !6516)
!6571 = !DILocation(line: 2604, column: 20, scope: !6516)
!6572 = !DILocation(line: 2606, column: 15, scope: !6516)
!6573 = !DILocation(line: 2606, column: 9, scope: !6516)
!6574 = !DILocation(line: 2606, column: 7, scope: !6516)
!6575 = !DILocation(line: 2607, column: 13, scope: !6516)
!6576 = !DILocation(line: 2607, column: 18, scope: !6516)
!6577 = !DILocation(line: 2607, column: 23, scope: !6516)
!6578 = !DILocation(line: 2607, column: 17, scope: !6516)
!6579 = !DILocation(line: 2607, column: 11, scope: !6516)
!6580 = !DILocation(line: 2607, column: 28, scope: !6516)
!6581 = !DILocation(line: 2607, column: 33, scope: !6516)
!6582 = !DILocation(line: 2607, column: 26, scope: !6516)
!6583 = !DILocation(line: 2607, column: 4, scope: !6516)
!6584 = !DILocation(line: 2609, column: 6, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 2609, column: 6)
!6586 = !DILocation(line: 2609, column: 11, scope: !6585)
!6587 = !DILocation(line: 2609, column: 6, scope: !6516)
!6588 = !DILocation(line: 2610, column: 8, scope: !6585)
!6589 = !DILocation(line: 2610, column: 13, scope: !6585)
!6590 = !DILocation(line: 2610, column: 5, scope: !6585)
!6591 = !DILocation(line: 2610, column: 3, scope: !6585)
!6592 = !DILocation(line: 2612, column: 18, scope: !6516)
!6593 = !DILocation(line: 2612, column: 20, scope: !6516)
!6594 = !DILocation(line: 2612, column: 19, scope: !6516)
!6595 = !DILocation(line: 2612, column: 2, scope: !6516)
!6596 = !DILocation(line: 2612, column: 7, scope: !6516)
!6597 = !DILocation(line: 2612, column: 15, scope: !6516)
!6598 = !DILocation(line: 2613, column: 18, scope: !6516)
!6599 = !DILocation(line: 2613, column: 20, scope: !6516)
!6600 = !DILocation(line: 2613, column: 19, scope: !6516)
!6601 = !DILocation(line: 2613, column: 22, scope: !6516)
!6602 = !DILocation(line: 2613, column: 21, scope: !6516)
!6603 = !DILocation(line: 2613, column: 2, scope: !6516)
!6604 = !DILocation(line: 2613, column: 7, scope: !6516)
!6605 = !DILocation(line: 2613, column: 15, scope: !6516)
!6606 = !DILocation(line: 2614, column: 1, scope: !6516)
!6607 = distinct !DISubprogram(name: "sphclassical_force_cb", scope: !3, file: !3, line: 2841, type: !3160, scopeLine: 2842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!6608 = !DILocalVariable(name: "sphdata_v", arg: 1, scope: !6607, file: !3, line: 2841, type: !229)
!6609 = !DILocation(line: 2841, column: 41, scope: !6607)
!6610 = !DILocalVariable(name: "state", arg: 2, scope: !6607, file: !3, line: 2841, type: !1988)
!6611 = !DILocation(line: 2841, column: 65, scope: !6607)
!6612 = !DILocalVariable(name: "force", arg: 3, scope: !6607, file: !3, line: 2841, type: !1796)
!6613 = !DILocation(line: 2841, column: 79, scope: !6607)
!6614 = !DILocalVariable(name: "UNUSED_impulse", arg: 4, scope: !6607, file: !3, line: 2841, type: !1796)
!6615 = !DILocation(line: 2841, column: 93, scope: !6607)
!6616 = !DILocalVariable(name: "sphdata", scope: !6607, file: !3, line: 2843, type: !3138)
!6617 = !DILocation(line: 2843, column: 11, scope: !6607)
!6618 = !DILocation(line: 2843, column: 32, scope: !6607)
!6619 = !DILocation(line: 2843, column: 21, scope: !6607)
!6620 = !DILocalVariable(name: "psys", scope: !6607, file: !3, line: 2844, type: !6074)
!6621 = !DILocation(line: 2844, column: 19, scope: !6607)
!6622 = !DILocation(line: 2844, column: 26, scope: !6607)
!6623 = !DILocation(line: 2844, column: 35, scope: !6607)
!6624 = !DILocalVariable(name: "pa", scope: !6607, file: !3, line: 2845, type: !2461)
!6625 = !DILocation(line: 2845, column: 16, scope: !6607)
!6626 = !DILocation(line: 2845, column: 21, scope: !6607)
!6627 = !DILocation(line: 2845, column: 30, scope: !6607)
!6628 = !DILocalVariable(name: "fluid", scope: !6607, file: !3, line: 2846, type: !6083)
!6629 = !DILocation(line: 2846, column: 20, scope: !6607)
!6630 = !DILocation(line: 2846, column: 28, scope: !6607)
!6631 = !DILocation(line: 2846, column: 37, scope: !6607)
!6632 = !DILocation(line: 2846, column: 43, scope: !6607)
!6633 = !DILocalVariable(name: "pfr", scope: !6607, file: !3, line: 2847, type: !3164)
!6634 = !DILocation(line: 2847, column: 15, scope: !6607)
!6635 = !DILocalVariable(name: "pfn", scope: !6607, file: !3, line: 2848, type: !6094)
!6636 = !DILocation(line: 2848, column: 15, scope: !6607)
!6637 = !DILocalVariable(name: "gravity", scope: !6607, file: !3, line: 2849, type: !1796)
!6638 = !DILocation(line: 2849, column: 9, scope: !6607)
!6639 = !DILocation(line: 2849, column: 19, scope: !6607)
!6640 = !DILocation(line: 2849, column: 28, scope: !6607)
!6641 = !DILocalVariable(name: "dq", scope: !6607, file: !3, line: 2851, type: !341)
!6642 = !DILocation(line: 2851, column: 8, scope: !6607)
!6643 = !DILocalVariable(name: "u", scope: !6607, file: !3, line: 2851, type: !341)
!6644 = !DILocation(line: 2851, column: 12, scope: !6607)
!6645 = !DILocalVariable(name: "rij", scope: !6607, file: !3, line: 2851, type: !341)
!6646 = !DILocation(line: 2851, column: 15, scope: !6607)
!6647 = !DILocalVariable(name: "dv", scope: !6607, file: !3, line: 2851, type: !563)
!6648 = !DILocation(line: 2851, column: 20, scope: !6607)
!6649 = !DILocalVariable(name: "pressure", scope: !6607, file: !3, line: 2852, type: !341)
!6650 = !DILocation(line: 2852, column: 8, scope: !6607)
!6651 = !DILocalVariable(name: "npressure", scope: !6607, file: !3, line: 2852, type: !341)
!6652 = !DILocation(line: 2852, column: 18, scope: !6607)
!6653 = !DILocalVariable(name: "visc", scope: !6607, file: !3, line: 2854, type: !341)
!6654 = !DILocation(line: 2854, column: 8, scope: !6607)
!6655 = !DILocation(line: 2854, column: 15, scope: !6607)
!6656 = !DILocation(line: 2854, column: 22, scope: !6607)
!6657 = !DILocalVariable(name: "interaction_radius", scope: !6607, file: !3, line: 2856, type: !341)
!6658 = !DILocation(line: 2856, column: 8, scope: !6607)
!6659 = !DILocalVariable(name: "h", scope: !6607, file: !3, line: 2857, type: !341)
!6660 = !DILocation(line: 2857, column: 8, scope: !6607)
!6661 = !DILocalVariable(name: "hinv", scope: !6607, file: !3, line: 2857, type: !341)
!6662 = !DILocation(line: 2857, column: 11, scope: !6607)
!6663 = !DILocalVariable(name: "rest_density", scope: !6607, file: !3, line: 2859, type: !341)
!6664 = !DILocation(line: 2859, column: 8, scope: !6607)
!6665 = !DILocation(line: 2859, column: 23, scope: !6607)
!6666 = !DILocation(line: 2859, column: 30, scope: !6607)
!6667 = !DILocation(line: 2859, column: 46, scope: !6607)
!6668 = !DILocation(line: 2859, column: 53, scope: !6607)
!6669 = !DILocation(line: 2859, column: 58, scope: !6607)
!6670 = !DILocation(line: 2859, column: 43, scope: !6607)
!6671 = !DILocalVariable(name: "stiffness", scope: !6607, file: !3, line: 2862, type: !341)
!6672 = !DILocation(line: 2862, column: 8, scope: !6607)
!6673 = !DILocation(line: 2862, column: 25, scope: !6607)
!6674 = !DILocation(line: 2862, column: 32, scope: !6607)
!6675 = !DILocation(line: 2862, column: 20, scope: !6607)
!6676 = !DILocalVariable(name: "npa", scope: !6607, file: !3, line: 2864, type: !2461)
!6677 = !DILocation(line: 2864, column: 16, scope: !6607)
!6678 = !DILocalVariable(name: "vec", scope: !6607, file: !3, line: 2865, type: !563)
!6679 = !DILocation(line: 2865, column: 8, scope: !6607)
!6680 = !DILocalVariable(name: "co", scope: !6607, file: !3, line: 2866, type: !563)
!6681 = !DILocation(line: 2866, column: 8, scope: !6607)
!6682 = !DILocalVariable(name: "pressureTerm", scope: !6607, file: !3, line: 2867, type: !341)
!6683 = !DILocation(line: 2867, column: 8, scope: !6607)
!6684 = !DILocalVariable(name: "i", scope: !6607, file: !3, line: 2869, type: !260)
!6685 = !DILocation(line: 2869, column: 6, scope: !6607)
!6686 = !DILocalVariable(name: "qfac2", scope: !6607, file: !3, line: 2871, type: !341)
!6687 = !DILocation(line: 2871, column: 8, scope: !6607)
!6688 = !DILocalVariable(name: "rij_h", scope: !6607, file: !3, line: 2872, type: !341)
!6689 = !DILocation(line: 2872, column: 8, scope: !6607)
!6690 = !DILocation(line: 2875, column: 23, scope: !6607)
!6691 = !DILocation(line: 2875, column: 30, scope: !6607)
!6692 = !DILocation(line: 2875, column: 40, scope: !6607)
!6693 = !DILocation(line: 2875, column: 47, scope: !6607)
!6694 = !DILocation(line: 2875, column: 52, scope: !6607)
!6695 = !DILocation(line: 2875, column: 78, scope: !6607)
!6696 = !DILocation(line: 2875, column: 82, scope: !6607)
!6697 = !DILocation(line: 2875, column: 76, scope: !6607)
!6698 = !DILocation(line: 2875, column: 37, scope: !6607)
!6699 = !DILocation(line: 2875, column: 21, scope: !6607)
!6700 = !DILocation(line: 2876, column: 6, scope: !6607)
!6701 = !DILocation(line: 2876, column: 27, scope: !6607)
!6702 = !DILocation(line: 2876, column: 36, scope: !6607)
!6703 = !DILocation(line: 2876, column: 25, scope: !6607)
!6704 = !DILocation(line: 2876, column: 4, scope: !6607)
!6705 = !DILocation(line: 2877, column: 16, scope: !6607)
!6706 = !DILocation(line: 2877, column: 14, scope: !6607)
!6707 = !DILocation(line: 2877, column: 7, scope: !6607)
!6708 = !DILocation(line: 2879, column: 10, scope: !6607)
!6709 = !DILocation(line: 2879, column: 6, scope: !6607)
!6710 = !DILocation(line: 2879, column: 8, scope: !6607)
!6711 = !DILocation(line: 2880, column: 11, scope: !6607)
!6712 = !DILocation(line: 2880, column: 6, scope: !6607)
!6713 = !DILocation(line: 2880, column: 9, scope: !6607)
!6714 = !DILocation(line: 2882, column: 26, scope: !6607)
!6715 = !DILocation(line: 2882, column: 32, scope: !6607)
!6716 = !DILocation(line: 2882, column: 39, scope: !6607)
!6717 = !DILocation(line: 2882, column: 49, scope: !6607)
!6718 = !DILocation(line: 2882, column: 2, scope: !6607)
!6719 = !DILocation(line: 2883, column: 14, scope: !6607)
!6720 = !DILocation(line: 2883, column: 32, scope: !6607)
!6721 = !DILocation(line: 2883, column: 36, scope: !6607)
!6722 = !DILocation(line: 2883, column: 49, scope: !6607)
!6723 = !DILocation(line: 2883, column: 47, scope: !6607)
!6724 = !DILocation(line: 2883, column: 27, scope: !6607)
!6725 = !DILocation(line: 2883, column: 63, scope: !6607)
!6726 = !DILocation(line: 2883, column: 24, scope: !6607)
!6727 = !DILocation(line: 2883, column: 11, scope: !6607)
!6728 = !DILocation(line: 2886, column: 11, scope: !6607)
!6729 = !DILocation(line: 2886, column: 20, scope: !6607)
!6730 = !DILocation(line: 2886, column: 36, scope: !6607)
!6731 = !DILocation(line: 2886, column: 27, scope: !6607)
!6732 = !DILocation(line: 2886, column: 25, scope: !6607)
!6733 = !DILocation(line: 2886, column: 8, scope: !6607)
!6734 = !DILocation(line: 2888, column: 12, scope: !6607)
!6735 = !DILocation(line: 2888, column: 8, scope: !6607)
!6736 = !DILocation(line: 2888, column: 6, scope: !6607)
!6737 = !DILocation(line: 2889, column: 9, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 2889, column: 2)
!6739 = !DILocation(line: 2889, column: 7, scope: !6738)
!6740 = !DILocation(line: 2889, column: 14, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 2889, column: 2)
!6742 = !DILocation(line: 2889, column: 22, scope: !6741)
!6743 = !DILocation(line: 2889, column: 16, scope: !6741)
!6744 = !DILocation(line: 2889, column: 2, scope: !6738)
!6745 = !DILocation(line: 2890, column: 9, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 2889, column: 49)
!6747 = !DILocation(line: 2890, column: 14, scope: !6746)
!6748 = !DILocation(line: 2890, column: 20, scope: !6746)
!6749 = !DILocation(line: 2890, column: 32, scope: !6746)
!6750 = !DILocation(line: 2890, column: 37, scope: !6746)
!6751 = !DILocation(line: 2890, column: 30, scope: !6746)
!6752 = !DILocation(line: 2890, column: 7, scope: !6746)
!6753 = !DILocation(line: 2891, column: 7, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 2891, column: 7)
!6755 = !DILocation(line: 2891, column: 14, scope: !6754)
!6756 = !DILocation(line: 2891, column: 11, scope: !6754)
!6757 = !DILocation(line: 2891, column: 7, scope: !6746)
!6758 = !DILocation(line: 2893, column: 4, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 2891, column: 18)
!6760 = !DILocation(line: 2900, column: 18, scope: !6746)
!6761 = !DILocation(line: 2900, column: 22, scope: !6746)
!6762 = !DILocation(line: 2900, column: 27, scope: !6746)
!6763 = !DILocation(line: 2900, column: 38, scope: !6746)
!6764 = !DILocation(line: 2900, column: 42, scope: !6746)
!6765 = !DILocation(line: 2900, column: 47, scope: !6746)
!6766 = !DILocation(line: 2900, column: 58, scope: !6746)
!6767 = !DILocation(line: 2900, column: 63, scope: !6746)
!6768 = !DILocation(line: 2900, column: 70, scope: !6746)
!6769 = !DILocation(line: 2900, column: 3, scope: !6746)
!6770 = !DILocation(line: 2901, column: 15, scope: !6746)
!6771 = !DILocation(line: 2901, column: 20, scope: !6746)
!6772 = !DILocation(line: 2901, column: 24, scope: !6746)
!6773 = !DILocation(line: 2901, column: 31, scope: !6746)
!6774 = !DILocation(line: 2901, column: 3, scope: !6746)
!6775 = !DILocation(line: 2902, column: 22, scope: !6746)
!6776 = !DILocation(line: 2902, column: 9, scope: !6746)
!6777 = !DILocation(line: 2902, column: 7, scope: !6746)
!6778 = !DILocation(line: 2903, column: 11, scope: !6746)
!6779 = !DILocation(line: 2903, column: 21, scope: !6746)
!6780 = !DILocation(line: 2903, column: 15, scope: !6746)
!6781 = !DILocation(line: 2903, column: 9, scope: !6746)
!6782 = !DILocation(line: 2904, column: 7, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 2904, column: 7)
!6784 = !DILocation(line: 2904, column: 13, scope: !6783)
!6785 = !DILocation(line: 2904, column: 7, scope: !6746)
!6786 = !DILocation(line: 2905, column: 4, scope: !6783)
!6787 = !DILocation(line: 2907, column: 15, scope: !6746)
!6788 = !DILocation(line: 2907, column: 33, scope: !6746)
!6789 = !DILocation(line: 2907, column: 38, scope: !6746)
!6790 = !DILocation(line: 2907, column: 51, scope: !6746)
!6791 = !DILocation(line: 2907, column: 49, scope: !6746)
!6792 = !DILocation(line: 2907, column: 28, scope: !6746)
!6793 = !DILocation(line: 2907, column: 65, scope: !6746)
!6794 = !DILocation(line: 2907, column: 25, scope: !6746)
!6795 = !DILocation(line: 2907, column: 13, scope: !6746)
!6796 = !DILocation(line: 2914, column: 8, scope: !6746)
!6797 = !DILocation(line: 2914, column: 36, scope: !6746)
!6798 = !DILocation(line: 2914, column: 34, scope: !6746)
!6799 = !DILocation(line: 2914, column: 24, scope: !6746)
!6800 = !DILocation(line: 2914, column: 22, scope: !6746)
!6801 = !DILocation(line: 2914, column: 64, scope: !6746)
!6802 = !DILocation(line: 2914, column: 62, scope: !6746)
!6803 = !DILocation(line: 2914, column: 52, scope: !6746)
!6804 = !DILocation(line: 2914, column: 50, scope: !6746)
!6805 = !DILocation(line: 2914, column: 88, scope: !6746)
!6806 = !DILocation(line: 2914, column: 86, scope: !6746)
!6807 = !DILocation(line: 2914, column: 79, scope: !6746)
!6808 = !DILocation(line: 2914, column: 71, scope: !6746)
!6809 = !DILocation(line: 2914, column: 43, scope: !6746)
!6810 = !DILocation(line: 2914, column: 14, scope: !6746)
!6811 = !DILocation(line: 2914, column: 6, scope: !6746)
!6812 = !DILocation(line: 2916, column: 7, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 2916, column: 7)
!6814 = !DILocation(line: 2916, column: 12, scope: !6813)
!6815 = !DILocation(line: 2916, column: 18, scope: !6813)
!6816 = !DILocation(line: 2916, column: 24, scope: !6813)
!6817 = !DILocation(line: 2916, column: 29, scope: !6813)
!6818 = !DILocation(line: 2916, column: 7, scope: !6746)
!6819 = !DILocation(line: 2917, column: 10, scope: !6813)
!6820 = !DILocation(line: 2917, column: 15, scope: !6813)
!6821 = !DILocation(line: 2917, column: 7, scope: !6813)
!6822 = !DILocation(line: 2917, column: 4, scope: !6813)
!6823 = !DILocation(line: 2919, column: 18, scope: !6746)
!6824 = !DILocation(line: 2919, column: 34, scope: !6746)
!6825 = !DILocation(line: 2919, column: 38, scope: !6746)
!6826 = !DILocation(line: 2919, column: 29, scope: !6746)
!6827 = !DILocation(line: 2919, column: 27, scope: !6746)
!6828 = !DILocation(line: 2919, column: 52, scope: !6746)
!6829 = !DILocation(line: 2919, column: 69, scope: !6746)
!6830 = !DILocation(line: 2919, column: 74, scope: !6746)
!6831 = !DILocation(line: 2919, column: 64, scope: !6746)
!6832 = !DILocation(line: 2919, column: 62, scope: !6746)
!6833 = !DILocation(line: 2919, column: 50, scope: !6746)
!6834 = !DILocation(line: 2919, column: 16, scope: !6746)
!6835 = !DILocation(line: 2923, column: 16, scope: !6746)
!6836 = !DILocation(line: 2923, column: 23, scope: !6746)
!6837 = !DILocation(line: 2923, column: 28, scope: !6746)
!6838 = !DILocation(line: 2923, column: 43, scope: !6746)
!6839 = !DILocation(line: 2923, column: 41, scope: !6746)
!6840 = !DILocation(line: 2923, column: 3, scope: !6746)
!6841 = !DILocation(line: 2926, column: 7, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 2926, column: 7)
!6843 = !DILocation(line: 2926, column: 12, scope: !6842)
!6844 = !DILocation(line: 2926, column: 7, scope: !6746)
!6845 = !DILocation(line: 2927, column: 16, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 2926, column: 20)
!6847 = !DILocation(line: 2927, column: 20, scope: !6846)
!6848 = !DILocation(line: 2927, column: 25, scope: !6846)
!6849 = !DILocation(line: 2927, column: 36, scope: !6846)
!6850 = !DILocation(line: 2927, column: 41, scope: !6846)
!6851 = !DILocation(line: 2927, column: 45, scope: !6846)
!6852 = !DILocation(line: 2927, column: 56, scope: !6846)
!6853 = !DILocation(line: 2927, column: 4, scope: !6846)
!6854 = !DILocation(line: 2928, column: 17, scope: !6846)
!6855 = !DILocation(line: 2928, column: 22, scope: !6846)
!6856 = !DILocation(line: 2928, column: 8, scope: !6846)
!6857 = !DILocation(line: 2928, column: 6, scope: !6846)
!6858 = !DILocation(line: 2930, column: 10, scope: !6846)
!6859 = !DILocation(line: 2930, column: 9, scope: !6846)
!6860 = !DILocation(line: 2930, column: 15, scope: !6846)
!6861 = !DILocation(line: 2930, column: 13, scope: !6846)
!6862 = !DILocation(line: 2930, column: 22, scope: !6846)
!6863 = !DILocation(line: 2930, column: 20, scope: !6846)
!6864 = !DILocation(line: 2930, column: 37, scope: !6846)
!6865 = !DILocation(line: 2930, column: 42, scope: !6846)
!6866 = !DILocation(line: 2930, column: 35, scope: !6846)
!6867 = !DILocation(line: 2930, column: 62, scope: !6846)
!6868 = !DILocation(line: 2930, column: 66, scope: !6846)
!6869 = !DILocation(line: 2930, column: 60, scope: !6846)
!6870 = !DILocation(line: 2930, column: 53, scope: !6846)
!6871 = !DILocation(line: 2930, column: 27, scope: !6846)
!6872 = !DILocation(line: 2930, column: 6, scope: !6846)
!6873 = !DILocation(line: 2931, column: 17, scope: !6846)
!6874 = !DILocation(line: 2931, column: 24, scope: !6846)
!6875 = !DILocation(line: 2931, column: 29, scope: !6846)
!6876 = !DILocation(line: 2931, column: 4, scope: !6846)
!6877 = !DILocation(line: 2932, column: 3, scope: !6846)
!6878 = !DILocation(line: 2933, column: 2, scope: !6746)
!6879 = !DILocation(line: 2889, column: 38, scope: !6741)
!6880 = !DILocation(line: 2889, column: 45, scope: !6741)
!6881 = !DILocation(line: 2889, column: 2, scope: !6741)
!6882 = distinct !{!6882, !6744, !6883}
!6883 = !DILocation(line: 2933, column: 2, scope: !6738)
!6884 = !DILocation(line: 2936, column: 6, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 2936, column: 6)
!6886 = !DILocation(line: 2936, column: 13, scope: !6885)
!6887 = !DILocation(line: 2936, column: 22, scope: !6885)
!6888 = !DILocation(line: 2936, column: 28, scope: !6885)
!6889 = !DILocation(line: 2936, column: 31, scope: !6885)
!6890 = !DILocation(line: 2936, column: 6, scope: !6607)
!6891 = !DILocation(line: 2937, column: 16, scope: !6885)
!6892 = !DILocation(line: 2937, column: 23, scope: !6885)
!6893 = !DILocation(line: 2937, column: 32, scope: !6885)
!6894 = !DILocation(line: 2937, column: 39, scope: !6885)
!6895 = !DILocation(line: 2937, column: 51, scope: !6885)
!6896 = !DILocation(line: 2937, column: 55, scope: !6885)
!6897 = !DILocation(line: 2937, column: 68, scope: !6885)
!6898 = !DILocation(line: 2937, column: 66, scope: !6885)
!6899 = !DILocation(line: 2937, column: 48, scope: !6885)
!6900 = !DILocation(line: 2937, column: 3, scope: !6885)
!6901 = !DILocation(line: 2939, column: 6, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 2939, column: 6)
!6903 = !DILocation(line: 2939, column: 15, scope: !6902)
!6904 = !DILocation(line: 2939, column: 20, scope: !6902)
!6905 = !DILocation(line: 2939, column: 25, scope: !6902)
!6906 = !DILocation(line: 2939, column: 28, scope: !6902)
!6907 = !DILocation(line: 2939, column: 37, scope: !6902)
!6908 = !DILocation(line: 2939, column: 43, scope: !6902)
!6909 = !DILocation(line: 2939, column: 53, scope: !6902)
!6910 = !DILocation(line: 2939, column: 6, scope: !6607)
!6911 = !DILocation(line: 2940, column: 24, scope: !6902)
!6912 = !DILocation(line: 2940, column: 3, scope: !6902)
!6913 = !DILocation(line: 2941, column: 2, scope: !6607)
!6914 = !DILocation(line: 2941, column: 11, scope: !6607)
!6915 = !DILocation(line: 2941, column: 15, scope: !6607)
!6916 = !DILocation(line: 2942, column: 1, scope: !6607)
!6917 = distinct !DISubprogram(name: "sphclassical_density_accum_cb", scope: !3, file: !3, line: 2787, type: !2937, scopeLine: 2788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!6918 = !DILocalVariable(name: "userdata", arg: 1, scope: !6917, file: !3, line: 2787, type: !229)
!6919 = !DILocation(line: 2787, column: 49, scope: !6917)
!6920 = !DILocalVariable(name: "index", arg: 2, scope: !6917, file: !3, line: 2787, type: !260)
!6921 = !DILocation(line: 2787, column: 63, scope: !6917)
!6922 = !DILocalVariable(name: "UNUSED_squared_dist", arg: 3, scope: !6917, file: !3, line: 2787, type: !341)
!6923 = !DILocation(line: 2787, column: 76, scope: !6917)
!6924 = !DILocalVariable(name: "pfr", scope: !6917, file: !3, line: 2789, type: !3163)
!6925 = !DILocation(line: 2789, column: 16, scope: !6917)
!6926 = !DILocation(line: 2789, column: 38, scope: !6917)
!6927 = !DILocation(line: 2789, column: 22, scope: !6917)
!6928 = !DILocalVariable(name: "npa", scope: !6917, file: !3, line: 2790, type: !2461)
!6929 = !DILocation(line: 2790, column: 16, scope: !6917)
!6930 = !DILocation(line: 2790, column: 22, scope: !6917)
!6931 = !DILocation(line: 2790, column: 27, scope: !6917)
!6932 = !DILocation(line: 2790, column: 34, scope: !6917)
!6933 = !DILocation(line: 2790, column: 46, scope: !6917)
!6934 = !DILocation(line: 2790, column: 44, scope: !6917)
!6935 = !DILocalVariable(name: "q", scope: !6917, file: !3, line: 2791, type: !341)
!6936 = !DILocation(line: 2791, column: 8, scope: !6917)
!6937 = !DILocalVariable(name: "qfac", scope: !6917, file: !3, line: 2792, type: !341)
!6938 = !DILocation(line: 2792, column: 8, scope: !6917)
!6939 = !DILocalVariable(name: "rij", scope: !6917, file: !3, line: 2793, type: !341)
!6940 = !DILocation(line: 2793, column: 8, scope: !6917)
!6941 = !DILocalVariable(name: "rij_h", scope: !6917, file: !3, line: 2793, type: !341)
!6942 = !DILocation(line: 2793, column: 13, scope: !6917)
!6943 = !DILocalVariable(name: "vec", scope: !6917, file: !3, line: 2794, type: !563)
!6944 = !DILocation(line: 2794, column: 8, scope: !6917)
!6945 = !DILocation(line: 2799, column: 14, scope: !6917)
!6946 = !DILocation(line: 2799, column: 19, scope: !6917)
!6947 = !DILocation(line: 2799, column: 24, scope: !6917)
!6948 = !DILocation(line: 2799, column: 30, scope: !6917)
!6949 = !DILocation(line: 2799, column: 34, scope: !6917)
!6950 = !DILocation(line: 2799, column: 39, scope: !6917)
!6951 = !DILocation(line: 2799, column: 43, scope: !6917)
!6952 = !DILocation(line: 2799, column: 49, scope: !6917)
!6953 = !DILocation(line: 2799, column: 2, scope: !6917)
!6954 = !DILocation(line: 2800, column: 15, scope: !6917)
!6955 = !DILocation(line: 2800, column: 8, scope: !6917)
!6956 = !DILocation(line: 2800, column: 6, scope: !6917)
!6957 = !DILocation(line: 2801, column: 10, scope: !6917)
!6958 = !DILocation(line: 2801, column: 16, scope: !6917)
!6959 = !DILocation(line: 2801, column: 21, scope: !6917)
!6960 = !DILocation(line: 2801, column: 14, scope: !6917)
!6961 = !DILocation(line: 2801, column: 8, scope: !6917)
!6962 = !DILocation(line: 2802, column: 6, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6917, file: !3, line: 2802, column: 6)
!6964 = !DILocation(line: 2802, column: 12, scope: !6963)
!6965 = !DILocation(line: 2802, column: 6, scope: !6917)
!6966 = !DILocation(line: 2803, column: 3, scope: !6963)
!6967 = !DILocation(line: 2808, column: 7, scope: !6917)
!6968 = !DILocation(line: 2808, column: 19, scope: !6917)
!6969 = !DILocation(line: 2808, column: 24, scope: !6917)
!6970 = !DILocation(line: 2808, column: 14, scope: !6917)
!6971 = !DILocation(line: 2808, column: 12, scope: !6917)
!6972 = !DILocation(line: 2808, column: 41, scope: !6917)
!6973 = !DILocation(line: 2808, column: 39, scope: !6917)
!6974 = !DILocation(line: 2808, column: 29, scope: !6917)
!6975 = !DILocation(line: 2808, column: 27, scope: !6917)
!6976 = !DILocation(line: 2808, column: 66, scope: !6917)
!6977 = !DILocation(line: 2808, column: 64, scope: !6917)
!6978 = !DILocation(line: 2808, column: 57, scope: !6917)
!6979 = !DILocation(line: 2808, column: 48, scope: !6917)
!6980 = !DILocation(line: 2808, column: 5, scope: !6917)
!6981 = !DILocation(line: 2809, column: 7, scope: !6917)
!6982 = !DILocation(line: 2809, column: 12, scope: !6917)
!6983 = !DILocation(line: 2809, column: 19, scope: !6917)
!6984 = !DILocation(line: 2809, column: 25, scope: !6917)
!6985 = !DILocation(line: 2809, column: 4, scope: !6917)
!6986 = !DILocation(line: 2811, column: 6, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6917, file: !3, line: 2811, column: 6)
!6988 = !DILocation(line: 2811, column: 11, scope: !6987)
!6989 = !DILocation(line: 2811, column: 6, scope: !6917)
!6990 = !DILocation(line: 2812, column: 8, scope: !6987)
!6991 = !DILocation(line: 2812, column: 13, scope: !6987)
!6992 = !DILocation(line: 2812, column: 17, scope: !6987)
!6993 = !DILocation(line: 2812, column: 5, scope: !6987)
!6994 = !DILocation(line: 2812, column: 3, scope: !6987)
!6995 = !DILocation(line: 2814, column: 18, scope: !6917)
!6996 = !DILocation(line: 2814, column: 2, scope: !6917)
!6997 = !DILocation(line: 2814, column: 7, scope: !6917)
!6998 = !DILocation(line: 2814, column: 15, scope: !6917)
!6999 = !DILocation(line: 2815, column: 18, scope: !6917)
!7000 = !DILocation(line: 2815, column: 22, scope: !6917)
!7001 = !DILocation(line: 2815, column: 27, scope: !6917)
!7002 = !DILocation(line: 2815, column: 20, scope: !6917)
!7003 = !DILocation(line: 2815, column: 2, scope: !6917)
!7004 = !DILocation(line: 2815, column: 7, scope: !6917)
!7005 = !DILocation(line: 2815, column: 15, scope: !6917)
!7006 = !DILocation(line: 2816, column: 1, scope: !6917)
!7007 = distinct !DISubprogram(name: "psys_sph_finalise", scope: !3, file: !3, line: 2999, type: !7008, scopeLine: 3000, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!7008 = !DISubroutineType(types: !7009)
!7009 = !{null, !3138}
!7010 = !DILocalVariable(name: "sphdata", arg: 1, scope: !7007, file: !3, line: 2999, type: !3138)
!7011 = !DILocation(line: 2999, column: 33, scope: !7007)
!7012 = !DILocation(line: 3001, column: 6, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 3001, column: 6)
!7014 = !DILocation(line: 3001, column: 15, scope: !7013)
!7015 = !DILocation(line: 3001, column: 6, scope: !7007)
!7016 = !DILocation(line: 3002, column: 21, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 3001, column: 19)
!7018 = !DILocation(line: 3002, column: 30, scope: !7017)
!7019 = !DILocation(line: 3002, column: 3, scope: !7017)
!7020 = !DILocation(line: 3003, column: 3, scope: !7017)
!7021 = !DILocation(line: 3003, column: 12, scope: !7017)
!7022 = !DILocation(line: 3003, column: 15, scope: !7017)
!7023 = !DILocation(line: 3004, column: 2, scope: !7017)
!7024 = !DILocation(line: 3005, column: 1, scope: !7007)
!7025 = distinct !DISubprogram(name: "psys_sph_density", scope: !3, file: !3, line: 3007, type: !7026, scopeLine: 3008, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!7026 = !DISubroutineType(types: !7027)
!7027 = !{null, !7028, !3138, !1796, !1796}
!7028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7029, size: 64)
!7029 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTree", file: !7030, line: 43, baseType: !2556)
!7030 = !DIFile(filename: "blender/source/blender/blenlib/BLI_kdopbvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7031 = !DILocalVariable(name: "tree", arg: 1, scope: !7025, file: !3, line: 3007, type: !7028)
!7032 = !DILocation(line: 3007, column: 32, scope: !7025)
!7033 = !DILocalVariable(name: "sphdata", arg: 2, scope: !7025, file: !3, line: 3007, type: !3138)
!7034 = !DILocation(line: 3007, column: 47, scope: !7025)
!7035 = !DILocalVariable(name: "co", arg: 3, scope: !7025, file: !3, line: 3007, type: !1796)
!7036 = !DILocation(line: 3007, column: 62, scope: !7025)
!7037 = !DILocalVariable(name: "vars", arg: 4, scope: !7025, file: !3, line: 3007, type: !1796)
!7038 = !DILocation(line: 3007, column: 75, scope: !7025)
!7039 = !DILocalVariable(name: "psys", scope: !7025, file: !3, line: 3009, type: !6074)
!7040 = !DILocation(line: 3009, column: 19, scope: !7025)
!7041 = !DILocation(line: 3009, column: 26, scope: !7025)
!7042 = !DILocation(line: 3009, column: 35, scope: !7025)
!7043 = !DILocalVariable(name: "fluid", scope: !7025, file: !3, line: 3010, type: !6083)
!7044 = !DILocation(line: 3010, column: 20, scope: !7025)
!7045 = !DILocation(line: 3010, column: 28, scope: !7025)
!7046 = !DILocation(line: 3010, column: 37, scope: !7025)
!7047 = !DILocation(line: 3010, column: 43, scope: !7025)
!7048 = !DILocalVariable(name: "interaction_radius", scope: !7025, file: !3, line: 3012, type: !341)
!7049 = !DILocation(line: 3012, column: 8, scope: !7025)
!7050 = !DILocation(line: 3012, column: 30, scope: !7025)
!7051 = !DILocation(line: 3012, column: 37, scope: !7025)
!7052 = !DILocation(line: 3012, column: 47, scope: !7025)
!7053 = !DILocation(line: 3012, column: 54, scope: !7025)
!7054 = !DILocation(line: 3012, column: 59, scope: !7025)
!7055 = !DILocation(line: 3012, column: 85, scope: !7025)
!7056 = !DILocation(line: 3012, column: 94, scope: !7025)
!7057 = !DILocation(line: 3012, column: 100, scope: !7025)
!7058 = !DILocation(line: 3012, column: 83, scope: !7025)
!7059 = !DILocation(line: 3012, column: 44, scope: !7025)
!7060 = !DILocalVariable(name: "pfr", scope: !7025, file: !3, line: 3013, type: !3164)
!7061 = !DILocation(line: 3013, column: 15, scope: !7025)
!7062 = !DILocalVariable(name: "density", scope: !7025, file: !3, line: 3014, type: !511)
!7063 = !DILocation(line: 3014, column: 8, scope: !7025)
!7064 = !DILocation(line: 3016, column: 15, scope: !7025)
!7065 = !DILocation(line: 3016, column: 26, scope: !7025)
!7066 = !DILocation(line: 3016, column: 2, scope: !7025)
!7067 = !DILocation(line: 3016, column: 13, scope: !7025)
!7068 = !DILocation(line: 3017, column: 13, scope: !7025)
!7069 = !DILocation(line: 3017, column: 6, scope: !7025)
!7070 = !DILocation(line: 3017, column: 11, scope: !7025)
!7071 = !DILocation(line: 3018, column: 10, scope: !7025)
!7072 = !DILocation(line: 3018, column: 31, scope: !7025)
!7073 = !DILocation(line: 3018, column: 40, scope: !7025)
!7074 = !DILocation(line: 3018, column: 29, scope: !7025)
!7075 = !DILocation(line: 3018, column: 6, scope: !7025)
!7076 = !DILocation(line: 3018, column: 8, scope: !7025)
!7077 = !DILocation(line: 3019, column: 13, scope: !7025)
!7078 = !DILocation(line: 3019, column: 22, scope: !7025)
!7079 = !DILocation(line: 3019, column: 6, scope: !7025)
!7080 = !DILocation(line: 3019, column: 11, scope: !7025)
!7081 = !DILocation(line: 3021, column: 20, scope: !7025)
!7082 = !DILocation(line: 3021, column: 26, scope: !7025)
!7083 = !DILocation(line: 3021, column: 32, scope: !7025)
!7084 = !DILocation(line: 3021, column: 42, scope: !7025)
!7085 = !DILocation(line: 3021, column: 62, scope: !7025)
!7086 = !DILocation(line: 3021, column: 71, scope: !7025)
!7087 = !DILocation(line: 3021, column: 2, scope: !7025)
!7088 = !DILocation(line: 3023, column: 16, scope: !7025)
!7089 = !DILocation(line: 3023, column: 12, scope: !7025)
!7090 = !DILocation(line: 3023, column: 2, scope: !7025)
!7091 = !DILocation(line: 3023, column: 10, scope: !7025)
!7092 = !DILocation(line: 3024, column: 16, scope: !7025)
!7093 = !DILocation(line: 3024, column: 12, scope: !7025)
!7094 = !DILocation(line: 3024, column: 2, scope: !7025)
!7095 = !DILocation(line: 3024, column: 10, scope: !7025)
!7096 = !DILocation(line: 3025, column: 1, scope: !7025)
!7097 = distinct !DISubprogram(name: "sph_evaluate_func", scope: !3, file: !3, line: 2559, type: !7098, scopeLine: 2560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!7098 = !DISubroutineType(types: !7099)
!7099 = !{null, !7028, !6074, !1796, !3163, !341, !7100}
!7100 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTree_RangeQuery", file: !7030, line: 82, baseType: !2936)
!7101 = !DILocalVariable(name: "tree", arg: 1, scope: !7097, file: !3, line: 2559, type: !7028)
!7102 = !DILocation(line: 2559, column: 40, scope: !7097)
!7103 = !DILocalVariable(name: "psys", arg: 2, scope: !7097, file: !3, line: 2559, type: !6074)
!7104 = !DILocation(line: 2559, column: 63, scope: !7097)
!7105 = !DILocalVariable(name: "co", arg: 3, scope: !7097, file: !3, line: 2559, type: !1796)
!7106 = !DILocation(line: 2559, column: 75, scope: !7097)
!7107 = !DILocalVariable(name: "pfr", arg: 4, scope: !7097, file: !3, line: 2559, type: !3163)
!7108 = !DILocation(line: 2559, column: 96, scope: !7097)
!7109 = !DILocalVariable(name: "interaction_radius", arg: 5, scope: !7097, file: !3, line: 2559, type: !341)
!7110 = !DILocation(line: 2559, column: 107, scope: !7097)
!7111 = !DILocalVariable(name: "callback", arg: 6, scope: !7097, file: !3, line: 2559, type: !7100)
!7112 = !DILocation(line: 2559, column: 146, scope: !7097)
!7113 = !DILocalVariable(name: "i", scope: !7097, file: !3, line: 2561, type: !260)
!7114 = !DILocation(line: 2561, column: 6, scope: !7097)
!7115 = !DILocation(line: 2563, column: 2, scope: !7097)
!7116 = !DILocation(line: 2563, column: 7, scope: !7097)
!7117 = !DILocation(line: 2563, column: 21, scope: !7097)
!7118 = !DILocation(line: 2565, column: 8, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 2565, column: 2)
!7120 = !DILocation(line: 2565, column: 7, scope: !7119)
!7121 = !DILocation(line: 2565, column: 12, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 2565, column: 2)
!7123 = !DILocation(line: 2565, column: 14, scope: !7122)
!7124 = !DILocation(line: 2565, column: 19, scope: !7122)
!7125 = !DILocation(line: 2565, column: 22, scope: !7122)
!7126 = !DILocation(line: 2565, column: 27, scope: !7122)
!7127 = !DILocation(line: 0, scope: !7122)
!7128 = !DILocation(line: 2565, column: 2, scope: !7119)
!7129 = !DILocation(line: 2566, column: 19, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 2565, column: 36)
!7131 = !DILocation(line: 2566, column: 24, scope: !7130)
!7132 = !DILocation(line: 2566, column: 3, scope: !7130)
!7133 = !DILocation(line: 2566, column: 8, scope: !7130)
!7134 = !DILocation(line: 2566, column: 17, scope: !7130)
!7135 = !DILocation(line: 2567, column: 19, scope: !7130)
!7136 = !DILocation(line: 2567, column: 24, scope: !7130)
!7137 = !DILocation(line: 2567, column: 28, scope: !7130)
!7138 = !DILocation(line: 2567, column: 34, scope: !7130)
!7139 = !DILocation(line: 2567, column: 41, scope: !7130)
!7140 = !DILocation(line: 2567, column: 46, scope: !7130)
!7141 = !DILocation(line: 2567, column: 39, scope: !7130)
!7142 = !DILocation(line: 2567, column: 3, scope: !7130)
!7143 = !DILocation(line: 2567, column: 8, scope: !7130)
!7144 = !DILocation(line: 2567, column: 17, scope: !7130)
!7145 = !DILocation(line: 2568, column: 19, scope: !7130)
!7146 = !DILocation(line: 2568, column: 24, scope: !7130)
!7147 = !DILocation(line: 2568, column: 28, scope: !7130)
!7148 = !DILocation(line: 2568, column: 34, scope: !7130)
!7149 = !DILocation(line: 2568, column: 39, scope: !7130)
!7150 = !DILocation(line: 2568, column: 3, scope: !7130)
!7151 = !DILocation(line: 2568, column: 8, scope: !7130)
!7152 = !DILocation(line: 2568, column: 17, scope: !7130)
!7153 = !DILocation(line: 2570, column: 7, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 2570, column: 7)
!7155 = !DILocation(line: 2570, column: 7, scope: !7130)
!7156 = !DILocation(line: 2571, column: 28, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 2570, column: 13)
!7158 = !DILocation(line: 2571, column: 34, scope: !7157)
!7159 = !DILocation(line: 2571, column: 38, scope: !7157)
!7160 = !DILocation(line: 2571, column: 58, scope: !7157)
!7161 = !DILocation(line: 2571, column: 68, scope: !7157)
!7162 = !DILocation(line: 2571, column: 4, scope: !7157)
!7163 = !DILocation(line: 2572, column: 4, scope: !7157)
!7164 = !DILocation(line: 2575, column: 4, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 2574, column: 8)
!7166 = !DILocation(line: 2577, column: 28, scope: !7165)
!7167 = !DILocation(line: 2577, column: 33, scope: !7165)
!7168 = !DILocation(line: 2577, column: 37, scope: !7165)
!7169 = !DILocation(line: 2577, column: 46, scope: !7165)
!7170 = !DILocation(line: 2577, column: 50, scope: !7165)
!7171 = !DILocation(line: 2577, column: 70, scope: !7165)
!7172 = !DILocation(line: 2577, column: 80, scope: !7165)
!7173 = !DILocation(line: 2577, column: 4, scope: !7165)
!7174 = !DILocation(line: 2579, column: 4, scope: !7165)
!7175 = !DILocation(line: 2581, column: 2, scope: !7130)
!7176 = !DILocation(line: 2565, column: 32, scope: !7122)
!7177 = !DILocation(line: 2565, column: 2, scope: !7122)
!7178 = distinct !{!7178, !7128, !7179}
!7179 = !DILocation(line: 2581, column: 2, scope: !7119)
!7180 = !DILocation(line: 2582, column: 1, scope: !7097)
!7181 = distinct !DISubprogram(name: "BKE_psys_collision_neartest_cb", scope: !3, file: !3, line: 3574, type: !7182, scopeLine: 3575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!7182 = !DISubroutineType(types: !7183)
!7183 = !{null, !229, !260, !7184, !7192}
!7184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7185, size: 64)
!7185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7186)
!7186 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeRay", file: !7030, line: 65, baseType: !7187)
!7187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeRay", file: !7030, line: 61, size: 224, elements: !7188)
!7188 = !{!7189, !7190, !7191}
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !7187, file: !7030, line: 62, baseType: !563, size: 96)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !7187, file: !7030, line: 63, baseType: !563, size: 96, offset: 96)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !7187, file: !7030, line: 64, baseType: !341, size: 32, offset: 192)
!7192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7193, size: 64)
!7193 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeRayHit", file: !7030, line: 73, baseType: !7194)
!7194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeRayHit", file: !7030, line: 67, size: 288, elements: !7195)
!7195 = !{!7196, !7197, !7198, !7199, !7200}
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !7194, file: !7030, line: 68, baseType: !260, size: 32)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !7194, file: !7030, line: 69, baseType: !563, size: 96, offset: 32)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !7194, file: !7030, line: 70, baseType: !563, size: 96, offset: 128)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !7194, file: !7030, line: 71, baseType: !341, size: 32, offset: 224)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7194, file: !7030, line: 72, baseType: !260, size: 32, offset: 256)
!7201 = !DILocalVariable(name: "userdata", arg: 1, scope: !7181, file: !3, line: 3574, type: !229)
!7202 = !DILocation(line: 3574, column: 43, scope: !7181)
!7203 = !DILocalVariable(name: "index", arg: 2, scope: !7181, file: !3, line: 3574, type: !260)
!7204 = !DILocation(line: 3574, column: 57, scope: !7181)
!7205 = !DILocalVariable(name: "ray", arg: 3, scope: !7181, file: !3, line: 3574, type: !7184)
!7206 = !DILocation(line: 3574, column: 82, scope: !7181)
!7207 = !DILocalVariable(name: "hit", arg: 4, scope: !7181, file: !3, line: 3574, type: !7192)
!7208 = !DILocation(line: 3574, column: 102, scope: !7181)
!7209 = !DILocalVariable(name: "col", scope: !7181, file: !3, line: 3576, type: !712)
!7210 = !DILocation(line: 3576, column: 21, scope: !7181)
!7211 = !DILocation(line: 3576, column: 49, scope: !7181)
!7212 = !DILocation(line: 3576, column: 27, scope: !7181)
!7213 = !DILocalVariable(name: "pce", scope: !7181, file: !3, line: 3577, type: !3110)
!7214 = !DILocation(line: 3577, column: 27, scope: !7181)
!7215 = !DILocalVariable(name: "face", scope: !7181, file: !3, line: 3578, type: !7216)
!7216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7217, size: 64)
!7217 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !391, line: 46, baseType: !523)
!7218 = !DILocation(line: 3578, column: 9, scope: !7181)
!7219 = !DILocation(line: 3578, column: 16, scope: !7181)
!7220 = !DILocation(line: 3578, column: 21, scope: !7181)
!7221 = !DILocation(line: 3578, column: 25, scope: !7181)
!7222 = !DILocation(line: 3578, column: 34, scope: !7181)
!7223 = !DILocation(line: 3578, column: 32, scope: !7181)
!7224 = !DILocalVariable(name: "x", scope: !7181, file: !3, line: 3579, type: !669)
!7225 = !DILocation(line: 3579, column: 9, scope: !7181)
!7226 = !DILocation(line: 3579, column: 13, scope: !7181)
!7227 = !DILocation(line: 3579, column: 18, scope: !7181)
!7228 = !DILocation(line: 3579, column: 22, scope: !7181)
!7229 = !DILocalVariable(name: "v", scope: !7181, file: !3, line: 3580, type: !669)
!7230 = !DILocation(line: 3580, column: 9, scope: !7181)
!7231 = !DILocation(line: 3580, column: 13, scope: !7181)
!7232 = !DILocation(line: 3580, column: 18, scope: !7181)
!7233 = !DILocation(line: 3580, column: 22, scope: !7181)
!7234 = !DILocalVariable(name: "t", scope: !7181, file: !3, line: 3581, type: !341)
!7235 = !DILocation(line: 3581, column: 8, scope: !7181)
!7236 = !DILocation(line: 3581, column: 12, scope: !7181)
!7237 = !DILocation(line: 3581, column: 17, scope: !7181)
!7238 = !DILocation(line: 3581, column: 22, scope: !7181)
!7239 = !DILocation(line: 3581, column: 27, scope: !7181)
!7240 = !DILocation(line: 3581, column: 21, scope: !7181)
!7241 = !DILocalVariable(name: "collision", scope: !7181, file: !3, line: 3582, type: !260)
!7242 = !DILocation(line: 3582, column: 6, scope: !7181)
!7243 = !DILocation(line: 3584, column: 13, scope: !7181)
!7244 = !DILocation(line: 3584, column: 15, scope: !7181)
!7245 = !DILocation(line: 3584, column: 21, scope: !7181)
!7246 = !DILocation(line: 3584, column: 25, scope: !7181)
!7247 = !DILocation(line: 3584, column: 6, scope: !7181)
!7248 = !DILocation(line: 3584, column: 2, scope: !7181)
!7249 = !DILocation(line: 3584, column: 11, scope: !7181)
!7250 = !DILocation(line: 3585, column: 13, scope: !7181)
!7251 = !DILocation(line: 3585, column: 15, scope: !7181)
!7252 = !DILocation(line: 3585, column: 21, scope: !7181)
!7253 = !DILocation(line: 3585, column: 25, scope: !7181)
!7254 = !DILocation(line: 3585, column: 6, scope: !7181)
!7255 = !DILocation(line: 3585, column: 2, scope: !7181)
!7256 = !DILocation(line: 3585, column: 11, scope: !7181)
!7257 = !DILocation(line: 3586, column: 13, scope: !7181)
!7258 = !DILocation(line: 3586, column: 15, scope: !7181)
!7259 = !DILocation(line: 3586, column: 21, scope: !7181)
!7260 = !DILocation(line: 3586, column: 25, scope: !7181)
!7261 = !DILocation(line: 3586, column: 6, scope: !7181)
!7262 = !DILocation(line: 3586, column: 2, scope: !7181)
!7263 = !DILocation(line: 3586, column: 11, scope: !7181)
!7264 = !DILocation(line: 3587, column: 13, scope: !7181)
!7265 = !DILocation(line: 3587, column: 19, scope: !7181)
!7266 = !DILocation(line: 3587, column: 24, scope: !7181)
!7267 = !DILocation(line: 3587, column: 26, scope: !7181)
!7268 = !DILocation(line: 3587, column: 32, scope: !7181)
!7269 = !DILocation(line: 3587, column: 36, scope: !7181)
!7270 = !DILocation(line: 3587, column: 6, scope: !7181)
!7271 = !DILocation(line: 3587, column: 2, scope: !7181)
!7272 = !DILocation(line: 3587, column: 11, scope: !7181)
!7273 = !DILocation(line: 3589, column: 13, scope: !7181)
!7274 = !DILocation(line: 3589, column: 15, scope: !7181)
!7275 = !DILocation(line: 3589, column: 21, scope: !7181)
!7276 = !DILocation(line: 3589, column: 25, scope: !7181)
!7277 = !DILocation(line: 3589, column: 6, scope: !7181)
!7278 = !DILocation(line: 3589, column: 2, scope: !7181)
!7279 = !DILocation(line: 3589, column: 11, scope: !7181)
!7280 = !DILocation(line: 3590, column: 13, scope: !7181)
!7281 = !DILocation(line: 3590, column: 15, scope: !7181)
!7282 = !DILocation(line: 3590, column: 21, scope: !7181)
!7283 = !DILocation(line: 3590, column: 25, scope: !7181)
!7284 = !DILocation(line: 3590, column: 6, scope: !7181)
!7285 = !DILocation(line: 3590, column: 2, scope: !7181)
!7286 = !DILocation(line: 3590, column: 11, scope: !7181)
!7287 = !DILocation(line: 3591, column: 13, scope: !7181)
!7288 = !DILocation(line: 3591, column: 15, scope: !7181)
!7289 = !DILocation(line: 3591, column: 21, scope: !7181)
!7290 = !DILocation(line: 3591, column: 25, scope: !7181)
!7291 = !DILocation(line: 3591, column: 6, scope: !7181)
!7292 = !DILocation(line: 3591, column: 2, scope: !7181)
!7293 = !DILocation(line: 3591, column: 11, scope: !7181)
!7294 = !DILocation(line: 3592, column: 13, scope: !7181)
!7295 = !DILocation(line: 3592, column: 19, scope: !7181)
!7296 = !DILocation(line: 3592, column: 24, scope: !7181)
!7297 = !DILocation(line: 3592, column: 26, scope: !7181)
!7298 = !DILocation(line: 3592, column: 32, scope: !7181)
!7299 = !DILocation(line: 3592, column: 36, scope: !7181)
!7300 = !DILocation(line: 3592, column: 6, scope: !7181)
!7301 = !DILocation(line: 3592, column: 2, scope: !7181)
!7302 = !DILocation(line: 3592, column: 11, scope: !7181)
!7303 = !DILocation(line: 3594, column: 6, scope: !7181)
!7304 = !DILocation(line: 3594, column: 10, scope: !7181)
!7305 = !DILocation(line: 3595, column: 6, scope: !7181)
!7306 = !DILocation(line: 3595, column: 13, scope: !7181)
!7307 = !DILocation(line: 3596, column: 14, scope: !7181)
!7308 = !DILocation(line: 3596, column: 6, scope: !7181)
!7309 = !DILocation(line: 3596, column: 12, scope: !7181)
!7310 = !DILocation(line: 3599, column: 6, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 3599, column: 6)
!7312 = !DILocation(line: 3599, column: 11, scope: !7311)
!7313 = !DILocation(line: 3599, column: 18, scope: !7311)
!7314 = !DILocation(line: 3599, column: 23, scope: !7311)
!7315 = !DILocation(line: 3599, column: 15, scope: !7311)
!7316 = !DILocation(line: 3599, column: 31, scope: !7311)
!7317 = !DILocation(line: 3599, column: 34, scope: !7311)
!7318 = !DILocation(line: 3599, column: 39, scope: !7311)
!7319 = !DILocation(line: 3599, column: 43, scope: !7311)
!7320 = !DILocation(line: 3599, column: 52, scope: !7311)
!7321 = !DILocation(line: 3599, column: 49, scope: !7311)
!7322 = !DILocation(line: 3599, column: 58, scope: !7311)
!7323 = !DILocation(line: 3599, column: 61, scope: !7311)
!7324 = !DILocation(line: 3599, column: 66, scope: !7311)
!7325 = !DILocation(line: 3599, column: 70, scope: !7311)
!7326 = !DILocation(line: 3599, column: 74, scope: !7311)
!7327 = !DILocation(line: 3599, column: 6, scope: !7181)
!7328 = !DILocation(line: 3600, column: 3, scope: !7311)
!7329 = !DILocation(line: 3602, column: 2, scope: !7181)
!7330 = !DILocation(line: 3603, column: 39, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 3602, column: 5)
!7332 = !DILocation(line: 3603, column: 44, scope: !7331)
!7333 = !DILocation(line: 3603, column: 49, scope: !7331)
!7334 = !DILocation(line: 3603, column: 15, scope: !7331)
!7335 = !DILocation(line: 3603, column: 13, scope: !7331)
!7336 = !DILocation(line: 3604, column: 7, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 3604, column: 7)
!7338 = !DILocation(line: 3604, column: 12, scope: !7337)
!7339 = !DILocation(line: 3604, column: 16, scope: !7337)
!7340 = !DILocation(line: 3604, column: 23, scope: !7337)
!7341 = !DILocation(line: 3604, column: 7, scope: !7331)
!7342 = !DILocation(line: 3605, column: 43, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 3604, column: 29)
!7344 = !DILocation(line: 3605, column: 48, scope: !7343)
!7345 = !DILocation(line: 3605, column: 53, scope: !7343)
!7346 = !DILocation(line: 3605, column: 17, scope: !7343)
!7347 = !DILocation(line: 3605, column: 14, scope: !7343)
!7348 = !DILocation(line: 3606, column: 43, scope: !7343)
!7349 = !DILocation(line: 3606, column: 48, scope: !7343)
!7350 = !DILocation(line: 3606, column: 53, scope: !7343)
!7351 = !DILocation(line: 3606, column: 17, scope: !7343)
!7352 = !DILocation(line: 3606, column: 14, scope: !7343)
!7353 = !DILocation(line: 3607, column: 3, scope: !7343)
!7354 = !DILocation(line: 3609, column: 7, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 3609, column: 7)
!7356 = !DILocation(line: 3609, column: 7, scope: !7331)
!7357 = !DILocation(line: 3610, column: 16, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 3609, column: 18)
!7359 = !DILocation(line: 3610, column: 21, scope: !7358)
!7360 = !DILocation(line: 3610, column: 43, scope: !7358)
!7361 = !DILocation(line: 3610, column: 41, scope: !7358)
!7362 = !DILocation(line: 3610, column: 4, scope: !7358)
!7363 = !DILocation(line: 3610, column: 9, scope: !7358)
!7364 = !DILocation(line: 3610, column: 14, scope: !7358)
!7365 = !DILocation(line: 3611, column: 17, scope: !7358)
!7366 = !DILocation(line: 3611, column: 4, scope: !7358)
!7367 = !DILocation(line: 3611, column: 9, scope: !7358)
!7368 = !DILocation(line: 3611, column: 15, scope: !7358)
!7369 = !DILocation(line: 3613, column: 30, scope: !7358)
!7370 = !DILocation(line: 3613, column: 35, scope: !7358)
!7371 = !DILocation(line: 3613, column: 4, scope: !7358)
!7372 = !DILocation(line: 3615, column: 15, scope: !7358)
!7373 = !DILocation(line: 3615, column: 20, scope: !7358)
!7374 = !DILocation(line: 3615, column: 4, scope: !7358)
!7375 = !DILocation(line: 3615, column: 9, scope: !7358)
!7376 = !DILocation(line: 3615, column: 13, scope: !7358)
!7377 = !DILocation(line: 3616, column: 3, scope: !7358)
!7378 = !DILocation(line: 3618, column: 18, scope: !7331)
!7379 = !DILocation(line: 3618, column: 14, scope: !7331)
!7380 = !DILocation(line: 3618, column: 7, scope: !7331)
!7381 = !DILocation(line: 3618, column: 3, scope: !7331)
!7382 = !DILocation(line: 3618, column: 12, scope: !7331)
!7383 = !DILocation(line: 3619, column: 18, scope: !7331)
!7384 = !DILocation(line: 3619, column: 14, scope: !7331)
!7385 = !DILocation(line: 3619, column: 7, scope: !7331)
!7386 = !DILocation(line: 3619, column: 3, scope: !7331)
!7387 = !DILocation(line: 3619, column: 12, scope: !7331)
!7388 = !DILocation(line: 3620, column: 7, scope: !7331)
!7389 = !DILocation(line: 3620, column: 3, scope: !7331)
!7390 = !DILocation(line: 3620, column: 12, scope: !7331)
!7391 = !DILocation(line: 3622, column: 18, scope: !7331)
!7392 = !DILocation(line: 3622, column: 14, scope: !7331)
!7393 = !DILocation(line: 3622, column: 7, scope: !7331)
!7394 = !DILocation(line: 3622, column: 3, scope: !7331)
!7395 = !DILocation(line: 3622, column: 12, scope: !7331)
!7396 = !DILocation(line: 3623, column: 18, scope: !7331)
!7397 = !DILocation(line: 3623, column: 14, scope: !7331)
!7398 = !DILocation(line: 3623, column: 7, scope: !7331)
!7399 = !DILocation(line: 3623, column: 3, scope: !7331)
!7400 = !DILocation(line: 3623, column: 12, scope: !7331)
!7401 = !DILocation(line: 3624, column: 7, scope: !7331)
!7402 = !DILocation(line: 3624, column: 3, scope: !7331)
!7403 = !DILocation(line: 3624, column: 12, scope: !7331)
!7404 = !DILocation(line: 3626, column: 2, scope: !7331)
!7405 = !DILocation(line: 3626, column: 15, scope: !7181)
!7406 = !DILocation(line: 3626, column: 11, scope: !7181)
!7407 = distinct !{!7407, !7329, !7408}
!7408 = !DILocation(line: 3626, column: 19, scope: !7181)
!7409 = !DILocation(line: 3627, column: 1, scope: !7181)
!7410 = distinct !DISubprogram(name: "collision_sphere_to_tri", scope: !3, file: !3, line: 3448, type: !7411, scopeLine: 3449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!7411 = !DISubroutineType(types: !7412)
!7412 = !{!260, !712, !341, !7413, !1796}
!7413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!7414 = !DILocalVariable(name: "col", arg: 1, scope: !7410, file: !3, line: 3448, type: !712)
!7415 = !DILocation(line: 3448, column: 55, scope: !7410)
!7416 = !DILocalVariable(name: "radius", arg: 2, scope: !7410, file: !3, line: 3448, type: !341)
!7417 = !DILocation(line: 3448, column: 66, scope: !7410)
!7418 = !DILocalVariable(name: "pce", arg: 3, scope: !7410, file: !3, line: 3448, type: !7413)
!7419 = !DILocation(line: 3448, column: 100, scope: !7410)
!7420 = !DILocalVariable(name: "t", arg: 4, scope: !7410, file: !3, line: 3448, type: !1796)
!7421 = !DILocation(line: 3448, column: 112, scope: !7410)
!7422 = !DILocalVariable(name: "result", scope: !7410, file: !3, line: 3450, type: !7413)
!7423 = !DILocation(line: 3450, column: 28, scope: !7410)
!7424 = !DILocation(line: 3450, column: 38, scope: !7410)
!7425 = !DILocation(line: 3450, column: 43, scope: !7410)
!7426 = !DILocalVariable(name: "ct", scope: !7410, file: !3, line: 3451, type: !341)
!7427 = !DILocation(line: 3451, column: 8, scope: !7410)
!7428 = !DILocalVariable(name: "u", scope: !7410, file: !3, line: 3451, type: !341)
!7429 = !DILocation(line: 3451, column: 12, scope: !7410)
!7430 = !DILocalVariable(name: "v", scope: !7410, file: !3, line: 3451, type: !341)
!7431 = !DILocation(line: 3451, column: 15, scope: !7410)
!7432 = !DILocation(line: 3453, column: 2, scope: !7410)
!7433 = !DILocation(line: 3453, column: 7, scope: !7410)
!7434 = !DILocation(line: 3453, column: 15, scope: !7410)
!7435 = !DILocation(line: 3454, column: 2, scope: !7410)
!7436 = !DILocation(line: 3454, column: 7, scope: !7410)
!7437 = !DILocation(line: 3454, column: 14, scope: !7410)
!7438 = !DILocation(line: 3456, column: 32, scope: !7410)
!7439 = !DILocation(line: 3456, column: 37, scope: !7410)
!7440 = !DILocation(line: 3456, column: 45, scope: !7410)
!7441 = !DILocation(line: 3456, column: 7, scope: !7410)
!7442 = !DILocation(line: 3456, column: 5, scope: !7410)
!7443 = !DILocation(line: 3458, column: 6, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 3458, column: 6)
!7445 = !DILocation(line: 3458, column: 9, scope: !7444)
!7446 = !DILocation(line: 3458, column: 16, scope: !7444)
!7447 = !DILocation(line: 3458, column: 19, scope: !7444)
!7448 = !DILocation(line: 3458, column: 25, scope: !7444)
!7449 = !DILocation(line: 3458, column: 24, scope: !7444)
!7450 = !DILocation(line: 3458, column: 22, scope: !7444)
!7451 = !DILocation(line: 3458, column: 27, scope: !7444)
!7452 = !DILocation(line: 3458, column: 31, scope: !7444)
!7453 = !DILocation(line: 3458, column: 39, scope: !7444)
!7454 = !DILocation(line: 3458, column: 45, scope: !7444)
!7455 = !DILocation(line: 3458, column: 49, scope: !7444)
!7456 = !DILocation(line: 3458, column: 52, scope: !7444)
!7457 = !DILocation(line: 3458, column: 57, scope: !7444)
!7458 = !DILocation(line: 3458, column: 63, scope: !7444)
!7459 = !DILocation(line: 3458, column: 6, scope: !7410)
!7460 = !DILocalVariable(name: "e1", scope: !7461, file: !3, line: 3459, type: !563)
!7461 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 3458, column: 70)
!7462 = !DILocation(line: 3459, column: 9, scope: !7461)
!7463 = !DILocalVariable(name: "e2", scope: !7461, file: !3, line: 3459, type: !563)
!7464 = !DILocation(line: 3459, column: 16, scope: !7461)
!7465 = !DILocalVariable(name: "p0", scope: !7461, file: !3, line: 3459, type: !563)
!7466 = !DILocation(line: 3459, column: 23, scope: !7461)
!7467 = !DILocalVariable(name: "e1e1", scope: !7461, file: !3, line: 3460, type: !341)
!7468 = !DILocation(line: 3460, column: 9, scope: !7461)
!7469 = !DILocalVariable(name: "e1e2", scope: !7461, file: !3, line: 3460, type: !341)
!7470 = !DILocation(line: 3460, column: 15, scope: !7461)
!7471 = !DILocalVariable(name: "e1p0", scope: !7461, file: !3, line: 3460, type: !341)
!7472 = !DILocation(line: 3460, column: 21, scope: !7461)
!7473 = !DILocalVariable(name: "e2e2", scope: !7461, file: !3, line: 3460, type: !341)
!7474 = !DILocation(line: 3460, column: 27, scope: !7461)
!7475 = !DILocalVariable(name: "e2p0", scope: !7461, file: !3, line: 3460, type: !341)
!7476 = !DILocation(line: 3460, column: 33, scope: !7461)
!7477 = !DILocalVariable(name: "inv", scope: !7461, file: !3, line: 3460, type: !341)
!7478 = !DILocation(line: 3460, column: 39, scope: !7461)
!7479 = !DILocation(line: 3462, column: 15, scope: !7461)
!7480 = !DILocation(line: 3462, column: 19, scope: !7461)
!7481 = !DILocation(line: 3462, column: 24, scope: !7461)
!7482 = !DILocation(line: 3462, column: 28, scope: !7461)
!7483 = !DILocation(line: 3462, column: 33, scope: !7461)
!7484 = !DILocation(line: 3462, column: 3, scope: !7461)
!7485 = !DILocation(line: 3463, column: 15, scope: !7461)
!7486 = !DILocation(line: 3463, column: 19, scope: !7461)
!7487 = !DILocation(line: 3463, column: 24, scope: !7461)
!7488 = !DILocation(line: 3463, column: 28, scope: !7461)
!7489 = !DILocation(line: 3463, column: 33, scope: !7461)
!7490 = !DILocation(line: 3463, column: 3, scope: !7461)
!7491 = !DILocation(line: 3465, column: 15, scope: !7461)
!7492 = !DILocation(line: 3465, column: 19, scope: !7461)
!7493 = !DILocation(line: 3465, column: 24, scope: !7461)
!7494 = !DILocation(line: 3465, column: 27, scope: !7461)
!7495 = !DILocation(line: 3465, column: 32, scope: !7461)
!7496 = !DILocation(line: 3465, column: 3, scope: !7461)
!7497 = !DILocation(line: 3467, column: 19, scope: !7461)
!7498 = !DILocation(line: 3467, column: 23, scope: !7461)
!7499 = !DILocation(line: 3467, column: 10, scope: !7461)
!7500 = !DILocation(line: 3467, column: 8, scope: !7461)
!7501 = !DILocation(line: 3468, column: 19, scope: !7461)
!7502 = !DILocation(line: 3468, column: 23, scope: !7461)
!7503 = !DILocation(line: 3468, column: 10, scope: !7461)
!7504 = !DILocation(line: 3468, column: 8, scope: !7461)
!7505 = !DILocation(line: 3469, column: 19, scope: !7461)
!7506 = !DILocation(line: 3469, column: 23, scope: !7461)
!7507 = !DILocation(line: 3469, column: 10, scope: !7461)
!7508 = !DILocation(line: 3469, column: 8, scope: !7461)
!7509 = !DILocation(line: 3470, column: 19, scope: !7461)
!7510 = !DILocation(line: 3470, column: 23, scope: !7461)
!7511 = !DILocation(line: 3470, column: 10, scope: !7461)
!7512 = !DILocation(line: 3470, column: 8, scope: !7461)
!7513 = !DILocation(line: 3471, column: 19, scope: !7461)
!7514 = !DILocation(line: 3471, column: 23, scope: !7461)
!7515 = !DILocation(line: 3471, column: 10, scope: !7461)
!7516 = !DILocation(line: 3471, column: 8, scope: !7461)
!7517 = !DILocation(line: 3473, column: 14, scope: !7461)
!7518 = !DILocation(line: 3473, column: 21, scope: !7461)
!7519 = !DILocation(line: 3473, column: 19, scope: !7461)
!7520 = !DILocation(line: 3473, column: 28, scope: !7461)
!7521 = !DILocation(line: 3473, column: 35, scope: !7461)
!7522 = !DILocation(line: 3473, column: 33, scope: !7461)
!7523 = !DILocation(line: 3473, column: 26, scope: !7461)
!7524 = !DILocation(line: 3473, column: 12, scope: !7461)
!7525 = !DILocation(line: 3473, column: 7, scope: !7461)
!7526 = !DILocation(line: 3474, column: 8, scope: !7461)
!7527 = !DILocation(line: 3474, column: 15, scope: !7461)
!7528 = !DILocation(line: 3474, column: 13, scope: !7461)
!7529 = !DILocation(line: 3474, column: 22, scope: !7461)
!7530 = !DILocation(line: 3474, column: 29, scope: !7461)
!7531 = !DILocation(line: 3474, column: 27, scope: !7461)
!7532 = !DILocation(line: 3474, column: 20, scope: !7461)
!7533 = !DILocation(line: 3474, column: 37, scope: !7461)
!7534 = !DILocation(line: 3474, column: 35, scope: !7461)
!7535 = !DILocation(line: 3474, column: 5, scope: !7461)
!7536 = !DILocation(line: 3475, column: 8, scope: !7461)
!7537 = !DILocation(line: 3475, column: 15, scope: !7461)
!7538 = !DILocation(line: 3475, column: 13, scope: !7461)
!7539 = !DILocation(line: 3475, column: 22, scope: !7461)
!7540 = !DILocation(line: 3475, column: 29, scope: !7461)
!7541 = !DILocation(line: 3475, column: 27, scope: !7461)
!7542 = !DILocation(line: 3475, column: 20, scope: !7461)
!7543 = !DILocation(line: 3475, column: 37, scope: !7461)
!7544 = !DILocation(line: 3475, column: 35, scope: !7461)
!7545 = !DILocation(line: 3475, column: 5, scope: !7461)
!7546 = !DILocation(line: 3477, column: 7, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 3477, column: 7)
!7548 = !DILocation(line: 3477, column: 8, scope: !7547)
!7549 = !DILocation(line: 3477, column: 14, scope: !7547)
!7550 = !DILocation(line: 3477, column: 17, scope: !7547)
!7551 = !DILocation(line: 3477, column: 18, scope: !7547)
!7552 = !DILocation(line: 3477, column: 24, scope: !7547)
!7553 = !DILocation(line: 3477, column: 27, scope: !7547)
!7554 = !DILocation(line: 3477, column: 28, scope: !7547)
!7555 = !DILocation(line: 3477, column: 34, scope: !7547)
!7556 = !DILocation(line: 3477, column: 37, scope: !7547)
!7557 = !DILocation(line: 3477, column: 39, scope: !7547)
!7558 = !DILocation(line: 3477, column: 38, scope: !7547)
!7559 = !DILocation(line: 3477, column: 40, scope: !7547)
!7560 = !DILocation(line: 3477, column: 7, scope: !7461)
!7561 = !DILocation(line: 3478, column: 5, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 3477, column: 47)
!7563 = !DILocation(line: 3478, column: 15, scope: !7562)
!7564 = !DILocation(line: 3478, column: 14, scope: !7562)
!7565 = !DILocation(line: 3482, column: 20, scope: !7562)
!7566 = !DILocation(line: 3482, column: 4, scope: !7562)
!7567 = !DILocation(line: 3482, column: 12, scope: !7562)
!7568 = !DILocation(line: 3482, column: 18, scope: !7562)
!7569 = !DILocation(line: 3483, column: 20, scope: !7562)
!7570 = !DILocation(line: 3483, column: 4, scope: !7562)
!7571 = !DILocation(line: 3483, column: 12, scope: !7562)
!7572 = !DILocation(line: 3483, column: 18, scope: !7562)
!7573 = !DILocation(line: 3485, column: 9, scope: !7562)
!7574 = !DILocation(line: 3485, column: 5, scope: !7562)
!7575 = !DILocation(line: 3485, column: 7, scope: !7562)
!7576 = !DILocation(line: 3486, column: 4, scope: !7562)
!7577 = !DILocation(line: 3488, column: 2, scope: !7461)
!7578 = !DILocation(line: 3489, column: 2, scope: !7410)
!7579 = !DILocation(line: 3490, column: 1, scope: !7410)
!7580 = distinct !DISubprogram(name: "collision_sphere_to_edges", scope: !3, file: !3, line: 3491, type: !7411, scopeLine: 3492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!7581 = !DILocalVariable(name: "col", arg: 1, scope: !7580, file: !3, line: 3491, type: !712)
!7582 = !DILocation(line: 3491, column: 57, scope: !7580)
!7583 = !DILocalVariable(name: "radius", arg: 2, scope: !7580, file: !3, line: 3491, type: !341)
!7584 = !DILocation(line: 3491, column: 68, scope: !7580)
!7585 = !DILocalVariable(name: "pce", arg: 3, scope: !7580, file: !3, line: 3491, type: !7413)
!7586 = !DILocation(line: 3491, column: 102, scope: !7580)
!7587 = !DILocalVariable(name: "t", arg: 4, scope: !7580, file: !3, line: 3491, type: !1796)
!7588 = !DILocation(line: 3491, column: 114, scope: !7580)
!7589 = !DILocalVariable(name: "edge", scope: !7580, file: !3, line: 3493, type: !7590)
!7590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3110, size: 3840, elements: !564)
!7591 = !DILocation(line: 3493, column: 27, scope: !7580)
!7592 = !DILocalVariable(name: "cur", scope: !7580, file: !3, line: 3493, type: !7413)
!7593 = !DILocation(line: 3493, column: 37, scope: !7580)
!7594 = !DILocalVariable(name: "hit", scope: !7580, file: !3, line: 3493, type: !7413)
!7595 = !DILocation(line: 3493, column: 50, scope: !7580)
!7596 = !DILocalVariable(name: "result", scope: !7580, file: !3, line: 3494, type: !7413)
!7597 = !DILocation(line: 3494, column: 28, scope: !7580)
!7598 = !DILocation(line: 3494, column: 38, scope: !7580)
!7599 = !DILocation(line: 3494, column: 43, scope: !7580)
!7600 = !DILocalVariable(name: "ct", scope: !7580, file: !3, line: 3496, type: !341)
!7601 = !DILocation(line: 3496, column: 8, scope: !7580)
!7602 = !DILocalVariable(name: "i", scope: !7580, file: !3, line: 3497, type: !260)
!7603 = !DILocation(line: 3497, column: 6, scope: !7580)
!7604 = !DILocation(line: 3499, column: 8, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 3499, column: 2)
!7606 = !DILocation(line: 3499, column: 7, scope: !7605)
!7607 = !DILocation(line: 3499, column: 12, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7605, file: !3, line: 3499, column: 2)
!7609 = !DILocation(line: 3499, column: 13, scope: !7608)
!7610 = !DILocation(line: 3499, column: 2, scope: !7605)
!7611 = !DILocation(line: 3501, column: 8, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 3501, column: 7)
!7613 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 3499, column: 22)
!7614 = !DILocation(line: 3501, column: 13, scope: !7612)
!7615 = !DILocation(line: 3501, column: 18, scope: !7612)
!7616 = !DILocation(line: 3501, column: 21, scope: !7612)
!7617 = !DILocation(line: 3501, column: 22, scope: !7612)
!7618 = !DILocation(line: 3501, column: 7, scope: !7613)
!7619 = !DILocation(line: 3502, column: 4, scope: !7612)
!7620 = !DILocation(line: 3504, column: 9, scope: !7613)
!7621 = !DILocation(line: 3504, column: 14, scope: !7613)
!7622 = !DILocation(line: 3504, column: 13, scope: !7613)
!7623 = !DILocation(line: 3504, column: 7, scope: !7613)
!7624 = !DILocation(line: 3505, column: 15, scope: !7613)
!7625 = !DILocation(line: 3505, column: 20, scope: !7613)
!7626 = !DILocation(line: 3505, column: 22, scope: !7613)
!7627 = !DILocation(line: 3505, column: 3, scope: !7613)
!7628 = !DILocation(line: 3505, column: 8, scope: !7613)
!7629 = !DILocation(line: 3505, column: 13, scope: !7613)
!7630 = !DILocation(line: 3505, column: 38, scope: !7613)
!7631 = !DILocation(line: 3505, column: 43, scope: !7613)
!7632 = !DILocation(line: 3505, column: 46, scope: !7613)
!7633 = !DILocation(line: 3505, column: 47, scope: !7613)
!7634 = !DILocation(line: 3505, column: 50, scope: !7613)
!7635 = !DILocation(line: 3505, column: 26, scope: !7613)
!7636 = !DILocation(line: 3505, column: 31, scope: !7613)
!7637 = !DILocation(line: 3505, column: 36, scope: !7613)
!7638 = !DILocation(line: 3506, column: 15, scope: !7613)
!7639 = !DILocation(line: 3506, column: 20, scope: !7613)
!7640 = !DILocation(line: 3506, column: 22, scope: !7613)
!7641 = !DILocation(line: 3506, column: 3, scope: !7613)
!7642 = !DILocation(line: 3506, column: 8, scope: !7613)
!7643 = !DILocation(line: 3506, column: 13, scope: !7613)
!7644 = !DILocation(line: 3506, column: 38, scope: !7613)
!7645 = !DILocation(line: 3506, column: 43, scope: !7613)
!7646 = !DILocation(line: 3506, column: 46, scope: !7613)
!7647 = !DILocation(line: 3506, column: 47, scope: !7613)
!7648 = !DILocation(line: 3506, column: 50, scope: !7613)
!7649 = !DILocation(line: 3506, column: 26, scope: !7613)
!7650 = !DILocation(line: 3506, column: 31, scope: !7613)
!7651 = !DILocation(line: 3506, column: 36, scope: !7613)
!7652 = !DILocation(line: 3507, column: 3, scope: !7613)
!7653 = !DILocation(line: 3507, column: 8, scope: !7613)
!7654 = !DILocation(line: 3507, column: 12, scope: !7613)
!7655 = !DILocation(line: 3508, column: 3, scope: !7613)
!7656 = !DILocation(line: 3508, column: 8, scope: !7613)
!7657 = !DILocation(line: 3508, column: 15, scope: !7613)
!7658 = !DILocation(line: 3510, column: 33, scope: !7613)
!7659 = !DILocation(line: 3510, column: 38, scope: !7613)
!7660 = !DILocation(line: 3510, column: 46, scope: !7613)
!7661 = !DILocation(line: 3510, column: 8, scope: !7613)
!7662 = !DILocation(line: 3510, column: 6, scope: !7613)
!7663 = !DILocation(line: 3512, column: 7, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 3512, column: 7)
!7665 = !DILocation(line: 3512, column: 10, scope: !7664)
!7666 = !DILocation(line: 3512, column: 17, scope: !7664)
!7667 = !DILocation(line: 3512, column: 20, scope: !7664)
!7668 = !DILocation(line: 3512, column: 26, scope: !7664)
!7669 = !DILocation(line: 3512, column: 25, scope: !7664)
!7670 = !DILocation(line: 3512, column: 23, scope: !7664)
!7671 = !DILocation(line: 3512, column: 7, scope: !7613)
!7672 = !DILocalVariable(name: "u", scope: !7673, file: !3, line: 3513, type: !341)
!7673 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 3512, column: 29)
!7674 = !DILocation(line: 3513, column: 10, scope: !7673)
!7675 = !DILocalVariable(name: "e", scope: !7673, file: !3, line: 3513, type: !563)
!7676 = !DILocation(line: 3513, column: 13, scope: !7673)
!7677 = !DILocalVariable(name: "vec", scope: !7673, file: !3, line: 3513, type: !563)
!7678 = !DILocation(line: 3513, column: 19, scope: !7673)
!7679 = !DILocation(line: 3515, column: 16, scope: !7673)
!7680 = !DILocation(line: 3515, column: 19, scope: !7673)
!7681 = !DILocation(line: 3515, column: 24, scope: !7673)
!7682 = !DILocation(line: 3515, column: 28, scope: !7673)
!7683 = !DILocation(line: 3515, column: 33, scope: !7673)
!7684 = !DILocation(line: 3515, column: 4, scope: !7673)
!7685 = !DILocation(line: 3516, column: 16, scope: !7673)
!7686 = !DILocation(line: 3516, column: 21, scope: !7673)
!7687 = !DILocation(line: 3516, column: 26, scope: !7673)
!7688 = !DILocation(line: 3516, column: 29, scope: !7673)
!7689 = !DILocation(line: 3516, column: 34, scope: !7673)
!7690 = !DILocation(line: 3516, column: 4, scope: !7673)
!7691 = !DILocation(line: 3517, column: 17, scope: !7673)
!7692 = !DILocation(line: 3517, column: 22, scope: !7673)
!7693 = !DILocation(line: 3517, column: 8, scope: !7673)
!7694 = !DILocation(line: 3517, column: 36, scope: !7673)
!7695 = !DILocation(line: 3517, column: 39, scope: !7673)
!7696 = !DILocation(line: 3517, column: 27, scope: !7673)
!7697 = !DILocation(line: 3517, column: 25, scope: !7673)
!7698 = !DILocation(line: 3517, column: 6, scope: !7673)
!7699 = !DILocation(line: 3519, column: 8, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 3519, column: 8)
!7701 = !DILocation(line: 3519, column: 10, scope: !7700)
!7702 = !DILocation(line: 3519, column: 16, scope: !7700)
!7703 = !DILocation(line: 3519, column: 19, scope: !7700)
!7704 = !DILocation(line: 3519, column: 21, scope: !7700)
!7705 = !DILocation(line: 3519, column: 8, scope: !7673)
!7706 = !DILocation(line: 3520, column: 5, scope: !7700)
!7707 = !DILocation(line: 3522, column: 5, scope: !7673)
!7708 = !DILocation(line: 3522, column: 15, scope: !7673)
!7709 = !DILocation(line: 3522, column: 14, scope: !7673)
!7710 = !DILocation(line: 3524, column: 19, scope: !7673)
!7711 = !DILocation(line: 3524, column: 27, scope: !7673)
!7712 = !DILocation(line: 3524, column: 32, scope: !7673)
!7713 = !DILocation(line: 3524, column: 37, scope: !7673)
!7714 = !DILocation(line: 3524, column: 41, scope: !7673)
!7715 = !DILocation(line: 3524, column: 40, scope: !7673)
!7716 = !DILocation(line: 3524, column: 4, scope: !7673)
!7717 = !DILocation(line: 3525, column: 17, scope: !7673)
!7718 = !DILocation(line: 3525, column: 25, scope: !7673)
!7719 = !DILocation(line: 3525, column: 4, scope: !7673)
!7720 = !DILocation(line: 3527, column: 20, scope: !7673)
!7721 = !DILocation(line: 3527, column: 4, scope: !7673)
!7722 = !DILocation(line: 3527, column: 12, scope: !7673)
!7723 = !DILocation(line: 3527, column: 18, scope: !7673)
!7724 = !DILocation(line: 3530, column: 10, scope: !7673)
!7725 = !DILocation(line: 3530, column: 8, scope: !7673)
!7726 = !DILocation(line: 3531, column: 9, scope: !7673)
!7727 = !DILocation(line: 3531, column: 5, scope: !7673)
!7728 = !DILocation(line: 3531, column: 7, scope: !7673)
!7729 = !DILocation(line: 3532, column: 3, scope: !7673)
!7730 = !DILocation(line: 3534, column: 2, scope: !7613)
!7731 = !DILocation(line: 3499, column: 18, scope: !7608)
!7732 = !DILocation(line: 3499, column: 2, scope: !7608)
!7733 = distinct !{!7733, !7610, !7734}
!7734 = !DILocation(line: 3534, column: 2, scope: !7605)
!7735 = !DILocation(line: 3536, column: 9, scope: !7580)
!7736 = !DILocation(line: 3536, column: 13, scope: !7580)
!7737 = !DILocation(line: 3536, column: 2, scope: !7580)
!7738 = distinct !DISubprogram(name: "collision_sphere_to_verts", scope: !3, file: !3, line: 3538, type: !7411, scopeLine: 3539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!7739 = !DILocalVariable(name: "col", arg: 1, scope: !7738, file: !3, line: 3538, type: !712)
!7740 = !DILocation(line: 3538, column: 57, scope: !7738)
!7741 = !DILocalVariable(name: "radius", arg: 2, scope: !7738, file: !3, line: 3538, type: !341)
!7742 = !DILocation(line: 3538, column: 68, scope: !7738)
!7743 = !DILocalVariable(name: "pce", arg: 3, scope: !7738, file: !3, line: 3538, type: !7413)
!7744 = !DILocation(line: 3538, column: 102, scope: !7738)
!7745 = !DILocalVariable(name: "t", arg: 4, scope: !7738, file: !3, line: 3538, type: !1796)
!7746 = !DILocation(line: 3538, column: 114, scope: !7738)
!7747 = !DILocalVariable(name: "vert", scope: !7738, file: !3, line: 3540, type: !7590)
!7748 = !DILocation(line: 3540, column: 27, scope: !7738)
!7749 = !DILocalVariable(name: "cur", scope: !7738, file: !3, line: 3540, type: !7413)
!7750 = !DILocation(line: 3540, column: 37, scope: !7738)
!7751 = !DILocalVariable(name: "hit", scope: !7738, file: !3, line: 3540, type: !7413)
!7752 = !DILocation(line: 3540, column: 50, scope: !7738)
!7753 = !DILocalVariable(name: "result", scope: !7738, file: !3, line: 3541, type: !7413)
!7754 = !DILocation(line: 3541, column: 28, scope: !7738)
!7755 = !DILocation(line: 3541, column: 38, scope: !7738)
!7756 = !DILocation(line: 3541, column: 43, scope: !7738)
!7757 = !DILocalVariable(name: "ct", scope: !7738, file: !3, line: 3543, type: !341)
!7758 = !DILocation(line: 3543, column: 8, scope: !7738)
!7759 = !DILocalVariable(name: "i", scope: !7738, file: !3, line: 3544, type: !260)
!7760 = !DILocation(line: 3544, column: 6, scope: !7738)
!7761 = !DILocation(line: 3546, column: 8, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 3546, column: 2)
!7763 = !DILocation(line: 3546, column: 7, scope: !7762)
!7764 = !DILocation(line: 3546, column: 12, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 3546, column: 2)
!7766 = !DILocation(line: 3546, column: 13, scope: !7765)
!7767 = !DILocation(line: 3546, column: 2, scope: !7762)
!7768 = !DILocation(line: 3548, column: 7, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 3548, column: 7)
!7770 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 3546, column: 22)
!7771 = !DILocation(line: 3548, column: 12, scope: !7769)
!7772 = !DILocation(line: 3548, column: 17, scope: !7769)
!7773 = !DILocation(line: 3548, column: 20, scope: !7769)
!7774 = !DILocation(line: 3548, column: 22, scope: !7769)
!7775 = !DILocation(line: 3548, column: 7, scope: !7770)
!7776 = !DILocation(line: 3549, column: 4, scope: !7769)
!7777 = !DILocation(line: 3551, column: 9, scope: !7770)
!7778 = !DILocation(line: 3551, column: 14, scope: !7770)
!7779 = !DILocation(line: 3551, column: 13, scope: !7770)
!7780 = !DILocation(line: 3551, column: 7, scope: !7770)
!7781 = !DILocation(line: 3552, column: 15, scope: !7770)
!7782 = !DILocation(line: 3552, column: 20, scope: !7770)
!7783 = !DILocation(line: 3552, column: 22, scope: !7770)
!7784 = !DILocation(line: 3552, column: 3, scope: !7770)
!7785 = !DILocation(line: 3552, column: 8, scope: !7770)
!7786 = !DILocation(line: 3552, column: 13, scope: !7770)
!7787 = !DILocation(line: 3553, column: 15, scope: !7770)
!7788 = !DILocation(line: 3553, column: 20, scope: !7770)
!7789 = !DILocation(line: 3553, column: 22, scope: !7770)
!7790 = !DILocation(line: 3553, column: 3, scope: !7770)
!7791 = !DILocation(line: 3553, column: 8, scope: !7770)
!7792 = !DILocation(line: 3553, column: 13, scope: !7770)
!7793 = !DILocation(line: 3554, column: 3, scope: !7770)
!7794 = !DILocation(line: 3554, column: 8, scope: !7770)
!7795 = !DILocation(line: 3554, column: 12, scope: !7770)
!7796 = !DILocation(line: 3555, column: 3, scope: !7770)
!7797 = !DILocation(line: 3555, column: 8, scope: !7770)
!7798 = !DILocation(line: 3555, column: 15, scope: !7770)
!7799 = !DILocation(line: 3557, column: 33, scope: !7770)
!7800 = !DILocation(line: 3557, column: 38, scope: !7770)
!7801 = !DILocation(line: 3557, column: 46, scope: !7770)
!7802 = !DILocation(line: 3557, column: 8, scope: !7770)
!7803 = !DILocation(line: 3557, column: 6, scope: !7770)
!7804 = !DILocation(line: 3559, column: 7, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 3559, column: 7)
!7806 = !DILocation(line: 3559, column: 10, scope: !7805)
!7807 = !DILocation(line: 3559, column: 17, scope: !7805)
!7808 = !DILocation(line: 3559, column: 20, scope: !7805)
!7809 = !DILocation(line: 3559, column: 26, scope: !7805)
!7810 = !DILocation(line: 3559, column: 25, scope: !7805)
!7811 = !DILocation(line: 3559, column: 23, scope: !7805)
!7812 = !DILocation(line: 3559, column: 7, scope: !7770)
!7813 = !DILocation(line: 3560, column: 5, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7805, file: !3, line: 3559, column: 29)
!7815 = !DILocation(line: 3560, column: 15, scope: !7814)
!7816 = !DILocation(line: 3560, column: 14, scope: !7814)
!7817 = !DILocation(line: 3562, column: 16, scope: !7814)
!7818 = !DILocation(line: 3562, column: 24, scope: !7814)
!7819 = !DILocation(line: 3562, column: 29, scope: !7814)
!7820 = !DILocation(line: 3562, column: 34, scope: !7814)
!7821 = !DILocation(line: 3562, column: 37, scope: !7814)
!7822 = !DILocation(line: 3562, column: 42, scope: !7814)
!7823 = !DILocation(line: 3562, column: 4, scope: !7814)
!7824 = !DILocation(line: 3563, column: 17, scope: !7814)
!7825 = !DILocation(line: 3563, column: 25, scope: !7814)
!7826 = !DILocation(line: 3563, column: 4, scope: !7814)
!7827 = !DILocation(line: 3565, column: 10, scope: !7814)
!7828 = !DILocation(line: 3565, column: 8, scope: !7814)
!7829 = !DILocation(line: 3566, column: 9, scope: !7814)
!7830 = !DILocation(line: 3566, column: 5, scope: !7814)
!7831 = !DILocation(line: 3566, column: 7, scope: !7814)
!7832 = !DILocation(line: 3567, column: 3, scope: !7814)
!7833 = !DILocation(line: 3569, column: 2, scope: !7770)
!7834 = !DILocation(line: 3546, column: 18, scope: !7765)
!7835 = !DILocation(line: 3546, column: 2, scope: !7765)
!7836 = distinct !{!7836, !7767, !7837}
!7837 = !DILocation(line: 3569, column: 2, scope: !7762)
!7838 = !DILocation(line: 3571, column: 9, scope: !7738)
!7839 = !DILocation(line: 3571, column: 13, scope: !7738)
!7840 = !DILocation(line: 3571, column: 2, scope: !7738)
!7841 = distinct !DISubprogram(name: "collision_point_velocity", scope: !3, file: !3, line: 3268, type: !7842, scopeLine: 3269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!7842 = !DISubroutineType(types: !7843)
!7843 = !{null, !7413}
!7844 = !DILocalVariable(name: "pce", arg: 1, scope: !7841, file: !3, line: 3268, type: !7413)
!7845 = !DILocation(line: 3268, column: 64, scope: !7841)
!7846 = !DILocalVariable(name: "v", scope: !7841, file: !3, line: 3270, type: !563)
!7847 = !DILocation(line: 3270, column: 8, scope: !7841)
!7848 = !DILocation(line: 3272, column: 13, scope: !7841)
!7849 = !DILocation(line: 3272, column: 18, scope: !7841)
!7850 = !DILocation(line: 3272, column: 23, scope: !7841)
!7851 = !DILocation(line: 3272, column: 28, scope: !7841)
!7852 = !DILocation(line: 3272, column: 2, scope: !7841)
!7853 = !DILocation(line: 3274, column: 6, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 3274, column: 6)
!7855 = !DILocation(line: 3274, column: 11, scope: !7854)
!7856 = !DILocation(line: 3274, column: 15, scope: !7854)
!7857 = !DILocation(line: 3274, column: 6, scope: !7841)
!7858 = !DILocation(line: 3275, column: 15, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 3274, column: 20)
!7860 = !DILocation(line: 3275, column: 18, scope: !7859)
!7861 = !DILocation(line: 3275, column: 23, scope: !7859)
!7862 = !DILocation(line: 3275, column: 29, scope: !7859)
!7863 = !DILocation(line: 3275, column: 34, scope: !7859)
!7864 = !DILocation(line: 3275, column: 3, scope: !7859)
!7865 = !DILocation(line: 3276, column: 16, scope: !7859)
!7866 = !DILocation(line: 3276, column: 21, scope: !7859)
!7867 = !DILocation(line: 3276, column: 26, scope: !7859)
!7868 = !DILocation(line: 3276, column: 29, scope: !7859)
!7869 = !DILocation(line: 3276, column: 34, scope: !7859)
!7870 = !DILocation(line: 3276, column: 3, scope: !7859)
!7871 = !DILocation(line: 3278, column: 7, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7859, file: !3, line: 3278, column: 7)
!7873 = !DILocation(line: 3278, column: 12, scope: !7872)
!7874 = !DILocation(line: 3278, column: 16, scope: !7872)
!7875 = !DILocation(line: 3278, column: 7, scope: !7859)
!7876 = !DILocation(line: 3279, column: 16, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 3278, column: 21)
!7878 = !DILocation(line: 3279, column: 19, scope: !7877)
!7879 = !DILocation(line: 3279, column: 24, scope: !7877)
!7880 = !DILocation(line: 3279, column: 30, scope: !7877)
!7881 = !DILocation(line: 3279, column: 35, scope: !7877)
!7882 = !DILocation(line: 3279, column: 4, scope: !7877)
!7883 = !DILocation(line: 3280, column: 17, scope: !7877)
!7884 = !DILocation(line: 3280, column: 22, scope: !7877)
!7885 = !DILocation(line: 3280, column: 27, scope: !7877)
!7886 = !DILocation(line: 3280, column: 30, scope: !7877)
!7887 = !DILocation(line: 3280, column: 35, scope: !7877)
!7888 = !DILocation(line: 3280, column: 4, scope: !7877)
!7889 = !DILocation(line: 3281, column: 3, scope: !7877)
!7890 = !DILocation(line: 3282, column: 2, scope: !7859)
!7891 = !DILocation(line: 3283, column: 1, scope: !7841)
!7892 = distinct !DISubprogram(name: "psys_changed_type", scope: !3, file: !3, line: 4853, type: !5751, scopeLine: 4854, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!7893 = !DILocalVariable(name: "ob", arg: 1, scope: !7892, file: !3, line: 4853, type: !3567)
!7894 = !DILocation(line: 4853, column: 32, scope: !7892)
!7895 = !DILocalVariable(name: "psys", arg: 2, scope: !7892, file: !3, line: 4853, type: !3144)
!7896 = !DILocation(line: 4853, column: 52, scope: !7892)
!7897 = !DILocalVariable(name: "part", scope: !7892, file: !3, line: 4855, type: !2192)
!7898 = !DILocation(line: 4855, column: 20, scope: !7892)
!7899 = !DILocation(line: 4855, column: 27, scope: !7892)
!7900 = !DILocation(line: 4855, column: 33, scope: !7892)
!7901 = !DILocalVariable(name: "pid", scope: !7892, file: !3, line: 4856, type: !3513)
!7902 = !DILocation(line: 4856, column: 12, scope: !7892)
!7903 = !DILocation(line: 4858, column: 38, scope: !7892)
!7904 = !DILocation(line: 4858, column: 42, scope: !7892)
!7905 = !DILocation(line: 4858, column: 2, scope: !7892)
!7906 = !DILocation(line: 4860, column: 6, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 4860, column: 6)
!7908 = !DILocation(line: 4860, column: 12, scope: !7907)
!7909 = !DILocation(line: 4860, column: 21, scope: !7907)
!7910 = !DILocation(line: 4860, column: 6, scope: !7892)
!7911 = !DILocation(line: 4861, column: 3, scope: !7907)
!7912 = !DILocation(line: 4861, column: 9, scope: !7907)
!7913 = !DILocation(line: 4861, column: 14, scope: !7907)
!7914 = !DILocation(line: 4863, column: 6, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 4863, column: 6)
!7916 = !DILocation(line: 4863, column: 12, scope: !7915)
!7917 = !DILocation(line: 4863, column: 17, scope: !7915)
!7918 = !DILocation(line: 4863, column: 6, scope: !7892)
!7919 = !DILocation(line: 4864, column: 7, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 4864, column: 7)
!7921 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 4863, column: 31)
!7922 = !DILocation(line: 4864, column: 84, scope: !7920)
!7923 = !DILocation(line: 4864, column: 7, scope: !7921)
!7924 = !DILocation(line: 4865, column: 4, scope: !7920)
!7925 = !DILocation(line: 4865, column: 10, scope: !7920)
!7926 = !DILocation(line: 4865, column: 17, scope: !7920)
!7927 = !DILocation(line: 4867, column: 7, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 4867, column: 7)
!7929 = !DILocation(line: 4867, column: 13, scope: !7928)
!7930 = !DILocation(line: 4867, column: 19, scope: !7928)
!7931 = !DILocation(line: 4867, column: 7, scope: !7921)
!7932 = !DILocation(line: 4868, column: 4, scope: !7928)
!7933 = !DILocation(line: 4868, column: 10, scope: !7928)
!7934 = !DILocation(line: 4868, column: 16, scope: !7928)
!7935 = !DILocation(line: 4870, column: 7, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 4870, column: 7)
!7937 = !DILocation(line: 4870, column: 73, scope: !7936)
!7938 = !DILocation(line: 4870, column: 7, scope: !7921)
!7939 = !DILocation(line: 4871, column: 4, scope: !7936)
!7940 = !DILocation(line: 4871, column: 10, scope: !7936)
!7941 = !DILocation(line: 4871, column: 18, scope: !7936)
!7942 = !DILocation(line: 4873, column: 3, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 4873, column: 3)
!7944 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 4873, column: 3)
!7945 = !DILocation(line: 4873, column: 3, scope: !7944)
!7946 = !DILocation(line: 4873, column: 3, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 4873, column: 3)
!7948 = !DILocation(line: 4874, column: 3, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 4874, column: 3)
!7950 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 4874, column: 3)
!7951 = !DILocation(line: 4874, column: 3, scope: !7950)
!7952 = !DILocation(line: 4874, column: 3, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 4874, column: 3)
!7954 = !DILocation(line: 4876, column: 3, scope: !7921)
!7955 = !DILocation(line: 4877, column: 2, scope: !7921)
!7956 = !DILocation(line: 4879, column: 13, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 4878, column: 7)
!7958 = !DILocation(line: 4879, column: 17, scope: !7957)
!7959 = !DILocation(line: 4879, column: 3, scope: !7957)
!7960 = !DILocation(line: 4881, column: 3, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 4881, column: 3)
!7962 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 4881, column: 3)
!7963 = !DILocation(line: 4881, column: 3, scope: !7962)
!7964 = !DILocation(line: 4881, column: 3, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7961, file: !3, line: 4881, column: 3)
!7966 = !DILocation(line: 4882, column: 3, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 4882, column: 3)
!7968 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 4882, column: 3)
!7969 = !DILocation(line: 4882, column: 3, scope: !7968)
!7970 = !DILocation(line: 4882, column: 3, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 4882, column: 3)
!7972 = !DILocation(line: 4885, column: 13, scope: !7892)
!7973 = !DILocation(line: 4885, column: 2, scope: !7892)
!7974 = !DILocation(line: 4886, column: 1, scope: !7892)
!7975 = distinct !DISubprogram(name: "psys_check_boid_data", scope: !3, file: !3, line: 4887, type: !7976, scopeLine: 4888, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!7976 = !DISubroutineType(types: !7977)
!7977 = !{null, !3144}
!7978 = !DILocalVariable(name: "psys", arg: 1, scope: !7975, file: !3, line: 4887, type: !3144)
!7979 = !DILocation(line: 4887, column: 43, scope: !7975)
!7980 = !DILocalVariable(name: "bpa", scope: !7975, file: !3, line: 4889, type: !1990)
!7981 = !DILocation(line: 4889, column: 17, scope: !7975)
!7982 = !DILocalVariable(name: "pa", scope: !7975, file: !3, line: 4890, type: !2461)
!7983 = !DILocation(line: 4890, column: 3, scope: !7975)
!7984 = !DILocalVariable(name: "p", scope: !7975, file: !3, line: 4890, type: !260)
!7985 = !DILocation(line: 4892, column: 8, scope: !7975)
!7986 = !DILocation(line: 4892, column: 14, scope: !7975)
!7987 = !DILocation(line: 4892, column: 6, scope: !7975)
!7988 = !DILocation(line: 4894, column: 8, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 4894, column: 7)
!7990 = !DILocation(line: 4894, column: 7, scope: !7975)
!7991 = !DILocation(line: 4895, column: 4, scope: !7989)
!7992 = !DILocation(line: 4897, column: 7, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 4897, column: 7)
!7994 = !DILocation(line: 4897, column: 13, scope: !7993)
!7995 = !DILocation(line: 4897, column: 18, scope: !7993)
!7996 = !DILocation(line: 4897, column: 21, scope: !7993)
!7997 = !DILocation(line: 4897, column: 27, scope: !7993)
!7998 = !DILocation(line: 4897, column: 33, scope: !7993)
!7999 = !DILocation(line: 4897, column: 41, scope: !7993)
!8000 = !DILocation(line: 4897, column: 7, scope: !7975)
!8001 = !DILocation(line: 4898, column: 9, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 4898, column: 8)
!8003 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 4897, column: 60)
!8004 = !DILocation(line: 4898, column: 13, scope: !8002)
!8005 = !DILocation(line: 4898, column: 8, scope: !8003)
!8006 = !DILocation(line: 4899, column: 11, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 4898, column: 19)
!8008 = !DILocation(line: 4899, column: 23, scope: !8007)
!8009 = !DILocation(line: 4899, column: 29, scope: !8007)
!8010 = !DILocation(line: 4899, column: 37, scope: !8007)
!8011 = !DILocation(line: 4899, column: 9, scope: !8007)
!8012 = !DILocation(line: 4901, column: 5, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 4901, column: 5)
!8014 = !DILocation(line: 4901, column: 5, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8013, file: !3, line: 4901, column: 5)
!8016 = !DILocation(line: 4902, column: 20, scope: !8015)
!8017 = !DILocation(line: 4902, column: 6, scope: !8015)
!8018 = !DILocation(line: 4902, column: 10, scope: !8015)
!8019 = !DILocation(line: 4902, column: 15, scope: !8015)
!8020 = distinct !{!8020, !8012, !8021}
!8021 = !DILocation(line: 4902, column: 20, scope: !8013)
!8022 = !DILocation(line: 4903, column: 4, scope: !8007)
!8023 = !DILocation(line: 4904, column: 3, scope: !8003)
!8024 = !DILocation(line: 4905, column: 12, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 4905, column: 12)
!8026 = !DILocation(line: 4905, column: 16, scope: !8025)
!8027 = !DILocation(line: 4905, column: 12, scope: !7993)
!8028 = !DILocation(line: 4906, column: 4, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 4905, column: 22)
!8030 = !DILocation(line: 4906, column: 14, scope: !8029)
!8031 = !DILocation(line: 4906, column: 18, scope: !8029)
!8032 = !DILocation(line: 4907, column: 4, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 4907, column: 4)
!8034 = !DILocation(line: 4907, column: 4, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8033, file: !3, line: 4907, column: 4)
!8036 = !DILocation(line: 4908, column: 5, scope: !8035)
!8037 = !DILocation(line: 4908, column: 9, scope: !8035)
!8038 = !DILocation(line: 4908, column: 14, scope: !8035)
!8039 = distinct !{!8039, !8032, !8040}
!8040 = !DILocation(line: 4908, column: 16, scope: !8033)
!8041 = !DILocation(line: 4909, column: 3, scope: !8029)
!8042 = !DILocation(line: 4910, column: 1, scope: !7975)
!8043 = distinct !DISubprogram(name: "particle_system_update", scope: !3, file: !3, line: 4979, type: !8044, scopeLine: 4980, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!8044 = !DISubroutineType(types: !8045)
!8045 = !{null, !5519, !3567, !3144}
!8046 = !DILocalVariable(name: "scene", arg: 1, scope: !8043, file: !3, line: 4979, type: !5519)
!8047 = !DILocation(line: 4979, column: 36, scope: !8043)
!8048 = !DILocalVariable(name: "ob", arg: 2, scope: !8043, file: !3, line: 4979, type: !3567)
!8049 = !DILocation(line: 4979, column: 51, scope: !8043)
!8050 = !DILocalVariable(name: "psys", arg: 3, scope: !8043, file: !3, line: 4979, type: !3144)
!8051 = !DILocation(line: 4979, column: 71, scope: !8043)
!8052 = !DILocalVariable(name: "sim", scope: !8043, file: !3, line: 4981, type: !3219)
!8053 = !DILocation(line: 4981, column: 25, scope: !8043)
!8054 = !DILocalVariable(name: "part", scope: !8043, file: !3, line: 4982, type: !2192)
!8055 = !DILocation(line: 4982, column: 20, scope: !8043)
!8056 = !DILocation(line: 4982, column: 27, scope: !8043)
!8057 = !DILocation(line: 4982, column: 33, scope: !8043)
!8058 = !DILocalVariable(name: "cfra", scope: !8043, file: !3, line: 4983, type: !341)
!8059 = !DILocation(line: 4983, column: 8, scope: !8043)
!8060 = !DILocation(line: 4986, column: 6, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 4986, column: 6)
!8062 = !DILocation(line: 4986, column: 12, scope: !8061)
!8063 = !DILocation(line: 4986, column: 6, scope: !8043)
!8064 = !DILocation(line: 4986, column: 17, scope: !8061)
!8065 = !DILocation(line: 4986, column: 23, scope: !8061)
!8066 = !DILocation(line: 4986, column: 28, scope: !8061)
!8067 = !DILocation(line: 4986, column: 33, scope: !8061)
!8068 = !DILocation(line: 4988, column: 26, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 4988, column: 6)
!8070 = !DILocation(line: 4988, column: 30, scope: !8069)
!8071 = !DILocation(line: 4988, column: 7, scope: !8069)
!8072 = !DILocation(line: 4988, column: 6, scope: !8043)
!8073 = !DILocation(line: 4989, column: 3, scope: !8069)
!8074 = !DILocation(line: 4991, column: 28, scope: !8043)
!8075 = !DILocation(line: 4991, column: 8, scope: !8043)
!8076 = !DILocation(line: 4991, column: 6, scope: !8043)
!8077 = !DILocation(line: 4993, column: 13, scope: !8043)
!8078 = !DILocation(line: 4993, column: 6, scope: !8043)
!8079 = !DILocation(line: 4993, column: 11, scope: !8043)
!8080 = !DILocation(line: 4994, column: 10, scope: !8043)
!8081 = !DILocation(line: 4994, column: 6, scope: !8043)
!8082 = !DILocation(line: 4994, column: 8, scope: !8043)
!8083 = !DILocation(line: 4995, column: 12, scope: !8043)
!8084 = !DILocation(line: 4995, column: 6, scope: !8043)
!8085 = !DILocation(line: 4995, column: 10, scope: !8043)
!8086 = !DILocation(line: 4996, column: 30, scope: !8043)
!8087 = !DILocation(line: 4996, column: 34, scope: !8043)
!8088 = !DILocation(line: 4996, column: 12, scope: !8043)
!8089 = !DILocation(line: 4996, column: 6, scope: !8043)
!8090 = !DILocation(line: 4996, column: 10, scope: !8043)
!8091 = !DILocation(line: 4999, column: 10, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 4999, column: 6)
!8093 = !DILocation(line: 4999, column: 16, scope: !8092)
!8094 = !DILocation(line: 4999, column: 6, scope: !8092)
!8095 = !DILocation(line: 4999, column: 21, scope: !8092)
!8096 = !DILocation(line: 4999, column: 6, scope: !8043)
!8097 = !DILocation(line: 5000, column: 7, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 4999, column: 57)
!8099 = !DILocation(line: 5000, column: 13, scope: !8098)
!8100 = !DILocation(line: 5000, column: 18, scope: !8098)
!8101 = !DILocation(line: 5002, column: 7, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 5002, column: 7)
!8103 = !DILocation(line: 5002, column: 13, scope: !8102)
!8104 = !DILocation(line: 5002, column: 21, scope: !8102)
!8105 = !DILocation(line: 5002, column: 18, scope: !8102)
!8106 = !DILocation(line: 5002, column: 7, scope: !8098)
!8107 = !DILocation(line: 5003, column: 4, scope: !8102)
!8108 = !DILocation(line: 5004, column: 2, scope: !8098)
!8109 = !DILocation(line: 5006, column: 11, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 5006, column: 6)
!8111 = !DILocation(line: 5006, column: 17, scope: !8110)
!8112 = !DILocation(line: 5006, column: 7, scope: !8110)
!8113 = !DILocation(line: 5006, column: 6, scope: !8043)
!8114 = !DILocation(line: 5007, column: 3, scope: !8110)
!8115 = !DILocation(line: 5009, column: 6, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 5009, column: 6)
!8117 = !DILocation(line: 5009, column: 12, scope: !8116)
!8118 = !DILocation(line: 5009, column: 17, scope: !8116)
!8119 = !DILocation(line: 5009, column: 6, scope: !8043)
!8120 = !DILocation(line: 5010, column: 26, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 5009, column: 36)
!8122 = !DILocation(line: 5010, column: 32, scope: !8121)
!8123 = !DILocation(line: 5010, column: 3, scope: !8121)
!8124 = !DILocation(line: 5011, column: 2, scope: !8121)
!8125 = !DILocation(line: 5014, column: 32, scope: !8043)
!8126 = !DILocation(line: 5014, column: 40, scope: !8043)
!8127 = !DILocation(line: 5014, column: 46, scope: !8043)
!8128 = !DILocation(line: 5014, column: 50, scope: !8043)
!8129 = !DILocation(line: 5014, column: 56, scope: !8043)
!8130 = !DILocation(line: 5014, column: 61, scope: !8043)
!8131 = !DILocation(line: 5014, column: 2, scope: !8043)
!8132 = !DILocation(line: 5017, column: 2, scope: !8043)
!8133 = !DILocation(line: 5017, column: 8, scope: !8043)
!8134 = !DILocation(line: 5017, column: 13, scope: !8043)
!8135 = !DILocation(line: 5019, column: 6, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 5019, column: 6)
!8137 = !DILocation(line: 5019, column: 12, scope: !8136)
!8138 = !DILocation(line: 5019, column: 19, scope: !8136)
!8139 = !DILocation(line: 5019, column: 6, scope: !8043)
!8140 = !DILocation(line: 5020, column: 25, scope: !8136)
!8141 = !DILocation(line: 5020, column: 33, scope: !8136)
!8142 = !DILocation(line: 5020, column: 3, scope: !8136)
!8143 = !DILocation(line: 5022, column: 6, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 5022, column: 6)
!8145 = !DILocation(line: 5022, column: 12, scope: !8144)
!8146 = !DILocation(line: 5022, column: 19, scope: !8144)
!8147 = !DILocation(line: 5022, column: 6, scope: !8043)
!8148 = !DILocation(line: 5023, column: 3, scope: !8144)
!8149 = !DILocation(line: 5023, column: 9, scope: !8144)
!8150 = !DILocation(line: 5023, column: 20, scope: !8144)
!8151 = !DILocation(line: 5026, column: 2, scope: !8043)
!8152 = !DILocation(line: 5028, column: 10, scope: !8043)
!8153 = !DILocation(line: 5028, column: 16, scope: !8043)
!8154 = !DILocation(line: 5028, column: 2, scope: !8043)
!8155 = !DILocation(line: 5032, column: 8, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 5032, column: 8)
!8157 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 5030, column: 3)
!8158 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 5028, column: 22)
!8159 = !DILocation(line: 5032, column: 14, scope: !8156)
!8160 = !DILocation(line: 5032, column: 22, scope: !8156)
!8161 = !DILocation(line: 5032, column: 27, scope: !8156)
!8162 = !DILocation(line: 5032, column: 30, scope: !8156)
!8163 = !DILocation(line: 5032, column: 36, scope: !8156)
!8164 = !DILocation(line: 5032, column: 44, scope: !8156)
!8165 = !DILocation(line: 5032, column: 8, scope: !8157)
!8166 = !DILocation(line: 5033, column: 26, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 5032, column: 50)
!8168 = !DILocation(line: 5033, column: 5, scope: !8167)
!8169 = !DILocation(line: 5034, column: 15, scope: !8167)
!8170 = !DILocation(line: 5034, column: 19, scope: !8167)
!8171 = !DILocation(line: 5034, column: 5, scope: !8167)
!8172 = !DILocation(line: 5035, column: 5, scope: !8167)
!8173 = !DILocation(line: 5035, column: 11, scope: !8167)
!8174 = !DILocation(line: 5035, column: 16, scope: !8167)
!8175 = !DILocation(line: 5036, column: 4, scope: !8167)
!8176 = !DILocation(line: 5038, column: 31, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 5038, column: 13)
!8178 = !DILocation(line: 5038, column: 13, scope: !8177)
!8179 = !DILocation(line: 5038, column: 13, scope: !8156)
!8180 = !DILocalVariable(name: "hcfra", scope: !8181, file: !3, line: 5039, type: !341)
!8181 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 5038, column: 38)
!8182 = !DILocation(line: 5039, column: 11, scope: !8181)
!8183 = !DILocalVariable(name: "i", scope: !8181, file: !3, line: 5040, type: !260)
!8184 = !DILocation(line: 5040, column: 9, scope: !8181)
!8185 = !DILocalVariable(name: "recalc", scope: !8181, file: !3, line: 5040, type: !260)
!8186 = !DILocation(line: 5040, column: 12, scope: !8181)
!8187 = !DILocation(line: 5040, column: 21, scope: !8181)
!8188 = !DILocation(line: 5040, column: 27, scope: !8181)
!8189 = !DILocation(line: 5042, column: 15, scope: !8181)
!8190 = !DILocation(line: 5042, column: 19, scope: !8181)
!8191 = !DILocation(line: 5042, column: 5, scope: !8181)
!8192 = !DILocation(line: 5044, column: 9, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 5044, column: 9)
!8194 = !DILocation(line: 5044, column: 15, scope: !8193)
!8195 = !DILocation(line: 5044, column: 20, scope: !8193)
!8196 = !DILocation(line: 5044, column: 23, scope: !8193)
!8197 = !DILocation(line: 5044, column: 29, scope: !8193)
!8198 = !DILocation(line: 5044, column: 9, scope: !8181)
!8199 = !DILocation(line: 5045, column: 6, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8193, file: !3, line: 5044, column: 40)
!8201 = !DILocation(line: 5045, column: 12, scope: !8200)
!8202 = !DILocation(line: 5045, column: 22, scope: !8200)
!8203 = !DILocation(line: 5045, column: 28, scope: !8200)
!8204 = !DILocation(line: 5046, column: 6, scope: !8200)
!8205 = !DILocation(line: 5046, column: 12, scope: !8200)
!8206 = !DILocation(line: 5046, column: 17, scope: !8200)
!8207 = !DILocation(line: 5047, column: 6, scope: !8200)
!8208 = !DILocation(line: 5047, column: 12, scope: !8200)
!8209 = !DILocation(line: 5047, column: 22, scope: !8200)
!8210 = !DILocation(line: 5048, column: 5, scope: !8200)
!8211 = !DILocation(line: 5051, column: 5, scope: !8181)
!8212 = !DILocation(line: 5051, column: 11, scope: !8181)
!8213 = !DILocation(line: 5051, column: 15, scope: !8181)
!8214 = !DILocation(line: 5053, column: 11, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 5053, column: 5)
!8216 = !DILocation(line: 5053, column: 10, scope: !8215)
!8217 = !DILocation(line: 5053, column: 15, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 5053, column: 5)
!8219 = !DILocation(line: 5053, column: 18, scope: !8218)
!8220 = !DILocation(line: 5053, column: 24, scope: !8218)
!8221 = !DILocation(line: 5053, column: 16, scope: !8218)
!8222 = !DILocation(line: 5053, column: 5, scope: !8215)
!8223 = !DILocation(line: 5054, column: 26, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8218, file: !3, line: 5053, column: 40)
!8225 = !DILocation(line: 5054, column: 19, scope: !8224)
!8226 = !DILocation(line: 5054, column: 18, scope: !8224)
!8227 = !DILocation(line: 5054, column: 35, scope: !8224)
!8228 = !DILocation(line: 5054, column: 41, scope: !8224)
!8229 = !DILocation(line: 5054, column: 47, scope: !8224)
!8230 = !DILocation(line: 5054, column: 28, scope: !8224)
!8231 = !DILocation(line: 5054, column: 27, scope: !8224)
!8232 = !DILocation(line: 5054, column: 11, scope: !8224)
!8233 = !DILocation(line: 5055, column: 11, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8224, file: !3, line: 5055, column: 10)
!8235 = !DILocation(line: 5055, column: 17, scope: !8234)
!8236 = !DILocation(line: 5055, column: 22, scope: !8234)
!8237 = !DILocation(line: 5055, column: 41, scope: !8234)
!8238 = !DILocation(line: 5055, column: 10, scope: !8224)
!8239 = !DILocation(line: 5056, column: 37, scope: !8234)
!8240 = !DILocation(line: 5056, column: 45, scope: !8234)
!8241 = !DILocation(line: 5056, column: 51, scope: !8234)
!8242 = !DILocation(line: 5056, column: 55, scope: !8234)
!8243 = !DILocation(line: 5056, column: 61, scope: !8234)
!8244 = !DILocation(line: 5056, column: 66, scope: !8234)
!8245 = !DILocation(line: 5056, column: 7, scope: !8234)
!8246 = !DILocation(line: 5057, column: 24, scope: !8224)
!8247 = !DILocation(line: 5057, column: 6, scope: !8224)
!8248 = !DILocation(line: 5058, column: 19, scope: !8224)
!8249 = !DILocation(line: 5058, column: 6, scope: !8224)
!8250 = !DILocation(line: 5058, column: 12, scope: !8224)
!8251 = !DILocation(line: 5058, column: 17, scope: !8224)
!8252 = !DILocation(line: 5059, column: 6, scope: !8224)
!8253 = !DILocation(line: 5059, column: 12, scope: !8224)
!8254 = !DILocation(line: 5059, column: 19, scope: !8224)
!8255 = !DILocation(line: 5060, column: 22, scope: !8224)
!8256 = !DILocation(line: 5060, column: 6, scope: !8224)
!8257 = !DILocation(line: 5061, column: 5, scope: !8224)
!8258 = !DILocation(line: 5053, column: 36, scope: !8218)
!8259 = !DILocation(line: 5053, column: 5, scope: !8218)
!8260 = distinct !{!8260, !8222, !8261}
!8261 = !DILocation(line: 5061, column: 5, scope: !8215)
!8262 = !DILocation(line: 5063, column: 5, scope: !8181)
!8263 = !DILocation(line: 5063, column: 11, scope: !8181)
!8264 = !DILocation(line: 5063, column: 16, scope: !8181)
!8265 = !DILocation(line: 5064, column: 20, scope: !8181)
!8266 = !DILocation(line: 5064, column: 5, scope: !8181)
!8267 = !DILocation(line: 5064, column: 11, scope: !8181)
!8268 = !DILocation(line: 5064, column: 18, scope: !8181)
!8269 = !DILocation(line: 5065, column: 4, scope: !8181)
!8270 = !DILocation(line: 5066, column: 13, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 5066, column: 13)
!8272 = !DILocation(line: 5066, column: 19, scope: !8271)
!8273 = !DILocation(line: 5066, column: 24, scope: !8271)
!8274 = !DILocation(line: 5066, column: 13, scope: !8177)
!8275 = !DILocation(line: 5067, column: 5, scope: !8271)
!8276 = !DILocation(line: 5067, column: 11, scope: !8271)
!8277 = !DILocation(line: 5067, column: 16, scope: !8271)
!8278 = !DILocation(line: 5069, column: 8, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 5069, column: 8)
!8280 = !DILocation(line: 5069, column: 14, scope: !8279)
!8281 = !DILocation(line: 5069, column: 19, scope: !8279)
!8282 = !DILocation(line: 5069, column: 8, scope: !8157)
!8283 = !DILocation(line: 5070, column: 21, scope: !8279)
!8284 = !DILocation(line: 5070, column: 5, scope: !8279)
!8285 = !DILocation(line: 5071, column: 4, scope: !8157)
!8286 = !DILocation(line: 5075, column: 36, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 5074, column: 3)
!8288 = !DILocation(line: 5075, column: 31, scope: !8287)
!8289 = !DILocation(line: 5075, column: 4, scope: !8287)
!8290 = !DILocation(line: 5076, column: 4, scope: !8287)
!8291 = !DILocation(line: 5080, column: 12, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 5079, column: 3)
!8293 = !DILocation(line: 5080, column: 18, scope: !8292)
!8294 = !DILocation(line: 5080, column: 4, scope: !8292)
!8295 = !DILocalVariable(name: "pa", scope: !8296, file: !3, line: 5084, type: !2461)
!8296 = distinct !DILexicalBlock(scope: !8297, file: !3, line: 5083, column: 5)
!8297 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 5080, column: 28)
!8298 = !DILocation(line: 5084, column: 6, scope: !8296)
!8299 = !DILocalVariable(name: "p", scope: !8296, file: !3, line: 5084, type: !260)
!8300 = !DILocalVariable(name: "disp", scope: !8296, file: !3, line: 5085, type: !341)
!8301 = !DILocation(line: 5085, column: 12, scope: !8296)
!8302 = !DILocation(line: 5085, column: 55, scope: !8296)
!8303 = !DILocation(line: 5085, column: 19, scope: !8296)
!8304 = !DILocation(line: 5088, column: 10, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 5088, column: 10)
!8306 = !DILocation(line: 5088, column: 16, scope: !8305)
!8307 = !DILocation(line: 5088, column: 23, scope: !8305)
!8308 = !DILocation(line: 5088, column: 10, scope: !8296)
!8309 = !DILocation(line: 5089, column: 18, scope: !8305)
!8310 = !DILocation(line: 5089, column: 7, scope: !8305)
!8311 = !DILocation(line: 5091, column: 37, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 5091, column: 10)
!8313 = !DILocation(line: 5091, column: 10, scope: !8312)
!8314 = !DILocation(line: 5091, column: 43, scope: !8312)
!8315 = !DILocation(line: 5091, column: 47, scope: !8312)
!8316 = !DILocation(line: 5091, column: 53, scope: !8312)
!8317 = !DILocation(line: 5091, column: 60, scope: !8312)
!8318 = !DILocation(line: 5091, column: 10, scope: !8296)
!8319 = !DILocation(line: 5092, column: 23, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 5091, column: 82)
!8321 = !DILocation(line: 5092, column: 7, scope: !8320)
!8322 = !DILocation(line: 5093, column: 34, scope: !8320)
!8323 = !DILocation(line: 5093, column: 40, scope: !8320)
!8324 = !DILocation(line: 5093, column: 7, scope: !8320)
!8325 = !DILocation(line: 5094, column: 7, scope: !8320)
!8326 = !DILocation(line: 5097, column: 11, scope: !8320)
!8327 = !DILocation(line: 5097, column: 17, scope: !8320)
!8328 = !DILocation(line: 5097, column: 22, scope: !8320)
!8329 = !DILocation(line: 5098, column: 6, scope: !8320)
!8330 = !DILocation(line: 5100, column: 6, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 5100, column: 6)
!8332 = !DILocation(line: 5100, column: 6, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 5100, column: 6)
!8334 = !DILocation(line: 5100, column: 6, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8333, file: !3, line: 5100, column: 6)
!8336 = !DILocation(line: 5101, column: 18, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 5100, column: 30)
!8338 = !DILocation(line: 5101, column: 24, scope: !8337)
!8339 = !DILocation(line: 5101, column: 7, scope: !8337)
!8340 = !DILocation(line: 5101, column: 11, scope: !8337)
!8341 = !DILocation(line: 5101, column: 16, scope: !8337)
!8342 = !DILocation(line: 5102, column: 11, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 5102, column: 11)
!8344 = !DILocation(line: 5102, column: 17, scope: !8343)
!8345 = !DILocation(line: 5102, column: 26, scope: !8343)
!8346 = !DILocation(line: 5102, column: 11, scope: !8337)
!8347 = !DILocation(line: 5103, column: 27, scope: !8343)
!8348 = !DILocation(line: 5103, column: 33, scope: !8343)
!8349 = !DILocation(line: 5103, column: 55, scope: !8343)
!8350 = !DILocation(line: 5103, column: 61, scope: !8343)
!8351 = !DILocation(line: 5103, column: 63, scope: !8343)
!8352 = !DILocation(line: 5103, column: 44, scope: !8343)
!8353 = !DILocation(line: 5103, column: 42, scope: !8343)
!8354 = !DILocation(line: 5103, column: 25, scope: !8343)
!8355 = !DILocation(line: 5103, column: 8, scope: !8343)
!8356 = !DILocation(line: 5103, column: 12, scope: !8343)
!8357 = !DILocation(line: 5103, column: 17, scope: !8343)
!8358 = !DILocation(line: 5105, column: 28, scope: !8337)
!8359 = !DILocation(line: 5105, column: 37, scope: !8337)
!8360 = !DILocation(line: 5105, column: 7, scope: !8337)
!8361 = !DILocation(line: 5107, column: 22, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 5107, column: 11)
!8363 = !DILocation(line: 5107, column: 28, scope: !8362)
!8364 = !DILocation(line: 5107, column: 11, scope: !8362)
!8365 = !DILocation(line: 5107, column: 33, scope: !8362)
!8366 = !DILocation(line: 5107, column: 31, scope: !8362)
!8367 = !DILocation(line: 5107, column: 11, scope: !8337)
!8368 = !DILocation(line: 5108, column: 8, scope: !8362)
!8369 = !DILocation(line: 5108, column: 12, scope: !8362)
!8370 = !DILocation(line: 5108, column: 17, scope: !8362)
!8371 = !DILocation(line: 5110, column: 8, scope: !8362)
!8372 = !DILocation(line: 5110, column: 12, scope: !8362)
!8373 = !DILocation(line: 5110, column: 17, scope: !8362)
!8374 = !DILocation(line: 5111, column: 6, scope: !8337)
!8375 = distinct !{!8375, !8330, !8376}
!8376 = !DILocation(line: 5111, column: 6, scope: !8331)
!8377 = !DILocation(line: 5113, column: 10, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 5113, column: 10)
!8379 = !DILocation(line: 5113, column: 16, scope: !8378)
!8380 = !DILocation(line: 5113, column: 25, scope: !8378)
!8381 = !DILocation(line: 5113, column: 10, scope: !8296)
!8382 = !DILocation(line: 5114, column: 7, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 5113, column: 45)
!8384 = !DILocation(line: 5115, column: 7, scope: !8383)
!8385 = !DILocation(line: 5116, column: 40, scope: !8383)
!8386 = !DILocation(line: 5116, column: 35, scope: !8383)
!8387 = !DILocation(line: 5116, column: 7, scope: !8383)
!8388 = !DILocation(line: 5117, column: 6, scope: !8383)
!8389 = !DILocation(line: 5118, column: 6, scope: !8296)
!8390 = !DILocation(line: 5123, column: 24, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8297, file: !3, line: 5121, column: 5)
!8392 = !DILocation(line: 5123, column: 6, scope: !8391)
!8393 = !DILocation(line: 5124, column: 6, scope: !8391)
!8394 = !DILocation(line: 5127, column: 4, scope: !8292)
!8395 = !DILocation(line: 5132, column: 6, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 5132, column: 6)
!8397 = !DILocation(line: 5132, column: 12, scope: !8396)
!8398 = !DILocation(line: 5132, column: 17, scope: !8396)
!8399 = !DILocation(line: 5132, column: 6, scope: !8043)
!8400 = !DILocation(line: 5133, column: 25, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8396, file: !3, line: 5132, column: 41)
!8402 = !DILocation(line: 5133, column: 32, scope: !8401)
!8403 = !DILocation(line: 5133, column: 36, scope: !8401)
!8404 = !DILocation(line: 5133, column: 3, scope: !8401)
!8405 = !DILocation(line: 5134, column: 3, scope: !8401)
!8406 = !DILocation(line: 5134, column: 9, scope: !8401)
!8407 = !DILocation(line: 5134, column: 14, scope: !8401)
!8408 = !DILocation(line: 5135, column: 2, scope: !8401)
!8409 = !DILocation(line: 5137, column: 15, scope: !8043)
!8410 = !DILocation(line: 5137, column: 2, scope: !8043)
!8411 = !DILocation(line: 5137, column: 8, scope: !8043)
!8412 = !DILocation(line: 5137, column: 13, scope: !8043)
!8413 = !DILocation(line: 5138, column: 2, scope: !8043)
!8414 = !DILocation(line: 5138, column: 8, scope: !8043)
!8415 = !DILocation(line: 5138, column: 15, scope: !8043)
!8416 = !DILocation(line: 5141, column: 6, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 5141, column: 6)
!8418 = !DILocation(line: 5141, column: 12, scope: !8417)
!8419 = !DILocation(line: 5141, column: 22, scope: !8417)
!8420 = !DILocation(line: 5141, column: 6, scope: !8043)
!8421 = !DILocation(line: 5142, column: 16, scope: !8417)
!8422 = !DILocation(line: 5142, column: 22, scope: !8417)
!8423 = !DILocation(line: 5142, column: 28, scope: !8417)
!8424 = !DILocation(line: 5142, column: 32, scope: !8417)
!8425 = !DILocation(line: 5142, column: 3, scope: !8417)
!8426 = !DILocation(line: 5143, column: 1, scope: !8043)
!8427 = distinct !DISubprogram(name: "psys_prepare_physics", scope: !3, file: !3, line: 4930, type: !5676, scopeLine: 4931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!8428 = !DILocalVariable(name: "sim", arg: 1, scope: !8427, file: !3, line: 4930, type: !3218)
!8429 = !DILocation(line: 4930, column: 58, scope: !8427)
!8430 = !DILocalVariable(name: "part", scope: !8427, file: !3, line: 4932, type: !2192)
!8431 = !DILocation(line: 4932, column: 20, scope: !8427)
!8432 = !DILocation(line: 4932, column: 27, scope: !8427)
!8433 = !DILocation(line: 4932, column: 32, scope: !8427)
!8434 = !DILocation(line: 4932, column: 38, scope: !8427)
!8435 = !DILocation(line: 4934, column: 6, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 4934, column: 6)
!8437 = !DILocation(line: 4934, column: 6, scope: !8427)
!8438 = !DILocalVariable(name: "pid", scope: !8439, file: !3, line: 4935, type: !3513)
!8439 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 4934, column: 59)
!8440 = !DILocation(line: 4935, column: 13, scope: !8439)
!8441 = !DILocation(line: 4936, column: 39, scope: !8439)
!8442 = !DILocation(line: 4936, column: 44, scope: !8439)
!8443 = !DILocation(line: 4936, column: 48, scope: !8439)
!8444 = !DILocation(line: 4936, column: 53, scope: !8439)
!8445 = !DILocation(line: 4936, column: 3, scope: !8439)
!8446 = !DILocation(line: 4937, column: 3, scope: !8439)
!8447 = !DILocation(line: 4938, column: 2, scope: !8439)
!8448 = !DILocation(line: 4940, column: 19, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 4939, column: 7)
!8450 = !DILocation(line: 4940, column: 24, scope: !8449)
!8451 = !DILocation(line: 4940, column: 3, scope: !8449)
!8452 = !DILocation(line: 4941, column: 3, scope: !8449)
!8453 = !DILocation(line: 4941, column: 8, scope: !8449)
!8454 = !DILocation(line: 4941, column: 14, scope: !8449)
!8455 = !DILocation(line: 4941, column: 19, scope: !8449)
!8456 = !DILocation(line: 4944, column: 6, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 4944, column: 6)
!8458 = !DILocation(line: 4944, column: 12, scope: !8457)
!8459 = !DILocation(line: 4944, column: 21, scope: !8457)
!8460 = !DILocation(line: 4944, column: 40, scope: !8457)
!8461 = !DILocation(line: 4944, column: 43, scope: !8457)
!8462 = !DILocation(line: 4944, column: 49, scope: !8457)
!8463 = !DILocation(line: 4944, column: 55, scope: !8457)
!8464 = !DILocation(line: 4944, column: 6, scope: !8427)
!8465 = !DILocalVariable(name: "state", scope: !8466, file: !3, line: 4945, type: !690)
!8466 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 4944, column: 64)
!8467 = !DILocation(line: 4945, column: 14, scope: !8466)
!8468 = !DILocation(line: 4947, column: 17, scope: !8466)
!8469 = !DILocation(line: 4947, column: 3, scope: !8466)
!8470 = !DILocation(line: 4947, column: 9, scope: !8466)
!8471 = !DILocation(line: 4947, column: 15, scope: !8466)
!8472 = !DILocation(line: 4948, column: 25, scope: !8466)
!8473 = !DILocation(line: 4948, column: 31, scope: !8466)
!8474 = !DILocation(line: 4948, column: 3, scope: !8466)
!8475 = !DILocation(line: 4950, column: 26, scope: !8466)
!8476 = !DILocation(line: 4950, column: 32, scope: !8466)
!8477 = !DILocation(line: 4950, column: 11, scope: !8466)
!8478 = !DILocation(line: 4950, column: 9, scope: !8466)
!8479 = !DILocation(line: 4951, column: 16, scope: !8466)
!8480 = !DILocation(line: 4951, column: 23, scope: !8466)
!8481 = !DILocation(line: 4951, column: 30, scope: !8466)
!8482 = !DILocation(line: 4951, column: 3, scope: !8466)
!8483 = !DILocation(line: 4952, column: 16, scope: !8466)
!8484 = !DILocation(line: 4952, column: 23, scope: !8466)
!8485 = !DILocation(line: 4952, column: 30, scope: !8466)
!8486 = !DILocation(line: 4952, column: 3, scope: !8466)
!8487 = !DILocation(line: 4954, column: 15, scope: !8466)
!8488 = !DILocation(line: 4954, column: 22, scope: !8466)
!8489 = !DILocation(line: 4954, column: 28, scope: !8466)
!8490 = !DILocation(line: 4954, column: 4, scope: !8466)
!8491 = !DILocation(line: 4954, column: 36, scope: !8466)
!8492 = !DILocation(line: 4954, column: 41, scope: !8466)
!8493 = !DILocation(line: 4956, column: 3, scope: !8466)
!8494 = !DILocation(line: 4956, column: 10, scope: !8466)
!8495 = !DILocation(line: 4956, column: 15, scope: !8466)
!8496 = !DILocation(line: 4957, column: 16, scope: !8466)
!8497 = !DILocation(line: 4957, column: 22, scope: !8466)
!8498 = !DILocation(line: 4957, column: 29, scope: !8466)
!8499 = !DILocation(line: 4957, column: 37, scope: !8466)
!8500 = !DILocation(line: 4957, column: 3, scope: !8466)
!8501 = !DILocation(line: 4958, column: 2, scope: !8466)
!8502 = !DILocation(line: 4959, column: 11, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 4959, column: 11)
!8504 = !DILocation(line: 4959, column: 17, scope: !8503)
!8505 = !DILocation(line: 4959, column: 26, scope: !8503)
!8506 = !DILocation(line: 4959, column: 45, scope: !8503)
!8507 = !DILocation(line: 4959, column: 48, scope: !8503)
!8508 = !DILocation(line: 4959, column: 54, scope: !8503)
!8509 = !DILocation(line: 4959, column: 60, scope: !8503)
!8510 = !DILocation(line: 4959, column: 11, scope: !8457)
!8511 = !DILocation(line: 4960, column: 17, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 4959, column: 69)
!8513 = !DILocation(line: 4960, column: 3, scope: !8512)
!8514 = !DILocation(line: 4960, column: 9, scope: !8512)
!8515 = !DILocation(line: 4960, column: 15, scope: !8512)
!8516 = !DILocation(line: 4961, column: 26, scope: !8512)
!8517 = !DILocation(line: 4961, column: 3, scope: !8512)
!8518 = !DILocation(line: 4962, column: 2, scope: !8512)
!8519 = !DILocation(line: 4964, column: 23, scope: !8427)
!8520 = !DILocation(line: 4964, column: 28, scope: !8427)
!8521 = !DILocation(line: 4964, column: 2, scope: !8427)
!8522 = !DILocation(line: 4965, column: 1, scope: !8427)
!8523 = distinct !DISubprogram(name: "hair_needs_recalc", scope: !3, file: !3, line: 4966, type: !3365, scopeLine: 4967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!8524 = !DILocalVariable(name: "psys", arg: 1, scope: !8523, file: !3, line: 4966, type: !3144)
!8525 = !DILocation(line: 4966, column: 46, scope: !8523)
!8526 = !DILocation(line: 4968, column: 8, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 4968, column: 6)
!8528 = !DILocation(line: 4968, column: 14, scope: !8527)
!8529 = !DILocation(line: 4968, column: 19, scope: !8527)
!8530 = !DILocation(line: 4968, column: 34, scope: !8527)
!8531 = !DILocation(line: 4968, column: 39, scope: !8527)
!8532 = !DILocation(line: 4968, column: 45, scope: !8527)
!8533 = !DILocation(line: 4968, column: 50, scope: !8527)
!8534 = !DILocation(line: 4968, column: 54, scope: !8527)
!8535 = !DILocation(line: 4968, column: 60, scope: !8527)
!8536 = !DILocation(line: 4968, column: 66, scope: !8527)
!8537 = !DILocation(line: 4968, column: 74, scope: !8527)
!8538 = !DILocation(line: 4969, column: 8, scope: !8527)
!8539 = !DILocation(line: 4969, column: 14, scope: !8527)
!8540 = !DILocation(line: 4969, column: 19, scope: !8527)
!8541 = !DILocation(line: 4969, column: 36, scope: !8527)
!8542 = !DILocation(line: 4969, column: 40, scope: !8527)
!8543 = !DILocation(line: 4969, column: 43, scope: !8527)
!8544 = !DILocation(line: 4969, column: 49, scope: !8527)
!8545 = !DILocation(line: 4969, column: 56, scope: !8527)
!8546 = !DILocation(line: 4969, column: 76, scope: !8527)
!8547 = !DILocation(line: 4969, column: 80, scope: !8527)
!8548 = !DILocation(line: 4969, column: 86, scope: !8527)
!8549 = !DILocation(line: 4969, column: 92, scope: !8527)
!8550 = !DILocation(line: 4969, column: 97, scope: !8527)
!8551 = !DILocation(line: 4969, column: 116, scope: !8527)
!8552 = !DILocation(line: 4969, column: 120, scope: !8527)
!8553 = !DILocation(line: 4969, column: 126, scope: !8527)
!8554 = !DILocation(line: 4968, column: 6, scope: !8523)
!8555 = !DILocation(line: 4971, column: 3, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 4970, column: 2)
!8557 = !DILocation(line: 4974, column: 2, scope: !8523)
!8558 = !DILocation(line: 4975, column: 1, scope: !8523)
!8559 = distinct !DISubprogram(name: "system_step", scope: !3, file: !3, line: 4700, type: !8560, scopeLine: 4701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!8560 = !DISubroutineType(types: !8561)
!8561 = !{null, !3218, !341}
!8562 = !DILocalVariable(name: "sim", arg: 1, scope: !8559, file: !3, line: 4700, type: !3218)
!8563 = !DILocation(line: 4700, column: 49, scope: !8559)
!8564 = !DILocalVariable(name: "cfra", arg: 2, scope: !8559, file: !3, line: 4700, type: !341)
!8565 = !DILocation(line: 4700, column: 60, scope: !8559)
!8566 = !DILocalVariable(name: "psys", scope: !8559, file: !3, line: 4702, type: !3144)
!8567 = !DILocation(line: 4702, column: 18, scope: !8559)
!8568 = !DILocation(line: 4702, column: 25, scope: !8559)
!8569 = !DILocation(line: 4702, column: 30, scope: !8559)
!8570 = !DILocalVariable(name: "part", scope: !8559, file: !3, line: 4703, type: !2192)
!8571 = !DILocation(line: 4703, column: 20, scope: !8559)
!8572 = !DILocation(line: 4703, column: 27, scope: !8559)
!8573 = !DILocation(line: 4703, column: 33, scope: !8559)
!8574 = !DILocalVariable(name: "cache", scope: !8559, file: !3, line: 4704, type: !5758)
!8575 = !DILocation(line: 4704, column: 14, scope: !8559)
!8576 = !DILocation(line: 4704, column: 22, scope: !8559)
!8577 = !DILocation(line: 4704, column: 28, scope: !8559)
!8578 = !DILocalVariable(name: "ptcacheid", scope: !8559, file: !3, line: 4705, type: !3513)
!8579 = !DILocation(line: 4705, column: 12, scope: !8559)
!8580 = !DILocalVariable(name: "pid", scope: !8559, file: !3, line: 4705, type: !3512)
!8581 = !DILocation(line: 4705, column: 24, scope: !8559)
!8582 = !DILocalVariable(name: "pa", scope: !8559, file: !3, line: 4706, type: !2461)
!8583 = !DILocation(line: 4706, column: 2, scope: !8559)
!8584 = !DILocalVariable(name: "p", scope: !8559, file: !3, line: 4706, type: !260)
!8585 = !DILocalVariable(name: "disp", scope: !8559, file: !3, line: 4707, type: !341)
!8586 = !DILocation(line: 4707, column: 8, scope: !8559)
!8587 = !DILocalVariable(name: "cache_cfra", scope: !8559, file: !3, line: 4707, type: !341)
!8588 = !DILocation(line: 4707, column: 14, scope: !8559)
!8589 = !DILocation(line: 4707, column: 27, scope: !8559)
!8590 = !DILocalVariable(name: "startframe", scope: !8559, file: !3, line: 4708, type: !260)
!8591 = !DILocation(line: 4708, column: 6, scope: !8559)
!8592 = !DILocalVariable(name: "endframe", scope: !8559, file: !3, line: 4708, type: !260)
!8593 = !DILocation(line: 4708, column: 22, scope: !8559)
!8594 = !DILocalVariable(name: "oldtotpart", scope: !8559, file: !3, line: 4708, type: !260)
!8595 = !DILocation(line: 4708, column: 38, scope: !8559)
!8596 = !DILocation(line: 4711, column: 6, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 4711, column: 6)
!8598 = !DILocation(line: 4711, column: 12, scope: !8597)
!8599 = !DILocation(line: 4711, column: 17, scope: !8597)
!8600 = !DILocation(line: 4711, column: 6, scope: !8559)
!8601 = !DILocation(line: 4712, column: 30, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 4711, column: 31)
!8603 = !DILocation(line: 4712, column: 3, scope: !8602)
!8604 = !DILocation(line: 4715, column: 8, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 4715, column: 7)
!8606 = !DILocation(line: 4715, column: 15, scope: !8605)
!8607 = !DILocation(line: 4715, column: 20, scope: !8605)
!8608 = !DILocation(line: 4715, column: 53, scope: !8605)
!8609 = !DILocation(line: 4715, column: 7, scope: !8602)
!8610 = !DILocation(line: 4716, column: 34, scope: !8605)
!8611 = !DILocation(line: 4716, column: 39, scope: !8605)
!8612 = !DILocation(line: 4716, column: 46, scope: !8605)
!8613 = !DILocation(line: 4716, column: 53, scope: !8605)
!8614 = !DILocation(line: 4716, column: 60, scope: !8605)
!8615 = !DILocation(line: 4716, column: 73, scope: !8605)
!8616 = !DILocation(line: 4716, column: 80, scope: !8605)
!8617 = !DILocation(line: 4716, column: 4, scope: !8605)
!8618 = !DILocation(line: 4718, column: 7, scope: !8602)
!8619 = !DILocation(line: 4719, column: 33, scope: !8602)
!8620 = !DILocation(line: 4719, column: 38, scope: !8602)
!8621 = !DILocation(line: 4719, column: 43, scope: !8602)
!8622 = !DILocation(line: 4719, column: 47, scope: !8602)
!8623 = !DILocation(line: 4719, column: 3, scope: !8602)
!8624 = !DILocation(line: 4721, column: 23, scope: !8602)
!8625 = !DILocation(line: 4721, column: 28, scope: !8602)
!8626 = !DILocation(line: 4721, column: 33, scope: !8602)
!8627 = !DILocation(line: 4721, column: 3, scope: !8602)
!8628 = !DILocation(line: 4724, column: 7, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 4724, column: 7)
!8630 = !DILocation(line: 4724, column: 15, scope: !8629)
!8631 = !DILocation(line: 4724, column: 12, scope: !8629)
!8632 = !DILocation(line: 4724, column: 7, scope: !8602)
!8633 = !DILocation(line: 4725, column: 25, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 4724, column: 27)
!8635 = !DILocation(line: 4725, column: 30, scope: !8634)
!8636 = !DILocation(line: 4725, column: 37, scope: !8634)
!8637 = !DILocation(line: 4725, column: 4, scope: !8634)
!8638 = !DILocation(line: 4726, column: 25, scope: !8634)
!8639 = !DILocation(line: 4726, column: 32, scope: !8634)
!8640 = !DILocation(line: 4726, column: 4, scope: !8634)
!8641 = !DILocation(line: 4727, column: 4, scope: !8634)
!8642 = !DILocation(line: 4727, column: 11, scope: !8634)
!8643 = !DILocation(line: 4727, column: 16, scope: !8634)
!8644 = !DILocation(line: 4728, column: 3, scope: !8634)
!8645 = !DILocation(line: 4730, column: 3, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 4730, column: 3)
!8647 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 4730, column: 3)
!8648 = !DILocation(line: 4730, column: 3, scope: !8647)
!8649 = !DILocation(line: 4730, column: 3, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 4730, column: 3)
!8651 = !DILocation(line: 4731, column: 2, scope: !8602)
!8652 = !DILocation(line: 4734, column: 15, scope: !8559)
!8653 = !DILocation(line: 4734, column: 21, scope: !8559)
!8654 = !DILocation(line: 4734, column: 13, scope: !8559)
!8655 = !DILocation(line: 4735, column: 21, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 4735, column: 6)
!8657 = !DILocation(line: 4735, column: 26, scope: !8656)
!8658 = !DILocation(line: 4735, column: 31, scope: !8656)
!8659 = !DILocation(line: 4735, column: 6, scope: !8656)
!8660 = !DILocation(line: 4735, column: 37, scope: !8656)
!8661 = !DILocation(line: 4735, column: 40, scope: !8656)
!8662 = !DILocation(line: 4735, column: 46, scope: !8656)
!8663 = !DILocation(line: 4735, column: 53, scope: !8656)
!8664 = !DILocation(line: 4735, column: 6, scope: !8559)
!8665 = !DILocation(line: 4736, column: 24, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 4735, column: 74)
!8667 = !DILocation(line: 4736, column: 29, scope: !8666)
!8668 = !DILocation(line: 4736, column: 35, scope: !8666)
!8669 = !DILocation(line: 4736, column: 3, scope: !8666)
!8670 = !DILocation(line: 4737, column: 28, scope: !8666)
!8671 = !DILocation(line: 4737, column: 3, scope: !8666)
!8672 = !DILocation(line: 4739, column: 23, scope: !8666)
!8673 = !DILocation(line: 4739, column: 33, scope: !8666)
!8674 = !DILocation(line: 4739, column: 39, scope: !8666)
!8675 = !DILocation(line: 4739, column: 3, scope: !8666)
!8676 = !DILocation(line: 4741, column: 7, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8666, file: !3, line: 4741, column: 7)
!8678 = !DILocation(line: 4741, column: 13, scope: !8677)
!8679 = !DILocation(line: 4741, column: 7, scope: !8666)
!8680 = !DILocation(line: 4742, column: 4, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 4741, column: 28)
!8682 = !DILocation(line: 4742, column: 14, scope: !8681)
!8683 = !DILocation(line: 4742, column: 20, scope: !8681)
!8684 = !DILocation(line: 4743, column: 4, scope: !8681)
!8685 = !DILocation(line: 4743, column: 10, scope: !8681)
!8686 = !DILocation(line: 4743, column: 24, scope: !8681)
!8687 = !DILocation(line: 4744, column: 3, scope: !8681)
!8688 = !DILocation(line: 4746, column: 28, scope: !8666)
!8689 = !DILocation(line: 4746, column: 34, scope: !8666)
!8690 = !DILocation(line: 4746, column: 53, scope: !8666)
!8691 = !DILocation(line: 4746, column: 3, scope: !8666)
!8692 = !DILocation(line: 4746, column: 9, scope: !8666)
!8693 = !DILocation(line: 4746, column: 26, scope: !8666)
!8694 = !DILocation(line: 4749, column: 3, scope: !8666)
!8695 = !DILocation(line: 4749, column: 8, scope: !8666)
!8696 = !DILocation(line: 4749, column: 14, scope: !8666)
!8697 = !DILocation(line: 4749, column: 19, scope: !8666)
!8698 = !DILocation(line: 4751, column: 24, scope: !8666)
!8699 = !DILocation(line: 4751, column: 50, scope: !8666)
!8700 = !DILocation(line: 4751, column: 3, scope: !8666)
!8701 = !DILocation(line: 4752, column: 2, scope: !8666)
!8702 = !DILocation(line: 4755, column: 6, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 4755, column: 6)
!8704 = !DILocation(line: 4755, column: 6, scope: !8559)
!8705 = !DILocalVariable(name: "cache_result", scope: !8706, file: !3, line: 4756, type: !260)
!8706 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 4755, column: 11)
!8707 = !DILocation(line: 4756, column: 7, scope: !8706)
!8708 = !DILocation(line: 4756, column: 39, scope: !8706)
!8709 = !DILocation(line: 4756, column: 44, scope: !8706)
!8710 = !DILocation(line: 4756, column: 22, scope: !8706)
!8711 = !DILocation(line: 4758, column: 7, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 4758, column: 7)
!8713 = !DILocation(line: 4758, column: 7, scope: !8706)
!8714 = !DILocation(line: 4759, column: 16, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8712, file: !3, line: 4758, column: 74)
!8716 = !DILocation(line: 4759, column: 21, scope: !8715)
!8717 = !DILocation(line: 4759, column: 4, scope: !8715)
!8718 = !DILocation(line: 4760, column: 20, scope: !8715)
!8719 = !DILocation(line: 4760, column: 4, scope: !8715)
!8720 = !DILocation(line: 4761, column: 27, scope: !8715)
!8721 = !DILocation(line: 4761, column: 32, scope: !8715)
!8722 = !DILocation(line: 4761, column: 4, scope: !8715)
!8723 = !DILocation(line: 4763, column: 25, scope: !8715)
!8724 = !DILocation(line: 4763, column: 37, scope: !8715)
!8725 = !DILocation(line: 4763, column: 32, scope: !8715)
!8726 = !DILocation(line: 4763, column: 4, scope: !8715)
!8727 = !DILocation(line: 4765, column: 8, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 4765, column: 8)
!8729 = !DILocation(line: 4765, column: 21, scope: !8728)
!8730 = !DILocation(line: 4765, column: 50, scope: !8728)
!8731 = !DILocation(line: 4765, column: 53, scope: !8728)
!8732 = !DILocation(line: 4765, column: 60, scope: !8728)
!8733 = !DILocation(line: 4765, column: 65, scope: !8728)
!8734 = !DILocation(line: 4765, column: 8, scope: !8715)
!8735 = !DILocation(line: 4766, column: 23, scope: !8728)
!8736 = !DILocation(line: 4766, column: 33, scope: !8728)
!8737 = !DILocation(line: 4766, column: 28, scope: !8728)
!8738 = !DILocation(line: 4766, column: 5, scope: !8728)
!8739 = !DILocation(line: 4768, column: 4, scope: !8715)
!8740 = !DILocation(line: 4771, column: 12, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8712, file: !3, line: 4771, column: 12)
!8742 = !DILocation(line: 4771, column: 19, scope: !8741)
!8743 = !DILocation(line: 4771, column: 24, scope: !8741)
!8744 = !DILocation(line: 4771, column: 12, scope: !8712)
!8745 = !DILocation(line: 4772, column: 15, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 4771, column: 41)
!8747 = !DILocation(line: 4772, column: 4, scope: !8746)
!8748 = !DILocation(line: 4773, column: 4, scope: !8746)
!8749 = !DILocation(line: 4775, column: 12, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 4775, column: 12)
!8751 = !DILocation(line: 4775, column: 25, scope: !8750)
!8752 = !DILocation(line: 4775, column: 12, scope: !8741)
!8753 = !DILocation(line: 4776, column: 24, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 4775, column: 46)
!8755 = !DILocation(line: 4776, column: 31, scope: !8754)
!8756 = !DILocation(line: 4776, column: 17, scope: !8754)
!8757 = !DILocation(line: 4776, column: 4, scope: !8754)
!8758 = !DILocation(line: 4776, column: 10, scope: !8754)
!8759 = !DILocation(line: 4776, column: 15, scope: !8754)
!8760 = !DILocation(line: 4777, column: 16, scope: !8754)
!8761 = !DILocation(line: 4777, column: 21, scope: !8754)
!8762 = !DILocation(line: 4777, column: 27, scope: !8754)
!8763 = !DILocation(line: 4777, column: 4, scope: !8754)
!8764 = !DILocation(line: 4778, column: 3, scope: !8754)
!8765 = !DILocation(line: 4781, column: 7, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 4781, column: 7)
!8767 = !DILocation(line: 4781, column: 13, scope: !8766)
!8768 = !DILocation(line: 4781, column: 21, scope: !8766)
!8769 = !DILocation(line: 4781, column: 18, scope: !8766)
!8770 = !DILocation(line: 4781, column: 32, scope: !8766)
!8771 = !DILocation(line: 4781, column: 36, scope: !8766)
!8772 = !DILocation(line: 4781, column: 43, scope: !8766)
!8773 = !DILocation(line: 4781, column: 48, scope: !8766)
!8774 = !DILocation(line: 4781, column: 67, scope: !8766)
!8775 = !DILocation(line: 4781, column: 70, scope: !8766)
!8776 = !DILocation(line: 4781, column: 77, scope: !8766)
!8777 = !DILocation(line: 4781, column: 87, scope: !8766)
!8778 = !DILocation(line: 4781, column: 7, scope: !8706)
!8779 = !DILocation(line: 4782, column: 22, scope: !8766)
!8780 = !DILocation(line: 4782, column: 27, scope: !8766)
!8781 = !DILocation(line: 4782, column: 4, scope: !8766)
!8782 = !DILocation(line: 4783, column: 2, scope: !8706)
!8783 = !DILocation(line: 4785, column: 26, scope: !8703)
!8784 = !DILocation(line: 4785, column: 3, scope: !8703)
!8785 = !DILocation(line: 4789, column: 44, scope: !8559)
!8786 = !DILocation(line: 4789, column: 8, scope: !8559)
!8787 = !DILocation(line: 4789, column: 6, scope: !8559)
!8788 = !DILocation(line: 4791, column: 2, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 4791, column: 2)
!8790 = !DILocation(line: 4791, column: 2, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8789, file: !3, line: 4791, column: 2)
!8792 = !DILocation(line: 4792, column: 18, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 4792, column: 7)
!8794 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 4791, column: 17)
!8795 = !DILocation(line: 4792, column: 24, scope: !8793)
!8796 = !DILocation(line: 4792, column: 7, scope: !8793)
!8797 = !DILocation(line: 4792, column: 29, scope: !8793)
!8798 = !DILocation(line: 4792, column: 27, scope: !8793)
!8799 = !DILocation(line: 4792, column: 7, scope: !8794)
!8800 = !DILocation(line: 4793, column: 4, scope: !8793)
!8801 = !DILocation(line: 4793, column: 8, scope: !8793)
!8802 = !DILocation(line: 4793, column: 13, scope: !8793)
!8803 = !DILocation(line: 4795, column: 4, scope: !8793)
!8804 = !DILocation(line: 4795, column: 8, scope: !8793)
!8805 = !DILocation(line: 4795, column: 13, scope: !8793)
!8806 = !DILocation(line: 4796, column: 2, scope: !8794)
!8807 = distinct !{!8807, !8788, !8808}
!8808 = !DILocation(line: 4796, column: 2, scope: !8789)
!8809 = !DILocation(line: 4798, column: 6, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 4798, column: 6)
!8811 = !DILocation(line: 4798, column: 12, scope: !8810)
!8812 = !DILocation(line: 4798, column: 6, scope: !8559)
!8813 = !DILocalVariable(name: "dframe", scope: !8814, file: !3, line: 4799, type: !260)
!8814 = distinct !DILexicalBlock(scope: !8810, file: !3, line: 4798, column: 21)
!8815 = !DILocation(line: 4799, column: 7, scope: !8814)
!8816 = !DILocalVariable(name: "totframesback", scope: !8814, file: !3, line: 4799, type: !260)
!8817 = !DILocation(line: 4799, column: 15, scope: !8814)
!8818 = !DILocalVariable(name: "t_frac", scope: !8814, file: !3, line: 4800, type: !341)
!8819 = !DILocation(line: 4800, column: 9, scope: !8814)
!8820 = !DILocalVariable(name: "dt_frac", scope: !8814, file: !3, line: 4800, type: !341)
!8821 = !DILocation(line: 4800, column: 17, scope: !8814)
!8822 = !DILocation(line: 4804, column: 12, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 4804, column: 7)
!8824 = !DILocation(line: 4804, column: 7, scope: !8823)
!8825 = !DILocation(line: 4804, column: 20, scope: !8823)
!8826 = !DILocation(line: 4804, column: 17, scope: !8823)
!8827 = !DILocation(line: 4804, column: 31, scope: !8823)
!8828 = !DILocation(line: 4804, column: 34, scope: !8823)
!8829 = !DILocation(line: 4804, column: 40, scope: !8823)
!8830 = !DILocation(line: 4804, column: 46, scope: !8823)
!8831 = !DILocation(line: 4804, column: 44, scope: !8823)
!8832 = !DILocation(line: 4804, column: 7, scope: !8814)
!8833 = !DILocation(line: 4805, column: 21, scope: !8823)
!8834 = !DILocation(line: 4805, column: 39, scope: !8823)
!8835 = !DILocation(line: 4805, column: 45, scope: !8823)
!8836 = !DILocation(line: 4805, column: 34, scope: !8823)
!8837 = !DILocation(line: 4805, column: 32, scope: !8823)
!8838 = !DILocation(line: 4805, column: 18, scope: !8823)
!8839 = !DILocation(line: 4805, column: 4, scope: !8823)
!8840 = !DILocation(line: 4807, column: 9, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 4807, column: 7)
!8842 = !DILocation(line: 4807, column: 15, scope: !8841)
!8843 = !DILocation(line: 4807, column: 25, scope: !8841)
!8844 = !DILocation(line: 4807, column: 7, scope: !8814)
!8845 = !DILocation(line: 4809, column: 39, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 4807, column: 46)
!8847 = !DILocation(line: 4809, column: 20, scope: !8846)
!8848 = !DILocation(line: 4809, column: 4, scope: !8846)
!8849 = !DILocation(line: 4809, column: 10, scope: !8846)
!8850 = !DILocation(line: 4809, column: 18, scope: !8846)
!8851 = !DILocation(line: 4810, column: 3, scope: !8846)
!8852 = !DILocation(line: 4811, column: 17, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 4811, column: 12)
!8854 = !DILocation(line: 4811, column: 12, scope: !8853)
!8855 = !DILocation(line: 4811, column: 25, scope: !8853)
!8856 = !DILocation(line: 4811, column: 22, scope: !8853)
!8857 = !DILocation(line: 4811, column: 12, scope: !8841)
!8858 = !DILocation(line: 4813, column: 39, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 4811, column: 37)
!8860 = !DILocation(line: 4813, column: 20, scope: !8859)
!8861 = !DILocation(line: 4813, column: 4, scope: !8859)
!8862 = !DILocation(line: 4813, column: 10, scope: !8859)
!8863 = !DILocation(line: 4813, column: 18, scope: !8859)
!8864 = !DILocation(line: 4814, column: 3, scope: !8859)
!8865 = !DILocation(line: 4815, column: 12, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 4815, column: 12)
!8867 = !DILocation(line: 4815, column: 18, scope: !8866)
!8868 = !DILocation(line: 4815, column: 26, scope: !8866)
!8869 = !DILocation(line: 4815, column: 12, scope: !8853)
!8870 = !DILocation(line: 4817, column: 4, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 4815, column: 42)
!8872 = !DILocation(line: 4817, column: 10, scope: !8871)
!8873 = !DILocation(line: 4817, column: 18, scope: !8871)
!8874 = !DILocation(line: 4818, column: 3, scope: !8871)
!8875 = !DILocation(line: 4820, column: 16, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 4820, column: 3)
!8877 = !DILocation(line: 4820, column: 15, scope: !8876)
!8878 = !DILocation(line: 4820, column: 14, scope: !8876)
!8879 = !DILocation(line: 4820, column: 8, scope: !8876)
!8880 = !DILocation(line: 4820, column: 31, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8876, file: !3, line: 4820, column: 3)
!8882 = !DILocation(line: 4820, column: 37, scope: !8881)
!8883 = !DILocation(line: 4820, column: 3, scope: !8876)
!8884 = !DILocation(line: 4822, column: 14, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 4820, column: 52)
!8886 = !DILocation(line: 4822, column: 20, scope: !8885)
!8887 = !DILocation(line: 4822, column: 12, scope: !8885)
!8888 = !DILocation(line: 4823, column: 18, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 4823, column: 4)
!8890 = !DILocation(line: 4823, column: 16, scope: !8889)
!8891 = !DILocation(line: 4823, column: 9, scope: !8889)
!8892 = !DILocation(line: 4823, column: 27, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 4823, column: 4)
!8894 = !DILocation(line: 4823, column: 34, scope: !8893)
!8895 = !DILocation(line: 4823, column: 4, scope: !8889)
!8896 = !DILocation(line: 4824, column: 5, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8893, file: !3, line: 4823, column: 62)
!8898 = !DILocation(line: 4824, column: 10, scope: !8897)
!8899 = !DILocation(line: 4824, column: 22, scope: !8897)
!8900 = !DILocation(line: 4825, column: 19, scope: !8897)
!8901 = !DILocation(line: 4825, column: 24, scope: !8897)
!8902 = !DILocation(line: 4825, column: 29, scope: !8897)
!8903 = !DILocation(line: 4825, column: 28, scope: !8897)
!8904 = !DILocation(line: 4825, column: 36, scope: !8897)
!8905 = !DILocation(line: 4825, column: 35, scope: !8897)
!8906 = !DILocation(line: 4825, column: 43, scope: !8897)
!8907 = !DILocation(line: 4825, column: 5, scope: !8897)
!8908 = !DILocation(line: 4826, column: 18, scope: !8897)
!8909 = !DILocation(line: 4826, column: 23, scope: !8897)
!8910 = !DILocation(line: 4826, column: 22, scope: !8897)
!8911 = !DILocation(line: 4826, column: 30, scope: !8897)
!8912 = !DILocation(line: 4826, column: 29, scope: !8897)
!8913 = !DILocation(line: 4826, column: 37, scope: !8897)
!8914 = !DILocation(line: 4826, column: 5, scope: !8897)
!8915 = !DILocation(line: 4826, column: 11, scope: !8897)
!8916 = !DILocation(line: 4826, column: 16, scope: !8897)
!8917 = !DILocation(line: 4830, column: 9, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 4830, column: 9)
!8919 = !DILocation(line: 4830, column: 15, scope: !8918)
!8920 = !DILocation(line: 4830, column: 25, scope: !8918)
!8921 = !DILocation(line: 4830, column: 9, scope: !8897)
!8922 = !DILocation(line: 4831, column: 32, scope: !8918)
!8923 = !DILocation(line: 4831, column: 38, scope: !8918)
!8924 = !DILocation(line: 4831, column: 43, scope: !8918)
!8925 = !DILocation(line: 4831, column: 16, scope: !8918)
!8926 = !DILocation(line: 4831, column: 14, scope: !8918)
!8927 = !DILocation(line: 4831, column: 6, scope: !8918)
!8928 = !DILocation(line: 4832, column: 4, scope: !8897)
!8929 = !DILocation(line: 4823, column: 53, scope: !8893)
!8930 = !DILocation(line: 4823, column: 50, scope: !8893)
!8931 = !DILocation(line: 4823, column: 4, scope: !8893)
!8932 = distinct !{!8932, !8895, !8933}
!8933 = !DILocation(line: 4832, column: 4, scope: !8889)
!8934 = !DILocation(line: 4833, column: 3, scope: !8885)
!8935 = !DILocation(line: 4820, column: 48, scope: !8881)
!8936 = !DILocation(line: 4820, column: 3, scope: !8881)
!8937 = distinct !{!8937, !8883, !8938}
!8938 = !DILocation(line: 4833, column: 3, scope: !8876)
!8939 = !DILocation(line: 4834, column: 2, scope: !8814)
!8940 = !DILocation(line: 4837, column: 6, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 4837, column: 6)
!8942 = !DILocation(line: 4837, column: 6, scope: !8559)
!8943 = !DILocation(line: 4838, column: 24, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 4837, column: 11)
!8945 = !DILocation(line: 4838, column: 36, scope: !8944)
!8946 = !DILocation(line: 4838, column: 31, scope: !8944)
!8947 = !DILocation(line: 4838, column: 3, scope: !8944)
!8948 = !DILocation(line: 4839, column: 12, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8944, file: !3, line: 4839, column: 7)
!8950 = !DILocation(line: 4839, column: 7, scope: !8949)
!8951 = !DILocation(line: 4839, column: 26, scope: !8949)
!8952 = !DILocation(line: 4839, column: 23, scope: !8949)
!8953 = !DILocation(line: 4839, column: 7, scope: !8944)
!8954 = !DILocation(line: 4840, column: 22, scope: !8949)
!8955 = !DILocation(line: 4840, column: 32, scope: !8949)
!8956 = !DILocation(line: 4840, column: 27, scope: !8949)
!8957 = !DILocation(line: 4840, column: 4, scope: !8949)
!8958 = !DILocation(line: 4841, column: 2, scope: !8944)
!8959 = !DILocation(line: 4843, column: 18, scope: !8559)
!8960 = !DILocation(line: 4843, column: 2, scope: !8559)
!8961 = !DILocation(line: 4846, column: 6, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8559, file: !3, line: 4846, column: 6)
!8963 = !DILocation(line: 4846, column: 12, scope: !8962)
!8964 = !DILocation(line: 4846, column: 6, scope: !8559)
!8965 = !DILocation(line: 4847, column: 19, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 4846, column: 33)
!8967 = !DILocation(line: 4847, column: 25, scope: !8966)
!8968 = !DILocation(line: 4847, column: 3, scope: !8966)
!8969 = !DILocation(line: 4848, column: 3, scope: !8966)
!8970 = !DILocation(line: 4848, column: 9, scope: !8966)
!8971 = !DILocation(line: 4848, column: 29, scope: !8966)
!8972 = !DILocation(line: 4849, column: 2, scope: !8966)
!8973 = !DILocation(line: 4850, column: 1, scope: !8559)
!8974 = distinct !DISubprogram(name: "save_hair", scope: !3, file: !3, line: 4156, type: !8560, scopeLine: 4157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!8975 = !DILocalVariable(name: "sim", arg: 1, scope: !8974, file: !3, line: 4156, type: !3218)
!8976 = !DILocation(line: 4156, column: 47, scope: !8974)
!8977 = !DILocalVariable(name: "UNUSED_cfra", arg: 2, scope: !8974, file: !3, line: 4156, type: !341)
!8978 = !DILocation(line: 4156, column: 58, scope: !8974)
!8979 = !DILocalVariable(name: "ob", scope: !8974, file: !3, line: 4158, type: !3567)
!8980 = !DILocation(line: 4158, column: 10, scope: !8974)
!8981 = !DILocation(line: 4158, column: 15, scope: !8974)
!8982 = !DILocation(line: 4158, column: 20, scope: !8974)
!8983 = !DILocalVariable(name: "psys", scope: !8974, file: !3, line: 4159, type: !3144)
!8984 = !DILocation(line: 4159, column: 18, scope: !8974)
!8985 = !DILocation(line: 4159, column: 25, scope: !8974)
!8986 = !DILocation(line: 4159, column: 30, scope: !8974)
!8987 = !DILocalVariable(name: "key", scope: !8974, file: !3, line: 4160, type: !1978)
!8988 = !DILocation(line: 4160, column: 11, scope: !8974)
!8989 = !DILocalVariable(name: "root", scope: !8974, file: !3, line: 4160, type: !1978)
!8990 = !DILocation(line: 4160, column: 17, scope: !8974)
!8991 = !DILocalVariable(name: "pa", scope: !8974, file: !3, line: 4161, type: !2461)
!8992 = !DILocation(line: 4161, column: 2, scope: !8974)
!8993 = !DILocalVariable(name: "p", scope: !8974, file: !3, line: 4161, type: !260)
!8994 = !DILocation(line: 4163, column: 15, scope: !8974)
!8995 = !DILocation(line: 4163, column: 19, scope: !8974)
!8996 = !DILocation(line: 4163, column: 25, scope: !8974)
!8997 = !DILocation(line: 4163, column: 29, scope: !8974)
!8998 = !DILocation(line: 4163, column: 2, scope: !8974)
!8999 = !DILocation(line: 4165, column: 61, scope: !8974)
!9000 = !DILocation(line: 4165, column: 29, scope: !8974)
!9001 = !DILocation(line: 4165, column: 2, scope: !8974)
!9002 = !DILocation(line: 4165, column: 8, scope: !8974)
!9003 = !DILocation(line: 4165, column: 27, scope: !8974)
!9004 = !DILocation(line: 4167, column: 6, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 4167, column: 6)
!9006 = !DILocation(line: 4167, column: 12, scope: !9005)
!9007 = !DILocation(line: 4167, column: 19, scope: !9005)
!9008 = !DILocation(line: 4167, column: 6, scope: !8974)
!9009 = !DILocation(line: 4167, column: 24, scope: !9005)
!9010 = !DILocation(line: 4170, column: 2, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 4170, column: 2)
!9012 = !DILocation(line: 4170, column: 2, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9011, file: !3, line: 4170, column: 2)
!9014 = !DILocation(line: 4172, column: 7, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 4172, column: 7)
!9016 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 4170, column: 17)
!9017 = !DILocation(line: 4172, column: 11, scope: !9015)
!9018 = !DILocation(line: 4172, column: 17, scope: !9015)
!9019 = !DILocation(line: 4172, column: 21, scope: !9015)
!9020 = !DILocation(line: 4172, column: 24, scope: !9015)
!9021 = !DILocation(line: 4172, column: 28, scope: !9015)
!9022 = !DILocation(line: 4172, column: 32, scope: !9015)
!9023 = !DILocation(line: 4172, column: 7, scope: !9016)
!9024 = !DILocation(line: 4173, column: 15, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 4172, column: 40)
!9026 = !DILocation(line: 4173, column: 28, scope: !9025)
!9027 = !DILocation(line: 4173, column: 34, scope: !9025)
!9028 = !DILocation(line: 4173, column: 40, scope: !9025)
!9029 = !DILocation(line: 4173, column: 50, scope: !9025)
!9030 = !DILocation(line: 4173, column: 27, scope: !9025)
!9031 = !DILocation(line: 4173, column: 55, scope: !9025)
!9032 = !DILocation(line: 4173, column: 4, scope: !9025)
!9033 = !DILocation(line: 4173, column: 8, scope: !9025)
!9034 = !DILocation(line: 4173, column: 13, scope: !9025)
!9035 = !DILocation(line: 4174, column: 4, scope: !9025)
!9036 = !DILocation(line: 4174, column: 8, scope: !9025)
!9037 = !DILocation(line: 4174, column: 15, scope: !9025)
!9038 = !DILocation(line: 4175, column: 3, scope: !9025)
!9039 = !DILocation(line: 4177, column: 16, scope: !9016)
!9040 = !DILocation(line: 4177, column: 20, scope: !9016)
!9041 = !DILocation(line: 4177, column: 14, scope: !9016)
!9042 = !DILocation(line: 4177, column: 7, scope: !9016)
!9043 = !DILocation(line: 4178, column: 10, scope: !9016)
!9044 = !DILocation(line: 4178, column: 14, scope: !9016)
!9045 = !DILocation(line: 4178, column: 7, scope: !9016)
!9046 = !DILocation(line: 4181, column: 14, scope: !9016)
!9047 = !DILocation(line: 4181, column: 19, scope: !9016)
!9048 = !DILocation(line: 4181, column: 23, scope: !9016)
!9049 = !DILocation(line: 4181, column: 27, scope: !9016)
!9050 = !DILocation(line: 4181, column: 33, scope: !9016)
!9051 = !DILocation(line: 4181, column: 3, scope: !9016)
!9052 = !DILocation(line: 4182, column: 13, scope: !9016)
!9053 = !DILocation(line: 4182, column: 17, scope: !9016)
!9054 = !DILocation(line: 4182, column: 23, scope: !9016)
!9055 = !DILocation(line: 4182, column: 28, scope: !9016)
!9056 = !DILocation(line: 4182, column: 3, scope: !9016)
!9057 = !DILocation(line: 4184, column: 7, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 4184, column: 7)
!9059 = !DILocation(line: 4184, column: 11, scope: !9058)
!9060 = !DILocation(line: 4184, column: 7, scope: !9016)
!9061 = !DILocation(line: 4185, column: 14, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9058, file: !3, line: 4184, column: 19)
!9063 = !DILocation(line: 4185, column: 19, scope: !9062)
!9064 = !DILocation(line: 4185, column: 23, scope: !9062)
!9065 = !DILocation(line: 4185, column: 29, scope: !9062)
!9066 = !DILocation(line: 4185, column: 4, scope: !9062)
!9067 = !DILocation(line: 4186, column: 25, scope: !9062)
!9068 = !DILocation(line: 4186, column: 30, scope: !9062)
!9069 = !DILocation(line: 4186, column: 36, scope: !9062)
!9070 = !DILocation(line: 4186, column: 40, scope: !9062)
!9071 = !DILocation(line: 4186, column: 44, scope: !9062)
!9072 = !DILocation(line: 4186, column: 49, scope: !9062)
!9073 = !DILocation(line: 4186, column: 4, scope: !9062)
!9074 = !DILocation(line: 4187, column: 3, scope: !9062)
!9075 = !DILocation(line: 4189, column: 15, scope: !9016)
!9076 = !DILocation(line: 4189, column: 19, scope: !9016)
!9077 = !DILocation(line: 4189, column: 25, scope: !9016)
!9078 = !DILocation(line: 4189, column: 3, scope: !9016)
!9079 = !DILocation(line: 4189, column: 8, scope: !9016)
!9080 = !DILocation(line: 4189, column: 13, scope: !9016)
!9081 = !DILocation(line: 4191, column: 24, scope: !9016)
!9082 = !DILocation(line: 4191, column: 29, scope: !9016)
!9083 = !DILocation(line: 4191, column: 34, scope: !9016)
!9084 = !DILocation(line: 4191, column: 22, scope: !9016)
!9085 = !DILocation(line: 4191, column: 3, scope: !9016)
!9086 = !DILocation(line: 4191, column: 8, scope: !9016)
!9087 = !DILocation(line: 4191, column: 15, scope: !9016)
!9088 = !DILocation(line: 4193, column: 3, scope: !9016)
!9089 = !DILocation(line: 4193, column: 7, scope: !9016)
!9090 = !DILocation(line: 4193, column: 13, scope: !9016)
!9091 = !DILocation(line: 4196, column: 7, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 4196, column: 7)
!9093 = !DILocation(line: 4196, column: 11, scope: !9092)
!9094 = !DILocation(line: 4196, column: 21, scope: !9092)
!9095 = !DILocation(line: 4196, column: 27, scope: !9092)
!9096 = !DILocation(line: 4196, column: 33, scope: !9092)
!9097 = !DILocation(line: 4196, column: 43, scope: !9092)
!9098 = !DILocation(line: 4196, column: 18, scope: !9092)
!9099 = !DILocation(line: 4196, column: 7, scope: !9016)
!9100 = !DILocation(line: 4197, column: 12, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9092, file: !3, line: 4196, column: 48)
!9102 = !DILocation(line: 4197, column: 18, scope: !9101)
!9103 = !DILocation(line: 4197, column: 4, scope: !9101)
!9104 = !DILocation(line: 4198, column: 3, scope: !9101)
!9105 = !DILocation(line: 4200, column: 2, scope: !9016)
!9106 = distinct !{!9106, !9010, !9107}
!9107 = !DILocation(line: 4200, column: 2, scope: !9011)
!9108 = !DILocation(line: 4201, column: 1, scope: !8974)
!9109 = distinct !DISubprogram(name: "hair_step", scope: !3, file: !3, line: 4119, type: !8560, scopeLine: 4120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!9110 = !DILocalVariable(name: "sim", arg: 1, scope: !9109, file: !3, line: 4119, type: !3218)
!9111 = !DILocation(line: 4119, column: 47, scope: !9109)
!9112 = !DILocalVariable(name: "cfra", arg: 2, scope: !9109, file: !3, line: 4119, type: !341)
!9113 = !DILocation(line: 4119, column: 58, scope: !9109)
!9114 = !DILocalVariable(name: "psys", scope: !9109, file: !3, line: 4121, type: !3144)
!9115 = !DILocation(line: 4121, column: 18, scope: !9109)
!9116 = !DILocation(line: 4121, column: 25, scope: !9109)
!9117 = !DILocation(line: 4121, column: 30, scope: !9109)
!9118 = !DILocalVariable(name: "part", scope: !9109, file: !3, line: 4122, type: !2192)
!9119 = !DILocation(line: 4122, column: 20, scope: !9109)
!9120 = !DILocation(line: 4122, column: 27, scope: !9109)
!9121 = !DILocation(line: 4122, column: 33, scope: !9109)
!9122 = !DILocalVariable(name: "pa", scope: !9109, file: !3, line: 4123, type: !2461)
!9123 = !DILocation(line: 4123, column: 2, scope: !9109)
!9124 = !DILocalVariable(name: "p", scope: !9109, file: !3, line: 4123, type: !260)
!9125 = !DILocalVariable(name: "disp", scope: !9109, file: !3, line: 4124, type: !341)
!9126 = !DILocation(line: 4124, column: 8, scope: !9109)
!9127 = !DILocation(line: 4124, column: 51, scope: !9109)
!9128 = !DILocation(line: 4124, column: 15, scope: !9109)
!9129 = !DILocation(line: 4126, column: 2, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 4126, column: 2)
!9131 = !DILocation(line: 4126, column: 2, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 4126, column: 2)
!9133 = !DILocation(line: 4127, column: 14, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9132, file: !3, line: 4126, column: 17)
!9135 = !DILocation(line: 4127, column: 20, scope: !9134)
!9136 = !DILocation(line: 4127, column: 3, scope: !9134)
!9137 = !DILocation(line: 4127, column: 7, scope: !9134)
!9138 = !DILocation(line: 4127, column: 12, scope: !9134)
!9139 = !DILocation(line: 4128, column: 7, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 4128, column: 7)
!9141 = !DILocation(line: 4128, column: 13, scope: !9140)
!9142 = !DILocation(line: 4128, column: 22, scope: !9140)
!9143 = !DILocation(line: 4128, column: 7, scope: !9134)
!9144 = !DILocation(line: 4129, column: 23, scope: !9140)
!9145 = !DILocation(line: 4129, column: 29, scope: !9140)
!9146 = !DILocation(line: 4129, column: 51, scope: !9140)
!9147 = !DILocation(line: 4129, column: 57, scope: !9140)
!9148 = !DILocation(line: 4129, column: 59, scope: !9140)
!9149 = !DILocation(line: 4129, column: 40, scope: !9140)
!9150 = !DILocation(line: 4129, column: 38, scope: !9140)
!9151 = !DILocation(line: 4129, column: 21, scope: !9140)
!9152 = !DILocation(line: 4129, column: 4, scope: !9140)
!9153 = !DILocation(line: 4129, column: 8, scope: !9140)
!9154 = !DILocation(line: 4129, column: 13, scope: !9140)
!9155 = !DILocation(line: 4131, column: 18, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 4131, column: 7)
!9157 = !DILocation(line: 4131, column: 24, scope: !9156)
!9158 = !DILocation(line: 4131, column: 7, scope: !9156)
!9159 = !DILocation(line: 4131, column: 29, scope: !9156)
!9160 = !DILocation(line: 4131, column: 27, scope: !9156)
!9161 = !DILocation(line: 4131, column: 7, scope: !9134)
!9162 = !DILocation(line: 4132, column: 4, scope: !9156)
!9163 = !DILocation(line: 4132, column: 8, scope: !9156)
!9164 = !DILocation(line: 4132, column: 13, scope: !9156)
!9165 = !DILocation(line: 4134, column: 4, scope: !9156)
!9166 = !DILocation(line: 4134, column: 8, scope: !9156)
!9167 = !DILocation(line: 4134, column: 13, scope: !9156)
!9168 = !DILocation(line: 4135, column: 2, scope: !9134)
!9169 = distinct !{!9169, !9129, !9170}
!9170 = !DILocation(line: 4135, column: 2, scope: !9130)
!9171 = !DILocation(line: 4137, column: 6, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 4137, column: 6)
!9173 = !DILocation(line: 4137, column: 12, scope: !9172)
!9174 = !DILocation(line: 4137, column: 19, scope: !9172)
!9175 = !DILocation(line: 4137, column: 6, scope: !9109)
!9176 = !DILocation(line: 4139, column: 21, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 4137, column: 40)
!9178 = !DILocation(line: 4139, column: 26, scope: !9177)
!9179 = !DILocation(line: 4139, column: 30, scope: !9177)
!9180 = !DILocation(line: 4139, column: 35, scope: !9177)
!9181 = !DILocation(line: 4139, column: 41, scope: !9177)
!9182 = !DILocation(line: 4139, column: 45, scope: !9177)
!9183 = !DILocation(line: 4139, column: 3, scope: !9177)
!9184 = !DILocation(line: 4141, column: 7, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 4141, column: 7)
!9186 = !DILocation(line: 4141, column: 13, scope: !9185)
!9187 = !DILocation(line: 4141, column: 7, scope: !9177)
!9188 = !DILocation(line: 4142, column: 24, scope: !9185)
!9189 = !DILocation(line: 4142, column: 30, scope: !9185)
!9190 = !DILocation(line: 4142, column: 4, scope: !9185)
!9191 = !DILocation(line: 4143, column: 2, scope: !9177)
!9192 = !DILocation(line: 4146, column: 6, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 4146, column: 6)
!9194 = !DILocation(line: 4146, column: 12, scope: !9193)
!9195 = !DILocation(line: 4146, column: 18, scope: !9193)
!9196 = !DILocation(line: 4146, column: 22, scope: !9193)
!9197 = !DILocation(line: 4146, column: 34, scope: !9193)
!9198 = !DILocation(line: 4146, column: 37, scope: !9193)
!9199 = !DILocation(line: 4146, column: 43, scope: !9193)
!9200 = !DILocation(line: 4146, column: 48, scope: !9193)
!9201 = !DILocation(line: 4146, column: 69, scope: !9193)
!9202 = !DILocation(line: 4146, column: 72, scope: !9193)
!9203 = !DILocation(line: 4146, column: 78, scope: !9193)
!9204 = !DILocation(line: 4146, column: 6, scope: !9109)
!9205 = !DILocation(line: 4147, column: 20, scope: !9193)
!9206 = !DILocation(line: 4147, column: 3, scope: !9193)
!9207 = !DILocation(line: 4150, column: 24, scope: !9109)
!9208 = !DILocation(line: 4150, column: 2, scope: !9109)
!9209 = !DILocation(line: 4151, column: 25, scope: !9109)
!9210 = !DILocation(line: 4151, column: 30, scope: !9109)
!9211 = !DILocation(line: 4151, column: 2, scope: !9109)
!9212 = !DILocation(line: 4153, column: 2, scope: !9109)
!9213 = !DILocation(line: 4153, column: 8, scope: !9109)
!9214 = !DILocation(line: 4153, column: 13, scope: !9109)
!9215 = !DILocation(line: 4154, column: 1, scope: !9109)
!9216 = distinct !DISubprogram(name: "particles_fluid_step", scope: !3, file: !3, line: 4575, type: !9217, scopeLine: 4576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!9217 = !DISubroutineType(types: !9218)
!9218 = !{null, !3218, !260}
!9219 = !DILocalVariable(name: "sim", arg: 1, scope: !9216, file: !3, line: 4575, type: !3218)
!9220 = !DILocation(line: 4575, column: 58, scope: !9216)
!9221 = !DILocalVariable(name: "UNUSED_cfra", arg: 2, scope: !9216, file: !3, line: 4575, type: !260)
!9222 = !DILocation(line: 4575, column: 67, scope: !9216)
!9223 = !DILocalVariable(name: "psys", scope: !9216, file: !3, line: 4577, type: !3144)
!9224 = !DILocation(line: 4577, column: 18, scope: !9216)
!9225 = !DILocation(line: 4577, column: 25, scope: !9216)
!9226 = !DILocation(line: 4577, column: 30, scope: !9216)
!9227 = !DILocation(line: 4578, column: 6, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 4578, column: 6)
!9229 = !DILocation(line: 4578, column: 12, scope: !9228)
!9230 = !DILocation(line: 4578, column: 6, scope: !9216)
!9231 = !DILocation(line: 4579, column: 3, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9228, file: !3, line: 4578, column: 23)
!9233 = !DILocation(line: 4579, column: 13, scope: !9232)
!9234 = !DILocation(line: 4579, column: 19, scope: !9232)
!9235 = !DILocation(line: 4580, column: 3, scope: !9232)
!9236 = !DILocation(line: 4580, column: 9, scope: !9232)
!9237 = !DILocation(line: 4580, column: 19, scope: !9232)
!9238 = !DILocation(line: 4581, column: 3, scope: !9232)
!9239 = !DILocation(line: 4581, column: 9, scope: !9232)
!9240 = !DILocation(line: 4581, column: 17, scope: !9232)
!9241 = !DILocation(line: 4582, column: 2, scope: !9232)
!9242 = !DILocation(line: 4680, column: 1, scope: !9216)
!9243 = distinct !DISubprogram(name: "emit_particles", scope: !3, file: !3, line: 4682, type: !9244, scopeLine: 4683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!9244 = !DISubroutineType(types: !9245)
!9245 = !{!260, !3218, !3512, !341}
!9246 = !DILocalVariable(name: "sim", arg: 1, scope: !9243, file: !3, line: 4682, type: !3218)
!9247 = !DILocation(line: 4682, column: 51, scope: !9243)
!9248 = !DILocalVariable(name: "pid", arg: 2, scope: !9243, file: !3, line: 4682, type: !3512)
!9249 = !DILocation(line: 4682, column: 67, scope: !9243)
!9250 = !DILocalVariable(name: "UNUSED_cfra", arg: 3, scope: !9243, file: !3, line: 4682, type: !341)
!9251 = !DILocation(line: 4682, column: 78, scope: !9243)
!9252 = !DILocalVariable(name: "psys", scope: !9243, file: !3, line: 4684, type: !3144)
!9253 = !DILocation(line: 4684, column: 18, scope: !9243)
!9254 = !DILocation(line: 4684, column: 25, scope: !9243)
!9255 = !DILocation(line: 4684, column: 30, scope: !9243)
!9256 = !DILocalVariable(name: "oldtotpart", scope: !9243, file: !3, line: 4685, type: !260)
!9257 = !DILocation(line: 4685, column: 6, scope: !9243)
!9258 = !DILocation(line: 4685, column: 19, scope: !9243)
!9259 = !DILocation(line: 4685, column: 25, scope: !9243)
!9260 = !DILocalVariable(name: "totpart", scope: !9243, file: !3, line: 4686, type: !260)
!9261 = !DILocation(line: 4686, column: 6, scope: !9243)
!9262 = !DILocation(line: 4686, column: 30, scope: !9243)
!9263 = !DILocation(line: 4686, column: 36, scope: !9243)
!9264 = !DILocation(line: 4686, column: 16, scope: !9243)
!9265 = !DILocation(line: 4688, column: 6, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 4688, column: 6)
!9267 = !DILocation(line: 4688, column: 17, scope: !9266)
!9268 = !DILocation(line: 4688, column: 14, scope: !9266)
!9269 = !DILocation(line: 4688, column: 6, scope: !9243)
!9270 = !DILocation(line: 4689, column: 21, scope: !9266)
!9271 = !DILocation(line: 4689, column: 26, scope: !9266)
!9272 = !DILocation(line: 4689, column: 3, scope: !9266)
!9273 = !DILocation(line: 4691, column: 9, scope: !9243)
!9274 = !DILocation(line: 4691, column: 19, scope: !9243)
!9275 = !DILocation(line: 4691, column: 17, scope: !9243)
!9276 = !DILocation(line: 4691, column: 2, scope: !9243)
!9277 = distinct !DISubprogram(name: "distribute_particles", scope: !3, file: !3, line: 1451, type: !9217, scopeLine: 1452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!9278 = !DILocalVariable(name: "sim", arg: 1, scope: !9277, file: !3, line: 1451, type: !3218)
!9279 = !DILocation(line: 1451, column: 58, scope: !9277)
!9280 = !DILocalVariable(name: "from", arg: 2, scope: !9277, file: !3, line: 1451, type: !260)
!9281 = !DILocation(line: 1451, column: 67, scope: !9277)
!9282 = !DILocalVariable(name: "psmd", scope: !9277, file: !3, line: 1453, type: !9283)
!9283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9284, size: 64)
!9284 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSystemModifierData", file: !96, line: 672, baseType: !3227)
!9285 = !DILocation(line: 1453, column: 2, scope: !9277)
!9286 = !DILocalVariable(name: "distr_error", scope: !9277, file: !3, line: 1454, type: !260)
!9287 = !DILocation(line: 1454, column: 6, scope: !9277)
!9288 = !DILocation(line: 1456, column: 6, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 1456, column: 6)
!9290 = !DILocation(line: 1456, column: 6, scope: !9277)
!9291 = !DILocation(line: 1457, column: 7, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !3, line: 1457, column: 7)
!9293 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 1456, column: 12)
!9294 = !DILocation(line: 1457, column: 13, scope: !9292)
!9295 = !DILocation(line: 1457, column: 7, scope: !9293)
!9296 = !DILocation(line: 1458, column: 31, scope: !9292)
!9297 = !DILocation(line: 1458, column: 36, scope: !9292)
!9298 = !DILocation(line: 1458, column: 4, scope: !9292)
!9299 = !DILocation(line: 1460, column: 15, scope: !9292)
!9300 = !DILocation(line: 1461, column: 2, scope: !9293)
!9301 = !DILocation(line: 1463, column: 33, scope: !9289)
!9302 = !DILocation(line: 1463, column: 38, scope: !9289)
!9303 = !DILocation(line: 1463, column: 3, scope: !9289)
!9304 = !DILocation(line: 1465, column: 6, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 1465, column: 6)
!9306 = !DILocation(line: 1465, column: 6, scope: !9277)
!9307 = !DILocation(line: 1466, column: 22, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 1465, column: 19)
!9309 = !DILocation(line: 1466, column: 27, scope: !9308)
!9310 = !DILocation(line: 1466, column: 34, scope: !9308)
!9311 = !DILocation(line: 1466, column: 39, scope: !9308)
!9312 = !DILocation(line: 1466, column: 45, scope: !9308)
!9313 = !DILocation(line: 1466, column: 3, scope: !9308)
!9314 = !DILocation(line: 1468, column: 11, scope: !9308)
!9315 = !DILocation(line: 1468, column: 3, scope: !9308)
!9316 = !DILocation(line: 1469, column: 2, scope: !9308)
!9317 = !DILocation(line: 1470, column: 1, scope: !9277)
!9318 = distinct !DISubprogram(name: "initialize_all_particles", scope: !3, file: !3, line: 1581, type: !5676, scopeLine: 1582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!9319 = !DILocalVariable(name: "sim", arg: 1, scope: !9318, file: !3, line: 1581, type: !3218)
!9320 = !DILocation(line: 1581, column: 62, scope: !9318)
!9321 = !DILocalVariable(name: "psys", scope: !9318, file: !3, line: 1583, type: !3144)
!9322 = !DILocation(line: 1583, column: 18, scope: !9318)
!9323 = !DILocation(line: 1583, column: 25, scope: !9318)
!9324 = !DILocation(line: 1583, column: 30, scope: !9318)
!9325 = !DILocalVariable(name: "pa", scope: !9318, file: !3, line: 1584, type: !2461)
!9326 = !DILocation(line: 1584, column: 2, scope: !9318)
!9327 = !DILocalVariable(name: "p", scope: !9318, file: !3, line: 1584, type: !260)
!9328 = !DILocation(line: 1586, column: 2, scope: !9318)
!9329 = !DILocation(line: 1586, column: 8, scope: !9318)
!9330 = !DILocation(line: 1586, column: 19, scope: !9318)
!9331 = !DILocation(line: 1588, column: 2, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 1588, column: 2)
!9333 = !DILocation(line: 1588, column: 2, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9332, file: !3, line: 1588, column: 2)
!9335 = !DILocation(line: 1589, column: 8, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 1589, column: 7)
!9337 = distinct !DILexicalBlock(scope: !9334, file: !3, line: 1588, column: 17)
!9338 = !DILocation(line: 1589, column: 12, scope: !9336)
!9339 = !DILocation(line: 1589, column: 17, scope: !9336)
!9340 = !DILocation(line: 1589, column: 32, scope: !9336)
!9341 = !DILocation(line: 1589, column: 7, scope: !9337)
!9342 = !DILocation(line: 1590, column: 24, scope: !9336)
!9343 = !DILocation(line: 1590, column: 29, scope: !9336)
!9344 = !DILocation(line: 1590, column: 4, scope: !9336)
!9345 = !DILocation(line: 1592, column: 7, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 1592, column: 7)
!9347 = !DILocation(line: 1592, column: 11, scope: !9346)
!9348 = !DILocation(line: 1592, column: 16, scope: !9346)
!9349 = !DILocation(line: 1592, column: 7, scope: !9337)
!9350 = !DILocation(line: 1593, column: 4, scope: !9346)
!9351 = !DILocation(line: 1593, column: 10, scope: !9346)
!9352 = !DILocation(line: 1593, column: 20, scope: !9346)
!9353 = !DILocation(line: 1594, column: 2, scope: !9337)
!9354 = distinct !{!9354, !9331, !9355}
!9355 = !DILocation(line: 1594, column: 2, scope: !9332)
!9356 = !DILocation(line: 1597, column: 6, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 1597, column: 6)
!9358 = !DILocation(line: 1597, column: 12, scope: !9357)
!9359 = !DILocation(line: 1597, column: 20, scope: !9357)
!9360 = !DILocation(line: 1597, column: 23, scope: !9357)
!9361 = !DILocation(line: 1597, column: 29, scope: !9357)
!9362 = !DILocation(line: 1597, column: 43, scope: !9357)
!9363 = !DILocation(line: 1597, column: 49, scope: !9357)
!9364 = !DILocation(line: 1597, column: 40, scope: !9357)
!9365 = !DILocation(line: 1597, column: 6, scope: !9318)
!9366 = !DILocation(line: 1598, column: 7, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9368, file: !3, line: 1598, column: 7)
!9368 = distinct !DILexicalBlock(scope: !9357, file: !3, line: 1597, column: 58)
!9369 = !DILocation(line: 1598, column: 13, scope: !9367)
!9370 = !DILocation(line: 1598, column: 24, scope: !9367)
!9371 = !DILocation(line: 1598, column: 7, scope: !9368)
!9372 = !DILocation(line: 1599, column: 4, scope: !9367)
!9373 = !DILocation(line: 1599, column: 14, scope: !9367)
!9374 = !DILocation(line: 1599, column: 20, scope: !9367)
!9375 = !DILocation(line: 1599, column: 31, scope: !9367)
!9376 = !DILocation(line: 1601, column: 3, scope: !9368)
!9377 = !DILocation(line: 1601, column: 13, scope: !9368)
!9378 = !DILocation(line: 1601, column: 19, scope: !9368)
!9379 = !DILocation(line: 1602, column: 3, scope: !9368)
!9380 = !DILocation(line: 1602, column: 9, scope: !9368)
!9381 = !DILocation(line: 1602, column: 19, scope: !9368)
!9382 = !DILocation(line: 1603, column: 19, scope: !9368)
!9383 = !DILocation(line: 1603, column: 25, scope: !9368)
!9384 = !DILocation(line: 1603, column: 36, scope: !9368)
!9385 = !DILocation(line: 1603, column: 3, scope: !9368)
!9386 = !DILocation(line: 1603, column: 9, scope: !9368)
!9387 = !DILocation(line: 1603, column: 17, scope: !9368)
!9388 = !DILocation(line: 1604, column: 2, scope: !9368)
!9389 = !DILocation(line: 1606, column: 6, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 1606, column: 6)
!9391 = !DILocation(line: 1606, column: 12, scope: !9390)
!9392 = !DILocation(line: 1606, column: 6, scope: !9318)
!9393 = !DILocalVariable(name: "newtotpart", scope: !9394, file: !3, line: 1607, type: !260)
!9394 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 1606, column: 24)
!9395 = !DILocation(line: 1607, column: 7, scope: !9394)
!9396 = !DILocation(line: 1607, column: 20, scope: !9394)
!9397 = !DILocation(line: 1607, column: 26, scope: !9394)
!9398 = !DILocation(line: 1607, column: 36, scope: !9394)
!9399 = !DILocation(line: 1607, column: 42, scope: !9394)
!9400 = !DILocation(line: 1607, column: 34, scope: !9394)
!9401 = !DILocalVariable(name: "npa", scope: !9394, file: !3, line: 1608, type: !2461)
!9402 = !DILocation(line: 1608, column: 17, scope: !9394)
!9403 = !DILocalVariable(name: "newpars", scope: !9394, file: !3, line: 1608, type: !2461)
!9404 = !DILocation(line: 1608, column: 23, scope: !9394)
!9405 = !DILocation(line: 1610, column: 19, scope: !9394)
!9406 = !DILocation(line: 1610, column: 31, scope: !9394)
!9407 = !DILocation(line: 1610, column: 42, scope: !9394)
!9408 = !DILocation(line: 1610, column: 17, scope: !9394)
!9409 = !DILocation(line: 1610, column: 7, scope: !9394)
!9410 = !DILocation(line: 1612, column: 9, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1612, column: 3)
!9412 = !DILocation(line: 1612, column: 16, scope: !9411)
!9413 = !DILocation(line: 1612, column: 22, scope: !9411)
!9414 = !DILocation(line: 1612, column: 15, scope: !9411)
!9415 = !DILocation(line: 1612, column: 8, scope: !9411)
!9416 = !DILocation(line: 1612, column: 33, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9411, file: !3, line: 1612, column: 3)
!9418 = !DILocation(line: 1612, column: 35, scope: !9417)
!9419 = !DILocation(line: 1612, column: 34, scope: !9417)
!9420 = !DILocation(line: 1612, column: 3, scope: !9411)
!9421 = !DILocation(line: 1613, column: 4, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9417, file: !3, line: 1612, column: 65)
!9423 = !DILocation(line: 1613, column: 11, scope: !9422)
!9424 = !DILocation(line: 1613, column: 15, scope: !9422)
!9425 = !DILocation(line: 1613, column: 20, scope: !9422)
!9426 = !DILocation(line: 1614, column: 7, scope: !9422)
!9427 = distinct !{!9427, !9421, !9426}
!9428 = !DILocation(line: 1616, column: 11, scope: !9422)
!9429 = !DILocation(line: 1616, column: 4, scope: !9422)
!9430 = !DILocation(line: 1616, column: 16, scope: !9422)
!9431 = !DILocation(line: 1617, column: 3, scope: !9422)
!9432 = !DILocation(line: 1612, column: 48, scope: !9417)
!9433 = !DILocation(line: 1612, column: 54, scope: !9417)
!9434 = !DILocation(line: 1612, column: 61, scope: !9417)
!9435 = !DILocation(line: 1612, column: 3, scope: !9417)
!9436 = distinct !{!9436, !9420, !9437}
!9437 = !DILocation(line: 1617, column: 3, scope: !9411)
!9438 = !DILocation(line: 1619, column: 7, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1619, column: 7)
!9440 = !DILocation(line: 1619, column: 13, scope: !9439)
!9441 = !DILocation(line: 1619, column: 24, scope: !9439)
!9442 = !DILocation(line: 1619, column: 7, scope: !9394)
!9443 = !DILocation(line: 1620, column: 4, scope: !9439)
!9444 = !DILocation(line: 1620, column: 14, scope: !9439)
!9445 = !DILocation(line: 1620, column: 20, scope: !9439)
!9446 = !DILocation(line: 1620, column: 31, scope: !9439)
!9447 = !DILocation(line: 1621, column: 3, scope: !9394)
!9448 = !DILocation(line: 1621, column: 13, scope: !9394)
!9449 = !DILocation(line: 1621, column: 19, scope: !9394)
!9450 = !DILocation(line: 1622, column: 21, scope: !9394)
!9451 = !DILocation(line: 1622, column: 3, scope: !9394)
!9452 = !DILocation(line: 1622, column: 9, scope: !9394)
!9453 = !DILocation(line: 1622, column: 19, scope: !9394)
!9454 = !DILocation(line: 1623, column: 20, scope: !9394)
!9455 = !DILocation(line: 1623, column: 26, scope: !9394)
!9456 = !DILocation(line: 1623, column: 3, scope: !9394)
!9457 = !DILocation(line: 1623, column: 9, scope: !9394)
!9458 = !DILocation(line: 1623, column: 17, scope: !9394)
!9459 = !DILocation(line: 1625, column: 7, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1625, column: 7)
!9461 = !DILocation(line: 1625, column: 13, scope: !9460)
!9462 = !DILocation(line: 1625, column: 24, scope: !9460)
!9463 = !DILocation(line: 1625, column: 7, scope: !9394)
!9464 = !DILocalVariable(name: "newboids", scope: !9465, file: !3, line: 1626, type: !1990)
!9465 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 1625, column: 30)
!9466 = !DILocation(line: 1626, column: 18, scope: !9465)
!9467 = !DILocation(line: 1626, column: 29, scope: !9465)
!9468 = !DILocation(line: 1626, column: 41, scope: !9465)
!9469 = !DILocation(line: 1626, column: 47, scope: !9465)
!9470 = !DILocation(line: 1626, column: 55, scope: !9465)
!9471 = !DILocation(line: 1628, column: 4, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9465, file: !3, line: 1628, column: 4)
!9473 = !DILocation(line: 1628, column: 4, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 1628, column: 4)
!9475 = !DILocation(line: 1629, column: 24, scope: !9474)
!9476 = !DILocation(line: 1629, column: 5, scope: !9474)
!9477 = !DILocation(line: 1629, column: 9, scope: !9474)
!9478 = !DILocation(line: 1629, column: 14, scope: !9474)
!9479 = distinct !{!9479, !9471, !9480}
!9480 = !DILocation(line: 1629, column: 24, scope: !9472)
!9481 = !DILocation(line: 1631, column: 3, scope: !9465)
!9482 = !DILocation(line: 1632, column: 2, scope: !9394)
!9483 = !DILocation(line: 1633, column: 1, scope: !9318)
!9484 = distinct !DISubprogram(name: "set_keyed_keys", scope: !3, file: !3, line: 2122, type: !5676, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!9485 = !DILocalVariable(name: "sim", arg: 1, scope: !9484, file: !3, line: 2122, type: !3218)
!9486 = !DILocation(line: 2122, column: 52, scope: !9484)
!9487 = !DILocalVariable(name: "psys", scope: !9484, file: !3, line: 2124, type: !3144)
!9488 = !DILocation(line: 2124, column: 18, scope: !9484)
!9489 = !DILocation(line: 2124, column: 25, scope: !9484)
!9490 = !DILocation(line: 2124, column: 30, scope: !9484)
!9491 = !DILocalVariable(name: "ksim", scope: !9484, file: !3, line: 2125, type: !3219)
!9492 = !DILocation(line: 2125, column: 25, scope: !9484)
!9493 = !DILocalVariable(name: "pt", scope: !9484, file: !3, line: 2126, type: !5619)
!9494 = !DILocation(line: 2126, column: 18, scope: !9484)
!9495 = !DILocalVariable(name: "pa", scope: !9484, file: !3, line: 2127, type: !2461)
!9496 = !DILocation(line: 2127, column: 2, scope: !9484)
!9497 = !DILocalVariable(name: "p", scope: !9484, file: !3, line: 2127, type: !260)
!9498 = !DILocalVariable(name: "key", scope: !9484, file: !3, line: 2128, type: !1988)
!9499 = !DILocation(line: 2128, column: 15, scope: !9484)
!9500 = !DILocalVariable(name: "totpart", scope: !9484, file: !3, line: 2129, type: !260)
!9501 = !DILocation(line: 2129, column: 6, scope: !9484)
!9502 = !DILocation(line: 2129, column: 16, scope: !9484)
!9503 = !DILocation(line: 2129, column: 22, scope: !9484)
!9504 = !DILocalVariable(name: "k", scope: !9484, file: !3, line: 2129, type: !260)
!9505 = !DILocation(line: 2129, column: 31, scope: !9484)
!9506 = !DILocalVariable(name: "totkeys", scope: !9484, file: !3, line: 2129, type: !260)
!9507 = !DILocation(line: 2129, column: 34, scope: !9484)
!9508 = !DILocation(line: 2129, column: 44, scope: !9484)
!9509 = !DILocation(line: 2129, column: 50, scope: !9484)
!9510 = !DILocalVariable(name: "keyed_flag", scope: !9484, file: !3, line: 2130, type: !260)
!9511 = !DILocation(line: 2130, column: 6, scope: !9484)
!9512 = !DILocation(line: 2132, column: 14, scope: !9484)
!9513 = !DILocation(line: 2132, column: 19, scope: !9484)
!9514 = !DILocation(line: 2132, column: 7, scope: !9484)
!9515 = !DILocation(line: 2132, column: 12, scope: !9484)
!9516 = !DILocation(line: 2135, column: 6, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 2135, column: 6)
!9518 = !DILocation(line: 2135, column: 12, scope: !9517)
!9519 = !DILocation(line: 2135, column: 20, scope: !9517)
!9520 = !DILocation(line: 2135, column: 6, scope: !9484)
!9521 = !DILocation(line: 2136, column: 19, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9517, file: !3, line: 2135, column: 25)
!9523 = !DILocation(line: 2136, column: 3, scope: !9522)
!9524 = !DILocation(line: 2137, column: 3, scope: !9522)
!9525 = !DILocation(line: 2137, column: 9, scope: !9522)
!9526 = !DILocation(line: 2137, column: 14, scope: !9522)
!9527 = !DILocation(line: 2138, column: 3, scope: !9522)
!9528 = !DILocation(line: 2141, column: 6, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 2141, column: 6)
!9530 = !DILocation(line: 2141, column: 14, scope: !9529)
!9531 = !DILocation(line: 2141, column: 17, scope: !9529)
!9532 = !DILocation(line: 2141, column: 23, scope: !9529)
!9533 = !DILocation(line: 2141, column: 34, scope: !9529)
!9534 = !DILocation(line: 2141, column: 44, scope: !9529)
!9535 = !DILocation(line: 2141, column: 41, scope: !9529)
!9536 = !DILocation(line: 2141, column: 6, scope: !9484)
!9537 = !DILocation(line: 2142, column: 19, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 2141, column: 53)
!9539 = !DILocation(line: 2142, column: 3, scope: !9538)
!9540 = !DILocation(line: 2144, column: 9, scope: !9538)
!9541 = !DILocation(line: 2144, column: 21, scope: !9538)
!9542 = !DILocation(line: 2144, column: 29, scope: !9538)
!9543 = !DILocation(line: 2144, column: 28, scope: !9538)
!9544 = !DILocation(line: 2144, column: 36, scope: !9538)
!9545 = !DILocation(line: 2144, column: 7, scope: !9538)
!9546 = !DILocation(line: 2146, column: 3, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 2146, column: 3)
!9548 = !DILocation(line: 2146, column: 3, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9547, file: !3, line: 2146, column: 3)
!9550 = !DILocation(line: 2147, column: 15, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 2146, column: 18)
!9552 = !DILocation(line: 2147, column: 4, scope: !9551)
!9553 = !DILocation(line: 2147, column: 8, scope: !9551)
!9554 = !DILocation(line: 2147, column: 13, scope: !9551)
!9555 = !DILocation(line: 2148, column: 17, scope: !9551)
!9556 = !DILocation(line: 2148, column: 4, scope: !9551)
!9557 = !DILocation(line: 2148, column: 8, scope: !9551)
!9558 = !DILocation(line: 2148, column: 15, scope: !9551)
!9559 = !DILocation(line: 2149, column: 11, scope: !9551)
!9560 = !DILocation(line: 2149, column: 8, scope: !9551)
!9561 = !DILocation(line: 2150, column: 3, scope: !9551)
!9562 = distinct !{!9562, !9546, !9563}
!9563 = !DILocation(line: 2150, column: 3, scope: !9547)
!9564 = !DILocation(line: 2151, column: 2, scope: !9538)
!9565 = !DILocation(line: 2153, column: 2, scope: !9484)
!9566 = !DILocation(line: 2153, column: 8, scope: !9484)
!9567 = !DILocation(line: 2153, column: 13, scope: !9484)
!9568 = !DILocation(line: 2156, column: 7, scope: !9484)
!9569 = !DILocation(line: 2156, column: 13, scope: !9484)
!9570 = !DILocation(line: 2156, column: 21, scope: !9484)
!9571 = !DILocation(line: 2156, column: 5, scope: !9484)
!9572 = !DILocation(line: 2157, column: 8, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 2157, column: 2)
!9574 = !DILocation(line: 2157, column: 7, scope: !9573)
!9575 = !DILocation(line: 2157, column: 12, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 2157, column: 2)
!9577 = !DILocation(line: 2157, column: 14, scope: !9576)
!9578 = !DILocation(line: 2157, column: 13, scope: !9576)
!9579 = !DILocation(line: 2157, column: 2, scope: !9573)
!9580 = !DILocation(line: 2158, column: 13, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9576, file: !3, line: 2157, column: 28)
!9582 = !DILocation(line: 2158, column: 17, scope: !9581)
!9583 = !DILocation(line: 2158, column: 22, scope: !9581)
!9584 = !DILocation(line: 2158, column: 26, scope: !9581)
!9585 = !DILocation(line: 2158, column: 31, scope: !9581)
!9586 = !DILocation(line: 2158, column: 36, scope: !9581)
!9587 = !DILocation(line: 2158, column: 8, scope: !9581)
!9588 = !DILocation(line: 2158, column: 11, scope: !9581)
!9589 = !DILocation(line: 2159, column: 34, scope: !9581)
!9590 = !DILocation(line: 2159, column: 38, scope: !9581)
!9591 = !DILocation(line: 2159, column: 54, scope: !9581)
!9592 = !DILocation(line: 2159, column: 58, scope: !9581)
!9593 = !DILocation(line: 2159, column: 63, scope: !9581)
!9594 = !DILocation(line: 2159, column: 15, scope: !9581)
!9595 = !DILocation(line: 2159, column: 8, scope: !9581)
!9596 = !DILocation(line: 2159, column: 13, scope: !9581)
!9597 = !DILocation(line: 2160, column: 22, scope: !9581)
!9598 = !DILocation(line: 2160, column: 28, scope: !9581)
!9599 = !DILocation(line: 2160, column: 33, scope: !9581)
!9600 = !DILocation(line: 2160, column: 14, scope: !9581)
!9601 = !DILocation(line: 2161, column: 8, scope: !9581)
!9602 = !DILocation(line: 2161, column: 14, scope: !9581)
!9603 = !DILocation(line: 2161, column: 19, scope: !9581)
!9604 = !DILocation(line: 2163, column: 3, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 2163, column: 3)
!9606 = !DILocation(line: 2163, column: 3, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 2163, column: 3)
!9608 = !DILocation(line: 2164, column: 10, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9607, file: !3, line: 2163, column: 18)
!9610 = !DILocation(line: 2164, column: 14, scope: !9609)
!9611 = !DILocation(line: 2164, column: 21, scope: !9609)
!9612 = !DILocation(line: 2164, column: 19, scope: !9609)
!9613 = !DILocation(line: 2164, column: 8, scope: !9609)
!9614 = !DILocation(line: 2165, column: 4, scope: !9609)
!9615 = !DILocation(line: 2165, column: 9, scope: !9609)
!9616 = !DILocation(line: 2165, column: 14, scope: !9609)
!9617 = !DILocation(line: 2167, column: 35, scope: !9609)
!9618 = !DILocation(line: 2167, column: 42, scope: !9609)
!9619 = !DILocation(line: 2167, column: 48, scope: !9609)
!9620 = !DILocation(line: 2167, column: 36, scope: !9609)
!9621 = !DILocation(line: 2167, column: 57, scope: !9609)
!9622 = !DILocation(line: 2167, column: 4, scope: !9609)
!9623 = !DILocation(line: 2169, column: 8, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 2169, column: 8)
!9625 = !DILocation(line: 2169, column: 14, scope: !9624)
!9626 = !DILocation(line: 2169, column: 19, scope: !9624)
!9627 = !DILocation(line: 2169, column: 8, scope: !9609)
!9628 = !DILocation(line: 2170, column: 17, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 2169, column: 40)
!9630 = !DILocation(line: 2170, column: 21, scope: !9629)
!9631 = !DILocation(line: 2170, column: 28, scope: !9629)
!9632 = !DILocation(line: 2170, column: 32, scope: !9629)
!9633 = !DILocation(line: 2170, column: 26, scope: !9629)
!9634 = !DILocation(line: 2170, column: 5, scope: !9629)
!9635 = !DILocation(line: 2170, column: 10, scope: !9629)
!9636 = !DILocation(line: 2170, column: 15, scope: !9629)
!9637 = !DILocation(line: 2171, column: 9, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9629, file: !3, line: 2171, column: 9)
!9639 = !DILocation(line: 2171, column: 13, scope: !9638)
!9640 = !DILocation(line: 2171, column: 22, scope: !9638)
!9641 = !DILocation(line: 2171, column: 30, scope: !9638)
!9642 = !DILocation(line: 2171, column: 33, scope: !9638)
!9643 = !DILocation(line: 2171, column: 34, scope: !9638)
!9644 = !DILocation(line: 2171, column: 39, scope: !9638)
!9645 = !DILocation(line: 2171, column: 37, scope: !9638)
!9646 = !DILocation(line: 2171, column: 9, scope: !9629)
!9647 = !DILocation(line: 2172, column: 24, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 2171, column: 48)
!9649 = !DILocation(line: 2172, column: 27, scope: !9648)
!9650 = !DILocation(line: 2172, column: 31, scope: !9648)
!9651 = !DILocation(line: 2172, column: 6, scope: !9648)
!9652 = !DILocation(line: 2173, column: 22, scope: !9648)
!9653 = !DILocation(line: 2173, column: 26, scope: !9648)
!9654 = !DILocation(line: 2173, column: 33, scope: !9648)
!9655 = !DILocation(line: 2173, column: 37, scope: !9648)
!9656 = !DILocation(line: 2173, column: 31, scope: !9648)
!9657 = !DILocation(line: 2173, column: 44, scope: !9648)
!9658 = !DILocation(line: 2173, column: 48, scope: !9648)
!9659 = !DILocation(line: 2173, column: 42, scope: !9648)
!9660 = !DILocation(line: 2173, column: 7, scope: !9648)
!9661 = !DILocation(line: 2173, column: 10, scope: !9648)
!9662 = !DILocation(line: 2173, column: 15, scope: !9648)
!9663 = !DILocation(line: 2173, column: 20, scope: !9648)
!9664 = !DILocation(line: 2174, column: 5, scope: !9648)
!9665 = !DILocation(line: 2175, column: 4, scope: !9629)
!9666 = !DILocation(line: 2176, column: 13, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 2176, column: 13)
!9668 = !DILocation(line: 2176, column: 21, scope: !9667)
!9669 = !DILocation(line: 2176, column: 13, scope: !9624)
!9670 = !DILocation(line: 2177, column: 17, scope: !9667)
!9671 = !DILocation(line: 2177, column: 21, scope: !9667)
!9672 = !DILocation(line: 2177, column: 35, scope: !9667)
!9673 = !DILocation(line: 2177, column: 28, scope: !9667)
!9674 = !DILocation(line: 2177, column: 47, scope: !9667)
!9675 = !DILocation(line: 2177, column: 55, scope: !9667)
!9676 = !DILocation(line: 2177, column: 39, scope: !9667)
!9677 = !DILocation(line: 2177, column: 37, scope: !9667)
!9678 = !DILocation(line: 2177, column: 62, scope: !9667)
!9679 = !DILocation(line: 2177, column: 66, scope: !9667)
!9680 = !DILocation(line: 2177, column: 60, scope: !9667)
!9681 = !DILocation(line: 2177, column: 26, scope: !9667)
!9682 = !DILocation(line: 2177, column: 5, scope: !9667)
!9683 = !DILocation(line: 2177, column: 10, scope: !9667)
!9684 = !DILocation(line: 2177, column: 15, scope: !9667)
!9685 = !DILocation(line: 2179, column: 17, scope: !9667)
!9686 = !DILocation(line: 2179, column: 21, scope: !9667)
!9687 = !DILocation(line: 2179, column: 5, scope: !9667)
!9688 = !DILocation(line: 2179, column: 10, scope: !9667)
!9689 = !DILocation(line: 2179, column: 15, scope: !9667)
!9690 = !DILocation(line: 2180, column: 3, scope: !9609)
!9691 = distinct !{!9691, !9604, !9692}
!9692 = !DILocation(line: 2180, column: 3, scope: !9605)
!9693 = !DILocation(line: 2182, column: 7, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 2182, column: 7)
!9695 = !DILocation(line: 2182, column: 13, scope: !9694)
!9696 = !DILocation(line: 2182, column: 18, scope: !9694)
!9697 = !DILocation(line: 2182, column: 38, scope: !9694)
!9698 = !DILocation(line: 2182, column: 41, scope: !9694)
!9699 = !DILocation(line: 2182, column: 45, scope: !9694)
!9700 = !DILocation(line: 2182, column: 53, scope: !9694)
!9701 = !DILocation(line: 2182, column: 7, scope: !9581)
!9702 = !DILocation(line: 2183, column: 5, scope: !9694)
!9703 = !DILocation(line: 2183, column: 4, scope: !9694)
!9704 = !DILocation(line: 2185, column: 22, scope: !9581)
!9705 = !DILocation(line: 2185, column: 8, scope: !9581)
!9706 = !DILocation(line: 2185, column: 14, scope: !9581)
!9707 = !DILocation(line: 2185, column: 19, scope: !9581)
!9708 = !DILocation(line: 2187, column: 9, scope: !9581)
!9709 = !DILocation(line: 2187, column: 13, scope: !9581)
!9710 = !DILocation(line: 2187, column: 18, scope: !9581)
!9711 = !DILocation(line: 2187, column: 21, scope: !9581)
!9712 = !DILocation(line: 2187, column: 25, scope: !9581)
!9713 = !DILocation(line: 2187, column: 31, scope: !9581)
!9714 = !DILocation(line: 2187, column: 36, scope: !9581)
!9715 = !DILocation(line: 2187, column: 8, scope: !9581)
!9716 = !DILocation(line: 2187, column: 55, scope: !9581)
!9717 = !DILocation(line: 2187, column: 59, scope: !9581)
!9718 = !DILocation(line: 2187, column: 66, scope: !9581)
!9719 = !DILocation(line: 2187, column: 72, scope: !9581)
!9720 = !DILocation(line: 2187, column: 80, scope: !9581)
!9721 = !DILocation(line: 2187, column: 6, scope: !9581)
!9722 = !DILocation(line: 2188, column: 2, scope: !9581)
!9723 = !DILocation(line: 2157, column: 24, scope: !9576)
!9724 = !DILocation(line: 2157, column: 2, scope: !9576)
!9725 = distinct !{!9725, !9579, !9726}
!9726 = !DILocation(line: 2188, column: 2, scope: !9573)
!9727 = !DILocation(line: 2190, column: 2, scope: !9484)
!9728 = !DILocation(line: 2190, column: 8, scope: !9484)
!9729 = !DILocation(line: 2190, column: 13, scope: !9484)
!9730 = !DILocation(line: 2191, column: 1, scope: !9484)
!9731 = distinct !DISubprogram(name: "psys_update_path_cache", scope: !3, file: !3, line: 3920, type: !8560, scopeLine: 3921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!9732 = !DILocalVariable(name: "sim", arg: 1, scope: !9731, file: !3, line: 3920, type: !3218)
!9733 = !DILocation(line: 3920, column: 60, scope: !9731)
!9734 = !DILocalVariable(name: "cfra", arg: 2, scope: !9731, file: !3, line: 3920, type: !341)
!9735 = !DILocation(line: 3920, column: 71, scope: !9731)
!9736 = !DILocalVariable(name: "psys", scope: !9731, file: !3, line: 3922, type: !3144)
!9737 = !DILocation(line: 3922, column: 18, scope: !9731)
!9738 = !DILocation(line: 3922, column: 25, scope: !9731)
!9739 = !DILocation(line: 3922, column: 30, scope: !9731)
!9740 = !DILocalVariable(name: "part", scope: !9731, file: !3, line: 3923, type: !2192)
!9741 = !DILocation(line: 3923, column: 20, scope: !9731)
!9742 = !DILocation(line: 3923, column: 27, scope: !9731)
!9743 = !DILocation(line: 3923, column: 33, scope: !9731)
!9744 = !DILocalVariable(name: "pset", scope: !9731, file: !3, line: 3924, type: !9745)
!9745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9746, size: 64)
!9746 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleEditSettings", file: !1029, line: 885, baseType: !1157)
!9747 = !DILocation(line: 3924, column: 24, scope: !9731)
!9748 = !DILocation(line: 3924, column: 32, scope: !9731)
!9749 = !DILocation(line: 3924, column: 37, scope: !9731)
!9750 = !DILocation(line: 3924, column: 44, scope: !9731)
!9751 = !DILocation(line: 3924, column: 58, scope: !9731)
!9752 = !DILocalVariable(name: "base", scope: !9731, file: !3, line: 3925, type: !9753)
!9753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9754, size: 64)
!9754 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !1029, line: 75, baseType: !1041)
!9755 = !DILocation(line: 3925, column: 8, scope: !9731)
!9756 = !DILocalVariable(name: "distr", scope: !9731, file: !3, line: 3926, type: !260)
!9757 = !DILocation(line: 3926, column: 6, scope: !9731)
!9758 = !DILocalVariable(name: "alloc", scope: !9731, file: !3, line: 3926, type: !260)
!9759 = !DILocation(line: 3926, column: 15, scope: !9731)
!9760 = !DILocalVariable(name: "skip", scope: !9731, file: !3, line: 3926, type: !260)
!9761 = !DILocation(line: 3926, column: 24, scope: !9731)
!9762 = !DILocation(line: 3928, column: 7, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 3928, column: 6)
!9764 = !DILocation(line: 3928, column: 13, scope: !9763)
!9765 = !DILocation(line: 3928, column: 19, scope: !9763)
!9766 = !DILocation(line: 3928, column: 29, scope: !9763)
!9767 = !DILocation(line: 3928, column: 32, scope: !9763)
!9768 = !DILocation(line: 3928, column: 38, scope: !9763)
!9769 = !DILocation(line: 3928, column: 69, scope: !9763)
!9770 = !DILocation(line: 3928, column: 74, scope: !9763)
!9771 = !DILocation(line: 3928, column: 81, scope: !9763)
!9772 = !DILocation(line: 3928, column: 50, scope: !9763)
!9773 = !DILocation(line: 3928, column: 47, scope: !9763)
!9774 = !DILocation(line: 3928, column: 88, scope: !9763)
!9775 = !DILocation(line: 3928, column: 91, scope: !9763)
!9776 = !DILocation(line: 3928, column: 97, scope: !9763)
!9777 = !DILocation(line: 3928, column: 103, scope: !9763)
!9778 = !DILocation(line: 3928, column: 6, scope: !9731)
!9779 = !DILocation(line: 3929, column: 8, scope: !9763)
!9780 = !DILocation(line: 3929, column: 3, scope: !9763)
!9781 = !DILocation(line: 3931, column: 6, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 3931, column: 6)
!9783 = !DILocation(line: 3931, column: 12, scope: !9782)
!9784 = !DILocation(line: 3931, column: 15, scope: !9782)
!9785 = !DILocation(line: 3931, column: 21, scope: !9782)
!9786 = !DILocation(line: 3931, column: 27, scope: !9782)
!9787 = !DILocation(line: 3931, column: 46, scope: !9782)
!9788 = !DILocation(line: 3931, column: 50, scope: !9782)
!9789 = !DILocation(line: 3931, column: 56, scope: !9782)
!9790 = !DILocation(line: 3931, column: 80, scope: !9782)
!9791 = !DILocation(line: 3931, column: 84, scope: !9782)
!9792 = !DILocation(line: 3931, column: 89, scope: !9782)
!9793 = !DILocation(line: 3931, column: 92, scope: !9782)
!9794 = !DILocation(line: 3931, column: 95, scope: !9782)
!9795 = !DILocation(line: 3931, column: 100, scope: !9782)
!9796 = !DILocation(line: 3931, column: 104, scope: !9782)
!9797 = !DILocation(line: 3931, column: 109, scope: !9782)
!9798 = !DILocation(line: 3931, column: 6, scope: !9731)
!9799 = !DILocation(line: 3932, column: 8, scope: !9782)
!9800 = !DILocation(line: 3932, column: 3, scope: !9782)
!9801 = !DILocation(line: 3934, column: 6, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 3934, column: 6)
!9803 = !DILocation(line: 3934, column: 6, scope: !9731)
!9804 = !DILocation(line: 3935, column: 7, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 3935, column: 7)
!9806 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 3934, column: 13)
!9807 = !DILocation(line: 3935, column: 7, scope: !9806)
!9808 = !DILocation(line: 3936, column: 22, scope: !9805)
!9809 = !DILocation(line: 3936, column: 27, scope: !9805)
!9810 = !DILocation(line: 3936, column: 32, scope: !9805)
!9811 = !DILocation(line: 3936, column: 38, scope: !9805)
!9812 = !DILocation(line: 3936, column: 4, scope: !9805)
!9813 = !DILocation(line: 3938, column: 26, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 3938, column: 7)
!9815 = !DILocation(line: 3938, column: 31, scope: !9814)
!9816 = !DILocation(line: 3938, column: 38, scope: !9814)
!9817 = !DILocation(line: 3938, column: 7, scope: !9814)
!9818 = !DILocation(line: 3938, column: 7, scope: !9806)
!9819 = !DILocation(line: 3940, column: 10, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 3940, column: 8)
!9821 = distinct !DILexicalBlock(scope: !9814, file: !3, line: 3938, column: 45)
!9822 = !DILocation(line: 3940, column: 16, scope: !9820)
!9823 = !DILocation(line: 3940, column: 22, scope: !9820)
!9824 = !DILocation(line: 3940, column: 27, scope: !9820)
!9825 = !DILocation(line: 3940, column: 41, scope: !9820)
!9826 = !DILocation(line: 3940, column: 45, scope: !9820)
!9827 = !DILocation(line: 3940, column: 51, scope: !9820)
!9828 = !DILocation(line: 3940, column: 56, scope: !9820)
!9829 = !DILocation(line: 3940, column: 8, scope: !9821)
!9830 = !DILocation(line: 3941, column: 26, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9820, file: !3, line: 3940, column: 75)
!9832 = !DILocation(line: 3941, column: 5, scope: !9831)
!9833 = !DILocation(line: 3943, column: 9, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9831, file: !3, line: 3943, column: 9)
!9835 = !DILocation(line: 3943, column: 15, scope: !9834)
!9836 = !DILocation(line: 3943, column: 24, scope: !9834)
!9837 = !DILocation(line: 3943, column: 43, scope: !9834)
!9838 = !DILocation(line: 3943, column: 46, scope: !9834)
!9839 = !DILocation(line: 3943, column: 52, scope: !9834)
!9840 = !DILocation(line: 3943, column: 60, scope: !9834)
!9841 = !DILocation(line: 3943, column: 9, scope: !9831)
!9842 = !DILocation(line: 3944, column: 24, scope: !9834)
!9843 = !DILocation(line: 3944, column: 6, scope: !9834)
!9844 = !DILocation(line: 3945, column: 4, scope: !9831)
!9845 = !DILocation(line: 3946, column: 3, scope: !9821)
!9846 = !DILocation(line: 3948, column: 23, scope: !9814)
!9847 = !DILocation(line: 3948, column: 4, scope: !9814)
!9848 = !DILocation(line: 3949, column: 2, scope: !9806)
!9849 = !DILocation(line: 3951, column: 7, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 3951, column: 6)
!9851 = !DILocation(line: 3951, column: 13, scope: !9850)
!9852 = !DILocation(line: 3951, column: 17, scope: !9850)
!9853 = !DILocation(line: 3951, column: 29, scope: !9850)
!9854 = !DILocation(line: 3951, column: 32, scope: !9850)
!9855 = !DILocation(line: 3951, column: 38, scope: !9850)
!9856 = !DILocation(line: 3951, column: 42, scope: !9850)
!9857 = !DILocation(line: 3951, column: 54, scope: !9850)
!9858 = !DILocation(line: 3951, column: 57, scope: !9850)
!9859 = !DILocation(line: 3951, column: 63, scope: !9850)
!9860 = !DILocation(line: 3951, column: 75, scope: !9850)
!9861 = !DILocation(line: 3951, column: 80, scope: !9850)
!9862 = !DILocation(line: 3951, column: 96, scope: !9850)
!9863 = !DILocation(line: 3951, column: 6, scope: !9731)
!9864 = !DILocation(line: 3952, column: 8, scope: !9850)
!9865 = !DILocation(line: 3952, column: 3, scope: !9850)
!9866 = !DILocation(line: 3953, column: 11, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9850, file: !3, line: 3953, column: 11)
!9868 = !DILocation(line: 3953, column: 17, scope: !9867)
!9869 = !DILocation(line: 3953, column: 24, scope: !9867)
!9870 = !DILocation(line: 3953, column: 42, scope: !9867)
!9871 = !DILocation(line: 3953, column: 47, scope: !9867)
!9872 = !DILocation(line: 3953, column: 53, scope: !9867)
!9873 = !DILocation(line: 3953, column: 57, scope: !9867)
!9874 = !DILocation(line: 3953, column: 69, scope: !9867)
!9875 = !DILocation(line: 3953, column: 72, scope: !9867)
!9876 = !DILocation(line: 3953, column: 11, scope: !9850)
!9877 = !DILocation(line: 3954, column: 8, scope: !9867)
!9878 = !DILocation(line: 3954, column: 3, scope: !9867)
!9879 = !DILocation(line: 3955, column: 12, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9867, file: !3, line: 3955, column: 11)
!9881 = !DILocation(line: 3955, column: 18, scope: !9880)
!9882 = !DILocation(line: 3955, column: 11, scope: !9867)
!9883 = !DILocation(line: 3956, column: 7, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 3956, column: 7)
!9885 = distinct !DILexicalBlock(scope: !9880, file: !3, line: 3955, column: 30)
!9886 = !DILocation(line: 3956, column: 13, scope: !9884)
!9887 = !DILocation(line: 3956, column: 21, scope: !9884)
!9888 = !DILocation(line: 3956, column: 7, scope: !9885)
!9889 = !DILocation(line: 3957, column: 9, scope: !9884)
!9890 = !DILocation(line: 3957, column: 4, scope: !9884)
!9891 = !DILocation(line: 3958, column: 12, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9884, file: !3, line: 3958, column: 12)
!9893 = !DILocation(line: 3958, column: 18, scope: !9892)
!9894 = !DILocation(line: 3958, column: 30, scope: !9892)
!9895 = !DILocation(line: 3958, column: 35, scope: !9892)
!9896 = !DILocation(line: 3958, column: 12, scope: !9884)
!9897 = !DILocation(line: 3959, column: 9, scope: !9892)
!9898 = !DILocation(line: 3959, column: 4, scope: !9892)
!9899 = !DILocation(line: 3960, column: 30, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9892, file: !3, line: 3960, column: 12)
!9901 = !DILocation(line: 3960, column: 35, scope: !9900)
!9902 = !DILocation(line: 3960, column: 42, scope: !9900)
!9903 = !DILocation(line: 3960, column: 12, scope: !9900)
!9904 = !DILocation(line: 3960, column: 12, scope: !9892)
!9905 = !DILocation(line: 3961, column: 9, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9907, file: !3, line: 3961, column: 8)
!9907 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 3960, column: 49)
!9908 = !DILocation(line: 3961, column: 15, scope: !9906)
!9909 = !DILocation(line: 3961, column: 20, scope: !9906)
!9910 = !DILocation(line: 3961, column: 35, scope: !9906)
!9911 = !DILocation(line: 3961, column: 8, scope: !9907)
!9912 = !DILocation(line: 3962, column: 10, scope: !9906)
!9913 = !DILocation(line: 3962, column: 5, scope: !9906)
!9914 = !DILocation(line: 3963, column: 13, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 3963, column: 13)
!9916 = !DILocation(line: 3963, column: 19, scope: !9915)
!9917 = !DILocation(line: 3963, column: 28, scope: !9915)
!9918 = !DILocation(line: 3963, column: 32, scope: !9915)
!9919 = !DILocation(line: 3963, column: 36, scope: !9915)
!9920 = !DILocation(line: 3963, column: 42, scope: !9915)
!9921 = !DILocation(line: 3963, column: 47, scope: !9915)
!9922 = !DILocation(line: 3963, column: 68, scope: !9915)
!9923 = !DILocation(line: 3963, column: 71, scope: !9915)
!9924 = !DILocation(line: 3963, column: 77, scope: !9915)
!9925 = !DILocation(line: 3963, column: 89, scope: !9915)
!9926 = !DILocation(line: 3963, column: 94, scope: !9915)
!9927 = !DILocation(line: 0, scope: !9915)
!9928 = !DILocation(line: 3963, column: 110, scope: !9915)
!9929 = !DILocation(line: 3963, column: 13, scope: !9906)
!9930 = !DILocation(line: 3964, column: 10, scope: !9915)
!9931 = !DILocation(line: 3964, column: 5, scope: !9915)
!9932 = !DILocation(line: 3965, column: 3, scope: !9907)
!9933 = !DILocation(line: 3966, column: 2, scope: !9885)
!9934 = !DILocation(line: 3970, column: 14, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 3970, column: 2)
!9936 = !DILocation(line: 3970, column: 19, scope: !9935)
!9937 = !DILocation(line: 3970, column: 26, scope: !9935)
!9938 = !DILocation(line: 3970, column: 31, scope: !9935)
!9939 = !DILocation(line: 3970, column: 12, scope: !9935)
!9940 = !DILocation(line: 3970, column: 7, scope: !9935)
!9941 = !DILocation(line: 3970, column: 38, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 3970, column: 2)
!9943 = !DILocation(line: 3970, column: 2, scope: !9935)
!9944 = !DILocalVariable(name: "md", scope: !9945, file: !3, line: 3971, type: !9946)
!9945 = distinct !DILexicalBlock(scope: !9942, file: !3, line: 3970, column: 62)
!9946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!9947 = !DILocation(line: 3971, column: 17, scope: !9945)
!9948 = !DILocation(line: 3971, column: 43, scope: !9945)
!9949 = !DILocation(line: 3971, column: 49, scope: !9945)
!9950 = !DILocation(line: 3971, column: 22, scope: !9945)
!9951 = !DILocation(line: 3972, column: 7, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 3972, column: 7)
!9953 = !DILocation(line: 3972, column: 7, scope: !9945)
!9954 = !DILocalVariable(name: "pimd", scope: !9955, file: !3, line: 3973, type: !3299)
!9955 = distinct !DILexicalBlock(scope: !9952, file: !3, line: 3972, column: 11)
!9956 = !DILocation(line: 3973, column: 34, scope: !9955)
!9957 = !DILocation(line: 3973, column: 73, scope: !9955)
!9958 = !DILocation(line: 3973, column: 41, scope: !9955)
!9959 = !DILocation(line: 3974, column: 8, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 3974, column: 8)
!9961 = !DILocation(line: 3974, column: 14, scope: !9960)
!9962 = !DILocation(line: 3974, column: 19, scope: !9960)
!9963 = !DILocation(line: 3974, column: 48, scope: !9960)
!9964 = !DILocation(line: 3974, column: 51, scope: !9960)
!9965 = !DILocation(line: 3974, column: 57, scope: !9960)
!9966 = !DILocation(line: 3974, column: 63, scope: !9960)
!9967 = !DILocation(line: 3974, column: 68, scope: !9960)
!9968 = !DILocation(line: 3974, column: 60, scope: !9960)
!9969 = !DILocation(line: 3974, column: 71, scope: !9960)
!9970 = !DILocation(line: 3974, column: 74, scope: !9960)
!9971 = !DILocation(line: 3974, column: 80, scope: !9960)
!9972 = !DILocation(line: 3974, column: 89, scope: !9960)
!9973 = !DILocation(line: 3974, column: 113, scope: !9960)
!9974 = !DILocation(line: 3974, column: 118, scope: !9960)
!9975 = !DILocation(line: 3974, column: 122, scope: !9960)
!9976 = !DILocation(line: 3974, column: 137, scope: !9960)
!9977 = !DILocation(line: 3974, column: 96, scope: !9960)
!9978 = !DILocation(line: 3974, column: 94, scope: !9960)
!9979 = !DILocation(line: 3974, column: 85, scope: !9960)
!9980 = !DILocation(line: 3974, column: 8, scope: !9955)
!9981 = !DILocation(line: 3975, column: 10, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 3974, column: 145)
!9983 = !DILocation(line: 3976, column: 5, scope: !9982)
!9984 = !DILocation(line: 3978, column: 3, scope: !9955)
!9985 = !DILocation(line: 3979, column: 2, scope: !9945)
!9986 = !DILocation(line: 3970, column: 50, scope: !9942)
!9987 = !DILocation(line: 3970, column: 56, scope: !9942)
!9988 = !DILocation(line: 3970, column: 48, scope: !9942)
!9989 = !DILocation(line: 3970, column: 2, scope: !9942)
!9990 = distinct !{!9990, !9943, !9991}
!9991 = !DILocation(line: 3979, column: 2, scope: !9935)
!9992 = !DILocation(line: 3981, column: 7, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9731, file: !3, line: 3981, column: 6)
!9994 = !DILocation(line: 3981, column: 6, scope: !9731)
!9995 = !DILocation(line: 3982, column: 20, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 3981, column: 13)
!9997 = !DILocation(line: 3982, column: 25, scope: !9996)
!9998 = !DILocation(line: 3982, column: 3, scope: !9996)
!9999 = !DILocation(line: 3985, column: 7, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9996, file: !3, line: 3985, column: 7)
!10001 = !DILocation(line: 3985, column: 13, scope: !10000)
!10002 = !DILocation(line: 3985, column: 7, scope: !9996)
!10003 = !DILocation(line: 3986, column: 9, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 3986, column: 8)
!10005 = distinct !DILexicalBlock(scope: !10000, file: !3, line: 3985, column: 24)
!10006 = !DILocation(line: 3986, column: 15, scope: !10004)
!10007 = !DILocation(line: 3986, column: 8, scope: !10005)
!10008 = !DILocation(line: 3987, column: 10, scope: !10004)
!10009 = !DILocation(line: 3987, column: 5, scope: !10004)
!10010 = !DILocation(line: 3988, column: 13, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 3988, column: 13)
!10012 = !DILocation(line: 3988, column: 19, scope: !10011)
!10013 = !DILocation(line: 3988, column: 25, scope: !10011)
!10014 = !DILocation(line: 3988, column: 30, scope: !10011)
!10015 = !DILocation(line: 3988, column: 43, scope: !10011)
!10016 = !DILocation(line: 3988, column: 47, scope: !10011)
!10017 = !DILocation(line: 3988, column: 53, scope: !10011)
!10018 = !DILocation(line: 3988, column: 58, scope: !10011)
!10019 = !DILocation(line: 3988, column: 75, scope: !10011)
!10020 = !DILocation(line: 3988, column: 13, scope: !10004)
!10021 = !DILocation(line: 3989, column: 10, scope: !10011)
!10022 = !DILocation(line: 3989, column: 5, scope: !10011)
!10023 = !DILocation(line: 3991, column: 9, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 3991, column: 8)
!10025 = !DILocation(line: 3991, column: 8, scope: !10005)
!10026 = !DILocation(line: 3992, column: 28, scope: !10024)
!10027 = !DILocation(line: 3992, column: 33, scope: !10024)
!10028 = !DILocation(line: 3992, column: 5, scope: !10024)
!10029 = !DILocation(line: 3993, column: 3, scope: !10005)
!10030 = !DILocation(line: 3994, column: 2, scope: !9996)
!10031 = !DILocation(line: 3995, column: 11, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 3995, column: 11)
!10033 = !DILocation(line: 3995, column: 17, scope: !10032)
!10034 = !DILocation(line: 3995, column: 11, scope: !9993)
!10035 = !DILocation(line: 3996, column: 24, scope: !10032)
!10036 = !DILocation(line: 3996, column: 3, scope: !10032)
!10037 = !DILocation(line: 3997, column: 1, scope: !9731)
!10038 = distinct !DISubprogram(name: "madd_v3_v3v3fl", scope: !4875, file: !4875, line: 527, type: !10039, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10039 = !DISubroutineType(types: !10040)
!10040 = !{null, !1796, !2826, !2826, !341}
!10041 = !DILocalVariable(name: "r", arg: 1, scope: !10038, file: !4875, line: 527, type: !1796)
!10042 = !DILocation(line: 527, column: 35, scope: !10038)
!10043 = !DILocalVariable(name: "a", arg: 2, scope: !10038, file: !4875, line: 527, type: !2826)
!10044 = !DILocation(line: 527, column: 53, scope: !10038)
!10045 = !DILocalVariable(name: "b", arg: 3, scope: !10038, file: !4875, line: 527, type: !2826)
!10046 = !DILocation(line: 527, column: 71, scope: !10038)
!10047 = !DILocalVariable(name: "f", arg: 4, scope: !10038, file: !4875, line: 527, type: !341)
!10048 = !DILocation(line: 527, column: 83, scope: !10038)
!10049 = !DILocation(line: 529, column: 9, scope: !10038)
!10050 = !DILocation(line: 529, column: 16, scope: !10038)
!10051 = !DILocation(line: 529, column: 23, scope: !10038)
!10052 = !DILocation(line: 529, column: 21, scope: !10038)
!10053 = !DILocation(line: 529, column: 14, scope: !10038)
!10054 = !DILocation(line: 529, column: 2, scope: !10038)
!10055 = !DILocation(line: 529, column: 7, scope: !10038)
!10056 = !DILocation(line: 530, column: 9, scope: !10038)
!10057 = !DILocation(line: 530, column: 16, scope: !10038)
!10058 = !DILocation(line: 530, column: 23, scope: !10038)
!10059 = !DILocation(line: 530, column: 21, scope: !10038)
!10060 = !DILocation(line: 530, column: 14, scope: !10038)
!10061 = !DILocation(line: 530, column: 2, scope: !10038)
!10062 = !DILocation(line: 530, column: 7, scope: !10038)
!10063 = !DILocation(line: 531, column: 9, scope: !10038)
!10064 = !DILocation(line: 531, column: 16, scope: !10038)
!10065 = !DILocation(line: 531, column: 23, scope: !10038)
!10066 = !DILocation(line: 531, column: 21, scope: !10038)
!10067 = !DILocation(line: 531, column: 14, scope: !10038)
!10068 = !DILocation(line: 531, column: 2, scope: !10038)
!10069 = !DILocation(line: 531, column: 7, scope: !10038)
!10070 = !DILocation(line: 532, column: 1, scope: !10038)
!10071 = distinct !DISubprogram(name: "sph_spring_add", scope: !3, file: !3, line: 2448, type: !10072, scopeLine: 2449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10072 = !DISubroutineType(types: !10073)
!10073 = !{!2988, !3144, !2988}
!10074 = !DILocalVariable(name: "psys", arg: 1, scope: !10071, file: !3, line: 2448, type: !3144)
!10075 = !DILocation(line: 2448, column: 55, scope: !10071)
!10076 = !DILocalVariable(name: "spring", arg: 2, scope: !10071, file: !3, line: 2448, type: !2988)
!10077 = !DILocation(line: 2448, column: 77, scope: !10071)
!10078 = !DILocation(line: 2451, column: 6, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 2451, column: 6)
!10080 = !DILocation(line: 2451, column: 12, scope: !10079)
!10081 = !DILocation(line: 2451, column: 31, scope: !10079)
!10082 = !DILocation(line: 2451, column: 36, scope: !10079)
!10083 = !DILocation(line: 2451, column: 39, scope: !10079)
!10084 = !DILocation(line: 2451, column: 45, scope: !10079)
!10085 = !DILocation(line: 2451, column: 59, scope: !10079)
!10086 = !DILocation(line: 2451, column: 6, scope: !10071)
!10087 = !DILocation(line: 2452, column: 3, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 2451, column: 68)
!10089 = !DILocation(line: 2452, column: 9, scope: !10088)
!10090 = !DILocation(line: 2452, column: 28, scope: !10088)
!10091 = !DILocation(line: 2453, column: 42, scope: !10088)
!10092 = !DILocation(line: 2453, column: 54, scope: !10088)
!10093 = !DILocation(line: 2453, column: 60, scope: !10088)
!10094 = !DILocation(line: 2453, column: 79, scope: !10088)
!10095 = !DILocation(line: 2453, column: 25, scope: !10088)
!10096 = !DILocation(line: 2453, column: 3, scope: !10088)
!10097 = !DILocation(line: 2453, column: 9, scope: !10088)
!10098 = !DILocation(line: 2453, column: 23, scope: !10088)
!10099 = !DILocation(line: 2454, column: 2, scope: !10088)
!10100 = !DILocation(line: 2455, column: 11, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 2455, column: 11)
!10102 = !DILocation(line: 2455, column: 17, scope: !10101)
!10103 = !DILocation(line: 2455, column: 37, scope: !10101)
!10104 = !DILocation(line: 2455, column: 43, scope: !10101)
!10105 = !DILocation(line: 2455, column: 34, scope: !10101)
!10106 = !DILocation(line: 2455, column: 11, scope: !10079)
!10107 = !DILocation(line: 2457, column: 3, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10101, file: !3, line: 2455, column: 63)
!10109 = !DILocation(line: 2457, column: 9, scope: !10108)
!10110 = !DILocation(line: 2457, column: 28, scope: !10108)
!10111 = !DILocation(line: 2458, column: 42, scope: !10108)
!10112 = !DILocation(line: 2458, column: 25, scope: !10108)
!10113 = !DILocation(line: 2458, column: 3, scope: !10108)
!10114 = !DILocation(line: 2458, column: 9, scope: !10108)
!10115 = !DILocation(line: 2458, column: 23, scope: !10108)
!10116 = !DILocation(line: 2459, column: 2, scope: !10108)
!10117 = !DILocation(line: 2461, column: 9, scope: !10071)
!10118 = !DILocation(line: 2461, column: 15, scope: !10071)
!10119 = !DILocation(line: 2461, column: 31, scope: !10071)
!10120 = !DILocation(line: 2461, column: 37, scope: !10071)
!10121 = !DILocation(line: 2461, column: 29, scope: !10071)
!10122 = !DILocation(line: 2461, column: 2, scope: !10071)
!10123 = !DILocation(line: 2461, column: 55, scope: !10071)
!10124 = !DILocation(line: 2462, column: 2, scope: !10071)
!10125 = !DILocation(line: 2462, column: 8, scope: !10071)
!10126 = !DILocation(line: 2462, column: 24, scope: !10071)
!10127 = !DILocation(line: 2464, column: 9, scope: !10071)
!10128 = !DILocation(line: 2464, column: 15, scope: !10071)
!10129 = !DILocation(line: 2464, column: 31, scope: !10071)
!10130 = !DILocation(line: 2464, column: 37, scope: !10071)
!10131 = !DILocation(line: 2464, column: 29, scope: !10071)
!10132 = !DILocation(line: 2464, column: 54, scope: !10071)
!10133 = !DILocation(line: 2464, column: 2, scope: !10071)
!10134 = distinct !DISubprogram(name: "sph_particle_courant", scope: !3, file: !3, line: 2619, type: !10135, scopeLine: 2620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10135 = !DISubroutineType(types: !10136)
!10136 = !{null, !3138, !3163}
!10137 = !DILocalVariable(name: "sphdata", arg: 1, scope: !10134, file: !3, line: 2619, type: !3138)
!10138 = !DILocation(line: 2619, column: 43, scope: !10134)
!10139 = !DILocalVariable(name: "pfr", arg: 2, scope: !10134, file: !3, line: 2619, type: !3163)
!10140 = !DILocation(line: 2619, column: 66, scope: !10134)
!10141 = !DILocalVariable(name: "pa", scope: !10134, file: !3, line: 2621, type: !2461)
!10142 = !DILocation(line: 2621, column: 16, scope: !10134)
!10143 = !DILocalVariable(name: "npa", scope: !10134, file: !3, line: 2621, type: !2461)
!10144 = !DILocation(line: 2621, column: 21, scope: !10134)
!10145 = !DILocalVariable(name: "i", scope: !10134, file: !3, line: 2622, type: !260)
!10146 = !DILocation(line: 2622, column: 6, scope: !10134)
!10147 = !DILocalVariable(name: "flow", scope: !10134, file: !3, line: 2623, type: !563)
!10148 = !DILocation(line: 2623, column: 8, scope: !10134)
!10149 = !DILocalVariable(name: "offset", scope: !10134, file: !3, line: 2623, type: !563)
!10150 = !DILocation(line: 2623, column: 17, scope: !10134)
!10151 = !DILocalVariable(name: "dist", scope: !10134, file: !3, line: 2623, type: !341)
!10152 = !DILocation(line: 2623, column: 28, scope: !10134)
!10153 = !DILocation(line: 2625, column: 10, scope: !10134)
!10154 = !DILocation(line: 2625, column: 2, scope: !10134)
!10155 = !DILocation(line: 2627, column: 7, scope: !10134)
!10156 = !DILocation(line: 2628, column: 6, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 2628, column: 6)
!10158 = !DILocation(line: 2628, column: 11, scope: !10157)
!10159 = !DILocation(line: 2628, column: 25, scope: !10157)
!10160 = !DILocation(line: 2628, column: 6, scope: !10134)
!10161 = !DILocation(line: 2629, column: 8, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 2628, column: 30)
!10163 = !DILocation(line: 2629, column: 13, scope: !10162)
!10164 = !DILocation(line: 2629, column: 6, scope: !10162)
!10165 = !DILocation(line: 2630, column: 9, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10162, file: !3, line: 2630, column: 3)
!10167 = !DILocation(line: 2630, column: 8, scope: !10166)
!10168 = !DILocation(line: 2630, column: 13, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10166, file: !3, line: 2630, column: 3)
!10170 = !DILocation(line: 2630, column: 17, scope: !10169)
!10171 = !DILocation(line: 2630, column: 22, scope: !10169)
!10172 = !DILocation(line: 2630, column: 15, scope: !10169)
!10173 = !DILocation(line: 2630, column: 3, scope: !10166)
!10174 = !DILocation(line: 2631, column: 10, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10169, file: !3, line: 2630, column: 42)
!10176 = !DILocation(line: 2631, column: 15, scope: !10175)
!10177 = !DILocation(line: 2631, column: 25, scope: !10175)
!10178 = !DILocation(line: 2631, column: 28, scope: !10175)
!10179 = !DILocation(line: 2631, column: 34, scope: !10175)
!10180 = !DILocation(line: 2631, column: 46, scope: !10175)
!10181 = !DILocation(line: 2631, column: 51, scope: !10175)
!10182 = !DILocation(line: 2631, column: 61, scope: !10175)
!10183 = !DILocation(line: 2631, column: 64, scope: !10175)
!10184 = !DILocation(line: 2631, column: 44, scope: !10175)
!10185 = !DILocation(line: 2631, column: 8, scope: !10175)
!10186 = !DILocation(line: 2632, column: 16, scope: !10175)
!10187 = !DILocation(line: 2632, column: 24, scope: !10175)
!10188 = !DILocation(line: 2632, column: 28, scope: !10175)
!10189 = !DILocation(line: 2632, column: 39, scope: !10175)
!10190 = !DILocation(line: 2632, column: 43, scope: !10175)
!10191 = !DILocation(line: 2632, column: 48, scope: !10175)
!10192 = !DILocation(line: 2632, column: 59, scope: !10175)
!10193 = !DILocation(line: 2632, column: 4, scope: !10175)
!10194 = !DILocation(line: 2633, column: 19, scope: !10175)
!10195 = !DILocation(line: 2633, column: 12, scope: !10175)
!10196 = !DILocation(line: 2633, column: 9, scope: !10175)
!10197 = !DILocation(line: 2634, column: 14, scope: !10175)
!10198 = !DILocation(line: 2634, column: 20, scope: !10175)
!10199 = !DILocation(line: 2634, column: 25, scope: !10175)
!10200 = !DILocation(line: 2634, column: 36, scope: !10175)
!10201 = !DILocation(line: 2634, column: 4, scope: !10175)
!10202 = !DILocation(line: 2635, column: 3, scope: !10175)
!10203 = !DILocation(line: 2630, column: 38, scope: !10169)
!10204 = !DILocation(line: 2630, column: 3, scope: !10169)
!10205 = distinct !{!10205, !10173, !10206}
!10206 = !DILocation(line: 2635, column: 3, scope: !10166)
!10207 = !DILocation(line: 2636, column: 11, scope: !10162)
!10208 = !DILocation(line: 2636, column: 20, scope: !10162)
!10209 = !DILocation(line: 2636, column: 29, scope: !10162)
!10210 = !DILocation(line: 2636, column: 35, scope: !10162)
!10211 = !DILocation(line: 2636, column: 42, scope: !10162)
!10212 = !DILocation(line: 2636, column: 8, scope: !10162)
!10213 = !DILocation(line: 2637, column: 27, scope: !10162)
!10214 = !DILocation(line: 2637, column: 34, scope: !10162)
!10215 = !DILocation(line: 2637, column: 39, scope: !10162)
!10216 = !DILocation(line: 2637, column: 32, scope: !10162)
!10217 = !DILocation(line: 2637, column: 3, scope: !10162)
!10218 = !DILocation(line: 2637, column: 12, scope: !10162)
!10219 = !DILocation(line: 2637, column: 25, scope: !10162)
!10220 = !DILocation(line: 2638, column: 15, scope: !10162)
!10221 = !DILocation(line: 2638, column: 24, scope: !10162)
!10222 = !DILocation(line: 2638, column: 30, scope: !10162)
!10223 = !DILocation(line: 2638, column: 43, scope: !10162)
!10224 = !DILocation(line: 2638, column: 48, scope: !10162)
!10225 = !DILocation(line: 2638, column: 41, scope: !10162)
!10226 = !DILocation(line: 2638, column: 3, scope: !10162)
!10227 = !DILocation(line: 2639, column: 2, scope: !10162)
!10228 = !DILocation(line: 2641, column: 3, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 2640, column: 7)
!10230 = !DILocation(line: 2641, column: 12, scope: !10229)
!10231 = !DILocation(line: 2641, column: 25, scope: !10229)
!10232 = !DILocation(line: 2642, column: 14, scope: !10229)
!10233 = !DILocation(line: 2642, column: 23, scope: !10229)
!10234 = !DILocation(line: 2642, column: 29, scope: !10229)
!10235 = !DILocation(line: 2642, column: 3, scope: !10229)
!10236 = !DILocation(line: 2644, column: 1, scope: !10134)
!10237 = distinct !DISubprogram(name: "len_v3", scope: !4875, file: !4875, line: 714, type: !10238, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10238 = !DISubroutineType(types: !10239)
!10239 = !{!341, !2826}
!10240 = !DILocalVariable(name: "a", arg: 1, scope: !10237, file: !4875, line: 714, type: !2826)
!10241 = !DILocation(line: 714, column: 34, scope: !10237)
!10242 = !DILocation(line: 716, column: 24, scope: !10237)
!10243 = !DILocation(line: 716, column: 27, scope: !10237)
!10244 = !DILocation(line: 716, column: 15, scope: !10237)
!10245 = !DILocation(line: 716, column: 9, scope: !10237)
!10246 = !DILocation(line: 716, column: 2, scope: !10237)
!10247 = distinct !DISubprogram(name: "add_v3_v3", scope: !4875, file: !4875, line: 302, type: !4927, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10248 = !DILocalVariable(name: "r", arg: 1, scope: !10247, file: !4875, line: 302, type: !1796)
!10249 = !DILocation(line: 302, column: 30, scope: !10247)
!10250 = !DILocalVariable(name: "a", arg: 2, scope: !10247, file: !4875, line: 302, type: !2826)
!10251 = !DILocation(line: 302, column: 48, scope: !10247)
!10252 = !DILocation(line: 304, column: 10, scope: !10247)
!10253 = !DILocation(line: 304, column: 2, scope: !10247)
!10254 = !DILocation(line: 304, column: 7, scope: !10247)
!10255 = !DILocation(line: 305, column: 10, scope: !10247)
!10256 = !DILocation(line: 305, column: 2, scope: !10247)
!10257 = !DILocation(line: 305, column: 7, scope: !10247)
!10258 = !DILocation(line: 306, column: 10, scope: !10247)
!10259 = !DILocation(line: 306, column: 2, scope: !10247)
!10260 = !DILocation(line: 306, column: 7, scope: !10247)
!10261 = !DILocation(line: 307, column: 1, scope: !10247)
!10262 = distinct !DISubprogram(name: "pow2", scope: !3, file: !3, line: 2770, type: !10263, scopeLine: 2771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10263 = !DISubroutineType(types: !10264)
!10264 = !{!341, !341}
!10265 = !DILocalVariable(name: "x", arg: 1, scope: !10262, file: !3, line: 2770, type: !341)
!10266 = !DILocation(line: 2770, column: 26, scope: !10262)
!10267 = !DILocation(line: 2772, column: 9, scope: !10262)
!10268 = !DILocation(line: 2772, column: 13, scope: !10262)
!10269 = !DILocation(line: 2772, column: 11, scope: !10262)
!10270 = !DILocation(line: 2772, column: 2, scope: !10262)
!10271 = distinct !DISubprogram(name: "sphclassical_neighbour_accum_cb", scope: !3, file: !3, line: 2818, type: !2937, scopeLine: 2819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10272 = !DILocalVariable(name: "userdata", arg: 1, scope: !10271, file: !3, line: 2818, type: !229)
!10273 = !DILocation(line: 2818, column: 51, scope: !10271)
!10274 = !DILocalVariable(name: "index", arg: 2, scope: !10271, file: !3, line: 2818, type: !260)
!10275 = !DILocation(line: 2818, column: 65, scope: !10271)
!10276 = !DILocalVariable(name: "UNUSED_squared_dist", arg: 3, scope: !10271, file: !3, line: 2818, type: !341)
!10277 = !DILocation(line: 2818, column: 78, scope: !10271)
!10278 = !DILocalVariable(name: "pfr", scope: !10271, file: !3, line: 2820, type: !3163)
!10279 = !DILocation(line: 2820, column: 16, scope: !10271)
!10280 = !DILocation(line: 2820, column: 38, scope: !10271)
!10281 = !DILocation(line: 2820, column: 22, scope: !10271)
!10282 = !DILocalVariable(name: "npa", scope: !10271, file: !3, line: 2821, type: !2461)
!10283 = !DILocation(line: 2821, column: 16, scope: !10271)
!10284 = !DILocation(line: 2821, column: 22, scope: !10271)
!10285 = !DILocation(line: 2821, column: 27, scope: !10271)
!10286 = !DILocation(line: 2821, column: 34, scope: !10271)
!10287 = !DILocation(line: 2821, column: 46, scope: !10271)
!10288 = !DILocation(line: 2821, column: 44, scope: !10271)
!10289 = !DILocalVariable(name: "rij", scope: !10271, file: !3, line: 2822, type: !341)
!10290 = !DILocation(line: 2822, column: 8, scope: !10271)
!10291 = !DILocalVariable(name: "rij_h", scope: !10271, file: !3, line: 2822, type: !341)
!10292 = !DILocation(line: 2822, column: 13, scope: !10271)
!10293 = !DILocalVariable(name: "vec", scope: !10271, file: !3, line: 2823, type: !563)
!10294 = !DILocation(line: 2823, column: 8, scope: !10271)
!10295 = !DILocation(line: 2825, column: 6, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 2825, column: 6)
!10297 = !DILocation(line: 2825, column: 11, scope: !10296)
!10298 = !DILocation(line: 2825, column: 25, scope: !10296)
!10299 = !DILocation(line: 2825, column: 6, scope: !10271)
!10300 = !DILocation(line: 2826, column: 3, scope: !10296)
!10301 = !DILocation(line: 2831, column: 14, scope: !10271)
!10302 = !DILocation(line: 2831, column: 19, scope: !10271)
!10303 = !DILocation(line: 2831, column: 24, scope: !10271)
!10304 = !DILocation(line: 2831, column: 30, scope: !10271)
!10305 = !DILocation(line: 2831, column: 34, scope: !10271)
!10306 = !DILocation(line: 2831, column: 39, scope: !10271)
!10307 = !DILocation(line: 2831, column: 43, scope: !10271)
!10308 = !DILocation(line: 2831, column: 49, scope: !10271)
!10309 = !DILocation(line: 2831, column: 2, scope: !10271)
!10310 = !DILocation(line: 2832, column: 15, scope: !10271)
!10311 = !DILocation(line: 2832, column: 8, scope: !10271)
!10312 = !DILocation(line: 2832, column: 6, scope: !10271)
!10313 = !DILocation(line: 2833, column: 10, scope: !10271)
!10314 = !DILocation(line: 2833, column: 16, scope: !10271)
!10315 = !DILocation(line: 2833, column: 21, scope: !10271)
!10316 = !DILocation(line: 2833, column: 14, scope: !10271)
!10317 = !DILocation(line: 2833, column: 8, scope: !10271)
!10318 = !DILocation(line: 2834, column: 6, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 2834, column: 6)
!10320 = !DILocation(line: 2834, column: 12, scope: !10319)
!10321 = !DILocation(line: 2834, column: 6, scope: !10271)
!10322 = !DILocation(line: 2835, column: 3, scope: !10319)
!10323 = !DILocation(line: 2837, column: 45, scope: !10271)
!10324 = !DILocation(line: 2837, column: 2, scope: !10271)
!10325 = !DILocation(line: 2837, column: 7, scope: !10271)
!10326 = !DILocation(line: 2837, column: 17, scope: !10271)
!10327 = !DILocation(line: 2837, column: 22, scope: !10271)
!10328 = !DILocation(line: 2837, column: 37, scope: !10271)
!10329 = !DILocation(line: 2837, column: 43, scope: !10271)
!10330 = !DILocation(line: 2838, column: 44, scope: !10271)
!10331 = !DILocation(line: 2838, column: 49, scope: !10271)
!10332 = !DILocation(line: 2838, column: 2, scope: !10271)
!10333 = !DILocation(line: 2838, column: 7, scope: !10271)
!10334 = !DILocation(line: 2838, column: 17, scope: !10271)
!10335 = !DILocation(line: 2838, column: 22, scope: !10271)
!10336 = !DILocation(line: 2838, column: 37, scope: !10271)
!10337 = !DILocation(line: 2838, column: 42, scope: !10271)
!10338 = !DILocation(line: 2839, column: 2, scope: !10271)
!10339 = !DILocation(line: 2839, column: 7, scope: !10271)
!10340 = !DILocation(line: 2839, column: 20, scope: !10271)
!10341 = !DILocation(line: 2840, column: 1, scope: !10271)
!10342 = distinct !DISubprogram(name: "pow7", scope: !3, file: !3, line: 2782, type: !10263, scopeLine: 2783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10343 = !DILocalVariable(name: "x", arg: 1, scope: !10342, file: !3, line: 2782, type: !341)
!10344 = !DILocation(line: 2782, column: 26, scope: !10342)
!10345 = !DILocation(line: 2784, column: 19, scope: !10342)
!10346 = !DILocation(line: 2784, column: 14, scope: !10342)
!10347 = !DILocation(line: 2784, column: 9, scope: !10342)
!10348 = !DILocation(line: 2784, column: 25, scope: !10342)
!10349 = !DILocation(line: 2784, column: 23, scope: !10342)
!10350 = !DILocation(line: 2784, column: 2, scope: !10342)
!10351 = distinct !DISubprogram(name: "pow3", scope: !3, file: !3, line: 2774, type: !10263, scopeLine: 2775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10352 = !DILocalVariable(name: "x", arg: 1, scope: !10351, file: !3, line: 2774, type: !341)
!10353 = !DILocation(line: 2774, column: 26, scope: !10351)
!10354 = !DILocation(line: 2776, column: 14, scope: !10351)
!10355 = !DILocation(line: 2776, column: 9, scope: !10351)
!10356 = !DILocation(line: 2776, column: 19, scope: !10351)
!10357 = !DILocation(line: 2776, column: 17, scope: !10351)
!10358 = !DILocation(line: 2776, column: 2, scope: !10351)
!10359 = distinct !DISubprogram(name: "pow4", scope: !3, file: !3, line: 2778, type: !10263, scopeLine: 2779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10360 = !DILocalVariable(name: "x", arg: 1, scope: !10359, file: !3, line: 2778, type: !341)
!10361 = !DILocation(line: 2778, column: 26, scope: !10359)
!10362 = !DILocation(line: 2780, column: 19, scope: !10359)
!10363 = !DILocation(line: 2780, column: 14, scope: !10359)
!10364 = !DILocation(line: 2780, column: 9, scope: !10359)
!10365 = !DILocation(line: 2780, column: 2, scope: !10359)
!10366 = distinct !DISubprogram(name: "collision_newton_rhapson", scope: !3, file: !3, line: 3358, type: !10367, scopeLine: 3359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10367 = !DISubroutineType(types: !10368)
!10368 = !{!341, !712, !341, !7413, !10369}
!10369 = !DIDerivedType(tag: DW_TAG_typedef, name: "NRDistanceFunc", file: !3, line: 3206, baseType: !10370)
!10370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10371, size: 64)
!10371 = !DISubroutineType(types: !10372)
!10372 = !{!341, !1796, !341, !7413, !1796}
!10373 = !DILocalVariable(name: "col", arg: 1, scope: !10366, file: !3, line: 3358, type: !712)
!10374 = !DILocation(line: 3358, column: 58, scope: !10366)
!10375 = !DILocalVariable(name: "radius", arg: 2, scope: !10366, file: !3, line: 3358, type: !341)
!10376 = !DILocation(line: 3358, column: 69, scope: !10366)
!10377 = !DILocalVariable(name: "pce", arg: 3, scope: !10366, file: !3, line: 3358, type: !7413)
!10378 = !DILocation(line: 3358, column: 103, scope: !10366)
!10379 = !DILocalVariable(name: "distance_func", arg: 4, scope: !10366, file: !3, line: 3358, type: !10369)
!10380 = !DILocation(line: 3358, column: 123, scope: !10366)
!10381 = !DILocalVariable(name: "t0", scope: !10366, file: !3, line: 3360, type: !341)
!10382 = !DILocation(line: 3360, column: 8, scope: !10366)
!10383 = !DILocalVariable(name: "t1", scope: !10366, file: !3, line: 3360, type: !341)
!10384 = !DILocation(line: 3360, column: 12, scope: !10366)
!10385 = !DILocalVariable(name: "dt_init", scope: !10366, file: !3, line: 3360, type: !341)
!10386 = !DILocation(line: 3360, column: 16, scope: !10366)
!10387 = !DILocalVariable(name: "d0", scope: !10366, file: !3, line: 3360, type: !341)
!10388 = !DILocation(line: 3360, column: 25, scope: !10366)
!10389 = !DILocalVariable(name: "d1", scope: !10366, file: !3, line: 3360, type: !341)
!10390 = !DILocation(line: 3360, column: 29, scope: !10366)
!10391 = !DILocalVariable(name: "dd", scope: !10366, file: !3, line: 3360, type: !341)
!10392 = !DILocation(line: 3360, column: 33, scope: !10366)
!10393 = !DILocalVariable(name: "n", scope: !10366, file: !3, line: 3360, type: !563)
!10394 = !DILocation(line: 3360, column: 37, scope: !10366)
!10395 = !DILocalVariable(name: "iter", scope: !10366, file: !3, line: 3361, type: !260)
!10396 = !DILocation(line: 3361, column: 6, scope: !10366)
!10397 = !DILocation(line: 3363, column: 2, scope: !10366)
!10398 = !DILocation(line: 3363, column: 7, scope: !10366)
!10399 = !DILocation(line: 3363, column: 15, scope: !10366)
!10400 = !DILocation(line: 3365, column: 6, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 3365, column: 6)
!10402 = !DILocation(line: 3365, column: 11, scope: !10401)
!10403 = !DILocation(line: 3365, column: 26, scope: !10401)
!10404 = !DILocation(line: 3365, column: 6, scope: !10366)
!10405 = !DILocation(line: 3368, column: 35, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 3365, column: 34)
!10407 = !DILocation(line: 3368, column: 40, scope: !10406)
!10408 = !DILocation(line: 3368, column: 33, scope: !10406)
!10409 = !DILocation(line: 3368, column: 11, scope: !10406)
!10410 = !DILocation(line: 3369, column: 2, scope: !10406)
!10411 = !DILocation(line: 3371, column: 11, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 3370, column: 7)
!10413 = !DILocation(line: 3375, column: 5, scope: !10366)
!10414 = !DILocation(line: 3376, column: 32, scope: !10366)
!10415 = !DILocation(line: 3376, column: 37, scope: !10366)
!10416 = !DILocation(line: 3376, column: 41, scope: !10366)
!10417 = !DILocation(line: 3376, column: 46, scope: !10366)
!10418 = !DILocation(line: 3376, column: 49, scope: !10366)
!10419 = !DILocation(line: 3376, column: 2, scope: !10366)
!10420 = !DILocation(line: 3377, column: 7, scope: !10366)
!10421 = !DILocation(line: 3377, column: 21, scope: !10366)
!10422 = !DILocation(line: 3377, column: 26, scope: !10366)
!10423 = !DILocation(line: 3377, column: 31, scope: !10366)
!10424 = !DILocation(line: 3377, column: 39, scope: !10366)
!10425 = !DILocation(line: 3377, column: 44, scope: !10366)
!10426 = !DILocation(line: 3377, column: 5, scope: !10366)
!10427 = !DILocation(line: 3378, column: 7, scope: !10366)
!10428 = !DILocation(line: 3378, column: 5, scope: !10366)
!10429 = !DILocation(line: 3379, column: 5, scope: !10366)
!10430 = !DILocation(line: 3381, column: 11, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 3381, column: 2)
!10432 = !DILocation(line: 3381, column: 7, scope: !10431)
!10433 = !DILocation(line: 3381, column: 15, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 3381, column: 2)
!10435 = !DILocation(line: 3381, column: 19, scope: !10434)
!10436 = !DILocation(line: 3381, column: 2, scope: !10431)
!10437 = !DILocation(line: 3383, column: 33, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 3381, column: 32)
!10439 = !DILocation(line: 3383, column: 38, scope: !10438)
!10440 = !DILocation(line: 3383, column: 42, scope: !10438)
!10441 = !DILocation(line: 3383, column: 47, scope: !10438)
!10442 = !DILocation(line: 3383, column: 50, scope: !10438)
!10443 = !DILocation(line: 3383, column: 3, scope: !10438)
!10444 = !DILocation(line: 3384, column: 18, scope: !10438)
!10445 = !DILocation(line: 3384, column: 23, scope: !10438)
!10446 = !DILocation(line: 3384, column: 26, scope: !10438)
!10447 = !DILocation(line: 3384, column: 31, scope: !10438)
!10448 = !DILocation(line: 3384, column: 36, scope: !10438)
!10449 = !DILocation(line: 3384, column: 41, scope: !10438)
!10450 = !DILocation(line: 3384, column: 46, scope: !10438)
!10451 = !DILocation(line: 3384, column: 3, scope: !10438)
!10452 = !DILocation(line: 3386, column: 8, scope: !10438)
!10453 = !DILocation(line: 3386, column: 22, scope: !10438)
!10454 = !DILocation(line: 3386, column: 27, scope: !10438)
!10455 = !DILocation(line: 3386, column: 30, scope: !10438)
!10456 = !DILocation(line: 3386, column: 38, scope: !10438)
!10457 = !DILocation(line: 3386, column: 43, scope: !10438)
!10458 = !DILocation(line: 3386, column: 6, scope: !10438)
!10459 = !DILocation(line: 3389, column: 7, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 3389, column: 7)
!10461 = !DILocation(line: 3389, column: 12, scope: !10460)
!10462 = !DILocation(line: 3389, column: 17, scope: !10460)
!10463 = !DILocation(line: 3389, column: 20, scope: !10460)
!10464 = !DILocation(line: 3389, column: 23, scope: !10460)
!10465 = !DILocation(line: 3389, column: 29, scope: !10460)
!10466 = !DILocation(line: 3389, column: 32, scope: !10460)
!10467 = !DILocation(line: 3389, column: 38, scope: !10460)
!10468 = !DILocation(line: 3389, column: 37, scope: !10460)
!10469 = !DILocation(line: 3389, column: 35, scope: !10460)
!10470 = !DILocation(line: 3389, column: 7, scope: !10438)
!10471 = !DILocation(line: 3390, column: 15, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10460, file: !3, line: 3389, column: 46)
!10473 = !DILocation(line: 3390, column: 20, scope: !10472)
!10474 = !DILocation(line: 3390, column: 23, scope: !10472)
!10475 = !DILocation(line: 3390, column: 28, scope: !10472)
!10476 = !DILocation(line: 3390, column: 4, scope: !10472)
!10477 = !DILocation(line: 3391, column: 15, scope: !10472)
!10478 = !DILocation(line: 3391, column: 20, scope: !10472)
!10479 = !DILocation(line: 3391, column: 25, scope: !10472)
!10480 = !DILocation(line: 3391, column: 4, scope: !10472)
!10481 = !DILocation(line: 3392, column: 4, scope: !10472)
!10482 = !DILocation(line: 3392, column: 9, scope: !10472)
!10483 = !DILocation(line: 3392, column: 16, scope: !10472)
!10484 = !DILocation(line: 3393, column: 4, scope: !10472)
!10485 = !DILocation(line: 3398, column: 7, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 3398, column: 7)
!10487 = !DILocation(line: 3398, column: 13, scope: !10486)
!10488 = !DILocation(line: 3398, column: 10, scope: !10486)
!10489 = !DILocation(line: 3398, column: 7, scope: !10438)
!10490 = !DILocation(line: 3401, column: 8, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10492, file: !3, line: 3401, column: 8)
!10492 = distinct !DILexicalBlock(scope: !10486, file: !3, line: 3398, column: 17)
!10493 = !DILocation(line: 3401, column: 13, scope: !10491)
!10494 = !DILocation(line: 3401, column: 8, scope: !10492)
!10495 = !DILocation(line: 3402, column: 8, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10491, file: !3, line: 3401, column: 19)
!10497 = !DILocation(line: 3403, column: 35, scope: !10496)
!10498 = !DILocation(line: 3403, column: 40, scope: !10496)
!10499 = !DILocation(line: 3403, column: 44, scope: !10496)
!10500 = !DILocation(line: 3403, column: 49, scope: !10496)
!10501 = !DILocation(line: 3403, column: 52, scope: !10496)
!10502 = !DILocation(line: 3403, column: 5, scope: !10496)
!10503 = !DILocation(line: 3404, column: 10, scope: !10496)
!10504 = !DILocation(line: 3404, column: 24, scope: !10496)
!10505 = !DILocation(line: 3404, column: 29, scope: !10496)
!10506 = !DILocation(line: 3404, column: 34, scope: !10496)
!10507 = !DILocation(line: 3404, column: 42, scope: !10496)
!10508 = !DILocation(line: 3404, column: 47, scope: !10496)
!10509 = !DILocation(line: 3404, column: 8, scope: !10496)
!10510 = !DILocation(line: 3405, column: 17, scope: !10496)
!10511 = !DILocation(line: 3405, column: 15, scope: !10496)
!10512 = !DILocation(line: 3405, column: 8, scope: !10496)
!10513 = !DILocation(line: 3406, column: 8, scope: !10496)
!10514 = !DILocation(line: 3407, column: 5, scope: !10496)
!10515 = !DILocation(line: 3410, column: 5, scope: !10491)
!10516 = !DILocation(line: 3413, column: 9, scope: !10438)
!10517 = !DILocation(line: 3413, column: 12, scope: !10438)
!10518 = !DILocation(line: 3413, column: 11, scope: !10438)
!10519 = !DILocation(line: 3413, column: 17, scope: !10438)
!10520 = !DILocation(line: 3413, column: 20, scope: !10438)
!10521 = !DILocation(line: 3413, column: 19, scope: !10438)
!10522 = !DILocation(line: 3413, column: 15, scope: !10438)
!10523 = !DILocation(line: 3413, column: 6, scope: !10438)
!10524 = !DILocation(line: 3415, column: 8, scope: !10438)
!10525 = !DILocation(line: 3415, column: 6, scope: !10438)
!10526 = !DILocation(line: 3416, column: 8, scope: !10438)
!10527 = !DILocation(line: 3416, column: 6, scope: !10438)
!10528 = !DILocation(line: 3418, column: 9, scope: !10438)
!10529 = !DILocation(line: 3418, column: 12, scope: !10438)
!10530 = !DILocation(line: 3418, column: 11, scope: !10438)
!10531 = !DILocation(line: 3418, column: 6, scope: !10438)
!10532 = !DILocation(line: 3422, column: 7, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 3422, column: 7)
!10534 = !DILocation(line: 3422, column: 12, scope: !10533)
!10535 = !DILocation(line: 3422, column: 17, scope: !10533)
!10536 = !DILocation(line: 3422, column: 20, scope: !10533)
!10537 = !DILocation(line: 3422, column: 23, scope: !10533)
!10538 = !DILocation(line: 3422, column: 7, scope: !10438)
!10539 = !DILocation(line: 3423, column: 7, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 3422, column: 30)
!10541 = !DILocation(line: 3424, column: 34, scope: !10540)
!10542 = !DILocation(line: 3424, column: 39, scope: !10540)
!10543 = !DILocation(line: 3424, column: 43, scope: !10540)
!10544 = !DILocation(line: 3424, column: 48, scope: !10540)
!10545 = !DILocation(line: 3424, column: 51, scope: !10540)
!10546 = !DILocation(line: 3424, column: 4, scope: !10540)
!10547 = !DILocation(line: 3425, column: 9, scope: !10540)
!10548 = !DILocation(line: 3425, column: 23, scope: !10540)
!10549 = !DILocation(line: 3425, column: 28, scope: !10540)
!10550 = !DILocation(line: 3425, column: 33, scope: !10540)
!10551 = !DILocation(line: 3425, column: 41, scope: !10540)
!10552 = !DILocation(line: 3425, column: 46, scope: !10540)
!10553 = !DILocation(line: 3425, column: 7, scope: !10540)
!10554 = !DILocation(line: 3426, column: 16, scope: !10540)
!10555 = !DILocation(line: 3426, column: 14, scope: !10540)
!10556 = !DILocation(line: 3426, column: 7, scope: !10540)
!10557 = !DILocation(line: 3427, column: 7, scope: !10540)
!10558 = !DILocation(line: 3428, column: 4, scope: !10540)
!10559 = !DILocation(line: 3430, column: 12, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 3430, column: 12)
!10561 = !DILocation(line: 3430, column: 17, scope: !10560)
!10562 = !DILocation(line: 3430, column: 22, scope: !10560)
!10563 = !DILocation(line: 3430, column: 26, scope: !10560)
!10564 = !DILocation(line: 3430, column: 29, scope: !10560)
!10565 = !DILocation(line: 3430, column: 47, scope: !10560)
!10566 = !DILocation(line: 3430, column: 50, scope: !10560)
!10567 = !DILocation(line: 3430, column: 53, scope: !10560)
!10568 = !DILocation(line: 3430, column: 12, scope: !10533)
!10569 = !DILocation(line: 3431, column: 4, scope: !10560)
!10570 = !DILocation(line: 3433, column: 7, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 3433, column: 7)
!10572 = !DILocation(line: 3433, column: 10, scope: !10571)
!10573 = !DILocation(line: 3433, column: 28, scope: !10571)
!10574 = !DILocation(line: 3433, column: 31, scope: !10571)
!10575 = !DILocation(line: 3433, column: 34, scope: !10571)
!10576 = !DILocation(line: 3433, column: 7, scope: !10438)
!10577 = !DILocation(line: 3434, column: 8, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 3434, column: 8)
!10579 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 3433, column: 54)
!10580 = !DILocation(line: 3434, column: 11, scope: !10578)
!10581 = !DILocation(line: 3434, column: 30, scope: !10578)
!10582 = !DILocation(line: 3434, column: 33, scope: !10578)
!10583 = !DILocation(line: 3434, column: 36, scope: !10578)
!10584 = !DILocation(line: 3434, column: 8, scope: !10579)
!10585 = !DILocation(line: 3435, column: 9, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 3435, column: 9)
!10587 = distinct !DILexicalBlock(scope: !10578, file: !3, line: 3434, column: 44)
!10588 = !DILocation(line: 3435, column: 23, scope: !10586)
!10589 = !DILocation(line: 3435, column: 9, scope: !10587)
!10590 = !DILocation(line: 3436, column: 17, scope: !10586)
!10591 = !DILocation(line: 3436, column: 22, scope: !10586)
!10592 = !DILocation(line: 3436, column: 27, scope: !10586)
!10593 = !DILocation(line: 3436, column: 6, scope: !10586)
!10594 = !DILocation(line: 3438, column: 5, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 3438, column: 5)
!10596 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 3438, column: 5)
!10597 = !DILocation(line: 3438, column: 5, scope: !10596)
!10598 = !DILocation(line: 3438, column: 5, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 3438, column: 5)
!10600 = !DILocation(line: 3440, column: 12, scope: !10587)
!10601 = !DILocation(line: 3440, column: 5, scope: !10587)
!10602 = !DILocation(line: 3443, column: 5, scope: !10578)
!10603 = !DILocation(line: 3445, column: 2, scope: !10438)
!10604 = !DILocation(line: 3381, column: 28, scope: !10434)
!10605 = !DILocation(line: 3381, column: 2, scope: !10434)
!10606 = distinct !{!10606, !10436, !10607}
!10607 = !DILocation(line: 3445, column: 2, scope: !10431)
!10608 = !DILocation(line: 3446, column: 2, scope: !10366)
!10609 = !DILocation(line: 3447, column: 1, scope: !10366)
!10610 = distinct !DISubprogram(name: "nr_signed_distance_to_plane", scope: !3, file: !3, line: 3207, type: !10371, scopeLine: 3208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10611 = !DILocalVariable(name: "p", arg: 1, scope: !10610, file: !3, line: 3207, type: !1796)
!10612 = !DILocation(line: 3207, column: 49, scope: !10610)
!10613 = !DILocalVariable(name: "radius", arg: 2, scope: !10610, file: !3, line: 3207, type: !341)
!10614 = !DILocation(line: 3207, column: 58, scope: !10610)
!10615 = !DILocalVariable(name: "pce", arg: 3, scope: !10610, file: !3, line: 3207, type: !7413)
!10616 = !DILocation(line: 3207, column: 92, scope: !10610)
!10617 = !DILocalVariable(name: "nor", arg: 4, scope: !10610, file: !3, line: 3207, type: !1796)
!10618 = !DILocation(line: 3207, column: 104, scope: !10610)
!10619 = !DILocalVariable(name: "p0", scope: !10610, file: !3, line: 3209, type: !563)
!10620 = !DILocation(line: 3209, column: 8, scope: !10610)
!10621 = !DILocalVariable(name: "e1", scope: !10610, file: !3, line: 3209, type: !563)
!10622 = !DILocation(line: 3209, column: 15, scope: !10610)
!10623 = !DILocalVariable(name: "e2", scope: !10610, file: !3, line: 3209, type: !563)
!10624 = !DILocation(line: 3209, column: 22, scope: !10610)
!10625 = !DILocalVariable(name: "d", scope: !10610, file: !3, line: 3209, type: !341)
!10626 = !DILocation(line: 3209, column: 29, scope: !10610)
!10627 = !DILocation(line: 3211, column: 14, scope: !10610)
!10628 = !DILocation(line: 3211, column: 18, scope: !10610)
!10629 = !DILocation(line: 3211, column: 23, scope: !10610)
!10630 = !DILocation(line: 3211, column: 27, scope: !10610)
!10631 = !DILocation(line: 3211, column: 32, scope: !10610)
!10632 = !DILocation(line: 3211, column: 2, scope: !10610)
!10633 = !DILocation(line: 3212, column: 14, scope: !10610)
!10634 = !DILocation(line: 3212, column: 18, scope: !10610)
!10635 = !DILocation(line: 3212, column: 23, scope: !10610)
!10636 = !DILocation(line: 3212, column: 27, scope: !10610)
!10637 = !DILocation(line: 3212, column: 32, scope: !10610)
!10638 = !DILocation(line: 3212, column: 2, scope: !10610)
!10639 = !DILocation(line: 3213, column: 14, scope: !10610)
!10640 = !DILocation(line: 3213, column: 18, scope: !10610)
!10641 = !DILocation(line: 3213, column: 21, scope: !10610)
!10642 = !DILocation(line: 3213, column: 26, scope: !10610)
!10643 = !DILocation(line: 3213, column: 2, scope: !10610)
!10644 = !DILocation(line: 3215, column: 16, scope: !10610)
!10645 = !DILocation(line: 3215, column: 21, scope: !10610)
!10646 = !DILocation(line: 3215, column: 25, scope: !10610)
!10647 = !DILocation(line: 3215, column: 2, scope: !10610)
!10648 = !DILocation(line: 3216, column: 15, scope: !10610)
!10649 = !DILocation(line: 3216, column: 2, scope: !10610)
!10650 = !DILocation(line: 3218, column: 15, scope: !10610)
!10651 = !DILocation(line: 3218, column: 19, scope: !10610)
!10652 = !DILocation(line: 3218, column: 6, scope: !10610)
!10653 = !DILocation(line: 3218, column: 4, scope: !10610)
!10654 = !DILocation(line: 3220, column: 6, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 3220, column: 6)
!10656 = !DILocation(line: 3220, column: 11, scope: !10655)
!10657 = !DILocation(line: 3220, column: 19, scope: !10655)
!10658 = !DILocation(line: 3220, column: 6, scope: !10610)
!10659 = !DILocation(line: 3221, column: 7, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 3221, column: 7)
!10661 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 3220, column: 26)
!10662 = !DILocation(line: 3221, column: 9, scope: !10660)
!10663 = !DILocation(line: 3221, column: 7, scope: !10661)
!10664 = !DILocation(line: 3222, column: 4, scope: !10660)
!10665 = !DILocation(line: 3222, column: 9, scope: !10660)
!10666 = !DILocation(line: 3222, column: 17, scope: !10660)
!10667 = !DILocation(line: 3224, column: 4, scope: !10660)
!10668 = !DILocation(line: 3224, column: 9, scope: !10660)
!10669 = !DILocation(line: 3224, column: 17, scope: !10660)
!10670 = !DILocation(line: 3225, column: 2, scope: !10661)
!10671 = !DILocation(line: 3227, column: 6, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 3227, column: 6)
!10673 = !DILocation(line: 3227, column: 11, scope: !10672)
!10674 = !DILocation(line: 3227, column: 19, scope: !10672)
!10675 = !DILocation(line: 3227, column: 6, scope: !10610)
!10676 = !DILocation(line: 3228, column: 13, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 3227, column: 25)
!10678 = !DILocation(line: 3228, column: 3, scope: !10677)
!10679 = !DILocation(line: 3229, column: 8, scope: !10677)
!10680 = !DILocation(line: 3229, column: 7, scope: !10677)
!10681 = !DILocation(line: 3229, column: 5, scope: !10677)
!10682 = !DILocation(line: 3230, column: 2, scope: !10677)
!10683 = !DILocation(line: 3232, column: 9, scope: !10610)
!10684 = !DILocation(line: 3232, column: 13, scope: !10610)
!10685 = !DILocation(line: 3232, column: 11, scope: !10610)
!10686 = !DILocation(line: 3232, column: 2, scope: !10610)
!10687 = distinct !DISubprogram(name: "collision_interpolate_element", scope: !3, file: !3, line: 3250, type: !10688, scopeLine: 3251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10688 = !DISubroutineType(types: !10689)
!10689 = !{null, !7413, !341, !341, !712}
!10690 = !DILocalVariable(name: "pce", arg: 1, scope: !10687, file: !3, line: 3250, type: !7413)
!10691 = !DILocation(line: 3250, column: 69, scope: !10687)
!10692 = !DILocalVariable(name: "t", arg: 2, scope: !10687, file: !3, line: 3250, type: !341)
!10693 = !DILocation(line: 3250, column: 80, scope: !10687)
!10694 = !DILocalVariable(name: "fac", arg: 3, scope: !10687, file: !3, line: 3250, type: !341)
!10695 = !DILocation(line: 3250, column: 89, scope: !10687)
!10696 = !DILocalVariable(name: "col", arg: 4, scope: !10687, file: !3, line: 3250, type: !712)
!10697 = !DILocation(line: 3250, column: 113, scope: !10687)
!10698 = !DILocalVariable(name: "f", scope: !10687, file: !3, line: 3255, type: !341)
!10699 = !DILocation(line: 3255, column: 8, scope: !10687)
!10700 = !DILocation(line: 3255, column: 12, scope: !10687)
!10701 = !DILocation(line: 3255, column: 18, scope: !10687)
!10702 = !DILocation(line: 3255, column: 25, scope: !10687)
!10703 = !DILocation(line: 3255, column: 24, scope: !10687)
!10704 = !DILocation(line: 3255, column: 19, scope: !10687)
!10705 = !DILocation(line: 3255, column: 16, scope: !10687)
!10706 = !DILocalVariable(name: "mul", scope: !10687, file: !3, line: 3256, type: !341)
!10707 = !DILocation(line: 3256, column: 8, scope: !10687)
!10708 = !DILocation(line: 3256, column: 14, scope: !10687)
!10709 = !DILocation(line: 3256, column: 19, scope: !10687)
!10710 = !DILocation(line: 3256, column: 26, scope: !10687)
!10711 = !DILocation(line: 3256, column: 31, scope: !10687)
!10712 = !DILocation(line: 3256, column: 36, scope: !10687)
!10713 = !DILocation(line: 3256, column: 41, scope: !10687)
!10714 = !DILocation(line: 3256, column: 46, scope: !10687)
!10715 = !DILocation(line: 3256, column: 40, scope: !10687)
!10716 = !DILocation(line: 3256, column: 28, scope: !10687)
!10717 = !DILocation(line: 3256, column: 24, scope: !10687)
!10718 = !DILocation(line: 3257, column: 6, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10687, file: !3, line: 3257, column: 6)
!10720 = !DILocation(line: 3257, column: 11, scope: !10719)
!10721 = !DILocation(line: 3257, column: 15, scope: !10719)
!10722 = !DILocation(line: 3257, column: 6, scope: !10687)
!10723 = !DILocation(line: 3258, column: 18, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 3257, column: 20)
!10725 = !DILocation(line: 3258, column: 23, scope: !10724)
!10726 = !DILocation(line: 3258, column: 27, scope: !10724)
!10727 = !DILocation(line: 3258, column: 32, scope: !10724)
!10728 = !DILocation(line: 3258, column: 38, scope: !10724)
!10729 = !DILocation(line: 3258, column: 43, scope: !10724)
!10730 = !DILocation(line: 3258, column: 49, scope: !10724)
!10731 = !DILocation(line: 3258, column: 3, scope: !10724)
!10732 = !DILocation(line: 3260, column: 7, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10724, file: !3, line: 3260, column: 7)
!10734 = !DILocation(line: 3260, column: 12, scope: !10733)
!10735 = !DILocation(line: 3260, column: 16, scope: !10733)
!10736 = !DILocation(line: 3260, column: 7, scope: !10724)
!10737 = !DILocation(line: 3261, column: 19, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10733, file: !3, line: 3260, column: 21)
!10739 = !DILocation(line: 3261, column: 24, scope: !10738)
!10740 = !DILocation(line: 3261, column: 28, scope: !10738)
!10741 = !DILocation(line: 3261, column: 33, scope: !10738)
!10742 = !DILocation(line: 3261, column: 39, scope: !10738)
!10743 = !DILocation(line: 3261, column: 44, scope: !10738)
!10744 = !DILocation(line: 3261, column: 50, scope: !10738)
!10745 = !DILocation(line: 3261, column: 4, scope: !10738)
!10746 = !DILocation(line: 3263, column: 8, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10738, file: !3, line: 3263, column: 8)
!10748 = !DILocation(line: 3263, column: 13, scope: !10747)
!10749 = !DILocation(line: 3263, column: 17, scope: !10747)
!10750 = !DILocation(line: 3263, column: 8, scope: !10738)
!10751 = !DILocation(line: 3264, column: 20, scope: !10747)
!10752 = !DILocation(line: 3264, column: 25, scope: !10747)
!10753 = !DILocation(line: 3264, column: 29, scope: !10747)
!10754 = !DILocation(line: 3264, column: 34, scope: !10747)
!10755 = !DILocation(line: 3264, column: 40, scope: !10747)
!10756 = !DILocation(line: 3264, column: 45, scope: !10747)
!10757 = !DILocation(line: 3264, column: 51, scope: !10747)
!10758 = !DILocation(line: 3264, column: 5, scope: !10747)
!10759 = !DILocation(line: 3265, column: 3, scope: !10738)
!10760 = !DILocation(line: 3266, column: 2, scope: !10724)
!10761 = !DILocation(line: 3267, column: 1, scope: !10687)
!10762 = distinct !DISubprogram(name: "nr_distance_to_edge", scope: !3, file: !3, line: 3234, type: !10371, scopeLine: 3235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10763 = !DILocalVariable(name: "p", arg: 1, scope: !10762, file: !3, line: 3234, type: !1796)
!10764 = !DILocation(line: 3234, column: 41, scope: !10762)
!10765 = !DILocalVariable(name: "radius", arg: 2, scope: !10762, file: !3, line: 3234, type: !341)
!10766 = !DILocation(line: 3234, column: 50, scope: !10762)
!10767 = !DILocalVariable(name: "pce", arg: 3, scope: !10762, file: !3, line: 3234, type: !7413)
!10768 = !DILocation(line: 3234, column: 84, scope: !10762)
!10769 = !DILocalVariable(name: "UNUSED_nor", arg: 4, scope: !10762, file: !3, line: 3234, type: !1796)
!10770 = !DILocation(line: 3234, column: 96, scope: !10762)
!10771 = !DILocalVariable(name: "v0", scope: !10762, file: !3, line: 3236, type: !563)
!10772 = !DILocation(line: 3236, column: 8, scope: !10762)
!10773 = !DILocalVariable(name: "v1", scope: !10762, file: !3, line: 3236, type: !563)
!10774 = !DILocation(line: 3236, column: 15, scope: !10762)
!10775 = !DILocalVariable(name: "v2", scope: !10762, file: !3, line: 3236, type: !563)
!10776 = !DILocation(line: 3236, column: 22, scope: !10762)
!10777 = !DILocalVariable(name: "c", scope: !10762, file: !3, line: 3236, type: !563)
!10778 = !DILocation(line: 3236, column: 29, scope: !10762)
!10779 = !DILocation(line: 3238, column: 14, scope: !10762)
!10780 = !DILocation(line: 3238, column: 18, scope: !10762)
!10781 = !DILocation(line: 3238, column: 23, scope: !10762)
!10782 = !DILocation(line: 3238, column: 27, scope: !10762)
!10783 = !DILocation(line: 3238, column: 32, scope: !10762)
!10784 = !DILocation(line: 3238, column: 2, scope: !10762)
!10785 = !DILocation(line: 3239, column: 14, scope: !10762)
!10786 = !DILocation(line: 3239, column: 18, scope: !10762)
!10787 = !DILocation(line: 3239, column: 21, scope: !10762)
!10788 = !DILocation(line: 3239, column: 26, scope: !10762)
!10789 = !DILocation(line: 3239, column: 2, scope: !10762)
!10790 = !DILocation(line: 3240, column: 14, scope: !10762)
!10791 = !DILocation(line: 3240, column: 18, scope: !10762)
!10792 = !DILocation(line: 3240, column: 21, scope: !10762)
!10793 = !DILocation(line: 3240, column: 26, scope: !10762)
!10794 = !DILocation(line: 3240, column: 2, scope: !10762)
!10795 = !DILocation(line: 3242, column: 16, scope: !10762)
!10796 = !DILocation(line: 3242, column: 19, scope: !10762)
!10797 = !DILocation(line: 3242, column: 23, scope: !10762)
!10798 = !DILocation(line: 3242, column: 2, scope: !10762)
!10799 = !DILocation(line: 3244, column: 22, scope: !10762)
!10800 = !DILocation(line: 3244, column: 15, scope: !10762)
!10801 = !DILocation(line: 3244, column: 32, scope: !10762)
!10802 = !DILocation(line: 3244, column: 25, scope: !10762)
!10803 = !DILocation(line: 3244, column: 24, scope: !10762)
!10804 = !DILocation(line: 3244, column: 9, scope: !10762)
!10805 = !DILocation(line: 3244, column: 39, scope: !10762)
!10806 = !DILocation(line: 3244, column: 37, scope: !10762)
!10807 = !DILocation(line: 3244, column: 2, scope: !10762)
!10808 = distinct !DISubprogram(name: "nr_distance_to_vert", scope: !3, file: !3, line: 3246, type: !10371, scopeLine: 3247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10809 = !DILocalVariable(name: "p", arg: 1, scope: !10808, file: !3, line: 3246, type: !1796)
!10810 = !DILocation(line: 3246, column: 41, scope: !10808)
!10811 = !DILocalVariable(name: "radius", arg: 2, scope: !10808, file: !3, line: 3246, type: !341)
!10812 = !DILocation(line: 3246, column: 50, scope: !10808)
!10813 = !DILocalVariable(name: "pce", arg: 3, scope: !10808, file: !3, line: 3246, type: !7413)
!10814 = !DILocation(line: 3246, column: 84, scope: !10808)
!10815 = !DILocalVariable(name: "UNUSED_nor", arg: 4, scope: !10808, file: !3, line: 3246, type: !1796)
!10816 = !DILocation(line: 3246, column: 96, scope: !10808)
!10817 = !DILocation(line: 3248, column: 18, scope: !10808)
!10818 = !DILocation(line: 3248, column: 21, scope: !10808)
!10819 = !DILocation(line: 3248, column: 26, scope: !10808)
!10820 = !DILocation(line: 3248, column: 9, scope: !10808)
!10821 = !DILocation(line: 3248, column: 32, scope: !10808)
!10822 = !DILocation(line: 3248, column: 30, scope: !10808)
!10823 = !DILocation(line: 3248, column: 2, scope: !10808)
!10824 = distinct !DISubprogram(name: "len_v3v3", scope: !4875, file: !4875, line: 759, type: !4944, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10825 = !DILocalVariable(name: "a", arg: 1, scope: !10824, file: !4875, line: 759, type: !2826)
!10826 = !DILocation(line: 759, column: 36, scope: !10824)
!10827 = !DILocalVariable(name: "b", arg: 2, scope: !10824, file: !4875, line: 759, type: !2826)
!10828 = !DILocation(line: 759, column: 54, scope: !10824)
!10829 = !DILocalVariable(name: "d", scope: !10824, file: !4875, line: 761, type: !563)
!10830 = !DILocation(line: 761, column: 8, scope: !10824)
!10831 = !DILocation(line: 763, column: 14, scope: !10824)
!10832 = !DILocation(line: 763, column: 17, scope: !10824)
!10833 = !DILocation(line: 763, column: 20, scope: !10824)
!10834 = !DILocation(line: 763, column: 2, scope: !10824)
!10835 = !DILocation(line: 764, column: 16, scope: !10824)
!10836 = !DILocation(line: 764, column: 9, scope: !10824)
!10837 = !DILocation(line: 764, column: 2, scope: !10824)
!10838 = distinct !DISubprogram(name: "fluid_default_settings", scope: !3, file: !3, line: 4912, type: !10839, scopeLine: 4913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10839 = !DISubroutineType(types: !10840)
!10840 = !{null, !2192}
!10841 = !DILocalVariable(name: "part", arg: 1, scope: !10838, file: !3, line: 4912, type: !2192)
!10842 = !DILocation(line: 4912, column: 54, scope: !10838)
!10843 = !DILocalVariable(name: "fluid", scope: !10838, file: !3, line: 4914, type: !6083)
!10844 = !DILocation(line: 4914, column: 20, scope: !10838)
!10845 = !DILocation(line: 4914, column: 28, scope: !10838)
!10846 = !DILocation(line: 4914, column: 34, scope: !10838)
!10847 = !DILocation(line: 4916, column: 2, scope: !10838)
!10848 = !DILocation(line: 4916, column: 9, scope: !10838)
!10849 = !DILocation(line: 4916, column: 18, scope: !10838)
!10850 = !DILocation(line: 4917, column: 2, scope: !10838)
!10851 = !DILocation(line: 4917, column: 9, scope: !10838)
!10852 = !DILocation(line: 4917, column: 29, scope: !10838)
!10853 = !DILocation(line: 4918, column: 2, scope: !10838)
!10854 = !DILocation(line: 4918, column: 9, scope: !10838)
!10855 = !DILocation(line: 4918, column: 21, scope: !10838)
!10856 = !DILocation(line: 4919, column: 2, scope: !10838)
!10857 = !DILocation(line: 4919, column: 9, scope: !10838)
!10858 = !DILocation(line: 4919, column: 21, scope: !10838)
!10859 = !DILocation(line: 4920, column: 2, scope: !10838)
!10860 = !DILocation(line: 4920, column: 9, scope: !10838)
!10861 = !DILocation(line: 4920, column: 25, scope: !10838)
!10862 = !DILocation(line: 4921, column: 2, scope: !10838)
!10863 = !DILocation(line: 4921, column: 9, scope: !10838)
!10864 = !DILocation(line: 4921, column: 24, scope: !10838)
!10865 = !DILocation(line: 4922, column: 2, scope: !10838)
!10866 = !DILocation(line: 4922, column: 9, scope: !10838)
!10867 = !DILocation(line: 4922, column: 21, scope: !10838)
!10868 = !DILocation(line: 4923, column: 2, scope: !10838)
!10869 = !DILocation(line: 4923, column: 9, scope: !10838)
!10870 = !DILocation(line: 4923, column: 25, scope: !10838)
!10871 = !DILocation(line: 4924, column: 2, scope: !10838)
!10872 = !DILocation(line: 4924, column: 9, scope: !10838)
!10873 = !DILocation(line: 4924, column: 22, scope: !10838)
!10874 = !DILocation(line: 4925, column: 2, scope: !10838)
!10875 = !DILocation(line: 4925, column: 9, scope: !10838)
!10876 = !DILocation(line: 4925, column: 18, scope: !10838)
!10877 = !DILocation(line: 4926, column: 2, scope: !10838)
!10878 = !DILocation(line: 4926, column: 9, scope: !10838)
!10879 = !DILocation(line: 4926, column: 16, scope: !10838)
!10880 = !DILocation(line: 4927, column: 2, scope: !10838)
!10881 = !DILocation(line: 4927, column: 9, scope: !10838)
!10882 = !DILocation(line: 4927, column: 14, scope: !10838)
!10883 = !DILocation(line: 4928, column: 1, scope: !10838)
!10884 = distinct !DISubprogram(name: "psys_clear_temp_pointcache", scope: !3, file: !3, line: 2208, type: !7976, scopeLine: 2209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10885 = !DILocalVariable(name: "psys", arg: 1, scope: !10884, file: !3, line: 2208, type: !3144)
!10886 = !DILocation(line: 2208, column: 56, scope: !10884)
!10887 = !DILocation(line: 2210, column: 6, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10884, file: !3, line: 2210, column: 6)
!10889 = !DILocation(line: 2210, column: 12, scope: !10888)
!10890 = !DILocation(line: 2210, column: 24, scope: !10888)
!10891 = !DILocation(line: 2210, column: 29, scope: !10888)
!10892 = !DILocation(line: 2210, column: 6, scope: !10884)
!10893 = !DILocation(line: 2211, column: 25, scope: !10888)
!10894 = !DILocation(line: 2211, column: 31, scope: !10888)
!10895 = !DILocation(line: 2211, column: 43, scope: !10888)
!10896 = !DILocation(line: 2211, column: 3, scope: !10888)
!10897 = !DILocation(line: 2212, column: 1, scope: !10884)
!10898 = distinct !DISubprogram(name: "reset_all_particles", scope: !3, file: !3, line: 2068, type: !10899, scopeLine: 2069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10899 = !DISubroutineType(types: !10900)
!10900 = !{null, !3218, !341, !341, !260}
!10901 = !DILocalVariable(name: "sim", arg: 1, scope: !10898, file: !3, line: 2068, type: !3218)
!10902 = !DILocation(line: 2068, column: 57, scope: !10898)
!10903 = !DILocalVariable(name: "dtime", arg: 2, scope: !10898, file: !3, line: 2068, type: !341)
!10904 = !DILocation(line: 2068, column: 68, scope: !10898)
!10905 = !DILocalVariable(name: "cfra", arg: 3, scope: !10898, file: !3, line: 2068, type: !341)
!10906 = !DILocation(line: 2068, column: 81, scope: !10898)
!10907 = !DILocalVariable(name: "from", arg: 4, scope: !10898, file: !3, line: 2068, type: !260)
!10908 = !DILocation(line: 2068, column: 91, scope: !10898)
!10909 = !DILocalVariable(name: "pa", scope: !10898, file: !3, line: 2070, type: !2461)
!10910 = !DILocation(line: 2070, column: 16, scope: !10898)
!10911 = !DILocalVariable(name: "p", scope: !10898, file: !3, line: 2071, type: !260)
!10912 = !DILocation(line: 2071, column: 6, scope: !10898)
!10913 = !DILocalVariable(name: "totpart", scope: !10898, file: !3, line: 2071, type: !260)
!10914 = !DILocation(line: 2071, column: 9, scope: !10898)
!10915 = !DILocation(line: 2071, column: 17, scope: !10898)
!10916 = !DILocation(line: 2071, column: 22, scope: !10898)
!10917 = !DILocation(line: 2071, column: 28, scope: !10898)
!10918 = !DILocation(line: 2073, column: 9, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10898, file: !3, line: 2073, column: 2)
!10920 = !DILocation(line: 2073, column: 8, scope: !10919)
!10921 = !DILocation(line: 2073, column: 18, scope: !10919)
!10922 = !DILocation(line: 2073, column: 23, scope: !10919)
!10923 = !DILocation(line: 2073, column: 29, scope: !10919)
!10924 = !DILocation(line: 2073, column: 39, scope: !10919)
!10925 = !DILocation(line: 2073, column: 38, scope: !10919)
!10926 = !DILocation(line: 2073, column: 17, scope: !10919)
!10927 = !DILocation(line: 2073, column: 7, scope: !10919)
!10928 = !DILocation(line: 2073, column: 45, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10919, file: !3, line: 2073, column: 2)
!10930 = !DILocation(line: 2073, column: 47, scope: !10929)
!10931 = !DILocation(line: 2073, column: 46, scope: !10929)
!10932 = !DILocation(line: 2073, column: 2, scope: !10919)
!10933 = !DILocation(line: 2074, column: 18, scope: !10929)
!10934 = !DILocation(line: 2074, column: 23, scope: !10929)
!10935 = !DILocation(line: 2074, column: 27, scope: !10929)
!10936 = !DILocation(line: 2074, column: 34, scope: !10929)
!10937 = !DILocation(line: 2074, column: 3, scope: !10929)
!10938 = !DILocation(line: 2073, column: 57, scope: !10929)
!10939 = !DILocation(line: 2073, column: 63, scope: !10929)
!10940 = !DILocation(line: 2073, column: 2, scope: !10929)
!10941 = distinct !{!10941, !10932, !10942}
!10942 = !DILocation(line: 2074, column: 38, scope: !10919)
!10943 = !DILocation(line: 2075, column: 1, scope: !10898)
!10944 = distinct !DISubprogram(name: "cached_step", scope: !3, file: !3, line: 4530, type: !8560, scopeLine: 4531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!10945 = !DILocalVariable(name: "sim", arg: 1, scope: !10944, file: !3, line: 4530, type: !3218)
!10946 = !DILocation(line: 4530, column: 49, scope: !10944)
!10947 = !DILocalVariable(name: "cfra", arg: 2, scope: !10944, file: !3, line: 4530, type: !341)
!10948 = !DILocation(line: 4530, column: 60, scope: !10944)
!10949 = !DILocalVariable(name: "psys", scope: !10944, file: !3, line: 4532, type: !3144)
!10950 = !DILocation(line: 4532, column: 18, scope: !10944)
!10951 = !DILocation(line: 4532, column: 25, scope: !10944)
!10952 = !DILocation(line: 4532, column: 30, scope: !10944)
!10953 = !DILocalVariable(name: "part", scope: !10944, file: !3, line: 4533, type: !2192)
!10954 = !DILocation(line: 4533, column: 20, scope: !10944)
!10955 = !DILocation(line: 4533, column: 27, scope: !10944)
!10956 = !DILocation(line: 4533, column: 33, scope: !10944)
!10957 = !DILocalVariable(name: "ptex", scope: !10944, file: !3, line: 4534, type: !3199)
!10958 = !DILocation(line: 4534, column: 18, scope: !10944)
!10959 = !DILocalVariable(name: "pa", scope: !10944, file: !3, line: 4535, type: !2461)
!10960 = !DILocation(line: 4535, column: 2, scope: !10944)
!10961 = !DILocalVariable(name: "p", scope: !10944, file: !3, line: 4535, type: !260)
!10962 = !DILocalVariable(name: "disp", scope: !10944, file: !3, line: 4536, type: !341)
!10963 = !DILocation(line: 4536, column: 8, scope: !10944)
!10964 = !DILocalVariable(name: "dietime", scope: !10944, file: !3, line: 4536, type: !341)
!10965 = !DILocation(line: 4536, column: 14, scope: !10944)
!10966 = !DILocation(line: 4538, column: 24, scope: !10944)
!10967 = !DILocation(line: 4538, column: 2, scope: !10944)
!10968 = !DILocation(line: 4540, column: 44, scope: !10944)
!10969 = !DILocation(line: 4540, column: 8, scope: !10944)
!10970 = !DILocation(line: 4540, column: 6, scope: !10944)
!10971 = !DILocation(line: 4542, column: 2, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 4542, column: 2)
!10973 = !DILocation(line: 4542, column: 2, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 4542, column: 2)
!10975 = !DILocation(line: 4543, column: 20, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 4542, column: 17)
!10977 = !DILocation(line: 4543, column: 25, scope: !10976)
!10978 = !DILocation(line: 4543, column: 48, scope: !10976)
!10979 = !DILocation(line: 4543, column: 3, scope: !10976)
!10980 = !DILocation(line: 4544, column: 14, scope: !10976)
!10981 = !DILocation(line: 4544, column: 20, scope: !10976)
!10982 = !DILocation(line: 4544, column: 30, scope: !10976)
!10983 = !DILocation(line: 4544, column: 24, scope: !10976)
!10984 = !DILocation(line: 4544, column: 3, scope: !10976)
!10985 = !DILocation(line: 4544, column: 7, scope: !10976)
!10986 = !DILocation(line: 4544, column: 12, scope: !10976)
!10987 = !DILocation(line: 4545, column: 7, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 4545, column: 7)
!10989 = !DILocation(line: 4545, column: 13, scope: !10988)
!10990 = !DILocation(line: 4545, column: 22, scope: !10988)
!10991 = !DILocation(line: 4545, column: 7, scope: !10976)
!10992 = !DILocation(line: 4546, column: 23, scope: !10988)
!10993 = !DILocation(line: 4546, column: 29, scope: !10988)
!10994 = !DILocation(line: 4546, column: 51, scope: !10988)
!10995 = !DILocation(line: 4546, column: 57, scope: !10988)
!10996 = !DILocation(line: 4546, column: 59, scope: !10988)
!10997 = !DILocation(line: 4546, column: 40, scope: !10988)
!10998 = !DILocation(line: 4546, column: 38, scope: !10988)
!10999 = !DILocation(line: 4546, column: 21, scope: !10988)
!11000 = !DILocation(line: 4546, column: 4, scope: !10988)
!11001 = !DILocation(line: 4546, column: 8, scope: !10988)
!11002 = !DILocation(line: 4546, column: 13, scope: !10988)
!11003 = !DILocation(line: 4548, column: 63, scope: !10976)
!11004 = !DILocation(line: 4548, column: 31, scope: !10976)
!11005 = !DILocation(line: 4548, column: 3, scope: !10976)
!11006 = !DILocation(line: 4548, column: 9, scope: !10976)
!11007 = !DILocation(line: 4548, column: 29, scope: !10976)
!11008 = !DILocation(line: 4550, column: 13, scope: !10976)
!11009 = !DILocation(line: 4550, column: 17, scope: !10976)
!11010 = !DILocation(line: 4550, column: 11, scope: !10976)
!11011 = !DILocation(line: 4553, column: 7, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 4553, column: 7)
!11013 = !DILocation(line: 4553, column: 11, scope: !11012)
!11014 = !DILocation(line: 4553, column: 18, scope: !11012)
!11015 = !DILocation(line: 4553, column: 16, scope: !11012)
!11016 = !DILocation(line: 4553, column: 7, scope: !10976)
!11017 = !DILocation(line: 4554, column: 4, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 4553, column: 24)
!11019 = !DILocation(line: 4554, column: 8, scope: !11018)
!11020 = !DILocation(line: 4554, column: 14, scope: !11018)
!11021 = !DILocation(line: 4555, column: 8, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11018, file: !3, line: 4555, column: 8)
!11023 = !DILocation(line: 4555, column: 14, scope: !11022)
!11024 = !DILocation(line: 4555, column: 19, scope: !11022)
!11025 = !DILocation(line: 4555, column: 33, scope: !11022)
!11026 = !DILocation(line: 4555, column: 37, scope: !11022)
!11027 = !DILocation(line: 4555, column: 43, scope: !11022)
!11028 = !DILocation(line: 4555, column: 55, scope: !11022)
!11029 = !DILocation(line: 4555, column: 60, scope: !11022)
!11030 = !DILocation(line: 4555, column: 80, scope: !11022)
!11031 = !DILocation(line: 4555, column: 8, scope: !11018)
!11032 = !DILocation(line: 4556, column: 20, scope: !11022)
!11033 = !DILocation(line: 4556, column: 25, scope: !11022)
!11034 = !DILocation(line: 4556, column: 35, scope: !11022)
!11035 = !DILocation(line: 4556, column: 5, scope: !11022)
!11036 = !DILocation(line: 4557, column: 3, scope: !11018)
!11037 = !DILocation(line: 4558, column: 12, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 4558, column: 12)
!11039 = !DILocation(line: 4558, column: 23, scope: !11038)
!11040 = !DILocation(line: 4558, column: 20, scope: !11038)
!11041 = !DILocation(line: 4558, column: 12, scope: !11012)
!11042 = !DILocation(line: 4559, column: 4, scope: !11038)
!11043 = !DILocation(line: 4559, column: 8, scope: !11038)
!11044 = !DILocation(line: 4559, column: 14, scope: !11038)
!11045 = !DILocation(line: 4561, column: 4, scope: !11038)
!11046 = !DILocation(line: 4561, column: 8, scope: !11038)
!11047 = !DILocation(line: 4561, column: 14, scope: !11038)
!11048 = !DILocation(line: 4563, column: 7, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 4563, column: 7)
!11050 = !DILocation(line: 4563, column: 13, scope: !11049)
!11051 = !DILocation(line: 4563, column: 7, scope: !10976)
!11052 = !DILocation(line: 4564, column: 20, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11049, file: !3, line: 4563, column: 34)
!11054 = !DILocation(line: 4564, column: 26, scope: !11053)
!11055 = !DILocation(line: 4564, column: 4, scope: !11053)
!11056 = !DILocation(line: 4565, column: 4, scope: !11053)
!11057 = !DILocation(line: 4565, column: 10, scope: !11053)
!11058 = !DILocation(line: 4565, column: 30, scope: !11053)
!11059 = !DILocation(line: 4566, column: 3, scope: !11053)
!11060 = !DILocation(line: 4568, column: 18, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 4568, column: 7)
!11062 = !DILocation(line: 4568, column: 24, scope: !11061)
!11063 = !DILocation(line: 4568, column: 7, scope: !11061)
!11064 = !DILocation(line: 4568, column: 29, scope: !11061)
!11065 = !DILocation(line: 4568, column: 27, scope: !11061)
!11066 = !DILocation(line: 4568, column: 7, scope: !10976)
!11067 = !DILocation(line: 4569, column: 4, scope: !11061)
!11068 = !DILocation(line: 4569, column: 8, scope: !11061)
!11069 = !DILocation(line: 4569, column: 13, scope: !11061)
!11070 = !DILocation(line: 4571, column: 4, scope: !11061)
!11071 = !DILocation(line: 4571, column: 8, scope: !11061)
!11072 = !DILocation(line: 4571, column: 13, scope: !11061)
!11073 = !DILocation(line: 4572, column: 2, scope: !10976)
!11074 = distinct !{!11074, !10971, !11075}
!11075 = !DILocation(line: 4572, column: 2, scope: !10972)
!11076 = !DILocation(line: 4573, column: 1, scope: !10944)
!11077 = distinct !DISubprogram(name: "update_children", scope: !3, file: !3, line: 4514, type: !5676, scopeLine: 4515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!11078 = !DILocalVariable(name: "sim", arg: 1, scope: !11077, file: !3, line: 4514, type: !3218)
!11079 = !DILocation(line: 4514, column: 53, scope: !11077)
!11080 = !DILocation(line: 4516, column: 7, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 4516, column: 6)
!11082 = !DILocation(line: 4516, column: 12, scope: !11081)
!11083 = !DILocation(line: 4516, column: 18, scope: !11081)
!11084 = !DILocation(line: 4516, column: 24, scope: !11081)
!11085 = !DILocation(line: 4516, column: 29, scope: !11081)
!11086 = !DILocation(line: 4516, column: 43, scope: !11081)
!11087 = !DILocation(line: 4516, column: 47, scope: !11081)
!11088 = !DILocation(line: 4516, column: 52, scope: !11081)
!11089 = !DILocation(line: 4516, column: 58, scope: !11081)
!11090 = !DILocation(line: 4516, column: 63, scope: !11081)
!11091 = !DILocation(line: 4516, column: 80, scope: !11081)
!11092 = !DILocation(line: 4516, column: 6, scope: !11077)
!11093 = !DILocation(line: 4518, column: 22, scope: !11081)
!11094 = !DILocation(line: 4518, column: 27, scope: !11081)
!11095 = !DILocation(line: 4518, column: 3, scope: !11081)
!11096 = !DILocation(line: 4519, column: 11, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11081, file: !3, line: 4519, column: 11)
!11098 = !DILocation(line: 4519, column: 16, scope: !11097)
!11099 = !DILocation(line: 4519, column: 22, scope: !11097)
!11100 = !DILocation(line: 4519, column: 28, scope: !11097)
!11101 = !DILocation(line: 4519, column: 11, scope: !11081)
!11102 = !DILocation(line: 4520, column: 7, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11104, file: !3, line: 4520, column: 7)
!11104 = distinct !DILexicalBlock(scope: !11097, file: !3, line: 4519, column: 39)
!11105 = !DILocation(line: 4520, column: 12, scope: !11103)
!11106 = !DILocation(line: 4520, column: 18, scope: !11103)
!11107 = !DILocation(line: 4520, column: 49, scope: !11103)
!11108 = !DILocation(line: 4520, column: 54, scope: !11103)
!11109 = !DILocation(line: 4520, column: 61, scope: !11103)
!11110 = !DILocation(line: 4520, column: 66, scope: !11103)
!11111 = !DILocation(line: 4520, column: 30, scope: !11103)
!11112 = !DILocation(line: 4520, column: 27, scope: !11103)
!11113 = !DILocation(line: 4520, column: 7, scope: !11104)
!11114 = !DILocation(line: 4521, column: 25, scope: !11103)
!11115 = !DILocation(line: 4521, column: 4, scope: !11103)
!11116 = !DILocation(line: 4525, column: 2, scope: !11104)
!11117 = !DILocation(line: 4527, column: 22, scope: !11097)
!11118 = !DILocation(line: 4527, column: 27, scope: !11097)
!11119 = !DILocation(line: 4527, column: 3, scope: !11097)
!11120 = !DILocation(line: 4528, column: 1, scope: !11077)
!11121 = distinct !DISubprogram(name: "get_base_time_step", scope: !3, file: !3, line: 4227, type: !11122, scopeLine: 4228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!11122 = !DISubroutineType(types: !11123)
!11123 = !{!341, !2192}
!11124 = !DILocalVariable(name: "part", arg: 1, scope: !11121, file: !3, line: 4227, type: !2192)
!11125 = !DILocation(line: 4227, column: 51, scope: !11121)
!11126 = !DILocation(line: 4229, column: 25, scope: !11121)
!11127 = !DILocation(line: 4229, column: 31, scope: !11121)
!11128 = !DILocation(line: 4229, column: 41, scope: !11121)
!11129 = !DILocation(line: 4229, column: 16, scope: !11121)
!11130 = !DILocation(line: 4229, column: 14, scope: !11121)
!11131 = !DILocation(line: 4229, column: 2, scope: !11121)
!11132 = distinct !DISubprogram(name: "dynamics_step", scope: !3, file: !3, line: 4266, type: !8560, scopeLine: 4267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!11133 = !DILocalVariable(name: "sim", arg: 1, scope: !11132, file: !3, line: 4266, type: !3218)
!11134 = !DILocation(line: 4266, column: 51, scope: !11132)
!11135 = !DILocalVariable(name: "cfra", arg: 2, scope: !11132, file: !3, line: 4266, type: !341)
!11136 = !DILocation(line: 4266, column: 62, scope: !11132)
!11137 = !DILocalVariable(name: "psys", scope: !11132, file: !3, line: 4268, type: !3144)
!11138 = !DILocation(line: 4268, column: 18, scope: !11132)
!11139 = !DILocation(line: 4268, column: 25, scope: !11132)
!11140 = !DILocation(line: 4268, column: 30, scope: !11132)
!11141 = !DILocalVariable(name: "part", scope: !11132, file: !3, line: 4269, type: !2192)
!11142 = !DILocation(line: 4269, column: 20, scope: !11132)
!11143 = !DILocation(line: 4269, column: 25, scope: !11132)
!11144 = !DILocation(line: 4269, column: 31, scope: !11132)
!11145 = !DILocalVariable(name: "rng", scope: !11132, file: !3, line: 4270, type: !11146)
!11146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11147, size: 64)
!11147 = !DIDerivedType(tag: DW_TAG_typedef, name: "RNG", file: !11148, line: 41, baseType: !1840)
!11148 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11149 = !DILocation(line: 4270, column: 7, scope: !11132)
!11150 = !DILocalVariable(name: "bbd", scope: !11132, file: !3, line: 4271, type: !11151)
!11151 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidBrainData", file: !11152, line: 54, baseType: !11153)
!11152 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_boids.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidBrainData", file: !11152, line: 41, size: 768, elements: !11154)
!11154 = !{!11155, !11157, !11159, !11160, !11161, !11162, !11163, !11164, !11165, !11166, !11167, !11168}
!11155 = !DIDerivedType(tag: DW_TAG_member, name: "sim", scope: !11153, file: !11152, line: 42, baseType: !11156, size: 64)
!11156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!11157 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !11153, file: !11152, line: 43, baseType: !11158, size: 64, offset: 64)
!11158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!11159 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !11153, file: !11152, line: 44, baseType: !341, size: 32, offset: 128)
!11160 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !11153, file: !11152, line: 44, baseType: !341, size: 32, offset: 160)
!11161 = !DIDerivedType(tag: DW_TAG_member, name: "dfra", scope: !11153, file: !11152, line: 44, baseType: !341, size: 32, offset: 192)
!11162 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_co", scope: !11153, file: !11152, line: 45, baseType: !563, size: 96, offset: 224)
!11163 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_speed", scope: !11153, file: !11152, line: 45, baseType: !341, size: 32, offset: 320)
!11164 = !DIDerivedType(tag: DW_TAG_member, name: "goal_ob", scope: !11153, file: !11152, line: 48, baseType: !718, size: 64, offset: 384)
!11165 = !DIDerivedType(tag: DW_TAG_member, name: "goal_co", scope: !11153, file: !11152, line: 49, baseType: !563, size: 96, offset: 448)
!11166 = !DIDerivedType(tag: DW_TAG_member, name: "goal_nor", scope: !11153, file: !11152, line: 50, baseType: !563, size: 96, offset: 544)
!11167 = !DIDerivedType(tag: DW_TAG_member, name: "goal_priority", scope: !11153, file: !11152, line: 51, baseType: !341, size: 32, offset: 640)
!11168 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !11153, file: !11152, line: 53, baseType: !1839, size: 64, offset: 704)
!11169 = !DILocation(line: 4271, column: 16, scope: !11132)
!11170 = !DILocalVariable(name: "ptex", scope: !11132, file: !3, line: 4272, type: !3199)
!11171 = !DILocation(line: 4272, column: 18, scope: !11132)
!11172 = !DILocalVariable(name: "pa", scope: !11132, file: !3, line: 4273, type: !2461)
!11173 = !DILocation(line: 4273, column: 2, scope: !11132)
!11174 = !DILocalVariable(name: "p", scope: !11132, file: !3, line: 4273, type: !260)
!11175 = !DILocalVariable(name: "timestep", scope: !11132, file: !3, line: 4274, type: !341)
!11176 = !DILocation(line: 4274, column: 8, scope: !11132)
!11177 = !DILocalVariable(name: "dfra", scope: !11132, file: !3, line: 4276, type: !341)
!11178 = !DILocation(line: 4276, column: 8, scope: !11132)
!11179 = !DILocalVariable(name: "dtime", scope: !11132, file: !3, line: 4276, type: !341)
!11180 = !DILocation(line: 4276, column: 14, scope: !11132)
!11181 = !DILocalVariable(name: "birthtime", scope: !11132, file: !3, line: 4277, type: !341)
!11182 = !DILocation(line: 4277, column: 8, scope: !11132)
!11183 = !DILocalVariable(name: "dietime", scope: !11132, file: !3, line: 4277, type: !341)
!11184 = !DILocation(line: 4277, column: 19, scope: !11132)
!11185 = !DILocation(line: 4280, column: 8, scope: !11132)
!11186 = !DILocation(line: 4280, column: 15, scope: !11132)
!11187 = !DILocation(line: 4280, column: 21, scope: !11132)
!11188 = !DILocation(line: 4280, column: 13, scope: !11132)
!11189 = !DILocation(line: 4280, column: 6, scope: !11132)
!11190 = !DILocation(line: 4282, column: 31, scope: !11132)
!11191 = !DILocation(line: 4282, column: 13, scope: !11132)
!11192 = !DILocation(line: 4282, column: 11, scope: !11132)
!11193 = !DILocation(line: 4283, column: 9, scope: !11132)
!11194 = !DILocation(line: 4283, column: 14, scope: !11132)
!11195 = !DILocation(line: 4283, column: 13, scope: !11132)
!11196 = !DILocation(line: 4283, column: 7, scope: !11132)
!11197 = !DILocation(line: 4285, column: 6, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4285, column: 6)
!11199 = !DILocation(line: 4285, column: 11, scope: !11198)
!11200 = !DILocation(line: 4285, column: 6, scope: !11132)
!11201 = !DILocation(line: 4286, column: 3, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 4286, column: 3)
!11203 = distinct !DILexicalBlock(scope: !11198, file: !3, line: 4285, column: 19)
!11204 = !DILocation(line: 4286, column: 3, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11202, file: !3, line: 4286, column: 3)
!11206 = !DILocation(line: 4286, column: 3, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11205, file: !3, line: 4286, column: 3)
!11208 = !DILocation(line: 4287, column: 21, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11207, file: !3, line: 4286, column: 27)
!11210 = !DILocation(line: 4287, column: 26, scope: !11209)
!11211 = !DILocation(line: 4287, column: 49, scope: !11209)
!11212 = !DILocation(line: 4287, column: 4, scope: !11209)
!11213 = !DILocation(line: 4288, column: 15, scope: !11209)
!11214 = !DILocation(line: 4288, column: 21, scope: !11209)
!11215 = !DILocation(line: 4288, column: 31, scope: !11209)
!11216 = !DILocation(line: 4288, column: 25, scope: !11209)
!11217 = !DILocation(line: 4288, column: 4, scope: !11209)
!11218 = !DILocation(line: 4288, column: 8, scope: !11209)
!11219 = !DILocation(line: 4288, column: 13, scope: !11209)
!11220 = !DILocation(line: 4289, column: 8, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 4289, column: 8)
!11222 = !DILocation(line: 4289, column: 14, scope: !11221)
!11223 = !DILocation(line: 4289, column: 23, scope: !11221)
!11224 = !DILocation(line: 4289, column: 8, scope: !11209)
!11225 = !DILocation(line: 4290, column: 24, scope: !11221)
!11226 = !DILocation(line: 4290, column: 30, scope: !11221)
!11227 = !DILocation(line: 4290, column: 52, scope: !11221)
!11228 = !DILocation(line: 4290, column: 58, scope: !11221)
!11229 = !DILocation(line: 4290, column: 60, scope: !11221)
!11230 = !DILocation(line: 4290, column: 41, scope: !11221)
!11231 = !DILocation(line: 4290, column: 39, scope: !11221)
!11232 = !DILocation(line: 4290, column: 22, scope: !11221)
!11233 = !DILocation(line: 4290, column: 5, scope: !11221)
!11234 = !DILocation(line: 4290, column: 9, scope: !11221)
!11235 = !DILocation(line: 4290, column: 14, scope: !11221)
!11236 = !DILocation(line: 4292, column: 19, scope: !11209)
!11237 = !DILocation(line: 4292, column: 24, scope: !11209)
!11238 = !DILocation(line: 4292, column: 28, scope: !11209)
!11239 = !DILocation(line: 4292, column: 35, scope: !11209)
!11240 = !DILocation(line: 4292, column: 4, scope: !11209)
!11241 = !DILocation(line: 4293, column: 3, scope: !11209)
!11242 = distinct !{!11242, !11201, !11243}
!11243 = !DILocation(line: 4293, column: 3, scope: !11202)
!11244 = !DILocation(line: 4294, column: 3, scope: !11203)
!11245 = !DILocation(line: 4297, column: 30, scope: !11132)
!11246 = !DILocation(line: 4297, column: 25, scope: !11132)
!11247 = !DILocation(line: 4297, column: 23, scope: !11132)
!11248 = !DILocation(line: 4297, column: 37, scope: !11132)
!11249 = !DILocation(line: 4297, column: 43, scope: !11132)
!11250 = !DILocation(line: 4297, column: 35, scope: !11132)
!11251 = !DILocation(line: 4297, column: 2, scope: !11132)
!11252 = !DILocation(line: 4299, column: 44, scope: !11132)
!11253 = !DILocation(line: 4299, column: 39, scope: !11132)
!11254 = !DILocation(line: 4299, column: 37, scope: !11132)
!11255 = !DILocation(line: 4299, column: 51, scope: !11132)
!11256 = !DILocation(line: 4299, column: 57, scope: !11132)
!11257 = !DILocation(line: 4299, column: 49, scope: !11132)
!11258 = !DILocation(line: 4299, column: 8, scope: !11132)
!11259 = !DILocation(line: 4299, column: 6, scope: !11132)
!11260 = !DILocation(line: 4301, column: 24, scope: !11132)
!11261 = !DILocation(line: 4301, column: 2, scope: !11132)
!11262 = !DILocation(line: 4303, column: 6, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4303, column: 6)
!11264 = !DILocation(line: 4303, column: 12, scope: !11263)
!11265 = !DILocation(line: 4303, column: 17, scope: !11263)
!11266 = !DILocation(line: 4303, column: 6, scope: !11132)
!11267 = !DILocation(line: 4304, column: 39, scope: !11263)
!11268 = !DILocation(line: 4304, column: 44, scope: !11263)
!11269 = !DILocation(line: 4304, column: 51, scope: !11263)
!11270 = !DILocation(line: 4304, column: 56, scope: !11263)
!11271 = !DILocation(line: 4304, column: 20, scope: !11263)
!11272 = !DILocation(line: 4304, column: 3, scope: !11263)
!11273 = !DILocation(line: 4304, column: 8, scope: !11263)
!11274 = !DILocation(line: 4304, column: 18, scope: !11263)
!11275 = !DILocation(line: 4307, column: 10, scope: !11132)
!11276 = !DILocation(line: 4307, column: 16, scope: !11132)
!11277 = !DILocation(line: 4307, column: 2, scope: !11132)
!11278 = !DILocalVariable(name: "pt", scope: !11279, file: !3, line: 4310, type: !5619)
!11279 = distinct !DILexicalBlock(scope: !11280, file: !3, line: 4309, column: 3)
!11280 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4307, column: 26)
!11281 = !DILocation(line: 4310, column: 20, scope: !11279)
!11282 = !DILocation(line: 4310, column: 25, scope: !11279)
!11283 = !DILocation(line: 4310, column: 31, scope: !11279)
!11284 = !DILocation(line: 4310, column: 39, scope: !11279)
!11285 = !DILocation(line: 4311, column: 14, scope: !11279)
!11286 = !DILocation(line: 4311, column: 8, scope: !11279)
!11287 = !DILocation(line: 4311, column: 12, scope: !11279)
!11288 = !DILocation(line: 4312, column: 15, scope: !11279)
!11289 = !DILocation(line: 4312, column: 8, scope: !11279)
!11290 = !DILocation(line: 4312, column: 13, scope: !11279)
!11291 = !DILocation(line: 4313, column: 15, scope: !11279)
!11292 = !DILocation(line: 4313, column: 8, scope: !11279)
!11293 = !DILocation(line: 4313, column: 13, scope: !11279)
!11294 = !DILocation(line: 4314, column: 15, scope: !11279)
!11295 = !DILocation(line: 4314, column: 8, scope: !11279)
!11296 = !DILocation(line: 4314, column: 13, scope: !11279)
!11297 = !DILocation(line: 4315, column: 19, scope: !11279)
!11298 = !DILocation(line: 4315, column: 8, scope: !11279)
!11299 = !DILocation(line: 4315, column: 17, scope: !11279)
!11300 = !DILocation(line: 4316, column: 14, scope: !11279)
!11301 = !DILocation(line: 4316, column: 8, scope: !11279)
!11302 = !DILocation(line: 4316, column: 12, scope: !11279)
!11303 = !DILocation(line: 4318, column: 30, scope: !11279)
!11304 = !DILocation(line: 4318, column: 36, scope: !11279)
!11305 = !DILocation(line: 4318, column: 4, scope: !11279)
!11306 = !DILocation(line: 4320, column: 24, scope: !11279)
!11307 = !DILocation(line: 4320, column: 30, scope: !11279)
!11308 = !DILocation(line: 4320, column: 4, scope: !11279)
!11309 = !DILocation(line: 4322, column: 4, scope: !11279)
!11310 = !DILocation(line: 4322, column: 11, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11312, file: !3, line: 4322, column: 4)
!11312 = distinct !DILexicalBlock(scope: !11279, file: !3, line: 4322, column: 4)
!11313 = !DILocation(line: 4322, column: 4, scope: !11312)
!11314 = !DILocation(line: 4323, column: 9, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !3, line: 4323, column: 9)
!11316 = distinct !DILexicalBlock(scope: !11311, file: !3, line: 4322, column: 28)
!11317 = !DILocation(line: 4323, column: 13, scope: !11315)
!11318 = !DILocation(line: 4323, column: 9, scope: !11316)
!11319 = !DILocation(line: 4324, column: 46, scope: !11315)
!11320 = !DILocation(line: 4324, column: 50, scope: !11315)
!11321 = !DILocation(line: 4324, column: 54, scope: !11315)
!11322 = !DILocation(line: 4324, column: 70, scope: !11315)
!11323 = !DILocation(line: 4324, column: 74, scope: !11315)
!11324 = !DILocation(line: 4324, column: 78, scope: !11315)
!11325 = !DILocation(line: 4324, column: 32, scope: !11315)
!11326 = !DILocation(line: 4324, column: 83, scope: !11315)
!11327 = !DILocation(line: 4324, column: 6, scope: !11315)
!11328 = !DILocation(line: 4325, column: 4, scope: !11316)
!11329 = !DILocation(line: 4322, column: 18, scope: !11311)
!11330 = !DILocation(line: 4322, column: 22, scope: !11311)
!11331 = !DILocation(line: 4322, column: 17, scope: !11311)
!11332 = !DILocation(line: 4322, column: 4, scope: !11311)
!11333 = distinct !{!11333, !11313, !11334}
!11334 = !DILocation(line: 4325, column: 4, scope: !11312)
!11335 = !DILocation(line: 4326, column: 4, scope: !11279)
!11336 = !DILocalVariable(name: "pt", scope: !11337, file: !3, line: 4330, type: !5619)
!11337 = distinct !DILexicalBlock(scope: !11280, file: !3, line: 4329, column: 3)
!11338 = !DILocation(line: 4330, column: 20, scope: !11337)
!11339 = !DILocation(line: 4330, column: 25, scope: !11337)
!11340 = !DILocation(line: 4330, column: 31, scope: !11337)
!11341 = !DILocation(line: 4330, column: 39, scope: !11337)
!11342 = !DILocation(line: 4331, column: 33, scope: !11337)
!11343 = !DILocation(line: 4331, column: 39, scope: !11337)
!11344 = !DILocation(line: 4331, column: 4, scope: !11337)
!11345 = !DILocation(line: 4333, column: 4, scope: !11337)
!11346 = !DILocation(line: 4333, column: 11, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11348, file: !3, line: 4333, column: 4)
!11348 = distinct !DILexicalBlock(scope: !11337, file: !3, line: 4333, column: 4)
!11349 = !DILocation(line: 4333, column: 4, scope: !11348)
!11350 = !DILocation(line: 4334, column: 9, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11352, file: !3, line: 4334, column: 9)
!11352 = distinct !DILexicalBlock(scope: !11347, file: !3, line: 4333, column: 28)
!11353 = !DILocation(line: 4334, column: 13, scope: !11351)
!11354 = !DILocation(line: 4334, column: 9, scope: !11352)
!11355 = !DILocation(line: 4335, column: 49, scope: !11351)
!11356 = !DILocation(line: 4335, column: 53, scope: !11351)
!11357 = !DILocation(line: 4335, column: 57, scope: !11351)
!11358 = !DILocation(line: 4335, column: 73, scope: !11351)
!11359 = !DILocation(line: 4335, column: 77, scope: !11351)
!11360 = !DILocation(line: 4335, column: 81, scope: !11351)
!11361 = !DILocation(line: 4335, column: 35, scope: !11351)
!11362 = !DILocation(line: 4335, column: 86, scope: !11351)
!11363 = !DILocation(line: 4335, column: 6, scope: !11351)
!11364 = !DILocation(line: 4336, column: 4, scope: !11352)
!11365 = !DILocation(line: 4333, column: 18, scope: !11347)
!11366 = !DILocation(line: 4333, column: 22, scope: !11347)
!11367 = !DILocation(line: 4333, column: 17, scope: !11347)
!11368 = !DILocation(line: 4333, column: 4, scope: !11347)
!11369 = distinct !{!11369, !11349, !11370}
!11370 = !DILocation(line: 4336, column: 4, scope: !11348)
!11371 = !DILocation(line: 4337, column: 4, scope: !11337)
!11372 = !DILocation(line: 4341, column: 2, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4341, column: 2)
!11374 = !DILocation(line: 4341, column: 2, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 4341, column: 2)
!11376 = !DILocation(line: 4341, column: 2, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11375, file: !3, line: 4341, column: 2)
!11378 = !DILocation(line: 4342, column: 22, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 4341, column: 23)
!11380 = !DILocation(line: 4342, column: 26, scope: !11379)
!11381 = !DILocation(line: 4342, column: 38, scope: !11379)
!11382 = !DILocation(line: 4342, column: 42, scope: !11379)
!11383 = !DILocation(line: 4342, column: 3, scope: !11379)
!11384 = !DILocation(line: 4344, column: 20, scope: !11379)
!11385 = !DILocation(line: 4344, column: 25, scope: !11379)
!11386 = !DILocation(line: 4344, column: 48, scope: !11379)
!11387 = !DILocation(line: 4344, column: 3, scope: !11379)
!11388 = !DILocation(line: 4346, column: 14, scope: !11379)
!11389 = !DILocation(line: 4346, column: 20, scope: !11379)
!11390 = !DILocation(line: 4346, column: 30, scope: !11379)
!11391 = !DILocation(line: 4346, column: 24, scope: !11379)
!11392 = !DILocation(line: 4346, column: 3, scope: !11379)
!11393 = !DILocation(line: 4346, column: 7, scope: !11379)
!11394 = !DILocation(line: 4346, column: 12, scope: !11379)
!11395 = !DILocation(line: 4347, column: 7, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 4347, column: 7)
!11397 = !DILocation(line: 4347, column: 13, scope: !11396)
!11398 = !DILocation(line: 4347, column: 22, scope: !11396)
!11399 = !DILocation(line: 4347, column: 7, scope: !11379)
!11400 = !DILocation(line: 4348, column: 23, scope: !11396)
!11401 = !DILocation(line: 4348, column: 29, scope: !11396)
!11402 = !DILocation(line: 4348, column: 51, scope: !11396)
!11403 = !DILocation(line: 4348, column: 57, scope: !11396)
!11404 = !DILocation(line: 4348, column: 59, scope: !11396)
!11405 = !DILocation(line: 4348, column: 40, scope: !11396)
!11406 = !DILocation(line: 4348, column: 38, scope: !11396)
!11407 = !DILocation(line: 4348, column: 21, scope: !11396)
!11408 = !DILocation(line: 4348, column: 4, scope: !11396)
!11409 = !DILocation(line: 4348, column: 8, scope: !11396)
!11410 = !DILocation(line: 4348, column: 13, scope: !11396)
!11411 = !DILocation(line: 4350, column: 15, scope: !11379)
!11412 = !DILocation(line: 4350, column: 19, scope: !11379)
!11413 = !DILocation(line: 4350, column: 13, scope: !11379)
!11414 = !DILocation(line: 4351, column: 13, scope: !11379)
!11415 = !DILocation(line: 4351, column: 17, scope: !11379)
!11416 = !DILocation(line: 4351, column: 11, scope: !11379)
!11417 = !DILocation(line: 4354, column: 20, scope: !11379)
!11418 = !DILocation(line: 4354, column: 3, scope: !11379)
!11419 = !DILocation(line: 4354, column: 7, scope: !11379)
!11420 = !DILocation(line: 4354, column: 13, scope: !11379)
!11421 = !DILocation(line: 4354, column: 18, scope: !11379)
!11422 = !DILocation(line: 4356, column: 7, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 4356, column: 7)
!11424 = !DILocation(line: 4356, column: 18, scope: !11423)
!11425 = !DILocation(line: 4356, column: 15, scope: !11423)
!11426 = !DILocation(line: 4356, column: 23, scope: !11423)
!11427 = !DILocation(line: 4356, column: 26, scope: !11423)
!11428 = !DILocation(line: 4356, column: 32, scope: !11423)
!11429 = !DILocation(line: 4356, column: 39, scope: !11423)
!11430 = !DILocation(line: 4356, column: 37, scope: !11423)
!11431 = !DILocation(line: 4356, column: 7, scope: !11379)
!11432 = !DILocation(line: 4358, column: 21, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11423, file: !3, line: 4356, column: 48)
!11434 = !DILocation(line: 4358, column: 33, scope: !11433)
!11435 = !DILocation(line: 4358, column: 45, scope: !11433)
!11436 = !DILocation(line: 4358, column: 51, scope: !11433)
!11437 = !DILocation(line: 4358, column: 43, scope: !11433)
!11438 = !DILocation(line: 4358, column: 32, scope: !11433)
!11439 = !DILocation(line: 4358, column: 59, scope: !11433)
!11440 = !DILocation(line: 4358, column: 71, scope: !11433)
!11441 = !DILocation(line: 4358, column: 77, scope: !11433)
!11442 = !DILocation(line: 4358, column: 29, scope: !11433)
!11443 = !DILocation(line: 4358, column: 4, scope: !11433)
!11444 = !DILocation(line: 4358, column: 8, scope: !11433)
!11445 = !DILocation(line: 4358, column: 14, scope: !11433)
!11446 = !DILocation(line: 4358, column: 19, scope: !11433)
!11447 = !DILocation(line: 4359, column: 4, scope: !11433)
!11448 = !DILocation(line: 4359, column: 8, scope: !11433)
!11449 = !DILocation(line: 4359, column: 14, scope: !11433)
!11450 = !DILocation(line: 4360, column: 3, scope: !11433)
!11451 = !DILocation(line: 4361, column: 12, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11423, file: !3, line: 4361, column: 12)
!11453 = !DILocation(line: 4361, column: 25, scope: !11452)
!11454 = !DILocation(line: 4361, column: 22, scope: !11452)
!11455 = !DILocation(line: 4361, column: 30, scope: !11452)
!11456 = !DILocation(line: 4361, column: 33, scope: !11452)
!11457 = !DILocation(line: 4361, column: 46, scope: !11452)
!11458 = !DILocation(line: 4361, column: 52, scope: !11452)
!11459 = !DILocation(line: 4361, column: 43, scope: !11452)
!11460 = !DILocation(line: 4361, column: 12, scope: !11423)
!11461 = !DILocation(line: 4363, column: 19, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 4361, column: 58)
!11463 = !DILocation(line: 4363, column: 24, scope: !11462)
!11464 = !DILocation(line: 4363, column: 28, scope: !11462)
!11465 = !DILocation(line: 4363, column: 33, scope: !11462)
!11466 = !DILocation(line: 4363, column: 32, scope: !11462)
!11467 = !DILocation(line: 4363, column: 43, scope: !11462)
!11468 = !DILocation(line: 4363, column: 4, scope: !11462)
!11469 = !DILocation(line: 4364, column: 4, scope: !11462)
!11470 = !DILocation(line: 4364, column: 8, scope: !11462)
!11471 = !DILocation(line: 4364, column: 14, scope: !11462)
!11472 = !DILocation(line: 4365, column: 21, scope: !11462)
!11473 = !DILocation(line: 4365, column: 28, scope: !11462)
!11474 = !DILocation(line: 4365, column: 26, scope: !11462)
!11475 = !DILocation(line: 4365, column: 4, scope: !11462)
!11476 = !DILocation(line: 4365, column: 8, scope: !11462)
!11477 = !DILocation(line: 4365, column: 14, scope: !11462)
!11478 = !DILocation(line: 4365, column: 19, scope: !11462)
!11479 = !DILocation(line: 4366, column: 3, scope: !11462)
!11480 = !DILocation(line: 4367, column: 12, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 4367, column: 12)
!11482 = !DILocation(line: 4367, column: 22, scope: !11481)
!11483 = !DILocation(line: 4367, column: 20, scope: !11481)
!11484 = !DILocation(line: 4367, column: 12, scope: !11452)
!11485 = !DILocation(line: 4369, column: 3, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11481, file: !3, line: 4367, column: 28)
!11487 = !DILocation(line: 4372, column: 7, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 4372, column: 7)
!11489 = !DILocation(line: 4372, column: 11, scope: !11488)
!11490 = !DILocation(line: 4372, column: 16, scope: !11488)
!11491 = !DILocation(line: 4372, column: 30, scope: !11488)
!11492 = !DILocation(line: 4372, column: 34, scope: !11488)
!11493 = !DILocation(line: 4372, column: 40, scope: !11488)
!11494 = !DILocation(line: 4372, column: 45, scope: !11488)
!11495 = !DILocation(line: 4372, column: 59, scope: !11488)
!11496 = !DILocation(line: 4372, column: 63, scope: !11488)
!11497 = !DILocation(line: 4372, column: 70, scope: !11488)
!11498 = !DILocation(line: 4372, column: 76, scope: !11488)
!11499 = !DILocation(line: 4372, column: 88, scope: !11488)
!11500 = !DILocation(line: 4372, column: 68, scope: !11488)
!11501 = !DILocation(line: 4372, column: 95, scope: !11488)
!11502 = !DILocation(line: 4372, column: 99, scope: !11488)
!11503 = !DILocation(line: 4372, column: 93, scope: !11488)
!11504 = !DILocation(line: 4372, column: 7, scope: !11379)
!11505 = !DILocation(line: 4373, column: 19, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 4372, column: 107)
!11507 = !DILocation(line: 4373, column: 24, scope: !11506)
!11508 = !DILocation(line: 4373, column: 28, scope: !11506)
!11509 = !DILocation(line: 4373, column: 35, scope: !11506)
!11510 = !DILocation(line: 4373, column: 4, scope: !11506)
!11511 = !DILocation(line: 4374, column: 3, scope: !11506)
!11512 = !DILocation(line: 4375, column: 12, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 4375, column: 12)
!11514 = !DILocation(line: 4375, column: 18, scope: !11513)
!11515 = !DILocation(line: 4375, column: 27, scope: !11513)
!11516 = !DILocation(line: 4375, column: 12, scope: !11488)
!11517 = !DILocation(line: 4376, column: 19, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 4375, column: 44)
!11519 = !DILocation(line: 4376, column: 24, scope: !11518)
!11520 = !DILocation(line: 4376, column: 28, scope: !11518)
!11521 = !DILocation(line: 4376, column: 35, scope: !11518)
!11522 = !DILocation(line: 4376, column: 4, scope: !11518)
!11523 = !DILocation(line: 4377, column: 3, scope: !11518)
!11524 = !DILocation(line: 4379, column: 7, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 4379, column: 7)
!11526 = !DILocation(line: 4379, column: 46, scope: !11525)
!11527 = !DILocation(line: 4379, column: 50, scope: !11525)
!11528 = !DILocation(line: 4379, column: 54, scope: !11525)
!11529 = !DILocation(line: 4379, column: 58, scope: !11525)
!11530 = !DILocation(line: 4379, column: 63, scope: !11525)
!11531 = !DILocation(line: 4379, column: 7, scope: !11379)
!11532 = !DILocation(line: 4380, column: 4, scope: !11525)
!11533 = !DILocation(line: 4380, column: 8, scope: !11525)
!11534 = !DILocation(line: 4380, column: 14, scope: !11525)
!11535 = !DILocation(line: 4380, column: 19, scope: !11525)
!11536 = !DILocation(line: 4381, column: 2, scope: !11379)
!11537 = distinct !{!11537, !11372, !11538}
!11538 = !DILocation(line: 4381, column: 2, scope: !11373)
!11539 = !DILocation(line: 4383, column: 10, scope: !11132)
!11540 = !DILocation(line: 4383, column: 16, scope: !11132)
!11541 = !DILocation(line: 4383, column: 2, scope: !11132)
!11542 = !DILocation(line: 4386, column: 4, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !3, line: 4386, column: 4)
!11544 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 4385, column: 3)
!11545 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4383, column: 26)
!11546 = !DILocation(line: 4386, column: 4, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11543, file: !3, line: 4386, column: 4)
!11548 = !DILocation(line: 4386, column: 4, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 4386, column: 4)
!11550 = !DILocation(line: 4388, column: 21, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11549, file: !3, line: 4386, column: 27)
!11552 = !DILocation(line: 4388, column: 26, scope: !11551)
!11553 = !DILocation(line: 4388, column: 29, scope: !11551)
!11554 = !DILocation(line: 4388, column: 33, scope: !11551)
!11555 = !DILocation(line: 4388, column: 39, scope: !11551)
!11556 = !DILocation(line: 4388, column: 45, scope: !11551)
!11557 = !DILocation(line: 4388, column: 5, scope: !11551)
!11558 = !DILocation(line: 4391, column: 9, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 4391, column: 9)
!11560 = !DILocation(line: 4391, column: 14, scope: !11559)
!11561 = !DILocation(line: 4391, column: 9, scope: !11551)
!11562 = !DILocation(line: 4392, column: 22, scope: !11559)
!11563 = !DILocation(line: 4392, column: 27, scope: !11559)
!11564 = !DILocation(line: 4392, column: 30, scope: !11559)
!11565 = !DILocation(line: 4392, column: 34, scope: !11559)
!11566 = !DILocation(line: 4392, column: 40, scope: !11559)
!11567 = !DILocation(line: 4392, column: 46, scope: !11559)
!11568 = !DILocation(line: 4392, column: 6, scope: !11559)
!11569 = !DILocation(line: 4395, column: 18, scope: !11551)
!11570 = !DILocation(line: 4395, column: 24, scope: !11551)
!11571 = !DILocation(line: 4395, column: 28, scope: !11551)
!11572 = !DILocation(line: 4395, column: 32, scope: !11551)
!11573 = !DILocation(line: 4395, column: 38, scope: !11551)
!11574 = !DILocation(line: 4395, column: 44, scope: !11551)
!11575 = !DILocation(line: 4395, column: 5, scope: !11551)
!11576 = !DILocation(line: 4396, column: 4, scope: !11551)
!11577 = distinct !{!11577, !11542, !11578}
!11578 = !DILocation(line: 4396, column: 4, scope: !11543)
!11579 = !DILocation(line: 4397, column: 4, scope: !11544)
!11580 = !DILocation(line: 4401, column: 4, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 4401, column: 4)
!11582 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 4400, column: 3)
!11583 = !DILocation(line: 4401, column: 4, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11581, file: !3, line: 4401, column: 4)
!11585 = !DILocation(line: 4401, column: 4, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11584, file: !3, line: 4401, column: 4)
!11587 = !DILocation(line: 4402, column: 9, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 4401, column: 27)
!11589 = !DILocation(line: 4402, column: 17, scope: !11588)
!11590 = !DILocation(line: 4404, column: 22, scope: !11588)
!11591 = !DILocation(line: 4404, column: 25, scope: !11588)
!11592 = !DILocation(line: 4404, column: 5, scope: !11588)
!11593 = !DILocation(line: 4406, column: 9, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11588, file: !3, line: 4406, column: 9)
!11595 = !DILocation(line: 4406, column: 13, scope: !11594)
!11596 = !DILocation(line: 4406, column: 19, scope: !11594)
!11597 = !DILocation(line: 4406, column: 9, scope: !11588)
!11598 = !DILocation(line: 4407, column: 22, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11594, file: !3, line: 4406, column: 34)
!11600 = !DILocation(line: 4407, column: 6, scope: !11599)
!11601 = !DILocation(line: 4410, column: 10, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11599, file: !3, line: 4410, column: 10)
!11603 = !DILocation(line: 4410, column: 15, scope: !11602)
!11604 = !DILocation(line: 4410, column: 10, scope: !11599)
!11605 = !DILocation(line: 4411, column: 23, scope: !11602)
!11606 = !DILocation(line: 4411, column: 28, scope: !11602)
!11607 = !DILocation(line: 4411, column: 31, scope: !11602)
!11608 = !DILocation(line: 4411, column: 35, scope: !11602)
!11609 = !DILocation(line: 4411, column: 41, scope: !11602)
!11610 = !DILocation(line: 4411, column: 47, scope: !11602)
!11611 = !DILocation(line: 4411, column: 7, scope: !11602)
!11612 = !DILocation(line: 4412, column: 5, scope: !11599)
!11613 = !DILocation(line: 4413, column: 4, scope: !11588)
!11614 = distinct !{!11614, !11580, !11615}
!11615 = !DILocation(line: 4413, column: 4, scope: !11581)
!11616 = !DILocation(line: 4414, column: 4, scope: !11582)
!11617 = !DILocalVariable(name: "sphdata", scope: !11618, file: !3, line: 4418, type: !3139)
!11618 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 4417, column: 3)
!11619 = !DILocation(line: 4418, column: 12, scope: !11618)
!11620 = !DILocalVariable(name: "part", scope: !11618, file: !3, line: 4419, type: !2192)
!11621 = !DILocation(line: 4419, column: 22, scope: !11618)
!11622 = !DILocation(line: 4419, column: 29, scope: !11618)
!11623 = !DILocation(line: 4419, column: 34, scope: !11618)
!11624 = !DILocation(line: 4419, column: 40, scope: !11618)
!11625 = !DILocation(line: 4420, column: 18, scope: !11618)
!11626 = !DILocation(line: 4420, column: 4, scope: !11618)
!11627 = !DILocation(line: 4422, column: 8, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11618, file: !3, line: 4422, column: 8)
!11629 = !DILocation(line: 4422, column: 14, scope: !11628)
!11630 = !DILocation(line: 4422, column: 21, scope: !11628)
!11631 = !DILocation(line: 4422, column: 28, scope: !11628)
!11632 = !DILocation(line: 4422, column: 8, scope: !11618)
!11633 = !DILocation(line: 4428, column: 5, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 4428, column: 5)
!11635 = distinct !DILexicalBlock(scope: !11628, file: !3, line: 4422, column: 47)
!11636 = !DILocation(line: 4428, column: 5, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11634, file: !3, line: 4428, column: 5)
!11638 = !DILocation(line: 4428, column: 5, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11637, file: !3, line: 4428, column: 5)
!11640 = !DILocation(line: 4430, column: 22, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11639, file: !3, line: 4428, column: 28)
!11642 = !DILocation(line: 4430, column: 27, scope: !11641)
!11643 = !DILocation(line: 4430, column: 30, scope: !11641)
!11644 = !DILocation(line: 4430, column: 34, scope: !11641)
!11645 = !DILocation(line: 4430, column: 40, scope: !11641)
!11646 = !DILocation(line: 4430, column: 46, scope: !11641)
!11647 = !DILocation(line: 4430, column: 6, scope: !11641)
!11648 = !DILocation(line: 4433, column: 20, scope: !11641)
!11649 = !DILocation(line: 4433, column: 25, scope: !11641)
!11650 = !DILocation(line: 4433, column: 29, scope: !11641)
!11651 = !DILocation(line: 4433, column: 33, scope: !11641)
!11652 = !DILocation(line: 4433, column: 39, scope: !11641)
!11653 = !DILocation(line: 4433, column: 6, scope: !11641)
!11654 = !DILocation(line: 4435, column: 10, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 4435, column: 10)
!11656 = !DILocation(line: 4435, column: 15, scope: !11655)
!11657 = !DILocation(line: 4435, column: 10, scope: !11641)
!11658 = !DILocation(line: 4436, column: 23, scope: !11655)
!11659 = !DILocation(line: 4436, column: 28, scope: !11655)
!11660 = !DILocation(line: 4436, column: 31, scope: !11655)
!11661 = !DILocation(line: 4436, column: 35, scope: !11655)
!11662 = !DILocation(line: 4436, column: 41, scope: !11655)
!11663 = !DILocation(line: 4436, column: 47, scope: !11655)
!11664 = !DILocation(line: 4436, column: 7, scope: !11655)
!11665 = !DILocation(line: 4440, column: 19, scope: !11641)
!11666 = !DILocation(line: 4440, column: 25, scope: !11641)
!11667 = !DILocation(line: 4440, column: 29, scope: !11641)
!11668 = !DILocation(line: 4440, column: 33, scope: !11641)
!11669 = !DILocation(line: 4440, column: 39, scope: !11641)
!11670 = !DILocation(line: 4440, column: 45, scope: !11641)
!11671 = !DILocation(line: 4440, column: 6, scope: !11641)
!11672 = !DILocation(line: 4445, column: 10, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 4445, column: 10)
!11674 = !DILocation(line: 4445, column: 16, scope: !11673)
!11675 = !DILocation(line: 4445, column: 26, scope: !11673)
!11676 = !DILocation(line: 4445, column: 10, scope: !11641)
!11677 = !DILocation(line: 4446, column: 26, scope: !11673)
!11678 = !DILocation(line: 4446, column: 31, scope: !11673)
!11679 = !DILocation(line: 4446, column: 35, scope: !11673)
!11680 = !DILocation(line: 4446, column: 7, scope: !11673)
!11681 = !DILocation(line: 4447, column: 5, scope: !11641)
!11682 = distinct !{!11682, !11633, !11683}
!11683 = !DILocation(line: 4447, column: 5, scope: !11634)
!11684 = !DILocation(line: 4449, column: 24, scope: !11635)
!11685 = !DILocation(line: 4449, column: 30, scope: !11635)
!11686 = !DILocation(line: 4449, column: 5, scope: !11635)
!11687 = !DILocation(line: 4451, column: 4, scope: !11635)
!11688 = !DILocation(line: 4461, column: 5, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 4461, column: 5)
!11690 = distinct !DILexicalBlock(scope: !11628, file: !3, line: 4452, column: 9)
!11691 = !DILocation(line: 4461, column: 5, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11689, file: !3, line: 4461, column: 5)
!11693 = !DILocation(line: 4461, column: 5, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 4461, column: 5)
!11695 = !DILocation(line: 4462, column: 22, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11694, file: !3, line: 4461, column: 28)
!11697 = !DILocation(line: 4462, column: 27, scope: !11696)
!11698 = !DILocation(line: 4462, column: 30, scope: !11696)
!11699 = !DILocation(line: 4462, column: 34, scope: !11696)
!11700 = !DILocation(line: 4462, column: 40, scope: !11696)
!11701 = !DILocation(line: 4462, column: 46, scope: !11696)
!11702 = !DILocation(line: 4462, column: 6, scope: !11696)
!11703 = !DILocation(line: 4463, column: 5, scope: !11696)
!11704 = distinct !{!11704, !11688, !11705}
!11705 = !DILocation(line: 4463, column: 5, scope: !11689)
!11706 = !DILocation(line: 4469, column: 5, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 4469, column: 5)
!11708 = !DILocation(line: 4469, column: 5, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 4469, column: 5)
!11710 = !DILocation(line: 4469, column: 5, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11709, file: !3, line: 4469, column: 5)
!11712 = !DILocation(line: 4470, column: 29, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 4469, column: 28)
!11714 = !DILocation(line: 4470, column: 33, scope: !11713)
!11715 = !DILocation(line: 4470, column: 37, scope: !11713)
!11716 = !DILocation(line: 4470, column: 43, scope: !11713)
!11717 = !DILocation(line: 4470, column: 6, scope: !11713)
!11718 = !DILocation(line: 4471, column: 5, scope: !11713)
!11719 = distinct !{!11719, !11706, !11720}
!11720 = !DILocation(line: 4471, column: 5, scope: !11707)
!11721 = !DILocation(line: 4477, column: 5, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 4477, column: 5)
!11723 = !DILocation(line: 4477, column: 5, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11722, file: !3, line: 4477, column: 5)
!11725 = !DILocation(line: 4477, column: 5, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11724, file: !3, line: 4477, column: 5)
!11727 = !DILocation(line: 4479, column: 20, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 4477, column: 28)
!11729 = !DILocation(line: 4479, column: 25, scope: !11728)
!11730 = !DILocation(line: 4479, column: 29, scope: !11728)
!11731 = !DILocation(line: 4479, column: 33, scope: !11728)
!11732 = !DILocation(line: 4479, column: 39, scope: !11728)
!11733 = !DILocation(line: 4479, column: 6, scope: !11728)
!11734 = !DILocation(line: 4481, column: 10, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11728, file: !3, line: 4481, column: 10)
!11736 = !DILocation(line: 4481, column: 15, scope: !11735)
!11737 = !DILocation(line: 4481, column: 10, scope: !11728)
!11738 = !DILocation(line: 4482, column: 23, scope: !11735)
!11739 = !DILocation(line: 4482, column: 28, scope: !11735)
!11740 = !DILocation(line: 4482, column: 31, scope: !11735)
!11741 = !DILocation(line: 4482, column: 35, scope: !11735)
!11742 = !DILocation(line: 4482, column: 41, scope: !11735)
!11743 = !DILocation(line: 4482, column: 47, scope: !11735)
!11744 = !DILocation(line: 4482, column: 7, scope: !11735)
!11745 = !DILocation(line: 4486, column: 19, scope: !11728)
!11746 = !DILocation(line: 4486, column: 25, scope: !11728)
!11747 = !DILocation(line: 4486, column: 29, scope: !11728)
!11748 = !DILocation(line: 4486, column: 33, scope: !11728)
!11749 = !DILocation(line: 4486, column: 39, scope: !11728)
!11750 = !DILocation(line: 4486, column: 45, scope: !11728)
!11751 = !DILocation(line: 4486, column: 6, scope: !11728)
!11752 = !DILocation(line: 4491, column: 10, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11728, file: !3, line: 4491, column: 10)
!11754 = !DILocation(line: 4491, column: 16, scope: !11753)
!11755 = !DILocation(line: 4491, column: 26, scope: !11753)
!11756 = !DILocation(line: 4491, column: 10, scope: !11728)
!11757 = !DILocation(line: 4492, column: 26, scope: !11753)
!11758 = !DILocation(line: 4492, column: 31, scope: !11753)
!11759 = !DILocation(line: 4492, column: 35, scope: !11753)
!11760 = !DILocation(line: 4492, column: 7, scope: !11753)
!11761 = !DILocation(line: 4493, column: 5, scope: !11728)
!11762 = distinct !{!11762, !11721, !11763}
!11763 = !DILocation(line: 4493, column: 5, scope: !11722)
!11764 = !DILocation(line: 4496, column: 4, scope: !11618)
!11765 = !DILocation(line: 4497, column: 4, scope: !11618)
!11766 = !DILocation(line: 4502, column: 2, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 4502, column: 2)
!11768 = !DILocation(line: 4502, column: 2, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 4502, column: 2)
!11770 = !DILocation(line: 4502, column: 2, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11769, file: !3, line: 4502, column: 2)
!11772 = !DILocation(line: 4503, column: 7, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11774, file: !3, line: 4503, column: 7)
!11774 = distinct !DILexicalBlock(scope: !11771, file: !3, line: 4502, column: 25)
!11775 = !DILocation(line: 4503, column: 11, scope: !11773)
!11776 = !DILocation(line: 4503, column: 17, scope: !11773)
!11777 = !DILocation(line: 4503, column: 7, scope: !11774)
!11778 = !DILocation(line: 4504, column: 4, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11773, file: !3, line: 4503, column: 32)
!11780 = !DILocation(line: 4504, column: 8, scope: !11779)
!11781 = !DILocation(line: 4504, column: 13, scope: !11779)
!11782 = !DILocation(line: 4505, column: 19, scope: !11779)
!11783 = !DILocation(line: 4505, column: 23, scope: !11779)
!11784 = !DILocation(line: 4505, column: 4, scope: !11779)
!11785 = !DILocation(line: 4505, column: 8, scope: !11779)
!11786 = !DILocation(line: 4505, column: 14, scope: !11779)
!11787 = !DILocation(line: 4505, column: 18, scope: !11779)
!11788 = !DILocation(line: 4506, column: 3, scope: !11779)
!11789 = !DILocation(line: 4508, column: 19, scope: !11773)
!11790 = !DILocation(line: 4508, column: 4, scope: !11773)
!11791 = !DILocation(line: 4508, column: 8, scope: !11773)
!11792 = !DILocation(line: 4508, column: 14, scope: !11773)
!11793 = !DILocation(line: 4508, column: 18, scope: !11773)
!11794 = !DILocation(line: 4509, column: 2, scope: !11774)
!11795 = distinct !{!11795, !11766, !11796}
!11796 = !DILocation(line: 4509, column: 2, scope: !11767)
!11797 = !DILocation(line: 4511, column: 23, scope: !11132)
!11798 = !DILocation(line: 4511, column: 28, scope: !11132)
!11799 = !DILocation(line: 4511, column: 2, scope: !11132)
!11800 = !DILocation(line: 4512, column: 15, scope: !11132)
!11801 = !DILocation(line: 4512, column: 2, scope: !11132)
!11802 = !DILocation(line: 4513, column: 1, scope: !11132)
!11803 = distinct !DISubprogram(name: "update_timestep", scope: !3, file: !3, line: 4232, type: !11804, scopeLine: 4233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!11804 = !DISubroutineType(types: !11805)
!11805 = !{!341, !3144, !3218, !341}
!11806 = !DILocalVariable(name: "psys", arg: 1, scope: !11803, file: !3, line: 4232, type: !3144)
!11807 = !DILocation(line: 4232, column: 46, scope: !11803)
!11808 = !DILocalVariable(name: "sim", arg: 2, scope: !11803, file: !3, line: 4232, type: !3218)
!11809 = !DILocation(line: 4232, column: 76, scope: !11803)
!11810 = !DILocalVariable(name: "t_frac", arg: 3, scope: !11803, file: !3, line: 4232, type: !341)
!11811 = !DILocation(line: 4232, column: 87, scope: !11803)
!11812 = !DILocalVariable(name: "dt_target", scope: !11803, file: !3, line: 4234, type: !341)
!11813 = !DILocation(line: 4234, column: 8, scope: !11803)
!11814 = !DILocation(line: 4235, column: 6, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11803, file: !3, line: 4235, column: 6)
!11816 = !DILocation(line: 4235, column: 11, scope: !11815)
!11817 = !DILocation(line: 4235, column: 23, scope: !11815)
!11818 = !DILocation(line: 4235, column: 6, scope: !11803)
!11819 = !DILocation(line: 4236, column: 13, scope: !11815)
!11820 = !DILocation(line: 4236, column: 3, scope: !11815)
!11821 = !DILocation(line: 4238, column: 15, scope: !11815)
!11822 = !DILocation(line: 4238, column: 21, scope: !11815)
!11823 = !DILocation(line: 4238, column: 32, scope: !11815)
!11824 = !DILocation(line: 4238, column: 38, scope: !11815)
!11825 = !DILocation(line: 4238, column: 44, scope: !11815)
!11826 = !DILocation(line: 4238, column: 61, scope: !11815)
!11827 = !DILocation(line: 4238, column: 66, scope: !11815)
!11828 = !DILocation(line: 4238, column: 59, scope: !11815)
!11829 = !DILocation(line: 4238, column: 29, scope: !11815)
!11830 = !DILocation(line: 4238, column: 13, scope: !11815)
!11831 = !DILocation(line: 4242, column: 6, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11803, file: !3, line: 4242, column: 6)
!11833 = !DILocation(line: 4242, column: 16, scope: !11832)
!11834 = !DILocation(line: 4242, column: 6, scope: !11803)
!11835 = !DILocation(line: 4243, column: 13, scope: !11832)
!11836 = !DILocation(line: 4243, column: 3, scope: !11832)
!11837 = !DILocation(line: 4244, column: 11, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 4244, column: 11)
!11839 = !DILocation(line: 4244, column: 42, scope: !11838)
!11840 = !DILocation(line: 4244, column: 48, scope: !11838)
!11841 = !DILocation(line: 4244, column: 23, scope: !11838)
!11842 = !DILocation(line: 4244, column: 21, scope: !11838)
!11843 = !DILocation(line: 4244, column: 11, scope: !11832)
!11844 = !DILocation(line: 4245, column: 34, scope: !11838)
!11845 = !DILocation(line: 4245, column: 40, scope: !11838)
!11846 = !DILocation(line: 4245, column: 15, scope: !11838)
!11847 = !DILocation(line: 4245, column: 13, scope: !11838)
!11848 = !DILocation(line: 4245, column: 3, scope: !11838)
!11849 = !DILocation(line: 4248, column: 6, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11803, file: !3, line: 4248, column: 6)
!11851 = !DILocation(line: 4248, column: 18, scope: !11850)
!11852 = !DILocation(line: 4248, column: 24, scope: !11850)
!11853 = !DILocation(line: 4248, column: 16, scope: !11850)
!11854 = !DILocation(line: 4248, column: 6, scope: !11803)
!11855 = !DILocation(line: 4249, column: 27, scope: !11850)
!11856 = !DILocation(line: 4249, column: 38, scope: !11850)
!11857 = !DILocation(line: 4249, column: 44, scope: !11850)
!11858 = !DILocation(line: 4249, column: 19, scope: !11850)
!11859 = !DILocation(line: 4249, column: 3, scope: !11850)
!11860 = !DILocation(line: 4249, column: 9, scope: !11850)
!11861 = !DILocation(line: 4249, column: 17, scope: !11850)
!11862 = !DILocation(line: 4251, column: 19, scope: !11850)
!11863 = !DILocation(line: 4251, column: 3, scope: !11850)
!11864 = !DILocation(line: 4251, column: 9, scope: !11850)
!11865 = !DILocation(line: 4251, column: 17, scope: !11850)
!11866 = !DILocation(line: 4254, column: 6, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11803, file: !3, line: 4254, column: 6)
!11868 = !DILocation(line: 4254, column: 13, scope: !11867)
!11869 = !DILocation(line: 4254, column: 6, scope: !11803)
!11870 = !DILocation(line: 4255, column: 10, scope: !11867)
!11871 = !DILocation(line: 4255, column: 16, scope: !11867)
!11872 = !DILocation(line: 4255, column: 3, scope: !11867)
!11873 = !DILocation(line: 4256, column: 11, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11867, file: !3, line: 4256, column: 11)
!11875 = !DILocation(line: 4256, column: 21, scope: !11874)
!11876 = !DILocation(line: 4256, column: 27, scope: !11874)
!11877 = !DILocation(line: 4256, column: 35, scope: !11874)
!11878 = !DILocation(line: 4256, column: 18, scope: !11874)
!11879 = !DILocation(line: 4256, column: 67, scope: !11874)
!11880 = !DILocation(line: 4256, column: 11, scope: !11867)
!11881 = !DILocation(line: 4257, column: 17, scope: !11874)
!11882 = !DILocation(line: 4257, column: 15, scope: !11874)
!11883 = !DILocation(line: 4257, column: 3, scope: !11874)
!11884 = !DILocation(line: 4259, column: 10, scope: !11874)
!11885 = !DILocation(line: 4259, column: 16, scope: !11874)
!11886 = !DILocation(line: 4259, column: 3, scope: !11874)
!11887 = !DILocation(line: 4260, column: 1, scope: !11803)
!11888 = distinct !DISubprogram(name: "psys_update_effectors", scope: !3, file: !3, line: 2290, type: !5676, scopeLine: 2291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!11889 = !DILocalVariable(name: "sim", arg: 1, scope: !11888, file: !3, line: 2290, type: !3218)
!11890 = !DILocation(line: 2290, column: 59, scope: !11888)
!11891 = !DILocation(line: 2292, column: 18, scope: !11888)
!11892 = !DILocation(line: 2292, column: 23, scope: !11888)
!11893 = !DILocation(line: 2292, column: 29, scope: !11888)
!11894 = !DILocation(line: 2292, column: 2, scope: !11888)
!11895 = !DILocation(line: 2293, column: 41, scope: !11888)
!11896 = !DILocation(line: 2293, column: 46, scope: !11888)
!11897 = !DILocation(line: 2293, column: 53, scope: !11888)
!11898 = !DILocation(line: 2293, column: 58, scope: !11888)
!11899 = !DILocation(line: 2293, column: 62, scope: !11888)
!11900 = !DILocation(line: 2293, column: 67, scope: !11888)
!11901 = !DILocation(line: 2294, column: 41, scope: !11888)
!11902 = !DILocation(line: 2294, column: 46, scope: !11888)
!11903 = !DILocation(line: 2294, column: 52, scope: !11888)
!11904 = !DILocation(line: 2294, column: 58, scope: !11888)
!11905 = !DILocation(line: 2293, column: 25, scope: !11888)
!11906 = !DILocation(line: 2293, column: 2, scope: !11888)
!11907 = !DILocation(line: 2293, column: 7, scope: !11888)
!11908 = !DILocation(line: 2293, column: 13, scope: !11888)
!11909 = !DILocation(line: 2293, column: 23, scope: !11888)
!11910 = !DILocation(line: 2295, column: 17, scope: !11888)
!11911 = !DILocation(line: 2295, column: 22, scope: !11888)
!11912 = !DILocation(line: 2295, column: 27, scope: !11888)
!11913 = !DILocation(line: 2295, column: 33, scope: !11888)
!11914 = !DILocation(line: 2295, column: 2, scope: !11888)
!11915 = !DILocation(line: 2296, column: 1, scope: !11888)
!11916 = distinct !DISubprogram(name: "get_psys_tot_child", scope: !3, file: !3, line: 302, type: !11917, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!11917 = !DISubroutineType(types: !11918)
!11918 = !{!260, !1027, !3144}
!11919 = !DILocalVariable(name: "scene", arg: 1, scope: !11916, file: !3, line: 302, type: !1027)
!11920 = !DILocation(line: 302, column: 45, scope: !11916)
!11921 = !DILocalVariable(name: "psys", arg: 2, scope: !11916, file: !3, line: 302, type: !3144)
!11922 = !DILocation(line: 302, column: 68, scope: !11916)
!11923 = !DILocation(line: 304, column: 9, scope: !11916)
!11924 = !DILocation(line: 304, column: 15, scope: !11916)
!11925 = !DILocation(line: 304, column: 45, scope: !11916)
!11926 = !DILocation(line: 304, column: 52, scope: !11916)
!11927 = !DILocation(line: 304, column: 23, scope: !11916)
!11928 = !DILocation(line: 304, column: 22, scope: !11916)
!11929 = !DILocation(line: 304, column: 2, scope: !11916)
!11930 = distinct !DISubprogram(name: "get_psys_child_number", scope: !3, file: !3, line: 287, type: !11917, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!11931 = !DILocalVariable(name: "scene", arg: 1, scope: !11930, file: !3, line: 287, type: !1027)
!11932 = !DILocation(line: 287, column: 48, scope: !11930)
!11933 = !DILocalVariable(name: "psys", arg: 2, scope: !11930, file: !3, line: 287, type: !3144)
!11934 = !DILocation(line: 287, column: 71, scope: !11930)
!11935 = !DILocalVariable(name: "nbr", scope: !11930, file: !3, line: 289, type: !260)
!11936 = !DILocation(line: 289, column: 6, scope: !11930)
!11937 = !DILocation(line: 291, column: 7, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 291, column: 6)
!11939 = !DILocation(line: 291, column: 13, scope: !11938)
!11940 = !DILocation(line: 291, column: 19, scope: !11938)
!11941 = !DILocation(line: 291, column: 6, scope: !11930)
!11942 = !DILocation(line: 292, column: 3, scope: !11938)
!11943 = !DILocation(line: 294, column: 6, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 294, column: 6)
!11945 = !DILocation(line: 294, column: 12, scope: !11944)
!11946 = !DILocation(line: 294, column: 6, scope: !11930)
!11947 = !DILocation(line: 295, column: 8, scope: !11944)
!11948 = !DILocation(line: 295, column: 14, scope: !11944)
!11949 = !DILocation(line: 295, column: 20, scope: !11944)
!11950 = !DILocation(line: 295, column: 6, scope: !11944)
!11951 = !DILocation(line: 295, column: 3, scope: !11944)
!11952 = !DILocation(line: 297, column: 8, scope: !11944)
!11953 = !DILocation(line: 297, column: 14, scope: !11944)
!11954 = !DILocation(line: 297, column: 20, scope: !11944)
!11955 = !DILocation(line: 297, column: 6, scope: !11944)
!11956 = !DILocation(line: 299, column: 43, scope: !11930)
!11957 = !DILocation(line: 299, column: 50, scope: !11930)
!11958 = !DILocation(line: 299, column: 53, scope: !11930)
!11959 = !DILocation(line: 299, column: 9, scope: !11930)
!11960 = !DILocation(line: 299, column: 2, scope: !11930)
!11961 = !DILocation(line: 300, column: 1, scope: !11930)
!11962 = distinct !DISubprogram(name: "psys_update_particle_bvhtree", scope: !3, file: !3, line: 2224, type: !5823, scopeLine: 2225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!11963 = !DILocalVariable(name: "psys", arg: 1, scope: !11962, file: !3, line: 2224, type: !3144)
!11964 = !DILocation(line: 2224, column: 58, scope: !11962)
!11965 = !DILocalVariable(name: "cfra", arg: 2, scope: !11962, file: !3, line: 2224, type: !341)
!11966 = !DILocation(line: 2224, column: 70, scope: !11962)
!11967 = !DILocation(line: 2226, column: 6, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 2226, column: 6)
!11969 = !DILocation(line: 2226, column: 6, scope: !11962)
!11970 = !DILocalVariable(name: "pa", scope: !11971, file: !3, line: 2227, type: !2461)
!11971 = distinct !DILexicalBlock(scope: !11968, file: !3, line: 2226, column: 12)
!11972 = !DILocation(line: 2227, column: 3, scope: !11971)
!11973 = !DILocalVariable(name: "p", scope: !11971, file: !3, line: 2227, type: !260)
!11974 = !DILocalVariable(name: "totpart", scope: !11971, file: !3, line: 2228, type: !260)
!11975 = !DILocation(line: 2228, column: 7, scope: !11971)
!11976 = !DILocalVariable(name: "need_rebuild", scope: !11971, file: !3, line: 2229, type: !672)
!11977 = !DILocation(line: 2229, column: 8, scope: !11971)
!11978 = !DILocation(line: 2231, column: 3, scope: !11971)
!11979 = !DILocation(line: 2232, column: 19, scope: !11971)
!11980 = !DILocation(line: 2232, column: 25, scope: !11971)
!11981 = !DILocation(line: 2232, column: 33, scope: !11971)
!11982 = !DILocation(line: 2232, column: 36, scope: !11971)
!11983 = !DILocation(line: 2232, column: 42, scope: !11971)
!11984 = !DILocation(line: 2232, column: 59, scope: !11971)
!11985 = !DILocation(line: 2232, column: 56, scope: !11971)
!11986 = !DILocation(line: 2232, column: 18, scope: !11971)
!11987 = !DILocation(line: 2232, column: 16, scope: !11971)
!11988 = !DILocation(line: 2233, column: 3, scope: !11971)
!11989 = !DILocation(line: 2235, column: 7, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11971, file: !3, line: 2235, column: 7)
!11991 = !DILocation(line: 2235, column: 7, scope: !11971)
!11992 = !DILocation(line: 2236, column: 4, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 2236, column: 4)
!11994 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 2235, column: 21)
!11995 = !DILocation(line: 2236, column: 4, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 2236, column: 4)
!11997 = !DILocation(line: 2236, column: 4, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11996, file: !3, line: 2236, column: 4)
!11999 = !DILocation(line: 2237, column: 12, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !11998, file: !3, line: 2236, column: 25)
!12001 = !DILocation(line: 2238, column: 4, scope: !12000)
!12002 = distinct !{!12002, !11992, !12003}
!12003 = !DILocation(line: 2238, column: 4, scope: !11993)
!12004 = !DILocation(line: 2240, column: 4, scope: !11994)
!12005 = !DILocation(line: 2242, column: 21, scope: !11994)
!12006 = !DILocation(line: 2242, column: 27, scope: !11994)
!12007 = !DILocation(line: 2242, column: 4, scope: !11994)
!12008 = !DILocation(line: 2243, column: 36, scope: !11994)
!12009 = !DILocation(line: 2243, column: 20, scope: !11994)
!12010 = !DILocation(line: 2243, column: 4, scope: !11994)
!12011 = !DILocation(line: 2243, column: 10, scope: !11994)
!12012 = !DILocation(line: 2243, column: 18, scope: !11994)
!12013 = !DILocation(line: 2245, column: 4, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 2245, column: 4)
!12015 = !DILocation(line: 2245, column: 4, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12014, file: !3, line: 2245, column: 4)
!12017 = !DILocation(line: 2245, column: 4, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !12016, file: !3, line: 2245, column: 4)
!12019 = !DILocation(line: 2246, column: 9, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12021, file: !3, line: 2246, column: 9)
!12021 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 2245, column: 25)
!12022 = !DILocation(line: 2246, column: 13, scope: !12020)
!12023 = !DILocation(line: 2246, column: 19, scope: !12020)
!12024 = !DILocation(line: 2246, column: 9, scope: !12021)
!12025 = !DILocation(line: 2247, column: 10, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12027, file: !3, line: 2247, column: 10)
!12027 = distinct !DILexicalBlock(scope: !12020, file: !3, line: 2246, column: 34)
!12028 = !DILocation(line: 2247, column: 14, scope: !12026)
!12029 = !DILocation(line: 2247, column: 20, scope: !12026)
!12030 = !DILocation(line: 2247, column: 28, scope: !12026)
!12031 = !DILocation(line: 2247, column: 25, scope: !12026)
!12032 = !DILocation(line: 2247, column: 10, scope: !12027)
!12033 = !DILocation(line: 2248, column: 26, scope: !12026)
!12034 = !DILocation(line: 2248, column: 32, scope: !12026)
!12035 = !DILocation(line: 2248, column: 41, scope: !12026)
!12036 = !DILocation(line: 2248, column: 44, scope: !12026)
!12037 = !DILocation(line: 2248, column: 48, scope: !12026)
!12038 = !DILocation(line: 2248, column: 59, scope: !12026)
!12039 = !DILocation(line: 2248, column: 7, scope: !12026)
!12040 = !DILocation(line: 2250, column: 26, scope: !12026)
!12041 = !DILocation(line: 2250, column: 32, scope: !12026)
!12042 = !DILocation(line: 2250, column: 41, scope: !12026)
!12043 = !DILocation(line: 2250, column: 44, scope: !12026)
!12044 = !DILocation(line: 2250, column: 48, scope: !12026)
!12045 = !DILocation(line: 2250, column: 54, scope: !12026)
!12046 = !DILocation(line: 2250, column: 7, scope: !12026)
!12047 = !DILocation(line: 2251, column: 5, scope: !12027)
!12048 = !DILocation(line: 2252, column: 4, scope: !12021)
!12049 = distinct !{!12049, !12013, !12050}
!12050 = !DILocation(line: 2252, column: 4, scope: !12014)
!12051 = !DILocation(line: 2253, column: 24, scope: !11994)
!12052 = !DILocation(line: 2253, column: 30, scope: !11994)
!12053 = !DILocation(line: 2253, column: 4, scope: !11994)
!12054 = !DILocation(line: 2255, column: 26, scope: !11994)
!12055 = !DILocation(line: 2255, column: 4, scope: !11994)
!12056 = !DILocation(line: 2255, column: 10, scope: !11994)
!12057 = !DILocation(line: 2255, column: 24, scope: !11994)
!12058 = !DILocation(line: 2257, column: 4, scope: !11994)
!12059 = !DILocation(line: 2258, column: 3, scope: !11994)
!12060 = !DILocation(line: 2259, column: 2, scope: !11971)
!12061 = !DILocation(line: 2260, column: 1, scope: !11962)
!12062 = distinct !DISubprogram(name: "basic_integrate", scope: !3, file: !3, line: 3089, type: !12063, scopeLine: 3090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!12063 = !DISubroutineType(types: !12064)
!12064 = !{null, !3218, !260, !341, !341}
!12065 = !DILocalVariable(name: "sim", arg: 1, scope: !12062, file: !3, line: 3089, type: !3218)
!12066 = !DILocation(line: 3089, column: 53, scope: !12062)
!12067 = !DILocalVariable(name: "p", arg: 2, scope: !12062, file: !3, line: 3089, type: !260)
!12068 = !DILocation(line: 3089, column: 62, scope: !12062)
!12069 = !DILocalVariable(name: "dfra", arg: 3, scope: !12062, file: !3, line: 3089, type: !341)
!12070 = !DILocation(line: 3089, column: 71, scope: !12062)
!12071 = !DILocalVariable(name: "cfra", arg: 4, scope: !12062, file: !3, line: 3089, type: !341)
!12072 = !DILocation(line: 3089, column: 83, scope: !12062)
!12073 = !DILocalVariable(name: "part", scope: !12062, file: !3, line: 3091, type: !2192)
!12074 = !DILocation(line: 3091, column: 20, scope: !12062)
!12075 = !DILocation(line: 3091, column: 27, scope: !12062)
!12076 = !DILocation(line: 3091, column: 32, scope: !12062)
!12077 = !DILocation(line: 3091, column: 38, scope: !12062)
!12078 = !DILocalVariable(name: "pa", scope: !12062, file: !3, line: 3092, type: !2461)
!12079 = !DILocation(line: 3092, column: 16, scope: !12062)
!12080 = !DILocation(line: 3092, column: 21, scope: !12062)
!12081 = !DILocation(line: 3092, column: 26, scope: !12062)
!12082 = !DILocation(line: 3092, column: 32, scope: !12062)
!12083 = !DILocation(line: 3092, column: 44, scope: !12062)
!12084 = !DILocation(line: 3092, column: 42, scope: !12062)
!12085 = !DILocalVariable(name: "tkey", scope: !12062, file: !3, line: 3093, type: !1968)
!12086 = !DILocation(line: 3093, column: 14, scope: !12062)
!12087 = !DILocalVariable(name: "dtime", scope: !12062, file: !3, line: 3094, type: !341)
!12088 = !DILocation(line: 3094, column: 8, scope: !12062)
!12089 = !DILocation(line: 3094, column: 14, scope: !12062)
!12090 = !DILocation(line: 3094, column: 37, scope: !12062)
!12091 = !DILocation(line: 3094, column: 19, scope: !12062)
!12092 = !DILocation(line: 3094, column: 18, scope: !12062)
!12093 = !DILocalVariable(name: "time", scope: !12062, file: !3, line: 3094, type: !341)
!12094 = !DILocation(line: 3094, column: 43, scope: !12062)
!12095 = !DILocalVariable(name: "gravity", scope: !12062, file: !3, line: 3095, type: !1796)
!12096 = !DILocation(line: 3095, column: 9, scope: !12062)
!12097 = !DILocalVariable(name: "gr", scope: !12062, file: !3, line: 3095, type: !563)
!12098 = !DILocation(line: 3095, column: 25, scope: !12062)
!12099 = !DILocalVariable(name: "efdata", scope: !12062, file: !3, line: 3096, type: !3195)
!12100 = !DILocation(line: 3096, column: 9, scope: !12062)
!12101 = !DILocation(line: 3098, column: 19, scope: !12062)
!12102 = !DILocation(line: 3098, column: 24, scope: !12062)
!12103 = !DILocation(line: 3098, column: 36, scope: !12062)
!12104 = !DILocation(line: 3098, column: 57, scope: !12062)
!12105 = !DILocation(line: 3098, column: 2, scope: !12062)
!12106 = !DILocation(line: 3100, column: 14, scope: !12062)
!12107 = !DILocation(line: 3100, column: 9, scope: !12062)
!12108 = !DILocation(line: 3100, column: 12, scope: !12062)
!12109 = !DILocation(line: 3101, column: 15, scope: !12062)
!12110 = !DILocation(line: 3101, column: 9, scope: !12062)
!12111 = !DILocation(line: 3101, column: 13, scope: !12062)
!12112 = !DILocation(line: 3104, column: 24, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12062, file: !3, line: 3104, column: 6)
!12114 = !DILocation(line: 3104, column: 6, scope: !12113)
!12115 = !DILocation(line: 3104, column: 29, scope: !12113)
!12116 = !DILocation(line: 3106, column: 4, scope: !12113)
!12117 = !DILocation(line: 3106, column: 10, scope: !12113)
!12118 = !DILocation(line: 3106, column: 15, scope: !12113)
!12119 = !DILocation(line: 3106, column: 28, scope: !12113)
!12120 = !DILocation(line: 3106, column: 31, scope: !12113)
!12121 = !DILocation(line: 3106, column: 37, scope: !12113)
!12122 = !DILocation(line: 3106, column: 55, scope: !12113)
!12123 = !DILocation(line: 3106, column: 60, scope: !12113)
!12124 = !DILocation(line: 3104, column: 6, scope: !12062)
!12125 = !DILocation(line: 3108, column: 11, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12113, file: !3, line: 3107, column: 2)
!12127 = !DILocation(line: 3108, column: 3, scope: !12126)
!12128 = !DILocation(line: 3109, column: 16, scope: !12126)
!12129 = !DILocation(line: 3109, column: 20, scope: !12126)
!12130 = !DILocation(line: 3109, column: 25, scope: !12126)
!12131 = !DILocation(line: 3109, column: 32, scope: !12126)
!12132 = !DILocation(line: 3109, column: 49, scope: !12126)
!12133 = !DILocation(line: 3109, column: 58, scope: !12126)
!12134 = !DILocation(line: 3109, column: 64, scope: !12126)
!12135 = !DILocation(line: 3109, column: 82, scope: !12126)
!12136 = !DILocation(line: 3109, column: 106, scope: !12126)
!12137 = !DILocation(line: 3109, column: 111, scope: !12126)
!12138 = !DILocation(line: 3109, column: 97, scope: !12126)
!12139 = !DILocation(line: 3109, column: 3, scope: !12126)
!12140 = !DILocation(line: 3110, column: 13, scope: !12126)
!12141 = !DILocation(line: 3110, column: 11, scope: !12126)
!12142 = !DILocation(line: 3111, column: 2, scope: !12126)
!12143 = !DILocation(line: 3114, column: 13, scope: !12062)
!12144 = !DILocation(line: 3114, column: 17, scope: !12062)
!12145 = !DILocation(line: 3114, column: 23, scope: !12062)
!12146 = !DILocation(line: 3114, column: 28, scope: !12062)
!12147 = !DILocation(line: 3114, column: 32, scope: !12062)
!12148 = !DILocation(line: 3114, column: 43, scope: !12062)
!12149 = !DILocation(line: 3114, column: 2, scope: !12062)
!12150 = !DILocation(line: 3116, column: 21, scope: !12062)
!12151 = !DILocation(line: 3116, column: 27, scope: !12062)
!12152 = !DILocation(line: 3116, column: 31, scope: !12062)
!12153 = !DILocation(line: 3116, column: 38, scope: !12062)
!12154 = !DILocation(line: 3116, column: 63, scope: !12062)
!12155 = !DILocation(line: 3116, column: 2, scope: !12062)
!12156 = !DILocation(line: 3119, column: 6, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12062, file: !3, line: 3119, column: 6)
!12158 = !DILocation(line: 3119, column: 12, scope: !12157)
!12159 = !DILocation(line: 3119, column: 20, scope: !12157)
!12160 = !DILocation(line: 3119, column: 6, scope: !12062)
!12161 = !DILocation(line: 3120, column: 13, scope: !12157)
!12162 = !DILocation(line: 3120, column: 17, scope: !12157)
!12163 = !DILocation(line: 3120, column: 23, scope: !12157)
!12164 = !DILocation(line: 3120, column: 34, scope: !12157)
!12165 = !DILocation(line: 3120, column: 40, scope: !12157)
!12166 = !DILocation(line: 3120, column: 57, scope: !12157)
!12167 = !DILocation(line: 3120, column: 62, scope: !12157)
!12168 = !DILocation(line: 3120, column: 48, scope: !12157)
!12169 = !DILocation(line: 3120, column: 67, scope: !12157)
!12170 = !DILocation(line: 3120, column: 76, scope: !12157)
!12171 = !DILocation(line: 3120, column: 74, scope: !12157)
!12172 = !DILocation(line: 3120, column: 32, scope: !12157)
!12173 = !DILocation(line: 3120, column: 3, scope: !12157)
!12174 = !DILocation(line: 3125, column: 8, scope: !12062)
!12175 = !DILocation(line: 3125, column: 13, scope: !12062)
!12176 = !DILocation(line: 3125, column: 17, scope: !12062)
!12177 = !DILocation(line: 3125, column: 12, scope: !12062)
!12178 = !DILocation(line: 3125, column: 23, scope: !12062)
!12179 = !DILocation(line: 3125, column: 27, scope: !12062)
!12180 = !DILocation(line: 3125, column: 22, scope: !12062)
!12181 = !DILocation(line: 3125, column: 6, scope: !12062)
!12182 = !DILocation(line: 3126, column: 2, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12184, file: !3, line: 3126, column: 2)
!12184 = distinct !DILexicalBlock(scope: !12062, file: !3, line: 3126, column: 2)
!12185 = !DILocation(line: 3126, column: 2, scope: !12184)
!12186 = !DILocation(line: 3126, column: 2, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12183, file: !3, line: 3126, column: 2)
!12188 = !DILocation(line: 3128, column: 18, scope: !12062)
!12189 = !DILocation(line: 3128, column: 13, scope: !12062)
!12190 = !DILocation(line: 3128, column: 21, scope: !12062)
!12191 = !DILocation(line: 3128, column: 25, scope: !12062)
!12192 = !DILocation(line: 3128, column: 31, scope: !12062)
!12193 = !DILocation(line: 3128, column: 2, scope: !12062)
!12194 = !DILocation(line: 3129, column: 18, scope: !12062)
!12195 = !DILocation(line: 3129, column: 13, scope: !12062)
!12196 = !DILocation(line: 3129, column: 22, scope: !12062)
!12197 = !DILocation(line: 3129, column: 26, scope: !12062)
!12198 = !DILocation(line: 3129, column: 32, scope: !12062)
!12199 = !DILocation(line: 3129, column: 2, scope: !12062)
!12200 = !DILocation(line: 3130, column: 12, scope: !12062)
!12201 = !DILocation(line: 3130, column: 16, scope: !12062)
!12202 = !DILocation(line: 3130, column: 22, scope: !12062)
!12203 = !DILocation(line: 3130, column: 7, scope: !12062)
!12204 = !DILocation(line: 3130, column: 11, scope: !12062)
!12205 = !DILocation(line: 3132, column: 6, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12062, file: !3, line: 3132, column: 6)
!12207 = !DILocation(line: 3132, column: 12, scope: !12206)
!12208 = !DILocation(line: 3132, column: 17, scope: !12206)
!12209 = !DILocation(line: 3132, column: 6, scope: !12062)
!12210 = !DILocation(line: 3133, column: 17, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12212, file: !3, line: 3133, column: 7)
!12212 = distinct !DILexicalBlock(scope: !12206, file: !3, line: 3132, column: 31)
!12213 = !DILocation(line: 3133, column: 22, scope: !12211)
!12214 = !DILocation(line: 3133, column: 28, scope: !12211)
!12215 = !DILocation(line: 3133, column: 46, scope: !12211)
!12216 = !DILocation(line: 3133, column: 49, scope: !12211)
!12217 = !DILocation(line: 3133, column: 7, scope: !12211)
!12218 = !DILocation(line: 3133, column: 7, scope: !12212)
!12219 = !DILocation(line: 3134, column: 15, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12211, file: !3, line: 3133, column: 56)
!12221 = !DILocation(line: 3134, column: 19, scope: !12220)
!12222 = !DILocation(line: 3134, column: 25, scope: !12220)
!12223 = !DILocation(line: 3134, column: 33, scope: !12220)
!12224 = !DILocation(line: 3134, column: 28, scope: !12220)
!12225 = !DILocation(line: 3134, column: 4, scope: !12220)
!12226 = !DILocation(line: 3136, column: 16, scope: !12220)
!12227 = !DILocation(line: 3136, column: 20, scope: !12220)
!12228 = !DILocation(line: 3136, column: 26, scope: !12220)
!12229 = !DILocation(line: 3136, column: 36, scope: !12220)
!12230 = !DILocation(line: 3136, column: 31, scope: !12220)
!12231 = !DILocation(line: 3136, column: 40, scope: !12220)
!12232 = !DILocation(line: 3136, column: 44, scope: !12220)
!12233 = !DILocation(line: 3136, column: 55, scope: !12220)
!12234 = !DILocation(line: 3136, column: 4, scope: !12220)
!12235 = !DILocation(line: 3137, column: 14, scope: !12220)
!12236 = !DILocation(line: 3137, column: 18, scope: !12220)
!12237 = !DILocation(line: 3137, column: 24, scope: !12220)
!12238 = !DILocation(line: 3137, column: 33, scope: !12220)
!12239 = !DILocation(line: 3137, column: 32, scope: !12220)
!12240 = !DILocation(line: 3137, column: 4, scope: !12220)
!12241 = !DILocation(line: 3138, column: 24, scope: !12220)
!12242 = !DILocation(line: 3138, column: 4, scope: !12220)
!12243 = !DILocation(line: 3138, column: 8, scope: !12220)
!12244 = !DILocation(line: 3138, column: 14, scope: !12220)
!12245 = !DILocation(line: 3138, column: 18, scope: !12220)
!12246 = !DILocation(line: 3139, column: 3, scope: !12220)
!12247 = !DILocation(line: 3140, column: 2, scope: !12212)
!12248 = !DILocation(line: 3141, column: 1, scope: !12062)
!12249 = distinct !DISubprogram(name: "collision_check", scope: !3, file: !3, line: 3862, type: !12063, scopeLine: 3863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!12250 = !DILocalVariable(name: "sim", arg: 1, scope: !12249, file: !3, line: 3862, type: !3218)
!12251 = !DILocation(line: 3862, column: 53, scope: !12249)
!12252 = !DILocalVariable(name: "p", arg: 2, scope: !12249, file: !3, line: 3862, type: !260)
!12253 = !DILocation(line: 3862, column: 62, scope: !12249)
!12254 = !DILocalVariable(name: "dfra", arg: 3, scope: !12249, file: !3, line: 3862, type: !341)
!12255 = !DILocation(line: 3862, column: 71, scope: !12249)
!12256 = !DILocalVariable(name: "cfra", arg: 4, scope: !12249, file: !3, line: 3862, type: !341)
!12257 = !DILocation(line: 3862, column: 83, scope: !12249)
!12258 = !DILocalVariable(name: "part", scope: !12249, file: !3, line: 3864, type: !2192)
!12259 = !DILocation(line: 3864, column: 20, scope: !12249)
!12260 = !DILocation(line: 3864, column: 27, scope: !12249)
!12261 = !DILocation(line: 3864, column: 32, scope: !12249)
!12262 = !DILocation(line: 3864, column: 38, scope: !12249)
!12263 = !DILocalVariable(name: "pa", scope: !12249, file: !3, line: 3865, type: !2461)
!12264 = !DILocation(line: 3865, column: 16, scope: !12249)
!12265 = !DILocation(line: 3865, column: 21, scope: !12249)
!12266 = !DILocation(line: 3865, column: 26, scope: !12249)
!12267 = !DILocation(line: 3865, column: 32, scope: !12249)
!12268 = !DILocation(line: 3865, column: 44, scope: !12249)
!12269 = !DILocation(line: 3865, column: 42, scope: !12249)
!12270 = !DILocalVariable(name: "col", scope: !12249, file: !3, line: 3866, type: !713)
!12271 = !DILocation(line: 3866, column: 20, scope: !12249)
!12272 = !DILocalVariable(name: "hit", scope: !12249, file: !3, line: 3867, type: !7193)
!12273 = !DILocation(line: 3867, column: 16, scope: !12249)
!12274 = !DILocalVariable(name: "collision_count", scope: !12249, file: !3, line: 3868, type: !260)
!12275 = !DILocation(line: 3868, column: 6, scope: !12249)
!12276 = !DILocalVariable(name: "timestep", scope: !12249, file: !3, line: 3870, type: !341)
!12277 = !DILocation(line: 3870, column: 8, scope: !12249)
!12278 = !DILocation(line: 3870, column: 37, scope: !12249)
!12279 = !DILocation(line: 3870, column: 19, scope: !12249)
!12280 = !DILocation(line: 3872, column: 2, scope: !12249)
!12281 = !DILocation(line: 3874, column: 19, scope: !12249)
!12282 = !DILocation(line: 3874, column: 30, scope: !12249)
!12283 = !DILocation(line: 3874, column: 28, scope: !12249)
!12284 = !DILocation(line: 3874, column: 6, scope: !12249)
!12285 = !DILocation(line: 3874, column: 17, scope: !12249)
!12286 = !DILocation(line: 3875, column: 32, scope: !12249)
!12287 = !DILocation(line: 3875, column: 27, scope: !12249)
!12288 = !DILocation(line: 3875, column: 6, scope: !12249)
!12289 = !DILocation(line: 3875, column: 21, scope: !12249)
!12290 = !DILocation(line: 3876, column: 26, scope: !12249)
!12291 = !DILocation(line: 3876, column: 25, scope: !12249)
!12292 = !DILocation(line: 3876, column: 6, scope: !12249)
!12293 = !DILocation(line: 3876, column: 19, scope: !12249)
!12294 = !DILocation(line: 3878, column: 13, scope: !12249)
!12295 = !DILocation(line: 3878, column: 6, scope: !12249)
!12296 = !DILocation(line: 3878, column: 11, scope: !12249)
!12297 = !DILocation(line: 3879, column: 17, scope: !12249)
!12298 = !DILocation(line: 3879, column: 22, scope: !12249)
!12299 = !DILocation(line: 3879, column: 28, scope: !12249)
!12300 = !DILocation(line: 3879, column: 6, scope: !12249)
!12301 = !DILocation(line: 3879, column: 15, scope: !12249)
!12302 = !DILocation(line: 3882, column: 18, scope: !12249)
!12303 = !DILocation(line: 3882, column: 14, scope: !12249)
!12304 = !DILocation(line: 3882, column: 23, scope: !12249)
!12305 = !DILocation(line: 3882, column: 27, scope: !12249)
!12306 = !DILocation(line: 3882, column: 33, scope: !12249)
!12307 = !DILocation(line: 3882, column: 38, scope: !12249)
!12308 = !DILocation(line: 3882, column: 42, scope: !12249)
!12309 = !DILocation(line: 3882, column: 53, scope: !12249)
!12310 = !DILocation(line: 3882, column: 2, scope: !12249)
!12311 = !DILocation(line: 3883, column: 16, scope: !12249)
!12312 = !DILocation(line: 3883, column: 12, scope: !12249)
!12313 = !DILocation(line: 3883, column: 29, scope: !12249)
!12314 = !DILocation(line: 3883, column: 24, scope: !12249)
!12315 = !DILocation(line: 3883, column: 2, scope: !12249)
!12316 = !DILocation(line: 3886, column: 17, scope: !12249)
!12317 = !DILocation(line: 3886, column: 13, scope: !12249)
!12318 = !DILocation(line: 3886, column: 22, scope: !12249)
!12319 = !DILocation(line: 3886, column: 26, scope: !12249)
!12320 = !DILocation(line: 3886, column: 37, scope: !12249)
!12321 = !DILocation(line: 3886, column: 2, scope: !12249)
!12322 = !DILocation(line: 3887, column: 17, scope: !12249)
!12323 = !DILocation(line: 3887, column: 13, scope: !12249)
!12324 = !DILocation(line: 3887, column: 22, scope: !12249)
!12325 = !DILocation(line: 3887, column: 26, scope: !12249)
!12326 = !DILocation(line: 3887, column: 32, scope: !12249)
!12327 = !DILocation(line: 3887, column: 2, scope: !12249)
!12328 = !DILocation(line: 3888, column: 17, scope: !12249)
!12329 = !DILocation(line: 3888, column: 13, scope: !12249)
!12330 = !DILocation(line: 3888, column: 22, scope: !12249)
!12331 = !DILocation(line: 3888, column: 26, scope: !12249)
!12332 = !DILocation(line: 3888, column: 37, scope: !12249)
!12333 = !DILocation(line: 3888, column: 2, scope: !12249)
!12334 = !DILocation(line: 3889, column: 17, scope: !12249)
!12335 = !DILocation(line: 3889, column: 13, scope: !12249)
!12336 = !DILocation(line: 3889, column: 22, scope: !12249)
!12337 = !DILocation(line: 3889, column: 26, scope: !12249)
!12338 = !DILocation(line: 3889, column: 32, scope: !12249)
!12339 = !DILocation(line: 3889, column: 2, scope: !12249)
!12340 = !DILocation(line: 3890, column: 6, scope: !12249)
!12341 = !DILocation(line: 3890, column: 8, scope: !12249)
!12342 = !DILocation(line: 3892, column: 17, scope: !12249)
!12343 = !DILocation(line: 3892, column: 23, scope: !12249)
!12344 = !DILocation(line: 3892, column: 28, scope: !12249)
!12345 = !DILocation(line: 3892, column: 46, scope: !12249)
!12346 = !DILocation(line: 3892, column: 50, scope: !12249)
!12347 = !DILocation(line: 3892, column: 56, scope: !12249)
!12348 = !DILocation(line: 3892, column: 65, scope: !12249)
!12349 = !DILocation(line: 3892, column: 15, scope: !12249)
!12350 = !DILocation(line: 3892, column: 88, scope: !12249)
!12351 = !DILocation(line: 3892, column: 92, scope: !12249)
!12352 = !DILocation(line: 3892, column: 6, scope: !12249)
!12353 = !DILocation(line: 3892, column: 13, scope: !12249)
!12354 = !DILocation(line: 3895, column: 6, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12249, file: !3, line: 3895, column: 6)
!12356 = !DILocation(line: 3895, column: 12, scope: !12355)
!12357 = !DILocation(line: 3895, column: 21, scope: !12355)
!12358 = !DILocation(line: 3895, column: 40, scope: !12355)
!12359 = !DILocation(line: 3895, column: 43, scope: !12355)
!12360 = !DILocation(line: 3895, column: 49, scope: !12355)
!12361 = !DILocation(line: 3895, column: 56, scope: !12355)
!12362 = !DILocation(line: 3895, column: 64, scope: !12355)
!12363 = !DILocation(line: 3895, column: 6, scope: !12249)
!12364 = !DILocation(line: 3896, column: 7, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12355, file: !3, line: 3895, column: 83)
!12366 = !DILocation(line: 3896, column: 12, scope: !12365)
!12367 = !DILocation(line: 3897, column: 16, scope: !12365)
!12368 = !DILocation(line: 3897, column: 20, scope: !12365)
!12369 = !DILocation(line: 3897, column: 26, scope: !12365)
!12370 = !DILocation(line: 3897, column: 7, scope: !12365)
!12371 = !DILocation(line: 3897, column: 14, scope: !12365)
!12372 = !DILocation(line: 3898, column: 14, scope: !12365)
!12373 = !DILocation(line: 3898, column: 18, scope: !12365)
!12374 = !DILocation(line: 3898, column: 24, scope: !12365)
!12375 = !DILocation(line: 3898, column: 7, scope: !12365)
!12376 = !DILocation(line: 3898, column: 12, scope: !12365)
!12377 = !DILocation(line: 3899, column: 2, scope: !12365)
!12378 = !DILocation(line: 3902, column: 2, scope: !12249)
!12379 = !DILocation(line: 3902, column: 9, scope: !12249)
!12380 = !DILocation(line: 3902, column: 25, scope: !12249)
!12381 = !DILocation(line: 3903, column: 24, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12383, file: !3, line: 3903, column: 7)
!12383 = distinct !DILexicalBlock(scope: !12249, file: !3, line: 3902, column: 53)
!12384 = !DILocation(line: 3903, column: 40, scope: !12382)
!12385 = !DILocation(line: 3903, column: 45, scope: !12382)
!12386 = !DILocation(line: 3903, column: 7, scope: !12382)
!12387 = !DILocation(line: 3903, column: 7, scope: !12383)
!12388 = !DILocation(line: 3905, column: 19, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12382, file: !3, line: 3903, column: 57)
!12390 = !DILocation(line: 3907, column: 8, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12389, file: !3, line: 3907, column: 8)
!12392 = !DILocation(line: 3907, column: 24, scope: !12391)
!12393 = !DILocation(line: 3907, column: 8, scope: !12389)
!12394 = !DILocation(line: 3908, column: 20, scope: !12391)
!12395 = !DILocation(line: 3908, column: 5, scope: !12391)
!12396 = !DILocation(line: 3909, column: 32, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 3909, column: 13)
!12398 = !DILocation(line: 3909, column: 48, scope: !12397)
!12399 = !DILocation(line: 3909, column: 54, scope: !12397)
!12400 = !DILocation(line: 3909, column: 59, scope: !12397)
!12401 = !DILocation(line: 3909, column: 78, scope: !12397)
!12402 = !DILocation(line: 3909, column: 84, scope: !12397)
!12403 = !DILocation(line: 3909, column: 89, scope: !12397)
!12404 = !DILocation(line: 3909, column: 13, scope: !12397)
!12405 = !DILocation(line: 3909, column: 104, scope: !12397)
!12406 = !DILocation(line: 3909, column: 13, scope: !12391)
!12407 = !DILocation(line: 3910, column: 5, scope: !12397)
!12408 = !DILocation(line: 3911, column: 3, scope: !12389)
!12409 = !DILocation(line: 3913, column: 4, scope: !12382)
!12410 = distinct !{!12410, !12378, !12411}
!12411 = !DILocation(line: 3914, column: 2, scope: !12249)
!12412 = !DILocation(line: 3915, column: 1, scope: !12249)
!12413 = distinct !DISubprogram(name: "basic_rotate", scope: !3, file: !3, line: 3142, type: !12414, scopeLine: 3143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!12414 = !DISubroutineType(types: !12415)
!12415 = !{null, !2192, !2461, !341, !341}
!12416 = !DILocalVariable(name: "part", arg: 1, scope: !12413, file: !3, line: 3142, type: !2192)
!12417 = !DILocation(line: 3142, column: 44, scope: !12413)
!12418 = !DILocalVariable(name: "pa", arg: 2, scope: !12413, file: !3, line: 3142, type: !2461)
!12419 = !DILocation(line: 3142, column: 64, scope: !12413)
!12420 = !DILocalVariable(name: "dfra", arg: 3, scope: !12413, file: !3, line: 3142, type: !341)
!12421 = !DILocation(line: 3142, column: 74, scope: !12413)
!12422 = !DILocalVariable(name: "timestep", arg: 4, scope: !12413, file: !3, line: 3142, type: !341)
!12423 = !DILocation(line: 3142, column: 86, scope: !12413)
!12424 = !DILocalVariable(name: "rotfac", scope: !12413, file: !3, line: 3144, type: !341)
!12425 = !DILocation(line: 3144, column: 8, scope: !12413)
!12426 = !DILocalVariable(name: "rot1", scope: !12413, file: !3, line: 3144, type: !473)
!12427 = !DILocation(line: 3144, column: 16, scope: !12413)
!12428 = !DILocalVariable(name: "rot2", scope: !12413, file: !3, line: 3144, type: !473)
!12429 = !DILocation(line: 3144, column: 25, scope: !12413)
!12430 = !DILocalVariable(name: "dtime", scope: !12413, file: !3, line: 3144, type: !341)
!12431 = !DILocation(line: 3144, column: 54, scope: !12413)
!12432 = !DILocation(line: 3144, column: 60, scope: !12413)
!12433 = !DILocation(line: 3144, column: 65, scope: !12413)
!12434 = !DILocation(line: 3144, column: 64, scope: !12413)
!12435 = !DILocalVariable(name: "extrotfac", scope: !12413, file: !3, line: 3144, type: !341)
!12436 = !DILocation(line: 3144, column: 75, scope: !12413)
!12437 = !DILocation(line: 3146, column: 7, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3146, column: 6)
!12439 = !DILocation(line: 3146, column: 13, scope: !12438)
!12440 = !DILocation(line: 3146, column: 18, scope: !12438)
!12441 = !DILocation(line: 3146, column: 36, scope: !12438)
!12442 = !DILocation(line: 3146, column: 6, scope: !12413)
!12443 = !DILocation(line: 3147, column: 11, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 3146, column: 42)
!12445 = !DILocation(line: 3147, column: 15, scope: !12444)
!12446 = !DILocation(line: 3147, column: 21, scope: !12444)
!12447 = !DILocation(line: 3147, column: 3, scope: !12444)
!12448 = !DILocation(line: 3148, column: 3, scope: !12444)
!12449 = !DILocation(line: 3151, column: 6, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3151, column: 6)
!12451 = !DILocation(line: 3151, column: 12, scope: !12450)
!12452 = !DILocation(line: 3151, column: 17, scope: !12450)
!12453 = !DILocation(line: 3151, column: 6, scope: !12413)
!12454 = !DILocation(line: 3152, column: 22, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12450, file: !3, line: 3151, column: 33)
!12456 = !DILocation(line: 3152, column: 26, scope: !12455)
!12457 = !DILocation(line: 3152, column: 32, scope: !12455)
!12458 = !DILocation(line: 3152, column: 15, scope: !12455)
!12459 = !DILocation(line: 3152, column: 13, scope: !12455)
!12460 = !DILocation(line: 3153, column: 2, scope: !12455)
!12461 = !DILocation(line: 3155, column: 13, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12450, file: !3, line: 3154, column: 7)
!12463 = !DILocation(line: 3158, column: 7, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3158, column: 6)
!12465 = !DILocation(line: 3158, column: 13, scope: !12464)
!12466 = !DILocation(line: 3158, column: 18, scope: !12464)
!12467 = !DILocation(line: 3158, column: 34, scope: !12464)
!12468 = !DILocation(line: 3158, column: 37, scope: !12464)
!12469 = !DILocation(line: 3158, column: 6, scope: !12413)
!12470 = !DILocalVariable(name: "angle", scope: !12471, file: !3, line: 3159, type: !341)
!12471 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 3158, column: 117)
!12472 = !DILocation(line: 3159, column: 9, scope: !12471)
!12473 = !DILocalVariable(name: "len1", scope: !12471, file: !3, line: 3160, type: !341)
!12474 = !DILocation(line: 3160, column: 9, scope: !12471)
!12475 = !DILocation(line: 3160, column: 23, scope: !12471)
!12476 = !DILocation(line: 3160, column: 27, scope: !12471)
!12477 = !DILocation(line: 3160, column: 38, scope: !12471)
!12478 = !DILocation(line: 3160, column: 16, scope: !12471)
!12479 = !DILocalVariable(name: "len2", scope: !12471, file: !3, line: 3161, type: !341)
!12480 = !DILocation(line: 3161, column: 9, scope: !12471)
!12481 = !DILocation(line: 3161, column: 23, scope: !12471)
!12482 = !DILocation(line: 3161, column: 27, scope: !12471)
!12483 = !DILocation(line: 3161, column: 33, scope: !12471)
!12484 = !DILocation(line: 3161, column: 16, scope: !12471)
!12485 = !DILocalVariable(name: "vec", scope: !12471, file: !3, line: 3162, type: !563)
!12486 = !DILocation(line: 3162, column: 9, scope: !12471)
!12487 = !DILocation(line: 3164, column: 7, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12471, file: !3, line: 3164, column: 7)
!12489 = !DILocation(line: 3164, column: 12, scope: !12488)
!12490 = !DILocation(line: 3164, column: 20, scope: !12488)
!12491 = !DILocation(line: 3164, column: 23, scope: !12488)
!12492 = !DILocation(line: 3164, column: 28, scope: !12488)
!12493 = !DILocation(line: 3164, column: 7, scope: !12471)
!12494 = !DILocation(line: 3165, column: 12, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12488, file: !3, line: 3164, column: 37)
!12496 = !DILocation(line: 3165, column: 16, scope: !12495)
!12497 = !DILocation(line: 3165, column: 22, scope: !12495)
!12498 = !DILocation(line: 3165, column: 4, scope: !12495)
!12499 = !DILocation(line: 3166, column: 3, scope: !12495)
!12500 = !DILocation(line: 3168, column: 18, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12488, file: !3, line: 3167, column: 8)
!12502 = !DILocation(line: 3168, column: 22, scope: !12501)
!12503 = !DILocation(line: 3168, column: 28, scope: !12501)
!12504 = !DILocation(line: 3168, column: 33, scope: !12501)
!12505 = !DILocation(line: 3168, column: 37, scope: !12501)
!12506 = !DILocation(line: 3168, column: 48, scope: !12501)
!12507 = !DILocation(line: 3168, column: 53, scope: !12501)
!12508 = !DILocation(line: 3168, column: 57, scope: !12501)
!12509 = !DILocation(line: 3168, column: 63, scope: !12501)
!12510 = !DILocation(line: 3168, column: 4, scope: !12501)
!12511 = !DILocation(line: 3169, column: 17, scope: !12501)
!12512 = !DILocation(line: 3169, column: 21, scope: !12501)
!12513 = !DILocation(line: 3169, column: 27, scope: !12501)
!12514 = !DILocation(line: 3169, column: 4, scope: !12501)
!12515 = !DILocation(line: 3170, column: 21, scope: !12501)
!12516 = !DILocation(line: 3170, column: 25, scope: !12501)
!12517 = !DILocation(line: 3170, column: 36, scope: !12501)
!12518 = !DILocation(line: 3170, column: 41, scope: !12501)
!12519 = !DILocation(line: 3170, column: 45, scope: !12501)
!12520 = !DILocation(line: 3170, column: 51, scope: !12501)
!12521 = !DILocation(line: 3170, column: 12, scope: !12501)
!12522 = !DILocation(line: 3170, column: 59, scope: !12501)
!12523 = !DILocation(line: 3170, column: 66, scope: !12501)
!12524 = !DILocation(line: 3170, column: 64, scope: !12501)
!12525 = !DILocation(line: 3170, column: 56, scope: !12501)
!12526 = !DILocation(line: 3170, column: 10, scope: !12501)
!12527 = !DILocation(line: 3171, column: 14, scope: !12501)
!12528 = !DILocation(line: 3171, column: 18, scope: !12501)
!12529 = !DILocation(line: 3171, column: 24, scope: !12501)
!12530 = !DILocation(line: 3171, column: 36, scope: !12501)
!12531 = !DILocation(line: 3171, column: 29, scope: !12501)
!12532 = !DILocation(line: 3171, column: 45, scope: !12501)
!12533 = !DILocation(line: 3171, column: 43, scope: !12501)
!12534 = !DILocation(line: 3171, column: 4, scope: !12501)
!12535 = !DILocation(line: 3174, column: 31, scope: !12471)
!12536 = !DILocation(line: 3174, column: 37, scope: !12471)
!12537 = !DILocation(line: 3174, column: 47, scope: !12471)
!12538 = !DILocation(line: 3174, column: 51, scope: !12471)
!12539 = !DILocation(line: 3174, column: 58, scope: !12471)
!12540 = !DILocation(line: 3174, column: 3, scope: !12471)
!12541 = !DILocation(line: 3175, column: 22, scope: !12471)
!12542 = !DILocation(line: 3175, column: 28, scope: !12471)
!12543 = !DILocation(line: 3175, column: 33, scope: !12471)
!12544 = !DILocation(line: 3175, column: 39, scope: !12471)
!12545 = !DILocation(line: 3175, column: 45, scope: !12471)
!12546 = !DILocation(line: 3175, column: 38, scope: !12471)
!12547 = !DILocation(line: 3175, column: 3, scope: !12471)
!12548 = !DILocation(line: 3176, column: 2, scope: !12471)
!12549 = !DILocation(line: 3178, column: 18, scope: !12413)
!12550 = !DILocation(line: 3178, column: 22, scope: !12413)
!12551 = !DILocation(line: 3178, column: 28, scope: !12413)
!12552 = !DILocation(line: 3178, column: 11, scope: !12413)
!12553 = !DILocation(line: 3178, column: 9, scope: !12413)
!12554 = !DILocation(line: 3179, column: 6, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3179, column: 6)
!12556 = !DILocation(line: 3179, column: 13, scope: !12555)
!12557 = !DILocation(line: 3179, column: 21, scope: !12555)
!12558 = !DILocation(line: 3179, column: 25, scope: !12555)
!12559 = !DILocation(line: 3179, column: 31, scope: !12555)
!12560 = !DILocation(line: 3179, column: 36, scope: !12555)
!12561 = !DILocation(line: 3179, column: 51, scope: !12555)
!12562 = !DILocation(line: 3179, column: 55, scope: !12555)
!12563 = !DILocation(line: 3179, column: 58, scope: !12555)
!12564 = !DILocation(line: 3179, column: 68, scope: !12555)
!12565 = !DILocation(line: 3179, column: 6, scope: !12413)
!12566 = !DILocation(line: 3180, column: 11, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12555, file: !3, line: 3179, column: 77)
!12568 = !DILocation(line: 3180, column: 3, scope: !12567)
!12569 = !DILocation(line: 3181, column: 2, scope: !12567)
!12570 = !DILocation(line: 3183, column: 22, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12555, file: !3, line: 3182, column: 7)
!12572 = !DILocation(line: 3183, column: 27, scope: !12571)
!12573 = !DILocation(line: 3183, column: 31, scope: !12571)
!12574 = !DILocation(line: 3183, column: 37, scope: !12571)
!12575 = !DILocation(line: 3183, column: 41, scope: !12571)
!12576 = !DILocation(line: 3183, column: 48, scope: !12571)
!12577 = !DILocation(line: 3183, column: 47, scope: !12571)
!12578 = !DILocation(line: 3183, column: 3, scope: !12571)
!12579 = !DILocation(line: 3185, column: 14, scope: !12413)
!12580 = !DILocation(line: 3185, column: 18, scope: !12413)
!12581 = !DILocation(line: 3185, column: 24, scope: !12413)
!12582 = !DILocation(line: 3185, column: 28, scope: !12413)
!12583 = !DILocation(line: 3185, column: 33, scope: !12413)
!12584 = !DILocation(line: 3185, column: 37, scope: !12413)
!12585 = !DILocation(line: 3185, column: 48, scope: !12413)
!12586 = !DILocation(line: 3185, column: 2, scope: !12413)
!12587 = !DILocation(line: 3186, column: 14, scope: !12413)
!12588 = !DILocation(line: 3186, column: 18, scope: !12413)
!12589 = !DILocation(line: 3186, column: 24, scope: !12413)
!12590 = !DILocation(line: 3186, column: 28, scope: !12413)
!12591 = !DILocation(line: 3186, column: 33, scope: !12413)
!12592 = !DILocation(line: 3186, column: 37, scope: !12413)
!12593 = !DILocation(line: 3186, column: 43, scope: !12413)
!12594 = !DILocation(line: 3186, column: 2, scope: !12413)
!12595 = !DILocation(line: 3189, column: 15, scope: !12413)
!12596 = !DILocation(line: 3189, column: 19, scope: !12413)
!12597 = !DILocation(line: 3189, column: 25, scope: !12413)
!12598 = !DILocation(line: 3189, column: 2, scope: !12413)
!12599 = !DILocation(line: 3190, column: 1, scope: !12413)
!12600 = distinct !DISubprogram(name: "sph_integrate", scope: !3, file: !3, line: 3027, type: !12601, scopeLine: 3028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!12601 = !DISubroutineType(types: !12602)
!12602 = !{null, !3218, !2461, !341, !3138}
!12603 = !DILocalVariable(name: "sim", arg: 1, scope: !12600, file: !3, line: 3027, type: !3218)
!12604 = !DILocation(line: 3027, column: 51, scope: !12600)
!12605 = !DILocalVariable(name: "pa", arg: 2, scope: !12600, file: !3, line: 3027, type: !2461)
!12606 = !DILocation(line: 3027, column: 70, scope: !12600)
!12607 = !DILocalVariable(name: "dfra", arg: 3, scope: !12600, file: !3, line: 3027, type: !341)
!12608 = !DILocation(line: 3027, column: 80, scope: !12600)
!12609 = !DILocalVariable(name: "sphdata", arg: 4, scope: !12600, file: !3, line: 3027, type: !3138)
!12610 = !DILocation(line: 3027, column: 95, scope: !12600)
!12611 = !DILocalVariable(name: "part", scope: !12600, file: !3, line: 3029, type: !2192)
!12612 = !DILocation(line: 3029, column: 20, scope: !12600)
!12613 = !DILocation(line: 3029, column: 27, scope: !12600)
!12614 = !DILocation(line: 3029, column: 32, scope: !12600)
!12615 = !DILocation(line: 3029, column: 38, scope: !12600)
!12616 = !DILocalVariable(name: "pa_mass", scope: !12600, file: !3, line: 3031, type: !341)
!12617 = !DILocation(line: 3031, column: 8, scope: !12600)
!12618 = !DILocation(line: 3031, column: 18, scope: !12600)
!12619 = !DILocation(line: 3031, column: 24, scope: !12600)
!12620 = !DILocation(line: 3031, column: 32, scope: !12600)
!12621 = !DILocation(line: 3031, column: 38, scope: !12600)
!12622 = !DILocation(line: 3031, column: 43, scope: !12600)
!12623 = !DILocation(line: 3031, column: 61, scope: !12600)
!12624 = !DILocation(line: 3031, column: 65, scope: !12600)
!12625 = !DILocation(line: 3031, column: 29, scope: !12600)
!12626 = !DILocalVariable(name: "dtime", scope: !12600, file: !3, line: 3032, type: !341)
!12627 = !DILocation(line: 3032, column: 8, scope: !12600)
!12628 = !DILocation(line: 3032, column: 16, scope: !12600)
!12629 = !DILocation(line: 3032, column: 39, scope: !12600)
!12630 = !DILocation(line: 3032, column: 21, scope: !12600)
!12631 = !DILocation(line: 3032, column: 20, scope: !12600)
!12632 = !DILocalVariable(name: "effector_acceleration", scope: !12600, file: !3, line: 3034, type: !563)
!12633 = !DILocation(line: 3034, column: 8, scope: !12600)
!12634 = !DILocation(line: 3036, column: 16, scope: !12600)
!12635 = !DILocation(line: 3036, column: 2, scope: !12600)
!12636 = !DILocation(line: 3036, column: 11, scope: !12600)
!12637 = !DILocation(line: 3036, column: 14, scope: !12600)
!12638 = !DILocation(line: 3037, column: 18, scope: !12600)
!12639 = !DILocation(line: 3037, column: 2, scope: !12600)
!12640 = !DILocation(line: 3037, column: 11, scope: !12600)
!12641 = !DILocation(line: 3037, column: 16, scope: !12600)
!12642 = !DILocation(line: 3038, column: 2, scope: !12600)
!12643 = !DILocation(line: 3038, column: 11, scope: !12600)
!12644 = !DILocation(line: 3038, column: 16, scope: !12600)
!12645 = !DILocation(line: 3042, column: 14, scope: !12600)
!12646 = !DILocation(line: 3042, column: 37, scope: !12600)
!12647 = !DILocation(line: 3042, column: 41, scope: !12600)
!12648 = !DILocation(line: 3042, column: 47, scope: !12600)
!12649 = !DILocation(line: 3042, column: 52, scope: !12600)
!12650 = !DILocation(line: 3042, column: 56, scope: !12600)
!12651 = !DILocation(line: 3042, column: 67, scope: !12600)
!12652 = !DILocation(line: 3042, column: 2, scope: !12600)
!12653 = !DILocation(line: 3043, column: 12, scope: !12600)
!12654 = !DILocation(line: 3043, column: 39, scope: !12600)
!12655 = !DILocation(line: 3043, column: 38, scope: !12600)
!12656 = !DILocation(line: 3043, column: 2, scope: !12600)
!12657 = !DILocation(line: 3045, column: 21, scope: !12600)
!12658 = !DILocation(line: 3045, column: 25, scope: !12600)
!12659 = !DILocation(line: 3045, column: 33, scope: !12600)
!12660 = !DILocation(line: 3045, column: 37, scope: !12600)
!12661 = !DILocation(line: 3045, column: 2, scope: !12600)
!12662 = !DILocation(line: 3047, column: 21, scope: !12600)
!12663 = !DILocation(line: 3047, column: 27, scope: !12600)
!12664 = !DILocation(line: 3047, column: 31, scope: !12600)
!12665 = !DILocation(line: 3047, column: 38, scope: !12600)
!12666 = !DILocation(line: 3047, column: 61, scope: !12600)
!12667 = !DILocation(line: 3047, column: 70, scope: !12600)
!12668 = !DILocation(line: 3047, column: 80, scope: !12600)
!12669 = !DILocation(line: 3047, column: 2, scope: !12600)
!12670 = !DILocation(line: 3048, column: 1, scope: !12600)
!12671 = distinct !DISubprogram(name: "update_courant_num", scope: !3, file: !3, line: 4216, type: !12601, scopeLine: 4218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!12672 = !DILocalVariable(name: "sim", arg: 1, scope: !12671, file: !3, line: 4216, type: !3218)
!12673 = !DILocation(line: 4216, column: 56, scope: !12671)
!12674 = !DILocalVariable(name: "pa", arg: 2, scope: !12671, file: !3, line: 4216, type: !2461)
!12675 = !DILocation(line: 4216, column: 75, scope: !12671)
!12676 = !DILocalVariable(name: "dtime", arg: 3, scope: !12671, file: !3, line: 4217, type: !341)
!12677 = !DILocation(line: 4217, column: 38, scope: !12671)
!12678 = !DILocalVariable(name: "sphdata", arg: 4, scope: !12671, file: !3, line: 4217, type: !3138)
!12679 = !DILocation(line: 4217, column: 54, scope: !12671)
!12680 = !DILocalVariable(name: "relative_vel", scope: !12671, file: !3, line: 4219, type: !563)
!12681 = !DILocation(line: 4219, column: 8, scope: !12671)
!12682 = !DILocalVariable(name: "speed", scope: !12671, file: !3, line: 4220, type: !341)
!12683 = !DILocation(line: 4220, column: 8, scope: !12671)
!12684 = !DILocation(line: 4222, column: 14, scope: !12671)
!12685 = !DILocation(line: 4222, column: 28, scope: !12671)
!12686 = !DILocation(line: 4222, column: 32, scope: !12671)
!12687 = !DILocation(line: 4222, column: 43, scope: !12671)
!12688 = !DILocation(line: 4222, column: 48, scope: !12671)
!12689 = !DILocation(line: 4222, column: 57, scope: !12671)
!12690 = !DILocation(line: 4222, column: 2, scope: !12671)
!12691 = !DILocation(line: 4223, column: 17, scope: !12671)
!12692 = !DILocation(line: 4223, column: 10, scope: !12671)
!12693 = !DILocation(line: 4223, column: 8, scope: !12671)
!12694 = !DILocation(line: 4224, column: 6, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12671, file: !3, line: 4224, column: 6)
!12696 = !DILocation(line: 4224, column: 11, scope: !12695)
!12697 = !DILocation(line: 4224, column: 25, scope: !12695)
!12698 = !DILocation(line: 4224, column: 33, scope: !12695)
!12699 = !DILocation(line: 4224, column: 31, scope: !12695)
!12700 = !DILocation(line: 4224, column: 41, scope: !12695)
!12701 = !DILocation(line: 4224, column: 50, scope: !12695)
!12702 = !DILocation(line: 4224, column: 39, scope: !12695)
!12703 = !DILocation(line: 4224, column: 23, scope: !12695)
!12704 = !DILocation(line: 4224, column: 6, scope: !12671)
!12705 = !DILocation(line: 4225, column: 22, scope: !12695)
!12706 = !DILocation(line: 4225, column: 30, scope: !12695)
!12707 = !DILocation(line: 4225, column: 28, scope: !12695)
!12708 = !DILocation(line: 4225, column: 38, scope: !12695)
!12709 = !DILocation(line: 4225, column: 47, scope: !12695)
!12710 = !DILocation(line: 4225, column: 36, scope: !12695)
!12711 = !DILocation(line: 4225, column: 3, scope: !12695)
!12712 = !DILocation(line: 4225, column: 8, scope: !12695)
!12713 = !DILocation(line: 4225, column: 20, scope: !12695)
!12714 = !DILocation(line: 4226, column: 1, scope: !12671)
!12715 = distinct !DISubprogram(name: "sph_springs_modify", scope: !3, file: !3, line: 2478, type: !5823, scopeLine: 2479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!12716 = !DILocalVariable(name: "psys", arg: 1, scope: !12715, file: !3, line: 2478, type: !3144)
!12717 = !DILocation(line: 2478, column: 48, scope: !12715)
!12718 = !DILocalVariable(name: "dtime", arg: 2, scope: !12715, file: !3, line: 2478, type: !341)
!12719 = !DILocation(line: 2478, column: 60, scope: !12715)
!12720 = !DILocalVariable(name: "fluid", scope: !12715, file: !3, line: 2480, type: !6083)
!12721 = !DILocation(line: 2480, column: 20, scope: !12715)
!12722 = !DILocation(line: 2480, column: 28, scope: !12715)
!12723 = !DILocation(line: 2480, column: 34, scope: !12715)
!12724 = !DILocation(line: 2480, column: 40, scope: !12715)
!12725 = !DILocalVariable(name: "pa1", scope: !12715, file: !3, line: 2481, type: !2461)
!12726 = !DILocation(line: 2481, column: 16, scope: !12715)
!12727 = !DILocalVariable(name: "pa2", scope: !12715, file: !3, line: 2481, type: !2461)
!12728 = !DILocation(line: 2481, column: 22, scope: !12715)
!12729 = !DILocalVariable(name: "spring", scope: !12715, file: !3, line: 2482, type: !2988)
!12730 = !DILocation(line: 2482, column: 18, scope: !12715)
!12731 = !DILocation(line: 2482, column: 27, scope: !12715)
!12732 = !DILocation(line: 2482, column: 33, scope: !12715)
!12733 = !DILocalVariable(name: "h", scope: !12715, file: !3, line: 2484, type: !341)
!12734 = !DILocation(line: 2484, column: 8, scope: !12715)
!12735 = !DILocalVariable(name: "d", scope: !12715, file: !3, line: 2484, type: !341)
!12736 = !DILocation(line: 2484, column: 11, scope: !12715)
!12737 = !DILocalVariable(name: "Rij", scope: !12715, file: !3, line: 2484, type: !563)
!12738 = !DILocation(line: 2484, column: 14, scope: !12715)
!12739 = !DILocalVariable(name: "rij", scope: !12715, file: !3, line: 2484, type: !341)
!12740 = !DILocation(line: 2484, column: 22, scope: !12715)
!12741 = !DILocalVariable(name: "Lij", scope: !12715, file: !3, line: 2484, type: !341)
!12742 = !DILocation(line: 2484, column: 27, scope: !12715)
!12743 = !DILocalVariable(name: "i", scope: !12715, file: !3, line: 2485, type: !260)
!12744 = !DILocation(line: 2485, column: 6, scope: !12715)
!12745 = !DILocalVariable(name: "yield_ratio", scope: !12715, file: !3, line: 2487, type: !341)
!12746 = !DILocation(line: 2487, column: 8, scope: !12715)
!12747 = !DILocation(line: 2487, column: 22, scope: !12715)
!12748 = !DILocation(line: 2487, column: 29, scope: !12715)
!12749 = !DILocalVariable(name: "plasticity", scope: !12715, file: !3, line: 2488, type: !341)
!12750 = !DILocation(line: 2488, column: 8, scope: !12715)
!12751 = !DILocation(line: 2488, column: 21, scope: !12715)
!12752 = !DILocation(line: 2488, column: 28, scope: !12715)
!12753 = !DILocalVariable(name: "timefix", scope: !12715, file: !3, line: 2490, type: !341)
!12754 = !DILocation(line: 2490, column: 8, scope: !12715)
!12755 = !DILocation(line: 2490, column: 25, scope: !12715)
!12756 = !DILocation(line: 2490, column: 23, scope: !12715)
!12757 = !DILocation(line: 2492, column: 7, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12715, file: !3, line: 2492, column: 6)
!12759 = !DILocation(line: 2492, column: 14, scope: !12758)
!12760 = !DILocation(line: 2492, column: 19, scope: !12758)
!12761 = !DILocation(line: 2492, column: 46, scope: !12758)
!12762 = !DILocation(line: 2492, column: 50, scope: !12758)
!12763 = !DILocation(line: 2492, column: 53, scope: !12758)
!12764 = !DILocation(line: 2492, column: 60, scope: !12758)
!12765 = !DILocation(line: 2492, column: 69, scope: !12758)
!12766 = !DILocation(line: 2492, column: 6, scope: !12715)
!12767 = !DILocation(line: 2493, column: 3, scope: !12758)
!12768 = !DILocation(line: 2496, column: 8, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12715, file: !3, line: 2496, column: 2)
!12770 = !DILocation(line: 2496, column: 7, scope: !12769)
!12771 = !DILocation(line: 2496, column: 12, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 2496, column: 2)
!12773 = !DILocation(line: 2496, column: 14, scope: !12772)
!12774 = !DILocation(line: 2496, column: 20, scope: !12772)
!12775 = !DILocation(line: 2496, column: 13, scope: !12772)
!12776 = !DILocation(line: 2496, column: 2, scope: !12769)
!12777 = !DILocation(line: 2497, column: 9, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12772, file: !3, line: 2496, column: 53)
!12779 = !DILocation(line: 2497, column: 15, scope: !12778)
!12780 = !DILocation(line: 2497, column: 27, scope: !12778)
!12781 = !DILocation(line: 2497, column: 35, scope: !12778)
!12782 = !DILocation(line: 2497, column: 25, scope: !12778)
!12783 = !DILocation(line: 2497, column: 7, scope: !12778)
!12784 = !DILocation(line: 2498, column: 9, scope: !12778)
!12785 = !DILocation(line: 2498, column: 15, scope: !12778)
!12786 = !DILocation(line: 2498, column: 27, scope: !12778)
!12787 = !DILocation(line: 2498, column: 35, scope: !12778)
!12788 = !DILocation(line: 2498, column: 25, scope: !12778)
!12789 = !DILocation(line: 2498, column: 7, scope: !12778)
!12790 = !DILocation(line: 2500, column: 15, scope: !12778)
!12791 = !DILocation(line: 2500, column: 20, scope: !12778)
!12792 = !DILocation(line: 2500, column: 25, scope: !12778)
!12793 = !DILocation(line: 2500, column: 36, scope: !12778)
!12794 = !DILocation(line: 2500, column: 40, scope: !12778)
!12795 = !DILocation(line: 2500, column: 45, scope: !12778)
!12796 = !DILocation(line: 2500, column: 56, scope: !12778)
!12797 = !DILocation(line: 2500, column: 3, scope: !12778)
!12798 = !DILocation(line: 2501, column: 22, scope: !12778)
!12799 = !DILocation(line: 2501, column: 9, scope: !12778)
!12800 = !DILocation(line: 2501, column: 7, scope: !12778)
!12801 = !DILocation(line: 2504, column: 9, scope: !12778)
!12802 = !DILocation(line: 2504, column: 17, scope: !12778)
!12803 = !DILocation(line: 2504, column: 7, scope: !12778)
!12804 = !DILocation(line: 2505, column: 7, scope: !12778)
!12805 = !DILocation(line: 2505, column: 21, scope: !12778)
!12806 = !DILocation(line: 2505, column: 19, scope: !12778)
!12807 = !DILocation(line: 2505, column: 31, scope: !12778)
!12808 = !DILocation(line: 2505, column: 29, scope: !12778)
!12809 = !DILocation(line: 2505, column: 5, scope: !12778)
!12810 = !DILocation(line: 2507, column: 7, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12778, file: !3, line: 2507, column: 7)
!12812 = !DILocation(line: 2507, column: 13, scope: !12811)
!12813 = !DILocation(line: 2507, column: 19, scope: !12811)
!12814 = !DILocation(line: 2507, column: 17, scope: !12811)
!12815 = !DILocation(line: 2507, column: 11, scope: !12811)
!12816 = !DILocation(line: 2507, column: 7, scope: !12778)
!12817 = !DILocation(line: 2508, column: 27, scope: !12811)
!12818 = !DILocation(line: 2508, column: 41, scope: !12811)
!12819 = !DILocation(line: 2508, column: 47, scope: !12811)
!12820 = !DILocation(line: 2508, column: 45, scope: !12811)
!12821 = !DILocation(line: 2508, column: 53, scope: !12811)
!12822 = !DILocation(line: 2508, column: 51, scope: !12811)
!12823 = !DILocation(line: 2508, column: 38, scope: !12811)
!12824 = !DILocation(line: 2508, column: 58, scope: !12811)
!12825 = !DILocation(line: 2508, column: 56, scope: !12811)
!12826 = !DILocation(line: 2508, column: 4, scope: !12811)
!12827 = !DILocation(line: 2508, column: 12, scope: !12811)
!12828 = !DILocation(line: 2508, column: 24, scope: !12811)
!12829 = !DILocation(line: 2509, column: 12, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12811, file: !3, line: 2509, column: 12)
!12831 = !DILocation(line: 2509, column: 18, scope: !12830)
!12832 = !DILocation(line: 2509, column: 24, scope: !12830)
!12833 = !DILocation(line: 2509, column: 22, scope: !12830)
!12834 = !DILocation(line: 2509, column: 16, scope: !12830)
!12835 = !DILocation(line: 2509, column: 12, scope: !12811)
!12836 = !DILocation(line: 2510, column: 27, scope: !12830)
!12837 = !DILocation(line: 2510, column: 41, scope: !12830)
!12838 = !DILocation(line: 2510, column: 47, scope: !12830)
!12839 = !DILocation(line: 2510, column: 45, scope: !12830)
!12840 = !DILocation(line: 2510, column: 51, scope: !12830)
!12841 = !DILocation(line: 2510, column: 49, scope: !12830)
!12842 = !DILocation(line: 2510, column: 38, scope: !12830)
!12843 = !DILocation(line: 2510, column: 58, scope: !12830)
!12844 = !DILocation(line: 2510, column: 56, scope: !12830)
!12845 = !DILocation(line: 2510, column: 4, scope: !12830)
!12846 = !DILocation(line: 2510, column: 12, scope: !12830)
!12847 = !DILocation(line: 2510, column: 24, scope: !12830)
!12848 = !DILocation(line: 2512, column: 11, scope: !12778)
!12849 = !DILocation(line: 2512, column: 16, scope: !12778)
!12850 = !DILocation(line: 2512, column: 10, scope: !12778)
!12851 = !DILocation(line: 2512, column: 5, scope: !12778)
!12852 = !DILocation(line: 2514, column: 7, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12778, file: !3, line: 2514, column: 7)
!12854 = !DILocation(line: 2514, column: 15, scope: !12853)
!12855 = !DILocation(line: 2514, column: 29, scope: !12853)
!12856 = !DILocation(line: 2514, column: 27, scope: !12853)
!12857 = !DILocation(line: 2514, column: 7, scope: !12778)
!12858 = !DILocation(line: 2515, column: 4, scope: !12853)
!12859 = !DILocation(line: 2515, column: 12, scope: !12853)
!12860 = !DILocation(line: 2515, column: 24, scope: !12853)
!12861 = !DILocation(line: 2516, column: 2, scope: !12778)
!12862 = !DILocation(line: 2496, column: 39, scope: !12772)
!12863 = !DILocation(line: 2496, column: 49, scope: !12772)
!12864 = !DILocation(line: 2496, column: 2, scope: !12772)
!12865 = distinct !{!12865, !12776, !12866}
!12866 = !DILocation(line: 2516, column: 2, scope: !12769)
!12867 = !DILocation(line: 2519, column: 9, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12715, file: !3, line: 2519, column: 2)
!12869 = !DILocation(line: 2519, column: 15, scope: !12868)
!12870 = !DILocation(line: 2519, column: 31, scope: !12868)
!12871 = !DILocation(line: 2519, column: 8, scope: !12868)
!12872 = !DILocation(line: 2519, column: 7, scope: !12868)
!12873 = !DILocation(line: 2519, column: 35, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12868, file: !3, line: 2519, column: 2)
!12875 = !DILocation(line: 2519, column: 37, scope: !12874)
!12876 = !DILocation(line: 2519, column: 2, scope: !12868)
!12877 = !DILocation(line: 2520, column: 7, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12879, file: !3, line: 2520, column: 7)
!12879 = distinct !DILexicalBlock(scope: !12874, file: !3, line: 2519, column: 48)
!12880 = !DILocation(line: 2520, column: 13, scope: !12878)
!12881 = !DILocation(line: 2520, column: 27, scope: !12878)
!12882 = !DILocation(line: 2520, column: 30, scope: !12878)
!12883 = !DILocation(line: 2520, column: 7, scope: !12879)
!12884 = !DILocation(line: 2521, column: 22, scope: !12878)
!12885 = !DILocation(line: 2521, column: 28, scope: !12878)
!12886 = !DILocation(line: 2521, column: 4, scope: !12878)
!12887 = !DILocation(line: 2522, column: 2, scope: !12879)
!12888 = !DILocation(line: 2519, column: 44, scope: !12874)
!12889 = !DILocation(line: 2519, column: 2, scope: !12874)
!12890 = distinct !{!12890, !12876, !12891}
!12891 = !DILocation(line: 2522, column: 2, scope: !12868)
!12892 = !DILocation(line: 2523, column: 1, scope: !12715)
!12893 = distinct !DISubprogram(name: "sphclassical_calc_dens", scope: !3, file: !3, line: 2944, type: !12894, scopeLine: 2945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!12894 = !DISubroutineType(types: !12895)
!12895 = !{null, !2461, !341, !3138}
!12896 = !DILocalVariable(name: "pa", arg: 1, scope: !12893, file: !3, line: 2944, type: !2461)
!12897 = !DILocation(line: 2944, column: 50, scope: !12893)
!12898 = !DILocalVariable(name: "UNUSED_dfra", arg: 2, scope: !12893, file: !3, line: 2944, type: !341)
!12899 = !DILocation(line: 2944, column: 60, scope: !12893)
!12900 = !DILocalVariable(name: "sphdata", arg: 3, scope: !12893, file: !3, line: 2944, type: !3138)
!12901 = !DILocation(line: 2944, column: 83, scope: !12893)
!12902 = !DILocalVariable(name: "psys", scope: !12893, file: !3, line: 2946, type: !6074)
!12903 = !DILocation(line: 2946, column: 19, scope: !12893)
!12904 = !DILocation(line: 2946, column: 26, scope: !12893)
!12905 = !DILocation(line: 2946, column: 35, scope: !12893)
!12906 = !DILocalVariable(name: "fluid", scope: !12893, file: !3, line: 2947, type: !6083)
!12907 = !DILocation(line: 2947, column: 20, scope: !12893)
!12908 = !DILocation(line: 2947, column: 28, scope: !12893)
!12909 = !DILocation(line: 2947, column: 37, scope: !12893)
!12910 = !DILocation(line: 2947, column: 43, scope: !12893)
!12911 = !DILocalVariable(name: "interaction_radius", scope: !12893, file: !3, line: 2949, type: !341)
!12912 = !DILocation(line: 2949, column: 8, scope: !12893)
!12913 = !DILocation(line: 2949, column: 30, scope: !12893)
!12914 = !DILocation(line: 2949, column: 37, scope: !12893)
!12915 = !DILocation(line: 2949, column: 47, scope: !12893)
!12916 = !DILocation(line: 2949, column: 54, scope: !12893)
!12917 = !DILocation(line: 2949, column: 59, scope: !12893)
!12918 = !DILocation(line: 2949, column: 85, scope: !12893)
!12919 = !DILocation(line: 2949, column: 94, scope: !12893)
!12920 = !DILocation(line: 2949, column: 100, scope: !12893)
!12921 = !DILocation(line: 2949, column: 83, scope: !12893)
!12922 = !DILocation(line: 2949, column: 44, scope: !12893)
!12923 = !DILocalVariable(name: "pfr", scope: !12893, file: !3, line: 2950, type: !3164)
!12924 = !DILocation(line: 2950, column: 15, scope: !12893)
!12925 = !DILocalVariable(name: "data", scope: !12893, file: !3, line: 2951, type: !511)
!12926 = !DILocation(line: 2951, column: 8, scope: !12893)
!12927 = !DILocation(line: 2953, column: 2, scope: !12893)
!12928 = !DILocation(line: 2953, column: 10, scope: !12893)
!12929 = !DILocation(line: 2954, column: 2, scope: !12893)
!12930 = !DILocation(line: 2954, column: 10, scope: !12893)
!12931 = !DILocation(line: 2955, column: 13, scope: !12893)
!12932 = !DILocation(line: 2955, column: 6, scope: !12893)
!12933 = !DILocation(line: 2955, column: 11, scope: !12893)
!12934 = !DILocation(line: 2956, column: 10, scope: !12893)
!12935 = !DILocation(line: 2956, column: 31, scope: !12893)
!12936 = !DILocation(line: 2956, column: 40, scope: !12893)
!12937 = !DILocation(line: 2956, column: 29, scope: !12893)
!12938 = !DILocation(line: 2956, column: 6, scope: !12893)
!12939 = !DILocation(line: 2956, column: 8, scope: !12893)
!12940 = !DILocation(line: 2957, column: 11, scope: !12893)
!12941 = !DILocation(line: 2957, column: 6, scope: !12893)
!12942 = !DILocation(line: 2957, column: 9, scope: !12893)
!12943 = !DILocation(line: 2958, column: 13, scope: !12893)
!12944 = !DILocation(line: 2958, column: 22, scope: !12893)
!12945 = !DILocation(line: 2958, column: 6, scope: !12893)
!12946 = !DILocation(line: 2958, column: 11, scope: !12893)
!12947 = !DILocation(line: 2960, column: 27, scope: !12893)
!12948 = !DILocation(line: 2960, column: 33, scope: !12893)
!12949 = !DILocation(line: 2960, column: 37, scope: !12893)
!12950 = !DILocation(line: 2960, column: 43, scope: !12893)
!12951 = !DILocation(line: 2960, column: 53, scope: !12893)
!12952 = !DILocation(line: 2960, column: 2, scope: !12893)
!12953 = !DILocation(line: 2961, column: 19, scope: !12893)
!12954 = !DILocation(line: 2961, column: 2, scope: !12893)
!12955 = !DILocation(line: 2961, column: 6, scope: !12893)
!12956 = !DILocation(line: 2961, column: 17, scope: !12893)
!12957 = !DILocation(line: 2962, column: 1, scope: !12893)
!12958 = distinct !DISubprogram(name: "integrate_particle", scope: !3, file: !3, line: 2298, type: !12959, scopeLine: 2301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!12959 = !DISubroutineType(types: !12960)
!12960 = !{null, !2192, !2461, !341, !1796, !3159, !229}
!12961 = !DILocalVariable(name: "part", arg: 1, scope: !12958, file: !3, line: 2298, type: !2192)
!12962 = !DILocation(line: 2298, column: 50, scope: !12958)
!12963 = !DILocalVariable(name: "pa", arg: 2, scope: !12958, file: !3, line: 2298, type: !2461)
!12964 = !DILocation(line: 2298, column: 70, scope: !12958)
!12965 = !DILocalVariable(name: "dtime", arg: 3, scope: !12958, file: !3, line: 2298, type: !341)
!12966 = !DILocation(line: 2298, column: 80, scope: !12958)
!12967 = !DILocalVariable(name: "external_acceleration", arg: 4, scope: !12958, file: !3, line: 2298, type: !1796)
!12968 = !DILocation(line: 2298, column: 94, scope: !12958)
!12969 = !DILocalVariable(name: "force_func", arg: 5, scope: !12958, file: !3, line: 2299, type: !3159)
!12970 = !DILocation(line: 2299, column: 39, scope: !12958)
!12971 = !DILocalVariable(name: "forcedata", arg: 6, scope: !12958, file: !3, line: 2300, type: !229)
!12972 = !DILocation(line: 2300, column: 38, scope: !12958)
!12973 = !DILocalVariable(name: "states", scope: !12958, file: !3, line: 2304, type: !12974)
!12974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1968, size: 2240, elements: !1138)
!12975 = !DILocation(line: 2304, column: 14, scope: !12958)
!12976 = !DILocalVariable(name: "force", scope: !12958, file: !3, line: 2305, type: !563)
!12977 = !DILocation(line: 2305, column: 8, scope: !12958)
!12978 = !DILocalVariable(name: "acceleration", scope: !12958, file: !3, line: 2305, type: !563)
!12979 = !DILocation(line: 2305, column: 18, scope: !12958)
!12980 = !DILocalVariable(name: "impulse", scope: !12958, file: !3, line: 2305, type: !563)
!12981 = !DILocation(line: 2305, column: 35, scope: !12958)
!12982 = !DILocalVariable(name: "dx", scope: !12958, file: !3, line: 2305, type: !12983)
!12983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 384, elements: !12984)
!12984 = !{!475, !373}
!12985 = !DILocation(line: 2305, column: 47, scope: !12958)
!12986 = !DILocalVariable(name: "dv", scope: !12958, file: !3, line: 2305, type: !12983)
!12987 = !DILocation(line: 2305, column: 68, scope: !12958)
!12988 = !DILocalVariable(name: "oldpos", scope: !12958, file: !3, line: 2305, type: !563)
!12989 = !DILocation(line: 2305, column: 89, scope: !12958)
!12990 = !DILocalVariable(name: "pa_mass", scope: !12958, file: !3, line: 2306, type: !341)
!12991 = !DILocation(line: 2306, column: 8, scope: !12958)
!12992 = !DILocation(line: 2306, column: 18, scope: !12958)
!12993 = !DILocation(line: 2306, column: 24, scope: !12958)
!12994 = !DILocation(line: 2306, column: 29, scope: !12958)
!12995 = !DILocation(line: 2306, column: 47, scope: !12958)
!12996 = !DILocation(line: 2306, column: 53, scope: !12958)
!12997 = !DILocation(line: 2306, column: 60, scope: !12958)
!12998 = !DILocation(line: 2306, column: 64, scope: !12958)
!12999 = !DILocation(line: 2306, column: 58, scope: !12958)
!13000 = !DILocation(line: 2306, column: 71, scope: !12958)
!13001 = !DILocation(line: 2306, column: 77, scope: !12958)
!13002 = !DILocalVariable(name: "i", scope: !12958, file: !3, line: 2307, type: !260)
!13003 = !DILocation(line: 2307, column: 6, scope: !12958)
!13004 = !DILocalVariable(name: "steps", scope: !12958, file: !3, line: 2307, type: !260)
!13005 = !DILocation(line: 2307, column: 9, scope: !12958)
!13006 = !DILocalVariable(name: "integrator", scope: !12958, file: !3, line: 2308, type: !260)
!13007 = !DILocation(line: 2308, column: 6, scope: !12958)
!13008 = !DILocation(line: 2308, column: 19, scope: !12958)
!13009 = !DILocation(line: 2308, column: 25, scope: !12958)
!13010 = !DILocation(line: 2312, column: 13, scope: !12958)
!13011 = !DILocation(line: 2312, column: 21, scope: !12958)
!13012 = !DILocation(line: 2312, column: 25, scope: !12958)
!13013 = !DILocation(line: 2312, column: 31, scope: !12958)
!13014 = !DILocation(line: 2312, column: 2, scope: !12958)
!13015 = !DILocation(line: 2315, column: 6, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 2315, column: 6)
!13017 = !DILocation(line: 2315, column: 10, scope: !13016)
!13018 = !DILocation(line: 2315, column: 21, scope: !13016)
!13019 = !DILocation(line: 2315, column: 26, scope: !13016)
!13020 = !DILocation(line: 2315, column: 32, scope: !13016)
!13021 = !DILocation(line: 2315, column: 35, scope: !13016)
!13022 = !DILocation(line: 2315, column: 46, scope: !13016)
!13023 = !DILocation(line: 2315, column: 6, scope: !12958)
!13024 = !DILocation(line: 2316, column: 14, scope: !13016)
!13025 = !DILocation(line: 2316, column: 3, scope: !13016)
!13026 = !DILocation(line: 2318, column: 10, scope: !12958)
!13027 = !DILocation(line: 2318, column: 2, scope: !12958)
!13028 = !DILocation(line: 2320, column: 9, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 2318, column: 22)
!13030 = !DILocation(line: 2321, column: 4, scope: !13029)
!13031 = !DILocation(line: 2323, column: 9, scope: !13029)
!13032 = !DILocation(line: 2324, column: 4, scope: !13029)
!13033 = !DILocation(line: 2326, column: 9, scope: !13029)
!13034 = !DILocation(line: 2327, column: 4, scope: !13029)
!13035 = !DILocation(line: 2329, column: 9, scope: !13029)
!13036 = !DILocation(line: 2330, column: 4, scope: !13029)
!13037 = !DILocation(line: 2333, column: 8, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 2333, column: 2)
!13039 = !DILocation(line: 2333, column: 7, scope: !13038)
!13040 = !DILocation(line: 2333, column: 12, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13038, file: !3, line: 2333, column: 2)
!13042 = !DILocation(line: 2333, column: 14, scope: !13041)
!13043 = !DILocation(line: 2333, column: 13, scope: !13041)
!13044 = !DILocation(line: 2333, column: 2, scope: !13038)
!13045 = !DILocation(line: 2334, column: 21, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !13041, file: !3, line: 2333, column: 26)
!13047 = !DILocation(line: 2334, column: 30, scope: !13046)
!13048 = !DILocation(line: 2334, column: 28, scope: !13046)
!13049 = !DILocation(line: 2334, column: 34, scope: !13046)
!13050 = !DILocation(line: 2334, column: 38, scope: !13046)
!13051 = !DILocation(line: 2334, column: 3, scope: !13046)
!13052 = !DILocation(line: 2335, column: 2, scope: !13046)
!13053 = !DILocation(line: 2333, column: 22, scope: !13041)
!13054 = !DILocation(line: 2333, column: 2, scope: !13041)
!13055 = distinct !{!13055, !13044, !13056}
!13056 = !DILocation(line: 2335, column: 2, scope: !13038)
!13057 = !DILocation(line: 2337, column: 10, scope: !12958)
!13058 = !DILocation(line: 2337, column: 15, scope: !12958)
!13059 = !DILocation(line: 2339, column: 8, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !12958, file: !3, line: 2339, column: 2)
!13061 = !DILocation(line: 2339, column: 7, scope: !13060)
!13062 = !DILocation(line: 2339, column: 12, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13060, file: !3, line: 2339, column: 2)
!13064 = !DILocation(line: 2339, column: 14, scope: !13063)
!13065 = !DILocation(line: 2339, column: 13, scope: !13063)
!13066 = !DILocation(line: 2339, column: 2, scope: !13060)
!13067 = !DILocation(line: 2340, column: 11, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 2339, column: 26)
!13069 = !DILocation(line: 2340, column: 3, scope: !13068)
!13070 = !DILocation(line: 2341, column: 11, scope: !13068)
!13071 = !DILocation(line: 2341, column: 3, scope: !13068)
!13072 = !DILocation(line: 2343, column: 3, scope: !13068)
!13073 = !DILocation(line: 2343, column: 14, scope: !13068)
!13074 = !DILocation(line: 2343, column: 25, scope: !13068)
!13075 = !DILocation(line: 2343, column: 32, scope: !13068)
!13076 = !DILocation(line: 2343, column: 31, scope: !13068)
!13077 = !DILocation(line: 2343, column: 35, scope: !13068)
!13078 = !DILocation(line: 2343, column: 42, scope: !13068)
!13079 = !DILocation(line: 2346, column: 15, scope: !13068)
!13080 = !DILocation(line: 2346, column: 29, scope: !13068)
!13081 = !DILocation(line: 2346, column: 41, scope: !13068)
!13082 = !DILocation(line: 2346, column: 40, scope: !13068)
!13083 = !DILocation(line: 2346, column: 3, scope: !13068)
!13084 = !DILocation(line: 2348, column: 7, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13068, file: !3, line: 2348, column: 7)
!13086 = !DILocation(line: 2348, column: 7, scope: !13068)
!13087 = !DILocation(line: 2349, column: 14, scope: !13085)
!13088 = !DILocation(line: 2349, column: 28, scope: !13085)
!13089 = !DILocation(line: 2349, column: 4, scope: !13085)
!13090 = !DILocation(line: 2352, column: 20, scope: !13068)
!13091 = !DILocation(line: 2352, column: 13, scope: !13068)
!13092 = !DILocation(line: 2352, column: 23, scope: !13068)
!13093 = !DILocation(line: 2352, column: 28, scope: !13068)
!13094 = !DILocation(line: 2352, column: 3, scope: !13068)
!13095 = !DILocation(line: 2354, column: 11, scope: !13068)
!13096 = !DILocation(line: 2354, column: 3, scope: !13068)
!13097 = !DILocation(line: 2356, column: 20, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13068, file: !3, line: 2354, column: 23)
!13099 = !DILocation(line: 2356, column: 24, scope: !13098)
!13100 = !DILocation(line: 2356, column: 30, scope: !13098)
!13101 = !DILocation(line: 2356, column: 42, scope: !13098)
!13102 = !DILocation(line: 2356, column: 34, scope: !13098)
!13103 = !DILocation(line: 2356, column: 54, scope: !13098)
!13104 = !DILocation(line: 2356, column: 46, scope: !13098)
!13105 = !DILocation(line: 2356, column: 59, scope: !13098)
!13106 = !DILocation(line: 2356, column: 5, scope: !13098)
!13107 = !DILocation(line: 2357, column: 20, scope: !13098)
!13108 = !DILocation(line: 2357, column: 24, scope: !13098)
!13109 = !DILocation(line: 2357, column: 30, scope: !13098)
!13110 = !DILocation(line: 2357, column: 43, scope: !13098)
!13111 = !DILocation(line: 2357, column: 35, scope: !13098)
!13112 = !DILocation(line: 2357, column: 48, scope: !13098)
!13113 = !DILocation(line: 2357, column: 62, scope: !13098)
!13114 = !DILocation(line: 2357, column: 5, scope: !13098)
!13115 = !DILocation(line: 2358, column: 5, scope: !13098)
!13116 = !DILocation(line: 2360, column: 9, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 2360, column: 9)
!13118 = !DILocation(line: 2360, column: 10, scope: !13117)
!13119 = !DILocation(line: 2360, column: 9, scope: !13098)
!13120 = !DILocation(line: 2361, column: 21, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13117, file: !3, line: 2360, column: 15)
!13122 = !DILocation(line: 2361, column: 31, scope: !13121)
!13123 = !DILocation(line: 2361, column: 43, scope: !13121)
!13124 = !DILocation(line: 2361, column: 35, scope: !13121)
!13125 = !DILocation(line: 2361, column: 55, scope: !13121)
!13126 = !DILocation(line: 2361, column: 47, scope: !13121)
!13127 = !DILocation(line: 2361, column: 60, scope: !13121)
!13128 = !DILocation(line: 2361, column: 65, scope: !13121)
!13129 = !DILocation(line: 2361, column: 6, scope: !13121)
!13130 = !DILocation(line: 2362, column: 21, scope: !13121)
!13131 = !DILocation(line: 2362, column: 31, scope: !13121)
!13132 = !DILocation(line: 2362, column: 44, scope: !13121)
!13133 = !DILocation(line: 2362, column: 36, scope: !13121)
!13134 = !DILocation(line: 2362, column: 49, scope: !13121)
!13135 = !DILocation(line: 2362, column: 63, scope: !13121)
!13136 = !DILocation(line: 2362, column: 68, scope: !13121)
!13137 = !DILocation(line: 2362, column: 6, scope: !13121)
!13138 = !DILocation(line: 2363, column: 23, scope: !13121)
!13139 = !DILocation(line: 2363, column: 28, scope: !13121)
!13140 = !DILocation(line: 2363, column: 6, scope: !13121)
!13141 = !DILocation(line: 2363, column: 16, scope: !13121)
!13142 = !DILocation(line: 2363, column: 21, scope: !13121)
!13143 = !DILocation(line: 2365, column: 5, scope: !13121)
!13144 = !DILocation(line: 2367, column: 21, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13117, file: !3, line: 2366, column: 10)
!13146 = !DILocation(line: 2367, column: 25, scope: !13145)
!13147 = !DILocation(line: 2367, column: 31, scope: !13145)
!13148 = !DILocation(line: 2367, column: 43, scope: !13145)
!13149 = !DILocation(line: 2367, column: 35, scope: !13145)
!13150 = !DILocation(line: 2367, column: 47, scope: !13145)
!13151 = !DILocation(line: 2367, column: 57, scope: !13145)
!13152 = !DILocation(line: 2367, column: 62, scope: !13145)
!13153 = !DILocation(line: 2367, column: 6, scope: !13145)
!13154 = !DILocation(line: 2368, column: 21, scope: !13145)
!13155 = !DILocation(line: 2368, column: 25, scope: !13145)
!13156 = !DILocation(line: 2368, column: 31, scope: !13145)
!13157 = !DILocation(line: 2368, column: 44, scope: !13145)
!13158 = !DILocation(line: 2368, column: 36, scope: !13145)
!13159 = !DILocation(line: 2368, column: 49, scope: !13145)
!13160 = !DILocation(line: 2368, column: 63, scope: !13145)
!13161 = !DILocation(line: 2368, column: 6, scope: !13145)
!13162 = !DILocation(line: 2370, column: 5, scope: !13098)
!13163 = !DILocation(line: 2372, column: 13, scope: !13098)
!13164 = !DILocation(line: 2372, column: 5, scope: !13098)
!13165 = !DILocation(line: 2374, column: 18, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 2372, column: 16)
!13167 = !DILocation(line: 2374, column: 33, scope: !13166)
!13168 = !DILocation(line: 2374, column: 25, scope: !13166)
!13169 = !DILocation(line: 2374, column: 7, scope: !13166)
!13170 = !DILocation(line: 2375, column: 17, scope: !13166)
!13171 = !DILocation(line: 2375, column: 24, scope: !13166)
!13172 = !DILocation(line: 2375, column: 7, scope: !13166)
!13173 = !DILocation(line: 2376, column: 18, scope: !13166)
!13174 = !DILocation(line: 2376, column: 25, scope: !13166)
!13175 = !DILocation(line: 2376, column: 7, scope: !13166)
!13176 = !DILocation(line: 2377, column: 17, scope: !13166)
!13177 = !DILocation(line: 2377, column: 24, scope: !13166)
!13178 = !DILocation(line: 2377, column: 7, scope: !13166)
!13179 = !DILocation(line: 2379, column: 22, scope: !13166)
!13180 = !DILocation(line: 2379, column: 32, scope: !13166)
!13181 = !DILocation(line: 2379, column: 44, scope: !13166)
!13182 = !DILocation(line: 2379, column: 36, scope: !13166)
!13183 = !DILocation(line: 2379, column: 48, scope: !13166)
!13184 = !DILocation(line: 2379, column: 7, scope: !13166)
!13185 = !DILocation(line: 2380, column: 22, scope: !13166)
!13186 = !DILocation(line: 2380, column: 32, scope: !13166)
!13187 = !DILocation(line: 2380, column: 45, scope: !13166)
!13188 = !DILocation(line: 2380, column: 37, scope: !13166)
!13189 = !DILocation(line: 2380, column: 50, scope: !13166)
!13190 = !DILocation(line: 2380, column: 7, scope: !13166)
!13191 = !DILocation(line: 2381, column: 24, scope: !13166)
!13192 = !DILocation(line: 2381, column: 29, scope: !13166)
!13193 = !DILocation(line: 2381, column: 7, scope: !13166)
!13194 = !DILocation(line: 2381, column: 17, scope: !13166)
!13195 = !DILocation(line: 2381, column: 22, scope: !13166)
!13196 = !DILocation(line: 2383, column: 7, scope: !13166)
!13197 = !DILocation(line: 2385, column: 22, scope: !13166)
!13198 = !DILocation(line: 2385, column: 37, scope: !13166)
!13199 = !DILocation(line: 2385, column: 29, scope: !13166)
!13200 = !DILocation(line: 2385, column: 42, scope: !13166)
!13201 = !DILocation(line: 2385, column: 7, scope: !13166)
!13202 = !DILocation(line: 2386, column: 17, scope: !13166)
!13203 = !DILocation(line: 2386, column: 24, scope: !13166)
!13204 = !DILocation(line: 2386, column: 7, scope: !13166)
!13205 = !DILocation(line: 2387, column: 18, scope: !13166)
!13206 = !DILocation(line: 2387, column: 25, scope: !13166)
!13207 = !DILocation(line: 2387, column: 7, scope: !13166)
!13208 = !DILocation(line: 2388, column: 17, scope: !13166)
!13209 = !DILocation(line: 2388, column: 24, scope: !13166)
!13210 = !DILocation(line: 2388, column: 7, scope: !13166)
!13211 = !DILocation(line: 2390, column: 22, scope: !13166)
!13212 = !DILocation(line: 2390, column: 32, scope: !13166)
!13213 = !DILocation(line: 2390, column: 44, scope: !13166)
!13214 = !DILocation(line: 2390, column: 36, scope: !13166)
!13215 = !DILocation(line: 2390, column: 48, scope: !13166)
!13216 = !DILocation(line: 2390, column: 7, scope: !13166)
!13217 = !DILocation(line: 2391, column: 22, scope: !13166)
!13218 = !DILocation(line: 2391, column: 32, scope: !13166)
!13219 = !DILocation(line: 2391, column: 45, scope: !13166)
!13220 = !DILocation(line: 2391, column: 37, scope: !13166)
!13221 = !DILocation(line: 2391, column: 50, scope: !13166)
!13222 = !DILocation(line: 2391, column: 7, scope: !13166)
!13223 = !DILocation(line: 2392, column: 24, scope: !13166)
!13224 = !DILocation(line: 2392, column: 29, scope: !13166)
!13225 = !DILocation(line: 2392, column: 7, scope: !13166)
!13226 = !DILocation(line: 2392, column: 17, scope: !13166)
!13227 = !DILocation(line: 2392, column: 22, scope: !13166)
!13228 = !DILocation(line: 2393, column: 7, scope: !13166)
!13229 = !DILocation(line: 2395, column: 22, scope: !13166)
!13230 = !DILocation(line: 2395, column: 37, scope: !13166)
!13231 = !DILocation(line: 2395, column: 29, scope: !13166)
!13232 = !DILocation(line: 2395, column: 42, scope: !13166)
!13233 = !DILocation(line: 2395, column: 7, scope: !13166)
!13234 = !DILocation(line: 2396, column: 17, scope: !13166)
!13235 = !DILocation(line: 2396, column: 24, scope: !13166)
!13236 = !DILocation(line: 2396, column: 7, scope: !13166)
!13237 = !DILocation(line: 2397, column: 18, scope: !13166)
!13238 = !DILocation(line: 2397, column: 25, scope: !13166)
!13239 = !DILocation(line: 2397, column: 7, scope: !13166)
!13240 = !DILocation(line: 2398, column: 17, scope: !13166)
!13241 = !DILocation(line: 2398, column: 24, scope: !13166)
!13242 = !DILocation(line: 2398, column: 7, scope: !13166)
!13243 = !DILocation(line: 2400, column: 19, scope: !13166)
!13244 = !DILocation(line: 2400, column: 29, scope: !13166)
!13245 = !DILocation(line: 2400, column: 41, scope: !13166)
!13246 = !DILocation(line: 2400, column: 33, scope: !13166)
!13247 = !DILocation(line: 2400, column: 45, scope: !13166)
!13248 = !DILocation(line: 2400, column: 7, scope: !13166)
!13249 = !DILocation(line: 2401, column: 19, scope: !13166)
!13250 = !DILocation(line: 2401, column: 29, scope: !13166)
!13251 = !DILocation(line: 2401, column: 42, scope: !13166)
!13252 = !DILocation(line: 2401, column: 34, scope: !13166)
!13253 = !DILocation(line: 2401, column: 47, scope: !13166)
!13254 = !DILocation(line: 2401, column: 7, scope: !13166)
!13255 = !DILocation(line: 2402, column: 24, scope: !13166)
!13256 = !DILocation(line: 2402, column: 7, scope: !13166)
!13257 = !DILocation(line: 2402, column: 17, scope: !13166)
!13258 = !DILocation(line: 2402, column: 22, scope: !13166)
!13259 = !DILocation(line: 2404, column: 7, scope: !13166)
!13260 = !DILocation(line: 2406, column: 19, scope: !13166)
!13261 = !DILocation(line: 2406, column: 34, scope: !13166)
!13262 = !DILocation(line: 2406, column: 26, scope: !13166)
!13263 = !DILocation(line: 2406, column: 39, scope: !13166)
!13264 = !DILocation(line: 2406, column: 7, scope: !13166)
!13265 = !DILocation(line: 2407, column: 17, scope: !13166)
!13266 = !DILocation(line: 2407, column: 24, scope: !13166)
!13267 = !DILocation(line: 2407, column: 7, scope: !13166)
!13268 = !DILocation(line: 2408, column: 18, scope: !13166)
!13269 = !DILocation(line: 2408, column: 25, scope: !13166)
!13270 = !DILocation(line: 2408, column: 7, scope: !13166)
!13271 = !DILocation(line: 2409, column: 17, scope: !13166)
!13272 = !DILocation(line: 2409, column: 24, scope: !13166)
!13273 = !DILocation(line: 2409, column: 7, scope: !13166)
!13274 = !DILocation(line: 2411, column: 22, scope: !13166)
!13275 = !DILocation(line: 2411, column: 26, scope: !13166)
!13276 = !DILocation(line: 2411, column: 32, scope: !13166)
!13277 = !DILocation(line: 2411, column: 44, scope: !13166)
!13278 = !DILocation(line: 2411, column: 36, scope: !13166)
!13279 = !DILocation(line: 2411, column: 48, scope: !13166)
!13280 = !DILocation(line: 2411, column: 7, scope: !13166)
!13281 = !DILocation(line: 2412, column: 20, scope: !13166)
!13282 = !DILocation(line: 2412, column: 24, scope: !13166)
!13283 = !DILocation(line: 2412, column: 30, scope: !13166)
!13284 = !DILocation(line: 2412, column: 34, scope: !13166)
!13285 = !DILocation(line: 2412, column: 7, scope: !13166)
!13286 = !DILocation(line: 2413, column: 20, scope: !13166)
!13287 = !DILocation(line: 2413, column: 24, scope: !13166)
!13288 = !DILocation(line: 2413, column: 30, scope: !13166)
!13289 = !DILocation(line: 2413, column: 34, scope: !13166)
!13290 = !DILocation(line: 2413, column: 7, scope: !13166)
!13291 = !DILocation(line: 2414, column: 20, scope: !13166)
!13292 = !DILocation(line: 2414, column: 24, scope: !13166)
!13293 = !DILocation(line: 2414, column: 30, scope: !13166)
!13294 = !DILocation(line: 2414, column: 34, scope: !13166)
!13295 = !DILocation(line: 2414, column: 7, scope: !13166)
!13296 = !DILocation(line: 2416, column: 22, scope: !13166)
!13297 = !DILocation(line: 2416, column: 26, scope: !13166)
!13298 = !DILocation(line: 2416, column: 32, scope: !13166)
!13299 = !DILocation(line: 2416, column: 45, scope: !13166)
!13300 = !DILocation(line: 2416, column: 37, scope: !13166)
!13301 = !DILocation(line: 2416, column: 50, scope: !13166)
!13302 = !DILocation(line: 2416, column: 7, scope: !13166)
!13303 = !DILocation(line: 2417, column: 20, scope: !13166)
!13304 = !DILocation(line: 2417, column: 24, scope: !13166)
!13305 = !DILocation(line: 2417, column: 30, scope: !13166)
!13306 = !DILocation(line: 2417, column: 35, scope: !13166)
!13307 = !DILocation(line: 2417, column: 7, scope: !13166)
!13308 = !DILocation(line: 2418, column: 20, scope: !13166)
!13309 = !DILocation(line: 2418, column: 24, scope: !13166)
!13310 = !DILocation(line: 2418, column: 30, scope: !13166)
!13311 = !DILocation(line: 2418, column: 35, scope: !13166)
!13312 = !DILocation(line: 2418, column: 7, scope: !13166)
!13313 = !DILocation(line: 2419, column: 20, scope: !13166)
!13314 = !DILocation(line: 2419, column: 24, scope: !13166)
!13315 = !DILocation(line: 2419, column: 30, scope: !13166)
!13316 = !DILocation(line: 2419, column: 35, scope: !13166)
!13317 = !DILocation(line: 2419, column: 7, scope: !13166)
!13318 = !DILocation(line: 2420, column: 5, scope: !13166)
!13319 = !DILocation(line: 2421, column: 5, scope: !13098)
!13320 = !DILocation(line: 2423, column: 20, scope: !13098)
!13321 = !DILocation(line: 2423, column: 24, scope: !13098)
!13322 = !DILocation(line: 2423, column: 30, scope: !13098)
!13323 = !DILocation(line: 2423, column: 35, scope: !13098)
!13324 = !DILocation(line: 2423, column: 39, scope: !13098)
!13325 = !DILocation(line: 2423, column: 50, scope: !13098)
!13326 = !DILocation(line: 2423, column: 55, scope: !13098)
!13327 = !DILocation(line: 2423, column: 69, scope: !13098)
!13328 = !DILocation(line: 2423, column: 5, scope: !13098)
!13329 = !DILocation(line: 2424, column: 20, scope: !13098)
!13330 = !DILocation(line: 2424, column: 24, scope: !13098)
!13331 = !DILocation(line: 2424, column: 30, scope: !13098)
!13332 = !DILocation(line: 2424, column: 34, scope: !13098)
!13333 = !DILocation(line: 2424, column: 38, scope: !13098)
!13334 = !DILocation(line: 2424, column: 49, scope: !13098)
!13335 = !DILocation(line: 2424, column: 53, scope: !13098)
!13336 = !DILocation(line: 2424, column: 57, scope: !13098)
!13337 = !DILocation(line: 2424, column: 63, scope: !13098)
!13338 = !DILocation(line: 2424, column: 68, scope: !13098)
!13339 = !DILocation(line: 2424, column: 5, scope: !13098)
!13340 = !DILocation(line: 2426, column: 17, scope: !13098)
!13341 = !DILocation(line: 2426, column: 21, scope: !13098)
!13342 = !DILocation(line: 2426, column: 27, scope: !13098)
!13343 = !DILocation(line: 2426, column: 32, scope: !13098)
!13344 = !DILocation(line: 2426, column: 36, scope: !13098)
!13345 = !DILocation(line: 2426, column: 42, scope: !13098)
!13346 = !DILocation(line: 2426, column: 46, scope: !13098)
!13347 = !DILocation(line: 2426, column: 5, scope: !13098)
!13348 = !DILocation(line: 2427, column: 15, scope: !13098)
!13349 = !DILocation(line: 2427, column: 19, scope: !13098)
!13350 = !DILocation(line: 2427, column: 25, scope: !13098)
!13351 = !DILocation(line: 2427, column: 35, scope: !13098)
!13352 = !DILocation(line: 2427, column: 34, scope: !13098)
!13353 = !DILocation(line: 2427, column: 5, scope: !13098)
!13354 = !DILocation(line: 2428, column: 5, scope: !13098)
!13355 = !DILocation(line: 2430, column: 2, scope: !13068)
!13356 = !DILocation(line: 2339, column: 22, scope: !13063)
!13357 = !DILocation(line: 2339, column: 2, scope: !13063)
!13358 = distinct !{!13358, !13066, !13359}
!13359 = !DILocation(line: 2430, column: 2, scope: !13060)
!13360 = !DILocation(line: 2431, column: 1, scope: !12958)
!13361 = distinct !DISubprogram(name: "basic_force_cb", scope: !3, file: !3, line: 3058, type: !3160, scopeLine: 3059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!13362 = !DILocalVariable(name: "efdata_v", arg: 1, scope: !13361, file: !3, line: 3058, type: !229)
!13363 = !DILocation(line: 3058, column: 34, scope: !13361)
!13364 = !DILocalVariable(name: "state", arg: 2, scope: !13361, file: !3, line: 3058, type: !1988)
!13365 = !DILocation(line: 3058, column: 57, scope: !13361)
!13366 = !DILocalVariable(name: "force", arg: 3, scope: !13361, file: !3, line: 3058, type: !1796)
!13367 = !DILocation(line: 3058, column: 71, scope: !13361)
!13368 = !DILocalVariable(name: "impulse", arg: 4, scope: !13361, file: !3, line: 3058, type: !1796)
!13369 = !DILocation(line: 3058, column: 85, scope: !13361)
!13370 = !DILocalVariable(name: "efdata", scope: !13361, file: !3, line: 3060, type: !3194)
!13371 = !DILocation(line: 3060, column: 10, scope: !13361)
!13372 = !DILocation(line: 3060, column: 29, scope: !13361)
!13373 = !DILocation(line: 3060, column: 19, scope: !13361)
!13374 = !DILocalVariable(name: "sim", scope: !13361, file: !3, line: 3061, type: !3218)
!13375 = !DILocation(line: 3061, column: 26, scope: !13361)
!13376 = !DILocation(line: 3061, column: 32, scope: !13361)
!13377 = !DILocation(line: 3061, column: 40, scope: !13361)
!13378 = !DILocalVariable(name: "part", scope: !13361, file: !3, line: 3062, type: !2192)
!13379 = !DILocation(line: 3062, column: 20, scope: !13361)
!13380 = !DILocation(line: 3062, column: 27, scope: !13361)
!13381 = !DILocation(line: 3062, column: 32, scope: !13361)
!13382 = !DILocation(line: 3062, column: 38, scope: !13361)
!13383 = !DILocalVariable(name: "pa", scope: !13361, file: !3, line: 3063, type: !2461)
!13384 = !DILocation(line: 3063, column: 16, scope: !13361)
!13385 = !DILocation(line: 3063, column: 21, scope: !13361)
!13386 = !DILocation(line: 3063, column: 29, scope: !13361)
!13387 = !DILocalVariable(name: "epoint", scope: !13361, file: !3, line: 3064, type: !13388)
!13388 = !DIDerivedType(tag: DW_TAG_typedef, name: "EffectedPoint", file: !13389, line: 67, baseType: !13390)
!13389 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_effect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectedPoint", file: !13389, line: 52, size: 512, elements: !13391)
!13391 = !{!13392, !13393, !13394, !13395, !13396, !13397, !13398, !13399, !13400, !13401, !13402}
!13392 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !13390, file: !13389, line: 53, baseType: !1796, size: 64)
!13393 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !13390, file: !13389, line: 54, baseType: !1796, size: 64, offset: 64)
!13394 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !13390, file: !13389, line: 55, baseType: !1796, size: 64, offset: 128)
!13395 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !13390, file: !13389, line: 56, baseType: !1796, size: 64, offset: 192)
!13396 = !DIDerivedType(tag: DW_TAG_member, name: "vel_to_frame", scope: !13390, file: !13389, line: 57, baseType: !341, size: 32, offset: 256)
!13397 = !DIDerivedType(tag: DW_TAG_member, name: "vel_to_sec", scope: !13390, file: !13389, line: 58, baseType: !341, size: 32, offset: 288)
!13398 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13390, file: !13389, line: 61, baseType: !341, size: 32, offset: 320)
!13399 = !DIDerivedType(tag: DW_TAG_member, name: "charge", scope: !13390, file: !13389, line: 61, baseType: !341, size: 32, offset: 352)
!13400 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13390, file: !13389, line: 63, baseType: !7, size: 32, offset: 384)
!13401 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !13390, file: !13389, line: 64, baseType: !260, size: 32, offset: 416)
!13402 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !13390, file: !13389, line: 66, baseType: !2186, size: 64, offset: 448)
!13403 = !DILocation(line: 3064, column: 16, scope: !13361)
!13404 = !DILocation(line: 3067, column: 25, scope: !13361)
!13405 = !DILocation(line: 3067, column: 33, scope: !13361)
!13406 = !DILocation(line: 3067, column: 38, scope: !13361)
!13407 = !DILocation(line: 3067, column: 46, scope: !13361)
!13408 = !DILocation(line: 3067, column: 50, scope: !13361)
!13409 = !DILocation(line: 3067, column: 2, scope: !13361)
!13410 = !DILocation(line: 3068, column: 6, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13361, file: !3, line: 3068, column: 6)
!13412 = !DILocation(line: 3068, column: 12, scope: !13411)
!13413 = !DILocation(line: 3068, column: 17, scope: !13411)
!13414 = !DILocation(line: 3068, column: 30, scope: !13411)
!13415 = !DILocation(line: 3068, column: 33, scope: !13411)
!13416 = !DILocation(line: 3068, column: 39, scope: !13411)
!13417 = !DILocation(line: 3068, column: 57, scope: !13411)
!13418 = !DILocation(line: 3068, column: 62, scope: !13411)
!13419 = !DILocation(line: 3068, column: 6, scope: !13361)
!13420 = !DILocation(line: 3069, column: 17, scope: !13411)
!13421 = !DILocation(line: 3069, column: 22, scope: !13411)
!13422 = !DILocation(line: 3069, column: 28, scope: !13411)
!13423 = !DILocation(line: 3069, column: 39, scope: !13411)
!13424 = !DILocation(line: 3069, column: 44, scope: !13411)
!13425 = !DILocation(line: 3069, column: 55, scope: !13411)
!13426 = !DILocation(line: 3069, column: 61, scope: !13411)
!13427 = !DILocation(line: 3069, column: 88, scope: !13411)
!13428 = !DILocation(line: 3069, column: 95, scope: !13411)
!13429 = !DILocation(line: 3069, column: 3, scope: !13411)
!13430 = !DILocation(line: 3071, column: 12, scope: !13361)
!13431 = !DILocation(line: 3071, column: 19, scope: !13361)
!13432 = !DILocation(line: 3071, column: 27, scope: !13361)
!13433 = !DILocation(line: 3071, column: 32, scope: !13361)
!13434 = !DILocation(line: 3071, column: 2, scope: !13361)
!13435 = !DILocation(line: 3072, column: 12, scope: !13361)
!13436 = !DILocation(line: 3072, column: 21, scope: !13361)
!13437 = !DILocation(line: 3072, column: 29, scope: !13361)
!13438 = !DILocation(line: 3072, column: 34, scope: !13361)
!13439 = !DILocation(line: 3072, column: 2, scope: !13361)
!13440 = !DILocation(line: 3075, column: 6, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13361, file: !3, line: 3075, column: 6)
!13442 = !DILocation(line: 3075, column: 12, scope: !13441)
!13443 = !DILocation(line: 3075, column: 20, scope: !13441)
!13444 = !DILocation(line: 3075, column: 6, scope: !13361)
!13445 = !DILocation(line: 3076, column: 16, scope: !13441)
!13446 = !DILocation(line: 3076, column: 23, scope: !13441)
!13447 = !DILocation(line: 3076, column: 30, scope: !13441)
!13448 = !DILocation(line: 3076, column: 36, scope: !13441)
!13449 = !DILocation(line: 3076, column: 42, scope: !13441)
!13450 = !DILocation(line: 3076, column: 35, scope: !13441)
!13451 = !DILocation(line: 3076, column: 52, scope: !13441)
!13452 = !DILocation(line: 3076, column: 56, scope: !13441)
!13453 = !DILocation(line: 3076, column: 50, scope: !13441)
!13454 = !DILocation(line: 3076, column: 63, scope: !13441)
!13455 = !DILocation(line: 3076, column: 67, scope: !13441)
!13456 = !DILocation(line: 3076, column: 61, scope: !13441)
!13457 = !DILocation(line: 3076, column: 81, scope: !13441)
!13458 = !DILocation(line: 3076, column: 88, scope: !13441)
!13459 = !DILocation(line: 3076, column: 74, scope: !13441)
!13460 = !DILocation(line: 3076, column: 72, scope: !13441)
!13461 = !DILocation(line: 3076, column: 3, scope: !13441)
!13462 = !DILocation(line: 3079, column: 6, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13361, file: !3, line: 3079, column: 6)
!13464 = !DILocation(line: 3079, column: 12, scope: !13463)
!13465 = !DILocation(line: 3079, column: 21, scope: !13463)
!13466 = !DILocation(line: 3079, column: 6, scope: !13361)
!13467 = !DILocation(line: 3080, column: 16, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13463, file: !3, line: 3079, column: 30)
!13469 = !DILocation(line: 3080, column: 27, scope: !13468)
!13470 = !DILocation(line: 3080, column: 36, scope: !13468)
!13471 = !DILocation(line: 3080, column: 42, scope: !13468)
!13472 = !DILocation(line: 3080, column: 34, scope: !13468)
!13473 = !DILocation(line: 3080, column: 3, scope: !13468)
!13474 = !DILocation(line: 3080, column: 12, scope: !13468)
!13475 = !DILocation(line: 3081, column: 16, scope: !13468)
!13476 = !DILocation(line: 3081, column: 27, scope: !13468)
!13477 = !DILocation(line: 3081, column: 36, scope: !13468)
!13478 = !DILocation(line: 3081, column: 42, scope: !13468)
!13479 = !DILocation(line: 3081, column: 34, scope: !13468)
!13480 = !DILocation(line: 3081, column: 3, scope: !13468)
!13481 = !DILocation(line: 3081, column: 12, scope: !13468)
!13482 = !DILocation(line: 3082, column: 16, scope: !13468)
!13483 = !DILocation(line: 3082, column: 27, scope: !13468)
!13484 = !DILocation(line: 3082, column: 36, scope: !13468)
!13485 = !DILocation(line: 3082, column: 42, scope: !13468)
!13486 = !DILocation(line: 3082, column: 34, scope: !13468)
!13487 = !DILocation(line: 3082, column: 3, scope: !13468)
!13488 = !DILocation(line: 3082, column: 12, scope: !13468)
!13489 = !DILocation(line: 3083, column: 2, scope: !13468)
!13490 = !DILocation(line: 3085, column: 6, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13361, file: !3, line: 3085, column: 6)
!13492 = !DILocation(line: 3085, column: 12, scope: !13491)
!13493 = !DILocation(line: 3085, column: 17, scope: !13491)
!13494 = !DILocation(line: 3085, column: 32, scope: !13491)
!13495 = !DILocation(line: 3085, column: 42, scope: !13491)
!13496 = !DILocation(line: 3085, column: 35, scope: !13491)
!13497 = !DILocation(line: 3085, column: 6, scope: !13361)
!13498 = !DILocation(line: 3086, column: 14, scope: !13491)
!13499 = !DILocation(line: 3086, column: 18, scope: !13491)
!13500 = !DILocation(line: 3086, column: 24, scope: !13491)
!13501 = !DILocation(line: 3086, column: 36, scope: !13491)
!13502 = !DILocation(line: 3086, column: 3, scope: !13491)
!13503 = !DILocation(line: 3087, column: 1, scope: !13361)
!13504 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !4875, file: !4875, line: 309, type: !5017, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!13505 = !DILocalVariable(name: "r", arg: 1, scope: !13504, file: !4875, line: 309, type: !1796)
!13506 = !DILocation(line: 309, column: 32, scope: !13504)
!13507 = !DILocalVariable(name: "a", arg: 2, scope: !13504, file: !4875, line: 309, type: !2826)
!13508 = !DILocation(line: 309, column: 50, scope: !13504)
!13509 = !DILocalVariable(name: "b", arg: 3, scope: !13504, file: !4875, line: 309, type: !2826)
!13510 = !DILocation(line: 309, column: 68, scope: !13504)
!13511 = !DILocation(line: 311, column: 9, scope: !13504)
!13512 = !DILocation(line: 311, column: 16, scope: !13504)
!13513 = !DILocation(line: 311, column: 14, scope: !13504)
!13514 = !DILocation(line: 311, column: 2, scope: !13504)
!13515 = !DILocation(line: 311, column: 7, scope: !13504)
!13516 = !DILocation(line: 312, column: 9, scope: !13504)
!13517 = !DILocation(line: 312, column: 16, scope: !13504)
!13518 = !DILocation(line: 312, column: 14, scope: !13504)
!13519 = !DILocation(line: 312, column: 2, scope: !13504)
!13520 = !DILocation(line: 312, column: 7, scope: !13504)
!13521 = !DILocation(line: 313, column: 9, scope: !13504)
!13522 = !DILocation(line: 313, column: 16, scope: !13504)
!13523 = !DILocation(line: 313, column: 14, scope: !13504)
!13524 = !DILocation(line: 313, column: 2, scope: !13504)
!13525 = !DILocation(line: 313, column: 7, scope: !13504)
!13526 = !DILocation(line: 314, column: 1, scope: !13504)
!13527 = distinct !DISubprogram(name: "collision_detect", scope: !3, file: !3, line: 3628, type: !13528, scopeLine: 3629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!13528 = !DISubroutineType(types: !13529)
!13529 = !{!260, !2461, !712, !7192, !3058}
!13530 = !DILocalVariable(name: "pa", arg: 1, scope: !13527, file: !3, line: 3628, type: !2461)
!13531 = !DILocation(line: 3628, column: 43, scope: !13527)
!13532 = !DILocalVariable(name: "col", arg: 2, scope: !13527, file: !3, line: 3628, type: !712)
!13533 = !DILocation(line: 3628, column: 66, scope: !13527)
!13534 = !DILocalVariable(name: "hit", arg: 3, scope: !13527, file: !3, line: 3628, type: !7192)
!13535 = !DILocation(line: 3628, column: 86, scope: !13527)
!13536 = !DILocalVariable(name: "colliders", arg: 4, scope: !13527, file: !3, line: 3628, type: !3058)
!13537 = !DILocation(line: 3628, column: 101, scope: !13527)
!13538 = !DILocalVariable(name: "coll", scope: !13527, file: !3, line: 3630, type: !13539)
!13539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13540, size: 64)
!13540 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColliderCache", file: !13541, line: 147, baseType: !13542)
!13541 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_collision.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColliderCache", file: !13541, line: 143, size: 256, elements: !13543)
!13543 = !{!13544, !13546, !13547, !13548}
!13544 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13542, file: !13541, line: 144, baseType: !13545, size: 64)
!13545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13542, size: 64)
!13546 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13542, file: !13541, line: 144, baseType: !13545, size: 64, offset: 64)
!13547 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !13542, file: !13541, line: 145, baseType: !718, size: 64, offset: 128)
!13548 = !DIDerivedType(tag: DW_TAG_member, name: "collmd", scope: !13542, file: !13541, line: 146, baseType: !3086, size: 64, offset: 192)
!13549 = !DILocation(line: 3630, column: 17, scope: !13527)
!13550 = !DILocalVariable(name: "ray_dir", scope: !13527, file: !3, line: 3631, type: !563)
!13551 = !DILocation(line: 3631, column: 8, scope: !13527)
!13552 = !DILocation(line: 3633, column: 28, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13527, file: !3, line: 3633, column: 6)
!13554 = !DILocation(line: 3633, column: 6, scope: !13553)
!13555 = !DILocation(line: 3633, column: 6, scope: !13527)
!13556 = !DILocation(line: 3634, column: 3, scope: !13553)
!13557 = !DILocation(line: 3636, column: 14, scope: !13527)
!13558 = !DILocation(line: 3636, column: 23, scope: !13527)
!13559 = !DILocation(line: 3636, column: 28, scope: !13527)
!13560 = !DILocation(line: 3636, column: 33, scope: !13527)
!13561 = !DILocation(line: 3636, column: 38, scope: !13527)
!13562 = !DILocation(line: 3636, column: 2, scope: !13527)
!13563 = !DILocation(line: 3637, column: 2, scope: !13527)
!13564 = !DILocation(line: 3637, column: 7, scope: !13527)
!13565 = !DILocation(line: 3637, column: 13, scope: !13527)
!13566 = !DILocation(line: 3638, column: 48, scope: !13527)
!13567 = !DILocation(line: 3638, column: 41, scope: !13527)
!13568 = !DILocation(line: 3638, column: 14, scope: !13527)
!13569 = !DILocation(line: 3638, column: 19, scope: !13527)
!13570 = !DILocation(line: 3638, column: 39, scope: !13527)
!13571 = !DILocation(line: 3638, column: 2, scope: !13527)
!13572 = !DILocation(line: 3638, column: 7, scope: !13527)
!13573 = !DILocation(line: 3638, column: 12, scope: !13527)
!13574 = !DILocation(line: 3639, column: 2, scope: !13527)
!13575 = !DILocation(line: 3639, column: 7, scope: !13527)
!13576 = !DILocation(line: 3639, column: 11, scope: !13527)
!13577 = !DILocation(line: 3639, column: 18, scope: !13527)
!13578 = !DILocation(line: 3643, column: 6, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13527, file: !3, line: 3643, column: 6)
!13580 = !DILocation(line: 3643, column: 11, scope: !13579)
!13581 = !DILocation(line: 3643, column: 16, scope: !13579)
!13582 = !DILocation(line: 3643, column: 6, scope: !13527)
!13583 = !DILocation(line: 3644, column: 15, scope: !13579)
!13584 = !DILocation(line: 3644, column: 20, scope: !13579)
!13585 = !DILocation(line: 3644, column: 40, scope: !13579)
!13586 = !DILocation(line: 3644, column: 3, scope: !13579)
!13587 = !DILocation(line: 3644, column: 8, scope: !13579)
!13588 = !DILocation(line: 3644, column: 13, scope: !13579)
!13589 = !DILocation(line: 3646, column: 14, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13527, file: !3, line: 3646, column: 2)
!13591 = !DILocation(line: 3646, column: 25, scope: !13590)
!13592 = !DILocation(line: 3646, column: 12, scope: !13590)
!13593 = !DILocation(line: 3646, column: 7, scope: !13590)
!13594 = !DILocation(line: 3646, column: 32, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13590, file: !3, line: 3646, column: 2)
!13596 = !DILocation(line: 3646, column: 2, scope: !13590)
!13597 = !DILocation(line: 3648, column: 7, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 3648, column: 7)
!13599 = distinct !DILexicalBlock(scope: !13595, file: !3, line: 3646, column: 55)
!13600 = !DILocation(line: 3648, column: 13, scope: !13598)
!13601 = !DILocation(line: 3648, column: 19, scope: !13598)
!13602 = !DILocation(line: 3648, column: 24, scope: !13598)
!13603 = !DILocation(line: 3648, column: 16, scope: !13598)
!13604 = !DILocation(line: 3648, column: 7, scope: !13599)
!13605 = !DILocation(line: 3649, column: 4, scope: !13598)
!13606 = !DILocation(line: 3652, column: 7, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 3652, column: 7)
!13608 = !DILocation(line: 3652, column: 13, scope: !13607)
!13609 = !DILocation(line: 3652, column: 19, scope: !13607)
!13610 = !DILocation(line: 3652, column: 24, scope: !13607)
!13611 = !DILocation(line: 3652, column: 16, scope: !13607)
!13612 = !DILocation(line: 3652, column: 32, scope: !13607)
!13613 = !DILocation(line: 3652, column: 35, scope: !13607)
!13614 = !DILocation(line: 3652, column: 39, scope: !13607)
!13615 = !DILocation(line: 3652, column: 46, scope: !13607)
!13616 = !DILocation(line: 3652, column: 51, scope: !13607)
!13617 = !DILocation(line: 3652, column: 44, scope: !13607)
!13618 = !DILocation(line: 3652, column: 56, scope: !13607)
!13619 = !DILocation(line: 3652, column: 59, scope: !13607)
!13620 = !DILocation(line: 3652, column: 63, scope: !13607)
!13621 = !DILocation(line: 3652, column: 71, scope: !13607)
!13622 = !DILocation(line: 3652, column: 76, scope: !13607)
!13623 = !DILocation(line: 3652, column: 68, scope: !13607)
!13624 = !DILocation(line: 3652, column: 7, scope: !13599)
!13625 = !DILocation(line: 3653, column: 4, scope: !13607)
!13626 = !DILocation(line: 3655, column: 18, scope: !13599)
!13627 = !DILocation(line: 3655, column: 24, scope: !13599)
!13628 = !DILocation(line: 3655, column: 3, scope: !13599)
!13629 = !DILocation(line: 3655, column: 8, scope: !13599)
!13630 = !DILocation(line: 3655, column: 16, scope: !13599)
!13631 = !DILocation(line: 3656, column: 13, scope: !13599)
!13632 = !DILocation(line: 3656, column: 19, scope: !13599)
!13633 = !DILocation(line: 3656, column: 3, scope: !13599)
!13634 = !DILocation(line: 3656, column: 8, scope: !13599)
!13635 = !DILocation(line: 3656, column: 11, scope: !13599)
!13636 = !DILocation(line: 3657, column: 16, scope: !13599)
!13637 = !DILocation(line: 3657, column: 21, scope: !13599)
!13638 = !DILocation(line: 3657, column: 32, scope: !13599)
!13639 = !DILocation(line: 3657, column: 38, scope: !13599)
!13640 = !DILocation(line: 3657, column: 46, scope: !13599)
!13641 = !DILocation(line: 3657, column: 30, scope: !13599)
!13642 = !DILocation(line: 3657, column: 57, scope: !13599)
!13643 = !DILocation(line: 3657, column: 63, scope: !13599)
!13644 = !DILocation(line: 3657, column: 71, scope: !13599)
!13645 = !DILocation(line: 3657, column: 83, scope: !13599)
!13646 = !DILocation(line: 3657, column: 89, scope: !13599)
!13647 = !DILocation(line: 3657, column: 97, scope: !13599)
!13648 = !DILocation(line: 3657, column: 81, scope: !13599)
!13649 = !DILocation(line: 3657, column: 54, scope: !13599)
!13650 = !DILocation(line: 3657, column: 3, scope: !13599)
!13651 = !DILocation(line: 3657, column: 8, scope: !13599)
!13652 = !DILocation(line: 3657, column: 13, scope: !13599)
!13653 = !DILocation(line: 3658, column: 16, scope: !13599)
!13654 = !DILocation(line: 3658, column: 21, scope: !13599)
!13655 = !DILocation(line: 3658, column: 28, scope: !13599)
!13656 = !DILocation(line: 3658, column: 34, scope: !13599)
!13657 = !DILocation(line: 3658, column: 42, scope: !13599)
!13658 = !DILocation(line: 3658, column: 26, scope: !13599)
!13659 = !DILocation(line: 3658, column: 53, scope: !13599)
!13660 = !DILocation(line: 3658, column: 59, scope: !13599)
!13661 = !DILocation(line: 3658, column: 67, scope: !13599)
!13662 = !DILocation(line: 3658, column: 79, scope: !13599)
!13663 = !DILocation(line: 3658, column: 85, scope: !13599)
!13664 = !DILocation(line: 3658, column: 93, scope: !13599)
!13665 = !DILocation(line: 3658, column: 77, scope: !13599)
!13666 = !DILocation(line: 3658, column: 50, scope: !13599)
!13667 = !DILocation(line: 3658, column: 3, scope: !13599)
!13668 = !DILocation(line: 3658, column: 8, scope: !13599)
!13669 = !DILocation(line: 3658, column: 13, scope: !13599)
!13670 = !DILocation(line: 3660, column: 7, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 3660, column: 7)
!13672 = !DILocation(line: 3660, column: 12, scope: !13671)
!13673 = !DILocation(line: 3660, column: 15, scope: !13671)
!13674 = !DILocation(line: 3660, column: 18, scope: !13671)
!13675 = !DILocation(line: 3660, column: 23, scope: !13671)
!13676 = !DILocation(line: 3660, column: 27, scope: !13671)
!13677 = !DILocation(line: 3660, column: 7, scope: !13599)
!13678 = !DILocation(line: 3661, column: 25, scope: !13671)
!13679 = !DILocation(line: 3661, column: 30, scope: !13671)
!13680 = !DILocation(line: 3661, column: 34, scope: !13671)
!13681 = !DILocation(line: 3661, column: 43, scope: !13671)
!13682 = !DILocation(line: 3661, column: 48, scope: !13671)
!13683 = !DILocation(line: 3661, column: 53, scope: !13671)
!13684 = !DILocation(line: 3661, column: 62, scope: !13671)
!13685 = !DILocation(line: 3661, column: 67, scope: !13671)
!13686 = !DILocation(line: 3661, column: 75, scope: !13671)
!13687 = !DILocation(line: 3661, column: 112, scope: !13671)
!13688 = !DILocation(line: 3661, column: 4, scope: !13671)
!13689 = !DILocation(line: 3662, column: 2, scope: !13599)
!13690 = !DILocation(line: 3646, column: 43, scope: !13595)
!13691 = !DILocation(line: 3646, column: 49, scope: !13595)
!13692 = !DILocation(line: 3646, column: 42, scope: !13595)
!13693 = !DILocation(line: 3646, column: 2, scope: !13595)
!13694 = distinct !{!13694, !13596, !13695}
!13695 = !DILocation(line: 3662, column: 2, scope: !13590)
!13696 = !DILocation(line: 3664, column: 9, scope: !13527)
!13697 = !DILocation(line: 3664, column: 14, scope: !13527)
!13698 = !DILocation(line: 3664, column: 20, scope: !13527)
!13699 = !DILocation(line: 3664, column: 2, scope: !13527)
!13700 = !DILocation(line: 3665, column: 1, scope: !13527)
!13701 = distinct !DISubprogram(name: "collision_fail", scope: !3, file: !3, line: 3841, type: !13702, scopeLine: 3842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!13702 = !DISubroutineType(types: !13703)
!13703 = !{null, !2461, !712}
!13704 = !DILocalVariable(name: "pa", arg: 1, scope: !13701, file: !3, line: 3841, type: !2461)
!13705 = !DILocation(line: 3841, column: 42, scope: !13701)
!13706 = !DILocalVariable(name: "col", arg: 2, scope: !13701, file: !3, line: 3841, type: !712)
!13707 = !DILocation(line: 3841, column: 65, scope: !13701)
!13708 = !DILocation(line: 3844, column: 29, scope: !13701)
!13709 = !DILocation(line: 3844, column: 34, scope: !13701)
!13710 = !DILocation(line: 3844, column: 40, scope: !13701)
!13711 = !DILocation(line: 3844, column: 45, scope: !13701)
!13712 = !DILocation(line: 3844, column: 55, scope: !13701)
!13713 = !DILocation(line: 3844, column: 60, scope: !13701)
!13714 = !DILocation(line: 3844, column: 64, scope: !13701)
!13715 = !DILocation(line: 3844, column: 70, scope: !13701)
!13716 = !DILocation(line: 3844, column: 2, scope: !13701)
!13717 = !DILocation(line: 3846, column: 13, scope: !13701)
!13718 = !DILocation(line: 3846, column: 17, scope: !13701)
!13719 = !DILocation(line: 3846, column: 23, scope: !13701)
!13720 = !DILocation(line: 3846, column: 28, scope: !13701)
!13721 = !DILocation(line: 3846, column: 33, scope: !13701)
!13722 = !DILocation(line: 3846, column: 37, scope: !13701)
!13723 = !DILocation(line: 3846, column: 2, scope: !13701)
!13724 = !DILocation(line: 3847, column: 12, scope: !13701)
!13725 = !DILocation(line: 3847, column: 16, scope: !13701)
!13726 = !DILocation(line: 3847, column: 22, scope: !13701)
!13727 = !DILocation(line: 3847, column: 27, scope: !13701)
!13728 = !DILocation(line: 3847, column: 32, scope: !13701)
!13729 = !DILocation(line: 3847, column: 2, scope: !13701)
!13730 = !DILocation(line: 3851, column: 1, scope: !13701)
!13731 = distinct !DISubprogram(name: "collision_response", scope: !3, file: !3, line: 3666, type: !13732, scopeLine: 3667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!13732 = !DISubroutineType(types: !13733)
!13733 = !{!260, !2461, !712, !7192, !260, !260}
!13734 = !DILocalVariable(name: "pa", arg: 1, scope: !13731, file: !3, line: 3666, type: !2461)
!13735 = !DILocation(line: 3666, column: 45, scope: !13731)
!13736 = !DILocalVariable(name: "col", arg: 2, scope: !13731, file: !3, line: 3666, type: !712)
!13737 = !DILocation(line: 3666, column: 68, scope: !13731)
!13738 = !DILocalVariable(name: "hit", arg: 3, scope: !13731, file: !3, line: 3666, type: !7192)
!13739 = !DILocation(line: 3666, column: 88, scope: !13731)
!13740 = !DILocalVariable(name: "kill", arg: 4, scope: !13731, file: !3, line: 3666, type: !260)
!13741 = !DILocation(line: 3666, column: 97, scope: !13731)
!13742 = !DILocalVariable(name: "dynamic_rotation", arg: 5, scope: !13731, file: !3, line: 3666, type: !260)
!13743 = !DILocation(line: 3666, column: 107, scope: !13731)
!13744 = !DILocalVariable(name: "pce", scope: !13731, file: !3, line: 3668, type: !7413)
!13745 = !DILocation(line: 3668, column: 28, scope: !13731)
!13746 = !DILocation(line: 3668, column: 35, scope: !13731)
!13747 = !DILocation(line: 3668, column: 40, scope: !13731)
!13748 = !DILocalVariable(name: "pd", scope: !13731, file: !3, line: 3669, type: !13749)
!13749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13750, size: 64)
!13750 = !DIDerivedType(tag: DW_TAG_typedef, name: "PartDeflect", file: !888, line: 116, baseType: !930)
!13751 = !DILocation(line: 3669, column: 15, scope: !13731)
!13752 = !DILocation(line: 3669, column: 20, scope: !13731)
!13753 = !DILocation(line: 3669, column: 25, scope: !13731)
!13754 = !DILocation(line: 3669, column: 30, scope: !13731)
!13755 = !DILocalVariable(name: "co", scope: !13731, file: !3, line: 3670, type: !563)
!13756 = !DILocation(line: 3670, column: 8, scope: !13731)
!13757 = !DILocalVariable(name: "x", scope: !13731, file: !3, line: 3671, type: !341)
!13758 = !DILocation(line: 3671, column: 8, scope: !13731)
!13759 = !DILocation(line: 3671, column: 12, scope: !13731)
!13760 = !DILocation(line: 3671, column: 17, scope: !13731)
!13761 = !DILocation(line: 3671, column: 22, scope: !13731)
!13762 = !DILocation(line: 3671, column: 27, scope: !13731)
!13763 = !DILocation(line: 3671, column: 21, scope: !13731)
!13764 = !DILocalVariable(name: "f", scope: !13731, file: !3, line: 3672, type: !341)
!13765 = !DILocation(line: 3672, column: 8, scope: !13731)
!13766 = !DILocation(line: 3672, column: 12, scope: !13731)
!13767 = !DILocation(line: 3672, column: 17, scope: !13731)
!13768 = !DILocation(line: 3672, column: 21, scope: !13731)
!13769 = !DILocation(line: 3672, column: 33, scope: !13731)
!13770 = !DILocation(line: 3672, column: 38, scope: !13731)
!13771 = !DILocation(line: 3672, column: 31, scope: !13731)
!13772 = !DILocation(line: 3672, column: 23, scope: !13731)
!13773 = !DILocation(line: 3672, column: 19, scope: !13731)
!13774 = !DILocalVariable(name: "dt1", scope: !13731, file: !3, line: 3673, type: !341)
!13775 = !DILocation(line: 3673, column: 8, scope: !13731)
!13776 = !DILocation(line: 3673, column: 15, scope: !13731)
!13777 = !DILocation(line: 3673, column: 19, scope: !13731)
!13778 = !DILocation(line: 3673, column: 24, scope: !13731)
!13779 = !DILocation(line: 3673, column: 17, scope: !13731)
!13780 = !DILocation(line: 3673, column: 29, scope: !13731)
!13781 = !DILocation(line: 3673, column: 34, scope: !13731)
!13782 = !DILocation(line: 3673, column: 27, scope: !13731)
!13783 = !DILocalVariable(name: "dt2", scope: !13731, file: !3, line: 3674, type: !341)
!13784 = !DILocation(line: 3674, column: 8, scope: !13731)
!13785 = !DILocation(line: 3674, column: 22, scope: !13731)
!13786 = !DILocation(line: 3674, column: 20, scope: !13731)
!13787 = !DILocation(line: 3674, column: 27, scope: !13731)
!13788 = !DILocation(line: 3674, column: 32, scope: !13731)
!13789 = !DILocation(line: 3674, column: 25, scope: !13731)
!13790 = !DILocalVariable(name: "through", scope: !13731, file: !3, line: 3675, type: !260)
!13791 = !DILocation(line: 3675, column: 6, scope: !13731)
!13792 = !DILocation(line: 3675, column: 17, scope: !13731)
!13793 = !DILocation(line: 3675, column: 31, scope: !13731)
!13794 = !DILocation(line: 3675, column: 35, scope: !13731)
!13795 = !DILocation(line: 3675, column: 29, scope: !13731)
!13796 = !DILocation(line: 3675, column: 16, scope: !13731)
!13797 = !DILocation(line: 3678, column: 17, scope: !13731)
!13798 = !DILocation(line: 3678, column: 21, scope: !13731)
!13799 = !DILocation(line: 3678, column: 26, scope: !13731)
!13800 = !DILocation(line: 3678, column: 31, scope: !13731)
!13801 = !DILocation(line: 3678, column: 36, scope: !13731)
!13802 = !DILocation(line: 3678, column: 41, scope: !13731)
!13803 = !DILocation(line: 3678, column: 2, scope: !13731)
!13804 = !DILocation(line: 3681, column: 6, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13731, file: !3, line: 3681, column: 6)
!13806 = !DILocation(line: 3681, column: 14, scope: !13805)
!13807 = !DILocation(line: 3681, column: 19, scope: !13805)
!13808 = !DILocation(line: 3681, column: 23, scope: !13805)
!13809 = !DILocation(line: 3681, column: 28, scope: !13805)
!13810 = !DILocation(line: 3681, column: 31, scope: !13805)
!13811 = !DILocation(line: 3681, column: 35, scope: !13805)
!13812 = !DILocation(line: 3681, column: 40, scope: !13805)
!13813 = !DILocation(line: 3681, column: 6, scope: !13731)
!13814 = !DILocation(line: 3682, column: 3, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13805, file: !3, line: 3681, column: 61)
!13816 = !DILocation(line: 3682, column: 7, scope: !13815)
!13817 = !DILocation(line: 3682, column: 13, scope: !13815)
!13818 = !DILocation(line: 3683, column: 17, scope: !13815)
!13819 = !DILocation(line: 3683, column: 22, scope: !13815)
!13820 = !DILocation(line: 3683, column: 34, scope: !13815)
!13821 = !DILocation(line: 3683, column: 39, scope: !13815)
!13822 = !DILocation(line: 3683, column: 46, scope: !13815)
!13823 = !DILocation(line: 3683, column: 51, scope: !13815)
!13824 = !DILocation(line: 3683, column: 44, scope: !13815)
!13825 = !DILocation(line: 3683, column: 63, scope: !13815)
!13826 = !DILocation(line: 3683, column: 61, scope: !13815)
!13827 = !DILocation(line: 3683, column: 31, scope: !13815)
!13828 = !DILocation(line: 3683, column: 3, scope: !13815)
!13829 = !DILocation(line: 3683, column: 7, scope: !13815)
!13830 = !DILocation(line: 3683, column: 15, scope: !13815)
!13831 = !DILocation(line: 3685, column: 14, scope: !13815)
!13832 = !DILocation(line: 3685, column: 18, scope: !13815)
!13833 = !DILocation(line: 3685, column: 24, scope: !13815)
!13834 = !DILocation(line: 3685, column: 28, scope: !13815)
!13835 = !DILocation(line: 3685, column: 3, scope: !13815)
!13836 = !DILocation(line: 3686, column: 18, scope: !13815)
!13837 = !DILocation(line: 3686, column: 22, scope: !13815)
!13838 = !DILocation(line: 3686, column: 28, scope: !13815)
!13839 = !DILocation(line: 3686, column: 33, scope: !13815)
!13840 = !DILocation(line: 3686, column: 37, scope: !13815)
!13841 = !DILocation(line: 3686, column: 48, scope: !13815)
!13842 = !DILocation(line: 3686, column: 53, scope: !13815)
!13843 = !DILocation(line: 3686, column: 57, scope: !13815)
!13844 = !DILocation(line: 3686, column: 63, scope: !13815)
!13845 = !DILocation(line: 3686, column: 68, scope: !13815)
!13846 = !DILocation(line: 3686, column: 3, scope: !13815)
!13847 = !DILocation(line: 3687, column: 18, scope: !13815)
!13848 = !DILocation(line: 3687, column: 22, scope: !13815)
!13849 = !DILocation(line: 3687, column: 28, scope: !13815)
!13850 = !DILocation(line: 3687, column: 33, scope: !13815)
!13851 = !DILocation(line: 3687, column: 37, scope: !13815)
!13852 = !DILocation(line: 3687, column: 48, scope: !13815)
!13853 = !DILocation(line: 3687, column: 53, scope: !13815)
!13854 = !DILocation(line: 3687, column: 57, scope: !13815)
!13855 = !DILocation(line: 3687, column: 63, scope: !13815)
!13856 = !DILocation(line: 3687, column: 68, scope: !13815)
!13857 = !DILocation(line: 3687, column: 3, scope: !13815)
!13858 = !DILocation(line: 3688, column: 18, scope: !13815)
!13859 = !DILocation(line: 3688, column: 22, scope: !13815)
!13860 = !DILocation(line: 3688, column: 28, scope: !13815)
!13861 = !DILocation(line: 3688, column: 33, scope: !13815)
!13862 = !DILocation(line: 3688, column: 37, scope: !13815)
!13863 = !DILocation(line: 3688, column: 48, scope: !13815)
!13864 = !DILocation(line: 3688, column: 53, scope: !13815)
!13865 = !DILocation(line: 3688, column: 57, scope: !13815)
!13866 = !DILocation(line: 3688, column: 63, scope: !13815)
!13867 = !DILocation(line: 3688, column: 68, scope: !13815)
!13868 = !DILocation(line: 3688, column: 3, scope: !13815)
!13869 = !DILocation(line: 3691, column: 3, scope: !13815)
!13870 = !DILocalVariable(name: "v0", scope: !13871, file: !3, line: 3695, type: !563)
!13871 = distinct !DILexicalBlock(scope: !13805, file: !3, line: 3694, column: 7)
!13872 = !DILocation(line: 3695, column: 9, scope: !13871)
!13873 = !DILocalVariable(name: "v0_nor", scope: !13871, file: !3, line: 3696, type: !563)
!13874 = !DILocation(line: 3696, column: 9, scope: !13871)
!13875 = !DILocalVariable(name: "v0_tan", scope: !13871, file: !3, line: 3697, type: !563)
!13876 = !DILocation(line: 3697, column: 9, scope: !13871)
!13877 = !DILocalVariable(name: "vc_tan", scope: !13871, file: !3, line: 3698, type: !563)
!13878 = !DILocation(line: 3698, column: 9, scope: !13871)
!13879 = !DILocalVariable(name: "v0_dot", scope: !13871, file: !3, line: 3699, type: !341)
!13880 = !DILocation(line: 3699, column: 9, scope: !13871)
!13881 = !DILocalVariable(name: "vc_dot", scope: !13871, file: !3, line: 3699, type: !341)
!13882 = !DILocation(line: 3699, column: 17, scope: !13871)
!13883 = !DILocalVariable(name: "damp", scope: !13871, file: !3, line: 3700, type: !341)
!13884 = !DILocation(line: 3700, column: 9, scope: !13871)
!13885 = !DILocation(line: 3700, column: 16, scope: !13871)
!13886 = !DILocation(line: 3700, column: 20, scope: !13871)
!13887 = !DILocation(line: 3700, column: 32, scope: !13871)
!13888 = !DILocation(line: 3700, column: 36, scope: !13871)
!13889 = !DILocation(line: 3700, column: 47, scope: !13871)
!13890 = !DILocation(line: 3700, column: 54, scope: !13871)
!13891 = !DILocation(line: 3700, column: 66, scope: !13871)
!13892 = !DILocation(line: 3700, column: 51, scope: !13871)
!13893 = !DILocation(line: 3700, column: 30, scope: !13871)
!13894 = !DILocalVariable(name: "frict", scope: !13871, file: !3, line: 3701, type: !341)
!13895 = !DILocation(line: 3701, column: 9, scope: !13871)
!13896 = !DILocation(line: 3701, column: 17, scope: !13871)
!13897 = !DILocation(line: 3701, column: 21, scope: !13871)
!13898 = !DILocation(line: 3701, column: 34, scope: !13871)
!13899 = !DILocation(line: 3701, column: 38, scope: !13871)
!13900 = !DILocation(line: 3701, column: 50, scope: !13871)
!13901 = !DILocation(line: 3701, column: 57, scope: !13871)
!13902 = !DILocation(line: 3701, column: 69, scope: !13871)
!13903 = !DILocation(line: 3701, column: 54, scope: !13871)
!13904 = !DILocation(line: 3701, column: 32, scope: !13871)
!13905 = !DILocalVariable(name: "distance", scope: !13871, file: !3, line: 3702, type: !341)
!13906 = !DILocation(line: 3702, column: 9, scope: !13871)
!13907 = !DILocalVariable(name: "nor", scope: !13871, file: !3, line: 3702, type: !563)
!13908 = !DILocation(line: 3702, column: 19, scope: !13871)
!13909 = !DILocalVariable(name: "dot", scope: !13871, file: !3, line: 3702, type: !341)
!13910 = !DILocation(line: 3702, column: 27, scope: !13871)
!13911 = !DILocation(line: 3704, column: 3, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13913, file: !3, line: 3704, column: 3)
!13913 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 3704, column: 3)
!13914 = !DILocation(line: 3704, column: 3, scope: !13913)
!13915 = !DILocation(line: 3704, column: 3, scope: !13916)
!13916 = distinct !DILexicalBlock(scope: !13912, file: !3, line: 3704, column: 3)
!13917 = !DILocation(line: 3705, column: 3, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13919, file: !3, line: 3705, column: 3)
!13919 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 3705, column: 3)
!13920 = !DILocation(line: 3705, column: 3, scope: !13919)
!13921 = !DILocation(line: 3705, column: 3, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13918, file: !3, line: 3705, column: 3)
!13923 = !DILocation(line: 3708, column: 18, scope: !13871)
!13924 = !DILocation(line: 3708, column: 22, scope: !13871)
!13925 = !DILocation(line: 3708, column: 27, scope: !13871)
!13926 = !DILocation(line: 3708, column: 32, scope: !13871)
!13927 = !DILocation(line: 3708, column: 37, scope: !13871)
!13928 = !DILocation(line: 3708, column: 42, scope: !13871)
!13929 = !DILocation(line: 3708, column: 3, scope: !13871)
!13930 = !DILocation(line: 3711, column: 13, scope: !13871)
!13931 = !DILocation(line: 3711, column: 18, scope: !13871)
!13932 = !DILocation(line: 3711, column: 23, scope: !13871)
!13933 = !DILocation(line: 3711, column: 28, scope: !13871)
!13934 = !DILocation(line: 3711, column: 3, scope: !13871)
!13935 = !DILocation(line: 3714, column: 21, scope: !13871)
!13936 = !DILocation(line: 3714, column: 26, scope: !13871)
!13937 = !DILocation(line: 3714, column: 31, scope: !13871)
!13938 = !DILocation(line: 3714, column: 12, scope: !13871)
!13939 = !DILocation(line: 3714, column: 10, scope: !13871)
!13940 = !DILocation(line: 3715, column: 18, scope: !13871)
!13941 = !DILocation(line: 3715, column: 26, scope: !13871)
!13942 = !DILocation(line: 3715, column: 30, scope: !13871)
!13943 = !DILocation(line: 3715, column: 35, scope: !13871)
!13944 = !DILocation(line: 3715, column: 41, scope: !13871)
!13945 = !DILocation(line: 3715, column: 40, scope: !13871)
!13946 = !DILocation(line: 3715, column: 3, scope: !13871)
!13947 = !DILocation(line: 3718, column: 21, scope: !13871)
!13948 = !DILocation(line: 3718, column: 26, scope: !13871)
!13949 = !DILocation(line: 3718, column: 31, scope: !13871)
!13950 = !DILocation(line: 3718, column: 36, scope: !13871)
!13951 = !DILocation(line: 3718, column: 12, scope: !13871)
!13952 = !DILocation(line: 3718, column: 10, scope: !13871)
!13953 = !DILocation(line: 3719, column: 18, scope: !13871)
!13954 = !DILocation(line: 3719, column: 26, scope: !13871)
!13955 = !DILocation(line: 3719, column: 31, scope: !13871)
!13956 = !DILocation(line: 3719, column: 36, scope: !13871)
!13957 = !DILocation(line: 3719, column: 41, scope: !13871)
!13958 = !DILocation(line: 3719, column: 47, scope: !13871)
!13959 = !DILocation(line: 3719, column: 46, scope: !13871)
!13960 = !DILocation(line: 3719, column: 3, scope: !13871)
!13961 = !DILocation(line: 3722, column: 7, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 3722, column: 7)
!13963 = !DILocation(line: 3722, column: 13, scope: !13962)
!13964 = !DILocation(line: 3722, column: 7, scope: !13871)
!13965 = !DILocation(line: 3724, column: 8, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13967, file: !3, line: 3724, column: 8)
!13967 = distinct !DILexicalBlock(scope: !13962, file: !3, line: 3722, column: 21)
!13968 = !DILocation(line: 3724, column: 8, scope: !13967)
!13969 = !DILocalVariable(name: "vr_tan", scope: !13970, file: !3, line: 3725, type: !563)
!13970 = distinct !DILexicalBlock(scope: !13966, file: !3, line: 3724, column: 26)
!13971 = !DILocation(line: 3725, column: 11, scope: !13970)
!13972 = !DILocalVariable(name: "v1_tan", scope: !13970, file: !3, line: 3725, type: !563)
!13973 = !DILocation(line: 3725, column: 22, scope: !13970)
!13974 = !DILocalVariable(name: "ave", scope: !13970, file: !3, line: 3725, type: !563)
!13975 = !DILocation(line: 3725, column: 33, scope: !13970)
!13976 = !DILocation(line: 3728, column: 19, scope: !13970)
!13977 = !DILocation(line: 3728, column: 27, scope: !13970)
!13978 = !DILocation(line: 3728, column: 32, scope: !13970)
!13979 = !DILocation(line: 3728, column: 37, scope: !13970)
!13980 = !DILocation(line: 3728, column: 41, scope: !13970)
!13981 = !DILocation(line: 3728, column: 47, scope: !13970)
!13982 = !DILocation(line: 3728, column: 5, scope: !13970)
!13983 = !DILocation(line: 3729, column: 15, scope: !13970)
!13984 = !DILocation(line: 3729, column: 23, scope: !13970)
!13985 = !DILocation(line: 3729, column: 27, scope: !13970)
!13986 = !DILocation(line: 3729, column: 5, scope: !13970)
!13987 = !DILocation(line: 3732, column: 17, scope: !13970)
!13988 = !DILocation(line: 3732, column: 25, scope: !13970)
!13989 = !DILocation(line: 3732, column: 33, scope: !13970)
!13990 = !DILocation(line: 3732, column: 5, scope: !13970)
!13991 = !DILocation(line: 3738, column: 18, scope: !13970)
!13992 = !DILocation(line: 3738, column: 26, scope: !13970)
!13993 = !DILocation(line: 3738, column: 5, scope: !13970)
!13994 = !DILocation(line: 3739, column: 15, scope: !13970)
!13995 = !DILocation(line: 3739, column: 5, scope: !13970)
!13996 = !DILocation(line: 3742, column: 15, scope: !13970)
!13997 = !DILocation(line: 3742, column: 38, scope: !13970)
!13998 = !DILocation(line: 3742, column: 36, scope: !13970)
!13999 = !DILocation(line: 3742, column: 28, scope: !13970)
!14000 = !DILocation(line: 3742, column: 5, scope: !13970)
!14001 = !DILocation(line: 3745, column: 18, scope: !13970)
!14002 = !DILocation(line: 3745, column: 26, scope: !13970)
!14003 = !DILocation(line: 3745, column: 5, scope: !13970)
!14004 = !DILocation(line: 3748, column: 15, scope: !13970)
!14005 = !DILocation(line: 3748, column: 23, scope: !13970)
!14006 = !DILocation(line: 3748, column: 5, scope: !13970)
!14007 = !DILocation(line: 3751, column: 19, scope: !13970)
!14008 = !DILocation(line: 3751, column: 24, scope: !13970)
!14009 = !DILocation(line: 3751, column: 32, scope: !13970)
!14010 = !DILocation(line: 3751, column: 37, scope: !13970)
!14011 = !DILocation(line: 3751, column: 5, scope: !13970)
!14012 = !DILocation(line: 3752, column: 15, scope: !13970)
!14013 = !DILocation(line: 3752, column: 25, scope: !13970)
!14014 = !DILocation(line: 3752, column: 24, scope: !13970)
!14015 = !DILocation(line: 3752, column: 5, scope: !13970)
!14016 = !DILocation(line: 3755, column: 20, scope: !13970)
!14017 = !DILocation(line: 3755, column: 24, scope: !13970)
!14018 = !DILocation(line: 3755, column: 30, scope: !13970)
!14019 = !DILocation(line: 3755, column: 35, scope: !13970)
!14020 = !DILocation(line: 3755, column: 39, scope: !13970)
!14021 = !DILocation(line: 3755, column: 45, scope: !13970)
!14022 = !DILocation(line: 3755, column: 50, scope: !13970)
!14023 = !DILocation(line: 3755, column: 55, scope: !13970)
!14024 = !DILocation(line: 3755, column: 5, scope: !13970)
!14025 = !DILocation(line: 3756, column: 20, scope: !13970)
!14026 = !DILocation(line: 3756, column: 28, scope: !13970)
!14027 = !DILocation(line: 3756, column: 36, scope: !13970)
!14028 = !DILocation(line: 3756, column: 44, scope: !13970)
!14029 = !DILocation(line: 3756, column: 5, scope: !13970)
!14030 = !DILocation(line: 3757, column: 4, scope: !13970)
!14031 = !DILocation(line: 3760, column: 20, scope: !14032)
!14032 = distinct !DILexicalBlock(scope: !13966, file: !3, line: 3758, column: 9)
!14033 = !DILocation(line: 3760, column: 28, scope: !14032)
!14034 = !DILocation(line: 3760, column: 36, scope: !14032)
!14035 = !DILocation(line: 3760, column: 44, scope: !14032)
!14036 = !DILocation(line: 3760, column: 5, scope: !14032)
!14037 = !DILocation(line: 3762, column: 3, scope: !13967)
!14038 = !DILocation(line: 3766, column: 7, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 3766, column: 7)
!14040 = !DILocation(line: 3766, column: 14, scope: !14039)
!14041 = !DILocation(line: 3766, column: 7, scope: !13871)
!14042 = !DILocation(line: 3767, column: 14, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14039, file: !3, line: 3766, column: 22)
!14044 = !DILocation(line: 3767, column: 18, scope: !14043)
!14045 = !DILocation(line: 3767, column: 11, scope: !14043)
!14046 = !DILocation(line: 3768, column: 8, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14043, file: !3, line: 3768, column: 8)
!14048 = !DILocation(line: 3768, column: 15, scope: !14047)
!14049 = !DILocation(line: 3768, column: 8, scope: !14043)
!14050 = !DILocation(line: 3769, column: 12, scope: !14047)
!14051 = !DILocation(line: 3769, column: 5, scope: !14047)
!14052 = !DILocation(line: 3770, column: 3, scope: !14043)
!14053 = !DILocation(line: 3773, column: 20, scope: !13871)
!14054 = !DILocation(line: 3773, column: 18, scope: !13871)
!14055 = !DILocation(line: 3773, column: 10, scope: !13871)
!14056 = !DILocation(line: 3774, column: 13, scope: !13871)
!14057 = !DILocation(line: 3774, column: 23, scope: !13871)
!14058 = !DILocation(line: 3774, column: 10, scope: !13871)
!14059 = !DILocation(line: 3778, column: 7, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 3778, column: 7)
!14061 = !DILocation(line: 3778, column: 14, scope: !14060)
!14062 = !DILocation(line: 3778, column: 18, scope: !14060)
!14063 = !DILocation(line: 3778, column: 23, scope: !14060)
!14064 = !DILocation(line: 3778, column: 29, scope: !14060)
!14065 = !DILocation(line: 3778, column: 35, scope: !14060)
!14066 = !DILocation(line: 3778, column: 38, scope: !14060)
!14067 = !DILocation(line: 3778, column: 44, scope: !14060)
!14068 = !DILocation(line: 3778, column: 50, scope: !14060)
!14069 = !DILocation(line: 3778, column: 53, scope: !14060)
!14070 = !DILocation(line: 3778, column: 60, scope: !14060)
!14071 = !DILocation(line: 3778, column: 59, scope: !14060)
!14072 = !DILocation(line: 3778, column: 68, scope: !14060)
!14073 = !DILocation(line: 3778, column: 72, scope: !14060)
!14074 = !DILocation(line: 3778, column: 78, scope: !14060)
!14075 = !DILocation(line: 3778, column: 84, scope: !14060)
!14076 = !DILocation(line: 3778, column: 87, scope: !14060)
!14077 = !DILocation(line: 3778, column: 93, scope: !14060)
!14078 = !DILocation(line: 3778, column: 99, scope: !14060)
!14079 = !DILocation(line: 3778, column: 102, scope: !14060)
!14080 = !DILocation(line: 3778, column: 109, scope: !14060)
!14081 = !DILocation(line: 3778, column: 108, scope: !14060)
!14082 = !DILocation(line: 3778, column: 7, scope: !13871)
!14083 = !DILocation(line: 3779, column: 16, scope: !14060)
!14084 = !DILocation(line: 3779, column: 24, scope: !14060)
!14085 = !DILocation(line: 3779, column: 29, scope: !14060)
!14086 = !DILocation(line: 3779, column: 34, scope: !14060)
!14087 = !DILocation(line: 3779, column: 4, scope: !14060)
!14088 = !DILocation(line: 3780, column: 12, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14060, file: !3, line: 3780, column: 12)
!14090 = !DILocation(line: 3780, column: 19, scope: !14089)
!14091 = !DILocation(line: 3780, column: 12, scope: !14060)
!14092 = !DILocation(line: 3781, column: 16, scope: !14089)
!14093 = !DILocation(line: 3781, column: 24, scope: !14089)
!14094 = !DILocation(line: 3781, column: 29, scope: !14089)
!14095 = !DILocation(line: 3781, column: 34, scope: !14089)
!14096 = !DILocation(line: 3781, column: 44, scope: !14089)
!14097 = !DILocation(line: 3781, column: 70, scope: !14089)
!14098 = !DILocation(line: 3781, column: 68, scope: !14089)
!14099 = !DILocation(line: 3781, column: 41, scope: !14089)
!14100 = !DILocation(line: 3781, column: 4, scope: !14089)
!14101 = !DILocation(line: 3783, column: 16, scope: !14089)
!14102 = !DILocation(line: 3783, column: 24, scope: !14089)
!14103 = !DILocation(line: 3783, column: 29, scope: !14089)
!14104 = !DILocation(line: 3783, column: 34, scope: !14089)
!14105 = !DILocation(line: 3783, column: 44, scope: !14089)
!14106 = !DILocation(line: 3783, column: 70, scope: !14089)
!14107 = !DILocation(line: 3783, column: 68, scope: !14089)
!14108 = !DILocation(line: 3783, column: 41, scope: !14089)
!14109 = !DILocation(line: 3783, column: 4, scope: !14089)
!14110 = !DILocation(line: 3786, column: 15, scope: !13871)
!14111 = !DILocation(line: 3786, column: 19, scope: !13871)
!14112 = !DILocation(line: 3786, column: 27, scope: !13871)
!14113 = !DILocation(line: 3786, column: 3, scope: !13871)
!14114 = !DILocation(line: 3788, column: 7, scope: !14115)
!14115 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 3788, column: 7)
!14116 = !DILocation(line: 3788, column: 12, scope: !14115)
!14117 = !DILocation(line: 3788, column: 7, scope: !13871)
!14118 = !DILocalVariable(name: "bpa", scope: !14119, file: !3, line: 3790, type: !1990)
!14119 = distinct !DILexicalBlock(scope: !14115, file: !3, line: 3788, column: 18)
!14120 = !DILocation(line: 3790, column: 18, scope: !14119)
!14121 = !DILocation(line: 3790, column: 24, scope: !14119)
!14122 = !DILocation(line: 3790, column: 28, scope: !14119)
!14123 = !DILocation(line: 3791, column: 8, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14119, file: !3, line: 3791, column: 8)
!14125 = !DILocation(line: 3791, column: 13, scope: !14124)
!14126 = !DILocation(line: 3791, column: 18, scope: !14124)
!14127 = !DILocation(line: 3791, column: 23, scope: !14124)
!14128 = !DILocation(line: 3791, column: 43, scope: !14124)
!14129 = !DILocation(line: 3791, column: 46, scope: !14124)
!14130 = !DILocation(line: 3791, column: 55, scope: !14124)
!14131 = !DILocation(line: 3791, column: 60, scope: !14124)
!14132 = !DILocation(line: 3791, column: 52, scope: !14124)
!14133 = !DILocation(line: 3791, column: 8, scope: !14119)
!14134 = !DILocation(line: 3792, column: 13, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14124, file: !3, line: 3791, column: 68)
!14136 = !DILocation(line: 3792, column: 18, scope: !14135)
!14137 = !DILocation(line: 3792, column: 5, scope: !14135)
!14138 = !DILocation(line: 3792, column: 11, scope: !14135)
!14139 = !DILocation(line: 3793, column: 5, scope: !14135)
!14140 = !DILocation(line: 3793, column: 11, scope: !14135)
!14141 = !DILocation(line: 3794, column: 4, scope: !14135)
!14142 = !DILocation(line: 3795, column: 3, scope: !14119)
!14143 = !DILocation(line: 3798, column: 18, scope: !13871)
!14144 = !DILocation(line: 3798, column: 22, scope: !13871)
!14145 = !DILocation(line: 3798, column: 28, scope: !13871)
!14146 = !DILocation(line: 3798, column: 32, scope: !13871)
!14147 = !DILocation(line: 3798, column: 36, scope: !13871)
!14148 = !DILocation(line: 3798, column: 40, scope: !13871)
!14149 = !DILocation(line: 3798, column: 3, scope: !13871)
!14150 = !DILocation(line: 3799, column: 16, scope: !13871)
!14151 = !DILocation(line: 3799, column: 20, scope: !13871)
!14152 = !DILocation(line: 3799, column: 26, scope: !13871)
!14153 = !DILocation(line: 3799, column: 30, scope: !13871)
!14154 = !DILocation(line: 3799, column: 35, scope: !13871)
!14155 = !DILocation(line: 3799, column: 45, scope: !13871)
!14156 = !DILocation(line: 3799, column: 44, scope: !13871)
!14157 = !DILocation(line: 3799, column: 49, scope: !13871)
!14158 = !DILocation(line: 3799, column: 48, scope: !13871)
!14159 = !DILocation(line: 3799, column: 3, scope: !13871)
!14160 = !DILocation(line: 3800, column: 18, scope: !13871)
!14161 = !DILocation(line: 3800, column: 22, scope: !13871)
!14162 = !DILocation(line: 3800, column: 28, scope: !13871)
!14163 = !DILocation(line: 3800, column: 33, scope: !13871)
!14164 = !DILocation(line: 3800, column: 37, scope: !13871)
!14165 = !DILocation(line: 3800, column: 42, scope: !13871)
!14166 = !DILocation(line: 3800, column: 47, scope: !13871)
!14167 = !DILocation(line: 3800, column: 3, scope: !13871)
!14168 = !DILocation(line: 3803, column: 8, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 3803, column: 7)
!14170 = !DILocation(line: 3803, column: 7, scope: !13871)
!14171 = !DILocation(line: 3804, column: 52, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14169, file: !3, line: 3803, column: 17)
!14173 = !DILocation(line: 3804, column: 56, scope: !14172)
!14174 = !DILocation(line: 3804, column: 67, scope: !14172)
!14175 = !DILocation(line: 3804, column: 72, scope: !14172)
!14176 = !DILocation(line: 3804, column: 15, scope: !14172)
!14177 = !DILocation(line: 3804, column: 13, scope: !14172)
!14178 = !DILocation(line: 3806, column: 8, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14172, file: !3, line: 3806, column: 8)
!14180 = !DILocation(line: 3806, column: 19, scope: !14179)
!14181 = !DILocation(line: 3806, column: 24, scope: !14179)
!14182 = !DILocation(line: 3806, column: 31, scope: !14179)
!14183 = !DILocation(line: 3806, column: 17, scope: !14179)
!14184 = !DILocation(line: 3806, column: 8, scope: !14172)
!14185 = !DILocation(line: 3807, column: 18, scope: !14179)
!14186 = !DILocation(line: 3807, column: 22, scope: !14179)
!14187 = !DILocation(line: 3807, column: 27, scope: !14179)
!14188 = !DILocation(line: 3807, column: 32, scope: !14179)
!14189 = !DILocation(line: 3807, column: 39, scope: !14179)
!14190 = !DILocation(line: 3807, column: 66, scope: !14179)
!14191 = !DILocation(line: 3807, column: 64, scope: !14179)
!14192 = !DILocation(line: 3807, column: 5, scope: !14179)
!14193 = !DILocation(line: 3809, column: 19, scope: !14172)
!14194 = !DILocation(line: 3809, column: 24, scope: !14172)
!14195 = !DILocation(line: 3809, column: 10, scope: !14172)
!14196 = !DILocation(line: 3809, column: 8, scope: !14172)
!14197 = !DILocation(line: 3810, column: 8, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14172, file: !3, line: 3810, column: 8)
!14199 = !DILocation(line: 3810, column: 12, scope: !14198)
!14200 = !DILocation(line: 3810, column: 8, scope: !14172)
!14201 = !DILocation(line: 3811, column: 18, scope: !14198)
!14202 = !DILocation(line: 3811, column: 22, scope: !14198)
!14203 = !DILocation(line: 3811, column: 28, scope: !14198)
!14204 = !DILocation(line: 3811, column: 27, scope: !14198)
!14205 = !DILocation(line: 3811, column: 5, scope: !14198)
!14206 = !DILocation(line: 3813, column: 52, scope: !14172)
!14207 = !DILocation(line: 3813, column: 56, scope: !14172)
!14208 = !DILocation(line: 3813, column: 62, scope: !14172)
!14209 = !DILocation(line: 3813, column: 66, scope: !14172)
!14210 = !DILocation(line: 3813, column: 76, scope: !14172)
!14211 = !DILocation(line: 3813, column: 81, scope: !14172)
!14212 = !DILocation(line: 3813, column: 15, scope: !14172)
!14213 = !DILocation(line: 3813, column: 13, scope: !14172)
!14214 = !DILocation(line: 3815, column: 8, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14172, file: !3, line: 3815, column: 8)
!14216 = !DILocation(line: 3815, column: 19, scope: !14215)
!14217 = !DILocation(line: 3815, column: 24, scope: !14215)
!14218 = !DILocation(line: 3815, column: 31, scope: !14215)
!14219 = !DILocation(line: 3815, column: 17, scope: !14215)
!14220 = !DILocation(line: 3815, column: 8, scope: !14172)
!14221 = !DILocation(line: 3816, column: 18, scope: !14215)
!14222 = !DILocation(line: 3816, column: 22, scope: !14215)
!14223 = !DILocation(line: 3816, column: 28, scope: !14215)
!14224 = !DILocation(line: 3816, column: 32, scope: !14215)
!14225 = !DILocation(line: 3816, column: 37, scope: !14215)
!14226 = !DILocation(line: 3816, column: 42, scope: !14215)
!14227 = !DILocation(line: 3816, column: 49, scope: !14215)
!14228 = !DILocation(line: 3816, column: 76, scope: !14215)
!14229 = !DILocation(line: 3816, column: 74, scope: !14215)
!14230 = !DILocation(line: 3816, column: 5, scope: !14215)
!14231 = !DILocation(line: 3818, column: 19, scope: !14172)
!14232 = !DILocation(line: 3818, column: 24, scope: !14172)
!14233 = !DILocation(line: 3818, column: 28, scope: !14172)
!14234 = !DILocation(line: 3818, column: 34, scope: !14172)
!14235 = !DILocation(line: 3818, column: 10, scope: !14172)
!14236 = !DILocation(line: 3818, column: 8, scope: !14172)
!14237 = !DILocation(line: 3819, column: 8, scope: !14238)
!14238 = distinct !DILexicalBlock(scope: !14172, file: !3, line: 3819, column: 8)
!14239 = !DILocation(line: 3819, column: 12, scope: !14238)
!14240 = !DILocation(line: 3819, column: 8, scope: !14172)
!14241 = !DILocation(line: 3820, column: 18, scope: !14238)
!14242 = !DILocation(line: 3820, column: 22, scope: !14238)
!14243 = !DILocation(line: 3820, column: 28, scope: !14238)
!14244 = !DILocation(line: 3820, column: 33, scope: !14238)
!14245 = !DILocation(line: 3820, column: 39, scope: !14238)
!14246 = !DILocation(line: 3820, column: 38, scope: !14238)
!14247 = !DILocation(line: 3820, column: 5, scope: !14238)
!14248 = !DILocation(line: 3821, column: 3, scope: !14172)
!14249 = !DILocation(line: 3824, column: 16, scope: !13871)
!14250 = !DILocation(line: 3824, column: 20, scope: !13871)
!14251 = !DILocation(line: 3824, column: 26, scope: !13871)
!14252 = !DILocation(line: 3824, column: 31, scope: !13871)
!14253 = !DILocation(line: 3824, column: 36, scope: !13871)
!14254 = !DILocation(line: 3824, column: 42, scope: !13871)
!14255 = !DILocation(line: 3824, column: 46, scope: !13871)
!14256 = !DILocation(line: 3824, column: 41, scope: !13871)
!14257 = !DILocation(line: 3824, column: 3, scope: !13871)
!14258 = !DILocation(line: 3827, column: 14, scope: !13871)
!14259 = !DILocation(line: 3827, column: 19, scope: !13871)
!14260 = !DILocation(line: 3827, column: 24, scope: !13871)
!14261 = !DILocation(line: 3827, column: 3, scope: !13871)
!14262 = !DILocation(line: 3828, column: 14, scope: !13871)
!14263 = !DILocation(line: 3828, column: 19, scope: !13871)
!14264 = !DILocation(line: 3828, column: 24, scope: !13871)
!14265 = !DILocation(line: 3828, column: 28, scope: !13871)
!14266 = !DILocation(line: 3828, column: 34, scope: !13871)
!14267 = !DILocation(line: 3828, column: 3, scope: !13871)
!14268 = !DILocation(line: 3830, column: 14, scope: !13871)
!14269 = !DILocation(line: 3830, column: 19, scope: !13871)
!14270 = !DILocation(line: 3830, column: 24, scope: !13871)
!14271 = !DILocation(line: 3830, column: 3, scope: !13871)
!14272 = !DILocation(line: 3831, column: 14, scope: !13871)
!14273 = !DILocation(line: 3831, column: 19, scope: !13871)
!14274 = !DILocation(line: 3831, column: 24, scope: !13871)
!14275 = !DILocation(line: 3831, column: 28, scope: !13871)
!14276 = !DILocation(line: 3831, column: 34, scope: !13871)
!14277 = !DILocation(line: 3831, column: 3, scope: !13871)
!14278 = !DILocation(line: 3833, column: 12, scope: !13871)
!14279 = !DILocation(line: 3833, column: 3, scope: !13871)
!14280 = !DILocation(line: 3833, column: 8, scope: !13871)
!14281 = !DILocation(line: 3833, column: 10, scope: !13871)
!14282 = !DILocation(line: 3836, column: 14, scope: !13731)
!14283 = !DILocation(line: 3836, column: 19, scope: !13731)
!14284 = !DILocation(line: 3836, column: 2, scope: !13731)
!14285 = !DILocation(line: 3836, column: 7, scope: !13731)
!14286 = !DILocation(line: 3836, column: 12, scope: !13731)
!14287 = !DILocation(line: 3837, column: 20, scope: !13731)
!14288 = !DILocation(line: 3837, column: 25, scope: !13731)
!14289 = !DILocation(line: 3837, column: 2, scope: !13731)
!14290 = !DILocation(line: 3837, column: 7, scope: !13731)
!14291 = !DILocation(line: 3837, column: 18, scope: !13731)
!14292 = !DILocation(line: 3839, column: 2, scope: !13731)
!14293 = !DILocation(line: 3840, column: 1, scope: !13731)
!14294 = distinct !DISubprogram(name: "collision_point_on_surface", scope: !3, file: !3, line: 3310, type: !14295, scopeLine: 3311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!14295 = !DISubroutineType(types: !14296)
!14296 = !{null, !1796, !7413, !341, !712, !1796}
!14297 = !DILocalVariable(name: "p", arg: 1, scope: !14294, file: !3, line: 3310, type: !1796)
!14298 = !DILocation(line: 3310, column: 46, scope: !14294)
!14299 = !DILocalVariable(name: "pce", arg: 2, scope: !14294, file: !3, line: 3310, type: !7413)
!14300 = !DILocation(line: 3310, column: 78, scope: !14294)
!14301 = !DILocalVariable(name: "fac", arg: 3, scope: !14294, file: !3, line: 3310, type: !341)
!14302 = !DILocation(line: 3310, column: 89, scope: !14294)
!14303 = !DILocalVariable(name: "col", arg: 4, scope: !14294, file: !3, line: 3310, type: !712)
!14304 = !DILocation(line: 3310, column: 113, scope: !14294)
!14305 = !DILocalVariable(name: "co", arg: 5, scope: !14294, file: !3, line: 3310, type: !1796)
!14306 = !DILocation(line: 3310, column: 125, scope: !14294)
!14307 = !DILocation(line: 3312, column: 32, scope: !14294)
!14308 = !DILocation(line: 3312, column: 42, scope: !14294)
!14309 = !DILocation(line: 3312, column: 47, scope: !14294)
!14310 = !DILocation(line: 3312, column: 2, scope: !14294)
!14311 = !DILocation(line: 3314, column: 10, scope: !14294)
!14312 = !DILocation(line: 3314, column: 15, scope: !14294)
!14313 = !DILocation(line: 3314, column: 2, scope: !14294)
!14314 = !DILocation(line: 3317, column: 16, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14316, file: !3, line: 3316, column: 3)
!14316 = distinct !DILexicalBlock(scope: !14294, file: !3, line: 3314, column: 20)
!14317 = !DILocation(line: 3317, column: 20, scope: !14315)
!14318 = !DILocation(line: 3317, column: 23, scope: !14315)
!14319 = !DILocation(line: 3317, column: 28, scope: !14315)
!14320 = !DILocation(line: 3317, column: 4, scope: !14315)
!14321 = !DILocation(line: 3318, column: 17, scope: !14315)
!14322 = !DILocation(line: 3318, column: 4, scope: !14315)
!14323 = !DILocation(line: 3319, column: 19, scope: !14315)
!14324 = !DILocation(line: 3319, column: 23, scope: !14315)
!14325 = !DILocation(line: 3319, column: 28, scope: !14315)
!14326 = !DILocation(line: 3319, column: 32, scope: !14315)
!14327 = !DILocation(line: 3319, column: 36, scope: !14315)
!14328 = !DILocation(line: 3319, column: 41, scope: !14315)
!14329 = !DILocation(line: 3319, column: 4, scope: !14315)
!14330 = !DILocation(line: 3320, column: 4, scope: !14315)
!14331 = !DILocalVariable(name: "u", scope: !14332, file: !3, line: 3324, type: !341)
!14332 = distinct !DILexicalBlock(scope: !14316, file: !3, line: 3323, column: 3)
!14333 = !DILocation(line: 3324, column: 10, scope: !14332)
!14334 = !DILocalVariable(name: "e", scope: !14332, file: !3, line: 3324, type: !563)
!14335 = !DILocation(line: 3324, column: 13, scope: !14332)
!14336 = !DILocalVariable(name: "vec", scope: !14332, file: !3, line: 3324, type: !563)
!14337 = !DILocation(line: 3324, column: 19, scope: !14332)
!14338 = !DILocalVariable(name: "nor", scope: !14332, file: !3, line: 3324, type: !563)
!14339 = !DILocation(line: 3324, column: 27, scope: !14332)
!14340 = !DILocation(line: 3325, column: 16, scope: !14332)
!14341 = !DILocation(line: 3325, column: 19, scope: !14332)
!14342 = !DILocation(line: 3325, column: 24, scope: !14332)
!14343 = !DILocation(line: 3325, column: 28, scope: !14332)
!14344 = !DILocation(line: 3325, column: 33, scope: !14332)
!14345 = !DILocation(line: 3325, column: 4, scope: !14332)
!14346 = !DILocation(line: 3326, column: 16, scope: !14332)
!14347 = !DILocation(line: 3326, column: 21, scope: !14332)
!14348 = !DILocation(line: 3326, column: 24, scope: !14332)
!14349 = !DILocation(line: 3326, column: 29, scope: !14332)
!14350 = !DILocation(line: 3326, column: 4, scope: !14332)
!14351 = !DILocation(line: 3327, column: 17, scope: !14332)
!14352 = !DILocation(line: 3327, column: 22, scope: !14332)
!14353 = !DILocation(line: 3327, column: 8, scope: !14332)
!14354 = !DILocation(line: 3327, column: 36, scope: !14332)
!14355 = !DILocation(line: 3327, column: 39, scope: !14332)
!14356 = !DILocation(line: 3327, column: 27, scope: !14332)
!14357 = !DILocation(line: 3327, column: 25, scope: !14332)
!14358 = !DILocation(line: 3327, column: 6, scope: !14332)
!14359 = !DILocation(line: 3329, column: 19, scope: !14332)
!14360 = !DILocation(line: 3329, column: 24, scope: !14332)
!14361 = !DILocation(line: 3329, column: 29, scope: !14332)
!14362 = !DILocation(line: 3329, column: 33, scope: !14332)
!14363 = !DILocation(line: 3329, column: 32, scope: !14332)
!14364 = !DILocation(line: 3329, column: 4, scope: !14332)
!14365 = !DILocation(line: 3330, column: 17, scope: !14332)
!14366 = !DILocation(line: 3330, column: 4, scope: !14332)
!14367 = !DILocation(line: 3332, column: 19, scope: !14332)
!14368 = !DILocation(line: 3332, column: 23, scope: !14332)
!14369 = !DILocation(line: 3332, column: 28, scope: !14332)
!14370 = !DILocation(line: 3332, column: 32, scope: !14332)
!14371 = !DILocation(line: 3332, column: 35, scope: !14332)
!14372 = !DILocation(line: 3332, column: 40, scope: !14332)
!14373 = !DILocation(line: 3332, column: 4, scope: !14332)
!14374 = !DILocation(line: 3333, column: 17, scope: !14332)
!14375 = !DILocation(line: 3333, column: 21, scope: !14332)
!14376 = !DILocation(line: 3333, column: 26, scope: !14332)
!14377 = !DILocation(line: 3333, column: 31, scope: !14332)
!14378 = !DILocation(line: 3333, column: 4, scope: !14332)
!14379 = !DILocation(line: 3334, column: 4, scope: !14332)
!14380 = !DILocalVariable(name: "p0", scope: !14381, file: !3, line: 3338, type: !563)
!14381 = distinct !DILexicalBlock(scope: !14316, file: !3, line: 3337, column: 3)
!14382 = !DILocation(line: 3338, column: 11, scope: !14381)
!14383 = !DILocalVariable(name: "e1", scope: !14381, file: !3, line: 3338, type: !563)
!14384 = !DILocation(line: 3338, column: 18, scope: !14381)
!14385 = !DILocalVariable(name: "e2", scope: !14381, file: !3, line: 3338, type: !563)
!14386 = !DILocation(line: 3338, column: 25, scope: !14381)
!14387 = !DILocalVariable(name: "nor", scope: !14381, file: !3, line: 3338, type: !563)
!14388 = !DILocation(line: 3338, column: 32, scope: !14381)
!14389 = !DILocation(line: 3340, column: 17, scope: !14381)
!14390 = !DILocation(line: 3340, column: 21, scope: !14381)
!14391 = !DILocation(line: 3340, column: 26, scope: !14381)
!14392 = !DILocation(line: 3340, column: 30, scope: !14381)
!14393 = !DILocation(line: 3340, column: 35, scope: !14381)
!14394 = !DILocation(line: 3340, column: 5, scope: !14381)
!14395 = !DILocation(line: 3341, column: 17, scope: !14381)
!14396 = !DILocation(line: 3341, column: 21, scope: !14381)
!14397 = !DILocation(line: 3341, column: 26, scope: !14381)
!14398 = !DILocation(line: 3341, column: 30, scope: !14381)
!14399 = !DILocation(line: 3341, column: 35, scope: !14381)
!14400 = !DILocation(line: 3341, column: 5, scope: !14381)
!14401 = !DILocation(line: 3342, column: 17, scope: !14381)
!14402 = !DILocation(line: 3342, column: 21, scope: !14381)
!14403 = !DILocation(line: 3342, column: 24, scope: !14381)
!14404 = !DILocation(line: 3342, column: 29, scope: !14381)
!14405 = !DILocation(line: 3342, column: 5, scope: !14381)
!14406 = !DILocation(line: 3344, column: 19, scope: !14381)
!14407 = !DILocation(line: 3344, column: 24, scope: !14381)
!14408 = !DILocation(line: 3344, column: 28, scope: !14381)
!14409 = !DILocation(line: 3344, column: 5, scope: !14381)
!14410 = !DILocation(line: 3345, column: 18, scope: !14381)
!14411 = !DILocation(line: 3345, column: 5, scope: !14381)
!14412 = !DILocation(line: 3347, column: 9, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14381, file: !3, line: 3347, column: 9)
!14414 = !DILocation(line: 3347, column: 14, scope: !14413)
!14415 = !DILocation(line: 3347, column: 22, scope: !14413)
!14416 = !DILocation(line: 3347, column: 9, scope: !14381)
!14417 = !DILocation(line: 3348, column: 16, scope: !14413)
!14418 = !DILocation(line: 3348, column: 6, scope: !14413)
!14419 = !DILocation(line: 3350, column: 20, scope: !14381)
!14420 = !DILocation(line: 3350, column: 24, scope: !14381)
!14421 = !DILocation(line: 3350, column: 29, scope: !14381)
!14422 = !DILocation(line: 3350, column: 33, scope: !14381)
!14423 = !DILocation(line: 3350, column: 38, scope: !14381)
!14424 = !DILocation(line: 3350, column: 43, scope: !14381)
!14425 = !DILocation(line: 3350, column: 5, scope: !14381)
!14426 = !DILocation(line: 3351, column: 18, scope: !14381)
!14427 = !DILocation(line: 3351, column: 22, scope: !14381)
!14428 = !DILocation(line: 3351, column: 26, scope: !14381)
!14429 = !DILocation(line: 3351, column: 31, scope: !14381)
!14430 = !DILocation(line: 3351, column: 5, scope: !14381)
!14431 = !DILocation(line: 3352, column: 18, scope: !14381)
!14432 = !DILocation(line: 3352, column: 22, scope: !14381)
!14433 = !DILocation(line: 3352, column: 26, scope: !14381)
!14434 = !DILocation(line: 3352, column: 31, scope: !14381)
!14435 = !DILocation(line: 3352, column: 5, scope: !14381)
!14436 = !DILocation(line: 3353, column: 4, scope: !14381)
!14437 = !DILocation(line: 3356, column: 1, scope: !14294)
!14438 = distinct !DISubprogram(name: "collision_point_distance_with_normal", scope: !3, file: !3, line: 3284, type: !14439, scopeLine: 3285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!14439 = !DISubroutineType(types: !14440)
!14440 = !{!341, !1796, !7413, !341, !712, !1796}
!14441 = !DILocalVariable(name: "p", arg: 1, scope: !14438, file: !3, line: 3284, type: !1796)
!14442 = !DILocation(line: 3284, column: 57, scope: !14438)
!14443 = !DILocalVariable(name: "pce", arg: 2, scope: !14438, file: !3, line: 3284, type: !7413)
!14444 = !DILocation(line: 3284, column: 89, scope: !14438)
!14445 = !DILocalVariable(name: "fac", arg: 3, scope: !14438, file: !3, line: 3284, type: !341)
!14446 = !DILocation(line: 3284, column: 100, scope: !14438)
!14447 = !DILocalVariable(name: "col", arg: 4, scope: !14438, file: !3, line: 3284, type: !712)
!14448 = !DILocation(line: 3284, column: 124, scope: !14438)
!14449 = !DILocalVariable(name: "nor", arg: 5, scope: !14438, file: !3, line: 3284, type: !1796)
!14450 = !DILocation(line: 3284, column: 136, scope: !14438)
!14451 = !DILocation(line: 3286, column: 6, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14438, file: !3, line: 3286, column: 6)
!14453 = !DILocation(line: 3286, column: 10, scope: !14452)
!14454 = !DILocation(line: 3286, column: 6, scope: !14438)
!14455 = !DILocation(line: 3287, column: 33, scope: !14452)
!14456 = !DILocation(line: 3287, column: 43, scope: !14452)
!14457 = !DILocation(line: 3287, column: 48, scope: !14452)
!14458 = !DILocation(line: 3287, column: 3, scope: !14452)
!14459 = !DILocation(line: 3289, column: 10, scope: !14438)
!14460 = !DILocation(line: 3289, column: 15, scope: !14438)
!14461 = !DILocation(line: 3289, column: 2, scope: !14438)
!14462 = !DILocation(line: 3292, column: 16, scope: !14463)
!14463 = distinct !DILexicalBlock(scope: !14464, file: !3, line: 3291, column: 3)
!14464 = distinct !DILexicalBlock(scope: !14438, file: !3, line: 3289, column: 20)
!14465 = !DILocation(line: 3292, column: 21, scope: !14463)
!14466 = !DILocation(line: 3292, column: 24, scope: !14463)
!14467 = !DILocation(line: 3292, column: 29, scope: !14463)
!14468 = !DILocation(line: 3292, column: 4, scope: !14463)
!14469 = !DILocation(line: 3293, column: 24, scope: !14463)
!14470 = !DILocation(line: 3293, column: 11, scope: !14463)
!14471 = !DILocation(line: 3293, column: 4, scope: !14463)
!14472 = !DILocalVariable(name: "u", scope: !14473, file: !3, line: 3297, type: !341)
!14473 = distinct !DILexicalBlock(scope: !14464, file: !3, line: 3296, column: 3)
!14474 = !DILocation(line: 3297, column: 10, scope: !14473)
!14475 = !DILocalVariable(name: "e", scope: !14473, file: !3, line: 3297, type: !563)
!14476 = !DILocation(line: 3297, column: 13, scope: !14473)
!14477 = !DILocalVariable(name: "vec", scope: !14473, file: !3, line: 3297, type: !563)
!14478 = !DILocation(line: 3297, column: 19, scope: !14473)
!14479 = !DILocation(line: 3298, column: 16, scope: !14473)
!14480 = !DILocation(line: 3298, column: 19, scope: !14473)
!14481 = !DILocation(line: 3298, column: 24, scope: !14473)
!14482 = !DILocation(line: 3298, column: 28, scope: !14473)
!14483 = !DILocation(line: 3298, column: 33, scope: !14473)
!14484 = !DILocation(line: 3298, column: 4, scope: !14473)
!14485 = !DILocation(line: 3299, column: 16, scope: !14473)
!14486 = !DILocation(line: 3299, column: 21, scope: !14473)
!14487 = !DILocation(line: 3299, column: 24, scope: !14473)
!14488 = !DILocation(line: 3299, column: 29, scope: !14473)
!14489 = !DILocation(line: 3299, column: 4, scope: !14473)
!14490 = !DILocation(line: 3300, column: 17, scope: !14473)
!14491 = !DILocation(line: 3300, column: 22, scope: !14473)
!14492 = !DILocation(line: 3300, column: 8, scope: !14473)
!14493 = !DILocation(line: 3300, column: 36, scope: !14473)
!14494 = !DILocation(line: 3300, column: 39, scope: !14473)
!14495 = !DILocation(line: 3300, column: 27, scope: !14473)
!14496 = !DILocation(line: 3300, column: 25, scope: !14473)
!14497 = !DILocation(line: 3300, column: 6, scope: !14473)
!14498 = !DILocation(line: 3302, column: 19, scope: !14473)
!14499 = !DILocation(line: 3302, column: 24, scope: !14473)
!14500 = !DILocation(line: 3302, column: 29, scope: !14473)
!14501 = !DILocation(line: 3302, column: 33, scope: !14473)
!14502 = !DILocation(line: 3302, column: 32, scope: !14473)
!14503 = !DILocation(line: 3302, column: 4, scope: !14473)
!14504 = !DILocation(line: 3303, column: 24, scope: !14473)
!14505 = !DILocation(line: 3303, column: 11, scope: !14473)
!14506 = !DILocation(line: 3303, column: 4, scope: !14473)
!14507 = !DILocation(line: 3306, column: 39, scope: !14464)
!14508 = !DILocation(line: 3306, column: 47, scope: !14464)
!14509 = !DILocation(line: 3306, column: 52, scope: !14464)
!14510 = !DILocation(line: 3306, column: 11, scope: !14464)
!14511 = !DILocation(line: 3306, column: 4, scope: !14464)
!14512 = !DILocation(line: 3308, column: 2, scope: !14438)
!14513 = !DILocation(line: 3309, column: 1, scope: !14438)
!14514 = distinct !DISubprogram(name: "saacos", scope: !14515, file: !14515, line: 66, type: !10263, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!14515 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!14516 = !DILocalVariable(name: "fac", arg: 1, scope: !14514, file: !14515, line: 66, type: !341)
!14517 = !DILocation(line: 66, column: 28, scope: !14514)
!14518 = !DILocation(line: 68, column: 11, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14514, file: !14515, line: 68, column: 11)
!14520 = !DILocation(line: 68, column: 11, scope: !14514)
!14521 = !DILocation(line: 68, column: 35, scope: !14519)
!14522 = !DILocation(line: 69, column: 11, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14519, file: !14515, line: 69, column: 11)
!14524 = !DILocation(line: 69, column: 11, scope: !14519)
!14525 = !DILocation(line: 69, column: 35, scope: !14523)
!14526 = !DILocation(line: 70, column: 48, scope: !14523)
!14527 = !DILocation(line: 70, column: 42, scope: !14523)
!14528 = !DILocation(line: 70, column: 35, scope: !14523)
!14529 = !DILocation(line: 71, column: 1, scope: !14514)
!14530 = distinct !DISubprogram(name: "sph_spring_delete", scope: !3, file: !3, line: 2466, type: !3390, scopeLine: 2467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!14531 = !DILocalVariable(name: "psys", arg: 1, scope: !14530, file: !3, line: 2466, type: !3144)
!14532 = !DILocation(line: 2466, column: 47, scope: !14530)
!14533 = !DILocalVariable(name: "j", arg: 2, scope: !14530, file: !3, line: 2466, type: !260)
!14534 = !DILocation(line: 2466, column: 57, scope: !14530)
!14535 = !DILocation(line: 2468, column: 6, scope: !14536)
!14536 = distinct !DILexicalBlock(scope: !14530, file: !3, line: 2468, column: 6)
!14537 = !DILocation(line: 2468, column: 11, scope: !14536)
!14538 = !DILocation(line: 2468, column: 17, scope: !14536)
!14539 = !DILocation(line: 2468, column: 34, scope: !14536)
!14540 = !DILocation(line: 2468, column: 8, scope: !14536)
!14541 = !DILocation(line: 2468, column: 6, scope: !14530)
!14542 = !DILocation(line: 2469, column: 3, scope: !14536)
!14543 = !DILocation(line: 2469, column: 9, scope: !14536)
!14544 = !DILocation(line: 2469, column: 23, scope: !14536)
!14545 = !DILocation(line: 2469, column: 28, scope: !14536)
!14546 = !DILocation(line: 2469, column: 34, scope: !14536)
!14547 = !DILocation(line: 2469, column: 48, scope: !14536)
!14548 = !DILocation(line: 2469, column: 54, scope: !14536)
!14549 = !DILocation(line: 2469, column: 71, scope: !14536)
!14550 = !DILocation(line: 2471, column: 2, scope: !14530)
!14551 = !DILocation(line: 2471, column: 8, scope: !14530)
!14552 = !DILocation(line: 2471, column: 24, scope: !14530)
!14553 = !DILocation(line: 2473, column: 6, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14530, file: !3, line: 2473, column: 6)
!14555 = !DILocation(line: 2473, column: 12, scope: !14554)
!14556 = !DILocation(line: 2473, column: 31, scope: !14554)
!14557 = !DILocation(line: 2473, column: 37, scope: !14554)
!14558 = !DILocation(line: 2473, column: 55, scope: !14554)
!14559 = !DILocation(line: 2473, column: 29, scope: !14554)
!14560 = !DILocation(line: 2473, column: 58, scope: !14554)
!14561 = !DILocation(line: 2473, column: 61, scope: !14554)
!14562 = !DILocation(line: 2473, column: 67, scope: !14554)
!14563 = !DILocation(line: 2473, column: 86, scope: !14554)
!14564 = !DILocation(line: 2473, column: 6, scope: !14530)
!14565 = !DILocation(line: 2474, column: 3, scope: !14566)
!14566 = distinct !DILexicalBlock(scope: !14554, file: !3, line: 2473, column: 121)
!14567 = !DILocation(line: 2474, column: 9, scope: !14566)
!14568 = !DILocation(line: 2474, column: 28, scope: !14566)
!14569 = !DILocation(line: 2475, column: 42, scope: !14566)
!14570 = !DILocation(line: 2475, column: 25, scope: !14566)
!14571 = !DILocation(line: 2475, column: 3, scope: !14566)
!14572 = !DILocation(line: 2475, column: 9, scope: !14566)
!14573 = !DILocation(line: 2475, column: 23, scope: !14566)
!14574 = !DILocation(line: 2476, column: 2, scope: !14566)
!14575 = !DILocation(line: 2477, column: 1, scope: !14530)
!14576 = distinct !DISubprogram(name: "interpf", scope: !14515, file: !14515, line: 106, type: !14577, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!14577 = !DISubroutineType(types: !14578)
!14578 = !{!341, !341, !341, !341}
!14579 = !DILocalVariable(name: "target", arg: 1, scope: !14576, file: !14515, line: 106, type: !341)
!14580 = !DILocation(line: 106, column: 29, scope: !14576)
!14581 = !DILocalVariable(name: "origin", arg: 2, scope: !14576, file: !14515, line: 106, type: !341)
!14582 = !DILocation(line: 106, column: 43, scope: !14576)
!14583 = !DILocalVariable(name: "fac", arg: 3, scope: !14576, file: !14515, line: 106, type: !341)
!14584 = !DILocation(line: 106, column: 57, scope: !14576)
!14585 = !DILocation(line: 108, column: 10, scope: !14576)
!14586 = !DILocation(line: 108, column: 16, scope: !14576)
!14587 = !DILocation(line: 108, column: 14, scope: !14576)
!14588 = !DILocation(line: 108, column: 34, scope: !14576)
!14589 = !DILocation(line: 108, column: 32, scope: !14576)
!14590 = !DILocation(line: 108, column: 41, scope: !14576)
!14591 = !DILocation(line: 108, column: 39, scope: !14576)
!14592 = !DILocation(line: 108, column: 24, scope: !14576)
!14593 = !DILocation(line: 108, column: 2, scope: !14576)
!14594 = distinct !DISubprogram(name: "do_hair_dynamics", scope: !3, file: !3, line: 3999, type: !5676, scopeLine: 4000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!14595 = !DILocalVariable(name: "sim", arg: 1, scope: !14594, file: !3, line: 3999, type: !3218)
!14596 = !DILocation(line: 3999, column: 54, scope: !14594)
!14597 = !DILocalVariable(name: "psys", scope: !14594, file: !3, line: 4001, type: !3144)
!14598 = !DILocation(line: 4001, column: 18, scope: !14594)
!14599 = !DILocation(line: 4001, column: 25, scope: !14594)
!14600 = !DILocation(line: 4001, column: 30, scope: !14594)
!14601 = !DILocalVariable(name: "dm", scope: !14594, file: !3, line: 4002, type: !2671)
!14602 = !DILocation(line: 4002, column: 15, scope: !14594)
!14603 = !DILocation(line: 4002, column: 20, scope: !14594)
!14604 = !DILocation(line: 4002, column: 26, scope: !14594)
!14605 = !DILocalVariable(name: "mvert", scope: !14594, file: !3, line: 4003, type: !669)
!14606 = !DILocation(line: 4003, column: 9, scope: !14594)
!14607 = !DILocalVariable(name: "medge", scope: !14594, file: !3, line: 4004, type: !14608)
!14608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14609, size: 64)
!14609 = !DIDerivedType(tag: DW_TAG_typedef, name: "MEdge", file: !391, line: 52, baseType: !571)
!14610 = !DILocation(line: 4004, column: 9, scope: !14594)
!14611 = !DILocalVariable(name: "dvert", scope: !14594, file: !3, line: 4005, type: !14612)
!14612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14613, size: 64)
!14613 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !391, line: 63, baseType: !580)
!14614 = !DILocation(line: 4005, column: 15, scope: !14594)
!14615 = !DILocalVariable(name: "key", scope: !14594, file: !3, line: 4006, type: !1978)
!14616 = !DILocation(line: 4006, column: 11, scope: !14594)
!14617 = !DILocalVariable(name: "pa", scope: !14594, file: !3, line: 4007, type: !2461)
!14618 = !DILocation(line: 4007, column: 2, scope: !14594)
!14619 = !DILocalVariable(name: "p", scope: !14594, file: !3, line: 4007, type: !260)
!14620 = !DILocalVariable(name: "totpoint", scope: !14594, file: !3, line: 4008, type: !260)
!14621 = !DILocation(line: 4008, column: 6, scope: !14594)
!14622 = !DILocalVariable(name: "totedge", scope: !14594, file: !3, line: 4009, type: !260)
!14623 = !DILocation(line: 4009, column: 6, scope: !14594)
!14624 = !DILocalVariable(name: "k", scope: !14594, file: !3, line: 4010, type: !260)
!14625 = !DILocation(line: 4010, column: 6, scope: !14594)
!14626 = !DILocalVariable(name: "hairmat", scope: !14594, file: !3, line: 4011, type: !829)
!14627 = !DILocation(line: 4011, column: 8, scope: !14594)
!14628 = !DILocalVariable(name: "deformedVerts", scope: !14594, file: !3, line: 4012, type: !2860)
!14629 = !DILocation(line: 4012, column: 10, scope: !14594)
!14630 = !DILocation(line: 4014, column: 7, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14594, file: !3, line: 4014, column: 6)
!14632 = !DILocation(line: 4014, column: 13, scope: !14631)
!14633 = !DILocation(line: 4014, column: 6, scope: !14594)
!14634 = !DILocation(line: 4015, column: 36, scope: !14635)
!14635 = distinct !DILexicalBlock(scope: !14631, file: !3, line: 4014, column: 19)
!14636 = !DILocation(line: 4015, column: 16, scope: !14635)
!14637 = !DILocation(line: 4015, column: 3, scope: !14635)
!14638 = !DILocation(line: 4015, column: 9, scope: !14635)
!14639 = !DILocation(line: 4015, column: 14, scope: !14635)
!14640 = !DILocation(line: 4016, column: 3, scope: !14635)
!14641 = !DILocation(line: 4016, column: 9, scope: !14635)
!14642 = !DILocation(line: 4016, column: 15, scope: !14635)
!14643 = !DILocation(line: 4016, column: 26, scope: !14635)
!14644 = !DILocation(line: 4016, column: 37, scope: !14635)
!14645 = !DILocation(line: 4017, column: 3, scope: !14635)
!14646 = !DILocation(line: 4017, column: 9, scope: !14635)
!14647 = !DILocation(line: 4017, column: 15, scope: !14635)
!14648 = !DILocation(line: 4017, column: 26, scope: !14635)
!14649 = !DILocation(line: 4017, column: 38, scope: !14635)
!14650 = !DILocation(line: 4018, column: 3, scope: !14635)
!14651 = !DILocation(line: 4018, column: 9, scope: !14635)
!14652 = !DILocation(line: 4018, column: 15, scope: !14635)
!14653 = !DILocation(line: 4018, column: 26, scope: !14635)
!14654 = !DILocation(line: 4018, column: 32, scope: !14635)
!14655 = !DILocation(line: 4019, column: 3, scope: !14635)
!14656 = !DILocation(line: 4019, column: 9, scope: !14635)
!14657 = !DILocation(line: 4019, column: 15, scope: !14635)
!14658 = !DILocation(line: 4019, column: 27, scope: !14635)
!14659 = !DILocation(line: 4019, column: 33, scope: !14635)
!14660 = !DILocation(line: 4020, column: 2, scope: !14635)
!14661 = !DILocation(line: 4023, column: 2, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14594, file: !3, line: 4023, column: 2)
!14663 = !DILocation(line: 4023, column: 2, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14662, file: !3, line: 4023, column: 2)
!14665 = !DILocation(line: 4024, column: 15, scope: !14664)
!14666 = !DILocation(line: 4024, column: 19, scope: !14664)
!14667 = !DILocation(line: 4024, column: 12, scope: !14664)
!14668 = !DILocation(line: 4024, column: 3, scope: !14664)
!14669 = distinct !{!14669, !14661, !14670}
!14670 = !DILocation(line: 4024, column: 19, scope: !14662)
!14671 = !DILocation(line: 4026, column: 12, scope: !14594)
!14672 = !DILocation(line: 4026, column: 10, scope: !14594)
!14673 = !DILocation(line: 4027, column: 14, scope: !14594)
!14674 = !DILocation(line: 4027, column: 20, scope: !14594)
!14675 = !DILocation(line: 4027, column: 11, scope: !14594)
!14676 = !DILocation(line: 4029, column: 6, scope: !14677)
!14677 = distinct !DILexicalBlock(scope: !14594, file: !3, line: 4029, column: 6)
!14678 = !DILocation(line: 4029, column: 9, scope: !14677)
!14679 = !DILocation(line: 4029, column: 13, scope: !14677)
!14680 = !DILocation(line: 4029, column: 25, scope: !14677)
!14681 = !DILocation(line: 4029, column: 29, scope: !14677)
!14682 = !DILocation(line: 4029, column: 41, scope: !14677)
!14683 = !DILocation(line: 4029, column: 22, scope: !14677)
!14684 = !DILocation(line: 4029, column: 45, scope: !14677)
!14685 = !DILocation(line: 4029, column: 48, scope: !14677)
!14686 = !DILocation(line: 4029, column: 59, scope: !14677)
!14687 = !DILocation(line: 4029, column: 63, scope: !14677)
!14688 = !DILocation(line: 4029, column: 75, scope: !14677)
!14689 = !DILocation(line: 4029, column: 56, scope: !14677)
!14690 = !DILocation(line: 4029, column: 6, scope: !14594)
!14691 = !DILocation(line: 4030, column: 3, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14677, file: !3, line: 4029, column: 81)
!14693 = !DILocation(line: 4030, column: 7, scope: !14692)
!14694 = !DILocation(line: 4030, column: 15, scope: !14692)
!14695 = !DILocation(line: 4031, column: 8, scope: !14692)
!14696 = !DILocation(line: 4031, column: 14, scope: !14692)
!14697 = !DILocation(line: 4031, column: 25, scope: !14692)
!14698 = !DILocation(line: 4031, column: 6, scope: !14692)
!14699 = !DILocation(line: 4032, column: 2, scope: !14692)
!14700 = !DILocation(line: 4034, column: 7, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14594, file: !3, line: 4034, column: 6)
!14702 = !DILocation(line: 4034, column: 6, scope: !14594)
!14703 = !DILocation(line: 4035, column: 36, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !14701, file: !3, line: 4034, column: 11)
!14705 = !DILocation(line: 4035, column: 46, scope: !14704)
!14706 = !DILocation(line: 4035, column: 27, scope: !14704)
!14707 = !DILocation(line: 4035, column: 8, scope: !14704)
!14708 = !DILocation(line: 4035, column: 14, scope: !14704)
!14709 = !DILocation(line: 4035, column: 25, scope: !14704)
!14710 = !DILocation(line: 4035, column: 6, scope: !14704)
!14711 = !DILocation(line: 4036, column: 21, scope: !14704)
!14712 = !DILocation(line: 4036, column: 3, scope: !14704)
!14713 = !DILocation(line: 4037, column: 2, scope: !14704)
!14714 = !DILocation(line: 4039, column: 25, scope: !14594)
!14715 = !DILocation(line: 4039, column: 10, scope: !14594)
!14716 = !DILocation(line: 4039, column: 8, scope: !14594)
!14717 = !DILocation(line: 4040, column: 25, scope: !14594)
!14718 = !DILocation(line: 4040, column: 10, scope: !14594)
!14719 = !DILocation(line: 4040, column: 8, scope: !14594)
!14720 = !DILocation(line: 4041, column: 33, scope: !14594)
!14721 = !DILocation(line: 4041, column: 10, scope: !14594)
!14722 = !DILocation(line: 4041, column: 8, scope: !14594)
!14723 = !DILocation(line: 4043, column: 2, scope: !14594)
!14724 = !DILocation(line: 4043, column: 8, scope: !14594)
!14725 = !DILocation(line: 4043, column: 14, scope: !14594)
!14726 = !DILocation(line: 4043, column: 25, scope: !14594)
!14727 = !DILocation(line: 4043, column: 37, scope: !14594)
!14728 = !DILocation(line: 4046, column: 2, scope: !14594)
!14729 = !DILocation(line: 4046, column: 8, scope: !14594)
!14730 = !DILocation(line: 4046, column: 19, scope: !14594)
!14731 = !DILocation(line: 4046, column: 30, scope: !14594)
!14732 = !DILocation(line: 4047, column: 2, scope: !14733)
!14733 = distinct !DILexicalBlock(scope: !14594, file: !3, line: 4047, column: 2)
!14734 = !DILocation(line: 4047, column: 2, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14733, file: !3, line: 4047, column: 2)
!14736 = !DILocation(line: 4048, column: 7, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14738, file: !3, line: 4048, column: 7)
!14738 = distinct !DILexicalBlock(scope: !14735, file: !3, line: 4047, column: 17)
!14739 = !DILocation(line: 4048, column: 7, scope: !14738)
!14740 = !DILocation(line: 4049, column: 22, scope: !14737)
!14741 = !DILocation(line: 4049, column: 24, scope: !14737)
!14742 = !DILocation(line: 4049, column: 29, scope: !14737)
!14743 = !DILocation(line: 4049, column: 43, scope: !14737)
!14744 = !DILocation(line: 4049, column: 45, scope: !14737)
!14745 = !DILocation(line: 4049, column: 50, scope: !14737)
!14746 = !DILocation(line: 4049, column: 40, scope: !14737)
!14747 = !DILocation(line: 4049, column: 57, scope: !14737)
!14748 = !DILocation(line: 4049, column: 4, scope: !14737)
!14749 = !DILocation(line: 4049, column: 8, scope: !14737)
!14750 = !DILocation(line: 4049, column: 19, scope: !14737)
!14751 = !DILocation(line: 4051, column: 27, scope: !14738)
!14752 = !DILocation(line: 4051, column: 32, scope: !14738)
!14753 = !DILocation(line: 4051, column: 36, scope: !14738)
!14754 = !DILocation(line: 4051, column: 41, scope: !14738)
!14755 = !DILocation(line: 4051, column: 47, scope: !14738)
!14756 = !DILocation(line: 4051, column: 51, scope: !14738)
!14757 = !DILocation(line: 4051, column: 57, scope: !14738)
!14758 = !DILocation(line: 4051, column: 63, scope: !14738)
!14759 = !DILocation(line: 4051, column: 69, scope: !14738)
!14760 = !DILocation(line: 4051, column: 73, scope: !14738)
!14761 = !DILocation(line: 4051, column: 3, scope: !14738)
!14762 = !DILocation(line: 4053, column: 9, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14738, file: !3, line: 4053, column: 3)
!14764 = !DILocation(line: 4053, column: 17, scope: !14763)
!14765 = !DILocation(line: 4053, column: 21, scope: !14763)
!14766 = !DILocation(line: 4053, column: 16, scope: !14763)
!14767 = !DILocation(line: 4053, column: 8, scope: !14763)
!14768 = !DILocation(line: 4053, column: 27, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14763, file: !3, line: 4053, column: 3)
!14770 = !DILocation(line: 4053, column: 29, scope: !14769)
!14771 = !DILocation(line: 4053, column: 33, scope: !14769)
!14772 = !DILocation(line: 4053, column: 28, scope: !14769)
!14773 = !DILocation(line: 4053, column: 3, scope: !14763)
!14774 = !DILocation(line: 4056, column: 8, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14776, file: !3, line: 4056, column: 8)
!14776 = distinct !DILexicalBlock(scope: !14769, file: !3, line: 4053, column: 52)
!14777 = !DILocation(line: 4056, column: 9, scope: !14775)
!14778 = !DILocation(line: 4056, column: 8, scope: !14776)
!14779 = !DILocalVariable(name: "temp", scope: !14780, file: !3, line: 4057, type: !563)
!14780 = distinct !DILexicalBlock(scope: !14775, file: !3, line: 4056, column: 14)
!14781 = !DILocation(line: 4057, column: 11, scope: !14780)
!14782 = !DILocation(line: 4058, column: 17, scope: !14780)
!14783 = !DILocation(line: 4058, column: 23, scope: !14780)
!14784 = !DILocation(line: 4058, column: 28, scope: !14780)
!14785 = !DILocation(line: 4058, column: 33, scope: !14780)
!14786 = !DILocation(line: 4058, column: 36, scope: !14780)
!14787 = !DILocation(line: 4058, column: 41, scope: !14780)
!14788 = !DILocation(line: 4058, column: 32, scope: !14780)
!14789 = !DILocation(line: 4058, column: 5, scope: !14780)
!14790 = !DILocation(line: 4059, column: 16, scope: !14780)
!14791 = !DILocation(line: 4059, column: 23, scope: !14780)
!14792 = !DILocation(line: 4059, column: 27, scope: !14780)
!14793 = !DILocation(line: 4059, column: 32, scope: !14780)
!14794 = !DILocation(line: 4059, column: 5, scope: !14780)
!14795 = !DILocation(line: 4060, column: 17, scope: !14780)
!14796 = !DILocation(line: 4060, column: 24, scope: !14780)
!14797 = !DILocation(line: 4060, column: 28, scope: !14780)
!14798 = !DILocation(line: 4060, column: 35, scope: !14780)
!14799 = !DILocation(line: 4060, column: 39, scope: !14780)
!14800 = !DILocation(line: 4060, column: 5, scope: !14780)
!14801 = !DILocation(line: 4061, column: 15, scope: !14780)
!14802 = !DILocation(line: 4061, column: 24, scope: !14780)
!14803 = !DILocation(line: 4061, column: 31, scope: !14780)
!14804 = !DILocation(line: 4061, column: 5, scope: !14780)
!14805 = !DILocation(line: 4062, column: 10, scope: !14780)
!14806 = !DILocation(line: 4064, column: 17, scope: !14780)
!14807 = !DILocation(line: 4064, column: 21, scope: !14780)
!14808 = !DILocation(line: 4064, column: 32, scope: !14780)
!14809 = !DILocation(line: 4064, column: 5, scope: !14780)
!14810 = !DILocation(line: 4064, column: 12, scope: !14780)
!14811 = !DILocation(line: 4064, column: 15, scope: !14780)
!14812 = !DILocation(line: 4065, column: 17, scope: !14780)
!14813 = !DILocation(line: 4065, column: 21, scope: !14780)
!14814 = !DILocation(line: 4065, column: 5, scope: !14780)
!14815 = !DILocation(line: 4065, column: 12, scope: !14780)
!14816 = !DILocation(line: 4065, column: 15, scope: !14780)
!14817 = !DILocation(line: 4066, column: 10, scope: !14780)
!14818 = !DILocation(line: 4068, column: 9, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14780, file: !3, line: 4068, column: 9)
!14820 = !DILocation(line: 4068, column: 9, scope: !14780)
!14821 = !DILocation(line: 4069, column: 11, scope: !14822)
!14822 = distinct !DILexicalBlock(scope: !14823, file: !3, line: 4069, column: 10)
!14823 = distinct !DILexicalBlock(scope: !14819, file: !3, line: 4068, column: 16)
!14824 = !DILocation(line: 4069, column: 18, scope: !14822)
!14825 = !DILocation(line: 4069, column: 10, scope: !14823)
!14826 = !DILocation(line: 4070, column: 19, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14822, file: !3, line: 4069, column: 29)
!14828 = !DILocation(line: 4070, column: 7, scope: !14827)
!14829 = !DILocation(line: 4070, column: 14, scope: !14827)
!14830 = !DILocation(line: 4070, column: 17, scope: !14827)
!14831 = !DILocation(line: 4071, column: 7, scope: !14827)
!14832 = !DILocation(line: 4071, column: 14, scope: !14827)
!14833 = !DILocation(line: 4071, column: 24, scope: !14827)
!14834 = !DILocation(line: 4072, column: 6, scope: !14827)
!14835 = !DILocation(line: 4074, column: 6, scope: !14823)
!14836 = !DILocation(line: 4074, column: 13, scope: !14823)
!14837 = !DILocation(line: 4074, column: 17, scope: !14823)
!14838 = !DILocation(line: 4074, column: 24, scope: !14823)
!14839 = !DILocation(line: 4075, column: 11, scope: !14823)
!14840 = !DILocation(line: 4076, column: 5, scope: !14823)
!14841 = !DILocation(line: 4077, column: 4, scope: !14780)
!14842 = !DILocation(line: 4079, column: 15, scope: !14776)
!14843 = !DILocation(line: 4079, column: 22, scope: !14776)
!14844 = !DILocation(line: 4079, column: 26, scope: !14776)
!14845 = !DILocation(line: 4079, column: 31, scope: !14776)
!14846 = !DILocation(line: 4079, column: 4, scope: !14776)
!14847 = !DILocation(line: 4080, column: 14, scope: !14776)
!14848 = !DILocation(line: 4080, column: 23, scope: !14776)
!14849 = !DILocation(line: 4080, column: 30, scope: !14776)
!14850 = !DILocation(line: 4080, column: 4, scope: !14776)
!14851 = !DILocation(line: 4081, column: 9, scope: !14776)
!14852 = !DILocation(line: 4083, column: 8, scope: !14853)
!14853 = distinct !DILexicalBlock(scope: !14776, file: !3, line: 4083, column: 8)
!14854 = !DILocation(line: 4083, column: 8, scope: !14776)
!14855 = !DILocation(line: 4084, column: 17, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14853, file: !3, line: 4083, column: 11)
!14857 = !DILocation(line: 4084, column: 21, scope: !14856)
!14858 = !DILocation(line: 4084, column: 34, scope: !14856)
!14859 = !DILocation(line: 4084, column: 32, scope: !14856)
!14860 = !DILocation(line: 4084, column: 36, scope: !14856)
!14861 = !DILocation(line: 4084, column: 5, scope: !14856)
!14862 = !DILocation(line: 4084, column: 12, scope: !14856)
!14863 = !DILocation(line: 4084, column: 15, scope: !14856)
!14864 = !DILocation(line: 4085, column: 17, scope: !14856)
!14865 = !DILocation(line: 4085, column: 21, scope: !14856)
!14866 = !DILocation(line: 4085, column: 34, scope: !14856)
!14867 = !DILocation(line: 4085, column: 32, scope: !14856)
!14868 = !DILocation(line: 4085, column: 5, scope: !14856)
!14869 = !DILocation(line: 4085, column: 12, scope: !14856)
!14870 = !DILocation(line: 4085, column: 15, scope: !14856)
!14871 = !DILocation(line: 4086, column: 10, scope: !14856)
!14872 = !DILocation(line: 4087, column: 4, scope: !14856)
!14873 = !DILocation(line: 4089, column: 8, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14776, file: !3, line: 4089, column: 8)
!14875 = !DILocation(line: 4089, column: 8, scope: !14776)
!14876 = !DILocation(line: 4090, column: 10, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14878, file: !3, line: 4090, column: 9)
!14878 = distinct !DILexicalBlock(scope: !14874, file: !3, line: 4089, column: 15)
!14879 = !DILocation(line: 4090, column: 17, scope: !14877)
!14880 = !DILocation(line: 4090, column: 9, scope: !14878)
!14881 = !DILocation(line: 4091, column: 18, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14877, file: !3, line: 4090, column: 28)
!14883 = !DILocation(line: 4091, column: 6, scope: !14882)
!14884 = !DILocation(line: 4091, column: 13, scope: !14882)
!14885 = !DILocation(line: 4091, column: 16, scope: !14882)
!14886 = !DILocation(line: 4092, column: 6, scope: !14882)
!14887 = !DILocation(line: 4092, column: 13, scope: !14882)
!14888 = !DILocation(line: 4092, column: 23, scope: !14882)
!14889 = !DILocation(line: 4093, column: 5, scope: !14882)
!14890 = !DILocation(line: 4095, column: 25, scope: !14878)
!14891 = !DILocation(line: 4095, column: 30, scope: !14878)
!14892 = !DILocation(line: 4095, column: 5, scope: !14878)
!14893 = !DILocation(line: 4095, column: 12, scope: !14878)
!14894 = !DILocation(line: 4095, column: 16, scope: !14878)
!14895 = !DILocation(line: 4095, column: 23, scope: !14878)
!14896 = !DILocation(line: 4096, column: 10, scope: !14878)
!14897 = !DILocation(line: 4097, column: 4, scope: !14878)
!14898 = !DILocation(line: 4098, column: 3, scope: !14776)
!14899 = !DILocation(line: 4053, column: 42, scope: !14769)
!14900 = !DILocation(line: 4053, column: 48, scope: !14769)
!14901 = !DILocation(line: 4053, column: 3, scope: !14769)
!14902 = distinct !{!14902, !14773, !14903}
!14903 = !DILocation(line: 4098, column: 3, scope: !14763)
!14904 = !DILocation(line: 4099, column: 2, scope: !14738)
!14905 = distinct !{!14905, !14732, !14906}
!14906 = !DILocation(line: 4099, column: 2, scope: !14733)
!14907 = !DILocation(line: 4101, column: 6, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14594, file: !3, line: 4101, column: 6)
!14909 = !DILocation(line: 4101, column: 12, scope: !14908)
!14910 = !DILocation(line: 4101, column: 6, scope: !14594)
!14911 = !DILocation(line: 4102, column: 3, scope: !14908)
!14912 = !DILocation(line: 4102, column: 9, scope: !14908)
!14913 = !DILocation(line: 4102, column: 22, scope: !14908)
!14914 = !DILocation(line: 4102, column: 30, scope: !14908)
!14915 = !DILocation(line: 4102, column: 36, scope: !14908)
!14916 = !DILocation(line: 4104, column: 28, scope: !14594)
!14917 = !DILocation(line: 4104, column: 34, scope: !14594)
!14918 = !DILocation(line: 4104, column: 2, scope: !14594)
!14919 = !DILocation(line: 4104, column: 8, scope: !14594)
!14920 = !DILocation(line: 4104, column: 14, scope: !14594)
!14921 = !DILocation(line: 4104, column: 26, scope: !14594)
!14922 = !DILocation(line: 4105, column: 44, scope: !14594)
!14923 = !DILocation(line: 4105, column: 50, scope: !14594)
!14924 = !DILocation(line: 4105, column: 56, scope: !14594)
!14925 = !DILocation(line: 4105, column: 2, scope: !14594)
!14926 = !DILocation(line: 4105, column: 8, scope: !14594)
!14927 = !DILocation(line: 4105, column: 14, scope: !14594)
!14928 = !DILocation(line: 4105, column: 25, scope: !14594)
!14929 = !DILocation(line: 4105, column: 42, scope: !14594)
!14930 = !DILocation(line: 4107, column: 18, scope: !14594)
!14931 = !DILocation(line: 4107, column: 55, scope: !14594)
!14932 = !DILocation(line: 4107, column: 59, scope: !14594)
!14933 = !DILocation(line: 4107, column: 71, scope: !14594)
!14934 = !DILocation(line: 4107, column: 53, scope: !14594)
!14935 = !DILocation(line: 4107, column: 16, scope: !14594)
!14936 = !DILocation(line: 4108, column: 32, scope: !14594)
!14937 = !DILocation(line: 4108, column: 22, scope: !14594)
!14938 = !DILocation(line: 4108, column: 2, scope: !14594)
!14939 = !DILocation(line: 4108, column: 8, scope: !14594)
!14940 = !DILocation(line: 4108, column: 20, scope: !14594)
!14941 = !DILocation(line: 4109, column: 2, scope: !14594)
!14942 = !DILocation(line: 4109, column: 8, scope: !14594)
!14943 = !DILocation(line: 4109, column: 21, scope: !14594)
!14944 = !DILocation(line: 4109, column: 32, scope: !14594)
!14945 = !DILocation(line: 4109, column: 38, scope: !14594)
!14946 = !DILocation(line: 4109, column: 51, scope: !14594)
!14947 = !DILocation(line: 4111, column: 19, scope: !14594)
!14948 = !DILocation(line: 4111, column: 25, scope: !14594)
!14949 = !DILocation(line: 4111, column: 31, scope: !14594)
!14950 = !DILocation(line: 4111, column: 36, scope: !14594)
!14951 = !DILocation(line: 4111, column: 43, scope: !14594)
!14952 = !DILocation(line: 4111, column: 48, scope: !14594)
!14953 = !DILocation(line: 4111, column: 52, scope: !14594)
!14954 = !DILocation(line: 4111, column: 56, scope: !14594)
!14955 = !DILocation(line: 4111, column: 2, scope: !14594)
!14956 = !DILocation(line: 4113, column: 25, scope: !14594)
!14957 = !DILocation(line: 4113, column: 31, scope: !14594)
!14958 = !DILocation(line: 4113, column: 44, scope: !14594)
!14959 = !DILocation(line: 4113, column: 2, scope: !14594)
!14960 = !DILocation(line: 4115, column: 2, scope: !14594)
!14961 = !DILocation(line: 4115, column: 12, scope: !14594)
!14962 = !DILocation(line: 4117, column: 2, scope: !14594)
!14963 = !DILocation(line: 4117, column: 8, scope: !14594)
!14964 = !DILocation(line: 4117, column: 14, scope: !14594)
!14965 = !DILocation(line: 4117, column: 25, scope: !14594)
!14966 = !DILocation(line: 4117, column: 42, scope: !14594)
!14967 = !DILocation(line: 4118, column: 1, scope: !14594)
!14968 = distinct !DISubprogram(name: "realloc_particles", scope: !3, file: !3, line: 197, type: !9217, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!14969 = !DILocalVariable(name: "sim", arg: 1, scope: !14968, file: !3, line: 197, type: !3218)
!14970 = !DILocation(line: 197, column: 55, scope: !14968)
!14971 = !DILocalVariable(name: "new_totpart", arg: 2, scope: !14968, file: !3, line: 197, type: !260)
!14972 = !DILocation(line: 197, column: 64, scope: !14968)
!14973 = !DILocalVariable(name: "psys", scope: !14968, file: !3, line: 199, type: !3144)
!14974 = !DILocation(line: 199, column: 18, scope: !14968)
!14975 = !DILocation(line: 199, column: 25, scope: !14968)
!14976 = !DILocation(line: 199, column: 30, scope: !14968)
!14977 = !DILocalVariable(name: "part", scope: !14968, file: !3, line: 200, type: !2192)
!14978 = !DILocation(line: 200, column: 20, scope: !14968)
!14979 = !DILocation(line: 200, column: 27, scope: !14968)
!14980 = !DILocation(line: 200, column: 33, scope: !14968)
!14981 = !DILocalVariable(name: "newpars", scope: !14968, file: !3, line: 201, type: !2461)
!14982 = !DILocation(line: 201, column: 16, scope: !14968)
!14983 = !DILocalVariable(name: "newboids", scope: !14968, file: !3, line: 202, type: !1990)
!14984 = !DILocation(line: 202, column: 16, scope: !14968)
!14985 = !DILocalVariable(name: "pa", scope: !14968, file: !3, line: 203, type: !2461)
!14986 = !DILocation(line: 203, column: 2, scope: !14968)
!14987 = !DILocalVariable(name: "p", scope: !14968, file: !3, line: 203, type: !260)
!14988 = !DILocalVariable(name: "totpart", scope: !14968, file: !3, line: 204, type: !260)
!14989 = !DILocation(line: 204, column: 6, scope: !14968)
!14990 = !DILocalVariable(name: "totsaved", scope: !14968, file: !3, line: 204, type: !260)
!14991 = !DILocation(line: 204, column: 15, scope: !14968)
!14992 = !DILocation(line: 206, column: 6, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14968, file: !3, line: 206, column: 6)
!14994 = !DILocation(line: 206, column: 17, scope: !14993)
!14995 = !DILocation(line: 206, column: 6, scope: !14968)
!14996 = !DILocation(line: 207, column: 8, scope: !14997)
!14997 = distinct !DILexicalBlock(scope: !14998, file: !3, line: 207, column: 7)
!14998 = distinct !DILexicalBlock(scope: !14993, file: !3, line: 206, column: 21)
!14999 = !DILocation(line: 207, column: 14, scope: !14997)
!15000 = !DILocation(line: 207, column: 20, scope: !14997)
!15001 = !DILocation(line: 207, column: 40, scope: !14997)
!15002 = !DILocation(line: 207, column: 44, scope: !14997)
!15003 = !DILocation(line: 207, column: 50, scope: !14997)
!15004 = !DILocation(line: 207, column: 55, scope: !14997)
!15005 = !DILocation(line: 207, column: 7, scope: !14998)
!15006 = !DILocation(line: 208, column: 13, scope: !15007)
!15007 = distinct !DILexicalBlock(scope: !14997, file: !3, line: 207, column: 75)
!15008 = !DILocation(line: 208, column: 19, scope: !15007)
!15009 = !DILocation(line: 208, column: 11, scope: !15007)
!15010 = !DILocation(line: 209, column: 13, scope: !15007)
!15011 = !DILocation(line: 209, column: 21, scope: !15007)
!15012 = !DILocation(line: 209, column: 20, scope: !15007)
!15013 = !DILocation(line: 209, column: 11, scope: !15007)
!15014 = !DILocation(line: 210, column: 3, scope: !15007)
!15015 = !DILocation(line: 212, column: 12, scope: !14997)
!15016 = !DILocation(line: 212, column: 18, scope: !14997)
!15017 = !DILocation(line: 212, column: 11, scope: !14997)
!15018 = !DILocation(line: 213, column: 2, scope: !14998)
!15019 = !DILocation(line: 215, column: 11, scope: !14993)
!15020 = !DILocation(line: 215, column: 10, scope: !14993)
!15021 = !DILocation(line: 217, column: 6, scope: !15022)
!15022 = distinct !DILexicalBlock(scope: !14968, file: !3, line: 217, column: 6)
!15023 = !DILocation(line: 217, column: 17, scope: !15022)
!15024 = !DILocation(line: 217, column: 23, scope: !15022)
!15025 = !DILocation(line: 217, column: 14, scope: !15022)
!15026 = !DILocation(line: 217, column: 6, scope: !14968)
!15027 = !DILocation(line: 218, column: 7, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15029, file: !3, line: 218, column: 7)
!15029 = distinct !DILexicalBlock(scope: !15022, file: !3, line: 217, column: 32)
!15030 = !DILocation(line: 218, column: 13, scope: !15028)
!15031 = !DILocation(line: 218, column: 18, scope: !15028)
!15032 = !DILocation(line: 218, column: 21, scope: !15028)
!15033 = !DILocation(line: 218, column: 27, scope: !15028)
!15034 = !DILocation(line: 218, column: 7, scope: !15029)
!15035 = !DILocation(line: 219, column: 4, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 218, column: 38)
!15037 = !DILocation(line: 219, column: 10, scope: !15036)
!15038 = !DILocation(line: 219, column: 20, scope: !15036)
!15039 = !DILocation(line: 219, column: 26, scope: !15036)
!15040 = !DILocation(line: 220, column: 4, scope: !15036)
!15041 = !DILocation(line: 220, column: 10, scope: !15036)
!15042 = !DILocation(line: 220, column: 15, scope: !15036)
!15043 = !DILocation(line: 221, column: 4, scope: !15036)
!15044 = !DILocation(line: 221, column: 10, scope: !15036)
!15045 = !DILocation(line: 221, column: 20, scope: !15036)
!15046 = !DILocation(line: 222, column: 3, scope: !15036)
!15047 = !DILocation(line: 224, column: 7, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !15029, file: !3, line: 224, column: 7)
!15049 = !DILocation(line: 224, column: 7, scope: !15029)
!15050 = !DILocation(line: 225, column: 13, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15048, file: !3, line: 224, column: 16)
!15052 = !DILocation(line: 225, column: 25, scope: !15051)
!15053 = !DILocation(line: 225, column: 32, scope: !15051)
!15054 = !DILocation(line: 225, column: 11, scope: !15051)
!15055 = !DILocation(line: 226, column: 8, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !15051, file: !3, line: 226, column: 8)
!15057 = !DILocation(line: 226, column: 16, scope: !15056)
!15058 = !DILocation(line: 226, column: 8, scope: !15051)
!15059 = !DILocation(line: 227, column: 5, scope: !15056)
!15060 = !DILocation(line: 229, column: 8, scope: !15061)
!15061 = distinct !DILexicalBlock(scope: !15051, file: !3, line: 229, column: 8)
!15062 = !DILocation(line: 229, column: 14, scope: !15061)
!15063 = !DILocation(line: 229, column: 20, scope: !15061)
!15064 = !DILocation(line: 229, column: 29, scope: !15061)
!15065 = !DILocation(line: 229, column: 8, scope: !15051)
!15066 = !DILocation(line: 230, column: 15, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !15061, file: !3, line: 229, column: 49)
!15068 = !DILocation(line: 230, column: 27, scope: !15067)
!15069 = !DILocation(line: 230, column: 34, scope: !15067)
!15070 = !DILocation(line: 230, column: 13, scope: !15067)
!15071 = !DILocation(line: 232, column: 9, scope: !15072)
!15072 = distinct !DILexicalBlock(scope: !15067, file: !3, line: 232, column: 9)
!15073 = !DILocation(line: 232, column: 18, scope: !15072)
!15074 = !DILocation(line: 232, column: 9, scope: !15067)
!15075 = !DILocation(line: 234, column: 10, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15077, file: !3, line: 234, column: 10)
!15077 = distinct !DILexicalBlock(scope: !15072, file: !3, line: 232, column: 27)
!15078 = !DILocation(line: 234, column: 10, scope: !15077)
!15079 = !DILocation(line: 235, column: 7, scope: !15076)
!15080 = !DILocation(line: 235, column: 17, scope: !15076)
!15081 = !DILocation(line: 236, column: 6, scope: !15077)
!15082 = !DILocation(line: 238, column: 4, scope: !15067)
!15083 = !DILocation(line: 239, column: 3, scope: !15051)
!15084 = !DILocation(line: 241, column: 7, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15029, file: !3, line: 241, column: 7)
!15086 = !DILocation(line: 241, column: 13, scope: !15085)
!15087 = !DILocation(line: 241, column: 7, scope: !15029)
!15088 = !DILocation(line: 242, column: 13, scope: !15089)
!15089 = distinct !DILexicalBlock(scope: !15085, file: !3, line: 241, column: 24)
!15090 = !DILocation(line: 242, column: 12, scope: !15089)
!15091 = !DILocation(line: 244, column: 8, scope: !15092)
!15092 = distinct !DILexicalBlock(scope: !15089, file: !3, line: 244, column: 8)
!15093 = !DILocation(line: 244, column: 8, scope: !15089)
!15094 = !DILocation(line: 245, column: 12, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !15092, file: !3, line: 244, column: 18)
!15096 = !DILocation(line: 245, column: 5, scope: !15095)
!15097 = !DILocation(line: 245, column: 20, scope: !15095)
!15098 = !DILocation(line: 245, column: 26, scope: !15095)
!15099 = !DILocation(line: 245, column: 36, scope: !15095)
!15100 = !DILocation(line: 245, column: 44, scope: !15095)
!15101 = !DILocation(line: 247, column: 9, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15095, file: !3, line: 247, column: 9)
!15103 = !DILocation(line: 247, column: 15, scope: !15102)
!15104 = !DILocation(line: 247, column: 26, scope: !15102)
!15105 = !DILocation(line: 247, column: 9, scope: !15095)
!15106 = !DILocation(line: 248, column: 13, scope: !15102)
!15107 = !DILocation(line: 248, column: 6, scope: !15102)
!15108 = !DILocation(line: 248, column: 23, scope: !15102)
!15109 = !DILocation(line: 248, column: 29, scope: !15102)
!15110 = !DILocation(line: 248, column: 40, scope: !15102)
!15111 = !DILocation(line: 248, column: 46, scope: !15102)
!15112 = !DILocation(line: 248, column: 54, scope: !15102)
!15113 = !DILocation(line: 249, column: 4, scope: !15095)
!15114 = !DILocation(line: 251, column: 8, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15089, file: !3, line: 251, column: 8)
!15116 = !DILocation(line: 251, column: 14, scope: !15115)
!15117 = !DILocation(line: 251, column: 25, scope: !15115)
!15118 = !DILocation(line: 251, column: 8, scope: !15089)
!15119 = !DILocation(line: 252, column: 5, scope: !15115)
!15120 = !DILocation(line: 252, column: 15, scope: !15115)
!15121 = !DILocation(line: 252, column: 21, scope: !15115)
!15122 = !DILocation(line: 252, column: 32, scope: !15115)
!15123 = !DILocation(line: 254, column: 8, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15089, file: !3, line: 254, column: 8)
!15125 = !DILocation(line: 254, column: 14, scope: !15124)
!15126 = !DILocation(line: 254, column: 25, scope: !15124)
!15127 = !DILocation(line: 254, column: 8, scope: !15089)
!15128 = !DILocation(line: 255, column: 5, scope: !15124)
!15129 = !DILocation(line: 255, column: 15, scope: !15124)
!15130 = !DILocation(line: 255, column: 21, scope: !15124)
!15131 = !DILocation(line: 255, column: 32, scope: !15124)
!15132 = !DILocation(line: 257, column: 10, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15089, file: !3, line: 257, column: 4)
!15134 = !DILocation(line: 257, column: 17, scope: !15133)
!15135 = !DILocation(line: 257, column: 16, scope: !15133)
!15136 = !DILocation(line: 257, column: 9, scope: !15133)
!15137 = !DILocation(line: 257, column: 26, scope: !15138)
!15138 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 257, column: 4)
!15139 = !DILocation(line: 257, column: 28, scope: !15138)
!15140 = !DILocation(line: 257, column: 27, scope: !15138)
!15141 = !DILocation(line: 257, column: 4, scope: !15133)
!15142 = !DILocation(line: 258, column: 9, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15144, file: !3, line: 258, column: 9)
!15144 = distinct !DILexicalBlock(scope: !15138, file: !3, line: 257, column: 49)
!15145 = !DILocation(line: 258, column: 13, scope: !15143)
!15146 = !DILocation(line: 258, column: 9, scope: !15144)
!15147 = !DILocation(line: 259, column: 6, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15143, file: !3, line: 258, column: 19)
!15149 = !DILocation(line: 259, column: 10, scope: !15148)
!15150 = !DILocation(line: 259, column: 14, scope: !15148)
!15151 = !DILocation(line: 260, column: 6, scope: !15148)
!15152 = !DILocation(line: 260, column: 10, scope: !15148)
!15153 = !DILocation(line: 260, column: 16, scope: !15148)
!15154 = !DILocation(line: 261, column: 5, scope: !15148)
!15155 = !DILocation(line: 262, column: 4, scope: !15144)
!15156 = !DILocation(line: 257, column: 39, scope: !15138)
!15157 = !DILocation(line: 257, column: 45, scope: !15138)
!15158 = !DILocation(line: 257, column: 4, scope: !15138)
!15159 = distinct !{!15159, !15141, !15160}
!15160 = !DILocation(line: 262, column: 4, scope: !15133)
!15161 = !DILocation(line: 264, column: 11, scope: !15162)
!15162 = distinct !DILexicalBlock(scope: !15089, file: !3, line: 264, column: 4)
!15163 = !DILocation(line: 264, column: 10, scope: !15162)
!15164 = !DILocation(line: 264, column: 24, scope: !15162)
!15165 = !DILocation(line: 264, column: 30, scope: !15162)
!15166 = !DILocation(line: 264, column: 40, scope: !15162)
!15167 = !DILocation(line: 264, column: 39, scope: !15162)
!15168 = !DILocation(line: 264, column: 23, scope: !15162)
!15169 = !DILocation(line: 264, column: 9, scope: !15162)
!15170 = !DILocation(line: 264, column: 50, scope: !15171)
!15171 = distinct !DILexicalBlock(scope: !15162, file: !3, line: 264, column: 4)
!15172 = !DILocation(line: 264, column: 52, scope: !15171)
!15173 = !DILocation(line: 264, column: 58, scope: !15171)
!15174 = !DILocation(line: 264, column: 51, scope: !15171)
!15175 = !DILocation(line: 264, column: 4, scope: !15162)
!15176 = !DILocation(line: 265, column: 9, scope: !15177)
!15177 = distinct !DILexicalBlock(scope: !15171, file: !3, line: 265, column: 9)
!15178 = !DILocation(line: 265, column: 13, scope: !15177)
!15179 = !DILocation(line: 265, column: 9, scope: !15171)
!15180 = !DILocation(line: 265, column: 19, scope: !15177)
!15181 = !DILocation(line: 265, column: 29, scope: !15177)
!15182 = !DILocation(line: 265, column: 33, scope: !15177)
!15183 = !DILocation(line: 264, column: 68, scope: !15171)
!15184 = !DILocation(line: 264, column: 74, scope: !15171)
!15185 = !DILocation(line: 264, column: 4, scope: !15171)
!15186 = distinct !{!15186, !15175, !15187}
!15187 = !DILocation(line: 265, column: 37, scope: !15162)
!15188 = !DILocation(line: 267, column: 4, scope: !15089)
!15189 = !DILocation(line: 267, column: 14, scope: !15089)
!15190 = !DILocation(line: 267, column: 20, scope: !15089)
!15191 = !DILocation(line: 268, column: 18, scope: !15089)
!15192 = !DILocation(line: 268, column: 4, scope: !15089)
!15193 = !DILocation(line: 269, column: 3, scope: !15089)
!15194 = !DILocation(line: 271, column: 19, scope: !15029)
!15195 = !DILocation(line: 271, column: 3, scope: !15029)
!15196 = !DILocation(line: 271, column: 9, scope: !15029)
!15197 = !DILocation(line: 271, column: 18, scope: !15029)
!15198 = !DILocation(line: 272, column: 17, scope: !15029)
!15199 = !DILocation(line: 272, column: 3, scope: !15029)
!15200 = !DILocation(line: 272, column: 9, scope: !15029)
!15201 = !DILocation(line: 272, column: 16, scope: !15029)
!15202 = !DILocation(line: 274, column: 7, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15029, file: !3, line: 274, column: 7)
!15204 = !DILocation(line: 274, column: 7, scope: !15029)
!15205 = !DILocation(line: 275, column: 4, scope: !15206)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 275, column: 4)
!15207 = distinct !DILexicalBlock(scope: !15203, file: !3, line: 274, column: 17)
!15208 = !DILocation(line: 275, column: 4, scope: !15209)
!15209 = distinct !DILexicalBlock(scope: !15206, file: !3, line: 275, column: 4)
!15210 = !DILocation(line: 276, column: 24, scope: !15209)
!15211 = !DILocation(line: 276, column: 5, scope: !15209)
!15212 = !DILocation(line: 276, column: 9, scope: !15209)
!15213 = !DILocation(line: 276, column: 14, scope: !15209)
!15214 = distinct !{!15214, !15205, !15215}
!15215 = !DILocation(line: 276, column: 24, scope: !15206)
!15216 = !DILocation(line: 277, column: 3, scope: !15207)
!15217 = !DILocation(line: 278, column: 2, scope: !15029)
!15218 = !DILocation(line: 280, column: 6, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !14968, file: !3, line: 280, column: 6)
!15220 = !DILocation(line: 280, column: 12, scope: !15219)
!15221 = !DILocation(line: 280, column: 6, scope: !14968)
!15222 = !DILocation(line: 281, column: 3, scope: !15223)
!15223 = distinct !DILexicalBlock(scope: !15219, file: !3, line: 280, column: 19)
!15224 = !DILocation(line: 281, column: 13, scope: !15223)
!15225 = !DILocation(line: 281, column: 19, scope: !15223)
!15226 = !DILocation(line: 282, column: 3, scope: !15223)
!15227 = !DILocation(line: 282, column: 9, scope: !15223)
!15228 = !DILocation(line: 282, column: 14, scope: !15223)
!15229 = !DILocation(line: 283, column: 3, scope: !15223)
!15230 = !DILocation(line: 283, column: 9, scope: !15223)
!15231 = !DILocation(line: 283, column: 17, scope: !15223)
!15232 = !DILocation(line: 284, column: 2, scope: !15223)
!15233 = !DILocation(line: 285, column: 1, scope: !14968)
!15234 = distinct !DISubprogram(name: "distribute_particles_on_dm", scope: !3, file: !3, line: 1407, type: !9217, scopeLine: 1408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!15235 = !DILocalVariable(name: "sim", arg: 1, scope: !15234, file: !3, line: 1407, type: !3218)
!15236 = !DILocation(line: 1407, column: 64, scope: !15234)
!15237 = !DILocalVariable(name: "from", arg: 2, scope: !15234, file: !3, line: 1407, type: !260)
!15238 = !DILocation(line: 1407, column: 73, scope: !15234)
!15239 = !DILocalVariable(name: "finaldm", scope: !15234, file: !3, line: 1409, type: !2671)
!15240 = !DILocation(line: 1409, column: 15, scope: !15234)
!15241 = !DILocation(line: 1409, column: 25, scope: !15234)
!15242 = !DILocation(line: 1409, column: 30, scope: !15234)
!15243 = !DILocation(line: 1409, column: 36, scope: !15234)
!15244 = !DILocalVariable(name: "threads", scope: !15234, file: !3, line: 1410, type: !285)
!15245 = !DILocation(line: 1410, column: 11, scope: !15234)
!15246 = !DILocalVariable(name: "pthreads", scope: !15234, file: !3, line: 1411, type: !3246)
!15247 = !DILocation(line: 1411, column: 18, scope: !15234)
!15248 = !DILocalVariable(name: "ctx", scope: !15234, file: !3, line: 1412, type: !3251)
!15249 = !DILocation(line: 1412, column: 25, scope: !15234)
!15250 = !DILocalVariable(name: "i", scope: !15234, file: !3, line: 1413, type: !260)
!15251 = !DILocation(line: 1413, column: 6, scope: !15234)
!15252 = !DILocalVariable(name: "totthread", scope: !15234, file: !3, line: 1413, type: !260)
!15253 = !DILocation(line: 1413, column: 9, scope: !15234)
!15254 = !DILocation(line: 1415, column: 32, scope: !15234)
!15255 = !DILocation(line: 1415, column: 12, scope: !15234)
!15256 = !DILocation(line: 1415, column: 10, scope: !15234)
!15257 = !DILocation(line: 1417, column: 36, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15234, file: !3, line: 1417, column: 6)
!15259 = !DILocation(line: 1417, column: 46, scope: !15258)
!15260 = !DILocation(line: 1417, column: 51, scope: !15258)
!15261 = !DILocation(line: 1417, column: 58, scope: !15258)
!15262 = !DILocation(line: 1417, column: 67, scope: !15258)
!15263 = !DILocation(line: 1417, column: 7, scope: !15258)
!15264 = !DILocation(line: 1417, column: 6, scope: !15234)
!15265 = !DILocation(line: 1418, column: 21, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15258, file: !3, line: 1417, column: 74)
!15267 = !DILocation(line: 1418, column: 3, scope: !15266)
!15268 = !DILocation(line: 1419, column: 3, scope: !15266)
!15269 = !DILocation(line: 1422, column: 13, scope: !15234)
!15270 = !DILocation(line: 1422, column: 25, scope: !15234)
!15271 = !DILocation(line: 1422, column: 11, scope: !15234)
!15272 = !DILocation(line: 1423, column: 6, scope: !15273)
!15273 = distinct !DILexicalBlock(scope: !15234, file: !3, line: 1423, column: 6)
!15274 = !DILocation(line: 1423, column: 16, scope: !15273)
!15275 = !DILocation(line: 1423, column: 6, scope: !15234)
!15276 = !DILocation(line: 1424, column: 58, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !15273, file: !3, line: 1423, column: 21)
!15278 = !DILocation(line: 1424, column: 3, scope: !15277)
!15279 = !DILocation(line: 1426, column: 9, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15277, file: !3, line: 1426, column: 3)
!15281 = !DILocation(line: 1426, column: 8, scope: !15280)
!15282 = !DILocation(line: 1426, column: 13, scope: !15283)
!15283 = distinct !DILexicalBlock(scope: !15280, file: !3, line: 1426, column: 3)
!15284 = !DILocation(line: 1426, column: 15, scope: !15283)
!15285 = !DILocation(line: 1426, column: 14, scope: !15283)
!15286 = !DILocation(line: 1426, column: 3, scope: !15280)
!15287 = !DILocation(line: 1427, column: 33, scope: !15283)
!15288 = !DILocation(line: 1427, column: 42, scope: !15283)
!15289 = !DILocation(line: 1427, column: 32, scope: !15283)
!15290 = !DILocation(line: 1427, column: 4, scope: !15283)
!15291 = !DILocation(line: 1426, column: 27, scope: !15283)
!15292 = !DILocation(line: 1426, column: 3, scope: !15283)
!15293 = distinct !{!15293, !15286, !15294}
!15294 = !DILocation(line: 1427, column: 44, scope: !15280)
!15295 = !DILocation(line: 1429, column: 3, scope: !15277)
!15296 = !DILocation(line: 1430, column: 2, scope: !15277)
!15297 = !DILocation(line: 1432, column: 31, scope: !15273)
!15298 = !DILocation(line: 1432, column: 30, scope: !15273)
!15299 = !DILocation(line: 1432, column: 3, scope: !15273)
!15300 = !DILocation(line: 1434, column: 20, scope: !15234)
!15301 = !DILocation(line: 1434, column: 25, scope: !15234)
!15302 = !DILocation(line: 1434, column: 29, scope: !15234)
!15303 = !DILocation(line: 1434, column: 38, scope: !15234)
!15304 = !DILocation(line: 1434, column: 43, scope: !15234)
!15305 = !DILocation(line: 1434, column: 2, scope: !15234)
!15306 = !DILocation(line: 1436, column: 7, scope: !15234)
!15307 = !DILocation(line: 1436, column: 19, scope: !15234)
!15308 = !DILocation(line: 1436, column: 5, scope: !15234)
!15309 = !DILocation(line: 1437, column: 6, scope: !15310)
!15310 = distinct !DILexicalBlock(scope: !15234, file: !3, line: 1437, column: 6)
!15311 = !DILocation(line: 1437, column: 11, scope: !15310)
!15312 = !DILocation(line: 1437, column: 17, scope: !15310)
!15313 = !DILocation(line: 1437, column: 14, scope: !15310)
!15314 = !DILocation(line: 1437, column: 6, scope: !15234)
!15315 = !DILocation(line: 1438, column: 3, scope: !15310)
!15316 = !DILocation(line: 1438, column: 8, scope: !15310)
!15317 = !DILocation(line: 1438, column: 12, scope: !15310)
!15318 = !DILocation(line: 1438, column: 20, scope: !15310)
!15319 = !DILocation(line: 1438, column: 25, scope: !15310)
!15320 = !DILocation(line: 1440, column: 20, scope: !15234)
!15321 = !DILocation(line: 1440, column: 2, scope: !15234)
!15322 = !DILocation(line: 1441, column: 1, scope: !15234)
!15323 = distinct !DISubprogram(name: "distribute_particles_on_shape", scope: !3, file: !3, line: 1444, type: !9217, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!15324 = !DILocalVariable(name: "sim", arg: 1, scope: !15323, file: !3, line: 1444, type: !3218)
!15325 = !DILocation(line: 1444, column: 67, scope: !15323)
!15326 = !DILocalVariable(name: "UNUSED_from", arg: 2, scope: !15323, file: !3, line: 1444, type: !260)
!15327 = !DILocation(line: 1444, column: 76, scope: !15323)
!15328 = !DILocation(line: 1446, column: 21, scope: !15323)
!15329 = !DILocation(line: 1446, column: 26, scope: !15323)
!15330 = !DILocation(line: 1446, column: 33, scope: !15323)
!15331 = !DILocation(line: 1446, column: 38, scope: !15323)
!15332 = !DILocation(line: 1446, column: 2, scope: !15323)
!15333 = !DILocation(line: 1448, column: 10, scope: !15323)
!15334 = !DILocation(line: 1448, column: 2, scope: !15323)
!15335 = !DILocation(line: 1449, column: 1, scope: !15323)
!15336 = distinct !DISubprogram(name: "distribute_invalid", scope: !3, file: !3, line: 1036, type: !15337, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!15337 = !DISubroutineType(types: !15338)
!15338 = !{null, !5519, !3144, !260}
!15339 = !DILocalVariable(name: "scene", arg: 1, scope: !15336, file: !3, line: 1036, type: !5519)
!15340 = !DILocation(line: 1036, column: 39, scope: !15336)
!15341 = !DILocalVariable(name: "psys", arg: 2, scope: !15336, file: !3, line: 1036, type: !3144)
!15342 = !DILocation(line: 1036, column: 62, scope: !15336)
!15343 = !DILocalVariable(name: "from", arg: 3, scope: !15336, file: !3, line: 1036, type: !260)
!15344 = !DILocation(line: 1036, column: 72, scope: !15336)
!15345 = !DILocation(line: 1038, column: 6, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15336, file: !3, line: 1038, column: 6)
!15347 = !DILocation(line: 1038, column: 11, scope: !15346)
!15348 = !DILocation(line: 1038, column: 6, scope: !15336)
!15349 = !DILocalVariable(name: "cpa", scope: !15350, file: !3, line: 1039, type: !2464)
!15350 = distinct !DILexicalBlock(scope: !15346, file: !3, line: 1038, column: 31)
!15351 = !DILocation(line: 1039, column: 18, scope: !15350)
!15352 = !DILocalVariable(name: "p", scope: !15350, file: !3, line: 1040, type: !260)
!15353 = !DILocation(line: 1040, column: 7, scope: !15350)
!15354 = !DILocalVariable(name: "totchild", scope: !15350, file: !3, line: 1040, type: !260)
!15355 = !DILocation(line: 1040, column: 10, scope: !15350)
!15356 = !DILocation(line: 1040, column: 40, scope: !15350)
!15357 = !DILocation(line: 1040, column: 47, scope: !15350)
!15358 = !DILocation(line: 1040, column: 21, scope: !15350)
!15359 = !DILocation(line: 1042, column: 7, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 1042, column: 7)
!15361 = !DILocation(line: 1042, column: 13, scope: !15360)
!15362 = !DILocation(line: 1042, column: 19, scope: !15360)
!15363 = !DILocation(line: 1042, column: 22, scope: !15360)
!15364 = !DILocation(line: 1042, column: 7, scope: !15350)
!15365 = !DILocation(line: 1043, column: 10, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15367, file: !3, line: 1043, column: 4)
!15367 = distinct !DILexicalBlock(scope: !15360, file: !3, line: 1042, column: 32)
!15368 = !DILocation(line: 1043, column: 17, scope: !15366)
!15369 = !DILocation(line: 1043, column: 23, scope: !15366)
!15370 = !DILocation(line: 1043, column: 16, scope: !15366)
!15371 = !DILocation(line: 1043, column: 9, scope: !15366)
!15372 = !DILocation(line: 1043, column: 30, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15366, file: !3, line: 1043, column: 4)
!15374 = !DILocation(line: 1043, column: 32, scope: !15373)
!15375 = !DILocation(line: 1043, column: 31, scope: !15373)
!15376 = !DILocation(line: 1043, column: 4, scope: !15366)
!15377 = !DILocation(line: 1044, column: 41, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15373, file: !3, line: 1043, column: 53)
!15379 = !DILocation(line: 1044, column: 46, scope: !15378)
!15380 = !DILocation(line: 1044, column: 53, scope: !15378)
!15381 = !DILocation(line: 1044, column: 29, scope: !15378)
!15382 = !DILocation(line: 1044, column: 34, scope: !15378)
!15383 = !DILocation(line: 1044, column: 40, scope: !15378)
!15384 = !DILocation(line: 1044, column: 17, scope: !15378)
!15385 = !DILocation(line: 1044, column: 22, scope: !15378)
!15386 = !DILocation(line: 1044, column: 28, scope: !15378)
!15387 = !DILocation(line: 1044, column: 5, scope: !15378)
!15388 = !DILocation(line: 1044, column: 10, scope: !15378)
!15389 = !DILocation(line: 1044, column: 16, scope: !15378)
!15390 = !DILocation(line: 1045, column: 5, scope: !15378)
!15391 = !DILocation(line: 1045, column: 10, scope: !15378)
!15392 = !DILocation(line: 1045, column: 17, scope: !15378)
!15393 = !DILocation(line: 1046, column: 5, scope: !15378)
!15394 = !DILocation(line: 1046, column: 10, scope: !15378)
!15395 = !DILocation(line: 1046, column: 16, scope: !15378)
!15396 = !DILocation(line: 1047, column: 38, scope: !15378)
!15397 = !DILocation(line: 1047, column: 43, scope: !15378)
!15398 = !DILocation(line: 1047, column: 48, scope: !15378)
!15399 = !DILocation(line: 1047, column: 27, scope: !15378)
!15400 = !DILocation(line: 1047, column: 32, scope: !15378)
!15401 = !DILocation(line: 1047, column: 37, scope: !15378)
!15402 = !DILocation(line: 1047, column: 16, scope: !15378)
!15403 = !DILocation(line: 1047, column: 21, scope: !15378)
!15404 = !DILocation(line: 1047, column: 26, scope: !15378)
!15405 = !DILocation(line: 1047, column: 5, scope: !15378)
!15406 = !DILocation(line: 1047, column: 10, scope: !15378)
!15407 = !DILocation(line: 1047, column: 15, scope: !15378)
!15408 = !DILocation(line: 1048, column: 5, scope: !15378)
!15409 = !DILocation(line: 1048, column: 10, scope: !15378)
!15410 = !DILocation(line: 1048, column: 13, scope: !15378)
!15411 = !DILocation(line: 1049, column: 4, scope: !15378)
!15412 = !DILocation(line: 1043, column: 43, scope: !15373)
!15413 = !DILocation(line: 1043, column: 49, scope: !15373)
!15414 = !DILocation(line: 1043, column: 4, scope: !15373)
!15415 = distinct !{!15415, !15376, !15416}
!15416 = !DILocation(line: 1049, column: 4, scope: !15366)
!15417 = !DILocation(line: 1050, column: 3, scope: !15367)
!15418 = !DILocation(line: 1051, column: 2, scope: !15350)
!15419 = !DILocalVariable(name: "pa", scope: !15420, file: !3, line: 1053, type: !2461)
!15420 = distinct !DILexicalBlock(scope: !15346, file: !3, line: 1052, column: 7)
!15421 = !DILocation(line: 1053, column: 3, scope: !15420)
!15422 = !DILocalVariable(name: "p", scope: !15420, file: !3, line: 1053, type: !260)
!15423 = !DILocation(line: 1054, column: 3, scope: !15424)
!15424 = distinct !DILexicalBlock(scope: !15420, file: !3, line: 1054, column: 3)
!15425 = !DILocation(line: 1054, column: 3, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15424, file: !3, line: 1054, column: 3)
!15427 = !DILocation(line: 1055, column: 43, scope: !15428)
!15428 = distinct !DILexicalBlock(scope: !15426, file: !3, line: 1054, column: 18)
!15429 = !DILocation(line: 1055, column: 47, scope: !15428)
!15430 = !DILocation(line: 1055, column: 54, scope: !15428)
!15431 = !DILocation(line: 1055, column: 30, scope: !15428)
!15432 = !DILocation(line: 1055, column: 34, scope: !15428)
!15433 = !DILocation(line: 1055, column: 41, scope: !15428)
!15434 = !DILocation(line: 1055, column: 17, scope: !15428)
!15435 = !DILocation(line: 1055, column: 21, scope: !15428)
!15436 = !DILocation(line: 1055, column: 28, scope: !15428)
!15437 = !DILocation(line: 1055, column: 4, scope: !15428)
!15438 = !DILocation(line: 1055, column: 8, scope: !15428)
!15439 = !DILocation(line: 1055, column: 15, scope: !15428)
!15440 = !DILocation(line: 1056, column: 4, scope: !15428)
!15441 = !DILocation(line: 1056, column: 8, scope: !15428)
!15442 = !DILocation(line: 1056, column: 15, scope: !15428)
!15443 = !DILocation(line: 1057, column: 4, scope: !15428)
!15444 = !DILocation(line: 1057, column: 8, scope: !15428)
!15445 = !DILocation(line: 1057, column: 11, scope: !15428)
!15446 = !DILocation(line: 1058, column: 3, scope: !15428)
!15447 = distinct !{!15447, !15423, !15448}
!15448 = !DILocation(line: 1058, column: 3, scope: !15424)
!15449 = !DILocation(line: 1060, column: 1, scope: !15336)
!15450 = distinct !DISubprogram(name: "distribute_threads_init_data", scope: !3, file: !3, line: 1064, type: !15451, scopeLine: 1065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!15451 = !DISubroutineType(types: !15452)
!15452 = !{!260, !3246, !5519, !2671, !260}
!15453 = !DILocalVariable(name: "threads", arg: 1, scope: !15450, file: !3, line: 1064, type: !3246)
!15454 = !DILocation(line: 1064, column: 57, scope: !15450)
!15455 = !DILocalVariable(name: "scene", arg: 2, scope: !15450, file: !3, line: 1064, type: !5519)
!15456 = !DILocation(line: 1064, column: 73, scope: !15450)
!15457 = !DILocalVariable(name: "finaldm", arg: 3, scope: !15450, file: !3, line: 1064, type: !2671)
!15458 = !DILocation(line: 1064, column: 93, scope: !15450)
!15459 = !DILocalVariable(name: "from", arg: 4, scope: !15450, file: !3, line: 1064, type: !260)
!15460 = !DILocation(line: 1064, column: 106, scope: !15450)
!15461 = !DILocalVariable(name: "ctx", scope: !15450, file: !3, line: 1066, type: !3251)
!15462 = !DILocation(line: 1066, column: 25, scope: !15450)
!15463 = !DILocation(line: 1066, column: 30, scope: !15450)
!15464 = !DILocation(line: 1066, column: 41, scope: !15450)
!15465 = !DILocalVariable(name: "ob", scope: !15450, file: !3, line: 1067, type: !3567)
!15466 = !DILocation(line: 1067, column: 10, scope: !15450)
!15467 = !DILocation(line: 1067, column: 14, scope: !15450)
!15468 = !DILocation(line: 1067, column: 19, scope: !15450)
!15469 = !DILocation(line: 1067, column: 23, scope: !15450)
!15470 = !DILocalVariable(name: "psys", scope: !15450, file: !3, line: 1068, type: !3144)
!15471 = !DILocation(line: 1068, column: 18, scope: !15450)
!15472 = !DILocation(line: 1068, column: 24, scope: !15450)
!15473 = !DILocation(line: 1068, column: 29, scope: !15450)
!15474 = !DILocation(line: 1068, column: 33, scope: !15450)
!15475 = !DILocalVariable(name: "pa", scope: !15450, file: !3, line: 1069, type: !2461)
!15476 = !DILocation(line: 1069, column: 16, scope: !15450)
!15477 = !DILocalVariable(name: "tpars", scope: !15450, file: !3, line: 1069, type: !2461)
!15478 = !DILocation(line: 1069, column: 23, scope: !15450)
!15479 = !DILocalVariable(name: "part", scope: !15450, file: !3, line: 1070, type: !2192)
!15480 = !DILocation(line: 1070, column: 20, scope: !15450)
!15481 = !DILocalVariable(name: "seams", scope: !15450, file: !3, line: 1071, type: !15482)
!15482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15483, size: 64)
!15483 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSeam", file: !714, line: 121, baseType: !3261)
!15484 = !DILocation(line: 1071, column: 16, scope: !15450)
!15485 = !DILocalVariable(name: "tree", scope: !15450, file: !3, line: 1072, type: !15486)
!15486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15487, size: 64)
!15487 = !DIDerivedType(tag: DW_TAG_typedef, name: "KDTree", file: !15488, line: 37, baseType: !2021)
!15488 = !DIFile(filename: "blender/source/blender/blenlib/BLI_kdtree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!15489 = !DILocation(line: 1072, column: 10, scope: !15450)
!15490 = !DILocalVariable(name: "dm", scope: !15450, file: !3, line: 1073, type: !2671)
!15491 = !DILocation(line: 1073, column: 15, scope: !15450)
!15492 = !DILocalVariable(name: "jit", scope: !15450, file: !3, line: 1074, type: !1796)
!15493 = !DILocation(line: 1074, column: 9, scope: !15450)
!15494 = !DILocalVariable(name: "i", scope: !15450, file: !3, line: 1075, type: !260)
!15495 = !DILocation(line: 1075, column: 6, scope: !15450)
!15496 = !DILocalVariable(name: "seed", scope: !15450, file: !3, line: 1075, type: !260)
!15497 = !DILocation(line: 1075, column: 9, scope: !15450)
!15498 = !DILocalVariable(name: "p", scope: !15450, file: !3, line: 1075, type: !260)
!15499 = !DILocation(line: 1075, column: 15, scope: !15450)
!15500 = !DILocalVariable(name: "totthread", scope: !15450, file: !3, line: 1075, type: !260)
!15501 = !DILocation(line: 1075, column: 20, scope: !15450)
!15502 = !DILocation(line: 1075, column: 31, scope: !15450)
!15503 = !DILocation(line: 1075, column: 42, scope: !15450)
!15504 = !DILocalVariable(name: "cfrom", scope: !15450, file: !3, line: 1076, type: !260)
!15505 = !DILocation(line: 1076, column: 6, scope: !15450)
!15506 = !DILocalVariable(name: "totelem", scope: !15450, file: !3, line: 1077, type: !260)
!15507 = !DILocation(line: 1077, column: 6, scope: !15450)
!15508 = !DILocalVariable(name: "totpart", scope: !15450, file: !3, line: 1077, type: !260)
!15509 = !DILocation(line: 1077, column: 17, scope: !15450)
!15510 = !DILocalVariable(name: "particle_element", scope: !15450, file: !3, line: 1077, type: !2797)
!15511 = !DILocation(line: 1077, column: 27, scope: !15450)
!15512 = !DILocalVariable(name: "children", scope: !15450, file: !3, line: 1077, type: !260)
!15513 = !DILocation(line: 1077, column: 47, scope: !15450)
!15514 = !DILocalVariable(name: "totseam", scope: !15450, file: !3, line: 1077, type: !260)
!15515 = !DILocation(line: 1077, column: 59, scope: !15450)
!15516 = !DILocalVariable(name: "jitlevel", scope: !15450, file: !3, line: 1078, type: !260)
!15517 = !DILocation(line: 1078, column: 6, scope: !15450)
!15518 = !DILocalVariable(name: "distr", scope: !15450, file: !3, line: 1078, type: !260)
!15519 = !DILocation(line: 1078, column: 19, scope: !15450)
!15520 = !DILocalVariable(name: "element_weight", scope: !15450, file: !3, line: 1079, type: !1796)
!15521 = !DILocation(line: 1079, column: 9, scope: !15450)
!15522 = !DILocalVariable(name: "element_sum", scope: !15450, file: !3, line: 1079, type: !1796)
!15523 = !DILocation(line: 1079, column: 30, scope: !15450)
!15524 = !DILocalVariable(name: "jitter_offset", scope: !15450, file: !3, line: 1079, type: !1796)
!15525 = !DILocation(line: 1079, column: 48, scope: !15450)
!15526 = !DILocalVariable(name: "vweight", scope: !15450, file: !3, line: 1079, type: !1796)
!15527 = !DILocation(line: 1079, column: 69, scope: !15450)
!15528 = !DILocalVariable(name: "cur", scope: !15450, file: !3, line: 1080, type: !341)
!15529 = !DILocation(line: 1080, column: 8, scope: !15450)
!15530 = !DILocalVariable(name: "maxweight", scope: !15450, file: !3, line: 1080, type: !341)
!15531 = !DILocation(line: 1080, column: 13, scope: !15450)
!15532 = !DILocalVariable(name: "tweight", scope: !15450, file: !3, line: 1080, type: !341)
!15533 = !DILocation(line: 1080, column: 28, scope: !15450)
!15534 = !DILocalVariable(name: "totweight", scope: !15450, file: !3, line: 1080, type: !341)
!15535 = !DILocation(line: 1080, column: 37, scope: !15450)
!15536 = !DILocalVariable(name: "inv_totweight", scope: !15450, file: !3, line: 1080, type: !341)
!15537 = !DILocation(line: 1080, column: 48, scope: !15450)
!15538 = !DILocalVariable(name: "co", scope: !15450, file: !3, line: 1080, type: !563)
!15539 = !DILocation(line: 1080, column: 63, scope: !15450)
!15540 = !DILocalVariable(name: "nor", scope: !15450, file: !3, line: 1080, type: !563)
!15541 = !DILocation(line: 1080, column: 70, scope: !15450)
!15542 = !DILocalVariable(name: "orco", scope: !15450, file: !3, line: 1080, type: !563)
!15543 = !DILocation(line: 1080, column: 78, scope: !15450)
!15544 = !DILocation(line: 1082, column: 6, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1082, column: 6)
!15546 = !DILocation(line: 1082, column: 6, scope: !15450)
!15547 = !DILocation(line: 1083, column: 3, scope: !15545)
!15548 = !DILocation(line: 1085, column: 7, scope: !15450)
!15549 = !DILocation(line: 1085, column: 13, scope: !15450)
!15550 = !DILocation(line: 1085, column: 6, scope: !15450)
!15551 = !DILocation(line: 1086, column: 10, scope: !15450)
!15552 = !DILocation(line: 1086, column: 16, scope: !15450)
!15553 = !DILocation(line: 1086, column: 9, scope: !15450)
!15554 = !DILocation(line: 1087, column: 6, scope: !15555)
!15555 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1087, column: 6)
!15556 = !DILocation(line: 1087, column: 13, scope: !15555)
!15557 = !DILocation(line: 1087, column: 6, scope: !15450)
!15558 = !DILocation(line: 1088, column: 3, scope: !15555)
!15559 = !DILocation(line: 1090, column: 7, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1090, column: 6)
!15561 = !DILocation(line: 1090, column: 16, scope: !15560)
!15562 = !DILocation(line: 1090, column: 29, scope: !15560)
!15563 = !DILocation(line: 1090, column: 33, scope: !15560)
!15564 = !DILocation(line: 1090, column: 42, scope: !15560)
!15565 = !DILocation(line: 1090, column: 63, scope: !15560)
!15566 = !DILocation(line: 1090, column: 6, scope: !15450)
!15567 = !DILocation(line: 1091, column: 3, scope: !15568)
!15568 = distinct !DILexicalBlock(scope: !15560, file: !3, line: 1090, column: 87)
!15569 = !DILocation(line: 1093, column: 3, scope: !15568)
!15570 = !DILocation(line: 1097, column: 6, scope: !15571)
!15571 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1097, column: 6)
!15572 = !DILocation(line: 1097, column: 11, scope: !15571)
!15573 = !DILocation(line: 1097, column: 6, scope: !15450)
!15574 = !DILocation(line: 1099, column: 7, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15576, file: !3, line: 1099, column: 7)
!15576 = distinct !DILexicalBlock(scope: !15571, file: !3, line: 1097, column: 31)
!15577 = !DILocation(line: 1099, column: 13, scope: !15575)
!15578 = !DILocation(line: 1099, column: 23, scope: !15575)
!15579 = !DILocation(line: 1099, column: 7, scope: !15576)
!15580 = !DILocation(line: 1100, column: 27, scope: !15581)
!15581 = distinct !DILexicalBlock(scope: !15575, file: !3, line: 1099, column: 44)
!15582 = !DILocation(line: 1100, column: 33, scope: !15581)
!15583 = !DILocation(line: 1100, column: 25, scope: !15581)
!15584 = !DILocation(line: 1100, column: 40, scope: !15581)
!15585 = !DILocation(line: 1100, column: 46, scope: !15581)
!15586 = !DILocation(line: 1100, column: 38, scope: !15581)
!15587 = !DILocation(line: 1100, column: 4, scope: !15581)
!15588 = !DILocation(line: 1101, column: 31, scope: !15581)
!15589 = !DILocation(line: 1101, column: 38, scope: !15581)
!15590 = !DILocation(line: 1101, column: 42, scope: !15581)
!15591 = !DILocation(line: 1101, column: 51, scope: !15581)
!15592 = !DILocation(line: 1101, column: 4, scope: !15581)
!15593 = !DILocation(line: 1102, column: 4, scope: !15581)
!15594 = !DILocation(line: 1104, column: 2, scope: !15576)
!15595 = !DILocation(line: 1107, column: 7, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !15597, file: !3, line: 1107, column: 7)
!15597 = distinct !DILexicalBlock(scope: !15571, file: !3, line: 1105, column: 7)
!15598 = !DILocation(line: 1107, column: 13, scope: !15596)
!15599 = !DILocation(line: 1107, column: 18, scope: !15596)
!15600 = !DILocation(line: 1107, column: 36, scope: !15596)
!15601 = !DILocation(line: 1107, column: 39, scope: !15596)
!15602 = !DILocation(line: 1107, column: 44, scope: !15596)
!15603 = !DILocation(line: 1107, column: 7, scope: !15597)
!15604 = !DILocation(line: 1108, column: 27, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15596, file: !3, line: 1107, column: 63)
!15606 = !DILocation(line: 1108, column: 33, scope: !15605)
!15607 = !DILocation(line: 1108, column: 25, scope: !15605)
!15608 = !DILocation(line: 1108, column: 4, scope: !15605)
!15609 = !DILocation(line: 1109, column: 30, scope: !15605)
!15610 = !DILocation(line: 1109, column: 34, scope: !15605)
!15611 = !DILocation(line: 1109, column: 23, scope: !15605)
!15612 = !DILocation(line: 1109, column: 8, scope: !15605)
!15613 = !DILocation(line: 1109, column: 6, scope: !15605)
!15614 = !DILocation(line: 1110, column: 23, scope: !15605)
!15615 = !DILocation(line: 1110, column: 4, scope: !15605)
!15616 = !DILocation(line: 1111, column: 20, scope: !15605)
!15617 = !DILocation(line: 1111, column: 23, scope: !15605)
!15618 = !DILocation(line: 1111, column: 4, scope: !15605)
!15619 = !DILocation(line: 1112, column: 4, scope: !15605)
!15620 = !DILocation(line: 1112, column: 8, scope: !15605)
!15621 = !DILocation(line: 1112, column: 16, scope: !15605)
!15622 = !DILocation(line: 1113, column: 4, scope: !15605)
!15623 = !DILocation(line: 1118, column: 6, scope: !15624)
!15624 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1118, column: 6)
!15625 = !DILocation(line: 1118, column: 11, scope: !15624)
!15626 = !DILocation(line: 1118, column: 6, scope: !15450)
!15627 = !DILocation(line: 1119, column: 8, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 1118, column: 31)
!15629 = !DILocation(line: 1120, column: 26, scope: !15628)
!15630 = !DILocation(line: 1120, column: 32, scope: !15628)
!15631 = !DILocation(line: 1120, column: 24, scope: !15628)
!15632 = !DILocation(line: 1120, column: 39, scope: !15628)
!15633 = !DILocation(line: 1120, column: 45, scope: !15628)
!15634 = !DILocation(line: 1120, column: 37, scope: !15628)
!15635 = !DILocation(line: 1120, column: 3, scope: !15628)
!15636 = !DILocation(line: 1121, column: 7, scope: !15628)
!15637 = !DILocation(line: 1121, column: 5, scope: !15628)
!15638 = !DILocation(line: 1124, column: 22, scope: !15628)
!15639 = !DILocation(line: 1124, column: 3, scope: !15628)
!15640 = !DILocation(line: 1126, column: 11, scope: !15628)
!15641 = !DILocation(line: 1128, column: 23, scope: !15628)
!15642 = !DILocation(line: 1128, column: 8, scope: !15628)
!15643 = !DILocation(line: 1128, column: 7, scope: !15628)
!15644 = !DILocation(line: 1130, column: 9, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15628, file: !3, line: 1130, column: 3)
!15646 = !DILocation(line: 1130, column: 15, scope: !15645)
!15647 = !DILocation(line: 1130, column: 21, scope: !15645)
!15648 = !DILocation(line: 1130, column: 14, scope: !15645)
!15649 = !DILocation(line: 1130, column: 8, scope: !15645)
!15650 = !DILocation(line: 1130, column: 32, scope: !15651)
!15651 = distinct !DILexicalBlock(scope: !15645, file: !3, line: 1130, column: 3)
!15652 = !DILocation(line: 1130, column: 34, scope: !15651)
!15653 = !DILocation(line: 1130, column: 33, scope: !15651)
!15654 = !DILocation(line: 1130, column: 3, scope: !15645)
!15655 = !DILocation(line: 1131, column: 24, scope: !15656)
!15656 = distinct !DILexicalBlock(scope: !15651, file: !3, line: 1130, column: 53)
!15657 = !DILocation(line: 1131, column: 27, scope: !15656)
!15658 = !DILocation(line: 1131, column: 33, scope: !15656)
!15659 = !DILocation(line: 1131, column: 38, scope: !15656)
!15660 = !DILocation(line: 1131, column: 42, scope: !15656)
!15661 = !DILocation(line: 1131, column: 46, scope: !15656)
!15662 = !DILocation(line: 1131, column: 50, scope: !15656)
!15663 = !DILocation(line: 1131, column: 62, scope: !15656)
!15664 = !DILocation(line: 1131, column: 66, scope: !15656)
!15665 = !DILocation(line: 1131, column: 70, scope: !15656)
!15666 = !DILocation(line: 1131, column: 74, scope: !15656)
!15667 = !DILocation(line: 1131, column: 82, scope: !15656)
!15668 = !DILocation(line: 1131, column: 85, scope: !15656)
!15669 = !DILocation(line: 1131, column: 93, scope: !15656)
!15670 = !DILocation(line: 1131, column: 4, scope: !15656)
!15671 = !DILocation(line: 1132, column: 41, scope: !15656)
!15672 = !DILocation(line: 1132, column: 45, scope: !15656)
!15673 = !DILocation(line: 1132, column: 34, scope: !15656)
!15674 = !DILocation(line: 1132, column: 4, scope: !15656)
!15675 = !DILocation(line: 1133, column: 22, scope: !15656)
!15676 = !DILocation(line: 1133, column: 28, scope: !15656)
!15677 = !DILocation(line: 1133, column: 31, scope: !15656)
!15678 = !DILocation(line: 1133, column: 4, scope: !15656)
!15679 = !DILocation(line: 1134, column: 3, scope: !15656)
!15680 = !DILocation(line: 1130, column: 44, scope: !15651)
!15681 = !DILocation(line: 1130, column: 49, scope: !15651)
!15682 = !DILocation(line: 1130, column: 3, scope: !15651)
!15683 = distinct !{!15683, !15654, !15684}
!15684 = !DILocation(line: 1134, column: 3, scope: !15645)
!15685 = !DILocation(line: 1136, column: 22, scope: !15628)
!15686 = !DILocation(line: 1136, column: 3, scope: !15628)
!15687 = !DILocation(line: 1138, column: 32, scope: !15628)
!15688 = !DILocation(line: 1138, column: 39, scope: !15628)
!15689 = !DILocation(line: 1138, column: 13, scope: !15628)
!15690 = !DILocation(line: 1138, column: 11, scope: !15628)
!15691 = !DILocation(line: 1139, column: 16, scope: !15628)
!15692 = !DILocation(line: 1139, column: 9, scope: !15628)
!15693 = !DILocation(line: 1140, column: 2, scope: !15628)
!15694 = !DILocation(line: 1142, column: 11, scope: !15695)
!15695 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 1141, column: 7)
!15696 = !DILocation(line: 1142, column: 17, scope: !15695)
!15697 = !DILocation(line: 1142, column: 9, scope: !15695)
!15698 = !DILocation(line: 1143, column: 26, scope: !15695)
!15699 = !DILocation(line: 1143, column: 32, scope: !15695)
!15700 = !DILocation(line: 1143, column: 24, scope: !15695)
!15701 = !DILocation(line: 1143, column: 3, scope: !15695)
!15702 = !DILocation(line: 1145, column: 7, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 1145, column: 7)
!15704 = !DILocation(line: 1145, column: 13, scope: !15703)
!15705 = !DILocation(line: 1145, column: 19, scope: !15703)
!15706 = !DILocation(line: 1145, column: 7, scope: !15695)
!15707 = !DILocation(line: 1146, column: 9, scope: !15703)
!15708 = !DILocation(line: 1146, column: 7, scope: !15703)
!15709 = !DILocation(line: 1146, column: 4, scope: !15703)
!15710 = !DILocation(line: 1148, column: 30, scope: !15703)
!15711 = !DILocation(line: 1148, column: 34, scope: !15703)
!15712 = !DILocation(line: 1148, column: 23, scope: !15703)
!15713 = !DILocation(line: 1148, column: 8, scope: !15703)
!15714 = !DILocation(line: 1148, column: 6, scope: !15703)
!15715 = !DILocation(line: 1151, column: 7, scope: !15716)
!15716 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 1151, column: 7)
!15717 = !DILocation(line: 1151, column: 12, scope: !15716)
!15718 = !DILocation(line: 1151, column: 7, scope: !15695)
!15719 = !DILocation(line: 1152, column: 23, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15716, file: !3, line: 1151, column: 31)
!15721 = !DILocation(line: 1152, column: 4, scope: !15720)
!15722 = !DILocation(line: 1153, column: 3, scope: !15720)
!15723 = !DILocation(line: 1156, column: 30, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 1156, column: 7)
!15725 = !DILocation(line: 1156, column: 34, scope: !15724)
!15726 = !DILocation(line: 1156, column: 8, scope: !15724)
!15727 = !DILocation(line: 1156, column: 7, scope: !15695)
!15728 = !DILocation(line: 1157, column: 22, scope: !15724)
!15729 = !DILocation(line: 1157, column: 70, scope: !15724)
!15730 = !DILocation(line: 1157, column: 46, scope: !15724)
!15731 = !DILocation(line: 1157, column: 4, scope: !15724)
!15732 = !DILocation(line: 1159, column: 7, scope: !15733)
!15733 = distinct !DILexicalBlock(scope: !15695, file: !3, line: 1159, column: 7)
!15734 = !DILocation(line: 1159, column: 12, scope: !15733)
!15735 = !DILocation(line: 1159, column: 7, scope: !15695)
!15736 = !DILocalVariable(name: "mv", scope: !15737, file: !3, line: 1160, type: !669)
!15737 = distinct !DILexicalBlock(scope: !15733, file: !3, line: 1159, column: 31)
!15738 = !DILocation(line: 1160, column: 11, scope: !15737)
!15739 = !DILocation(line: 1160, column: 15, scope: !15737)
!15740 = !DILocation(line: 1160, column: 19, scope: !15737)
!15741 = !DILocation(line: 1160, column: 36, scope: !15737)
!15742 = !DILocalVariable(name: "orcodata", scope: !15737, file: !3, line: 1161, type: !2860)
!15743 = !DILocation(line: 1161, column: 12, scope: !15737)
!15744 = !DILocation(line: 1161, column: 27, scope: !15737)
!15745 = !DILocation(line: 1161, column: 31, scope: !15737)
!15746 = !DILocation(line: 1161, column: 48, scope: !15737)
!15747 = !DILocalVariable(name: "totvert", scope: !15737, file: !3, line: 1162, type: !260)
!15748 = !DILocation(line: 1162, column: 8, scope: !15737)
!15749 = !DILocation(line: 1162, column: 18, scope: !15737)
!15750 = !DILocation(line: 1162, column: 22, scope: !15737)
!15751 = !DILocation(line: 1162, column: 34, scope: !15737)
!15752 = !DILocation(line: 1164, column: 24, scope: !15737)
!15753 = !DILocation(line: 1164, column: 9, scope: !15737)
!15754 = !DILocation(line: 1164, column: 8, scope: !15737)
!15755 = !DILocation(line: 1166, column: 10, scope: !15756)
!15756 = distinct !DILexicalBlock(scope: !15737, file: !3, line: 1166, column: 4)
!15757 = !DILocation(line: 1166, column: 9, scope: !15756)
!15758 = !DILocation(line: 1166, column: 14, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15756, file: !3, line: 1166, column: 4)
!15760 = !DILocation(line: 1166, column: 16, scope: !15759)
!15761 = !DILocation(line: 1166, column: 15, scope: !15759)
!15762 = !DILocation(line: 1166, column: 4, scope: !15756)
!15763 = !DILocation(line: 1167, column: 9, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15765, file: !3, line: 1167, column: 9)
!15765 = distinct !DILexicalBlock(scope: !15759, file: !3, line: 1166, column: 30)
!15766 = !DILocation(line: 1167, column: 9, scope: !15765)
!15767 = !DILocation(line: 1168, column: 17, scope: !15768)
!15768 = distinct !DILexicalBlock(scope: !15764, file: !3, line: 1167, column: 19)
!15769 = !DILocation(line: 1168, column: 20, scope: !15768)
!15770 = !DILocation(line: 1168, column: 29, scope: !15768)
!15771 = !DILocation(line: 1168, column: 6, scope: !15768)
!15772 = !DILocation(line: 1169, column: 43, scope: !15768)
!15773 = !DILocation(line: 1169, column: 47, scope: !15768)
!15774 = !DILocation(line: 1169, column: 36, scope: !15768)
!15775 = !DILocation(line: 1169, column: 6, scope: !15768)
!15776 = !DILocation(line: 1170, column: 5, scope: !15768)
!15777 = !DILocation(line: 1172, column: 17, scope: !15764)
!15778 = !DILocation(line: 1172, column: 20, scope: !15764)
!15779 = !DILocation(line: 1172, column: 23, scope: !15764)
!15780 = !DILocation(line: 1172, column: 26, scope: !15764)
!15781 = !DILocation(line: 1172, column: 6, scope: !15764)
!15782 = !DILocation(line: 1173, column: 23, scope: !15765)
!15783 = !DILocation(line: 1173, column: 29, scope: !15765)
!15784 = !DILocation(line: 1173, column: 32, scope: !15765)
!15785 = !DILocation(line: 1173, column: 5, scope: !15765)
!15786 = !DILocation(line: 1174, column: 4, scope: !15765)
!15787 = !DILocation(line: 1166, column: 26, scope: !15759)
!15788 = !DILocation(line: 1166, column: 4, scope: !15759)
!15789 = distinct !{!15789, !15762, !15790}
!15790 = !DILocation(line: 1174, column: 4, scope: !15756)
!15791 = !DILocation(line: 1176, column: 23, scope: !15737)
!15792 = !DILocation(line: 1176, column: 4, scope: !15737)
!15793 = !DILocation(line: 1177, column: 3, scope: !15737)
!15794 = !DILocation(line: 1181, column: 13, scope: !15450)
!15795 = !DILocation(line: 1181, column: 18, scope: !15450)
!15796 = !DILocation(line: 1181, column: 12, scope: !15450)
!15797 = !DILocation(line: 1181, column: 39, scope: !15450)
!15798 = !DILocation(line: 1181, column: 43, scope: !15450)
!15799 = !DILocation(line: 1181, column: 55, scope: !15450)
!15800 = !DILocation(line: 1181, column: 61, scope: !15450)
!15801 = !DILocation(line: 1181, column: 65, scope: !15450)
!15802 = !DILocation(line: 1181, column: 81, scope: !15450)
!15803 = !DILocation(line: 1181, column: 10, scope: !15450)
!15804 = !DILocation(line: 1183, column: 6, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1183, column: 6)
!15806 = !DILocation(line: 1183, column: 14, scope: !15805)
!15807 = !DILocation(line: 1183, column: 6, scope: !15450)
!15808 = !DILocation(line: 1184, column: 22, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15805, file: !3, line: 1183, column: 20)
!15810 = !DILocation(line: 1184, column: 29, scope: !15809)
!15811 = !DILocation(line: 1184, column: 35, scope: !15809)
!15812 = !DILocation(line: 1184, column: 3, scope: !15809)
!15813 = !DILocation(line: 1186, column: 9, scope: !15814)
!15814 = distinct !DILexicalBlock(scope: !15809, file: !3, line: 1186, column: 7)
!15815 = !DILocation(line: 1186, column: 15, scope: !15814)
!15816 = !DILocation(line: 1186, column: 7, scope: !15809)
!15817 = !DILocation(line: 1187, column: 12, scope: !15814)
!15818 = !DILocation(line: 1187, column: 4, scope: !15814)
!15819 = !DILocation(line: 1189, column: 7, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15809, file: !3, line: 1189, column: 7)
!15821 = !DILocation(line: 1189, column: 13, scope: !15820)
!15822 = !DILocation(line: 1189, column: 10, scope: !15820)
!15823 = !DILocation(line: 1189, column: 7, scope: !15809)
!15824 = !DILocation(line: 1189, column: 22, scope: !15820)
!15825 = !DILocation(line: 1189, column: 26, scope: !15820)
!15826 = !DILocation(line: 1189, column: 34, scope: !15820)
!15827 = !DILocation(line: 1191, column: 19, scope: !15809)
!15828 = !DILocation(line: 1191, column: 3, scope: !15809)
!15829 = !DILocation(line: 1193, column: 3, scope: !15809)
!15830 = !DILocation(line: 1196, column: 19, scope: !15450)
!15831 = !DILocation(line: 1196, column: 45, scope: !15450)
!15832 = !DILocation(line: 1196, column: 44, scope: !15450)
!15833 = !DILocation(line: 1196, column: 17, scope: !15450)
!15834 = !DILocation(line: 1197, column: 20, scope: !15450)
!15835 = !DILocation(line: 1197, column: 44, scope: !15450)
!15836 = !DILocation(line: 1197, column: 43, scope: !15450)
!15837 = !DILocation(line: 1197, column: 18, scope: !15450)
!15838 = !DILocation(line: 1198, column: 17, scope: !15450)
!15839 = !DILocation(line: 1198, column: 44, scope: !15450)
!15840 = !DILocation(line: 1198, column: 51, scope: !15450)
!15841 = !DILocation(line: 1198, column: 43, scope: !15450)
!15842 = !DILocation(line: 1198, column: 42, scope: !15450)
!15843 = !DILocation(line: 1198, column: 15, scope: !15450)
!15844 = !DILocation(line: 1199, column: 18, scope: !15450)
!15845 = !DILocation(line: 1199, column: 44, scope: !15450)
!15846 = !DILocation(line: 1199, column: 43, scope: !15450)
!15847 = !DILocation(line: 1199, column: 16, scope: !15450)
!15848 = !DILocation(line: 1202, column: 7, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1202, column: 6)
!15850 = !DILocation(line: 1202, column: 13, scope: !15849)
!15851 = !DILocation(line: 1202, column: 17, scope: !15849)
!15852 = !DILocation(line: 1202, column: 30, scope: !15849)
!15853 = !DILocation(line: 1202, column: 33, scope: !15849)
!15854 = !DILocation(line: 1202, column: 43, scope: !15849)
!15855 = !DILocation(line: 1202, column: 46, scope: !15849)
!15856 = !DILocation(line: 1202, column: 51, scope: !15849)
!15857 = !DILocation(line: 1202, column: 6, scope: !15450)
!15858 = !DILocalVariable(name: "v1", scope: !15859, file: !3, line: 1203, type: !669)
!15859 = distinct !DILexicalBlock(scope: !15849, file: !3, line: 1202, column: 70)
!15860 = !DILocation(line: 1203, column: 10, scope: !15859)
!15861 = !DILocalVariable(name: "v2", scope: !15859, file: !3, line: 1203, type: !669)
!15862 = !DILocation(line: 1203, column: 15, scope: !15859)
!15863 = !DILocalVariable(name: "v3", scope: !15859, file: !3, line: 1203, type: !669)
!15864 = !DILocation(line: 1203, column: 20, scope: !15859)
!15865 = !DILocalVariable(name: "v4", scope: !15859, file: !3, line: 1203, type: !669)
!15866 = !DILocation(line: 1203, column: 25, scope: !15859)
!15867 = !DILocalVariable(name: "totarea", scope: !15859, file: !3, line: 1204, type: !341)
!15868 = !DILocation(line: 1204, column: 9, scope: !15859)
!15869 = !DILocalVariable(name: "co1", scope: !15859, file: !3, line: 1204, type: !563)
!15870 = !DILocation(line: 1204, column: 22, scope: !15859)
!15871 = !DILocalVariable(name: "co2", scope: !15859, file: !3, line: 1204, type: !563)
!15872 = !DILocation(line: 1204, column: 30, scope: !15859)
!15873 = !DILocalVariable(name: "co3", scope: !15859, file: !3, line: 1204, type: !563)
!15874 = !DILocation(line: 1204, column: 38, scope: !15859)
!15875 = !DILocalVariable(name: "co4", scope: !15859, file: !3, line: 1204, type: !563)
!15876 = !DILocation(line: 1204, column: 46, scope: !15859)
!15877 = !DILocalVariable(name: "orcodata", scope: !15859, file: !3, line: 1205, type: !2860)
!15878 = !DILocation(line: 1205, column: 11, scope: !15859)
!15879 = !DILocation(line: 1207, column: 13, scope: !15859)
!15880 = !DILocation(line: 1207, column: 17, scope: !15859)
!15881 = !DILocation(line: 1207, column: 34, scope: !15859)
!15882 = !DILocation(line: 1207, column: 11, scope: !15859)
!15883 = !DILocation(line: 1209, column: 9, scope: !15884)
!15884 = distinct !DILexicalBlock(scope: !15859, file: !3, line: 1209, column: 3)
!15885 = !DILocation(line: 1209, column: 8, scope: !15884)
!15886 = !DILocation(line: 1209, column: 13, scope: !15887)
!15887 = distinct !DILexicalBlock(scope: !15884, file: !3, line: 1209, column: 3)
!15888 = !DILocation(line: 1209, column: 15, scope: !15887)
!15889 = !DILocation(line: 1209, column: 14, scope: !15887)
!15890 = !DILocation(line: 1209, column: 3, scope: !15884)
!15891 = !DILocalVariable(name: "mf", scope: !15892, file: !3, line: 1210, type: !7216)
!15892 = distinct !DILexicalBlock(scope: !15887, file: !3, line: 1209, column: 29)
!15893 = !DILocation(line: 1210, column: 11, scope: !15892)
!15894 = !DILocation(line: 1210, column: 14, scope: !15892)
!15895 = !DILocation(line: 1210, column: 18, scope: !15892)
!15896 = !DILocation(line: 1210, column: 34, scope: !15892)
!15897 = !DILocation(line: 1210, column: 37, scope: !15892)
!15898 = !DILocation(line: 1212, column: 8, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !15892, file: !3, line: 1212, column: 8)
!15900 = !DILocation(line: 1212, column: 8, scope: !15892)
!15901 = !DILocation(line: 1213, column: 16, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15899, file: !3, line: 1212, column: 18)
!15903 = !DILocation(line: 1213, column: 21, scope: !15902)
!15904 = !DILocation(line: 1213, column: 30, scope: !15902)
!15905 = !DILocation(line: 1213, column: 34, scope: !15902)
!15906 = !DILocation(line: 1213, column: 5, scope: !15902)
!15907 = !DILocation(line: 1214, column: 16, scope: !15902)
!15908 = !DILocation(line: 1214, column: 21, scope: !15902)
!15909 = !DILocation(line: 1214, column: 30, scope: !15902)
!15910 = !DILocation(line: 1214, column: 34, scope: !15902)
!15911 = !DILocation(line: 1214, column: 5, scope: !15902)
!15912 = !DILocation(line: 1215, column: 16, scope: !15902)
!15913 = !DILocation(line: 1215, column: 21, scope: !15902)
!15914 = !DILocation(line: 1215, column: 30, scope: !15902)
!15915 = !DILocation(line: 1215, column: 34, scope: !15902)
!15916 = !DILocation(line: 1215, column: 5, scope: !15902)
!15917 = !DILocation(line: 1216, column: 42, scope: !15902)
!15918 = !DILocation(line: 1216, column: 46, scope: !15902)
!15919 = !DILocation(line: 1216, column: 35, scope: !15902)
!15920 = !DILocation(line: 1216, column: 5, scope: !15902)
!15921 = !DILocation(line: 1217, column: 42, scope: !15902)
!15922 = !DILocation(line: 1217, column: 46, scope: !15902)
!15923 = !DILocation(line: 1217, column: 35, scope: !15902)
!15924 = !DILocation(line: 1217, column: 5, scope: !15902)
!15925 = !DILocation(line: 1218, column: 42, scope: !15902)
!15926 = !DILocation(line: 1218, column: 46, scope: !15902)
!15927 = !DILocation(line: 1218, column: 35, scope: !15902)
!15928 = !DILocation(line: 1218, column: 5, scope: !15902)
!15929 = !DILocation(line: 1219, column: 9, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15902, file: !3, line: 1219, column: 9)
!15931 = !DILocation(line: 1219, column: 13, scope: !15930)
!15932 = !DILocation(line: 1219, column: 9, scope: !15902)
!15933 = !DILocation(line: 1220, column: 17, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15930, file: !3, line: 1219, column: 17)
!15935 = !DILocation(line: 1220, column: 22, scope: !15934)
!15936 = !DILocation(line: 1220, column: 31, scope: !15934)
!15937 = !DILocation(line: 1220, column: 35, scope: !15934)
!15938 = !DILocation(line: 1220, column: 6, scope: !15934)
!15939 = !DILocation(line: 1221, column: 43, scope: !15934)
!15940 = !DILocation(line: 1221, column: 47, scope: !15934)
!15941 = !DILocation(line: 1221, column: 36, scope: !15934)
!15942 = !DILocation(line: 1221, column: 6, scope: !15934)
!15943 = !DILocation(line: 1222, column: 5, scope: !15934)
!15944 = !DILocation(line: 1223, column: 4, scope: !15902)
!15945 = !DILocation(line: 1225, column: 17, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15899, file: !3, line: 1224, column: 9)
!15947 = !DILocation(line: 1225, column: 21, scope: !15946)
!15948 = !DILocation(line: 1225, column: 33, scope: !15946)
!15949 = !DILocation(line: 1225, column: 36, scope: !15946)
!15950 = !DILocation(line: 1225, column: 40, scope: !15946)
!15951 = !DILocation(line: 1225, column: 9, scope: !15946)
!15952 = !DILocation(line: 1225, column: 7, scope: !15946)
!15953 = !DILocation(line: 1226, column: 17, scope: !15946)
!15954 = !DILocation(line: 1226, column: 21, scope: !15946)
!15955 = !DILocation(line: 1226, column: 33, scope: !15946)
!15956 = !DILocation(line: 1226, column: 36, scope: !15946)
!15957 = !DILocation(line: 1226, column: 40, scope: !15946)
!15958 = !DILocation(line: 1226, column: 9, scope: !15946)
!15959 = !DILocation(line: 1226, column: 7, scope: !15946)
!15960 = !DILocation(line: 1227, column: 17, scope: !15946)
!15961 = !DILocation(line: 1227, column: 21, scope: !15946)
!15962 = !DILocation(line: 1227, column: 33, scope: !15946)
!15963 = !DILocation(line: 1227, column: 36, scope: !15946)
!15964 = !DILocation(line: 1227, column: 40, scope: !15946)
!15965 = !DILocation(line: 1227, column: 9, scope: !15946)
!15966 = !DILocation(line: 1227, column: 7, scope: !15946)
!15967 = !DILocation(line: 1228, column: 16, scope: !15946)
!15968 = !DILocation(line: 1228, column: 21, scope: !15946)
!15969 = !DILocation(line: 1228, column: 25, scope: !15946)
!15970 = !DILocation(line: 1228, column: 5, scope: !15946)
!15971 = !DILocation(line: 1229, column: 16, scope: !15946)
!15972 = !DILocation(line: 1229, column: 21, scope: !15946)
!15973 = !DILocation(line: 1229, column: 25, scope: !15946)
!15974 = !DILocation(line: 1229, column: 5, scope: !15946)
!15975 = !DILocation(line: 1230, column: 16, scope: !15946)
!15976 = !DILocation(line: 1230, column: 21, scope: !15946)
!15977 = !DILocation(line: 1230, column: 25, scope: !15946)
!15978 = !DILocation(line: 1230, column: 5, scope: !15946)
!15979 = !DILocation(line: 1231, column: 9, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15946, file: !3, line: 1231, column: 9)
!15981 = !DILocation(line: 1231, column: 13, scope: !15980)
!15982 = !DILocation(line: 1231, column: 9, scope: !15946)
!15983 = !DILocation(line: 1232, column: 18, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !15980, file: !3, line: 1231, column: 17)
!15985 = !DILocation(line: 1232, column: 22, scope: !15984)
!15986 = !DILocation(line: 1232, column: 34, scope: !15984)
!15987 = !DILocation(line: 1232, column: 37, scope: !15984)
!15988 = !DILocation(line: 1232, column: 41, scope: !15984)
!15989 = !DILocation(line: 1232, column: 10, scope: !15984)
!15990 = !DILocation(line: 1232, column: 8, scope: !15984)
!15991 = !DILocation(line: 1233, column: 17, scope: !15984)
!15992 = !DILocation(line: 1233, column: 22, scope: !15984)
!15993 = !DILocation(line: 1233, column: 26, scope: !15984)
!15994 = !DILocation(line: 1233, column: 6, scope: !15984)
!15995 = !DILocation(line: 1234, column: 5, scope: !15984)
!15996 = !DILocation(line: 1237, column: 10, scope: !15892)
!15997 = !DILocation(line: 1237, column: 14, scope: !15892)
!15998 = !DILocation(line: 1237, column: 32, scope: !15892)
!15999 = !DILocation(line: 1237, column: 37, scope: !15892)
!16000 = !DILocation(line: 1237, column: 42, scope: !15892)
!16001 = !DILocation(line: 1237, column: 47, scope: !15892)
!16002 = !DILocation(line: 1237, column: 19, scope: !15892)
!16003 = !DILocation(line: 1237, column: 66, scope: !15892)
!16004 = !DILocation(line: 1237, column: 71, scope: !15892)
!16005 = !DILocation(line: 1237, column: 76, scope: !15892)
!16006 = !DILocation(line: 1237, column: 54, scope: !15892)
!16007 = !DILocation(line: 1237, column: 8, scope: !15892)
!16008 = !DILocation(line: 1239, column: 8, scope: !16009)
!16009 = distinct !DILexicalBlock(scope: !15892, file: !3, line: 1239, column: 8)
!16010 = !DILocation(line: 1239, column: 14, scope: !16009)
!16011 = !DILocation(line: 1239, column: 12, scope: !16009)
!16012 = !DILocation(line: 1239, column: 8, scope: !15892)
!16013 = !DILocation(line: 1240, column: 17, scope: !16009)
!16014 = !DILocation(line: 1240, column: 15, scope: !16009)
!16015 = !DILocation(line: 1240, column: 5, scope: !16009)
!16016 = !DILocation(line: 1242, column: 24, scope: !15892)
!16017 = !DILocation(line: 1242, column: 4, scope: !15892)
!16018 = !DILocation(line: 1242, column: 19, scope: !15892)
!16019 = !DILocation(line: 1242, column: 22, scope: !15892)
!16020 = !DILocation(line: 1243, column: 15, scope: !15892)
!16021 = !DILocation(line: 1243, column: 12, scope: !15892)
!16022 = !DILocation(line: 1244, column: 3, scope: !15892)
!16023 = !DILocation(line: 1209, column: 25, scope: !15887)
!16024 = !DILocation(line: 1209, column: 3, scope: !15887)
!16025 = distinct !{!16025, !15890, !16026}
!16026 = !DILocation(line: 1244, column: 3, scope: !15884)
!16027 = !DILocation(line: 1246, column: 9, scope: !16028)
!16028 = distinct !DILexicalBlock(scope: !15859, file: !3, line: 1246, column: 3)
!16029 = !DILocation(line: 1246, column: 8, scope: !16028)
!16030 = !DILocation(line: 1246, column: 13, scope: !16031)
!16031 = distinct !DILexicalBlock(scope: !16028, file: !3, line: 1246, column: 3)
!16032 = !DILocation(line: 1246, column: 15, scope: !16031)
!16033 = !DILocation(line: 1246, column: 14, scope: !16031)
!16034 = !DILocation(line: 1246, column: 3, scope: !16028)
!16035 = !DILocation(line: 1247, column: 25, scope: !16031)
!16036 = !DILocation(line: 1247, column: 4, scope: !16031)
!16037 = !DILocation(line: 1247, column: 19, scope: !16031)
!16038 = !DILocation(line: 1247, column: 22, scope: !16031)
!16039 = !DILocation(line: 1246, column: 25, scope: !16031)
!16040 = !DILocation(line: 1246, column: 3, scope: !16031)
!16041 = distinct !{!16041, !16034, !16042}
!16042 = !DILocation(line: 1247, column: 25, scope: !16028)
!16043 = !DILocation(line: 1249, column: 16, scope: !15859)
!16044 = !DILocation(line: 1249, column: 13, scope: !15859)
!16045 = !DILocation(line: 1250, column: 2, scope: !15859)
!16046 = !DILocalVariable(name: "min", scope: !16047, file: !3, line: 1252, type: !341)
!16047 = distinct !DILexicalBlock(scope: !15849, file: !3, line: 1251, column: 7)
!16048 = !DILocation(line: 1252, column: 9, scope: !16047)
!16049 = !DILocation(line: 1252, column: 26, scope: !16047)
!16050 = !DILocation(line: 1252, column: 18, scope: !16047)
!16051 = !DILocation(line: 1252, column: 17, scope: !16047)
!16052 = !DILocation(line: 1253, column: 9, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16047, file: !3, line: 1253, column: 3)
!16054 = !DILocation(line: 1253, column: 8, scope: !16053)
!16055 = !DILocation(line: 1253, column: 13, scope: !16056)
!16056 = distinct !DILexicalBlock(scope: !16053, file: !3, line: 1253, column: 3)
!16057 = !DILocation(line: 1253, column: 15, scope: !16056)
!16058 = !DILocation(line: 1253, column: 14, scope: !16056)
!16059 = !DILocation(line: 1253, column: 3, scope: !16053)
!16060 = !DILocation(line: 1254, column: 22, scope: !16056)
!16061 = !DILocation(line: 1254, column: 4, scope: !16056)
!16062 = !DILocation(line: 1254, column: 19, scope: !16056)
!16063 = !DILocation(line: 1254, column: 21, scope: !16056)
!16064 = !DILocation(line: 1253, column: 25, scope: !16056)
!16065 = !DILocation(line: 1253, column: 3, scope: !16056)
!16066 = distinct !{!16066, !16059, !16067}
!16067 = !DILocation(line: 1254, column: 22, scope: !16053)
!16068 = !DILocation(line: 1255, column: 13, scope: !16047)
!16069 = !DILocation(line: 1255, column: 12, scope: !16047)
!16070 = !DILocation(line: 1259, column: 30, scope: !15450)
!16071 = !DILocation(line: 1259, column: 33, scope: !15450)
!16072 = !DILocation(line: 1259, column: 12, scope: !15450)
!16073 = !DILocation(line: 1259, column: 10, scope: !15450)
!16074 = !DILocation(line: 1261, column: 6, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1261, column: 6)
!16076 = !DILocation(line: 1261, column: 6, scope: !15450)
!16077 = !DILocation(line: 1262, column: 7, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 1262, column: 7)
!16079 = distinct !DILexicalBlock(scope: !16075, file: !3, line: 1261, column: 15)
!16080 = !DILocation(line: 1262, column: 11, scope: !16078)
!16081 = !DILocation(line: 1262, column: 7, scope: !16079)
!16082 = !DILocation(line: 1263, column: 10, scope: !16083)
!16083 = distinct !DILexicalBlock(scope: !16084, file: !3, line: 1263, column: 4)
!16084 = distinct !DILexicalBlock(scope: !16078, file: !3, line: 1262, column: 29)
!16085 = !DILocation(line: 1263, column: 9, scope: !16083)
!16086 = !DILocation(line: 1263, column: 13, scope: !16087)
!16087 = distinct !DILexicalBlock(scope: !16083, file: !3, line: 1263, column: 4)
!16088 = !DILocation(line: 1263, column: 15, scope: !16087)
!16089 = !DILocation(line: 1263, column: 14, scope: !16087)
!16090 = !DILocation(line: 1263, column: 4, scope: !16083)
!16091 = !DILocation(line: 1264, column: 24, scope: !16087)
!16092 = !DILocation(line: 1264, column: 32, scope: !16087)
!16093 = !DILocation(line: 1264, column: 5, scope: !16087)
!16094 = !DILocation(line: 1264, column: 20, scope: !16087)
!16095 = !DILocation(line: 1264, column: 22, scope: !16087)
!16096 = !DILocation(line: 1263, column: 25, scope: !16087)
!16097 = !DILocation(line: 1263, column: 4, scope: !16087)
!16098 = distinct !{!16098, !16090, !16099}
!16099 = !DILocation(line: 1264, column: 33, scope: !16083)
!16100 = !DILocation(line: 1265, column: 3, scope: !16084)
!16101 = !DILocation(line: 1267, column: 10, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16103, file: !3, line: 1267, column: 4)
!16103 = distinct !DILexicalBlock(scope: !16078, file: !3, line: 1266, column: 8)
!16104 = !DILocation(line: 1267, column: 9, scope: !16102)
!16105 = !DILocation(line: 1267, column: 13, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16102, file: !3, line: 1267, column: 4)
!16107 = !DILocation(line: 1267, column: 15, scope: !16106)
!16108 = !DILocation(line: 1267, column: 14, scope: !16106)
!16109 = !DILocation(line: 1267, column: 4, scope: !16102)
!16110 = !DILocalVariable(name: "mf", scope: !16111, file: !3, line: 1268, type: !7216)
!16111 = distinct !DILexicalBlock(scope: !16106, file: !3, line: 1267, column: 29)
!16112 = !DILocation(line: 1268, column: 12, scope: !16111)
!16113 = !DILocation(line: 1268, column: 15, scope: !16111)
!16114 = !DILocation(line: 1268, column: 19, scope: !16111)
!16115 = !DILocation(line: 1268, column: 35, scope: !16111)
!16116 = !DILocation(line: 1268, column: 38, scope: !16111)
!16117 = !DILocation(line: 1269, column: 15, scope: !16111)
!16118 = !DILocation(line: 1269, column: 23, scope: !16111)
!16119 = !DILocation(line: 1269, column: 27, scope: !16111)
!16120 = !DILocation(line: 1269, column: 33, scope: !16111)
!16121 = !DILocation(line: 1269, column: 41, scope: !16111)
!16122 = !DILocation(line: 1269, column: 45, scope: !16111)
!16123 = !DILocation(line: 1269, column: 31, scope: !16111)
!16124 = !DILocation(line: 1269, column: 51, scope: !16111)
!16125 = !DILocation(line: 1269, column: 59, scope: !16111)
!16126 = !DILocation(line: 1269, column: 63, scope: !16111)
!16127 = !DILocation(line: 1269, column: 49, scope: !16111)
!16128 = !DILocation(line: 1269, column: 13, scope: !16111)
!16129 = !DILocation(line: 1271, column: 9, scope: !16130)
!16130 = distinct !DILexicalBlock(scope: !16111, file: !3, line: 1271, column: 9)
!16131 = !DILocation(line: 1271, column: 13, scope: !16130)
!16132 = !DILocation(line: 1271, column: 9, scope: !16111)
!16133 = !DILocation(line: 1272, column: 17, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16130, file: !3, line: 1271, column: 17)
!16135 = !DILocation(line: 1272, column: 25, scope: !16134)
!16136 = !DILocation(line: 1272, column: 29, scope: !16134)
!16137 = !DILocation(line: 1272, column: 14, scope: !16134)
!16138 = !DILocation(line: 1273, column: 14, scope: !16134)
!16139 = !DILocation(line: 1274, column: 5, scope: !16134)
!16140 = !DILocation(line: 1276, column: 14, scope: !16141)
!16141 = distinct !DILexicalBlock(scope: !16130, file: !3, line: 1275, column: 10)
!16142 = !DILocation(line: 1279, column: 24, scope: !16111)
!16143 = !DILocation(line: 1279, column: 5, scope: !16111)
!16144 = !DILocation(line: 1279, column: 20, scope: !16111)
!16145 = !DILocation(line: 1279, column: 22, scope: !16111)
!16146 = !DILocation(line: 1280, column: 4, scope: !16111)
!16147 = !DILocation(line: 1267, column: 25, scope: !16106)
!16148 = !DILocation(line: 1267, column: 4, scope: !16106)
!16149 = distinct !{!16149, !16109, !16150}
!16150 = !DILocation(line: 1280, column: 4, scope: !16102)
!16151 = !DILocation(line: 1282, column: 3, scope: !16079)
!16152 = !DILocation(line: 1282, column: 13, scope: !16079)
!16153 = !DILocation(line: 1283, column: 2, scope: !16079)
!16154 = !DILocation(line: 1286, column: 11, scope: !15450)
!16155 = !DILocation(line: 1287, column: 8, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1287, column: 2)
!16157 = !DILocation(line: 1287, column: 7, scope: !16156)
!16158 = !DILocation(line: 1287, column: 11, scope: !16159)
!16159 = distinct !DILexicalBlock(scope: !16156, file: !3, line: 1287, column: 2)
!16160 = !DILocation(line: 1287, column: 13, scope: !16159)
!16161 = !DILocation(line: 1287, column: 12, scope: !16159)
!16162 = !DILocation(line: 1287, column: 2, scope: !16156)
!16163 = !DILocation(line: 1288, column: 16, scope: !16159)
!16164 = !DILocation(line: 1288, column: 31, scope: !16159)
!16165 = !DILocation(line: 1288, column: 13, scope: !16159)
!16166 = !DILocation(line: 1288, column: 3, scope: !16159)
!16167 = !DILocation(line: 1287, column: 23, scope: !16159)
!16168 = !DILocation(line: 1287, column: 2, scope: !16159)
!16169 = distinct !{!16169, !16162, !16170}
!16170 = !DILocation(line: 1288, column: 32, scope: !16156)
!16171 = !DILocation(line: 1290, column: 19, scope: !15450)
!16172 = !DILocation(line: 1290, column: 29, scope: !15450)
!16173 = !DILocation(line: 1290, column: 41, scope: !15450)
!16174 = !DILocation(line: 1290, column: 40, scope: !15450)
!16175 = !DILocation(line: 1290, column: 16, scope: !15450)
!16176 = !DILocation(line: 1293, column: 2, scope: !15450)
!16177 = !DILocation(line: 1293, column: 17, scope: !15450)
!16178 = !DILocation(line: 1294, column: 8, scope: !16179)
!16179 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1294, column: 2)
!16180 = !DILocation(line: 1294, column: 7, scope: !16179)
!16181 = !DILocation(line: 1294, column: 12, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16179, file: !3, line: 1294, column: 2)
!16183 = !DILocation(line: 1294, column: 14, scope: !16182)
!16184 = !DILocation(line: 1294, column: 13, scope: !16182)
!16185 = !DILocation(line: 1294, column: 2, scope: !16179)
!16186 = !DILocation(line: 1295, column: 22, scope: !16182)
!16187 = !DILocation(line: 1295, column: 34, scope: !16182)
!16188 = !DILocation(line: 1295, column: 39, scope: !16182)
!16189 = !DILocation(line: 1295, column: 54, scope: !16182)
!16190 = !DILocation(line: 1295, column: 59, scope: !16182)
!16191 = !DILocation(line: 1295, column: 57, scope: !16182)
!16192 = !DILocation(line: 1295, column: 37, scope: !16182)
!16193 = !DILocation(line: 1295, column: 3, scope: !16182)
!16194 = !DILocation(line: 1295, column: 15, scope: !16182)
!16195 = !DILocation(line: 1295, column: 16, scope: !16182)
!16196 = !DILocation(line: 1295, column: 20, scope: !16182)
!16197 = !DILocation(line: 1294, column: 24, scope: !16182)
!16198 = !DILocation(line: 1294, column: 2, scope: !16182)
!16199 = distinct !{!16199, !16185, !16200}
!16200 = !DILocation(line: 1295, column: 59, scope: !16179)
!16201 = !DILocation(line: 1298, column: 7, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1298, column: 6)
!16203 = !DILocation(line: 1298, column: 13, scope: !16202)
!16204 = !DILocation(line: 1298, column: 17, scope: !16202)
!16205 = !DILocation(line: 1298, column: 30, scope: !16202)
!16206 = !DILocation(line: 1298, column: 34, scope: !16202)
!16207 = !DILocation(line: 1298, column: 40, scope: !16202)
!16208 = !DILocation(line: 1298, column: 53, scope: !16202)
!16209 = !DILocation(line: 1298, column: 6, scope: !15450)
!16210 = !DILocalVariable(name: "pos", scope: !16211, file: !3, line: 1299, type: !341)
!16211 = distinct !DILexicalBlock(scope: !16202, file: !3, line: 1298, column: 77)
!16212 = !DILocation(line: 1299, column: 9, scope: !16211)
!16213 = !DILocation(line: 1301, column: 9, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !16211, file: !3, line: 1301, column: 3)
!16215 = !DILocation(line: 1301, column: 8, scope: !16214)
!16216 = !DILocation(line: 1301, column: 13, scope: !16217)
!16217 = distinct !DILexicalBlock(scope: !16214, file: !3, line: 1301, column: 3)
!16218 = !DILocation(line: 1301, column: 15, scope: !16217)
!16219 = !DILocation(line: 1301, column: 14, scope: !16217)
!16220 = !DILocation(line: 1301, column: 3, scope: !16214)
!16221 = !DILocation(line: 1303, column: 9, scope: !16222)
!16222 = distinct !DILexicalBlock(scope: !16217, file: !3, line: 1301, column: 29)
!16223 = !DILocation(line: 1303, column: 23, scope: !16222)
!16224 = !DILocation(line: 1303, column: 35, scope: !16222)
!16225 = !DILocation(line: 1303, column: 21, scope: !16222)
!16226 = !DILocation(line: 1303, column: 7, scope: !16222)
!16227 = !DILocation(line: 1304, column: 51, scope: !16222)
!16228 = !DILocation(line: 1304, column: 64, scope: !16222)
!16229 = !DILocation(line: 1304, column: 73, scope: !16222)
!16230 = !DILocation(line: 1304, column: 26, scope: !16222)
!16231 = !DILocation(line: 1304, column: 4, scope: !16222)
!16232 = !DILocation(line: 1304, column: 21, scope: !16222)
!16233 = !DILocation(line: 1304, column: 24, scope: !16222)
!16234 = !DILocation(line: 1305, column: 26, scope: !16222)
!16235 = !DILocation(line: 1305, column: 4, scope: !16222)
!16236 = !DILocation(line: 1305, column: 21, scope: !16222)
!16237 = !DILocation(line: 1305, column: 24, scope: !16222)
!16238 = !DILocation(line: 1306, column: 41, scope: !16222)
!16239 = !DILocation(line: 1306, column: 4, scope: !16222)
!16240 = !DILocation(line: 1306, column: 18, scope: !16222)
!16241 = !DILocation(line: 1306, column: 35, scope: !16222)
!16242 = !DILocation(line: 1306, column: 39, scope: !16222)
!16243 = !DILocation(line: 1307, column: 3, scope: !16222)
!16244 = !DILocation(line: 1301, column: 25, scope: !16217)
!16245 = !DILocation(line: 1301, column: 3, scope: !16217)
!16246 = distinct !{!16246, !16220, !16247}
!16247 = !DILocation(line: 1307, column: 3, scope: !16214)
!16248 = !DILocation(line: 1308, column: 2, scope: !16211)
!16249 = !DILocalVariable(name: "step", scope: !16250, file: !3, line: 1310, type: !3242)
!16250 = distinct !DILexicalBlock(scope: !16202, file: !3, line: 1309, column: 7)
!16251 = !DILocation(line: 1310, column: 10, scope: !16250)
!16252 = !DILocalVariable(name: "pos", scope: !16250, file: !3, line: 1310, type: !3242)
!16253 = !DILocation(line: 1310, column: 16, scope: !16250)
!16254 = !DILocation(line: 1312, column: 10, scope: !16250)
!16255 = !DILocation(line: 1312, column: 18, scope: !16250)
!16256 = !DILocation(line: 1312, column: 9, scope: !16250)
!16257 = !DILocation(line: 1312, column: 43, scope: !16250)
!16258 = !DILocation(line: 1312, column: 35, scope: !16250)
!16259 = !DILocation(line: 1312, column: 34, scope: !16250)
!16260 = !DILocation(line: 1312, column: 7, scope: !16250)
!16261 = !DILocation(line: 1313, column: 6, scope: !16250)
!16262 = !DILocation(line: 1314, column: 4, scope: !16250)
!16263 = !DILocation(line: 1316, column: 9, scope: !16264)
!16264 = distinct !DILexicalBlock(scope: !16250, file: !3, line: 1316, column: 3)
!16265 = !DILocation(line: 1316, column: 8, scope: !16264)
!16266 = !DILocation(line: 1316, column: 13, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16264, file: !3, line: 1316, column: 3)
!16268 = !DILocation(line: 1316, column: 15, scope: !16267)
!16269 = !DILocation(line: 1316, column: 14, scope: !16267)
!16270 = !DILocation(line: 1316, column: 3, scope: !16264)
!16271 = !DILocation(line: 1317, column: 4, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16267, file: !3, line: 1316, column: 40)
!16273 = !DILocation(line: 1317, column: 12, scope: !16272)
!16274 = !DILocation(line: 1317, column: 16, scope: !16272)
!16275 = !DILocation(line: 1317, column: 14, scope: !16272)
!16276 = !DILocation(line: 1317, column: 25, scope: !16272)
!16277 = !DILocation(line: 1317, column: 29, scope: !16272)
!16278 = !DILocation(line: 1317, column: 43, scope: !16272)
!16279 = !DILocation(line: 1317, column: 55, scope: !16272)
!16280 = !DILocation(line: 1317, column: 57, scope: !16272)
!16281 = !DILocation(line: 1317, column: 35, scope: !16272)
!16282 = !DILocation(line: 1317, column: 33, scope: !16272)
!16283 = !DILocation(line: 0, scope: !16272)
!16284 = !DILocation(line: 1318, column: 6, scope: !16272)
!16285 = distinct !{!16285, !16271, !16284}
!16286 = !DILocation(line: 1320, column: 26, scope: !16272)
!16287 = !DILocation(line: 1320, column: 4, scope: !16272)
!16288 = !DILocation(line: 1320, column: 21, scope: !16272)
!16289 = !DILocation(line: 1320, column: 24, scope: !16272)
!16290 = !DILocation(line: 1323, column: 8, scope: !16291)
!16291 = distinct !DILexicalBlock(scope: !16272, file: !3, line: 1323, column: 8)
!16292 = !DILocation(line: 1323, column: 13, scope: !16291)
!16293 = !DILocation(line: 1323, column: 20, scope: !16291)
!16294 = !DILocation(line: 1323, column: 10, scope: !16291)
!16295 = !DILocation(line: 1323, column: 23, scope: !16291)
!16296 = !DILocation(line: 1323, column: 26, scope: !16291)
!16297 = !DILocation(line: 1323, column: 41, scope: !16291)
!16298 = !DILocation(line: 1323, column: 58, scope: !16291)
!16299 = !DILocation(line: 1323, column: 62, scope: !16291)
!16300 = !DILocation(line: 1323, column: 8, scope: !16272)
!16301 = !DILocation(line: 1324, column: 27, scope: !16291)
!16302 = !DILocation(line: 1324, column: 44, scope: !16291)
!16303 = !DILocation(line: 1324, column: 45, scope: !16291)
!16304 = !DILocation(line: 1324, column: 5, scope: !16291)
!16305 = !DILocation(line: 1324, column: 22, scope: !16291)
!16306 = !DILocation(line: 1324, column: 25, scope: !16291)
!16307 = !DILocation(line: 1326, column: 41, scope: !16272)
!16308 = !DILocation(line: 1326, column: 4, scope: !16272)
!16309 = !DILocation(line: 1326, column: 18, scope: !16272)
!16310 = !DILocation(line: 1326, column: 35, scope: !16272)
!16311 = !DILocation(line: 1326, column: 39, scope: !16272)
!16312 = !DILocation(line: 1327, column: 3, scope: !16272)
!16313 = !DILocation(line: 1316, column: 25, scope: !16267)
!16314 = !DILocation(line: 1316, column: 34, scope: !16267)
!16315 = !DILocation(line: 1316, column: 32, scope: !16267)
!16316 = !DILocation(line: 1316, column: 3, scope: !16267)
!16317 = distinct !{!16317, !16270, !16318}
!16318 = !DILocation(line: 1327, column: 3, scope: !16264)
!16319 = !DILocation(line: 1330, column: 2, scope: !15450)
!16320 = !DILocation(line: 1330, column: 12, scope: !15450)
!16321 = !DILocation(line: 1334, column: 6, scope: !16322)
!16322 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1334, column: 6)
!16323 = !DILocation(line: 1334, column: 12, scope: !16322)
!16324 = !DILocation(line: 1334, column: 17, scope: !16322)
!16325 = !DILocation(line: 1334, column: 30, scope: !16322)
!16326 = !DILocation(line: 1334, column: 35, scope: !16322)
!16327 = !DILocation(line: 1334, column: 41, scope: !16322)
!16328 = !DILocation(line: 1334, column: 50, scope: !16322)
!16329 = !DILocation(line: 1334, column: 69, scope: !16322)
!16330 = !DILocation(line: 1334, column: 72, scope: !16322)
!16331 = !DILocation(line: 1334, column: 78, scope: !16322)
!16332 = !DILocation(line: 1334, column: 85, scope: !16322)
!16333 = !DILocation(line: 1334, column: 6, scope: !15450)
!16334 = !DILocalVariable(name: "orig_index", scope: !16335, file: !3, line: 1335, type: !2797)
!16335 = distinct !DILexicalBlock(scope: !16322, file: !3, line: 1334, column: 94)
!16336 = !DILocation(line: 1335, column: 8, scope: !16335)
!16337 = !DILocation(line: 1337, column: 7, scope: !16338)
!16338 = distinct !DILexicalBlock(scope: !16335, file: !3, line: 1337, column: 7)
!16339 = !DILocation(line: 1337, column: 12, scope: !16338)
!16340 = !DILocation(line: 1337, column: 7, scope: !16335)
!16341 = !DILocation(line: 1338, column: 8, scope: !16342)
!16342 = distinct !DILexicalBlock(scope: !16343, file: !3, line: 1338, column: 8)
!16343 = distinct !DILexicalBlock(scope: !16338, file: !3, line: 1337, column: 31)
!16344 = !DILocation(line: 1338, column: 12, scope: !16342)
!16345 = !DILocation(line: 1338, column: 8, scope: !16343)
!16346 = !DILocation(line: 1339, column: 18, scope: !16342)
!16347 = !DILocation(line: 1339, column: 22, scope: !16342)
!16348 = !DILocation(line: 1339, column: 39, scope: !16342)
!16349 = !DILocation(line: 1339, column: 16, scope: !16342)
!16350 = !DILocation(line: 1339, column: 5, scope: !16342)
!16351 = !DILocation(line: 1340, column: 3, scope: !16343)
!16352 = !DILocation(line: 1342, column: 8, scope: !16353)
!16353 = distinct !DILexicalBlock(scope: !16354, file: !3, line: 1342, column: 8)
!16354 = distinct !DILexicalBlock(scope: !16338, file: !3, line: 1341, column: 8)
!16355 = !DILocation(line: 1342, column: 12, scope: !16353)
!16356 = !DILocation(line: 1342, column: 8, scope: !16354)
!16357 = !DILocation(line: 1343, column: 18, scope: !16353)
!16358 = !DILocation(line: 1343, column: 22, scope: !16353)
!16359 = !DILocation(line: 1343, column: 43, scope: !16353)
!16360 = !DILocation(line: 1343, column: 16, scope: !16353)
!16361 = !DILocation(line: 1343, column: 5, scope: !16353)
!16362 = !DILocation(line: 1346, column: 7, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !16335, file: !3, line: 1346, column: 7)
!16364 = !DILocation(line: 1346, column: 7, scope: !16335)
!16365 = !DILocation(line: 1347, column: 16, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 1346, column: 19)
!16367 = !DILocation(line: 1347, column: 34, scope: !16366)
!16368 = !DILocation(line: 1347, column: 87, scope: !16366)
!16369 = !DILocation(line: 1347, column: 4, scope: !16366)
!16370 = !DILocation(line: 1348, column: 3, scope: !16366)
!16371 = !DILocation(line: 1349, column: 2, scope: !16335)
!16372 = !DILocation(line: 1352, column: 6, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1352, column: 6)
!16374 = !DILocation(line: 1352, column: 11, scope: !16373)
!16375 = !DILocation(line: 1352, column: 28, scope: !16373)
!16376 = !DILocation(line: 1352, column: 31, scope: !16373)
!16377 = !DILocation(line: 1352, column: 6, scope: !15450)
!16378 = !DILocation(line: 1353, column: 13, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16373, file: !3, line: 1352, column: 75)
!16380 = !DILocation(line: 1353, column: 19, scope: !16379)
!16381 = !DILocation(line: 1353, column: 11, scope: !16379)
!16382 = !DILocation(line: 1355, column: 7, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16379, file: !3, line: 1355, column: 7)
!16384 = !DILocation(line: 1355, column: 16, scope: !16383)
!16385 = !DILocation(line: 1355, column: 7, scope: !16379)
!16386 = !DILocation(line: 1356, column: 14, scope: !16387)
!16387 = distinct !DILexicalBlock(scope: !16383, file: !3, line: 1355, column: 22)
!16388 = !DILocation(line: 1356, column: 22, scope: !16387)
!16389 = !DILocation(line: 1356, column: 21, scope: !16387)
!16390 = !DILocation(line: 1356, column: 12, scope: !16387)
!16391 = !DILocation(line: 1357, column: 8, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16387, file: !3, line: 1357, column: 8)
!16393 = !DILocation(line: 1357, column: 14, scope: !16392)
!16394 = !DILocation(line: 1357, column: 19, scope: !16392)
!16395 = !DILocation(line: 1357, column: 8, scope: !16387)
!16396 = !DILocation(line: 1357, column: 42, scope: !16392)
!16397 = !DILocation(line: 1357, column: 34, scope: !16392)
!16398 = !DILocation(line: 1358, column: 8, scope: !16399)
!16399 = distinct !DILexicalBlock(scope: !16387, file: !3, line: 1358, column: 8)
!16400 = !DILocation(line: 1358, column: 16, scope: !16399)
!16401 = !DILocation(line: 1358, column: 8, scope: !16387)
!16402 = !DILocation(line: 1358, column: 28, scope: !16399)
!16403 = !DILocation(line: 1358, column: 20, scope: !16399)
!16404 = !DILocation(line: 1359, column: 3, scope: !16387)
!16405 = !DILocation(line: 1361, column: 8, scope: !16379)
!16406 = !DILocation(line: 1361, column: 24, scope: !16379)
!16407 = !DILocation(line: 1361, column: 32, scope: !16379)
!16408 = !DILocation(line: 1361, column: 22, scope: !16379)
!16409 = !DILocation(line: 1361, column: 20, scope: !16379)
!16410 = !DILocation(line: 1361, column: 35, scope: !16379)
!16411 = !DILocation(line: 1361, column: 6, scope: !16379)
!16412 = !DILocation(line: 1366, column: 7, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16379, file: !3, line: 1366, column: 7)
!16414 = !DILocation(line: 1366, column: 16, scope: !16413)
!16415 = !DILocation(line: 1366, column: 7, scope: !16379)
!16416 = !DILocation(line: 1367, column: 16, scope: !16413)
!16417 = !DILocation(line: 1367, column: 21, scope: !16413)
!16418 = !DILocation(line: 1367, column: 31, scope: !16413)
!16419 = !DILocation(line: 1367, column: 37, scope: !16413)
!16420 = !DILocation(line: 1367, column: 43, scope: !16413)
!16421 = !DILocation(line: 1367, column: 49, scope: !16413)
!16422 = !DILocation(line: 1367, column: 4, scope: !16413)
!16423 = !DILocation(line: 1369, column: 22, scope: !16413)
!16424 = !DILocation(line: 1369, column: 27, scope: !16413)
!16425 = !DILocation(line: 1369, column: 35, scope: !16413)
!16426 = !DILocation(line: 1369, column: 39, scope: !16413)
!16427 = !DILocation(line: 1369, column: 45, scope: !16413)
!16428 = !DILocation(line: 1369, column: 51, scope: !16413)
!16429 = !DILocation(line: 1369, column: 57, scope: !16413)
!16430 = !DILocation(line: 1369, column: 4, scope: !16413)
!16431 = !DILocation(line: 1370, column: 23, scope: !16379)
!16432 = !DILocation(line: 1370, column: 45, scope: !16379)
!16433 = !DILocation(line: 1370, column: 55, scope: !16379)
!16434 = !DILocation(line: 1370, column: 61, scope: !16379)
!16435 = !DILocation(line: 1370, column: 3, scope: !16379)
!16436 = !DILocation(line: 1371, column: 2, scope: !16379)
!16437 = !DILocation(line: 1374, column: 13, scope: !15450)
!16438 = !DILocation(line: 1374, column: 2, scope: !15450)
!16439 = !DILocation(line: 1374, column: 7, scope: !15450)
!16440 = !DILocation(line: 1374, column: 11, scope: !15450)
!16441 = !DILocation(line: 1375, column: 14, scope: !15450)
!16442 = !DILocation(line: 1375, column: 2, scope: !15450)
!16443 = !DILocation(line: 1375, column: 7, scope: !15450)
!16444 = !DILocation(line: 1375, column: 12, scope: !15450)
!16445 = !DILocation(line: 1376, column: 16, scope: !15450)
!16446 = !DILocation(line: 1376, column: 2, scope: !15450)
!16447 = !DILocation(line: 1376, column: 7, scope: !15450)
!16448 = !DILocation(line: 1376, column: 14, scope: !15450)
!16449 = !DILocation(line: 1377, column: 17, scope: !15450)
!16450 = !DILocation(line: 1377, column: 2, scope: !15450)
!16451 = !DILocation(line: 1377, column: 7, scope: !15450)
!16452 = !DILocation(line: 1377, column: 11, scope: !15450)
!16453 = !DILocation(line: 1377, column: 15, scope: !15450)
!16454 = !DILocation(line: 1378, column: 14, scope: !15450)
!16455 = !DILocation(line: 1378, column: 2, scope: !15450)
!16456 = !DILocation(line: 1378, column: 7, scope: !15450)
!16457 = !DILocation(line: 1378, column: 12, scope: !15450)
!16458 = !DILocation(line: 1379, column: 12, scope: !15450)
!16459 = !DILocation(line: 1379, column: 2, scope: !15450)
!16460 = !DILocation(line: 1379, column: 7, scope: !15450)
!16461 = !DILocation(line: 1379, column: 10, scope: !15450)
!16462 = !DILocation(line: 1380, column: 17, scope: !15450)
!16463 = !DILocation(line: 1380, column: 2, scope: !15450)
!16464 = !DILocation(line: 1380, column: 7, scope: !15450)
!16465 = !DILocation(line: 1380, column: 15, scope: !15450)
!16466 = !DILocation(line: 1381, column: 15, scope: !15450)
!16467 = !DILocation(line: 1381, column: 2, scope: !15450)
!16468 = !DILocation(line: 1381, column: 7, scope: !15450)
!16469 = !DILocation(line: 1381, column: 13, scope: !15450)
!16470 = !DILocation(line: 1382, column: 15, scope: !15450)
!16471 = !DILocation(line: 1382, column: 2, scope: !15450)
!16472 = !DILocation(line: 1382, column: 7, scope: !15450)
!16473 = !DILocation(line: 1382, column: 13, scope: !15450)
!16474 = !DILocation(line: 1383, column: 18, scope: !15450)
!16475 = !DILocation(line: 1383, column: 2, scope: !15450)
!16476 = !DILocation(line: 1383, column: 7, scope: !15450)
!16477 = !DILocation(line: 1383, column: 16, scope: !15450)
!16478 = !DILocation(line: 1384, column: 14, scope: !15450)
!16479 = !DILocation(line: 1384, column: 13, scope: !15450)
!16480 = !DILocation(line: 1384, column: 44, scope: !15450)
!16481 = !DILocation(line: 1384, column: 2, scope: !15450)
!16482 = !DILocation(line: 1384, column: 7, scope: !15450)
!16483 = !DILocation(line: 1384, column: 11, scope: !15450)
!16484 = !DILocation(line: 1385, column: 14, scope: !15450)
!16485 = !DILocation(line: 1385, column: 2, scope: !15450)
!16486 = !DILocation(line: 1385, column: 7, scope: !15450)
!16487 = !DILocation(line: 1385, column: 12, scope: !15450)
!16488 = !DILocation(line: 1386, column: 14, scope: !15450)
!16489 = !DILocation(line: 1386, column: 2, scope: !15450)
!16490 = !DILocation(line: 1386, column: 7, scope: !15450)
!16491 = !DILocation(line: 1386, column: 12, scope: !15450)
!16492 = !DILocation(line: 1387, column: 11, scope: !15450)
!16493 = !DILocation(line: 1387, column: 2, scope: !15450)
!16494 = !DILocation(line: 1387, column: 7, scope: !15450)
!16495 = !DILocation(line: 1387, column: 9, scope: !15450)
!16496 = !DILocation(line: 1388, column: 14, scope: !15450)
!16497 = !DILocation(line: 1388, column: 2, scope: !15450)
!16498 = !DILocation(line: 1388, column: 7, scope: !15450)
!16499 = !DILocation(line: 1388, column: 12, scope: !15450)
!16500 = !DILocation(line: 1390, column: 6, scope: !16501)
!16501 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1390, column: 6)
!16502 = !DILocation(line: 1390, column: 6, scope: !15450)
!16503 = !DILocation(line: 1391, column: 46, scope: !16504)
!16504 = distinct !DILexicalBlock(scope: !16501, file: !3, line: 1390, column: 16)
!16505 = !DILocation(line: 1391, column: 51, scope: !16504)
!16506 = !DILocation(line: 1391, column: 12, scope: !16504)
!16507 = !DILocation(line: 1391, column: 10, scope: !16504)
!16508 = !DILocation(line: 1392, column: 25, scope: !16504)
!16509 = !DILocation(line: 1392, column: 31, scope: !16504)
!16510 = !DILocation(line: 1392, column: 3, scope: !16504)
!16511 = !DILocation(line: 1393, column: 2, scope: !16504)
!16512 = !DILocation(line: 1395, column: 7, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1395, column: 6)
!16514 = !DILocation(line: 1395, column: 16, scope: !16513)
!16515 = !DILocation(line: 1395, column: 19, scope: !16513)
!16516 = !DILocation(line: 1395, column: 25, scope: !16513)
!16517 = !DILocation(line: 1395, column: 34, scope: !16513)
!16518 = !DILocation(line: 1395, column: 6, scope: !15450)
!16519 = !DILocation(line: 1396, column: 12, scope: !16513)
!16520 = !DILocation(line: 1396, column: 3, scope: !16513)
!16521 = !DILocation(line: 1398, column: 19, scope: !15450)
!16522 = !DILocation(line: 1398, column: 24, scope: !15450)
!16523 = !DILocation(line: 1398, column: 28, scope: !15450)
!16524 = !DILocation(line: 1398, column: 34, scope: !15450)
!16525 = !DILocation(line: 1398, column: 17, scope: !15450)
!16526 = !DILocation(line: 1398, column: 6, scope: !15450)
!16527 = !DILocation(line: 1399, column: 8, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !15450, file: !3, line: 1399, column: 2)
!16529 = !DILocation(line: 1399, column: 7, scope: !16528)
!16530 = !DILocation(line: 1399, column: 12, scope: !16531)
!16531 = distinct !DILexicalBlock(scope: !16528, file: !3, line: 1399, column: 2)
!16532 = !DILocation(line: 1399, column: 14, scope: !16531)
!16533 = !DILocation(line: 1399, column: 13, scope: !16531)
!16534 = !DILocation(line: 1399, column: 2, scope: !16528)
!16535 = !DILocation(line: 1400, column: 31, scope: !16536)
!16536 = distinct !DILexicalBlock(scope: !16531, file: !3, line: 1399, column: 30)
!16537 = !DILocation(line: 1400, column: 19, scope: !16536)
!16538 = !DILocation(line: 1400, column: 3, scope: !16536)
!16539 = !DILocation(line: 1400, column: 11, scope: !16536)
!16540 = !DILocation(line: 1400, column: 14, scope: !16536)
!16541 = !DILocation(line: 1400, column: 17, scope: !16536)
!16542 = !DILocation(line: 1401, column: 19, scope: !16536)
!16543 = !DILocation(line: 1401, column: 3, scope: !16536)
!16544 = !DILocation(line: 1401, column: 11, scope: !16536)
!16545 = !DILocation(line: 1401, column: 14, scope: !16536)
!16546 = !DILocation(line: 1401, column: 17, scope: !16536)
!16547 = !DILocation(line: 1402, column: 2, scope: !16536)
!16548 = !DILocation(line: 1399, column: 26, scope: !16531)
!16549 = !DILocation(line: 1399, column: 2, scope: !16531)
!16550 = distinct !{!16550, !16534, !16551}
!16551 = !DILocation(line: 1402, column: 2, scope: !16528)
!16552 = !DILocation(line: 1404, column: 2, scope: !15450)
!16553 = !DILocation(line: 1405, column: 1, scope: !15450)
!16554 = distinct !DISubprogram(name: "distribute_threads_exec_cb", scope: !3, file: !3, line: 982, type: !16555, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!16555 = !DISubroutineType(types: !16556)
!16556 = !{!229, !229}
!16557 = !DILocalVariable(name: "data", arg: 1, scope: !16554, file: !3, line: 982, type: !229)
!16558 = !DILocation(line: 982, column: 47, scope: !16554)
!16559 = !DILocalVariable(name: "thread", scope: !16554, file: !3, line: 984, type: !3246)
!16560 = !DILocation(line: 984, column: 18, scope: !16554)
!16561 = !DILocation(line: 984, column: 43, scope: !16554)
!16562 = !DILocation(line: 984, column: 26, scope: !16554)
!16563 = !DILocalVariable(name: "psys", scope: !16554, file: !3, line: 985, type: !3144)
!16564 = !DILocation(line: 985, column: 18, scope: !16554)
!16565 = !DILocation(line: 985, column: 24, scope: !16554)
!16566 = !DILocation(line: 985, column: 32, scope: !16554)
!16567 = !DILocation(line: 985, column: 37, scope: !16554)
!16568 = !DILocation(line: 985, column: 41, scope: !16554)
!16569 = !DILocalVariable(name: "pa", scope: !16554, file: !3, line: 986, type: !2461)
!16570 = !DILocation(line: 986, column: 16, scope: !16554)
!16571 = !DILocalVariable(name: "cpa", scope: !16554, file: !3, line: 987, type: !2464)
!16572 = !DILocation(line: 987, column: 17, scope: !16554)
!16573 = !DILocalVariable(name: "p", scope: !16554, file: !3, line: 988, type: !260)
!16574 = !DILocation(line: 988, column: 6, scope: !16554)
!16575 = !DILocalVariable(name: "totpart", scope: !16554, file: !3, line: 988, type: !260)
!16576 = !DILocation(line: 988, column: 9, scope: !16554)
!16577 = !DILocation(line: 990, column: 6, scope: !16578)
!16578 = distinct !DILexicalBlock(scope: !16554, file: !3, line: 990, column: 6)
!16579 = !DILocation(line: 990, column: 14, scope: !16578)
!16580 = !DILocation(line: 990, column: 19, scope: !16578)
!16581 = !DILocation(line: 990, column: 24, scope: !16578)
!16582 = !DILocation(line: 990, column: 6, scope: !16554)
!16583 = !DILocation(line: 991, column: 12, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16578, file: !3, line: 990, column: 44)
!16585 = !DILocation(line: 991, column: 18, scope: !16584)
!16586 = !DILocation(line: 991, column: 10, scope: !16584)
!16587 = !DILocation(line: 992, column: 8, scope: !16584)
!16588 = !DILocation(line: 992, column: 14, scope: !16584)
!16589 = !DILocation(line: 992, column: 6, scope: !16584)
!16590 = !DILocation(line: 994, column: 9, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16584, file: !3, line: 994, column: 3)
!16592 = !DILocation(line: 994, column: 8, scope: !16591)
!16593 = !DILocation(line: 994, column: 13, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16591, file: !3, line: 994, column: 3)
!16595 = !DILocation(line: 994, column: 15, scope: !16594)
!16596 = !DILocation(line: 994, column: 14, scope: !16594)
!16597 = !DILocation(line: 994, column: 3, scope: !16591)
!16598 = !DILocation(line: 995, column: 8, scope: !16599)
!16599 = distinct !DILexicalBlock(scope: !16600, file: !3, line: 995, column: 8)
!16600 = distinct !DILexicalBlock(scope: !16594, file: !3, line: 994, column: 36)
!16601 = !DILocation(line: 995, column: 16, scope: !16599)
!16602 = !DILocation(line: 995, column: 21, scope: !16599)
!16603 = !DILocation(line: 995, column: 8, scope: !16600)
!16604 = !DILocation(line: 996, column: 18, scope: !16599)
!16605 = !DILocation(line: 996, column: 26, scope: !16599)
!16606 = !DILocation(line: 996, column: 52, scope: !16599)
!16607 = !DILocation(line: 996, column: 60, scope: !16599)
!16608 = !DILocation(line: 996, column: 65, scope: !16599)
!16609 = !DILocation(line: 996, column: 70, scope: !16599)
!16610 = !DILocation(line: 996, column: 50, scope: !16599)
!16611 = !DILocation(line: 996, column: 5, scope: !16599)
!16612 = !DILocation(line: 998, column: 9, scope: !16613)
!16613 = distinct !DILexicalBlock(scope: !16600, file: !3, line: 998, column: 8)
!16614 = !DILocation(line: 998, column: 11, scope: !16613)
!16615 = !DILocation(line: 998, column: 19, scope: !16613)
!16616 = !DILocation(line: 998, column: 10, scope: !16613)
!16617 = !DILocation(line: 998, column: 26, scope: !16613)
!16618 = !DILocation(line: 998, column: 34, scope: !16613)
!16619 = !DILocation(line: 998, column: 24, scope: !16613)
!16620 = !DILocation(line: 998, column: 38, scope: !16613)
!16621 = !DILocation(line: 998, column: 8, scope: !16600)
!16622 = !DILocation(line: 999, column: 29, scope: !16613)
!16623 = !DILocation(line: 999, column: 43, scope: !16613)
!16624 = !DILocation(line: 999, column: 48, scope: !16613)
!16625 = !DILocation(line: 999, column: 5, scope: !16613)
!16626 = !DILocation(line: 1001, column: 18, scope: !16613)
!16627 = !DILocation(line: 1001, column: 26, scope: !16613)
!16628 = !DILocation(line: 1001, column: 5, scope: !16613)
!16629 = !DILocation(line: 1002, column: 3, scope: !16600)
!16630 = !DILocation(line: 994, column: 25, scope: !16594)
!16631 = !DILocation(line: 994, column: 32, scope: !16594)
!16632 = !DILocation(line: 994, column: 3, scope: !16594)
!16633 = distinct !{!16633, !16597, !16634}
!16634 = !DILocation(line: 1002, column: 3, scope: !16591)
!16635 = !DILocation(line: 1003, column: 2, scope: !16584)
!16636 = !DILocation(line: 1005, column: 12, scope: !16637)
!16637 = distinct !DILexicalBlock(scope: !16578, file: !3, line: 1004, column: 7)
!16638 = !DILocation(line: 1005, column: 18, scope: !16637)
!16639 = !DILocation(line: 1005, column: 10, scope: !16637)
!16640 = !DILocation(line: 1006, column: 7, scope: !16637)
!16641 = !DILocation(line: 1006, column: 13, scope: !16637)
!16642 = !DILocation(line: 1006, column: 25, scope: !16637)
!16643 = !DILocation(line: 1006, column: 33, scope: !16637)
!16644 = !DILocation(line: 1006, column: 23, scope: !16637)
!16645 = !DILocation(line: 1006, column: 5, scope: !16637)
!16646 = !DILocation(line: 1007, column: 10, scope: !16647)
!16647 = distinct !DILexicalBlock(scope: !16637, file: !3, line: 1007, column: 3)
!16648 = !DILocation(line: 1007, column: 18, scope: !16647)
!16649 = !DILocation(line: 1007, column: 9, scope: !16647)
!16650 = !DILocation(line: 1007, column: 8, scope: !16647)
!16651 = !DILocation(line: 1007, column: 23, scope: !16652)
!16652 = distinct !DILexicalBlock(scope: !16647, file: !3, line: 1007, column: 3)
!16653 = !DILocation(line: 1007, column: 25, scope: !16652)
!16654 = !DILocation(line: 1007, column: 24, scope: !16652)
!16655 = !DILocation(line: 1007, column: 3, scope: !16647)
!16656 = !DILocation(line: 1008, column: 28, scope: !16652)
!16657 = !DILocation(line: 1008, column: 36, scope: !16652)
!16658 = !DILocation(line: 1008, column: 46, scope: !16652)
!16659 = !DILocation(line: 1008, column: 4, scope: !16652)
!16660 = !DILocation(line: 1007, column: 37, scope: !16652)
!16661 = !DILocation(line: 1007, column: 45, scope: !16652)
!16662 = !DILocation(line: 1007, column: 35, scope: !16652)
!16663 = !DILocation(line: 1007, column: 54, scope: !16652)
!16664 = !DILocation(line: 1007, column: 62, scope: !16652)
!16665 = !DILocation(line: 1007, column: 52, scope: !16652)
!16666 = !DILocation(line: 1007, column: 3, scope: !16652)
!16667 = distinct !{!16667, !16655, !16668}
!16668 = !DILocation(line: 1008, column: 47, scope: !16647)
!16669 = !DILocation(line: 1011, column: 2, scope: !16554)
!16670 = distinct !DISubprogram(name: "distribute_simple_children", scope: !3, file: !3, line: 455, type: !16671, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!16671 = !DISubroutineType(types: !16672)
!16672 = !{null, !5519, !3567, !2671, !3144}
!16673 = !DILocalVariable(name: "scene", arg: 1, scope: !16670, file: !3, line: 455, type: !5519)
!16674 = !DILocation(line: 455, column: 47, scope: !16670)
!16675 = !DILocalVariable(name: "ob", arg: 2, scope: !16670, file: !3, line: 455, type: !3567)
!16676 = !DILocation(line: 455, column: 62, scope: !16670)
!16677 = !DILocalVariable(name: "finaldm", arg: 3, scope: !16670, file: !3, line: 455, type: !2671)
!16678 = !DILocation(line: 455, column: 79, scope: !16670)
!16679 = !DILocalVariable(name: "psys", arg: 4, scope: !16670, file: !3, line: 455, type: !3144)
!16680 = !DILocation(line: 455, column: 104, scope: !16670)
!16681 = !DILocalVariable(name: "cpa", scope: !16670, file: !3, line: 457, type: !2464)
!16682 = !DILocation(line: 457, column: 17, scope: !16670)
!16683 = !DILocalVariable(name: "i", scope: !16670, file: !3, line: 458, type: !260)
!16684 = !DILocation(line: 458, column: 6, scope: !16670)
!16685 = !DILocalVariable(name: "p", scope: !16670, file: !3, line: 458, type: !260)
!16686 = !DILocation(line: 458, column: 9, scope: !16670)
!16687 = !DILocalVariable(name: "child_nbr", scope: !16670, file: !3, line: 459, type: !260)
!16688 = !DILocation(line: 459, column: 6, scope: !16670)
!16689 = !DILocation(line: 459, column: 39, scope: !16670)
!16690 = !DILocation(line: 459, column: 46, scope: !16670)
!16691 = !DILocation(line: 459, column: 17, scope: !16670)
!16692 = !DILocalVariable(name: "totpart", scope: !16670, file: !3, line: 460, type: !260)
!16693 = !DILocation(line: 460, column: 6, scope: !16670)
!16694 = !DILocation(line: 460, column: 34, scope: !16670)
!16695 = !DILocation(line: 460, column: 41, scope: !16670)
!16696 = !DILocation(line: 460, column: 15, scope: !16670)
!16697 = !DILocation(line: 462, column: 24, scope: !16670)
!16698 = !DILocation(line: 462, column: 30, scope: !16670)
!16699 = !DILocation(line: 462, column: 2, scope: !16670)
!16700 = !DILocation(line: 464, column: 8, scope: !16670)
!16701 = !DILocation(line: 464, column: 14, scope: !16670)
!16702 = !DILocation(line: 464, column: 6, scope: !16670)
!16703 = !DILocation(line: 465, column: 8, scope: !16704)
!16704 = distinct !DILexicalBlock(scope: !16670, file: !3, line: 465, column: 2)
!16705 = !DILocation(line: 465, column: 7, scope: !16704)
!16706 = !DILocation(line: 465, column: 12, scope: !16707)
!16707 = distinct !DILexicalBlock(scope: !16704, file: !3, line: 465, column: 2)
!16708 = !DILocation(line: 465, column: 14, scope: !16707)
!16709 = !DILocation(line: 465, column: 13, scope: !16707)
!16710 = !DILocation(line: 465, column: 2, scope: !16704)
!16711 = !DILocation(line: 466, column: 9, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16713, file: !3, line: 466, column: 3)
!16713 = distinct !DILexicalBlock(scope: !16707, file: !3, line: 465, column: 30)
!16714 = !DILocation(line: 466, column: 8, scope: !16712)
!16715 = !DILocation(line: 466, column: 13, scope: !16716)
!16716 = distinct !DILexicalBlock(scope: !16712, file: !3, line: 466, column: 3)
!16717 = !DILocation(line: 466, column: 15, scope: !16716)
!16718 = !DILocation(line: 466, column: 21, scope: !16716)
!16719 = !DILocation(line: 466, column: 14, scope: !16716)
!16720 = !DILocation(line: 466, column: 3, scope: !16712)
!16721 = !DILocalVariable(name: "length", scope: !16722, file: !3, line: 467, type: !341)
!16722 = distinct !DILexicalBlock(scope: !16716, file: !3, line: 466, column: 41)
!16723 = !DILocation(line: 467, column: 10, scope: !16722)
!16724 = !DILocation(line: 468, column: 16, scope: !16722)
!16725 = !DILocation(line: 468, column: 4, scope: !16722)
!16726 = !DILocation(line: 468, column: 9, scope: !16722)
!16727 = !DILocation(line: 468, column: 15, scope: !16722)
!16728 = !DILocation(line: 471, column: 4, scope: !16722)
!16729 = !DILocation(line: 471, column: 11, scope: !16722)
!16730 = !DILocation(line: 471, column: 17, scope: !16722)
!16731 = !DILocation(line: 472, column: 22, scope: !16732)
!16732 = distinct !DILexicalBlock(scope: !16722, file: !3, line: 471, column: 25)
!16733 = !DILocation(line: 472, column: 21, scope: !16732)
!16734 = !DILocation(line: 472, column: 33, scope: !16732)
!16735 = !DILocation(line: 472, column: 5, scope: !16732)
!16736 = !DILocation(line: 472, column: 10, scope: !16732)
!16737 = !DILocation(line: 472, column: 16, scope: !16732)
!16738 = !DILocation(line: 473, column: 22, scope: !16732)
!16739 = !DILocation(line: 473, column: 21, scope: !16732)
!16740 = !DILocation(line: 473, column: 33, scope: !16732)
!16741 = !DILocation(line: 473, column: 5, scope: !16732)
!16742 = !DILocation(line: 473, column: 10, scope: !16732)
!16743 = !DILocation(line: 473, column: 16, scope: !16732)
!16744 = !DILocation(line: 474, column: 22, scope: !16732)
!16745 = !DILocation(line: 474, column: 21, scope: !16732)
!16746 = !DILocation(line: 474, column: 33, scope: !16732)
!16747 = !DILocation(line: 474, column: 5, scope: !16732)
!16748 = !DILocation(line: 474, column: 10, scope: !16732)
!16749 = !DILocation(line: 474, column: 16, scope: !16732)
!16750 = !DILocation(line: 475, column: 19, scope: !16732)
!16751 = !DILocation(line: 475, column: 24, scope: !16732)
!16752 = !DILocation(line: 475, column: 12, scope: !16732)
!16753 = !DILocation(line: 475, column: 11, scope: !16732)
!16754 = distinct !{!16754, !16728, !16755}
!16755 = !DILocation(line: 476, column: 4, scope: !16722)
!16756 = !DILocation(line: 478, column: 4, scope: !16722)
!16757 = !DILocation(line: 478, column: 9, scope: !16722)
!16758 = !DILocation(line: 478, column: 12, scope: !16722)
!16759 = !DILocation(line: 479, column: 3, scope: !16722)
!16760 = !DILocation(line: 466, column: 31, scope: !16716)
!16761 = !DILocation(line: 466, column: 37, scope: !16716)
!16762 = !DILocation(line: 466, column: 3, scope: !16716)
!16763 = distinct !{!16763, !16720, !16764}
!16764 = !DILocation(line: 479, column: 3, scope: !16712)
!16765 = !DILocation(line: 480, column: 2, scope: !16713)
!16766 = !DILocation(line: 465, column: 26, scope: !16707)
!16767 = !DILocation(line: 465, column: 2, scope: !16707)
!16768 = distinct !{!16768, !16710, !16769}
!16769 = !DILocation(line: 480, column: 2, scope: !16704)
!16770 = !DILocation(line: 482, column: 20, scope: !16670)
!16771 = !DILocation(line: 482, column: 24, scope: !16670)
!16772 = !DILocation(line: 482, column: 33, scope: !16670)
!16773 = !DILocation(line: 482, column: 2, scope: !16670)
!16774 = !DILocation(line: 483, column: 1, scope: !16670)
!16775 = distinct !DISubprogram(name: "distribute_grid", scope: !3, file: !3, line: 484, type: !16776, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!16776 = !DISubroutineType(types: !16777)
!16777 = !{null, !2671, !3144}
!16778 = !DILocalVariable(name: "dm", arg: 1, scope: !16775, file: !3, line: 484, type: !2671)
!16779 = !DILocation(line: 484, column: 42, scope: !16775)
!16780 = !DILocalVariable(name: "psys", arg: 2, scope: !16775, file: !3, line: 484, type: !3144)
!16781 = !DILocation(line: 484, column: 62, scope: !16775)
!16782 = !DILocalVariable(name: "pa", scope: !16775, file: !3, line: 486, type: !2461)
!16783 = !DILocation(line: 486, column: 16, scope: !16775)
!16784 = !DILocalVariable(name: "min", scope: !16775, file: !3, line: 487, type: !563)
!16785 = !DILocation(line: 487, column: 8, scope: !16775)
!16786 = !DILocalVariable(name: "max", scope: !16775, file: !3, line: 487, type: !563)
!16787 = !DILocation(line: 487, column: 16, scope: !16775)
!16788 = !DILocalVariable(name: "delta", scope: !16775, file: !3, line: 487, type: !563)
!16789 = !DILocation(line: 487, column: 24, scope: !16775)
!16790 = !DILocalVariable(name: "d", scope: !16775, file: !3, line: 487, type: !341)
!16791 = !DILocation(line: 487, column: 34, scope: !16775)
!16792 = !DILocalVariable(name: "mv", scope: !16775, file: !3, line: 488, type: !669)
!16793 = !DILocation(line: 488, column: 9, scope: !16775)
!16794 = !DILocalVariable(name: "mvert", scope: !16775, file: !3, line: 488, type: !669)
!16795 = !DILocation(line: 488, column: 14, scope: !16775)
!16796 = !DILocation(line: 488, column: 22, scope: !16775)
!16797 = !DILocation(line: 488, column: 26, scope: !16775)
!16798 = !DILocation(line: 488, column: 43, scope: !16775)
!16799 = !DILocalVariable(name: "totvert", scope: !16775, file: !3, line: 489, type: !260)
!16800 = !DILocation(line: 489, column: 6, scope: !16775)
!16801 = !DILocation(line: 489, column: 14, scope: !16775)
!16802 = !DILocation(line: 489, column: 18, scope: !16775)
!16803 = !DILocation(line: 489, column: 30, scope: !16775)
!16804 = !DILocalVariable(name: "from", scope: !16775, file: !3, line: 489, type: !260)
!16805 = !DILocation(line: 489, column: 35, scope: !16775)
!16806 = !DILocation(line: 489, column: 40, scope: !16775)
!16807 = !DILocation(line: 489, column: 46, scope: !16775)
!16808 = !DILocation(line: 489, column: 52, scope: !16775)
!16809 = !DILocalVariable(name: "i", scope: !16775, file: !3, line: 490, type: !260)
!16810 = !DILocation(line: 490, column: 6, scope: !16775)
!16811 = !DILocalVariable(name: "j", scope: !16775, file: !3, line: 490, type: !260)
!16812 = !DILocation(line: 490, column: 9, scope: !16775)
!16813 = !DILocalVariable(name: "k", scope: !16775, file: !3, line: 490, type: !260)
!16814 = !DILocation(line: 490, column: 12, scope: !16775)
!16815 = !DILocalVariable(name: "p", scope: !16775, file: !3, line: 490, type: !260)
!16816 = !DILocation(line: 490, column: 15, scope: !16775)
!16817 = !DILocalVariable(name: "res", scope: !16775, file: !3, line: 490, type: !260)
!16818 = !DILocation(line: 490, column: 18, scope: !16775)
!16819 = !DILocation(line: 490, column: 22, scope: !16775)
!16820 = !DILocation(line: 490, column: 28, scope: !16775)
!16821 = !DILocation(line: 490, column: 34, scope: !16775)
!16822 = !DILocalVariable(name: "size", scope: !16775, file: !3, line: 490, type: !1111)
!16823 = !DILocation(line: 490, column: 44, scope: !16775)
!16824 = !DILocalVariable(name: "axis", scope: !16775, file: !3, line: 490, type: !260)
!16825 = !DILocation(line: 490, column: 53, scope: !16775)
!16826 = !DILocation(line: 493, column: 6, scope: !16827)
!16827 = distinct !DILexicalBlock(scope: !16775, file: !3, line: 493, column: 6)
!16828 = !DILocation(line: 493, column: 14, scope: !16827)
!16829 = !DILocation(line: 493, column: 6, scope: !16775)
!16830 = !DILocation(line: 494, column: 6, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16827, file: !3, line: 493, column: 19)
!16832 = !DILocation(line: 494, column: 5, scope: !16831)
!16833 = !DILocation(line: 495, column: 14, scope: !16831)
!16834 = !DILocation(line: 495, column: 19, scope: !16831)
!16835 = !DILocation(line: 495, column: 23, scope: !16831)
!16836 = !DILocation(line: 495, column: 3, scope: !16831)
!16837 = !DILocation(line: 496, column: 14, scope: !16831)
!16838 = !DILocation(line: 496, column: 19, scope: !16831)
!16839 = !DILocation(line: 496, column: 23, scope: !16831)
!16840 = !DILocation(line: 496, column: 3, scope: !16831)
!16841 = !DILocation(line: 497, column: 5, scope: !16831)
!16842 = !DILocation(line: 498, column: 10, scope: !16843)
!16843 = distinct !DILexicalBlock(scope: !16831, file: !3, line: 498, column: 3)
!16844 = !DILocation(line: 498, column: 8, scope: !16843)
!16845 = !DILocation(line: 498, column: 15, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16843, file: !3, line: 498, column: 3)
!16847 = !DILocation(line: 498, column: 19, scope: !16846)
!16848 = !DILocation(line: 498, column: 17, scope: !16846)
!16849 = !DILocation(line: 498, column: 3, scope: !16843)
!16850 = !DILocation(line: 499, column: 19, scope: !16851)
!16851 = distinct !DILexicalBlock(scope: !16846, file: !3, line: 498, column: 39)
!16852 = !DILocation(line: 499, column: 24, scope: !16851)
!16853 = !DILocation(line: 499, column: 29, scope: !16851)
!16854 = !DILocation(line: 499, column: 33, scope: !16851)
!16855 = !DILocation(line: 499, column: 4, scope: !16851)
!16856 = !DILocation(line: 500, column: 3, scope: !16851)
!16857 = !DILocation(line: 498, column: 29, scope: !16846)
!16858 = !DILocation(line: 498, column: 35, scope: !16846)
!16859 = !DILocation(line: 498, column: 3, scope: !16846)
!16860 = distinct !{!16860, !16849, !16861}
!16861 = !DILocation(line: 500, column: 3, scope: !16843)
!16862 = !DILocation(line: 501, column: 2, scope: !16831)
!16863 = !DILocation(line: 503, column: 11, scope: !16864)
!16864 = distinct !DILexicalBlock(scope: !16827, file: !3, line: 502, column: 7)
!16865 = !DILocation(line: 503, column: 3, scope: !16864)
!16866 = !DILocation(line: 504, column: 11, scope: !16864)
!16867 = !DILocation(line: 504, column: 3, scope: !16864)
!16868 = !DILocation(line: 507, column: 14, scope: !16775)
!16869 = !DILocation(line: 507, column: 21, scope: !16775)
!16870 = !DILocation(line: 507, column: 26, scope: !16775)
!16871 = !DILocation(line: 507, column: 2, scope: !16775)
!16872 = !DILocation(line: 510, column: 33, scope: !16775)
!16873 = !DILocation(line: 510, column: 9, scope: !16775)
!16874 = !DILocation(line: 510, column: 7, scope: !16775)
!16875 = !DILocation(line: 512, column: 12, scope: !16775)
!16876 = !DILocation(line: 512, column: 6, scope: !16775)
!16877 = !DILocation(line: 512, column: 25, scope: !16775)
!16878 = !DILocation(line: 512, column: 18, scope: !16775)
!16879 = !DILocation(line: 512, column: 17, scope: !16775)
!16880 = !DILocation(line: 512, column: 4, scope: !16775)
!16881 = !DILocation(line: 514, column: 15, scope: !16775)
!16882 = !DILocation(line: 514, column: 7, scope: !16775)
!16883 = !DILocation(line: 514, column: 2, scope: !16775)
!16884 = !DILocation(line: 514, column: 13, scope: !16775)
!16885 = !DILocation(line: 515, column: 38, scope: !16775)
!16886 = !DILocation(line: 515, column: 42, scope: !16775)
!16887 = !DILocation(line: 515, column: 45, scope: !16775)
!16888 = !DILocation(line: 515, column: 31, scope: !16775)
!16889 = !DILocation(line: 515, column: 49, scope: !16775)
!16890 = !DILocation(line: 515, column: 48, scope: !16775)
!16891 = !DILocation(line: 515, column: 26, scope: !16775)
!16892 = !DILocation(line: 515, column: 21, scope: !16775)
!16893 = !DILocation(line: 515, column: 8, scope: !16775)
!16894 = !DILocation(line: 515, column: 12, scope: !16775)
!16895 = !DILocation(line: 515, column: 15, scope: !16775)
!16896 = !DILocation(line: 515, column: 2, scope: !16775)
!16897 = !DILocation(line: 515, column: 19, scope: !16775)
!16898 = !DILocation(line: 516, column: 38, scope: !16775)
!16899 = !DILocation(line: 516, column: 42, scope: !16775)
!16900 = !DILocation(line: 516, column: 45, scope: !16775)
!16901 = !DILocation(line: 516, column: 31, scope: !16775)
!16902 = !DILocation(line: 516, column: 49, scope: !16775)
!16903 = !DILocation(line: 516, column: 48, scope: !16775)
!16904 = !DILocation(line: 516, column: 26, scope: !16775)
!16905 = !DILocation(line: 516, column: 21, scope: !16775)
!16906 = !DILocation(line: 516, column: 8, scope: !16775)
!16907 = !DILocation(line: 516, column: 12, scope: !16775)
!16908 = !DILocation(line: 516, column: 15, scope: !16775)
!16909 = !DILocation(line: 516, column: 2, scope: !16775)
!16910 = !DILocation(line: 516, column: 19, scope: !16775)
!16911 = !DILocation(line: 519, column: 21, scope: !16775)
!16912 = !DILocation(line: 519, column: 8, scope: !16775)
!16913 = !DILocation(line: 519, column: 12, scope: !16775)
!16914 = !DILocation(line: 519, column: 15, scope: !16775)
!16915 = !DILocation(line: 519, column: 2, scope: !16775)
!16916 = !DILocation(line: 519, column: 19, scope: !16775)
!16917 = !DILocation(line: 520, column: 21, scope: !16775)
!16918 = !DILocation(line: 520, column: 8, scope: !16775)
!16919 = !DILocation(line: 520, column: 12, scope: !16775)
!16920 = !DILocation(line: 520, column: 15, scope: !16775)
!16921 = !DILocation(line: 520, column: 2, scope: !16775)
!16922 = !DILocation(line: 520, column: 19, scope: !16775)
!16923 = !DILocation(line: 522, column: 12, scope: !16775)
!16924 = !DILocation(line: 522, column: 2, scope: !16775)
!16925 = !DILocation(line: 522, column: 10, scope: !16775)
!16926 = !DILocation(line: 523, column: 12, scope: !16775)
!16927 = !DILocation(line: 523, column: 2, scope: !16775)
!16928 = !DILocation(line: 523, column: 10, scope: !16775)
!16929 = !DILocation(line: 524, column: 12, scope: !16775)
!16930 = !DILocation(line: 524, column: 2, scope: !16775)
!16931 = !DILocation(line: 524, column: 10, scope: !16775)
!16932 = !DILocation(line: 527, column: 11, scope: !16775)
!16933 = !DILocation(line: 527, column: 15, scope: !16775)
!16934 = !DILocation(line: 527, column: 13, scope: !16775)
!16935 = !DILocation(line: 527, column: 26, scope: !16775)
!16936 = !DILocation(line: 527, column: 27, scope: !16775)
!16937 = !DILocation(line: 527, column: 34, scope: !16775)
!16938 = !DILocation(line: 527, column: 42, scope: !16775)
!16939 = !DILocation(line: 527, column: 2, scope: !16775)
!16940 = !DILocation(line: 527, column: 8, scope: !16775)
!16941 = !DILocation(line: 528, column: 11, scope: !16775)
!16942 = !DILocation(line: 528, column: 15, scope: !16775)
!16943 = !DILocation(line: 528, column: 13, scope: !16775)
!16944 = !DILocation(line: 528, column: 26, scope: !16775)
!16945 = !DILocation(line: 528, column: 27, scope: !16775)
!16946 = !DILocation(line: 528, column: 34, scope: !16775)
!16947 = !DILocation(line: 528, column: 42, scope: !16775)
!16948 = !DILocation(line: 528, column: 2, scope: !16775)
!16949 = !DILocation(line: 528, column: 8, scope: !16775)
!16950 = !DILocation(line: 529, column: 11, scope: !16775)
!16951 = !DILocation(line: 529, column: 15, scope: !16775)
!16952 = !DILocation(line: 529, column: 13, scope: !16775)
!16953 = !DILocation(line: 529, column: 26, scope: !16775)
!16954 = !DILocation(line: 529, column: 27, scope: !16775)
!16955 = !DILocation(line: 529, column: 34, scope: !16775)
!16956 = !DILocation(line: 529, column: 42, scope: !16775)
!16957 = !DILocation(line: 529, column: 2, scope: !16775)
!16958 = !DILocation(line: 529, column: 8, scope: !16775)
!16959 = !DILocation(line: 531, column: 8, scope: !16960)
!16960 = distinct !DILexicalBlock(scope: !16775, file: !3, line: 531, column: 2)
!16961 = !DILocation(line: 531, column: 12, scope: !16960)
!16962 = !DILocation(line: 531, column: 18, scope: !16960)
!16963 = !DILocation(line: 531, column: 24, scope: !16960)
!16964 = !DILocation(line: 531, column: 17, scope: !16960)
!16965 = !DILocation(line: 531, column: 7, scope: !16960)
!16966 = !DILocation(line: 531, column: 35, scope: !16967)
!16967 = distinct !DILexicalBlock(scope: !16960, file: !3, line: 531, column: 2)
!16968 = !DILocation(line: 531, column: 37, scope: !16967)
!16969 = !DILocation(line: 531, column: 36, scope: !16967)
!16970 = !DILocation(line: 531, column: 2, scope: !16960)
!16971 = !DILocation(line: 532, column: 9, scope: !16972)
!16972 = distinct !DILexicalBlock(scope: !16973, file: !3, line: 532, column: 3)
!16973 = distinct !DILexicalBlock(scope: !16967, file: !3, line: 531, column: 47)
!16974 = !DILocation(line: 532, column: 8, scope: !16972)
!16975 = !DILocation(line: 532, column: 13, scope: !16976)
!16976 = distinct !DILexicalBlock(scope: !16972, file: !3, line: 532, column: 3)
!16977 = !DILocation(line: 532, column: 15, scope: !16976)
!16978 = !DILocation(line: 532, column: 14, scope: !16976)
!16979 = !DILocation(line: 532, column: 3, scope: !16972)
!16980 = !DILocation(line: 533, column: 10, scope: !16981)
!16981 = distinct !DILexicalBlock(scope: !16982, file: !3, line: 533, column: 4)
!16982 = distinct !DILexicalBlock(scope: !16976, file: !3, line: 532, column: 25)
!16983 = !DILocation(line: 533, column: 9, scope: !16981)
!16984 = !DILocation(line: 533, column: 14, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16981, file: !3, line: 533, column: 4)
!16986 = !DILocation(line: 533, column: 16, scope: !16985)
!16987 = !DILocation(line: 533, column: 15, scope: !16985)
!16988 = !DILocation(line: 533, column: 4, scope: !16981)
!16989 = !DILocation(line: 534, column: 18, scope: !16990)
!16990 = distinct !DILexicalBlock(scope: !16985, file: !3, line: 533, column: 35)
!16991 = !DILocation(line: 534, column: 34, scope: !16990)
!16992 = !DILocation(line: 534, column: 27, scope: !16990)
!16993 = !DILocation(line: 534, column: 36, scope: !16990)
!16994 = !DILocation(line: 534, column: 35, scope: !16990)
!16995 = !DILocation(line: 534, column: 25, scope: !16990)
!16996 = !DILocation(line: 534, column: 5, scope: !16990)
!16997 = !DILocation(line: 534, column: 9, scope: !16990)
!16998 = !DILocation(line: 534, column: 16, scope: !16990)
!16999 = !DILocation(line: 535, column: 18, scope: !16990)
!17000 = !DILocation(line: 535, column: 34, scope: !16990)
!17001 = !DILocation(line: 535, column: 27, scope: !16990)
!17002 = !DILocation(line: 535, column: 36, scope: !16990)
!17003 = !DILocation(line: 535, column: 35, scope: !16990)
!17004 = !DILocation(line: 535, column: 25, scope: !16990)
!17005 = !DILocation(line: 535, column: 5, scope: !16990)
!17006 = !DILocation(line: 535, column: 9, scope: !16990)
!17007 = !DILocation(line: 535, column: 16, scope: !16990)
!17008 = !DILocation(line: 536, column: 18, scope: !16990)
!17009 = !DILocation(line: 536, column: 34, scope: !16990)
!17010 = !DILocation(line: 536, column: 27, scope: !16990)
!17011 = !DILocation(line: 536, column: 36, scope: !16990)
!17012 = !DILocation(line: 536, column: 35, scope: !16990)
!17013 = !DILocation(line: 536, column: 25, scope: !16990)
!17014 = !DILocation(line: 536, column: 5, scope: !16990)
!17015 = !DILocation(line: 536, column: 9, scope: !16990)
!17016 = !DILocation(line: 536, column: 16, scope: !16990)
!17017 = !DILocation(line: 537, column: 5, scope: !16990)
!17018 = !DILocation(line: 537, column: 9, scope: !16990)
!17019 = !DILocation(line: 537, column: 14, scope: !16990)
!17020 = !DILocation(line: 538, column: 5, scope: !16990)
!17021 = !DILocation(line: 538, column: 9, scope: !16990)
!17022 = !DILocation(line: 538, column: 20, scope: !16990)
!17023 = !DILocation(line: 539, column: 4, scope: !16990)
!17024 = !DILocation(line: 533, column: 22, scope: !16985)
!17025 = !DILocation(line: 533, column: 26, scope: !16985)
!17026 = !DILocation(line: 533, column: 31, scope: !16985)
!17027 = !DILocation(line: 533, column: 4, scope: !16985)
!17028 = distinct !{!17028, !16988, !17029}
!17029 = !DILocation(line: 539, column: 4, scope: !16981)
!17030 = !DILocation(line: 540, column: 3, scope: !16982)
!17031 = !DILocation(line: 532, column: 21, scope: !16976)
!17032 = !DILocation(line: 532, column: 3, scope: !16976)
!17033 = distinct !{!17033, !16979, !17034}
!17034 = !DILocation(line: 540, column: 3, scope: !16972)
!17035 = !DILocation(line: 541, column: 2, scope: !16973)
!17036 = !DILocation(line: 531, column: 43, scope: !16967)
!17037 = !DILocation(line: 531, column: 2, scope: !16967)
!17038 = distinct !{!17038, !16970, !17039}
!17039 = !DILocation(line: 541, column: 2, scope: !16960)
!17040 = !DILocation(line: 544, column: 6, scope: !17041)
!17041 = distinct !DILexicalBlock(scope: !16775, file: !3, line: 544, column: 6)
!17042 = !DILocation(line: 544, column: 10, scope: !17041)
!17043 = !DILocation(line: 544, column: 6, scope: !16775)
!17044 = !DILocalVariable(name: "vec", scope: !17045, file: !3, line: 545, type: !563)
!17045 = distinct !DILexicalBlock(scope: !17041, file: !3, line: 544, column: 28)
!17046 = !DILocation(line: 545, column: 9, scope: !17045)
!17047 = !DILocation(line: 547, column: 6, scope: !17045)
!17048 = !DILocation(line: 547, column: 12, scope: !17045)
!17049 = !DILocation(line: 547, column: 5, scope: !17045)
!17050 = !DILocation(line: 549, column: 13, scope: !17045)
!17051 = !DILocation(line: 549, column: 14, scope: !17045)
!17052 = !DILocation(line: 549, column: 3, scope: !17045)
!17053 = !DILocation(line: 549, column: 10, scope: !17045)
!17054 = !DILocation(line: 550, column: 13, scope: !17045)
!17055 = !DILocation(line: 550, column: 14, scope: !17045)
!17056 = !DILocation(line: 550, column: 3, scope: !17045)
!17057 = !DILocation(line: 550, column: 10, scope: !17045)
!17058 = !DILocation(line: 551, column: 13, scope: !17045)
!17059 = !DILocation(line: 551, column: 14, scope: !17045)
!17060 = !DILocation(line: 551, column: 3, scope: !17045)
!17061 = !DILocation(line: 551, column: 10, scope: !17045)
!17062 = !DILocation(line: 553, column: 9, scope: !17063)
!17063 = distinct !DILexicalBlock(scope: !17045, file: !3, line: 553, column: 3)
!17064 = !DILocation(line: 553, column: 15, scope: !17063)
!17065 = !DILocation(line: 553, column: 14, scope: !17063)
!17066 = !DILocation(line: 553, column: 8, scope: !17063)
!17067 = !DILocation(line: 553, column: 22, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17063, file: !3, line: 553, column: 3)
!17069 = !DILocation(line: 553, column: 24, scope: !17068)
!17070 = !DILocation(line: 553, column: 23, scope: !17068)
!17071 = !DILocation(line: 553, column: 3, scope: !17063)
!17072 = !DILocation(line: 554, column: 16, scope: !17073)
!17073 = distinct !DILexicalBlock(scope: !17068, file: !3, line: 553, column: 43)
!17074 = !DILocation(line: 554, column: 20, scope: !17073)
!17075 = !DILocation(line: 554, column: 24, scope: !17073)
!17076 = !DILocation(line: 554, column: 27, scope: !17073)
!17077 = !DILocation(line: 554, column: 4, scope: !17073)
!17078 = !DILocation(line: 555, column: 12, scope: !17073)
!17079 = !DILocation(line: 555, column: 4, scope: !17073)
!17080 = !DILocation(line: 555, column: 10, scope: !17073)
!17081 = !DILocation(line: 556, column: 12, scope: !17073)
!17082 = !DILocation(line: 556, column: 4, scope: !17073)
!17083 = !DILocation(line: 556, column: 10, scope: !17073)
!17084 = !DILocation(line: 557, column: 12, scope: !17073)
!17085 = !DILocation(line: 557, column: 4, scope: !17073)
!17086 = !DILocation(line: 557, column: 10, scope: !17073)
!17087 = !DILocation(line: 558, column: 4, scope: !17073)
!17088 = !DILocation(line: 558, column: 14, scope: !17073)
!17089 = !DILocation(line: 558, column: 24, scope: !17073)
!17090 = !DILocation(line: 558, column: 32, scope: !17073)
!17091 = !DILocation(line: 558, column: 23, scope: !17073)
!17092 = !DILocation(line: 558, column: 21, scope: !17073)
!17093 = !DILocation(line: 558, column: 8, scope: !17073)
!17094 = !DILocation(line: 558, column: 41, scope: !17073)
!17095 = !DILocation(line: 558, column: 39, scope: !17073)
!17096 = !DILocation(line: 559, column: 14, scope: !17073)
!17097 = !DILocation(line: 559, column: 24, scope: !17073)
!17098 = !DILocation(line: 559, column: 32, scope: !17073)
!17099 = !DILocation(line: 559, column: 23, scope: !17073)
!17100 = !DILocation(line: 559, column: 21, scope: !17073)
!17101 = !DILocation(line: 559, column: 8, scope: !17073)
!17102 = !DILocation(line: 558, column: 45, scope: !17073)
!17103 = !DILocation(line: 559, column: 41, scope: !17073)
!17104 = !DILocation(line: 559, column: 39, scope: !17073)
!17105 = !DILocation(line: 560, column: 14, scope: !17073)
!17106 = !DILocation(line: 560, column: 24, scope: !17073)
!17107 = !DILocation(line: 560, column: 32, scope: !17073)
!17108 = !DILocation(line: 560, column: 23, scope: !17073)
!17109 = !DILocation(line: 560, column: 21, scope: !17073)
!17110 = !DILocation(line: 560, column: 8, scope: !17073)
!17111 = !DILocation(line: 559, column: 45, scope: !17073)
!17112 = !DILocation(line: 560, column: 39, scope: !17073)
!17113 = !DILocation(line: 560, column: 44, scope: !17073)
!17114 = !DILocation(line: 561, column: 3, scope: !17073)
!17115 = !DILocation(line: 553, column: 34, scope: !17068)
!17116 = !DILocation(line: 553, column: 39, scope: !17068)
!17117 = !DILocation(line: 553, column: 3, scope: !17068)
!17118 = distinct !{!17118, !17071, !17119}
!17119 = !DILocation(line: 561, column: 3, scope: !17063)
!17120 = !DILocation(line: 562, column: 2, scope: !17045)
!17121 = !DILocation(line: 563, column: 11, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17041, file: !3, line: 563, column: 11)
!17123 = !DILocation(line: 563, column: 11, scope: !17041)
!17124 = !DILocalVariable(name: "co1", scope: !17125, file: !3, line: 564, type: !563)
!17125 = distinct !DILexicalBlock(scope: !17122, file: !3, line: 563, column: 55)
!17126 = !DILocation(line: 564, column: 9, scope: !17125)
!17127 = !DILocalVariable(name: "co2", scope: !17125, file: !3, line: 564, type: !563)
!17128 = !DILocation(line: 564, column: 17, scope: !17125)
!17129 = !DILocalVariable(name: "mface", scope: !17125, file: !3, line: 566, type: !7216)
!17130 = !DILocation(line: 566, column: 10, scope: !17125)
!17131 = !DILocalVariable(name: "mface_array", scope: !17125, file: !3, line: 566, type: !7216)
!17132 = !DILocation(line: 566, column: 24, scope: !17125)
!17133 = !DILocalVariable(name: "v1", scope: !17125, file: !3, line: 567, type: !563)
!17134 = !DILocation(line: 567, column: 9, scope: !17125)
!17135 = !DILocalVariable(name: "v2", scope: !17125, file: !3, line: 567, type: !563)
!17136 = !DILocation(line: 567, column: 16, scope: !17125)
!17137 = !DILocalVariable(name: "v3", scope: !17125, file: !3, line: 567, type: !563)
!17138 = !DILocation(line: 567, column: 23, scope: !17125)
!17139 = !DILocalVariable(name: "v4", scope: !17125, file: !3, line: 567, type: !473)
!17140 = !DILocation(line: 567, column: 30, scope: !17125)
!17141 = !DILocalVariable(name: "lambda", scope: !17125, file: !3, line: 567, type: !341)
!17142 = !DILocation(line: 567, column: 37, scope: !17125)
!17143 = !DILocalVariable(name: "a", scope: !17125, file: !3, line: 568, type: !260)
!17144 = !DILocation(line: 568, column: 7, scope: !17125)
!17145 = !DILocalVariable(name: "a1", scope: !17125, file: !3, line: 568, type: !260)
!17146 = !DILocation(line: 568, column: 10, scope: !17125)
!17147 = !DILocalVariable(name: "a2", scope: !17125, file: !3, line: 568, type: !260)
!17148 = !DILocation(line: 568, column: 14, scope: !17125)
!17149 = !DILocalVariable(name: "a0mul", scope: !17125, file: !3, line: 568, type: !260)
!17150 = !DILocation(line: 568, column: 18, scope: !17125)
!17151 = !DILocalVariable(name: "a1mul", scope: !17125, file: !3, line: 568, type: !260)
!17152 = !DILocation(line: 568, column: 25, scope: !17125)
!17153 = !DILocalVariable(name: "a2mul", scope: !17125, file: !3, line: 568, type: !260)
!17154 = !DILocation(line: 568, column: 32, scope: !17125)
!17155 = !DILocalVariable(name: "totface", scope: !17125, file: !3, line: 568, type: !260)
!17156 = !DILocation(line: 568, column: 39, scope: !17125)
!17157 = !DILocalVariable(name: "amax", scope: !17125, file: !3, line: 569, type: !260)
!17158 = !DILocation(line: 569, column: 7, scope: !17125)
!17159 = !DILocation(line: 569, column: 13, scope: !17125)
!17160 = !DILocation(line: 569, column: 17, scope: !17125)
!17161 = !DILocation(line: 571, column: 11, scope: !17125)
!17162 = !DILocation(line: 571, column: 15, scope: !17125)
!17163 = !DILocation(line: 571, column: 31, scope: !17125)
!17164 = !DILocation(line: 571, column: 10, scope: !17125)
!17165 = !DILocation(line: 572, column: 21, scope: !17125)
!17166 = !DILocation(line: 572, column: 25, scope: !17125)
!17167 = !DILocation(line: 572, column: 46, scope: !17125)
!17168 = !DILocation(line: 572, column: 20, scope: !17125)
!17169 = !DILocation(line: 572, column: 8, scope: !17125)
!17170 = !DILocation(line: 574, column: 9, scope: !17171)
!17171 = distinct !DILexicalBlock(scope: !17125, file: !3, line: 574, column: 3)
!17172 = !DILocation(line: 574, column: 8, scope: !17171)
!17173 = !DILocation(line: 574, column: 13, scope: !17174)
!17174 = distinct !DILexicalBlock(scope: !17171, file: !3, line: 574, column: 3)
!17175 = !DILocation(line: 574, column: 15, scope: !17174)
!17176 = !DILocation(line: 574, column: 14, scope: !17174)
!17177 = !DILocation(line: 574, column: 3, scope: !17171)
!17178 = !DILocation(line: 575, column: 8, scope: !17179)
!17179 = distinct !DILexicalBlock(scope: !17180, file: !3, line: 575, column: 8)
!17180 = distinct !DILexicalBlock(scope: !17174, file: !3, line: 574, column: 26)
!17181 = !DILocation(line: 575, column: 9, scope: !17179)
!17182 = !DILocation(line: 575, column: 8, scope: !17180)
!17183 = !DILocation(line: 575, column: 22, scope: !17184)
!17184 = distinct !DILexicalBlock(scope: !17179, file: !3, line: 575, column: 14)
!17185 = !DILocation(line: 575, column: 26, scope: !17184)
!17186 = !DILocation(line: 575, column: 25, scope: !17184)
!17187 = !DILocation(line: 575, column: 21, scope: !17184)
!17188 = !DILocation(line: 575, column: 37, scope: !17184)
!17189 = !DILocation(line: 575, column: 36, scope: !17184)
!17190 = !DILocation(line: 575, column: 47, scope: !17184)
!17191 = !DILocation(line: 575, column: 51, scope: !17184)
!17192 = !DILocation(line: 576, column: 13, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17179, file: !3, line: 576, column: 13)
!17194 = !DILocation(line: 576, column: 14, scope: !17193)
!17195 = !DILocation(line: 576, column: 13, scope: !17179)
!17196 = !DILocation(line: 576, column: 27, scope: !17197)
!17197 = distinct !DILexicalBlock(scope: !17193, file: !3, line: 576, column: 19)
!17198 = !DILocation(line: 576, column: 26, scope: !17197)
!17199 = !DILocation(line: 576, column: 37, scope: !17197)
!17200 = !DILocation(line: 576, column: 47, scope: !17197)
!17201 = !DILocation(line: 576, column: 51, scope: !17197)
!17202 = !DILocation(line: 576, column: 50, scope: !17197)
!17203 = !DILocation(line: 576, column: 46, scope: !17197)
!17204 = !DILocation(line: 576, column: 56, scope: !17197)
!17205 = !DILocation(line: 577, column: 16, scope: !17206)
!17206 = distinct !DILexicalBlock(scope: !17193, file: !3, line: 577, column: 9)
!17207 = !DILocation(line: 577, column: 26, scope: !17206)
!17208 = !DILocation(line: 577, column: 30, scope: !17206)
!17209 = !DILocation(line: 577, column: 29, scope: !17206)
!17210 = !DILocation(line: 577, column: 25, scope: !17206)
!17211 = !DILocation(line: 577, column: 41, scope: !17206)
!17212 = !DILocation(line: 577, column: 40, scope: !17206)
!17213 = !DILocation(line: 579, column: 11, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17180, file: !3, line: 579, column: 4)
!17215 = !DILocation(line: 579, column: 9, scope: !17214)
!17216 = !DILocation(line: 579, column: 15, scope: !17217)
!17217 = distinct !DILexicalBlock(scope: !17214, file: !3, line: 579, column: 4)
!17218 = !DILocation(line: 579, column: 24, scope: !17217)
!17219 = !DILocation(line: 579, column: 25, scope: !17217)
!17220 = !DILocation(line: 579, column: 28, scope: !17217)
!17221 = !DILocation(line: 579, column: 18, scope: !17217)
!17222 = !DILocation(line: 579, column: 17, scope: !17217)
!17223 = !DILocation(line: 579, column: 4, scope: !17214)
!17224 = !DILocation(line: 580, column: 12, scope: !17225)
!17225 = distinct !DILexicalBlock(scope: !17226, file: !3, line: 580, column: 5)
!17226 = distinct !DILexicalBlock(scope: !17217, file: !3, line: 579, column: 39)
!17227 = !DILocation(line: 580, column: 10, scope: !17225)
!17228 = !DILocation(line: 580, column: 16, scope: !17229)
!17229 = distinct !DILexicalBlock(scope: !17225, file: !3, line: 580, column: 5)
!17230 = !DILocation(line: 580, column: 25, scope: !17229)
!17231 = !DILocation(line: 580, column: 26, scope: !17229)
!17232 = !DILocation(line: 580, column: 29, scope: !17229)
!17233 = !DILocation(line: 580, column: 19, scope: !17229)
!17234 = !DILocation(line: 580, column: 18, scope: !17229)
!17235 = !DILocation(line: 580, column: 5, scope: !17225)
!17236 = !DILocation(line: 581, column: 13, scope: !17237)
!17237 = distinct !DILexicalBlock(scope: !17229, file: !3, line: 580, column: 40)
!17238 = !DILocation(line: 581, column: 11, scope: !17237)
!17239 = !DILocation(line: 583, column: 11, scope: !17237)
!17240 = !DILocation(line: 583, column: 17, scope: !17237)
!17241 = !DILocation(line: 583, column: 29, scope: !17237)
!17242 = !DILocation(line: 583, column: 32, scope: !17237)
!17243 = !DILocation(line: 583, column: 31, scope: !17237)
!17244 = !DILocation(line: 583, column: 27, scope: !17237)
!17245 = !DILocation(line: 583, column: 40, scope: !17237)
!17246 = !DILocation(line: 583, column: 43, scope: !17237)
!17247 = !DILocation(line: 583, column: 42, scope: !17237)
!17248 = !DILocation(line: 583, column: 38, scope: !17237)
!17249 = !DILocation(line: 583, column: 9, scope: !17237)
!17250 = !DILocation(line: 584, column: 17, scope: !17237)
!17251 = !DILocation(line: 584, column: 22, scope: !17237)
!17252 = !DILocation(line: 584, column: 26, scope: !17237)
!17253 = !DILocation(line: 584, column: 6, scope: !17237)
!17254 = !DILocation(line: 585, column: 16, scope: !17237)
!17255 = !DILocation(line: 585, column: 26, scope: !17237)
!17256 = !DILocation(line: 585, column: 20, scope: !17237)
!17257 = !DILocation(line: 585, column: 18, scope: !17237)
!17258 = !DILocation(line: 585, column: 31, scope: !17237)
!17259 = !DILocation(line: 585, column: 32, scope: !17237)
!17260 = !DILocation(line: 585, column: 45, scope: !17237)
!17261 = !DILocation(line: 585, column: 39, scope: !17237)
!17262 = !DILocation(line: 585, column: 47, scope: !17237)
!17263 = !DILocation(line: 585, column: 10, scope: !17237)
!17264 = !DILocation(line: 585, column: 6, scope: !17237)
!17265 = !DILocation(line: 585, column: 13, scope: !17237)
!17266 = !DILocation(line: 586, column: 17, scope: !17237)
!17267 = !DILocation(line: 586, column: 22, scope: !17237)
!17268 = !DILocation(line: 586, column: 6, scope: !17237)
!17269 = !DILocation(line: 587, column: 22, scope: !17237)
!17270 = !DILocation(line: 587, column: 16, scope: !17237)
!17271 = !DILocation(line: 587, column: 34, scope: !17237)
!17272 = !DILocation(line: 587, column: 33, scope: !17237)
!17273 = !DILocation(line: 587, column: 25, scope: !17237)
!17274 = !DILocation(line: 587, column: 10, scope: !17237)
!17275 = !DILocation(line: 587, column: 6, scope: !17237)
!17276 = !DILocation(line: 587, column: 13, scope: !17237)
!17277 = !DILocation(line: 588, column: 23, scope: !17237)
!17278 = !DILocation(line: 588, column: 22, scope: !17237)
!17279 = !DILocation(line: 588, column: 10, scope: !17237)
!17280 = !DILocation(line: 588, column: 6, scope: !17237)
!17281 = !DILocation(line: 588, column: 13, scope: !17237)
!17282 = !DILocation(line: 591, column: 12, scope: !17283)
!17283 = distinct !DILexicalBlock(scope: !17237, file: !3, line: 591, column: 6)
!17284 = !DILocation(line: 591, column: 11, scope: !17283)
!17285 = !DILocation(line: 591, column: 16, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17283, file: !3, line: 591, column: 6)
!17287 = !DILocation(line: 591, column: 18, scope: !17286)
!17288 = !DILocation(line: 591, column: 17, scope: !17286)
!17289 = !DILocation(line: 591, column: 6, scope: !17283)
!17290 = !DILocation(line: 592, column: 18, scope: !17291)
!17291 = distinct !DILexicalBlock(scope: !17286, file: !3, line: 591, column: 40)
!17292 = !DILocation(line: 592, column: 22, scope: !17291)
!17293 = !DILocation(line: 592, column: 28, scope: !17291)
!17294 = !DILocation(line: 592, column: 35, scope: !17291)
!17295 = !DILocation(line: 592, column: 39, scope: !17291)
!17296 = !DILocation(line: 592, column: 7, scope: !17291)
!17297 = !DILocation(line: 593, column: 18, scope: !17291)
!17298 = !DILocation(line: 593, column: 22, scope: !17291)
!17299 = !DILocation(line: 593, column: 28, scope: !17291)
!17300 = !DILocation(line: 593, column: 35, scope: !17291)
!17301 = !DILocation(line: 593, column: 39, scope: !17291)
!17302 = !DILocation(line: 593, column: 7, scope: !17291)
!17303 = !DILocation(line: 594, column: 18, scope: !17291)
!17304 = !DILocation(line: 594, column: 22, scope: !17291)
!17305 = !DILocation(line: 594, column: 28, scope: !17291)
!17306 = !DILocation(line: 594, column: 35, scope: !17291)
!17307 = !DILocation(line: 594, column: 39, scope: !17291)
!17308 = !DILocation(line: 594, column: 7, scope: !17291)
!17309 = !DILocation(line: 596, column: 35, scope: !17310)
!17310 = distinct !DILexicalBlock(scope: !17291, file: !3, line: 596, column: 11)
!17311 = !DILocation(line: 596, column: 38, scope: !17310)
!17312 = !DILocation(line: 596, column: 43, scope: !17310)
!17313 = !DILocation(line: 596, column: 48, scope: !17310)
!17314 = !DILocation(line: 596, column: 52, scope: !17310)
!17315 = !DILocation(line: 596, column: 56, scope: !17310)
!17316 = !DILocation(line: 596, column: 11, scope: !17310)
!17317 = !DILocation(line: 596, column: 11, scope: !17291)
!17318 = !DILocation(line: 597, column: 12, scope: !17319)
!17319 = distinct !DILexicalBlock(scope: !17320, file: !3, line: 597, column: 12)
!17320 = distinct !DILexicalBlock(scope: !17310, file: !3, line: 596, column: 70)
!17321 = !DILocation(line: 597, column: 16, scope: !17319)
!17322 = !DILocation(line: 597, column: 12, scope: !17320)
!17323 = !DILocation(line: 598, column: 10, scope: !17319)
!17324 = !DILocation(line: 598, column: 19, scope: !17319)
!17325 = !DILocation(line: 598, column: 31, scope: !17319)
!17326 = !DILocation(line: 598, column: 26, scope: !17319)
!17327 = !DILocation(line: 598, column: 25, scope: !17319)
!17328 = !DILocation(line: 598, column: 13, scope: !17319)
!17329 = !DILocation(line: 598, column: 35, scope: !17319)
!17330 = !DILocation(line: 598, column: 34, scope: !17319)
!17331 = !DILocation(line: 598, column: 12, scope: !17319)
!17332 = !DILocation(line: 598, column: 43, scope: !17319)
!17333 = !DILocation(line: 598, column: 48, scope: !17319)
!17334 = !DILocation(line: 598, column: 9, scope: !17319)
!17335 = !DILocation(line: 600, column: 10, scope: !17319)
!17336 = !DILocation(line: 600, column: 19, scope: !17319)
!17337 = !DILocation(line: 600, column: 31, scope: !17319)
!17338 = !DILocation(line: 600, column: 26, scope: !17319)
!17339 = !DILocation(line: 600, column: 25, scope: !17319)
!17340 = !DILocation(line: 600, column: 13, scope: !17319)
!17341 = !DILocation(line: 600, column: 35, scope: !17319)
!17342 = !DILocation(line: 600, column: 34, scope: !17319)
!17343 = !DILocation(line: 600, column: 12, scope: !17319)
!17344 = !DILocation(line: 600, column: 43, scope: !17319)
!17345 = !DILocation(line: 600, column: 53, scope: !17319)
!17346 = !DILocation(line: 601, column: 7, scope: !17320)
!17347 = !DILocation(line: 602, column: 16, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17310, file: !3, line: 602, column: 16)
!17349 = !DILocation(line: 602, column: 23, scope: !17348)
!17350 = !DILocation(line: 602, column: 16, scope: !17310)
!17351 = !DILocation(line: 603, column: 19, scope: !17352)
!17352 = distinct !DILexicalBlock(scope: !17348, file: !3, line: 602, column: 27)
!17353 = !DILocation(line: 603, column: 23, scope: !17352)
!17354 = !DILocation(line: 603, column: 29, scope: !17352)
!17355 = !DILocation(line: 603, column: 36, scope: !17352)
!17356 = !DILocation(line: 603, column: 40, scope: !17352)
!17357 = !DILocation(line: 603, column: 8, scope: !17352)
!17358 = !DILocation(line: 605, column: 36, scope: !17359)
!17359 = distinct !DILexicalBlock(scope: !17352, file: !3, line: 605, column: 12)
!17360 = !DILocation(line: 605, column: 39, scope: !17359)
!17361 = !DILocation(line: 605, column: 44, scope: !17359)
!17362 = !DILocation(line: 605, column: 49, scope: !17359)
!17363 = !DILocation(line: 605, column: 53, scope: !17359)
!17364 = !DILocation(line: 605, column: 57, scope: !17359)
!17365 = !DILocation(line: 605, column: 12, scope: !17359)
!17366 = !DILocation(line: 605, column: 12, scope: !17352)
!17367 = !DILocation(line: 606, column: 13, scope: !17368)
!17368 = distinct !DILexicalBlock(scope: !17369, file: !3, line: 606, column: 13)
!17369 = distinct !DILexicalBlock(scope: !17359, file: !3, line: 605, column: 71)
!17370 = !DILocation(line: 606, column: 17, scope: !17368)
!17371 = !DILocation(line: 606, column: 13, scope: !17369)
!17372 = !DILocation(line: 607, column: 11, scope: !17368)
!17373 = !DILocation(line: 607, column: 20, scope: !17368)
!17374 = !DILocation(line: 607, column: 32, scope: !17368)
!17375 = !DILocation(line: 607, column: 27, scope: !17368)
!17376 = !DILocation(line: 607, column: 26, scope: !17368)
!17377 = !DILocation(line: 607, column: 14, scope: !17368)
!17378 = !DILocation(line: 607, column: 36, scope: !17368)
!17379 = !DILocation(line: 607, column: 35, scope: !17368)
!17380 = !DILocation(line: 607, column: 13, scope: !17368)
!17381 = !DILocation(line: 607, column: 44, scope: !17368)
!17382 = !DILocation(line: 607, column: 49, scope: !17368)
!17383 = !DILocation(line: 607, column: 10, scope: !17368)
!17384 = !DILocation(line: 609, column: 11, scope: !17368)
!17385 = !DILocation(line: 609, column: 20, scope: !17368)
!17386 = !DILocation(line: 609, column: 32, scope: !17368)
!17387 = !DILocation(line: 609, column: 27, scope: !17368)
!17388 = !DILocation(line: 609, column: 26, scope: !17368)
!17389 = !DILocation(line: 609, column: 14, scope: !17368)
!17390 = !DILocation(line: 609, column: 36, scope: !17368)
!17391 = !DILocation(line: 609, column: 35, scope: !17368)
!17392 = !DILocation(line: 609, column: 13, scope: !17368)
!17393 = !DILocation(line: 609, column: 44, scope: !17368)
!17394 = !DILocation(line: 609, column: 54, scope: !17368)
!17395 = !DILocation(line: 610, column: 8, scope: !17369)
!17396 = !DILocation(line: 611, column: 7, scope: !17352)
!17397 = !DILocation(line: 612, column: 6, scope: !17291)
!17398 = !DILocation(line: 591, column: 28, scope: !17286)
!17399 = !DILocation(line: 591, column: 36, scope: !17286)
!17400 = !DILocation(line: 591, column: 6, scope: !17286)
!17401 = distinct !{!17401, !17289, !17402}
!17402 = !DILocation(line: 612, column: 6, scope: !17283)
!17403 = !DILocation(line: 614, column: 10, scope: !17404)
!17404 = distinct !DILexicalBlock(scope: !17237, file: !3, line: 614, column: 10)
!17405 = !DILocation(line: 614, column: 14, scope: !17404)
!17406 = !DILocation(line: 614, column: 10, scope: !17237)
!17407 = !DILocalVariable(name: "in", scope: !17408, file: !3, line: 615, type: !260)
!17408 = distinct !DILexicalBlock(scope: !17404, file: !3, line: 614, column: 34)
!17409 = !DILocation(line: 615, column: 11, scope: !17408)
!17410 = !DILocation(line: 615, column: 14, scope: !17408)
!17411 = !DILocation(line: 615, column: 18, scope: !17408)
!17412 = !DILocation(line: 615, column: 28, scope: !17408)
!17413 = !DILocation(line: 616, column: 11, scope: !17414)
!17414 = distinct !DILexicalBlock(scope: !17408, file: !3, line: 616, column: 11)
!17415 = !DILocation(line: 616, column: 11, scope: !17408)
!17416 = !DILocation(line: 616, column: 15, scope: !17414)
!17417 = !DILocation(line: 616, column: 19, scope: !17414)
!17418 = !DILocation(line: 616, column: 29, scope: !17414)
!17419 = !DILocation(line: 617, column: 13, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17408, file: !3, line: 617, column: 7)
!17421 = !DILocation(line: 617, column: 12, scope: !17420)
!17422 = !DILocation(line: 617, column: 17, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17420, file: !3, line: 617, column: 7)
!17424 = !DILocation(line: 617, column: 19, scope: !17423)
!17425 = !DILocation(line: 617, column: 18, scope: !17423)
!17426 = !DILocation(line: 617, column: 7, scope: !17420)
!17427 = !DILocation(line: 618, column: 12, scope: !17428)
!17428 = distinct !DILexicalBlock(scope: !17429, file: !3, line: 618, column: 12)
!17429 = distinct !DILexicalBlock(scope: !17423, file: !3, line: 617, column: 33)
!17430 = !DILocation(line: 618, column: 15, scope: !17428)
!17431 = !DILocation(line: 618, column: 19, scope: !17428)
!17432 = !DILocation(line: 618, column: 22, scope: !17428)
!17433 = !DILocation(line: 618, column: 24, scope: !17428)
!17434 = !DILocation(line: 618, column: 23, scope: !17428)
!17435 = !DILocation(line: 618, column: 21, scope: !17428)
!17436 = !DILocation(line: 618, column: 32, scope: !17428)
!17437 = !DILocation(line: 618, column: 42, scope: !17428)
!17438 = !DILocation(line: 618, column: 12, scope: !17429)
!17439 = !DILocation(line: 619, column: 10, scope: !17428)
!17440 = !DILocation(line: 619, column: 13, scope: !17428)
!17441 = !DILocation(line: 619, column: 15, scope: !17428)
!17442 = !DILocation(line: 619, column: 14, scope: !17428)
!17443 = !DILocation(line: 619, column: 12, scope: !17428)
!17444 = !DILocation(line: 619, column: 23, scope: !17428)
!17445 = !DILocation(line: 619, column: 28, scope: !17428)
!17446 = !DILocation(line: 619, column: 9, scope: !17428)
!17447 = !DILocation(line: 622, column: 12, scope: !17429)
!17448 = !DILocation(line: 622, column: 18, scope: !17429)
!17449 = !DILocation(line: 622, column: 21, scope: !17429)
!17450 = !DILocation(line: 622, column: 23, scope: !17429)
!17451 = !DILocation(line: 622, column: 22, scope: !17429)
!17452 = !DILocation(line: 622, column: 20, scope: !17429)
!17453 = !DILocation(line: 622, column: 31, scope: !17429)
!17454 = !DILocation(line: 622, column: 15, scope: !17429)
!17455 = !DILocation(line: 622, column: 43, scope: !17429)
!17456 = !DILocation(line: 622, column: 10, scope: !17429)
!17457 = !DILocation(line: 623, column: 7, scope: !17429)
!17458 = !DILocation(line: 617, column: 29, scope: !17423)
!17459 = !DILocation(line: 617, column: 7, scope: !17423)
!17460 = distinct !{!17460, !17426, !17461}
!17461 = !DILocation(line: 623, column: 7, scope: !17420)
!17462 = !DILocation(line: 624, column: 6, scope: !17408)
!17463 = !DILocation(line: 625, column: 5, scope: !17237)
!17464 = !DILocation(line: 580, column: 36, scope: !17229)
!17465 = !DILocation(line: 580, column: 5, scope: !17229)
!17466 = distinct !{!17466, !17235, !17467}
!17467 = !DILocation(line: 625, column: 5, scope: !17225)
!17468 = !DILocation(line: 626, column: 4, scope: !17226)
!17469 = !DILocation(line: 579, column: 35, scope: !17217)
!17470 = !DILocation(line: 579, column: 4, scope: !17217)
!17471 = distinct !{!17471, !17223, !17472}
!17472 = !DILocation(line: 626, column: 4, scope: !17214)
!17473 = !DILocation(line: 627, column: 3, scope: !17180)
!17474 = !DILocation(line: 574, column: 22, scope: !17174)
!17475 = !DILocation(line: 574, column: 3, scope: !17174)
!17476 = distinct !{!17476, !17177, !17477}
!17477 = !DILocation(line: 627, column: 3, scope: !17171)
!17478 = !DILocation(line: 628, column: 2, scope: !17125)
!17479 = !DILocation(line: 630, column: 6, scope: !17480)
!17480 = distinct !DILexicalBlock(scope: !16775, file: !3, line: 630, column: 6)
!17481 = !DILocation(line: 630, column: 12, scope: !17480)
!17482 = !DILocation(line: 630, column: 18, scope: !17480)
!17483 = !DILocation(line: 630, column: 23, scope: !17480)
!17484 = !DILocation(line: 630, column: 6, scope: !16775)
!17485 = !DILocation(line: 631, column: 9, scope: !17486)
!17486 = distinct !DILexicalBlock(scope: !17487, file: !3, line: 631, column: 3)
!17487 = distinct !DILexicalBlock(scope: !17480, file: !3, line: 630, column: 46)
!17488 = !DILocation(line: 631, column: 13, scope: !17486)
!17489 = !DILocation(line: 631, column: 19, scope: !17486)
!17490 = !DILocation(line: 631, column: 25, scope: !17486)
!17491 = !DILocation(line: 631, column: 18, scope: !17486)
!17492 = !DILocation(line: 631, column: 8, scope: !17486)
!17493 = !DILocation(line: 631, column: 36, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17486, file: !3, line: 631, column: 3)
!17495 = !DILocation(line: 631, column: 38, scope: !17494)
!17496 = !DILocation(line: 631, column: 37, scope: !17494)
!17497 = !DILocation(line: 631, column: 3, scope: !17486)
!17498 = !DILocation(line: 632, column: 10, scope: !17499)
!17499 = distinct !DILexicalBlock(scope: !17500, file: !3, line: 632, column: 4)
!17500 = distinct !DILexicalBlock(scope: !17494, file: !3, line: 631, column: 48)
!17501 = !DILocation(line: 632, column: 9, scope: !17499)
!17502 = !DILocation(line: 632, column: 14, scope: !17503)
!17503 = distinct !DILexicalBlock(scope: !17499, file: !3, line: 632, column: 4)
!17504 = !DILocation(line: 632, column: 16, scope: !17503)
!17505 = !DILocation(line: 632, column: 15, scope: !17503)
!17506 = !DILocation(line: 632, column: 4, scope: !17499)
!17507 = !DILocation(line: 633, column: 11, scope: !17508)
!17508 = distinct !DILexicalBlock(scope: !17509, file: !3, line: 633, column: 5)
!17509 = distinct !DILexicalBlock(scope: !17503, file: !3, line: 632, column: 26)
!17510 = !DILocation(line: 633, column: 10, scope: !17508)
!17511 = !DILocation(line: 633, column: 15, scope: !17512)
!17512 = distinct !DILexicalBlock(scope: !17508, file: !3, line: 633, column: 5)
!17513 = !DILocation(line: 633, column: 17, scope: !17512)
!17514 = !DILocation(line: 633, column: 16, scope: !17512)
!17515 = !DILocation(line: 633, column: 5, scope: !17508)
!17516 = !DILocation(line: 634, column: 10, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17518, file: !3, line: 634, column: 10)
!17518 = distinct !DILexicalBlock(scope: !17512, file: !3, line: 633, column: 36)
!17519 = !DILocation(line: 634, column: 11, scope: !17517)
!17520 = !DILocation(line: 634, column: 10, scope: !17518)
!17521 = !DILocation(line: 635, column: 21, scope: !17517)
!17522 = !DILocation(line: 635, column: 22, scope: !17517)
!17523 = !DILocation(line: 635, column: 7, scope: !17517)
!17524 = !DILocation(line: 635, column: 11, scope: !17517)
!17525 = !DILocation(line: 635, column: 18, scope: !17517)
!17526 = !DILocation(line: 637, column: 10, scope: !17527)
!17527 = distinct !DILexicalBlock(scope: !17518, file: !3, line: 637, column: 10)
!17528 = !DILocation(line: 637, column: 11, scope: !17527)
!17529 = !DILocation(line: 637, column: 10, scope: !17518)
!17530 = !DILocation(line: 638, column: 21, scope: !17531)
!17531 = distinct !DILexicalBlock(scope: !17527, file: !3, line: 637, column: 15)
!17532 = !DILocation(line: 638, column: 22, scope: !17531)
!17533 = !DILocation(line: 638, column: 7, scope: !17531)
!17534 = !DILocation(line: 638, column: 11, scope: !17531)
!17535 = !DILocation(line: 638, column: 18, scope: !17531)
!17536 = !DILocation(line: 639, column: 21, scope: !17531)
!17537 = !DILocation(line: 639, column: 22, scope: !17531)
!17538 = !DILocation(line: 639, column: 7, scope: !17531)
!17539 = !DILocation(line: 639, column: 11, scope: !17531)
!17540 = !DILocation(line: 639, column: 18, scope: !17531)
!17541 = !DILocation(line: 640, column: 6, scope: !17531)
!17542 = !DILocation(line: 641, column: 5, scope: !17518)
!17543 = !DILocation(line: 633, column: 23, scope: !17512)
!17544 = !DILocation(line: 633, column: 27, scope: !17512)
!17545 = !DILocation(line: 633, column: 32, scope: !17512)
!17546 = !DILocation(line: 633, column: 5, scope: !17512)
!17547 = distinct !{!17547, !17515, !17548}
!17548 = !DILocation(line: 641, column: 5, scope: !17508)
!17549 = !DILocation(line: 642, column: 4, scope: !17509)
!17550 = !DILocation(line: 632, column: 22, scope: !17503)
!17551 = !DILocation(line: 632, column: 4, scope: !17503)
!17552 = distinct !{!17552, !17506, !17553}
!17553 = !DILocation(line: 642, column: 4, scope: !17499)
!17554 = !DILocation(line: 643, column: 3, scope: !17500)
!17555 = !DILocation(line: 631, column: 44, scope: !17494)
!17556 = !DILocation(line: 631, column: 3, scope: !17494)
!17557 = distinct !{!17557, !17497, !17558}
!17558 = !DILocation(line: 643, column: 3, scope: !17486)
!17559 = !DILocation(line: 644, column: 2, scope: !17487)
!17560 = !DILocation(line: 646, column: 6, scope: !17561)
!17561 = distinct !DILexicalBlock(scope: !16775, file: !3, line: 646, column: 6)
!17562 = !DILocation(line: 646, column: 12, scope: !17561)
!17563 = !DILocation(line: 646, column: 18, scope: !17561)
!17564 = !DILocation(line: 646, column: 23, scope: !17561)
!17565 = !DILocation(line: 646, column: 6, scope: !16775)
!17566 = !DILocation(line: 647, column: 9, scope: !17567)
!17567 = distinct !DILexicalBlock(scope: !17568, file: !3, line: 647, column: 3)
!17568 = distinct !DILexicalBlock(scope: !17561, file: !3, line: 646, column: 43)
!17569 = !DILocation(line: 647, column: 8, scope: !17567)
!17570 = !DILocation(line: 647, column: 13, scope: !17571)
!17571 = distinct !DILexicalBlock(scope: !17567, file: !3, line: 647, column: 3)
!17572 = !DILocation(line: 647, column: 15, scope: !17571)
!17573 = !DILocation(line: 647, column: 14, scope: !17571)
!17574 = !DILocation(line: 647, column: 3, scope: !17567)
!17575 = !DILocation(line: 648, column: 10, scope: !17576)
!17576 = distinct !DILexicalBlock(scope: !17577, file: !3, line: 648, column: 4)
!17577 = distinct !DILexicalBlock(scope: !17571, file: !3, line: 647, column: 29)
!17578 = !DILocation(line: 648, column: 9, scope: !17576)
!17579 = !DILocation(line: 648, column: 14, scope: !17580)
!17580 = distinct !DILexicalBlock(scope: !17576, file: !3, line: 648, column: 4)
!17581 = !DILocation(line: 648, column: 16, scope: !17580)
!17582 = !DILocation(line: 648, column: 15, scope: !17580)
!17583 = !DILocation(line: 648, column: 4, scope: !17576)
!17584 = !DILocation(line: 649, column: 8, scope: !17585)
!17585 = distinct !DILexicalBlock(scope: !17580, file: !3, line: 648, column: 30)
!17586 = !DILocation(line: 649, column: 14, scope: !17585)
!17587 = !DILocation(line: 649, column: 26, scope: !17585)
!17588 = !DILocation(line: 649, column: 31, scope: !17585)
!17589 = !DILocation(line: 649, column: 33, scope: !17585)
!17590 = !DILocation(line: 649, column: 32, scope: !17585)
!17591 = !DILocation(line: 649, column: 39, scope: !17585)
!17592 = !DILocation(line: 649, column: 37, scope: !17585)
!17593 = !DILocation(line: 649, column: 29, scope: !17585)
!17594 = !DILocation(line: 649, column: 24, scope: !17585)
!17595 = !DILocation(line: 649, column: 7, scope: !17585)
!17596 = !DILocation(line: 650, column: 11, scope: !17597)
!17597 = distinct !DILexicalBlock(scope: !17585, file: !3, line: 650, column: 5)
!17598 = !DILocation(line: 650, column: 10, scope: !17597)
!17599 = !DILocation(line: 650, column: 15, scope: !17600)
!17600 = distinct !DILexicalBlock(scope: !17597, file: !3, line: 650, column: 5)
!17601 = !DILocation(line: 650, column: 17, scope: !17600)
!17602 = !DILocation(line: 650, column: 16, scope: !17600)
!17603 = !DILocation(line: 650, column: 5, scope: !17597)
!17604 = !DILocation(line: 651, column: 6, scope: !17605)
!17605 = distinct !DILexicalBlock(scope: !17600, file: !3, line: 650, column: 37)
!17606 = !DILocation(line: 651, column: 10, scope: !17605)
!17607 = !DILocation(line: 651, column: 15, scope: !17605)
!17608 = !DILocation(line: 652, column: 5, scope: !17605)
!17609 = !DILocation(line: 650, column: 27, scope: !17600)
!17610 = !DILocation(line: 650, column: 33, scope: !17600)
!17611 = !DILocation(line: 650, column: 5, scope: !17600)
!17612 = distinct !{!17612, !17603, !17613}
!17613 = !DILocation(line: 652, column: 5, scope: !17597)
!17614 = !DILocation(line: 653, column: 4, scope: !17585)
!17615 = !DILocation(line: 648, column: 26, scope: !17580)
!17616 = !DILocation(line: 648, column: 4, scope: !17580)
!17617 = distinct !{!17617, !17583, !17618}
!17618 = !DILocation(line: 653, column: 4, scope: !17576)
!17619 = !DILocation(line: 654, column: 3, scope: !17577)
!17620 = !DILocation(line: 647, column: 25, scope: !17571)
!17621 = !DILocation(line: 647, column: 3, scope: !17571)
!17622 = distinct !{!17622, !17574, !17623}
!17623 = !DILocation(line: 654, column: 3, scope: !17567)
!17624 = !DILocation(line: 655, column: 2, scope: !17568)
!17625 = !DILocation(line: 657, column: 6, scope: !17626)
!17626 = distinct !DILexicalBlock(scope: !16775, file: !3, line: 657, column: 6)
!17627 = !DILocation(line: 657, column: 12, scope: !17626)
!17628 = !DILocation(line: 657, column: 18, scope: !17626)
!17629 = !DILocation(line: 657, column: 28, scope: !17626)
!17630 = !DILocation(line: 657, column: 6, scope: !16775)
!17631 = !DILocalVariable(name: "rfac", scope: !17632, file: !3, line: 658, type: !341)
!17632 = distinct !DILexicalBlock(scope: !17626, file: !3, line: 657, column: 35)
!17633 = !DILocation(line: 658, column: 9, scope: !17632)
!17634 = !DILocation(line: 658, column: 16, scope: !17632)
!17635 = !DILocation(line: 658, column: 20, scope: !17632)
!17636 = !DILocation(line: 658, column: 26, scope: !17632)
!17637 = !DILocation(line: 658, column: 32, scope: !17632)
!17638 = !DILocation(line: 658, column: 18, scope: !17632)
!17639 = !DILocation(line: 659, column: 9, scope: !17640)
!17640 = distinct !DILexicalBlock(scope: !17632, file: !3, line: 659, column: 3)
!17641 = !DILocation(line: 659, column: 15, scope: !17640)
!17642 = !DILocation(line: 659, column: 21, scope: !17640)
!17643 = !DILocation(line: 659, column: 14, scope: !17640)
!17644 = !DILocation(line: 659, column: 8, scope: !17640)
!17645 = !DILocation(line: 659, column: 32, scope: !17646)
!17646 = distinct !DILexicalBlock(scope: !17640, file: !3, line: 659, column: 3)
!17647 = !DILocation(line: 659, column: 34, scope: !17646)
!17648 = !DILocation(line: 659, column: 40, scope: !17646)
!17649 = !DILocation(line: 659, column: 33, scope: !17646)
!17650 = !DILocation(line: 659, column: 3, scope: !17640)
!17651 = !DILocation(line: 660, column: 8, scope: !17652)
!17652 = distinct !DILexicalBlock(scope: !17653, file: !3, line: 660, column: 8)
!17653 = distinct !DILexicalBlock(scope: !17646, file: !3, line: 659, column: 59)
!17654 = !DILocation(line: 660, column: 12, scope: !17652)
!17655 = !DILocation(line: 660, column: 17, scope: !17652)
!17656 = !DILocation(line: 660, column: 8, scope: !17653)
!17657 = !DILocation(line: 661, column: 5, scope: !17652)
!17658 = !DILocation(line: 663, column: 18, scope: !17653)
!17659 = !DILocation(line: 663, column: 37, scope: !17653)
!17660 = !DILocation(line: 663, column: 43, scope: !17653)
!17661 = !DILocation(line: 663, column: 45, scope: !17653)
!17662 = !DILocation(line: 663, column: 26, scope: !17653)
!17663 = !DILocation(line: 663, column: 51, scope: !17653)
!17664 = !DILocation(line: 663, column: 23, scope: !17653)
!17665 = !DILocation(line: 663, column: 4, scope: !17653)
!17666 = !DILocation(line: 663, column: 8, scope: !17653)
!17667 = !DILocation(line: 663, column: 15, scope: !17653)
!17668 = !DILocation(line: 664, column: 18, scope: !17653)
!17669 = !DILocation(line: 664, column: 37, scope: !17653)
!17670 = !DILocation(line: 664, column: 43, scope: !17653)
!17671 = !DILocation(line: 664, column: 45, scope: !17653)
!17672 = !DILocation(line: 664, column: 26, scope: !17653)
!17673 = !DILocation(line: 664, column: 51, scope: !17653)
!17674 = !DILocation(line: 664, column: 23, scope: !17653)
!17675 = !DILocation(line: 664, column: 4, scope: !17653)
!17676 = !DILocation(line: 664, column: 8, scope: !17653)
!17677 = !DILocation(line: 664, column: 15, scope: !17653)
!17678 = !DILocation(line: 665, column: 18, scope: !17653)
!17679 = !DILocation(line: 665, column: 37, scope: !17653)
!17680 = !DILocation(line: 665, column: 43, scope: !17653)
!17681 = !DILocation(line: 665, column: 45, scope: !17653)
!17682 = !DILocation(line: 665, column: 26, scope: !17653)
!17683 = !DILocation(line: 665, column: 51, scope: !17653)
!17684 = !DILocation(line: 665, column: 23, scope: !17653)
!17685 = !DILocation(line: 665, column: 4, scope: !17653)
!17686 = !DILocation(line: 665, column: 8, scope: !17653)
!17687 = !DILocation(line: 665, column: 15, scope: !17653)
!17688 = !DILocation(line: 666, column: 3, scope: !17653)
!17689 = !DILocation(line: 659, column: 50, scope: !17646)
!17690 = !DILocation(line: 659, column: 55, scope: !17646)
!17691 = !DILocation(line: 659, column: 3, scope: !17646)
!17692 = distinct !{!17692, !17650, !17693}
!17693 = !DILocation(line: 666, column: 3, scope: !17640)
!17694 = !DILocation(line: 667, column: 2, scope: !17632)
!17695 = !DILocation(line: 668, column: 1, scope: !16775)
!17696 = distinct !DISubprogram(name: "distribute_binary_search", scope: !3, file: !3, line: 762, type: !17697, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!17697 = !DISubroutineType(types: !17698)
!17698 = !{!260, !1796, !260, !341}
!17699 = !DILocalVariable(name: "sum", arg: 1, scope: !17696, file: !3, line: 762, type: !1796)
!17700 = !DILocation(line: 762, column: 44, scope: !17696)
!17701 = !DILocalVariable(name: "n", arg: 2, scope: !17696, file: !3, line: 762, type: !260)
!17702 = !DILocation(line: 762, column: 53, scope: !17696)
!17703 = !DILocalVariable(name: "value", arg: 3, scope: !17696, file: !3, line: 762, type: !341)
!17704 = !DILocation(line: 762, column: 62, scope: !17696)
!17705 = !DILocalVariable(name: "mid", scope: !17696, file: !3, line: 764, type: !260)
!17706 = !DILocation(line: 764, column: 6, scope: !17696)
!17707 = !DILocalVariable(name: "low", scope: !17696, file: !3, line: 764, type: !260)
!17708 = !DILocation(line: 764, column: 11, scope: !17696)
!17709 = !DILocalVariable(name: "high", scope: !17696, file: !3, line: 764, type: !260)
!17710 = !DILocation(line: 764, column: 18, scope: !17696)
!17711 = !DILocation(line: 764, column: 23, scope: !17696)
!17712 = !DILocation(line: 766, column: 6, scope: !17713)
!17713 = distinct !DILexicalBlock(scope: !17696, file: !3, line: 766, column: 6)
!17714 = !DILocation(line: 766, column: 12, scope: !17713)
!17715 = !DILocation(line: 766, column: 6, scope: !17696)
!17716 = !DILocation(line: 767, column: 3, scope: !17713)
!17717 = !DILocation(line: 769, column: 2, scope: !17696)
!17718 = !DILocation(line: 769, column: 9, scope: !17696)
!17719 = !DILocation(line: 769, column: 16, scope: !17696)
!17720 = !DILocation(line: 769, column: 13, scope: !17696)
!17721 = !DILocation(line: 770, column: 9, scope: !17722)
!17722 = distinct !DILexicalBlock(scope: !17696, file: !3, line: 769, column: 22)
!17723 = !DILocation(line: 770, column: 15, scope: !17722)
!17724 = !DILocation(line: 770, column: 13, scope: !17722)
!17725 = !DILocation(line: 770, column: 20, scope: !17722)
!17726 = !DILocation(line: 770, column: 6, scope: !17722)
!17727 = !DILocation(line: 772, column: 7, scope: !17728)
!17728 = distinct !DILexicalBlock(scope: !17722, file: !3, line: 772, column: 7)
!17729 = !DILocation(line: 772, column: 11, scope: !17728)
!17730 = !DILocation(line: 772, column: 18, scope: !17728)
!17731 = !DILocation(line: 772, column: 16, scope: !17728)
!17732 = !DILocation(line: 772, column: 24, scope: !17728)
!17733 = !DILocation(line: 772, column: 27, scope: !17728)
!17734 = !DILocation(line: 772, column: 36, scope: !17728)
!17735 = !DILocation(line: 772, column: 40, scope: !17728)
!17736 = !DILocation(line: 772, column: 43, scope: !17728)
!17737 = !DILocation(line: 772, column: 33, scope: !17728)
!17738 = !DILocation(line: 772, column: 7, scope: !17722)
!17739 = !DILocation(line: 773, column: 11, scope: !17728)
!17740 = !DILocation(line: 773, column: 4, scope: !17728)
!17741 = !DILocation(line: 775, column: 7, scope: !17742)
!17742 = distinct !DILexicalBlock(scope: !17722, file: !3, line: 775, column: 7)
!17743 = !DILocation(line: 775, column: 11, scope: !17742)
!17744 = !DILocation(line: 775, column: 19, scope: !17742)
!17745 = !DILocation(line: 775, column: 16, scope: !17742)
!17746 = !DILocation(line: 775, column: 7, scope: !17722)
!17747 = !DILocation(line: 776, column: 10, scope: !17742)
!17748 = !DILocation(line: 776, column: 14, scope: !17742)
!17749 = !DILocation(line: 776, column: 8, scope: !17742)
!17750 = !DILocation(line: 776, column: 4, scope: !17742)
!17751 = !DILocation(line: 777, column: 12, scope: !17752)
!17752 = distinct !DILexicalBlock(scope: !17742, file: !3, line: 777, column: 12)
!17753 = !DILocation(line: 777, column: 16, scope: !17752)
!17754 = !DILocation(line: 777, column: 23, scope: !17752)
!17755 = !DILocation(line: 777, column: 21, scope: !17752)
!17756 = !DILocation(line: 777, column: 12, scope: !17742)
!17757 = !DILocation(line: 778, column: 9, scope: !17752)
!17758 = !DILocation(line: 778, column: 13, scope: !17752)
!17759 = !DILocation(line: 778, column: 7, scope: !17752)
!17760 = !DILocation(line: 778, column: 4, scope: !17752)
!17761 = !DILocation(line: 780, column: 11, scope: !17752)
!17762 = !DILocation(line: 780, column: 4, scope: !17752)
!17763 = distinct !{!17763, !17717, !17764}
!17764 = !DILocation(line: 781, column: 2, scope: !17696)
!17765 = !DILocation(line: 783, column: 9, scope: !17696)
!17766 = !DILocation(line: 783, column: 2, scope: !17696)
!17767 = !DILocation(line: 784, column: 1, scope: !17696)
!17768 = distinct !DISubprogram(name: "distribute_compare_orig_index", scope: !3, file: !3, line: 1014, type: !17769, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!17769 = !DISubroutineType(types: !17770)
!17770 = !{!260, !17771, !17771, !229}
!17771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17772, size: 64)
!17772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!17773 = !DILocalVariable(name: "p1", arg: 1, scope: !17768, file: !3, line: 1014, type: !17771)
!17774 = !DILocation(line: 1014, column: 54, scope: !17768)
!17775 = !DILocalVariable(name: "p2", arg: 2, scope: !17768, file: !3, line: 1014, type: !17771)
!17776 = !DILocation(line: 1014, column: 70, scope: !17768)
!17777 = !DILocalVariable(name: "user_data", arg: 3, scope: !17768, file: !3, line: 1014, type: !229)
!17778 = !DILocation(line: 1014, column: 80, scope: !17768)
!17779 = !DILocalVariable(name: "orig_index", scope: !17768, file: !3, line: 1016, type: !2797)
!17780 = !DILocation(line: 1016, column: 7, scope: !17768)
!17781 = !DILocation(line: 1016, column: 28, scope: !17768)
!17782 = !DILocation(line: 1016, column: 20, scope: !17768)
!17783 = !DILocalVariable(name: "index1", scope: !17768, file: !3, line: 1017, type: !260)
!17784 = !DILocation(line: 1017, column: 6, scope: !17768)
!17785 = !DILocation(line: 1017, column: 15, scope: !17768)
!17786 = !DILocation(line: 1017, column: 40, scope: !17768)
!17787 = !DILocation(line: 1017, column: 27, scope: !17768)
!17788 = !DILocation(line: 1017, column: 26, scope: !17768)
!17789 = !DILocalVariable(name: "index2", scope: !17768, file: !3, line: 1018, type: !260)
!17790 = !DILocation(line: 1018, column: 6, scope: !17768)
!17791 = !DILocation(line: 1018, column: 15, scope: !17768)
!17792 = !DILocation(line: 1018, column: 40, scope: !17768)
!17793 = !DILocation(line: 1018, column: 27, scope: !17768)
!17794 = !DILocation(line: 1018, column: 26, scope: !17768)
!17795 = !DILocation(line: 1020, column: 6, scope: !17796)
!17796 = distinct !DILexicalBlock(scope: !17768, file: !3, line: 1020, column: 6)
!17797 = !DILocation(line: 1020, column: 15, scope: !17796)
!17798 = !DILocation(line: 1020, column: 13, scope: !17796)
!17799 = !DILocation(line: 1020, column: 6, scope: !17768)
!17800 = !DILocation(line: 1021, column: 3, scope: !17796)
!17801 = !DILocation(line: 1022, column: 11, scope: !17802)
!17802 = distinct !DILexicalBlock(scope: !17796, file: !3, line: 1022, column: 11)
!17803 = !DILocation(line: 1022, column: 21, scope: !17802)
!17804 = !DILocation(line: 1022, column: 18, scope: !17802)
!17805 = !DILocation(line: 1022, column: 11, scope: !17796)
!17806 = !DILocation(line: 1025, column: 7, scope: !17807)
!17807 = distinct !DILexicalBlock(scope: !17808, file: !3, line: 1025, column: 7)
!17808 = distinct !DILexicalBlock(scope: !17802, file: !3, line: 1022, column: 29)
!17809 = !DILocation(line: 1025, column: 12, scope: !17807)
!17810 = !DILocation(line: 1025, column: 10, scope: !17807)
!17811 = !DILocation(line: 1025, column: 7, scope: !17808)
!17812 = !DILocation(line: 1026, column: 4, scope: !17807)
!17813 = !DILocation(line: 1027, column: 12, scope: !17814)
!17814 = distinct !DILexicalBlock(scope: !17807, file: !3, line: 1027, column: 12)
!17815 = !DILocation(line: 1027, column: 18, scope: !17814)
!17816 = !DILocation(line: 1027, column: 15, scope: !17814)
!17817 = !DILocation(line: 1027, column: 12, scope: !17807)
!17818 = !DILocation(line: 1028, column: 4, scope: !17814)
!17819 = !DILocation(line: 1030, column: 4, scope: !17814)
!17820 = !DILocation(line: 1033, column: 3, scope: !17802)
!17821 = !DILocation(line: 1034, column: 1, scope: !17768)
!17822 = distinct !DISubprogram(name: "init_mv_jit", scope: !3, file: !3, line: 694, type: !17823, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!17823 = !DISubroutineType(types: !17824)
!17824 = !{null, !1796, !260, !260, !341}
!17825 = !DILocalVariable(name: "jit", arg: 1, scope: !17822, file: !3, line: 694, type: !1796)
!17826 = !DILocation(line: 694, column: 32, scope: !17822)
!17827 = !DILocalVariable(name: "num", arg: 2, scope: !17822, file: !3, line: 694, type: !260)
!17828 = !DILocation(line: 694, column: 41, scope: !17822)
!17829 = !DILocalVariable(name: "seed2", arg: 3, scope: !17822, file: !3, line: 694, type: !260)
!17830 = !DILocation(line: 694, column: 50, scope: !17822)
!17831 = !DILocalVariable(name: "amount", arg: 4, scope: !17822, file: !3, line: 694, type: !341)
!17832 = !DILocation(line: 694, column: 63, scope: !17822)
!17833 = !DILocalVariable(name: "rng", scope: !17822, file: !3, line: 696, type: !11146)
!17834 = !DILocation(line: 696, column: 7, scope: !17822)
!17835 = !DILocalVariable(name: "jit2", scope: !17822, file: !3, line: 697, type: !1796)
!17836 = !DILocation(line: 697, column: 9, scope: !17822)
!17837 = !DILocalVariable(name: "x", scope: !17822, file: !3, line: 697, type: !341)
!17838 = !DILocation(line: 697, column: 15, scope: !17822)
!17839 = !DILocalVariable(name: "rad1", scope: !17822, file: !3, line: 697, type: !341)
!17840 = !DILocation(line: 697, column: 18, scope: !17822)
!17841 = !DILocalVariable(name: "rad2", scope: !17822, file: !3, line: 697, type: !341)
!17842 = !DILocation(line: 697, column: 24, scope: !17822)
!17843 = !DILocalVariable(name: "rad3", scope: !17822, file: !3, line: 697, type: !341)
!17844 = !DILocation(line: 697, column: 30, scope: !17822)
!17845 = !DILocalVariable(name: "i", scope: !17822, file: !3, line: 698, type: !260)
!17846 = !DILocation(line: 698, column: 6, scope: !17822)
!17847 = !DILocalVariable(name: "num2", scope: !17822, file: !3, line: 698, type: !260)
!17848 = !DILocation(line: 698, column: 9, scope: !17822)
!17849 = !DILocation(line: 700, column: 6, scope: !17850)
!17850 = distinct !DILexicalBlock(scope: !17822, file: !3, line: 700, column: 6)
!17851 = !DILocation(line: 700, column: 9, scope: !17850)
!17852 = !DILocation(line: 700, column: 6, scope: !17822)
!17853 = !DILocation(line: 700, column: 14, scope: !17850)
!17854 = !DILocation(line: 702, column: 34, scope: !17822)
!17855 = !DILocation(line: 702, column: 27, scope: !17822)
!17856 = !DILocation(line: 702, column: 21, scope: !17822)
!17857 = !DILocation(line: 702, column: 20, scope: !17822)
!17858 = !DILocation(line: 702, column: 6, scope: !17822)
!17859 = !DILocation(line: 703, column: 29, scope: !17822)
!17860 = !DILocation(line: 703, column: 22, scope: !17822)
!17861 = !DILocation(line: 703, column: 20, scope: !17822)
!17862 = !DILocation(line: 703, column: 6, scope: !17822)
!17863 = !DILocation(line: 704, column: 28, scope: !17822)
!17864 = !DILocation(line: 704, column: 21, scope: !17822)
!17865 = !DILocation(line: 704, column: 15, scope: !17822)
!17866 = !DILocation(line: 704, column: 41, scope: !17822)
!17867 = !DILocation(line: 704, column: 34, scope: !17822)
!17868 = !DILocation(line: 704, column: 32, scope: !17822)
!17869 = !DILocation(line: 704, column: 6, scope: !17822)
!17870 = !DILocation(line: 706, column: 31, scope: !17822)
!17871 = !DILocation(line: 706, column: 29, scope: !17822)
!17872 = !DILocation(line: 706, column: 37, scope: !17822)
!17873 = !DILocation(line: 706, column: 35, scope: !17822)
!17874 = !DILocation(line: 706, column: 8, scope: !17822)
!17875 = !DILocation(line: 706, column: 6, scope: !17822)
!17876 = !DILocation(line: 707, column: 3, scope: !17822)
!17877 = !DILocation(line: 708, column: 14, scope: !17822)
!17878 = !DILocation(line: 708, column: 12, scope: !17822)
!17879 = !DILocation(line: 708, column: 8, scope: !17822)
!17880 = !DILocation(line: 709, column: 8, scope: !17881)
!17881 = distinct !DILexicalBlock(scope: !17822, file: !3, line: 709, column: 2)
!17882 = !DILocation(line: 709, column: 7, scope: !17881)
!17883 = !DILocation(line: 709, column: 12, scope: !17884)
!17884 = distinct !DILexicalBlock(scope: !17881, file: !3, line: 709, column: 2)
!17885 = !DILocation(line: 709, column: 14, scope: !17884)
!17886 = !DILocation(line: 709, column: 13, scope: !17884)
!17887 = !DILocation(line: 709, column: 2, scope: !17881)
!17888 = !DILocation(line: 711, column: 12, scope: !17889)
!17889 = distinct !DILexicalBlock(scope: !17884, file: !3, line: 709, column: 26)
!17890 = !DILocation(line: 711, column: 16, scope: !17889)
!17891 = !DILocation(line: 711, column: 23, scope: !17889)
!17892 = !DILocation(line: 711, column: 22, scope: !17889)
!17893 = !DILocation(line: 711, column: 54, scope: !17889)
!17894 = !DILocation(line: 711, column: 36, scope: !17889)
!17895 = !DILocation(line: 711, column: 34, scope: !17889)
!17896 = !DILocation(line: 711, column: 27, scope: !17889)
!17897 = !DILocation(line: 711, column: 14, scope: !17889)
!17898 = !DILocation(line: 711, column: 3, scope: !17889)
!17899 = !DILocation(line: 711, column: 7, scope: !17889)
!17900 = !DILocation(line: 711, column: 10, scope: !17889)
!17901 = !DILocation(line: 712, column: 14, scope: !17889)
!17902 = !DILocation(line: 712, column: 22, scope: !17889)
!17903 = !DILocation(line: 712, column: 21, scope: !17889)
!17904 = !DILocation(line: 712, column: 15, scope: !17889)
!17905 = !DILocation(line: 712, column: 29, scope: !17889)
!17906 = !DILocation(line: 712, column: 36, scope: !17889)
!17907 = !DILocation(line: 712, column: 35, scope: !17889)
!17908 = !DILocation(line: 712, column: 67, scope: !17889)
!17909 = !DILocation(line: 712, column: 49, scope: !17889)
!17910 = !DILocation(line: 712, column: 47, scope: !17889)
!17911 = !DILocation(line: 712, column: 40, scope: !17889)
!17912 = !DILocation(line: 712, column: 27, scope: !17889)
!17913 = !DILocation(line: 712, column: 3, scope: !17889)
!17914 = !DILocation(line: 712, column: 7, scope: !17889)
!17915 = !DILocation(line: 712, column: 8, scope: !17889)
!17916 = !DILocation(line: 712, column: 12, scope: !17889)
!17917 = !DILocation(line: 714, column: 25, scope: !17889)
!17918 = !DILocation(line: 714, column: 29, scope: !17889)
!17919 = !DILocation(line: 714, column: 19, scope: !17889)
!17920 = !DILocation(line: 714, column: 12, scope: !17889)
!17921 = !DILocation(line: 714, column: 3, scope: !17889)
!17922 = !DILocation(line: 714, column: 7, scope: !17889)
!17923 = !DILocation(line: 714, column: 9, scope: !17889)
!17924 = !DILocation(line: 715, column: 27, scope: !17889)
!17925 = !DILocation(line: 715, column: 31, scope: !17889)
!17926 = !DILocation(line: 715, column: 32, scope: !17889)
!17927 = !DILocation(line: 715, column: 21, scope: !17889)
!17928 = !DILocation(line: 715, column: 14, scope: !17889)
!17929 = !DILocation(line: 715, column: 3, scope: !17889)
!17930 = !DILocation(line: 715, column: 7, scope: !17889)
!17931 = !DILocation(line: 715, column: 8, scope: !17889)
!17932 = !DILocation(line: 715, column: 11, scope: !17889)
!17933 = !DILocation(line: 717, column: 7, scope: !17889)
!17934 = !DILocation(line: 717, column: 4, scope: !17889)
!17935 = !DILocation(line: 718, column: 21, scope: !17889)
!17936 = !DILocation(line: 718, column: 15, scope: !17889)
!17937 = !DILocation(line: 718, column: 8, scope: !17889)
!17938 = !DILocation(line: 718, column: 5, scope: !17889)
!17939 = !DILocation(line: 719, column: 2, scope: !17889)
!17940 = !DILocation(line: 709, column: 21, scope: !17884)
!17941 = !DILocation(line: 709, column: 2, scope: !17884)
!17942 = distinct !{!17942, !17887, !17943}
!17943 = !DILocation(line: 719, column: 2, scope: !17881)
!17944 = !DILocation(line: 721, column: 8, scope: !17822)
!17945 = !DILocation(line: 721, column: 41, scope: !17822)
!17946 = !DILocation(line: 721, column: 40, scope: !17822)
!17947 = !DILocation(line: 721, column: 23, scope: !17822)
!17948 = !DILocation(line: 721, column: 6, scope: !17822)
!17949 = !DILocation(line: 723, column: 8, scope: !17950)
!17950 = distinct !DILexicalBlock(scope: !17822, file: !3, line: 723, column: 2)
!17951 = !DILocation(line: 723, column: 7, scope: !17950)
!17952 = !DILocation(line: 723, column: 13, scope: !17953)
!17953 = distinct !DILexicalBlock(scope: !17950, file: !3, line: 723, column: 2)
!17954 = !DILocation(line: 723, column: 14, scope: !17953)
!17955 = !DILocation(line: 723, column: 2, scope: !17950)
!17956 = !DILocation(line: 724, column: 32, scope: !17957)
!17957 = distinct !DILexicalBlock(scope: !17953, file: !3, line: 723, column: 24)
!17958 = !DILocation(line: 724, column: 18, scope: !17957)
!17959 = !DILocation(line: 724, column: 51, scope: !17957)
!17960 = !DILocation(line: 724, column: 37, scope: !17957)
!17961 = !DILocation(line: 724, column: 57, scope: !17957)
!17962 = !DILocation(line: 724, column: 62, scope: !17957)
!17963 = !DILocation(line: 724, column: 3, scope: !17957)
!17964 = !DILocation(line: 725, column: 32, scope: !17957)
!17965 = !DILocation(line: 725, column: 18, scope: !17957)
!17966 = !DILocation(line: 725, column: 51, scope: !17957)
!17967 = !DILocation(line: 725, column: 37, scope: !17957)
!17968 = !DILocation(line: 725, column: 57, scope: !17957)
!17969 = !DILocation(line: 725, column: 62, scope: !17957)
!17970 = !DILocation(line: 725, column: 3, scope: !17957)
!17971 = !DILocation(line: 726, column: 32, scope: !17957)
!17972 = !DILocation(line: 726, column: 18, scope: !17957)
!17973 = !DILocation(line: 726, column: 51, scope: !17957)
!17974 = !DILocation(line: 726, column: 37, scope: !17957)
!17975 = !DILocation(line: 726, column: 57, scope: !17957)
!17976 = !DILocation(line: 726, column: 62, scope: !17957)
!17977 = !DILocation(line: 726, column: 3, scope: !17957)
!17978 = !DILocation(line: 727, column: 2, scope: !17957)
!17979 = !DILocation(line: 723, column: 20, scope: !17953)
!17980 = !DILocation(line: 723, column: 2, scope: !17953)
!17981 = distinct !{!17981, !17955, !17982}
!17982 = !DILocation(line: 727, column: 2, scope: !17950)
!17983 = !DILocation(line: 728, column: 2, scope: !17822)
!17984 = !DILocation(line: 728, column: 12, scope: !17822)
!17985 = !DILocation(line: 729, column: 15, scope: !17822)
!17986 = !DILocation(line: 729, column: 2, scope: !17822)
!17987 = !DILocation(line: 730, column: 1, scope: !17822)
!17988 = distinct !DISubprogram(name: "hammersley_create", scope: !3, file: !3, line: 671, type: !17823, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!17989 = !DILocalVariable(name: "out", arg: 1, scope: !17988, file: !3, line: 671, type: !1796)
!17990 = !DILocation(line: 671, column: 38, scope: !17988)
!17991 = !DILocalVariable(name: "n", arg: 2, scope: !17988, file: !3, line: 671, type: !260)
!17992 = !DILocation(line: 671, column: 47, scope: !17988)
!17993 = !DILocalVariable(name: "seed", arg: 3, scope: !17988, file: !3, line: 671, type: !260)
!17994 = !DILocation(line: 671, column: 54, scope: !17988)
!17995 = !DILocalVariable(name: "amount", arg: 4, scope: !17988, file: !3, line: 671, type: !341)
!17996 = !DILocation(line: 671, column: 66, scope: !17988)
!17997 = !DILocalVariable(name: "rng", scope: !17988, file: !3, line: 673, type: !11146)
!17998 = !DILocation(line: 673, column: 7, scope: !17988)
!17999 = !DILocalVariable(name: "p", scope: !17988, file: !3, line: 674, type: !3242)
!18000 = !DILocation(line: 674, column: 9, scope: !17988)
!18001 = !DILocalVariable(name: "t", scope: !17988, file: !3, line: 674, type: !3242)
!18002 = !DILocation(line: 674, column: 12, scope: !17988)
!18003 = !DILocalVariable(name: "offs", scope: !17988, file: !3, line: 674, type: !18004)
!18004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3242, size: 128, elements: !453)
!18005 = !DILocation(line: 674, column: 15, scope: !17988)
!18006 = !DILocalVariable(name: "k", scope: !17988, file: !3, line: 675, type: !260)
!18007 = !DILocation(line: 675, column: 6, scope: !17988)
!18008 = !DILocalVariable(name: "kk", scope: !17988, file: !3, line: 675, type: !260)
!18009 = !DILocation(line: 675, column: 9, scope: !17988)
!18010 = !DILocation(line: 677, column: 31, scope: !17988)
!18011 = !DILocation(line: 677, column: 29, scope: !17988)
!18012 = !DILocation(line: 677, column: 35, scope: !17988)
!18013 = !DILocation(line: 677, column: 33, scope: !17988)
!18014 = !DILocation(line: 677, column: 8, scope: !17988)
!18015 = !DILocation(line: 677, column: 6, scope: !17988)
!18016 = !DILocation(line: 678, column: 31, scope: !17988)
!18017 = !DILocation(line: 678, column: 12, scope: !17988)
!18018 = !DILocation(line: 678, column: 46, scope: !17988)
!18019 = !DILocation(line: 678, column: 38, scope: !17988)
!18020 = !DILocation(line: 678, column: 36, scope: !17988)
!18021 = !DILocation(line: 678, column: 2, scope: !17988)
!18022 = !DILocation(line: 678, column: 10, scope: !17988)
!18023 = !DILocation(line: 679, column: 31, scope: !17988)
!18024 = !DILocation(line: 679, column: 12, scope: !17988)
!18025 = !DILocation(line: 679, column: 46, scope: !17988)
!18026 = !DILocation(line: 679, column: 38, scope: !17988)
!18027 = !DILocation(line: 679, column: 36, scope: !17988)
!18028 = !DILocation(line: 679, column: 2, scope: !17988)
!18029 = !DILocation(line: 679, column: 10, scope: !17988)
!18030 = !DILocation(line: 680, column: 15, scope: !17988)
!18031 = !DILocation(line: 680, column: 2, scope: !17988)
!18032 = !DILocation(line: 682, column: 9, scope: !18033)
!18033 = distinct !DILexicalBlock(scope: !17988, file: !3, line: 682, column: 2)
!18034 = !DILocation(line: 682, column: 7, scope: !18033)
!18035 = !DILocation(line: 682, column: 14, scope: !18036)
!18036 = distinct !DILexicalBlock(scope: !18033, file: !3, line: 682, column: 2)
!18037 = !DILocation(line: 682, column: 18, scope: !18036)
!18038 = !DILocation(line: 682, column: 16, scope: !18036)
!18039 = !DILocation(line: 682, column: 2, scope: !18033)
!18040 = !DILocation(line: 683, column: 5, scope: !18041)
!18041 = distinct !DILexicalBlock(scope: !18036, file: !3, line: 682, column: 26)
!18042 = !DILocation(line: 684, column: 10, scope: !18043)
!18043 = distinct !DILexicalBlock(scope: !18041, file: !3, line: 684, column: 3)
!18044 = !DILocation(line: 684, column: 22, scope: !18043)
!18045 = !DILocation(line: 684, column: 20, scope: !18043)
!18046 = !DILocation(line: 684, column: 8, scope: !18043)
!18047 = !DILocation(line: 684, column: 25, scope: !18048)
!18048 = distinct !DILexicalBlock(scope: !18043, file: !3, line: 684, column: 3)
!18049 = !DILocation(line: 684, column: 3, scope: !18043)
!18050 = !DILocation(line: 685, column: 8, scope: !18051)
!18051 = distinct !DILexicalBlock(scope: !18048, file: !3, line: 685, column: 8)
!18052 = !DILocation(line: 685, column: 11, scope: !18051)
!18053 = !DILocation(line: 685, column: 8, scope: !18048)
!18054 = !DILocation(line: 686, column: 10, scope: !18051)
!18055 = !DILocation(line: 686, column: 7, scope: !18051)
!18056 = !DILocation(line: 686, column: 5, scope: !18051)
!18057 = !DILocation(line: 685, column: 13, scope: !18051)
!18058 = !DILocation(line: 684, column: 31, scope: !18048)
!18059 = !DILocation(line: 684, column: 42, scope: !18048)
!18060 = !DILocation(line: 684, column: 3, scope: !18048)
!18061 = distinct !{!18061, !18049, !18062}
!18062 = !DILocation(line: 686, column: 10, scope: !18043)
!18063 = !DILocation(line: 688, column: 31, scope: !18041)
!18064 = !DILocation(line: 688, column: 23, scope: !18041)
!18065 = !DILocation(line: 688, column: 41, scope: !18041)
!18066 = !DILocation(line: 688, column: 33, scope: !18041)
!18067 = !DILocation(line: 688, column: 32, scope: !18041)
!18068 = !DILocation(line: 688, column: 45, scope: !18041)
!18069 = !DILocation(line: 688, column: 43, scope: !18041)
!18070 = !DILocation(line: 688, column: 18, scope: !18041)
!18071 = !DILocation(line: 688, column: 3, scope: !18041)
!18072 = !DILocation(line: 688, column: 9, scope: !18041)
!18073 = !DILocation(line: 688, column: 8, scope: !18041)
!18074 = !DILocation(line: 688, column: 11, scope: !18041)
!18075 = !DILocation(line: 688, column: 16, scope: !18041)
!18076 = !DILocation(line: 689, column: 23, scope: !18041)
!18077 = !DILocation(line: 689, column: 27, scope: !18041)
!18078 = !DILocation(line: 689, column: 25, scope: !18041)
!18079 = !DILocation(line: 689, column: 18, scope: !18041)
!18080 = !DILocation(line: 689, column: 3, scope: !18041)
!18081 = !DILocation(line: 689, column: 9, scope: !18041)
!18082 = !DILocation(line: 689, column: 8, scope: !18041)
!18083 = !DILocation(line: 689, column: 11, scope: !18041)
!18084 = !DILocation(line: 689, column: 16, scope: !18041)
!18085 = !DILocation(line: 690, column: 2, scope: !18041)
!18086 = !DILocation(line: 682, column: 22, scope: !18036)
!18087 = !DILocation(line: 682, column: 2, scope: !18036)
!18088 = distinct !{!18088, !18039, !18089}
!18089 = !DILocation(line: 690, column: 2, scope: !18033)
!18090 = !DILocation(line: 691, column: 1, scope: !17988)
!18091 = distinct !DISubprogram(name: "alloc_child_particles", scope: !3, file: !3, line: 307, type: !3390, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!18092 = !DILocalVariable(name: "psys", arg: 1, scope: !18091, file: !3, line: 307, type: !3144)
!18093 = !DILocation(line: 307, column: 51, scope: !18091)
!18094 = !DILocalVariable(name: "tot", arg: 2, scope: !18091, file: !3, line: 307, type: !260)
!18095 = !DILocation(line: 307, column: 61, scope: !18091)
!18096 = !DILocation(line: 309, column: 6, scope: !18097)
!18097 = distinct !DILexicalBlock(scope: !18091, file: !3, line: 309, column: 6)
!18098 = !DILocation(line: 309, column: 12, scope: !18097)
!18099 = !DILocation(line: 309, column: 6, scope: !18091)
!18100 = !DILocation(line: 311, column: 7, scope: !18101)
!18101 = distinct !DILexicalBlock(scope: !18102, file: !3, line: 311, column: 7)
!18102 = distinct !DILexicalBlock(scope: !18097, file: !3, line: 309, column: 19)
!18103 = !DILocation(line: 311, column: 13, scope: !18101)
!18104 = !DILocation(line: 311, column: 19, scope: !18101)
!18105 = !DILocation(line: 311, column: 29, scope: !18101)
!18106 = !DILocation(line: 311, column: 32, scope: !18101)
!18107 = !DILocation(line: 311, column: 38, scope: !18101)
!18108 = !DILocation(line: 311, column: 50, scope: !18101)
!18109 = !DILocation(line: 311, column: 47, scope: !18101)
!18110 = !DILocation(line: 311, column: 7, scope: !18102)
!18111 = !DILocation(line: 312, column: 11, scope: !18112)
!18112 = distinct !DILexicalBlock(scope: !18101, file: !3, line: 311, column: 55)
!18113 = !DILocation(line: 312, column: 17, scope: !18112)
!18114 = !DILocation(line: 312, column: 4, scope: !18112)
!18115 = !DILocation(line: 312, column: 27, scope: !18112)
!18116 = !DILocation(line: 312, column: 30, scope: !18112)
!18117 = !DILocation(line: 313, column: 4, scope: !18112)
!18118 = !DILocation(line: 316, column: 3, scope: !18102)
!18119 = !DILocation(line: 316, column: 13, scope: !18102)
!18120 = !DILocation(line: 316, column: 19, scope: !18102)
!18121 = !DILocation(line: 317, column: 3, scope: !18102)
!18122 = !DILocation(line: 317, column: 9, scope: !18102)
!18123 = !DILocation(line: 317, column: 14, scope: !18102)
!18124 = !DILocation(line: 318, column: 3, scope: !18102)
!18125 = !DILocation(line: 318, column: 9, scope: !18102)
!18126 = !DILocation(line: 318, column: 17, scope: !18102)
!18127 = !DILocation(line: 319, column: 2, scope: !18102)
!18128 = !DILocation(line: 321, column: 6, scope: !18129)
!18129 = distinct !DILexicalBlock(scope: !18091, file: !3, line: 321, column: 6)
!18130 = !DILocation(line: 321, column: 12, scope: !18129)
!18131 = !DILocation(line: 321, column: 18, scope: !18129)
!18132 = !DILocation(line: 321, column: 6, scope: !18091)
!18133 = !DILocation(line: 322, column: 19, scope: !18134)
!18134 = distinct !DILexicalBlock(scope: !18129, file: !3, line: 321, column: 29)
!18135 = !DILocation(line: 322, column: 3, scope: !18134)
!18136 = !DILocation(line: 322, column: 9, scope: !18134)
!18137 = !DILocation(line: 322, column: 17, scope: !18134)
!18138 = !DILocation(line: 323, column: 7, scope: !18139)
!18139 = distinct !DILexicalBlock(scope: !18134, file: !3, line: 323, column: 7)
!18140 = !DILocation(line: 323, column: 13, scope: !18139)
!18141 = !DILocation(line: 323, column: 7, scope: !18134)
!18142 = !DILocation(line: 324, column: 17, scope: !18139)
!18143 = !DILocation(line: 324, column: 29, scope: !18139)
!18144 = !DILocation(line: 324, column: 35, scope: !18139)
!18145 = !DILocation(line: 324, column: 43, scope: !18139)
!18146 = !DILocation(line: 324, column: 4, scope: !18139)
!18147 = !DILocation(line: 324, column: 10, scope: !18139)
!18148 = !DILocation(line: 324, column: 15, scope: !18139)
!18149 = !DILocation(line: 325, column: 2, scope: !18134)
!18150 = !DILocation(line: 326, column: 1, scope: !18091)
!18151 = distinct !DISubprogram(name: "axis_dominant_v3_single", scope: !18152, file: !18152, line: 186, type: !18153, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!18152 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_geom_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!18153 = !DISubroutineType(types: !18154)
!18154 = !{!260, !2826}
!18155 = !DILocalVariable(name: "vec", arg: 1, scope: !18151, file: !18152, line: 186, type: !2826)
!18156 = !DILocation(line: 186, column: 49, scope: !18151)
!18157 = !DILocalVariable(name: "x", scope: !18151, file: !18152, line: 188, type: !2677)
!18158 = !DILocation(line: 188, column: 14, scope: !18151)
!18159 = !DILocation(line: 188, column: 24, scope: !18151)
!18160 = !DILocation(line: 188, column: 18, scope: !18151)
!18161 = !DILocalVariable(name: "y", scope: !18151, file: !18152, line: 189, type: !2677)
!18162 = !DILocation(line: 189, column: 14, scope: !18151)
!18163 = !DILocation(line: 189, column: 24, scope: !18151)
!18164 = !DILocation(line: 189, column: 18, scope: !18151)
!18165 = !DILocalVariable(name: "z", scope: !18151, file: !18152, line: 190, type: !2677)
!18166 = !DILocation(line: 190, column: 14, scope: !18151)
!18167 = !DILocation(line: 190, column: 24, scope: !18151)
!18168 = !DILocation(line: 190, column: 18, scope: !18151)
!18169 = !DILocation(line: 191, column: 11, scope: !18151)
!18170 = !DILocation(line: 191, column: 15, scope: !18151)
!18171 = !DILocation(line: 191, column: 13, scope: !18151)
!18172 = !DILocation(line: 191, column: 10, scope: !18151)
!18173 = !DILocation(line: 192, column: 11, scope: !18151)
!18174 = !DILocation(line: 192, column: 15, scope: !18151)
!18175 = !DILocation(line: 192, column: 13, scope: !18151)
!18176 = !DILocation(line: 192, column: 10, scope: !18151)
!18177 = !DILocation(line: 193, column: 11, scope: !18151)
!18178 = !DILocation(line: 193, column: 15, scope: !18151)
!18179 = !DILocation(line: 193, column: 13, scope: !18151)
!18180 = !DILocation(line: 193, column: 10, scope: !18151)
!18181 = !DILocation(line: 191, column: 2, scope: !18151)
!18182 = distinct !DISubprogram(name: "distribute_threads_exec", scope: !3, file: !3, line: 792, type: !18183, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!18183 = !DISubroutineType(types: !18184)
!18184 = !{null, !3246, !2461, !2464, !260}
!18185 = !DILocalVariable(name: "thread", arg: 1, scope: !18182, file: !3, line: 792, type: !3246)
!18186 = !DILocation(line: 792, column: 53, scope: !18182)
!18187 = !DILocalVariable(name: "pa", arg: 2, scope: !18182, file: !3, line: 792, type: !2461)
!18188 = !DILocation(line: 792, column: 75, scope: !18182)
!18189 = !DILocalVariable(name: "cpa", arg: 3, scope: !18182, file: !3, line: 792, type: !2464)
!18190 = !DILocation(line: 792, column: 94, scope: !18182)
!18191 = !DILocalVariable(name: "p", arg: 4, scope: !18182, file: !3, line: 792, type: !260)
!18192 = !DILocation(line: 792, column: 103, scope: !18182)
!18193 = !DILocalVariable(name: "ctx", scope: !18182, file: !3, line: 794, type: !3251)
!18194 = !DILocation(line: 794, column: 25, scope: !18182)
!18195 = !DILocation(line: 794, column: 30, scope: !18182)
!18196 = !DILocation(line: 794, column: 38, scope: !18182)
!18197 = !DILocalVariable(name: "ob", scope: !18182, file: !3, line: 795, type: !3567)
!18198 = !DILocation(line: 795, column: 10, scope: !18182)
!18199 = !DILocation(line: 795, column: 14, scope: !18182)
!18200 = !DILocation(line: 795, column: 19, scope: !18182)
!18201 = !DILocation(line: 795, column: 23, scope: !18182)
!18202 = !DILocalVariable(name: "dm", scope: !18182, file: !3, line: 796, type: !2671)
!18203 = !DILocation(line: 796, column: 15, scope: !18182)
!18204 = !DILocation(line: 796, column: 19, scope: !18182)
!18205 = !DILocation(line: 796, column: 24, scope: !18182)
!18206 = !DILocalVariable(name: "v1", scope: !18182, file: !3, line: 797, type: !1796)
!18207 = !DILocation(line: 797, column: 9, scope: !18182)
!18208 = !DILocalVariable(name: "v2", scope: !18182, file: !3, line: 797, type: !1796)
!18209 = !DILocation(line: 797, column: 14, scope: !18182)
!18210 = !DILocalVariable(name: "v3", scope: !18182, file: !3, line: 797, type: !1796)
!18211 = !DILocation(line: 797, column: 19, scope: !18182)
!18212 = !DILocalVariable(name: "v4", scope: !18182, file: !3, line: 797, type: !1796)
!18213 = !DILocation(line: 797, column: 24, scope: !18182)
!18214 = !DILocalVariable(name: "nor", scope: !18182, file: !3, line: 797, type: !563)
!18215 = !DILocation(line: 797, column: 28, scope: !18182)
!18216 = !DILocalVariable(name: "orco1", scope: !18182, file: !3, line: 797, type: !563)
!18217 = !DILocation(line: 797, column: 36, scope: !18182)
!18218 = !DILocalVariable(name: "co1", scope: !18182, file: !3, line: 797, type: !563)
!18219 = !DILocation(line: 797, column: 46, scope: !18182)
!18220 = !DILocalVariable(name: "co2", scope: !18182, file: !3, line: 797, type: !563)
!18221 = !DILocation(line: 797, column: 54, scope: !18182)
!18222 = !DILocalVariable(name: "nor1", scope: !18182, file: !3, line: 797, type: !563)
!18223 = !DILocation(line: 797, column: 62, scope: !18182)
!18224 = !DILocalVariable(name: "cur_d", scope: !18182, file: !3, line: 798, type: !341)
!18225 = !DILocation(line: 798, column: 8, scope: !18182)
!18226 = !DILocalVariable(name: "min_d", scope: !18182, file: !3, line: 798, type: !341)
!18227 = !DILocation(line: 798, column: 15, scope: !18182)
!18228 = !DILocalVariable(name: "randu", scope: !18182, file: !3, line: 798, type: !341)
!18229 = !DILocation(line: 798, column: 22, scope: !18182)
!18230 = !DILocalVariable(name: "randv", scope: !18182, file: !3, line: 798, type: !341)
!18231 = !DILocation(line: 798, column: 29, scope: !18182)
!18232 = !DILocalVariable(name: "from", scope: !18182, file: !3, line: 799, type: !260)
!18233 = !DILocation(line: 799, column: 6, scope: !18182)
!18234 = !DILocation(line: 799, column: 12, scope: !18182)
!18235 = !DILocation(line: 799, column: 17, scope: !18182)
!18236 = !DILocalVariable(name: "cfrom", scope: !18182, file: !3, line: 800, type: !260)
!18237 = !DILocation(line: 800, column: 6, scope: !18182)
!18238 = !DILocation(line: 800, column: 13, scope: !18182)
!18239 = !DILocation(line: 800, column: 18, scope: !18182)
!18240 = !DILocalVariable(name: "distr", scope: !18182, file: !3, line: 801, type: !260)
!18241 = !DILocation(line: 801, column: 6, scope: !18182)
!18242 = !DILocation(line: 801, column: 13, scope: !18182)
!18243 = !DILocation(line: 801, column: 18, scope: !18182)
!18244 = !DILocalVariable(name: "i", scope: !18182, file: !3, line: 802, type: !260)
!18245 = !DILocation(line: 802, column: 6, scope: !18182)
!18246 = !DILocalVariable(name: "intersect", scope: !18182, file: !3, line: 802, type: !260)
!18247 = !DILocation(line: 802, column: 9, scope: !18182)
!18248 = !DILocalVariable(name: "tot", scope: !18182, file: !3, line: 802, type: !260)
!18249 = !DILocation(line: 802, column: 20, scope: !18182)
!18250 = !DILocalVariable(name: "rng_skip_tot", scope: !18182, file: !3, line: 803, type: !260)
!18251 = !DILocation(line: 803, column: 6, scope: !18182)
!18252 = !DILocation(line: 805, column: 6, scope: !18253)
!18253 = distinct !DILexicalBlock(scope: !18182, file: !3, line: 805, column: 6)
!18254 = !DILocation(line: 805, column: 11, scope: !18253)
!18255 = !DILocation(line: 805, column: 6, scope: !18182)
!18256 = !DILocation(line: 807, column: 12, scope: !18257)
!18257 = distinct !DILexicalBlock(scope: !18253, file: !3, line: 805, column: 30)
!18258 = !DILocation(line: 807, column: 17, scope: !18257)
!18259 = !DILocation(line: 807, column: 23, scope: !18257)
!18260 = !DILocation(line: 807, column: 3, scope: !18257)
!18261 = !DILocation(line: 807, column: 7, scope: !18257)
!18262 = !DILocation(line: 807, column: 10, scope: !18257)
!18263 = !DILocation(line: 808, column: 3, scope: !18257)
!18264 = !DILocation(line: 808, column: 7, scope: !18257)
!18265 = !DILocation(line: 808, column: 14, scope: !18257)
!18266 = !DILocation(line: 809, column: 29, scope: !18257)
!18267 = !DILocation(line: 809, column: 33, scope: !18257)
!18268 = !DILocation(line: 809, column: 40, scope: !18257)
!18269 = !DILocation(line: 809, column: 16, scope: !18257)
!18270 = !DILocation(line: 809, column: 20, scope: !18257)
!18271 = !DILocation(line: 809, column: 27, scope: !18257)
!18272 = !DILocation(line: 809, column: 3, scope: !18257)
!18273 = !DILocation(line: 809, column: 7, scope: !18257)
!18274 = !DILocation(line: 809, column: 14, scope: !18257)
!18275 = !DILocation(line: 825, column: 2, scope: !18257)
!18276 = !DILocation(line: 826, column: 11, scope: !18277)
!18277 = distinct !DILexicalBlock(scope: !18253, file: !3, line: 826, column: 11)
!18278 = !DILocation(line: 826, column: 16, scope: !18277)
!18279 = !DILocation(line: 826, column: 34, scope: !18277)
!18280 = !DILocation(line: 826, column: 37, scope: !18277)
!18281 = !DILocation(line: 826, column: 42, scope: !18277)
!18282 = !DILocation(line: 826, column: 11, scope: !18253)
!18283 = !DILocalVariable(name: "mface", scope: !18284, file: !3, line: 827, type: !7216)
!18284 = distinct !DILexicalBlock(scope: !18277, file: !3, line: 826, column: 63)
!18285 = !DILocation(line: 827, column: 10, scope: !18284)
!18286 = !DILocation(line: 829, column: 17, scope: !18284)
!18287 = !DILocation(line: 829, column: 22, scope: !18284)
!18288 = !DILocation(line: 829, column: 28, scope: !18284)
!18289 = !DILocation(line: 829, column: 15, scope: !18284)
!18290 = !DILocation(line: 829, column: 3, scope: !18284)
!18291 = !DILocation(line: 829, column: 7, scope: !18284)
!18292 = !DILocation(line: 829, column: 11, scope: !18284)
!18293 = !DILocation(line: 830, column: 11, scope: !18284)
!18294 = !DILocation(line: 830, column: 15, scope: !18284)
!18295 = !DILocation(line: 830, column: 31, scope: !18284)
!18296 = !DILocation(line: 830, column: 34, scope: !18284)
!18297 = !DILocation(line: 830, column: 9, scope: !18284)
!18298 = !DILocation(line: 832, column: 11, scope: !18284)
!18299 = !DILocation(line: 832, column: 3, scope: !18284)
!18300 = !DILocation(line: 834, column: 8, scope: !18301)
!18301 = distinct !DILexicalBlock(scope: !18302, file: !3, line: 834, column: 8)
!18302 = distinct !DILexicalBlock(scope: !18284, file: !3, line: 832, column: 18)
!18303 = !DILocation(line: 834, column: 13, scope: !18301)
!18304 = !DILocation(line: 834, column: 22, scope: !18301)
!18305 = !DILocation(line: 834, column: 8, scope: !18302)
!18306 = !DILocation(line: 835, column: 9, scope: !18307)
!18307 = distinct !DILexicalBlock(scope: !18308, file: !3, line: 835, column: 9)
!18308 = distinct !DILexicalBlock(scope: !18301, file: !3, line: 834, column: 28)
!18309 = !DILocation(line: 835, column: 16, scope: !18307)
!18310 = !DILocation(line: 835, column: 9, scope: !18308)
!18311 = !DILocation(line: 836, column: 31, scope: !18307)
!18312 = !DILocation(line: 836, column: 38, scope: !18307)
!18313 = !DILocation(line: 836, column: 42, scope: !18307)
!18314 = !DILocation(line: 836, column: 46, scope: !18307)
!18315 = !DILocation(line: 836, column: 6, scope: !18307)
!18316 = !DILocation(line: 838, column: 45, scope: !18307)
!18317 = !DILocation(line: 838, column: 52, scope: !18307)
!18318 = !DILocation(line: 838, column: 56, scope: !18307)
!18319 = !DILocation(line: 838, column: 60, scope: !18307)
!18320 = !DILocation(line: 838, column: 6, scope: !18307)
!18321 = !DILocation(line: 839, column: 4, scope: !18308)
!18322 = !DILocation(line: 841, column: 27, scope: !18323)
!18323 = distinct !DILexicalBlock(scope: !18301, file: !3, line: 840, column: 9)
!18324 = !DILocation(line: 841, column: 32, scope: !18323)
!18325 = !DILocation(line: 841, column: 39, scope: !18323)
!18326 = !DILocation(line: 841, column: 49, scope: !18323)
!18327 = !DILocation(line: 841, column: 54, scope: !18323)
!18328 = !DILocation(line: 841, column: 42, scope: !18323)
!18329 = !DILocation(line: 841, column: 22, scope: !18323)
!18330 = !DILocation(line: 841, column: 5, scope: !18323)
!18331 = !DILocation(line: 841, column: 10, scope: !18323)
!18332 = !DILocation(line: 841, column: 17, scope: !18323)
!18333 = !DILocation(line: 841, column: 20, scope: !18323)
!18334 = !DILocation(line: 842, column: 10, scope: !18335)
!18335 = distinct !DILexicalBlock(scope: !18323, file: !3, line: 842, column: 9)
!18336 = !DILocation(line: 842, column: 9, scope: !18323)
!18337 = !DILocation(line: 843, column: 19, scope: !18338)
!18338 = distinct !DILexicalBlock(scope: !18335, file: !3, line: 842, column: 33)
!18339 = !DILocation(line: 843, column: 24, scope: !18338)
!18340 = !DILocation(line: 843, column: 35, scope: !18338)
!18341 = !DILocation(line: 843, column: 40, scope: !18338)
!18342 = !DILocation(line: 843, column: 47, scope: !18338)
!18343 = !DILocation(line: 843, column: 30, scope: !18338)
!18344 = !DILocation(line: 843, column: 29, scope: !18338)
!18345 = !DILocation(line: 843, column: 52, scope: !18338)
!18346 = !DILocation(line: 843, column: 57, scope: !18338)
!18347 = !DILocation(line: 843, column: 68, scope: !18338)
!18348 = !DILocation(line: 843, column: 73, scope: !18338)
!18349 = !DILocation(line: 843, column: 80, scope: !18338)
!18350 = !DILocation(line: 843, column: 63, scope: !18338)
!18351 = !DILocation(line: 843, column: 62, scope: !18338)
!18352 = !DILocation(line: 843, column: 82, scope: !18338)
!18353 = !DILocation(line: 843, column: 87, scope: !18338)
!18354 = !DILocation(line: 843, column: 94, scope: !18338)
!18355 = !DILocation(line: 843, column: 98, scope: !18338)
!18356 = !DILocation(line: 843, column: 102, scope: !18338)
!18357 = !DILocation(line: 843, column: 6, scope: !18338)
!18358 = !DILocation(line: 844, column: 6, scope: !18338)
!18359 = !DILocation(line: 844, column: 11, scope: !18338)
!18360 = !DILocation(line: 844, column: 18, scope: !18338)
!18361 = !DILocation(line: 844, column: 20, scope: !18338)
!18362 = !DILocation(line: 845, column: 5, scope: !18338)
!18363 = !DILocation(line: 847, column: 4, scope: !18302)
!18364 = !DILocation(line: 849, column: 29, scope: !18302)
!18365 = !DILocation(line: 849, column: 37, scope: !18302)
!18366 = !DILocation(line: 849, column: 11, scope: !18302)
!18367 = !DILocation(line: 849, column: 9, scope: !18302)
!18368 = !DILocation(line: 850, column: 29, scope: !18302)
!18369 = !DILocation(line: 850, column: 37, scope: !18302)
!18370 = !DILocation(line: 850, column: 11, scope: !18302)
!18371 = !DILocation(line: 850, column: 9, scope: !18302)
!18372 = !DILocation(line: 851, column: 17, scope: !18302)
!18373 = !DILocation(line: 853, column: 17, scope: !18302)
!18374 = !DILocation(line: 853, column: 24, scope: !18302)
!18375 = !DILocation(line: 853, column: 31, scope: !18302)
!18376 = !DILocation(line: 853, column: 38, scope: !18302)
!18377 = !DILocation(line: 853, column: 42, scope: !18302)
!18378 = !DILocation(line: 853, column: 46, scope: !18302)
!18379 = !DILocation(line: 853, column: 4, scope: !18302)
!18380 = !DILocation(line: 854, column: 4, scope: !18302)
!18381 = !DILocation(line: 856, column: 3, scope: !18284)
!18382 = !DILocation(line: 856, column: 7, scope: !18284)
!18383 = !DILocation(line: 856, column: 14, scope: !18284)
!18384 = !DILocation(line: 859, column: 7, scope: !18385)
!18385 = distinct !DILexicalBlock(scope: !18284, file: !3, line: 859, column: 7)
!18386 = !DILocation(line: 859, column: 11, scope: !18385)
!18387 = !DILocation(line: 859, column: 7, scope: !18284)
!18388 = !DILocalVariable(name: "mvert", scope: !18389, file: !3, line: 860, type: !669)
!18389 = distinct !DILexicalBlock(scope: !18385, file: !3, line: 859, column: 31)
!18390 = !DILocation(line: 860, column: 11, scope: !18389)
!18391 = !DILocation(line: 860, column: 17, scope: !18389)
!18392 = !DILocation(line: 860, column: 21, scope: !18389)
!18393 = !DILocation(line: 860, column: 38, scope: !18389)
!18394 = !DILocation(line: 862, column: 8, scope: !18389)
!18395 = !DILocation(line: 862, column: 12, scope: !18389)
!18396 = !DILocation(line: 862, column: 28, scope: !18389)
!18397 = !DILocation(line: 862, column: 7, scope: !18389)
!18398 = !DILocation(line: 864, column: 26, scope: !18389)
!18399 = !DILocation(line: 864, column: 32, scope: !18389)
!18400 = !DILocation(line: 864, column: 42, scope: !18389)
!18401 = !DILocation(line: 864, column: 46, scope: !18389)
!18402 = !DILocation(line: 864, column: 50, scope: !18389)
!18403 = !DILocation(line: 864, column: 54, scope: !18389)
!18404 = !DILocation(line: 864, column: 4, scope: !18389)
!18405 = !DILocation(line: 866, column: 17, scope: !18389)
!18406 = !DILocation(line: 866, column: 4, scope: !18389)
!18407 = !DILocation(line: 867, column: 14, scope: !18389)
!18408 = !DILocation(line: 867, column: 4, scope: !18389)
!18409 = !DILocation(line: 869, column: 16, scope: !18389)
!18410 = !DILocation(line: 869, column: 20, scope: !18389)
!18411 = !DILocation(line: 869, column: 24, scope: !18389)
!18412 = !DILocation(line: 869, column: 4, scope: !18389)
!18413 = !DILocation(line: 871, column: 9, scope: !18389)
!18414 = !DILocation(line: 872, column: 13, scope: !18389)
!18415 = !DILocation(line: 874, column: 10, scope: !18416)
!18416 = distinct !DILexicalBlock(scope: !18389, file: !3, line: 874, column: 4)
!18417 = !DILocation(line: 874, column: 19, scope: !18416)
!18418 = !DILocation(line: 874, column: 23, scope: !18416)
!18419 = !DILocation(line: 874, column: 44, scope: !18416)
!18420 = !DILocation(line: 874, column: 18, scope: !18416)
!18421 = !DILocation(line: 874, column: 9, scope: !18416)
!18422 = !DILocation(line: 874, column: 58, scope: !18423)
!18423 = distinct !DILexicalBlock(scope: !18416, file: !3, line: 874, column: 4)
!18424 = !DILocation(line: 874, column: 60, scope: !18423)
!18425 = !DILocation(line: 874, column: 59, scope: !18423)
!18426 = !DILocation(line: 874, column: 4, scope: !18416)
!18427 = !DILocation(line: 875, column: 9, scope: !18428)
!18428 = distinct !DILexicalBlock(scope: !18429, file: !3, line: 875, column: 9)
!18429 = distinct !DILexicalBlock(scope: !18423, file: !3, line: 874, column: 78)
!18430 = !DILocation(line: 875, column: 12, scope: !18428)
!18431 = !DILocation(line: 875, column: 16, scope: !18428)
!18432 = !DILocation(line: 875, column: 10, scope: !18428)
!18433 = !DILocation(line: 875, column: 9, scope: !18429)
!18434 = !DILocation(line: 875, column: 21, scope: !18428)
!18435 = !DILocation(line: 877, column: 8, scope: !18429)
!18436 = !DILocation(line: 877, column: 14, scope: !18429)
!18437 = !DILocation(line: 877, column: 21, scope: !18429)
!18438 = !DILocation(line: 877, column: 25, scope: !18429)
!18439 = !DILocation(line: 877, column: 7, scope: !18429)
!18440 = !DILocation(line: 878, column: 8, scope: !18429)
!18441 = !DILocation(line: 878, column: 14, scope: !18429)
!18442 = !DILocation(line: 878, column: 21, scope: !18429)
!18443 = !DILocation(line: 878, column: 25, scope: !18429)
!18444 = !DILocation(line: 878, column: 7, scope: !18429)
!18445 = !DILocation(line: 879, column: 8, scope: !18429)
!18446 = !DILocation(line: 879, column: 14, scope: !18429)
!18447 = !DILocation(line: 879, column: 21, scope: !18429)
!18448 = !DILocation(line: 879, column: 25, scope: !18429)
!18449 = !DILocation(line: 879, column: 7, scope: !18429)
!18450 = !DILocation(line: 881, column: 27, scope: !18451)
!18451 = distinct !DILexicalBlock(scope: !18429, file: !3, line: 881, column: 9)
!18452 = !DILocation(line: 881, column: 32, scope: !18451)
!18453 = !DILocation(line: 881, column: 37, scope: !18451)
!18454 = !DILocation(line: 881, column: 41, scope: !18451)
!18455 = !DILocation(line: 881, column: 45, scope: !18451)
!18456 = !DILocation(line: 881, column: 9, scope: !18451)
!18457 = !DILocation(line: 881, column: 9, scope: !18429)
!18458 = !DILocation(line: 882, column: 10, scope: !18459)
!18459 = distinct !DILexicalBlock(scope: !18460, file: !3, line: 882, column: 10)
!18460 = distinct !DILexicalBlock(scope: !18451, file: !3, line: 881, column: 61)
!18461 = !DILocation(line: 882, column: 16, scope: !18459)
!18462 = !DILocation(line: 882, column: 15, scope: !18459)
!18463 = !DILocation(line: 882, column: 10, scope: !18460)
!18464 = !DILocation(line: 883, column: 13, scope: !18465)
!18465 = distinct !DILexicalBlock(scope: !18459, file: !3, line: 882, column: 23)
!18466 = !DILocation(line: 883, column: 12, scope: !18465)
!18467 = !DILocation(line: 884, column: 19, scope: !18465)
!18468 = !DILocation(line: 884, column: 24, scope: !18465)
!18469 = !DILocation(line: 884, column: 7, scope: !18465)
!18470 = !DILocation(line: 884, column: 11, scope: !18465)
!18471 = !DILocation(line: 884, column: 18, scope: !18465)
!18472 = !DILocation(line: 885, column: 16, scope: !18465)
!18473 = !DILocation(line: 886, column: 6, scope: !18465)
!18474 = !DILocation(line: 887, column: 5, scope: !18460)
!18475 = !DILocation(line: 888, column: 9, scope: !18476)
!18476 = distinct !DILexicalBlock(scope: !18429, file: !3, line: 888, column: 9)
!18477 = !DILocation(line: 888, column: 16, scope: !18476)
!18478 = !DILocation(line: 888, column: 9, scope: !18429)
!18479 = !DILocation(line: 889, column: 9, scope: !18480)
!18480 = distinct !DILexicalBlock(scope: !18476, file: !3, line: 888, column: 20)
!18481 = !DILocation(line: 889, column: 15, scope: !18480)
!18482 = !DILocation(line: 889, column: 22, scope: !18480)
!18483 = !DILocation(line: 889, column: 26, scope: !18480)
!18484 = !DILocation(line: 889, column: 8, scope: !18480)
!18485 = !DILocation(line: 891, column: 28, scope: !18486)
!18486 = distinct !DILexicalBlock(scope: !18480, file: !3, line: 891, column: 10)
!18487 = !DILocation(line: 891, column: 33, scope: !18486)
!18488 = !DILocation(line: 891, column: 38, scope: !18486)
!18489 = !DILocation(line: 891, column: 42, scope: !18486)
!18490 = !DILocation(line: 891, column: 46, scope: !18486)
!18491 = !DILocation(line: 891, column: 10, scope: !18486)
!18492 = !DILocation(line: 891, column: 10, scope: !18480)
!18493 = !DILocation(line: 892, column: 11, scope: !18494)
!18494 = distinct !DILexicalBlock(scope: !18495, file: !3, line: 892, column: 11)
!18495 = distinct !DILexicalBlock(scope: !18486, file: !3, line: 891, column: 62)
!18496 = !DILocation(line: 892, column: 17, scope: !18494)
!18497 = !DILocation(line: 892, column: 16, scope: !18494)
!18498 = !DILocation(line: 892, column: 11, scope: !18495)
!18499 = !DILocation(line: 893, column: 14, scope: !18500)
!18500 = distinct !DILexicalBlock(scope: !18494, file: !3, line: 892, column: 24)
!18501 = !DILocation(line: 893, column: 13, scope: !18500)
!18502 = !DILocation(line: 894, column: 20, scope: !18500)
!18503 = !DILocation(line: 894, column: 25, scope: !18500)
!18504 = !DILocation(line: 894, column: 8, scope: !18500)
!18505 = !DILocation(line: 894, column: 12, scope: !18500)
!18506 = !DILocation(line: 894, column: 19, scope: !18500)
!18507 = !DILocation(line: 895, column: 17, scope: !18500)
!18508 = !DILocation(line: 896, column: 7, scope: !18500)
!18509 = !DILocation(line: 897, column: 6, scope: !18495)
!18510 = !DILocation(line: 898, column: 5, scope: !18480)
!18511 = !DILocation(line: 899, column: 4, scope: !18429)
!18512 = !DILocation(line: 874, column: 66, scope: !18423)
!18513 = !DILocation(line: 874, column: 74, scope: !18423)
!18514 = !DILocation(line: 874, column: 4, scope: !18423)
!18515 = distinct !{!18515, !18426, !18516}
!18516 = !DILocation(line: 899, column: 4, scope: !18416)
!18517 = !DILocation(line: 900, column: 8, scope: !18518)
!18518 = distinct !DILexicalBlock(scope: !18389, file: !3, line: 900, column: 8)
!18519 = !DILocation(line: 900, column: 17, scope: !18518)
!18520 = !DILocation(line: 900, column: 8, scope: !18389)
!18521 = !DILocation(line: 901, column: 5, scope: !18518)
!18522 = !DILocation(line: 901, column: 9, scope: !18518)
!18523 = !DILocation(line: 901, column: 16, scope: !18518)
!18524 = !DILocation(line: 903, column: 13, scope: !18525)
!18525 = distinct !DILexicalBlock(scope: !18518, file: !3, line: 902, column: 9)
!18526 = !DILocation(line: 903, column: 5, scope: !18525)
!18527 = !DILocation(line: 905, column: 22, scope: !18528)
!18528 = distinct !DILexicalBlock(scope: !18525, file: !3, line: 903, column: 20)
!18529 = !DILocation(line: 905, column: 27, scope: !18528)
!18530 = !DILocation(line: 905, column: 31, scope: !18528)
!18531 = !DILocation(line: 905, column: 40, scope: !18528)
!18532 = !DILocation(line: 905, column: 45, scope: !18528)
!18533 = !DILocation(line: 905, column: 38, scope: !18528)
!18534 = !DILocation(line: 905, column: 33, scope: !18528)
!18535 = !DILocation(line: 905, column: 7, scope: !18528)
!18536 = !DILocation(line: 905, column: 11, scope: !18528)
!18537 = !DILocation(line: 905, column: 19, scope: !18528)
!18538 = !DILocation(line: 906, column: 7, scope: !18528)
!18539 = !DILocation(line: 908, column: 22, scope: !18528)
!18540 = !DILocation(line: 908, column: 7, scope: !18528)
!18541 = !DILocation(line: 908, column: 11, scope: !18528)
!18542 = !DILocation(line: 908, column: 19, scope: !18528)
!18543 = !DILocation(line: 909, column: 7, scope: !18528)
!18544 = !DILocation(line: 912, column: 3, scope: !18389)
!18545 = !DILocation(line: 913, column: 2, scope: !18284)
!18546 = !DILocation(line: 914, column: 11, scope: !18547)
!18547 = distinct !DILexicalBlock(scope: !18277, file: !3, line: 914, column: 11)
!18548 = !DILocation(line: 914, column: 16, scope: !18547)
!18549 = !DILocation(line: 914, column: 11, scope: !18277)
!18550 = !DILocalVariable(name: "mf", scope: !18551, file: !3, line: 915, type: !7216)
!18551 = distinct !DILexicalBlock(scope: !18547, file: !3, line: 914, column: 36)
!18552 = !DILocation(line: 915, column: 10, scope: !18551)
!18553 = !DILocation(line: 917, column: 7, scope: !18554)
!18554 = distinct !DILexicalBlock(scope: !18551, file: !3, line: 917, column: 7)
!18555 = !DILocation(line: 917, column: 12, scope: !18554)
!18556 = !DILocation(line: 917, column: 18, scope: !18554)
!18557 = !DILocation(line: 917, column: 21, scope: !18554)
!18558 = !DILocation(line: 917, column: 7, scope: !18551)
!18559 = !DILocation(line: 918, column: 4, scope: !18560)
!18560 = distinct !DILexicalBlock(scope: !18554, file: !3, line: 917, column: 26)
!18561 = !DILocation(line: 918, column: 9, scope: !18560)
!18562 = !DILocation(line: 918, column: 12, scope: !18560)
!18563 = !DILocation(line: 919, column: 40, scope: !18560)
!18564 = !DILocation(line: 919, column: 45, scope: !18560)
!18565 = !DILocation(line: 919, column: 51, scope: !18560)
!18566 = !DILocation(line: 919, column: 28, scope: !18560)
!18567 = !DILocation(line: 919, column: 33, scope: !18560)
!18568 = !DILocation(line: 919, column: 39, scope: !18560)
!18569 = !DILocation(line: 919, column: 16, scope: !18560)
!18570 = !DILocation(line: 919, column: 21, scope: !18560)
!18571 = !DILocation(line: 919, column: 27, scope: !18560)
!18572 = !DILocation(line: 919, column: 4, scope: !18560)
!18573 = !DILocation(line: 919, column: 9, scope: !18560)
!18574 = !DILocation(line: 919, column: 15, scope: !18560)
!18575 = !DILocation(line: 920, column: 37, scope: !18560)
!18576 = !DILocation(line: 920, column: 42, scope: !18560)
!18577 = !DILocation(line: 920, column: 47, scope: !18560)
!18578 = !DILocation(line: 920, column: 26, scope: !18560)
!18579 = !DILocation(line: 920, column: 31, scope: !18560)
!18580 = !DILocation(line: 920, column: 36, scope: !18560)
!18581 = !DILocation(line: 920, column: 15, scope: !18560)
!18582 = !DILocation(line: 920, column: 20, scope: !18560)
!18583 = !DILocation(line: 920, column: 25, scope: !18560)
!18584 = !DILocation(line: 920, column: 4, scope: !18560)
!18585 = !DILocation(line: 920, column: 9, scope: !18560)
!18586 = !DILocation(line: 920, column: 14, scope: !18560)
!18587 = !DILocation(line: 921, column: 4, scope: !18560)
!18588 = !DILocation(line: 924, column: 7, scope: !18551)
!18589 = !DILocation(line: 924, column: 11, scope: !18551)
!18590 = !DILocation(line: 924, column: 27, scope: !18551)
!18591 = !DILocation(line: 924, column: 31, scope: !18551)
!18592 = !DILocation(line: 924, column: 36, scope: !18551)
!18593 = !DILocation(line: 924, column: 42, scope: !18551)
!18594 = !DILocation(line: 924, column: 5, scope: !18551)
!18595 = !DILocation(line: 926, column: 28, scope: !18551)
!18596 = !DILocation(line: 926, column: 36, scope: !18551)
!18597 = !DILocation(line: 926, column: 10, scope: !18551)
!18598 = !DILocation(line: 926, column: 8, scope: !18551)
!18599 = !DILocation(line: 927, column: 28, scope: !18551)
!18600 = !DILocation(line: 927, column: 36, scope: !18551)
!18601 = !DILocation(line: 927, column: 10, scope: !18551)
!18602 = !DILocation(line: 927, column: 8, scope: !18551)
!18603 = !DILocation(line: 928, column: 16, scope: !18551)
!18604 = !DILocation(line: 930, column: 16, scope: !18551)
!18605 = !DILocation(line: 930, column: 23, scope: !18551)
!18606 = !DILocation(line: 930, column: 30, scope: !18551)
!18607 = !DILocation(line: 930, column: 34, scope: !18551)
!18608 = !DILocation(line: 930, column: 38, scope: !18551)
!18609 = !DILocation(line: 930, column: 43, scope: !18551)
!18610 = !DILocation(line: 930, column: 3, scope: !18551)
!18611 = !DILocation(line: 932, column: 14, scope: !18551)
!18612 = !DILocation(line: 932, column: 19, scope: !18551)
!18613 = !DILocation(line: 932, column: 25, scope: !18551)
!18614 = !DILocation(line: 932, column: 3, scope: !18551)
!18615 = !DILocation(line: 932, column: 8, scope: !18551)
!18616 = !DILocation(line: 932, column: 12, scope: !18551)
!18617 = !DILocation(line: 934, column: 7, scope: !18618)
!18618 = distinct !DILexicalBlock(scope: !18551, file: !3, line: 934, column: 7)
!18619 = !DILocation(line: 934, column: 12, scope: !18618)
!18620 = !DILocation(line: 934, column: 7, scope: !18551)
!18621 = !DILocalVariable(name: "ptn", scope: !18622, file: !3, line: 935, type: !18623)
!18622 = distinct !DILexicalBlock(scope: !18618, file: !3, line: 934, column: 18)
!18623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18624, size: 1600, elements: !3146)
!18624 = !DIDerivedType(tag: DW_TAG_typedef, name: "KDTreeNearest", file: !15488, line: 43, baseType: !18625)
!18625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KDTreeNearest", file: !15488, line: 39, size: 160, elements: !18626)
!18626 = !{!18627, !18628, !18629}
!18627 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !18625, file: !15488, line: 40, baseType: !260, size: 32)
!18628 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !18625, file: !15488, line: 41, baseType: !341, size: 32, offset: 32)
!18629 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !18625, file: !15488, line: 42, baseType: !563, size: 96, offset: 64)
!18630 = !DILocation(line: 935, column: 18, scope: !18622)
!18631 = !DILocalVariable(name: "w", scope: !18622, file: !3, line: 936, type: !260)
!18632 = !DILocation(line: 936, column: 8, scope: !18622)
!18633 = !DILocalVariable(name: "maxw", scope: !18622, file: !3, line: 936, type: !260)
!18634 = !DILocation(line: 936, column: 10, scope: !18622)
!18635 = !DILocalVariable(name: "maxd", scope: !18622, file: !3, line: 937, type: !341)
!18636 = !DILocation(line: 937, column: 10, scope: !18622)
!18637 = !DILocalVariable(name: "totw", scope: !18622, file: !3, line: 937, type: !341)
!18638 = !DILocation(line: 937, column: 31, scope: !18622)
!18639 = !DILocalVariable(name: "parent", scope: !18622, file: !3, line: 938, type: !18640)
!18640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !260, size: 320, elements: !3146)
!18641 = !DILocation(line: 938, column: 8, scope: !18622)
!18642 = !DILocalVariable(name: "pweight", scope: !18622, file: !3, line: 939, type: !18643)
!18643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 320, elements: !3146)
!18644 = !DILocation(line: 939, column: 10, scope: !18622)
!18645 = !DILocation(line: 941, column: 24, scope: !18622)
!18646 = !DILocation(line: 941, column: 27, scope: !18622)
!18647 = !DILocation(line: 941, column: 33, scope: !18622)
!18648 = !DILocation(line: 941, column: 38, scope: !18622)
!18649 = !DILocation(line: 941, column: 58, scope: !18622)
!18650 = !DILocation(line: 941, column: 63, scope: !18622)
!18651 = !DILocation(line: 941, column: 67, scope: !18622)
!18652 = !DILocation(line: 941, column: 72, scope: !18622)
!18653 = !DILocation(line: 941, column: 80, scope: !18622)
!18654 = !DILocation(line: 941, column: 84, scope: !18622)
!18655 = !DILocation(line: 941, column: 99, scope: !18622)
!18656 = !DILocation(line: 941, column: 4, scope: !18622)
!18657 = !DILocation(line: 942, column: 41, scope: !18622)
!18658 = !DILocation(line: 942, column: 45, scope: !18622)
!18659 = !DILocation(line: 942, column: 34, scope: !18622)
!18660 = !DILocation(line: 942, column: 4, scope: !18622)
!18661 = !DILocation(line: 943, column: 11, scope: !18622)
!18662 = !DILocation(line: 943, column: 9, scope: !18622)
!18663 = !DILocation(line: 945, column: 13, scope: !18622)
!18664 = !DILocation(line: 945, column: 17, scope: !18622)
!18665 = !DILocation(line: 945, column: 9, scope: !18622)
!18666 = !DILocation(line: 945, column: 21, scope: !18622)
!18667 = !DILocation(line: 945, column: 8, scope: !18622)
!18668 = !DILocation(line: 949, column: 10, scope: !18669)
!18669 = distinct !DILexicalBlock(scope: !18622, file: !3, line: 949, column: 4)
!18670 = !DILocation(line: 949, column: 9, scope: !18669)
!18671 = !DILocation(line: 949, column: 14, scope: !18672)
!18672 = distinct !DILexicalBlock(scope: !18669, file: !3, line: 949, column: 4)
!18673 = !DILocation(line: 949, column: 16, scope: !18672)
!18674 = !DILocation(line: 949, column: 15, scope: !18672)
!18675 = !DILocation(line: 949, column: 4, scope: !18669)
!18676 = !DILocation(line: 950, column: 19, scope: !18677)
!18677 = distinct !DILexicalBlock(scope: !18672, file: !3, line: 949, column: 27)
!18678 = !DILocation(line: 950, column: 15, scope: !18677)
!18679 = !DILocation(line: 950, column: 22, scope: !18677)
!18680 = !DILocation(line: 950, column: 12, scope: !18677)
!18681 = !DILocation(line: 950, column: 5, scope: !18677)
!18682 = !DILocation(line: 950, column: 14, scope: !18677)
!18683 = !DILocation(line: 951, column: 50, scope: !18677)
!18684 = !DILocation(line: 951, column: 46, scope: !18677)
!18685 = !DILocation(line: 951, column: 53, scope: !18677)
!18686 = !DILocation(line: 951, column: 45, scope: !18677)
!18687 = !DILocation(line: 951, column: 58, scope: !18677)
!18688 = !DILocation(line: 951, column: 57, scope: !18677)
!18689 = !DILocation(line: 951, column: 31, scope: !18677)
!18690 = !DILocation(line: 951, column: 23, scope: !18677)
!18691 = !DILocation(line: 951, column: 16, scope: !18677)
!18692 = !DILocation(line: 951, column: 13, scope: !18677)
!18693 = !DILocation(line: 951, column: 5, scope: !18677)
!18694 = !DILocation(line: 951, column: 15, scope: !18677)
!18695 = !DILocation(line: 952, column: 4, scope: !18677)
!18696 = !DILocation(line: 949, column: 23, scope: !18672)
!18697 = !DILocation(line: 949, column: 4, scope: !18672)
!18698 = distinct !{!18698, !18675, !18699}
!18699 = !DILocation(line: 952, column: 4, scope: !18669)
!18700 = !DILocation(line: 953, column: 4, scope: !18622)
!18701 = !DILocation(line: 953, column: 10, scope: !18702)
!18702 = distinct !DILexicalBlock(scope: !18703, file: !3, line: 953, column: 4)
!18703 = distinct !DILexicalBlock(scope: !18622, file: !3, line: 953, column: 4)
!18704 = !DILocation(line: 953, column: 11, scope: !18702)
!18705 = !DILocation(line: 953, column: 4, scope: !18703)
!18706 = !DILocation(line: 954, column: 12, scope: !18707)
!18707 = distinct !DILexicalBlock(scope: !18702, file: !3, line: 953, column: 21)
!18708 = !DILocation(line: 954, column: 5, scope: !18707)
!18709 = !DILocation(line: 954, column: 14, scope: !18707)
!18710 = !DILocation(line: 955, column: 13, scope: !18707)
!18711 = !DILocation(line: 955, column: 5, scope: !18707)
!18712 = !DILocation(line: 955, column: 15, scope: !18707)
!18713 = !DILocation(line: 956, column: 4, scope: !18707)
!18714 = !DILocation(line: 953, column: 17, scope: !18702)
!18715 = !DILocation(line: 953, column: 4, scope: !18702)
!18716 = distinct !{!18716, !18705, !18717}
!18717 = !DILocation(line: 956, column: 4, scope: !18703)
!18718 = !DILocation(line: 958, column: 10, scope: !18719)
!18719 = distinct !DILexicalBlock(scope: !18622, file: !3, line: 958, column: 4)
!18720 = !DILocation(line: 958, column: 14, scope: !18719)
!18721 = !DILocation(line: 958, column: 9, scope: !18719)
!18722 = !DILocation(line: 958, column: 18, scope: !18723)
!18723 = distinct !DILexicalBlock(scope: !18719, file: !3, line: 958, column: 4)
!18724 = !DILocation(line: 958, column: 20, scope: !18723)
!18725 = !DILocation(line: 958, column: 19, scope: !18723)
!18726 = !DILocation(line: 958, column: 25, scope: !18723)
!18727 = !DILocation(line: 958, column: 28, scope: !18723)
!18728 = !DILocation(line: 958, column: 29, scope: !18723)
!18729 = !DILocation(line: 0, scope: !18723)
!18730 = !DILocation(line: 958, column: 4, scope: !18719)
!18731 = !DILocation(line: 959, column: 16, scope: !18732)
!18732 = distinct !DILexicalBlock(scope: !18733, file: !3, line: 959, column: 9)
!18733 = distinct !DILexicalBlock(scope: !18723, file: !3, line: 958, column: 38)
!18734 = !DILocation(line: 959, column: 9, scope: !18732)
!18735 = !DILocation(line: 959, column: 18, scope: !18732)
!18736 = !DILocation(line: 959, column: 9, scope: !18733)
!18737 = !DILocation(line: 960, column: 24, scope: !18738)
!18738 = distinct !DILexicalBlock(scope: !18732, file: !3, line: 959, column: 23)
!18739 = !DILocation(line: 960, column: 17, scope: !18738)
!18740 = !DILocation(line: 960, column: 6, scope: !18738)
!18741 = !DILocation(line: 960, column: 11, scope: !18738)
!18742 = !DILocation(line: 960, column: 14, scope: !18738)
!18743 = !DILocation(line: 960, column: 16, scope: !18738)
!18744 = !DILocation(line: 961, column: 24, scope: !18738)
!18745 = !DILocation(line: 961, column: 16, scope: !18738)
!18746 = !DILocation(line: 961, column: 6, scope: !18738)
!18747 = !DILocation(line: 961, column: 11, scope: !18738)
!18748 = !DILocation(line: 961, column: 13, scope: !18738)
!18749 = !DILocation(line: 961, column: 15, scope: !18738)
!18750 = !DILocation(line: 962, column: 20, scope: !18738)
!18751 = !DILocation(line: 962, column: 12, scope: !18738)
!18752 = !DILocation(line: 962, column: 10, scope: !18738)
!18753 = !DILocation(line: 963, column: 7, scope: !18738)
!18754 = !DILocation(line: 964, column: 5, scope: !18738)
!18755 = !DILocation(line: 965, column: 4, scope: !18733)
!18756 = !DILocation(line: 958, column: 34, scope: !18723)
!18757 = !DILocation(line: 958, column: 4, scope: !18723)
!18758 = distinct !{!18758, !18730, !18759}
!18759 = !DILocation(line: 965, column: 4, scope: !18719)
!18760 = !DILocation(line: 966, column: 4, scope: !18622)
!18761 = !DILocation(line: 966, column: 10, scope: !18762)
!18762 = distinct !DILexicalBlock(scope: !18763, file: !3, line: 966, column: 4)
!18763 = distinct !DILexicalBlock(scope: !18622, file: !3, line: 966, column: 4)
!18764 = !DILocation(line: 966, column: 11, scope: !18762)
!18765 = !DILocation(line: 966, column: 4, scope: !18763)
!18766 = !DILocation(line: 967, column: 5, scope: !18767)
!18767 = distinct !DILexicalBlock(scope: !18762, file: !3, line: 966, column: 20)
!18768 = !DILocation(line: 967, column: 10, scope: !18767)
!18769 = !DILocation(line: 967, column: 13, scope: !18767)
!18770 = !DILocation(line: 967, column: 15, scope: !18767)
!18771 = !DILocation(line: 968, column: 5, scope: !18767)
!18772 = !DILocation(line: 968, column: 10, scope: !18767)
!18773 = !DILocation(line: 968, column: 12, scope: !18767)
!18774 = !DILocation(line: 968, column: 14, scope: !18767)
!18775 = !DILocation(line: 969, column: 4, scope: !18767)
!18776 = !DILocation(line: 966, column: 16, scope: !18762)
!18777 = !DILocation(line: 966, column: 4, scope: !18762)
!18778 = distinct !{!18778, !18765, !18779}
!18779 = !DILocation(line: 969, column: 4, scope: !18763)
!18780 = !DILocation(line: 971, column: 8, scope: !18781)
!18781 = distinct !DILexicalBlock(scope: !18622, file: !3, line: 971, column: 8)
!18782 = !DILocation(line: 971, column: 12, scope: !18781)
!18783 = !DILocation(line: 971, column: 8, scope: !18622)
!18784 = !DILocation(line: 971, column: 25, scope: !18785)
!18785 = distinct !DILexicalBlock(scope: !18781, file: !3, line: 971, column: 19)
!18786 = !DILocation(line: 971, column: 24, scope: !18785)
!18787 = !DILocation(line: 971, column: 29, scope: !18788)
!18788 = distinct !DILexicalBlock(scope: !18785, file: !3, line: 971, column: 19)
!18789 = !DILocation(line: 971, column: 30, scope: !18788)
!18790 = !DILocation(line: 971, column: 19, scope: !18785)
!18791 = !DILocation(line: 972, column: 16, scope: !18788)
!18792 = !DILocation(line: 972, column: 5, scope: !18788)
!18793 = !DILocation(line: 972, column: 10, scope: !18788)
!18794 = !DILocation(line: 972, column: 12, scope: !18788)
!18795 = !DILocation(line: 972, column: 14, scope: !18788)
!18796 = !DILocation(line: 971, column: 35, scope: !18788)
!18797 = !DILocation(line: 971, column: 19, scope: !18788)
!18798 = distinct !{!18798, !18790, !18799}
!18799 = !DILocation(line: 972, column: 16, scope: !18785)
!18800 = !DILocation(line: 974, column: 16, scope: !18622)
!18801 = !DILocation(line: 974, column: 21, scope: !18622)
!18802 = !DILocation(line: 974, column: 4, scope: !18622)
!18803 = !DILocation(line: 974, column: 9, scope: !18622)
!18804 = !DILocation(line: 974, column: 15, scope: !18622)
!18805 = !DILocation(line: 975, column: 3, scope: !18622)
!18806 = !DILocation(line: 976, column: 2, scope: !18551)
!18807 = !DILocation(line: 978, column: 6, scope: !18808)
!18808 = distinct !DILexicalBlock(scope: !18182, file: !3, line: 978, column: 6)
!18809 = !DILocation(line: 978, column: 19, scope: !18808)
!18810 = !DILocation(line: 978, column: 6, scope: !18182)
!18811 = !DILocation(line: 979, column: 16, scope: !18808)
!18812 = !DILocation(line: 979, column: 24, scope: !18808)
!18813 = !DILocation(line: 979, column: 29, scope: !18808)
!18814 = !DILocation(line: 979, column: 3, scope: !18808)
!18815 = !DILocation(line: 980, column: 1, scope: !18182)
!18816 = distinct !DISubprogram(name: "psys_uv_to_w", scope: !3, file: !3, line: 732, type: !18817, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3331)
!18817 = !DISubroutineType(types: !18818)
!18818 = !{null, !341, !341, !260, !1796}
!18819 = !DILocalVariable(name: "u", arg: 1, scope: !18816, file: !3, line: 732, type: !341)
!18820 = !DILocation(line: 732, column: 32, scope: !18816)
!18821 = !DILocalVariable(name: "v", arg: 2, scope: !18816, file: !3, line: 732, type: !341)
!18822 = !DILocation(line: 732, column: 41, scope: !18816)
!18823 = !DILocalVariable(name: "quad", arg: 3, scope: !18816, file: !3, line: 732, type: !260)
!18824 = !DILocation(line: 732, column: 48, scope: !18816)
!18825 = !DILocalVariable(name: "w", arg: 4, scope: !18816, file: !3, line: 732, type: !1796)
!18826 = !DILocation(line: 732, column: 61, scope: !18816)
!18827 = !DILocalVariable(name: "vert", scope: !18816, file: !3, line: 734, type: !12983)
!18828 = !DILocation(line: 734, column: 8, scope: !18816)
!18829 = !DILocalVariable(name: "co", scope: !18816, file: !3, line: 734, type: !563)
!18830 = !DILocation(line: 734, column: 20, scope: !18816)
!18831 = !DILocation(line: 736, column: 7, scope: !18832)
!18832 = distinct !DILexicalBlock(scope: !18816, file: !3, line: 736, column: 6)
!18833 = !DILocation(line: 736, column: 6, scope: !18816)
!18834 = !DILocation(line: 737, column: 7, scope: !18835)
!18835 = distinct !DILexicalBlock(scope: !18836, file: !3, line: 737, column: 7)
!18836 = distinct !DILexicalBlock(scope: !18832, file: !3, line: 736, column: 13)
!18837 = !DILocation(line: 737, column: 9, scope: !18835)
!18838 = !DILocation(line: 737, column: 8, scope: !18835)
!18839 = !DILocation(line: 737, column: 11, scope: !18835)
!18840 = !DILocation(line: 737, column: 7, scope: !18836)
!18841 = !DILocation(line: 738, column: 12, scope: !18835)
!18842 = !DILocation(line: 738, column: 11, scope: !18835)
!18843 = !DILocation(line: 738, column: 5, scope: !18835)
!18844 = !DILocation(line: 738, column: 4, scope: !18835)
!18845 = !DILocation(line: 740, column: 12, scope: !18835)
!18846 = !DILocation(line: 740, column: 11, scope: !18835)
!18847 = !DILocation(line: 740, column: 5, scope: !18835)
!18848 = !DILocation(line: 741, column: 2, scope: !18836)
!18849 = !DILocation(line: 743, column: 2, scope: !18816)
!18850 = !DILocation(line: 743, column: 13, scope: !18816)
!18851 = !DILocation(line: 743, column: 21, scope: !18816)
!18852 = !DILocation(line: 743, column: 32, scope: !18816)
!18853 = !DILocation(line: 743, column: 40, scope: !18816)
!18854 = !DILocation(line: 743, column: 51, scope: !18816)
!18855 = !DILocation(line: 744, column: 2, scope: !18816)
!18856 = !DILocation(line: 744, column: 13, scope: !18816)
!18857 = !DILocation(line: 744, column: 21, scope: !18816)
!18858 = !DILocation(line: 744, column: 32, scope: !18816)
!18859 = !DILocation(line: 744, column: 40, scope: !18816)
!18860 = !DILocation(line: 744, column: 51, scope: !18816)
!18861 = !DILocation(line: 745, column: 2, scope: !18816)
!18862 = !DILocation(line: 745, column: 13, scope: !18816)
!18863 = !DILocation(line: 745, column: 21, scope: !18816)
!18864 = !DILocation(line: 745, column: 32, scope: !18816)
!18865 = !DILocation(line: 745, column: 40, scope: !18816)
!18866 = !DILocation(line: 745, column: 51, scope: !18816)
!18867 = !DILocation(line: 747, column: 10, scope: !18816)
!18868 = !DILocation(line: 747, column: 2, scope: !18816)
!18869 = !DILocation(line: 747, column: 8, scope: !18816)
!18870 = !DILocation(line: 748, column: 10, scope: !18816)
!18871 = !DILocation(line: 748, column: 2, scope: !18816)
!18872 = !DILocation(line: 748, column: 8, scope: !18816)
!18873 = !DILocation(line: 749, column: 2, scope: !18816)
!18874 = !DILocation(line: 749, column: 8, scope: !18816)
!18875 = !DILocation(line: 751, column: 6, scope: !18876)
!18876 = distinct !DILexicalBlock(scope: !18816, file: !3, line: 751, column: 6)
!18877 = !DILocation(line: 751, column: 6, scope: !18816)
!18878 = !DILocation(line: 752, column: 3, scope: !18879)
!18879 = distinct !DILexicalBlock(scope: !18876, file: !3, line: 751, column: 12)
!18880 = !DILocation(line: 752, column: 14, scope: !18879)
!18881 = !DILocation(line: 752, column: 22, scope: !18879)
!18882 = !DILocation(line: 752, column: 33, scope: !18879)
!18883 = !DILocation(line: 752, column: 41, scope: !18879)
!18884 = !DILocation(line: 752, column: 52, scope: !18879)
!18885 = !DILocation(line: 753, column: 27, scope: !18879)
!18886 = !DILocation(line: 753, column: 29, scope: !18879)
!18887 = !DILocation(line: 753, column: 38, scope: !18879)
!18888 = !DILocation(line: 753, column: 3, scope: !18879)
!18889 = !DILocation(line: 754, column: 2, scope: !18879)
!18890 = !DILocation(line: 756, column: 27, scope: !18891)
!18891 = distinct !DILexicalBlock(scope: !18876, file: !3, line: 755, column: 7)
!18892 = !DILocation(line: 756, column: 29, scope: !18891)
!18893 = !DILocation(line: 756, column: 38, scope: !18891)
!18894 = !DILocation(line: 756, column: 3, scope: !18891)
!18895 = !DILocation(line: 757, column: 3, scope: !18891)
!18896 = !DILocation(line: 757, column: 8, scope: !18891)
!18897 = !DILocation(line: 759, column: 1, scope: !18816)
