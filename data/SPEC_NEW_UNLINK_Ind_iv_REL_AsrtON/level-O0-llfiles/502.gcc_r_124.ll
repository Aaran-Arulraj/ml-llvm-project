; ModuleID = 'df-problems.c'
source_filename = "df-problems.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.gimple_seq_d = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.df_live_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.df_lr_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.df_artificial_ref = type { %struct.df_base_ref, %struct.basic_block_def* }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.df_scan_bb_info = type { %union.df_ref_d**, %union.df_ref_d** }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.df_byte_lr_problem_data = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, %struct.bitmap_obstack }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.df_rd_problem_data = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_obstack }
%struct.df_rd_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.df_lr_problem_data = type { %struct.bitmap_head_def**, %struct.bitmap_head_def** }
%struct.df_live_problem_data = type { %struct.bitmap_head_def**, %struct.bitmap_head_def** }
%struct.df_byte_lr_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.df_md_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }

@df = external dso_local global %struct.df*, align 8
@.str = private unnamed_addr constant [14 x i8] c"df-problems.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@cfun = external dso_local global %struct.function*, align 8
@.str.2 = private unnamed_addr constant [3 x i8] c"{ \00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"%c%d(bb %d insn %d) \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"\0A( \00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"%d%s \00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"(EH)\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [12 x i8] c")->[%d]->( \00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@problem_RD = internal global %struct.df_problem { i32 3, i32 1, void (%struct.bitmap_head_def*)* @df_rd_alloc, void (%struct.bitmap_head_def*)* null, void (%struct.basic_block_def*, i8*)* @df_rd_free_bb_info, void (%struct.bitmap_head_def*)* @df_rd_local_compute, void (%struct.bitmap_head_def*)* @df_rd_init_solution, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* @df_worklist_dataflow, void (%struct.basic_block_def*)* null, void (%struct.edge_def*)* @df_rd_confluence_n, i8 (i32)* @df_rd_transfer_function, void (%struct.bitmap_head_def*)* null, void ()* @df_rd_free, void ()* @df_rd_free, void (%struct._IO_FILE*)* @df_rd_start_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_rd_top_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_rd_bottom_dump, void ()* null, void ()* null, %struct.df_problem* null, i32 30, i8 1 }, align 8, !dbg !0
@problem_LR = internal global %struct.df_problem { i32 1, i32 2, void (%struct.bitmap_head_def*)* @df_lr_alloc, void (%struct.bitmap_head_def*)* @df_lr_reset, void (%struct.basic_block_def*, i8*)* @df_lr_free_bb_info, void (%struct.bitmap_head_def*)* @df_lr_local_compute, void (%struct.bitmap_head_def*)* @df_lr_init, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* @df_worklist_dataflow, void (%struct.basic_block_def*)* @df_lr_confluence_0, void (%struct.edge_def*)* @df_lr_confluence_n, i8 (i32)* @df_lr_transfer_function, void (%struct.bitmap_head_def*)* @df_lr_finalize, void ()* @df_lr_free, void ()* null, void (%struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_lr_top_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_lr_bottom_dump, void ()* @df_lr_verify_solution_start, void ()* @df_lr_verify_solution_end, %struct.df_problem* null, i32 31, i8 0 }, align 8, !dbg !2112
@problem_LIVE = internal global %struct.df_problem { i32 2, i32 1, void (%struct.bitmap_head_def*)* @df_live_alloc, void (%struct.bitmap_head_def*)* @df_live_reset, void (%struct.basic_block_def*, i8*)* @df_live_free_bb_info, void (%struct.bitmap_head_def*)* @df_live_local_compute, void (%struct.bitmap_head_def*)* @df_live_init, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* @df_worklist_dataflow, void (%struct.basic_block_def*)* null, void (%struct.edge_def*)* @df_live_confluence_n, i8 (i32)* @df_live_transfer_function, void (%struct.bitmap_head_def*)* @df_live_finalize, void ()* @df_live_free, void ()* @df_live_free, void (%struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_live_top_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_live_bottom_dump, void ()* @df_live_verify_solution_start, void ()* @df_live_verify_solution_end, %struct.df_problem* @problem_LR, i32 32, i8 0 }, align 8, !dbg !2268
@problem_CHAIN = internal global %struct.df_problem { i32 4, i32 0, void (%struct.bitmap_head_def*)* @df_chain_alloc, void (%struct.bitmap_head_def*)* @df_chain_reset, void (%struct.basic_block_def*, i8*)* null, void (%struct.bitmap_head_def*)* null, void (%struct.bitmap_head_def*)* null, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* null, void (%struct.basic_block_def*)* null, void (%struct.edge_def*)* null, i8 (i32)* null, void (%struct.bitmap_head_def*)* @df_chain_finalize, void ()* @df_chain_free, void ()* @df_chain_fully_remove_problem, void (%struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_chain_top_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_chain_bottom_dump, void ()* null, void ()* null, %struct.df_problem* @problem_RD, i32 34, i8 0 }, align 8, !dbg !2272
@problem_BYTE_LR = internal global %struct.df_problem { i32 5, i32 2, void (%struct.bitmap_head_def*)* @df_byte_lr_alloc, void (%struct.bitmap_head_def*)* @df_byte_lr_reset, void (%struct.basic_block_def*, i8*)* @df_byte_lr_free_bb_info, void (%struct.bitmap_head_def*)* @df_byte_lr_local_compute, void (%struct.bitmap_head_def*)* @df_byte_lr_init, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* @df_worklist_dataflow, void (%struct.basic_block_def*)* @df_byte_lr_confluence_0, void (%struct.edge_def*)* @df_byte_lr_confluence_n, i8 (i32)* @df_byte_lr_transfer_function, void (%struct.bitmap_head_def*)* null, void ()* @df_byte_lr_free, void ()* @df_byte_lr_free, void (%struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_byte_lr_top_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_byte_lr_bottom_dump, void ()* null, void ()* null, %struct.df_problem* null, i32 35, i8 0 }, align 8, !dbg !2274
@problem_NOTE = internal global %struct.df_problem { i32 6, i32 0, void (%struct.bitmap_head_def*)* @df_note_alloc, void (%struct.bitmap_head_def*)* null, void (%struct.basic_block_def*, i8*)* null, void (%struct.bitmap_head_def*)* @df_note_compute, void (%struct.bitmap_head_def*)* null, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* null, void (%struct.basic_block_def*)* null, void (%struct.edge_def*)* null, i8 (i32)* null, void (%struct.bitmap_head_def*)* null, void ()* @df_note_free, void ()* @df_note_free, void (%struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* null, void ()* null, void ()* null, %struct.df_problem* @problem_LR, i32 36, i8 0 }, align 8, !dbg !2276
@hard_regno_nregs = external dso_local global [53 x [87 x i8]], align 16
@problem_MD = internal global %struct.df_problem { i32 7, i32 1, void (%struct.bitmap_head_def*)* @df_md_alloc, void (%struct.bitmap_head_def*)* @df_md_reset, void (%struct.basic_block_def*, i8*)* @df_md_free_bb_info, void (%struct.bitmap_head_def*)* @df_md_local_compute, void (%struct.bitmap_head_def*)* @df_md_init, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* @df_worklist_dataflow, void (%struct.basic_block_def*)* @df_md_confluence_0, void (%struct.edge_def*)* @df_md_confluence_n, i8 (i32)* @df_md_transfer_function, void (%struct.bitmap_head_def*)* null, void ()* @df_md_free, void ()* @df_md_free, void (%struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_md_top_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_md_bottom_dump, void ()* null, void ()* null, %struct.df_problem* null, i32 29, i8 0 }, align 8, !dbg !2278
@.str.11 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"df_rd_block pool\00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@df_bitmap_obstack = external dso_local global %struct.bitmap_obstack, align 8
@seen_in_block = internal global %struct.bitmap_head_def* null, align 8, !dbg !2108
@seen_in_insn = internal global %struct.bitmap_head_def* null, align 8, !dbg !2110
@regs_invalidated_by_call_regset = external dso_local global %struct.bitmap_head_def*, align 8
@.str.13 = private unnamed_addr constant [20 x i8] c";; Reaching defs:\0A\0A\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"  sparse invalidated \09\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"  dense invalidated \09\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"%d[%d,%d] \00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c";; rd  in  \09(%d)\0A\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c";; rd  gen \09(%d)\0A\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c";; rd  kill\09(%d)\0A\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c";; rd  out \09(%d)\0A\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"df_lr_block pool\00", align 1
@reload_completed = external dso_local global i32, align 4
@fixed_regs = external dso_local global [53 x i8], align 16
@flag_pic = external dso_local global i32, align 4
@pic_offset_table_rtx = external dso_local global %struct.rtx_def*, align 8
@.str.23 = private unnamed_addr constant [13 x i8] c";; lr  in  \09\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c";;  old in  \09\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c";; lr  use \09\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c";; lr  def \09\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c";; lr  out \09\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c";;  old out  \09\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"df_live_block pool\00", align 1
@df_live_scratch = internal global %struct.bitmap_head_def* null, align 8, !dbg !2270
@optimize = external dso_local global i32, align 4
@.str.30 = private unnamed_addr constant [15 x i8] c";; live  in  \09\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c";; live  gen \09\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c";; live  kill\09\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c";; live  out \09\00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"df_chain_block pool\00", align 1
@.str.35 = private unnamed_addr constant [35 x i8] c";;  DU chains for artificial defs\0A\00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c";;   reg %d \00", align 1
@.str.37 = private unnamed_addr constant [40 x i8] c";;   DU chains for insn luid %d uid %d\0A\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c";;      reg %d \00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"read/write \00", align 1
@.str.40 = private unnamed_addr constant [35 x i8] c";;  UD chains for artificial uses\0A\00", align 1
@.str.41 = private unnamed_addr constant [40 x i8] c";;   UD chains for insn luid %d uid %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c";;   eq_note reg %d \00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"df_byte_lr_block pool\00", align 1
@mode_size = external dso_local global [87 x i8], align 16
@regno_reg_rtx = external dso_local global %struct.rtx_def**, align 8
@.str.44 = private unnamed_addr constant [14 x i8] c";; blr  in  \09\00", align 1
@.str.45 = private unnamed_addr constant [14 x i8] c";; blr  use \09\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c";; blr  def \09\00", align 1
@.str.47 = private unnamed_addr constant [14 x i8] c";; blr  out \09\00", align 1
@const_int_rtx = external dso_local global [129 x %struct.rtx_def*], align 16
@regstack_completed = external dso_local global i32, align 4
@.str.48 = private unnamed_addr constant [17 x i8] c"df_md_block pool\00", align 1
@df_md_scratch = internal global %struct.bitmap_head_def* null, align 8, !dbg !2280
@.str.49 = private unnamed_addr constant [13 x i8] c";; md  in  \09\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c";; md  init  \09\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c";; md  gen \09\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c";; md  kill \09\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c";; md  out \09\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bitmap_head_def* @df_get_live_out(%struct.basic_block_def* %bb) #0 !dbg !2286 {
entry:
  %retval = alloca %struct.bitmap_head_def*, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !2290, metadata !DIExpression()), !dbg !2291
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2292
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !2292
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !2292
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2292
  %tobool = icmp ne %struct.dataflow* %1, null, !dbg !2292
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2292

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2292
  br label %cond.end, !dbg !2292

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2292

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2292
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !2293
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 1, !dbg !2293
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 2, !dbg !2293
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !2293
  %tobool3 = icmp ne %struct.dataflow* %3, null, !dbg !2293
  br i1 %tobool3, label %if.then, label %if.else, !dbg !2295

if.then:                                          ; preds = %cond.end
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !2296
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i32 0, i32 9, !dbg !2296
  %5 = load i32, i32* %index, align 8, !dbg !2296
  %call = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %5), !dbg !2296
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i32 0, i32 3, !dbg !2296
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !2296
  store %struct.bitmap_head_def* %6, %struct.bitmap_head_def** %retval, align 8, !dbg !2297
  br label %return, !dbg !2297

if.else:                                          ; preds = %cond.end
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !2298
  %index4 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i32 0, i32 9, !dbg !2298
  %8 = load i32, i32* %index4, align 8, !dbg !2298
  %call5 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %8), !dbg !2298
  %out6 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call5, i32 0, i32 3, !dbg !2298
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out6, align 8, !dbg !2298
  store %struct.bitmap_head_def* %9, %struct.bitmap_head_def** %retval, align 8, !dbg !2299
  br label %return, !dbg !2299

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %retval, align 8, !dbg !2300
  ret %struct.bitmap_head_def* %10, !dbg !2300
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_live_bb_info* @df_live_get_bb_info(i32 %index) #0 !dbg !2301 {
entry:
  %retval = alloca %struct.df_live_bb_info*, align 8
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2304, metadata !DIExpression()), !dbg !2305
  %0 = load i32, i32* %index.addr, align 4, !dbg !2306
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !2308
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !2308
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !2308
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2308
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 2, !dbg !2309
  %3 = load i32, i32* %block_info_size, align 8, !dbg !2309
  %cmp = icmp ult i32 %0, %3, !dbg !2310
  br i1 %cmp, label %if.then, label %if.else, !dbg !2311

if.then:                                          ; preds = %entry
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !2312
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !2312
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 2, !dbg !2312
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !2312
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 1, !dbg !2313
  %6 = load i8**, i8*** %block_info, align 8, !dbg !2313
  %7 = load i32, i32* %index.addr, align 4, !dbg !2314
  %idxprom = zext i32 %7 to i64, !dbg !2312
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %idxprom, !dbg !2312
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !2312
  %9 = bitcast i8* %8 to %struct.df_live_bb_info*, !dbg !2315
  store %struct.df_live_bb_info* %9, %struct.df_live_bb_info** %retval, align 8, !dbg !2316
  br label %return, !dbg !2316

if.else:                                          ; preds = %entry
  store %struct.df_live_bb_info* null, %struct.df_live_bb_info** %retval, align 8, !dbg !2317
  br label %return, !dbg !2317

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %retval, align 8, !dbg !2318
  ret %struct.df_live_bb_info* %10, !dbg !2318
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %index) #0 !dbg !2319 {
entry:
  %retval = alloca %struct.df_lr_bb_info*, align 8
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2322, metadata !DIExpression()), !dbg !2323
  %0 = load i32, i32* %index.addr, align 4, !dbg !2324
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !2326
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !2326
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !2326
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2326
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 2, !dbg !2327
  %3 = load i32, i32* %block_info_size, align 8, !dbg !2327
  %cmp = icmp ult i32 %0, %3, !dbg !2328
  br i1 %cmp, label %if.then, label %if.else, !dbg !2329

if.then:                                          ; preds = %entry
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !2330
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !2330
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 1, !dbg !2330
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !2330
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 1, !dbg !2331
  %6 = load i8**, i8*** %block_info, align 8, !dbg !2331
  %7 = load i32, i32* %index.addr, align 4, !dbg !2332
  %idxprom = zext i32 %7 to i64, !dbg !2330
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %idxprom, !dbg !2330
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !2330
  %9 = bitcast i8* %8 to %struct.df_lr_bb_info*, !dbg !2333
  store %struct.df_lr_bb_info* %9, %struct.df_lr_bb_info** %retval, align 8, !dbg !2334
  br label %return, !dbg !2334

if.else:                                          ; preds = %entry
  store %struct.df_lr_bb_info* null, %struct.df_lr_bb_info** %retval, align 8, !dbg !2335
  br label %return, !dbg !2335

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %retval, align 8, !dbg !2336
  ret %struct.df_lr_bb_info* %10, !dbg !2336
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %bb) #0 !dbg !2337 {
entry:
  %retval = alloca %struct.bitmap_head_def*, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !2338, metadata !DIExpression()), !dbg !2339
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2340
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !2340
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !2340
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2340
  %tobool = icmp ne %struct.dataflow* %1, null, !dbg !2340
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2340

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2340
  br label %cond.end, !dbg !2340

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2340

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2340
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !2341
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 1, !dbg !2341
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 2, !dbg !2341
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !2341
  %tobool3 = icmp ne %struct.dataflow* %3, null, !dbg !2341
  br i1 %tobool3, label %if.then, label %if.else, !dbg !2343

if.then:                                          ; preds = %cond.end
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !2344
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i32 0, i32 9, !dbg !2344
  %5 = load i32, i32* %index, align 8, !dbg !2344
  %call = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %5), !dbg !2344
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i32 0, i32 2, !dbg !2344
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !2344
  store %struct.bitmap_head_def* %6, %struct.bitmap_head_def** %retval, align 8, !dbg !2345
  br label %return, !dbg !2345

if.else:                                          ; preds = %cond.end
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !2346
  %index4 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i32 0, i32 9, !dbg !2346
  %8 = load i32, i32* %index4, align 8, !dbg !2346
  %call5 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %8), !dbg !2346
  %in6 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call5, i32 0, i32 2, !dbg !2346
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in6, align 8, !dbg !2346
  store %struct.bitmap_head_def* %9, %struct.bitmap_head_def** %retval, align 8, !dbg !2347
  br label %return, !dbg !2347

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %retval, align 8, !dbg !2348
  ret %struct.bitmap_head_def* %10, !dbg !2348
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_grow_bb_info(%struct.dataflow* %dflow) #0 !dbg !2349 {
entry:
  %dflow.addr = alloca %struct.dataflow*, align 8
  %new_size = alloca i32, align 4
  store %struct.dataflow* %dflow, %struct.dataflow** %dflow.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow** %dflow.addr, metadata !2352, metadata !DIExpression()), !dbg !2353
  call void @llvm.dbg.declare(metadata i32* %new_size, metadata !2354, metadata !DIExpression()), !dbg !2355
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2356
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !2356
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !2356
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2356
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 5, !dbg !2356
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !2356
  %add = add nsw i32 %2, 1, !dbg !2357
  store i32 %add, i32* %new_size, align 4, !dbg !2355
  %3 = load %struct.dataflow*, %struct.dataflow** %dflow.addr, align 8, !dbg !2358
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i32 0, i32 2, !dbg !2360
  %4 = load i32, i32* %block_info_size, align 8, !dbg !2360
  %5 = load i32, i32* %new_size, align 4, !dbg !2361
  %cmp = icmp ult i32 %4, %5, !dbg !2362
  br i1 %cmp, label %if.then, label %if.end, !dbg !2363

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %new_size, align 4, !dbg !2364
  %div = udiv i32 %6, 4, !dbg !2366
  %7 = load i32, i32* %new_size, align 4, !dbg !2367
  %add1 = add i32 %7, %div, !dbg !2367
  store i32 %add1, i32* %new_size, align 4, !dbg !2367
  %8 = load %struct.dataflow*, %struct.dataflow** %dflow.addr, align 8, !dbg !2368
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %8, i32 0, i32 1, !dbg !2368
  %9 = load i8**, i8*** %block_info, align 8, !dbg !2368
  %10 = bitcast i8** %9 to i8*, !dbg !2368
  %11 = load i32, i32* %new_size, align 4, !dbg !2368
  %conv = zext i32 %11 to i64, !dbg !2368
  %mul = mul i64 8, %conv, !dbg !2368
  %call = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !2368
  %12 = bitcast i8* %call to i8**, !dbg !2368
  %13 = load %struct.dataflow*, %struct.dataflow** %dflow.addr, align 8, !dbg !2369
  %block_info2 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %13, i32 0, i32 1, !dbg !2370
  store i8** %12, i8*** %block_info2, align 8, !dbg !2371
  %14 = load %struct.dataflow*, %struct.dataflow** %dflow.addr, align 8, !dbg !2372
  %block_info3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %14, i32 0, i32 1, !dbg !2373
  %15 = load i8**, i8*** %block_info3, align 8, !dbg !2373
  %16 = load %struct.dataflow*, %struct.dataflow** %dflow.addr, align 8, !dbg !2374
  %block_info_size4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %16, i32 0, i32 2, !dbg !2375
  %17 = load i32, i32* %block_info_size4, align 8, !dbg !2375
  %idx.ext = zext i32 %17 to i64, !dbg !2376
  %add.ptr5 = getelementptr inbounds i8*, i8** %15, i64 %idx.ext, !dbg !2376
  %18 = bitcast i8** %add.ptr5 to i8*, !dbg !2377
  %19 = load i32, i32* %new_size, align 4, !dbg !2378
  %20 = load %struct.dataflow*, %struct.dataflow** %dflow.addr, align 8, !dbg !2379
  %block_info_size6 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %20, i32 0, i32 2, !dbg !2380
  %21 = load i32, i32* %block_info_size6, align 8, !dbg !2380
  %sub = sub i32 %19, %21, !dbg !2381
  %conv7 = zext i32 %sub to i64, !dbg !2382
  %mul8 = mul i64 %conv7, 8, !dbg !2383
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul8, i1 false), !dbg !2377
  %22 = load i32, i32* %new_size, align 4, !dbg !2384
  %23 = load %struct.dataflow*, %struct.dataflow** %dflow.addr, align 8, !dbg !2385
  %block_info_size9 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %23, i32 0, i32 2, !dbg !2386
  store i32 %22, i32* %block_info_size9, align 8, !dbg !2387
  br label %if.end, !dbg !2388

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2389
}

declare dso_local i8* @xrealloc(i8*, i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_chain_dump(%struct.df_link* %link, %struct._IO_FILE* %file) #0 !dbg !2390 {
entry:
  %link.addr = alloca %struct.df_link*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  store %struct.df_link* %link, %struct.df_link** %link.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_link** %link.addr, metadata !2393, metadata !DIExpression()), !dbg !2394
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !2395, metadata !DIExpression()), !dbg !2396
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !2397
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)), !dbg !2398
  br label %for.cond, !dbg !2399

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.df_link*, %struct.df_link** %link.addr, align 8, !dbg !2400
  %tobool = icmp ne %struct.df_link* %1, null, !dbg !2403
  br i1 %tobool, label %for.body, label %for.end, !dbg !2403

for.body:                                         ; preds = %for.cond
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !2404
  %3 = load %struct.df_link*, %struct.df_link** %link.addr, align 8, !dbg !2406
  %ref = getelementptr inbounds %struct.df_link, %struct.df_link* %3, i32 0, i32 0, !dbg !2406
  %4 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !2406
  %base = bitcast %union.df_ref_d* %4 to %struct.df_base_ref*, !dbg !2406
  %5 = bitcast %struct.df_base_ref* %base to i32*, !dbg !2406
  %bf.load = load i32, i32* %5, align 8, !dbg !2406
  %bf.lshr = lshr i32 %bf.load, 8, !dbg !2406
  %bf.clear = and i32 %bf.lshr, 255, !dbg !2406
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !2406
  %6 = zext i1 %cmp to i64, !dbg !2406
  %cond = select i1 %cmp, i32 100, i32 117, !dbg !2406
  %7 = load %struct.df_link*, %struct.df_link** %link.addr, align 8, !dbg !2407
  %ref1 = getelementptr inbounds %struct.df_link, %struct.df_link* %7, i32 0, i32 0, !dbg !2407
  %8 = load %union.df_ref_d*, %union.df_ref_d** %ref1, align 8, !dbg !2407
  %base2 = bitcast %union.df_ref_d* %8 to %struct.df_base_ref*, !dbg !2407
  %id = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base2, i32 0, i32 7, !dbg !2407
  %9 = load i32, i32* %id, align 4, !dbg !2407
  %10 = load %struct.df_link*, %struct.df_link** %link.addr, align 8, !dbg !2408
  %ref3 = getelementptr inbounds %struct.df_link, %struct.df_link* %10, i32 0, i32 0, !dbg !2408
  %11 = load %union.df_ref_d*, %union.df_ref_d** %ref3, align 8, !dbg !2408
  %base4 = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !2408
  %12 = bitcast %struct.df_base_ref* %base4 to i32*, !dbg !2408
  %bf.load5 = load i32, i32* %12, align 8, !dbg !2408
  %bf.clear6 = and i32 %bf.load5, 255, !dbg !2408
  %cmp7 = icmp eq i32 %bf.clear6, 1, !dbg !2408
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !2408

cond.true:                                        ; preds = %for.body
  %13 = load %struct.df_link*, %struct.df_link** %link.addr, align 8, !dbg !2408
  %ref8 = getelementptr inbounds %struct.df_link, %struct.df_link* %13, i32 0, i32 0, !dbg !2408
  %14 = load %union.df_ref_d*, %union.df_ref_d** %ref8, align 8, !dbg !2408
  %artificial_ref = bitcast %union.df_ref_d* %14 to %struct.df_artificial_ref*, !dbg !2408
  %bb = getelementptr inbounds %struct.df_artificial_ref, %struct.df_artificial_ref* %artificial_ref, i32 0, i32 1, !dbg !2408
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2408
  br label %cond.end, !dbg !2408

cond.false:                                       ; preds = %for.body
  %16 = load %struct.df_link*, %struct.df_link** %link.addr, align 8, !dbg !2408
  %ref9 = getelementptr inbounds %struct.df_link, %struct.df_link* %16, i32 0, i32 0, !dbg !2408
  %17 = load %union.df_ref_d*, %union.df_ref_d** %ref9, align 8, !dbg !2408
  %base10 = bitcast %union.df_ref_d* %17 to %struct.df_base_ref*, !dbg !2408
  %insn_info = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base10, i32 0, i32 3, !dbg !2408
  %18 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !2408
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %18, i32 0, i32 0, !dbg !2408
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2408
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !2408
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2408
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !2408
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !2408
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !2408
  br label %cond.end, !dbg !2408

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond11 = phi %struct.basic_block_def* [ %15, %cond.true ], [ %20, %cond.false ], !dbg !2408
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cond11, i32 0, i32 9, !dbg !2408
  %21 = load i32, i32* %index, align 8, !dbg !2408
  %22 = load %struct.df_link*, %struct.df_link** %link.addr, align 8, !dbg !2409
  %ref12 = getelementptr inbounds %struct.df_link, %struct.df_link* %22, i32 0, i32 0, !dbg !2409
  %23 = load %union.df_ref_d*, %union.df_ref_d** %ref12, align 8, !dbg !2409
  %base13 = bitcast %union.df_ref_d* %23 to %struct.df_base_ref*, !dbg !2409
  %24 = bitcast %struct.df_base_ref* %base13 to i32*, !dbg !2409
  %bf.load14 = load i32, i32* %24, align 8, !dbg !2409
  %bf.clear15 = and i32 %bf.load14, 255, !dbg !2409
  %cmp16 = icmp eq i32 %bf.clear15, 1, !dbg !2409
  br i1 %cmp16, label %cond.true17, label %cond.false18, !dbg !2409

cond.true17:                                      ; preds = %cond.end
  br label %cond.end26, !dbg !2409

cond.false18:                                     ; preds = %cond.end
  %25 = load %struct.df_link*, %struct.df_link** %link.addr, align 8, !dbg !2410
  %ref19 = getelementptr inbounds %struct.df_link, %struct.df_link* %25, i32 0, i32 0, !dbg !2410
  %26 = load %union.df_ref_d*, %union.df_ref_d** %ref19, align 8, !dbg !2410
  %base20 = bitcast %union.df_ref_d* %26 to %struct.df_base_ref*, !dbg !2410
  %insn_info21 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base20, i32 0, i32 3, !dbg !2410
  %27 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info21, align 8, !dbg !2410
  %insn22 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %27, i32 0, i32 0, !dbg !2410
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn22, align 8, !dbg !2410
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !2410
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !2410
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 0, !dbg !2410
  %rt_int = bitcast %union.rtunion_def* %arrayidx25 to i32*, !dbg !2410
  %29 = load i32, i32* %rt_int, align 8, !dbg !2410
  br label %cond.end26, !dbg !2409

cond.end26:                                       ; preds = %cond.false18, %cond.true17
  %cond27 = phi i32 [ -1, %cond.true17 ], [ %29, %cond.false18 ], !dbg !2409
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i32 %cond, i32 %9, i32 %21, i32 %cond27), !dbg !2411
  br label %for.inc, !dbg !2412

for.inc:                                          ; preds = %cond.end26
  %30 = load %struct.df_link*, %struct.df_link** %link.addr, align 8, !dbg !2413
  %next = getelementptr inbounds %struct.df_link, %struct.df_link* %30, i32 0, i32 1, !dbg !2414
  %31 = load %struct.df_link*, %struct.df_link** %next, align 8, !dbg !2414
  store %struct.df_link* %31, %struct.df_link** %link.addr, align 8, !dbg !2415
  br label %for.cond, !dbg !2416, !llvm.loop !2417

for.end:                                          ; preds = %for.cond
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !2419
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !2420
  ret void, !dbg !2421
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_print_bb_index(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !2422 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %pred = alloca %struct.basic_block_def*, align 8
  %tmp7 = alloca %struct.edge_iterator, align 8
  %succ = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !2423, metadata !DIExpression()), !dbg !2424
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !2425, metadata !DIExpression()), !dbg !2426
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !2427, metadata !DIExpression()), !dbg !2428
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !2429, metadata !DIExpression()), !dbg !2436
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !2437
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)), !dbg !2438
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !2439
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 0, !dbg !2439
  %call1 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds), !dbg !2439
  %2 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !2439
  %3 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %2, i32 0, i32 0, !dbg !2439
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 0, !dbg !2439
  store i32 %4, i32* %3, align 8, !dbg !2439
  %5 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %2, i32 0, i32 1, !dbg !2439
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 1, !dbg !2439
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !2439
  %7 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2439
  %8 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !2439
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false), !dbg !2439
  br label %for.cond, !dbg !2439

for.cond:                                         ; preds = %for.inc, %entry
  %9 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !2441
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !2441
  %11 = load i32, i32* %10, align 8, !dbg !2441
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !2441
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !2441
  %call2 = call zeroext i8 @ei_cond(i32 %11, %struct.VEC_edge_gc** %13, %struct.edge_def** %e), !dbg !2441
  %tobool = icmp ne i8 %call2, 0, !dbg !2439
  br i1 %tobool, label %for.body, label %for.end, !dbg !2439

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %pred, metadata !2443, metadata !DIExpression()), !dbg !2445
  %14 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2446
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %14, i32 0, i32 0, !dbg !2447
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !2447
  store %struct.basic_block_def* %15, %struct.basic_block_def** %pred, align 8, !dbg !2445
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !2448
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %pred, align 8, !dbg !2449
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i32 0, i32 9, !dbg !2450
  %18 = load i32, i32* %index, align 8, !dbg !2450
  %19 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2451
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %19, i32 0, i32 7, !dbg !2452
  %20 = load i32, i32* %flags, align 8, !dbg !2452
  %and = and i32 %20, 8, !dbg !2453
  %tobool3 = icmp ne i32 %and, 0, !dbg !2451
  %21 = zext i1 %tobool3 to i64, !dbg !2451
  %cond = select i1 %tobool3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), !dbg !2451
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i32 %18, i8* %cond), !dbg !2454
  br label %for.inc, !dbg !2455

for.inc:                                          ; preds = %for.body
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !2441
  br label %for.cond, !dbg !2441, !llvm.loop !2456

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !2458
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !2459
  %index5 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i32 0, i32 9, !dbg !2460
  %24 = load i32, i32* %index5, align 8, !dbg !2460
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i32 %24), !dbg !2461
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !2462
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i32 0, i32 1, !dbg !2462
  %call8 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %succs), !dbg !2462
  %26 = bitcast %struct.edge_iterator* %tmp7 to { i32, %struct.VEC_edge_gc** }*, !dbg !2462
  %27 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %26, i32 0, i32 0, !dbg !2462
  %28 = extractvalue { i32, %struct.VEC_edge_gc** } %call8, 0, !dbg !2462
  store i32 %28, i32* %27, align 8, !dbg !2462
  %29 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %26, i32 0, i32 1, !dbg !2462
  %30 = extractvalue { i32, %struct.VEC_edge_gc** } %call8, 1, !dbg !2462
  store %struct.VEC_edge_gc** %30, %struct.VEC_edge_gc*** %29, align 8, !dbg !2462
  %31 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2462
  %32 = bitcast %struct.edge_iterator* %tmp7 to i8*, !dbg !2462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false), !dbg !2462
  br label %for.cond9, !dbg !2462

for.cond9:                                        ; preds = %for.inc19, %for.end
  %33 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !2464
  %34 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %33, i32 0, i32 0, !dbg !2464
  %35 = load i32, i32* %34, align 8, !dbg !2464
  %36 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %33, i32 0, i32 1, !dbg !2464
  %37 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %36, align 8, !dbg !2464
  %call10 = call zeroext i8 @ei_cond(i32 %35, %struct.VEC_edge_gc** %37, %struct.edge_def** %e), !dbg !2464
  %tobool11 = icmp ne i8 %call10, 0, !dbg !2462
  br i1 %tobool11, label %for.body12, label %for.end20, !dbg !2462

for.body12:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %succ, metadata !2466, metadata !DIExpression()), !dbg !2468
  %38 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2469
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i32 0, i32 1, !dbg !2470
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2470
  store %struct.basic_block_def* %39, %struct.basic_block_def** %succ, align 8, !dbg !2468
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !2471
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %succ, align 8, !dbg !2472
  %index13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i32 0, i32 9, !dbg !2473
  %42 = load i32, i32* %index13, align 8, !dbg !2473
  %43 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2474
  %flags14 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %43, i32 0, i32 7, !dbg !2475
  %44 = load i32, i32* %flags14, align 8, !dbg !2475
  %and15 = and i32 %44, 8, !dbg !2476
  %tobool16 = icmp ne i32 %and15, 0, !dbg !2474
  %45 = zext i1 %tobool16 to i64, !dbg !2474
  %cond17 = select i1 %tobool16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), !dbg !2474
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i32 %42, i8* %cond17), !dbg !2477
  br label %for.inc19, !dbg !2478

for.inc19:                                        ; preds = %for.body12
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !2464
  br label %for.cond9, !dbg !2464, !llvm.loop !2479

for.end20:                                        ; preds = %for.cond9
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !2481
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)), !dbg !2482
  ret void, !dbg !2483
}

; Function Attrs: noinline nounwind uwtable
define internal { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) #0 !dbg !2484 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  %ev.addr = alloca %struct.VEC_edge_gc**, align 8
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %ev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_gc*** %ev.addr, metadata !2487, metadata !DIExpression()), !dbg !2488
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %retval, metadata !2489, metadata !DIExpression()), !dbg !2490
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 0, !dbg !2491
  store i32 0, i32* %index, align 8, !dbg !2492
  %0 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %ev.addr, align 8, !dbg !2493
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 1, !dbg !2494
  store %struct.VEC_edge_gc** %0, %struct.VEC_edge_gc*** %container, align 8, !dbg !2495
  %1 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !2496
  %2 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, align 8, !dbg !2496
  ret { i32, %struct.VEC_edge_gc** } %2, !dbg !2496
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) #0 !dbg !2497 {
entry:
  %retval = alloca i8, align 1
  %ei = alloca %struct.edge_iterator, align 8
  %p.addr = alloca %struct.edge_def**, align 8
  %0 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %ei.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %ei.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !2501, metadata !DIExpression()), !dbg !2502
  store %struct.edge_def** %p, %struct.edge_def*** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def*** %p.addr, metadata !2503, metadata !DIExpression()), !dbg !2504
  %3 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !2505
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !2505
  %5 = load i32, i32* %4, align 8, !dbg !2505
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !2505
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !2505
  %call = call zeroext i8 @ei_end_p(i32 %5, %struct.VEC_edge_gc** %7), !dbg !2505
  %tobool = icmp ne i8 %call, 0, !dbg !2505
  br i1 %tobool, label %if.else, label %if.then, !dbg !2507

if.then:                                          ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !2508
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !2508
  %10 = load i32, i32* %9, align 8, !dbg !2508
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !2508
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !2508
  %call1 = call %struct.edge_def* @ei_edge(i32 %10, %struct.VEC_edge_gc** %12), !dbg !2508
  %13 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !2510
  store %struct.edge_def* %call1, %struct.edge_def** %13, align 8, !dbg !2511
  store i8 1, i8* %retval, align 1, !dbg !2512
  br label %return, !dbg !2512

if.else:                                          ; preds = %entry
  %14 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !2513
  store %struct.edge_def* null, %struct.edge_def** %14, align 8, !dbg !2515
  store i8 0, i8* %retval, align 1, !dbg !2516
  br label %return, !dbg !2516

return:                                           ; preds = %if.else, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !2517
  ret i8 %15, !dbg !2517
}

; Function Attrs: noinline nounwind uwtable
define internal void @ei_next(%struct.edge_iterator* %i) #0 !dbg !2518 {
entry:
  %i.addr = alloca %struct.edge_iterator*, align 8
  store %struct.edge_iterator* %i, %struct.edge_iterator** %i.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator** %i.addr, metadata !2522, metadata !DIExpression()), !dbg !2523
  %0 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !2524
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %0, i32 0, i32 0, !dbg !2524
  %1 = load i32, i32* %index, align 8, !dbg !2524
  %2 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !2524
  %3 = bitcast %struct.edge_iterator* %2 to { i32, %struct.VEC_edge_gc** }*, !dbg !2524
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !2524
  %5 = load i32, i32* %4, align 8, !dbg !2524
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !2524
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !2524
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !2524
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !2524
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2524

cond.true:                                        ; preds = %entry
  %8 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !2524
  %9 = bitcast %struct.edge_iterator* %8 to { i32, %struct.VEC_edge_gc** }*, !dbg !2524
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !2524
  %11 = load i32, i32* %10, align 8, !dbg !2524
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !2524
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !2524
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !2524
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !2524
  br label %cond.end, !dbg !2524

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2524

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !2524
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !2524
  %cmp = icmp ult i32 %1, %call2, !dbg !2524
  br i1 %cmp, label %cond.false4, label %cond.true3, !dbg !2524

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2524
  br label %cond.end5, !dbg !2524

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !2524

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !2524
  %14 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !2525
  %index7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %14, i32 0, i32 0, !dbg !2526
  %15 = load i32, i32* %index7, align 8, !dbg !2527
  %inc = add i32 %15, 1, !dbg !2527
  store i32 %inc, i32* %index7, align 8, !dbg !2527
  ret void, !dbg !2528
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_rd_simulate_artificial_defs_at_top(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %local_rd) #0 !dbg !2529 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %local_rd.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %def_rec = alloca %union.df_ref_d**, align 8
  %def = alloca %union.df_ref_d*, align 8
  %dregno = alloca i32, align 4
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !2532, metadata !DIExpression()), !dbg !2533
  store %struct.bitmap_head_def* %local_rd, %struct.bitmap_head_def** %local_rd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %local_rd.addr, metadata !2534, metadata !DIExpression()), !dbg !2535
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !2536, metadata !DIExpression()), !dbg !2537
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !2538
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !2539
  %1 = load i32, i32* %index, align 8, !dbg !2539
  store i32 %1, i32* %bb_index, align 4, !dbg !2537
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !2540, metadata !DIExpression()), !dbg !2541
  %2 = load i32, i32* %bb_index, align 4, !dbg !2542
  %call = call %union.df_ref_d** @df_get_artificial_defs(i32 %2), !dbg !2544
  store %union.df_ref_d** %call, %union.df_ref_d*** %def_rec, align 8, !dbg !2545
  br label %for.cond, !dbg !2546

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2547
  %4 = load %union.df_ref_d*, %union.df_ref_d** %3, align 8, !dbg !2549
  %tobool = icmp ne %union.df_ref_d* %4, null, !dbg !2550
  br i1 %tobool, label %for.body, label %for.end, !dbg !2550

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !2551, metadata !DIExpression()), !dbg !2553
  %5 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2554
  %6 = load %union.df_ref_d*, %union.df_ref_d** %5, align 8, !dbg !2555
  store %union.df_ref_d* %6, %union.df_ref_d** %def, align 8, !dbg !2553
  %7 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !2556
  %base = bitcast %union.df_ref_d* %7 to %struct.df_base_ref*, !dbg !2556
  %8 = bitcast %struct.df_base_ref* %base to i32*, !dbg !2556
  %bf.load = load i32, i32* %8, align 8, !dbg !2556
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !2556
  %and = and i32 %bf.ashr, 2, !dbg !2558
  %tobool1 = icmp ne i32 %and, 0, !dbg !2558
  br i1 %tobool1, label %if.then, label %if.end14, !dbg !2559

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !2560, metadata !DIExpression()), !dbg !2562
  %9 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !2563
  %base2 = bitcast %union.df_ref_d* %9 to %struct.df_base_ref*, !dbg !2563
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base2, i32 0, i32 6, !dbg !2563
  %10 = load i32, i32* %regno, align 8, !dbg !2563
  store i32 %10, i32* %dregno, align 4, !dbg !2562
  %11 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !2564
  %base3 = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !2564
  %12 = bitcast %struct.df_base_ref* %base3 to i32*, !dbg !2564
  %bf.load4 = load i32, i32* %12, align 8, !dbg !2564
  %bf.ashr5 = ashr i32 %bf.load4, 16, !dbg !2564
  %and6 = and i32 %bf.ashr5, 17, !dbg !2566
  %tobool7 = icmp ne i32 %and6, 0, !dbg !2566
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !2567

if.then8:                                         ; preds = %if.then
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %local_rd.addr, align 8, !dbg !2568
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !2569
  %def_info = getelementptr inbounds %struct.df, %struct.df* %14, i32 0, i32 3, !dbg !2569
  %begin = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 1, !dbg !2569
  %15 = load i32*, i32** %begin, align 8, !dbg !2569
  %16 = load i32, i32* %dregno, align 4, !dbg !2569
  %idxprom = zext i32 %16 to i64, !dbg !2569
  %arrayidx = getelementptr inbounds i32, i32* %15, i64 %idxprom, !dbg !2569
  %17 = load i32, i32* %arrayidx, align 4, !dbg !2569
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !2570
  %def_info9 = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 3, !dbg !2570
  %count = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info9, i32 0, i32 2, !dbg !2570
  %19 = load i32*, i32** %count, align 8, !dbg !2570
  %20 = load i32, i32* %dregno, align 4, !dbg !2570
  %idxprom10 = zext i32 %20 to i64, !dbg !2570
  %arrayidx11 = getelementptr inbounds i32, i32* %19, i64 %idxprom10, !dbg !2570
  %21 = load i32, i32* %arrayidx11, align 4, !dbg !2570
  call void @bitmap_clear_range(%struct.bitmap_head_def* %13, i32 %17, i32 %21), !dbg !2571
  br label %if.end, !dbg !2571

if.end:                                           ; preds = %if.then8, %if.then
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %local_rd.addr, align 8, !dbg !2572
  %23 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !2573
  %base12 = bitcast %union.df_ref_d* %23 to %struct.df_base_ref*, !dbg !2573
  %id = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base12, i32 0, i32 7, !dbg !2573
  %24 = load i32, i32* %id, align 4, !dbg !2573
  %call13 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %22, i32 %24), !dbg !2574
  br label %if.end14, !dbg !2575

if.end14:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !2576

for.inc:                                          ; preds = %if.end14
  %25 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2577
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %25, i32 1, !dbg !2577
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !2577
  br label %for.cond, !dbg !2578, !llvm.loop !2579

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2581
}

; Function Attrs: noinline nounwind uwtable
define internal %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #0 !dbg !2582 {
entry:
  %bb_index.addr = alloca i32, align 4
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !2585, metadata !DIExpression()), !dbg !2586
  %0 = load i32, i32* %bb_index.addr, align 4, !dbg !2587
  %call = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %0), !dbg !2588
  %artificial_defs = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %call, i32 0, i32 0, !dbg !2589
  %1 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs, align 8, !dbg !2589
  ret %union.df_ref_d** %1, !dbg !2590
}

declare dso_local void @bitmap_clear_range(%struct.bitmap_head_def*, i32, i32) #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_rd_simulate_one_insn(%struct.basic_block_def* %bb, %struct.rtx_def* %insn, %struct.bitmap_head_def* %local_rd) #0 !dbg !2591 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %local_rd.addr = alloca %struct.bitmap_head_def*, align 8
  %uid = alloca i32, align 4
  %def_rec = alloca %union.df_ref_d**, align 8
  %def = alloca %union.df_ref_d*, align 8
  %dregno = alloca i32, align 4
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !2594, metadata !DIExpression()), !dbg !2595
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2596, metadata !DIExpression()), !dbg !2597
  store %struct.bitmap_head_def* %local_rd, %struct.bitmap_head_def** %local_rd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %local_rd.addr, metadata !2598, metadata !DIExpression()), !dbg !2599
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !2600, metadata !DIExpression()), !dbg !2601
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2602
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !2602
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2602
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2602
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2602
  %1 = load i32, i32* %rt_int, align 8, !dbg !2602
  store i32 %1, i32* %uid, align 4, !dbg !2601
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !2603, metadata !DIExpression()), !dbg !2604
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !2605
  %insns = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 10, !dbg !2605
  %3 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !2605
  %4 = load i32, i32* %uid, align 4, !dbg !2605
  %idxprom = zext i32 %4 to i64, !dbg !2605
  %arrayidx1 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %3, i64 %idxprom, !dbg !2605
  %5 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx1, align 8, !dbg !2605
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %5, i32 0, i32 1, !dbg !2605
  %6 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !2605
  store %union.df_ref_d** %6, %union.df_ref_d*** %def_rec, align 8, !dbg !2607
  br label %for.cond, !dbg !2608

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2609
  %8 = load %union.df_ref_d*, %union.df_ref_d** %7, align 8, !dbg !2611
  %tobool = icmp ne %union.df_ref_d* %8, null, !dbg !2612
  br i1 %tobool, label %for.body, label %for.end, !dbg !2612

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !2613, metadata !DIExpression()), !dbg !2615
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2616
  %10 = load %union.df_ref_d*, %union.df_ref_d** %9, align 8, !dbg !2617
  store %union.df_ref_d* %10, %union.df_ref_d** %def, align 8, !dbg !2615
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !2618, metadata !DIExpression()), !dbg !2619
  %11 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !2620
  %base = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !2620
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 6, !dbg !2620
  %12 = load i32, i32* %regno, align 8, !dbg !2620
  store i32 %12, i32* %dregno, align 4, !dbg !2619
  %13 = load %struct.df*, %struct.df** @df, align 8, !dbg !2621
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %13, i32 0, i32 27, !dbg !2623
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !2623
  %bf.cast = sext i8 %bf.load to i32, !dbg !2623
  %and = and i32 %bf.cast, 2, !dbg !2624
  %tobool2 = icmp ne i32 %and, 0, !dbg !2624
  br i1 %tobool2, label %lor.lhs.false, label %if.then, !dbg !2625

lor.lhs.false:                                    ; preds = %for.body
  %14 = load i32, i32* %dregno, align 4, !dbg !2626
  %cmp = icmp uge i32 %14, 53, !dbg !2627
  br i1 %cmp, label %if.then, label %if.end21, !dbg !2628

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %15 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !2629
  %base3 = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !2629
  %16 = bitcast %struct.df_base_ref* %base3 to i32*, !dbg !2629
  %bf.load4 = load i32, i32* %16, align 8, !dbg !2629
  %bf.ashr = ashr i32 %bf.load4, 16, !dbg !2629
  %and5 = and i32 %bf.ashr, 17, !dbg !2632
  %tobool6 = icmp ne i32 %and5, 0, !dbg !2632
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !2633

if.then7:                                         ; preds = %if.then
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %local_rd.addr, align 8, !dbg !2634
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !2635
  %def_info = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 3, !dbg !2635
  %begin = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 1, !dbg !2635
  %19 = load i32*, i32** %begin, align 8, !dbg !2635
  %20 = load i32, i32* %dregno, align 4, !dbg !2635
  %idxprom8 = zext i32 %20 to i64, !dbg !2635
  %arrayidx9 = getelementptr inbounds i32, i32* %19, i64 %idxprom8, !dbg !2635
  %21 = load i32, i32* %arrayidx9, align 4, !dbg !2635
  %22 = load %struct.df*, %struct.df** @df, align 8, !dbg !2636
  %def_info10 = getelementptr inbounds %struct.df, %struct.df* %22, i32 0, i32 3, !dbg !2636
  %count = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info10, i32 0, i32 2, !dbg !2636
  %23 = load i32*, i32** %count, align 8, !dbg !2636
  %24 = load i32, i32* %dregno, align 4, !dbg !2636
  %idxprom11 = zext i32 %24 to i64, !dbg !2636
  %arrayidx12 = getelementptr inbounds i32, i32* %23, i64 %idxprom11, !dbg !2636
  %25 = load i32, i32* %arrayidx12, align 4, !dbg !2636
  call void @bitmap_clear_range(%struct.bitmap_head_def* %17, i32 %21, i32 %25), !dbg !2637
  br label %if.end, !dbg !2637

if.end:                                           ; preds = %if.then7, %if.then
  %26 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !2638
  %base13 = bitcast %union.df_ref_d* %26 to %struct.df_base_ref*, !dbg !2638
  %27 = bitcast %struct.df_base_ref* %base13 to i32*, !dbg !2638
  %bf.load14 = load i32, i32* %27, align 8, !dbg !2638
  %bf.ashr15 = ashr i32 %bf.load14, 16, !dbg !2638
  %and16 = and i32 %bf.ashr15, 192, !dbg !2640
  %tobool17 = icmp ne i32 %and16, 0, !dbg !2640
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !2641

if.then18:                                        ; preds = %if.end
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %local_rd.addr, align 8, !dbg !2642
  %29 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !2643
  %base19 = bitcast %union.df_ref_d* %29 to %struct.df_base_ref*, !dbg !2643
  %id = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base19, i32 0, i32 7, !dbg !2643
  %30 = load i32, i32* %id, align 4, !dbg !2643
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %28, i32 %30), !dbg !2644
  br label %if.end20, !dbg !2644

if.end20:                                         ; preds = %if.then18, %if.end
  br label %if.end21, !dbg !2645

if.end21:                                         ; preds = %if.end20, %lor.lhs.false
  br label %for.inc, !dbg !2646

for.inc:                                          ; preds = %if.end21
  %31 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2647
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %31, i32 1, !dbg !2647
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !2647
  br label %for.cond, !dbg !2648, !llvm.loop !2649

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2651
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_rd_add_problem() #0 !dbg !2652 {
entry:
  call void @df_add_problem(%struct.df_problem* @problem_RD), !dbg !2653
  ret void, !dbg !2654
}

declare dso_local void @df_add_problem(%struct.df_problem*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_lr_add_problem() #0 !dbg !2655 {
entry:
  call void @df_add_problem(%struct.df_problem* @problem_LR), !dbg !2656
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !2657
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2658
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !2658
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !2658
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2658
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 4, !dbg !2659
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !2660
  ret void, !dbg !2661
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_lr_verify_transfer_functions() #0 !dbg !2662 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  %saved_def = alloca %struct.bitmap_head_def*, align 8
  %saved_use = alloca %struct.bitmap_head_def*, align 8
  %saved_adef = alloca %struct.bitmap_head_def*, align 8
  %saved_ause = alloca %struct.bitmap_head_def*, align 8
  %all_blocks = alloca %struct.bitmap_head_def*, align 8
  %bb_info = alloca %struct.df_lr_bb_info*, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !2663, metadata !DIExpression()), !dbg !2664
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %saved_def, metadata !2665, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %saved_use, metadata !2667, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %saved_adef, metadata !2669, metadata !DIExpression()), !dbg !2670
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %saved_ause, metadata !2671, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks, metadata !2673, metadata !DIExpression()), !dbg !2674
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2675
  %tobool = icmp ne %struct.df* %0, null, !dbg !2675
  br i1 %tobool, label %if.end, label %if.then, !dbg !2677

if.then:                                          ; preds = %entry
  br label %return, !dbg !2678

if.end:                                           ; preds = %entry
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !2679
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %saved_def, align 8, !dbg !2680
  %call1 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !2681
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** %saved_use, align 8, !dbg !2682
  %call2 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !2683
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** %saved_adef, align 8, !dbg !2684
  %call3 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !2685
  store %struct.bitmap_head_def* %call3, %struct.bitmap_head_def** %saved_ause, align 8, !dbg !2686
  %call4 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !2687
  store %struct.bitmap_head_def* %call4, %struct.bitmap_head_def** %all_blocks, align 8, !dbg !2688
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2689
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, !dbg !2689
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !2689
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2689
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i32 0, i32 0, !dbg !2689
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2689
  store %struct.basic_block_def* %3, %struct.basic_block_def** %bb, align 8, !dbg !2689
  br label %for.cond, !dbg !2689

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2691
  %tobool5 = icmp ne %struct.basic_block_def* %4, null, !dbg !2689
  br i1 %tobool5, label %for.body, label %for.end, !dbg !2689

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_info, metadata !2693, metadata !DIExpression()), !dbg !2695
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2696
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 9, !dbg !2697
  %6 = load i32, i32* %index, align 8, !dbg !2697
  %call6 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %6), !dbg !2698
  store %struct.df_lr_bb_info* %call6, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2695
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks, align 8, !dbg !2699
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2700
  %index7 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i32 0, i32 9, !dbg !2701
  %9 = load i32, i32* %index7, align 8, !dbg !2701
  %call8 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %7, i32 %9), !dbg !2702
  %10 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2703
  %tobool9 = icmp ne %struct.df_lr_bb_info* %10, null, !dbg !2703
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !2705

if.then10:                                        ; preds = %for.body
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !2706
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 1, !dbg !2706
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !2706
  %12 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2706
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %12, i32 0, i32 4, !dbg !2709
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !2709
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2710
  %index11 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i32 0, i32 9, !dbg !2711
  %15 = load i32, i32* %index11, align 8, !dbg !2711
  %call12 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %13, i32 %15), !dbg !2712
  %tobool13 = icmp ne i32 %call12, 0, !dbg !2712
  br i1 %tobool13, label %if.end28, label %if.then14, !dbg !2713

if.then14:                                        ; preds = %if.then10
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_def, align 8, !dbg !2714
  %17 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2716
  %def = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %17, i32 0, i32 0, !dbg !2717
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !2717
  call void @bitmap_copy(%struct.bitmap_head_def* %16, %struct.bitmap_head_def* %18), !dbg !2718
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_use, align 8, !dbg !2719
  %20 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2720
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %20, i32 0, i32 1, !dbg !2721
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !2721
  call void @bitmap_copy(%struct.bitmap_head_def* %19, %struct.bitmap_head_def* %21), !dbg !2722
  %22 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2723
  %def15 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %22, i32 0, i32 0, !dbg !2724
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def15, align 8, !dbg !2724
  call void @bitmap_clear(%struct.bitmap_head_def* %23), !dbg !2725
  %24 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2726
  %use16 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %24, i32 0, i32 1, !dbg !2727
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use16, align 8, !dbg !2727
  call void @bitmap_clear(%struct.bitmap_head_def* %25), !dbg !2728
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2729
  %index17 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i32 0, i32 9, !dbg !2730
  %27 = load i32, i32* %index17, align 8, !dbg !2730
  call void @df_lr_bb_local_compute(i32 %27), !dbg !2731
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_def, align 8, !dbg !2732
  %29 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2732
  %def18 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %29, i32 0, i32 0, !dbg !2732
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def18, align 8, !dbg !2732
  %call19 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %28, %struct.bitmap_head_def* %30), !dbg !2732
  %tobool20 = icmp ne i8 %call19, 0, !dbg !2732
  br i1 %tobool20, label %cond.false, label %cond.true, !dbg !2732

cond.true:                                        ; preds = %if.then14
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1306, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2732
  br label %cond.end, !dbg !2732

cond.false:                                       ; preds = %if.then14
  br label %cond.end, !dbg !2732

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2732
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_use, align 8, !dbg !2733
  %32 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2733
  %use21 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %32, i32 0, i32 1, !dbg !2733
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use21, align 8, !dbg !2733
  %call22 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %31, %struct.bitmap_head_def* %33), !dbg !2733
  %tobool23 = icmp ne i8 %call22, 0, !dbg !2733
  br i1 %tobool23, label %cond.false25, label %cond.true24, !dbg !2733

cond.true24:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1307, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2733
  br label %cond.end26, !dbg !2733

cond.false25:                                     ; preds = %cond.end
  br label %cond.end26, !dbg !2733

cond.end26:                                       ; preds = %cond.false25, %cond.true24
  %cond27 = phi i32 [ 0, %cond.true24 ], [ 0, %cond.false25 ], !dbg !2733
  br label %if.end28, !dbg !2734

if.end28:                                         ; preds = %cond.end26, %if.then10
  br label %if.end39, !dbg !2735

if.else:                                          ; preds = %for.body
  %34 = load %struct.df*, %struct.df** @df, align 8, !dbg !2736
  %problems_by_index29 = getelementptr inbounds %struct.df, %struct.df* %34, i32 0, i32 1, !dbg !2736
  %arrayidx30 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index29, i64 0, i64 1, !dbg !2736
  %35 = load %struct.dataflow*, %struct.dataflow** %arrayidx30, align 8, !dbg !2736
  %out_of_date_transfer_functions31 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %35, i32 0, i32 4, !dbg !2736
  %36 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions31, align 8, !dbg !2736
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2736
  %index32 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i32 0, i32 9, !dbg !2736
  %38 = load i32, i32* %index32, align 8, !dbg !2736
  %call33 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %36, i32 %38), !dbg !2736
  %tobool34 = icmp ne i32 %call33, 0, !dbg !2736
  br i1 %tobool34, label %cond.false36, label %cond.true35, !dbg !2736

cond.true35:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1316, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2736
  br label %cond.end37, !dbg !2736

cond.false36:                                     ; preds = %if.else
  br label %cond.end37, !dbg !2736

cond.end37:                                       ; preds = %cond.false36, %cond.true35
  %cond38 = phi i32 [ 0, %cond.true35 ], [ 0, %cond.false36 ], !dbg !2736
  br label %if.end39

if.end39:                                         ; preds = %cond.end37, %if.end28
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2738
  %index40 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i32 0, i32 9, !dbg !2738
  %40 = load i32, i32* %index40, align 8, !dbg !2738
  %call41 = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %40), !dbg !2738
  %tobool42 = icmp ne %struct.df_scan_bb_info* %call41, null, !dbg !2738
  br i1 %tobool42, label %cond.false44, label %cond.true43, !dbg !2738

cond.true43:                                      ; preds = %if.end39
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1320, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2738
  br label %cond.end45, !dbg !2738

cond.false44:                                     ; preds = %if.end39
  br label %cond.end45, !dbg !2738

cond.end45:                                       ; preds = %cond.false44, %cond.true43
  %cond46 = phi i32 [ 0, %cond.true43 ], [ 0, %cond.false44 ], !dbg !2738
  br label %for.inc, !dbg !2739

for.inc:                                          ; preds = %cond.end45
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2691
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i32 0, i32 6, !dbg !2691
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !2691
  store %struct.basic_block_def* %42, %struct.basic_block_def** %bb, align 8, !dbg !2691
  br label %for.cond, !dbg !2691, !llvm.loop !2740

for.end:                                          ; preds = %for.cond
  %43 = load %struct.df*, %struct.df** @df, align 8, !dbg !2742
  %problems_by_index47 = getelementptr inbounds %struct.df, %struct.df* %43, i32 0, i32 1, !dbg !2742
  %arrayidx48 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index47, i64 0, i64 1, !dbg !2742
  %44 = load %struct.dataflow*, %struct.dataflow** %arrayidx48, align 8, !dbg !2742
  %out_of_date_transfer_functions49 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %44, i32 0, i32 4, !dbg !2742
  %45 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions49, align 8, !dbg !2742
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks, align 8, !dbg !2742
  %call50 = call zeroext i8 @bitmap_intersect_compl_p(%struct.bitmap_head_def* %45, %struct.bitmap_head_def* %46), !dbg !2742
  %tobool51 = icmp ne i8 %call50, 0, !dbg !2742
  br i1 %tobool51, label %cond.true52, label %cond.false53, !dbg !2742

cond.true52:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1325, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2742
  br label %cond.end54, !dbg !2742

cond.false53:                                     ; preds = %for.end
  br label %cond.end54, !dbg !2742

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i32 [ 0, %cond.true52 ], [ 0, %cond.false53 ], !dbg !2742
  %47 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_def, align 8, !dbg !2743
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %47), !dbg !2743
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %saved_def, align 8, !dbg !2743
  %48 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_use, align 8, !dbg !2744
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %48), !dbg !2744
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %saved_use, align 8, !dbg !2744
  %49 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_adef, align 8, !dbg !2745
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %49), !dbg !2745
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %saved_adef, align 8, !dbg !2745
  %50 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_ause, align 8, !dbg !2746
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %50), !dbg !2746
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %saved_ause, align 8, !dbg !2746
  %51 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks, align 8, !dbg !2747
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %51), !dbg !2747
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %all_blocks, align 8, !dbg !2747
  br label %return, !dbg !2748

return:                                           ; preds = %cond.end54, %if.then
  ret void, !dbg !2748
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #2

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_bb_local_compute(i32 %bb_index) #0 !dbg !2749 {
entry:
  %bb_index.addr = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %bb_info = alloca %struct.df_lr_bb_info*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %use_rec = alloca %union.df_ref_d**, align 8
  %def = alloca %union.df_ref_d*, align 8
  %dregno = alloca i32, align 4
  %use16 = alloca %union.df_ref_d*, align 8
  %uid = alloca i32, align 4
  %def62 = alloca %union.df_ref_d*, align 8
  %dregno69 = alloca i32, align 4
  %use86 = alloca %union.df_ref_d*, align 8
  %def104 = alloca %union.df_ref_d*, align 8
  %dregno111 = alloca i32, align 4
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !2752, metadata !DIExpression()), !dbg !2753
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !2754, metadata !DIExpression()), !dbg !2755
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2756
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !2756
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !2756
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2756
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 2, !dbg !2756
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !2756
  %tobool = icmp ne %struct.VEC_basic_block_gc* %2, null, !dbg !2756
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2756

cond.true:                                        ; preds = %entry
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2756
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, !dbg !2756
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !2756
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !2756
  %x_basic_block_info3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i32 0, i32 2, !dbg !2756
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info3, align 8, !dbg !2756
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i32 0, i32 0, !dbg !2756
  br label %cond.end, !dbg !2756

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2756

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !2756
  %6 = load i32, i32* %bb_index.addr, align 4, !dbg !2756
  %call = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %6), !dbg !2756
  store %struct.basic_block_def* %call, %struct.basic_block_def** %bb, align 8, !dbg !2755
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_info, metadata !2757, metadata !DIExpression()), !dbg !2758
  %7 = load i32, i32* %bb_index.addr, align 4, !dbg !2759
  %call4 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %7), !dbg !2760
  store %struct.df_lr_bb_info* %call4, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2758
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !2761, metadata !DIExpression()), !dbg !2762
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !2763, metadata !DIExpression()), !dbg !2764
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %use_rec, metadata !2765, metadata !DIExpression()), !dbg !2766
  %8 = load i32, i32* %bb_index.addr, align 4, !dbg !2767
  %call5 = call %union.df_ref_d** @df_get_artificial_defs(i32 %8), !dbg !2769
  store %union.df_ref_d** %call5, %union.df_ref_d*** %def_rec, align 8, !dbg !2770
  br label %for.cond, !dbg !2771

for.cond:                                         ; preds = %for.inc, %cond.end
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2772
  %10 = load %union.df_ref_d*, %union.df_ref_d** %9, align 8, !dbg !2774
  %tobool6 = icmp ne %union.df_ref_d* %10, null, !dbg !2775
  br i1 %tobool6, label %for.body, label %for.end, !dbg !2775

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !2776, metadata !DIExpression()), !dbg !2778
  %11 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2779
  %12 = load %union.df_ref_d*, %union.df_ref_d** %11, align 8, !dbg !2780
  store %union.df_ref_d* %12, %union.df_ref_d** %def, align 8, !dbg !2778
  %13 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !2781
  %base7 = bitcast %union.df_ref_d* %13 to %struct.df_base_ref*, !dbg !2781
  %14 = bitcast %struct.df_base_ref* %base7 to i32*, !dbg !2781
  %bf.load = load i32, i32* %14, align 8, !dbg !2781
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !2781
  %and = and i32 %bf.ashr, 2, !dbg !2783
  %cmp = icmp eq i32 %and, 0, !dbg !2784
  br i1 %cmp, label %if.then, label %if.end, !dbg !2785

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !2786, metadata !DIExpression()), !dbg !2788
  %15 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !2789
  %base8 = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !2789
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base8, i32 0, i32 6, !dbg !2789
  %16 = load i32, i32* %regno, align 8, !dbg !2789
  store i32 %16, i32* %dregno, align 4, !dbg !2788
  %17 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2790
  %def9 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %17, i32 0, i32 0, !dbg !2791
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def9, align 8, !dbg !2791
  %19 = load i32, i32* %dregno, align 4, !dbg !2792
  %call10 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %18, i32 %19), !dbg !2793
  %20 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2794
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %20, i32 0, i32 1, !dbg !2795
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !2795
  %22 = load i32, i32* %dregno, align 4, !dbg !2796
  %call11 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %21, i32 %22), !dbg !2797
  br label %if.end, !dbg !2798

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !2799

for.inc:                                          ; preds = %if.end
  %23 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2800
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %23, i32 1, !dbg !2800
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !2800
  br label %for.cond, !dbg !2801, !llvm.loop !2802

for.end:                                          ; preds = %for.cond
  %24 = load i32, i32* %bb_index.addr, align 4, !dbg !2804
  %call12 = call %union.df_ref_d** @df_get_artificial_uses(i32 %24), !dbg !2806
  store %union.df_ref_d** %call12, %union.df_ref_d*** %use_rec, align 8, !dbg !2807
  br label %for.cond13, !dbg !2808

for.cond13:                                       ; preds = %for.inc28, %for.end
  %25 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !2809
  %26 = load %union.df_ref_d*, %union.df_ref_d** %25, align 8, !dbg !2811
  %tobool14 = icmp ne %union.df_ref_d* %26, null, !dbg !2812
  br i1 %tobool14, label %for.body15, label %for.end30, !dbg !2812

for.body15:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use16, metadata !2813, metadata !DIExpression()), !dbg !2815
  %27 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !2816
  %28 = load %union.df_ref_d*, %union.df_ref_d** %27, align 8, !dbg !2817
  store %union.df_ref_d* %28, %union.df_ref_d** %use16, align 8, !dbg !2815
  %29 = load %union.df_ref_d*, %union.df_ref_d** %use16, align 8, !dbg !2818
  %base17 = bitcast %union.df_ref_d* %29 to %struct.df_base_ref*, !dbg !2818
  %30 = bitcast %struct.df_base_ref* %base17 to i32*, !dbg !2818
  %bf.load18 = load i32, i32* %30, align 8, !dbg !2818
  %bf.ashr19 = ashr i32 %bf.load18, 16, !dbg !2818
  %and20 = and i32 %bf.ashr19, 2, !dbg !2820
  %cmp21 = icmp eq i32 %and20, 0, !dbg !2821
  br i1 %cmp21, label %if.then22, label %if.end27, !dbg !2822

if.then22:                                        ; preds = %for.body15
  %31 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2823
  %use23 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %31, i32 0, i32 1, !dbg !2824
  %32 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use23, align 8, !dbg !2824
  %33 = load %union.df_ref_d*, %union.df_ref_d** %use16, align 8, !dbg !2825
  %base24 = bitcast %union.df_ref_d* %33 to %struct.df_base_ref*, !dbg !2825
  %regno25 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base24, i32 0, i32 6, !dbg !2825
  %34 = load i32, i32* %regno25, align 8, !dbg !2825
  %call26 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %32, i32 %34), !dbg !2826
  br label %if.end27, !dbg !2826

if.end27:                                         ; preds = %if.then22, %for.body15
  br label %for.inc28, !dbg !2827

for.inc28:                                        ; preds = %if.end27
  %35 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !2828
  %incdec.ptr29 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %35, i32 1, !dbg !2828
  store %union.df_ref_d** %incdec.ptr29, %union.df_ref_d*** %use_rec, align 8, !dbg !2828
  br label %for.cond13, !dbg !2829, !llvm.loop !2830

for.end30:                                        ; preds = %for.cond13
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2832
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i32 0, i32 7, !dbg !2832
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2832
  %37 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2832
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %37, i32 0, i32 1, !dbg !2832
  %38 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !2832
  store %struct.rtx_def* %38, %struct.rtx_def** %insn, align 8, !dbg !2832
  br label %for.cond31, !dbg !2832

for.cond31:                                       ; preds = %for.inc94, %for.end30
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2834
  %tobool32 = icmp ne %struct.rtx_def* %39, null, !dbg !2834
  br i1 %tobool32, label %land.rhs, label %land.end, !dbg !2834

land.rhs:                                         ; preds = %for.cond31
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2834
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2834
  %il33 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i32 0, i32 7, !dbg !2834
  %rtl34 = bitcast %union.basic_block_il_dependent* %il33 to %struct.rtl_bb_info**, !dbg !2834
  %42 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl34, align 8, !dbg !2834
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %42, i32 0, i32 0, !dbg !2834
  %43 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !2834
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !2834
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2834
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !2834
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2834
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2834
  %cmp35 = icmp ne %struct.rtx_def* %40, %44, !dbg !2834
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond31
  %45 = phi i1 [ false, %for.cond31 ], [ %cmp35, %land.rhs ], !dbg !2836
  br i1 %45, label %for.body36, label %for.end99, !dbg !2832

for.body36:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !2837, metadata !DIExpression()), !dbg !2839
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2840
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !2840
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !2840
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 0, !dbg !2840
  %rt_int = bitcast %union.rtunion_def* %arrayidx39 to i32*, !dbg !2840
  %47 = load i32, i32* %rt_int, align 8, !dbg !2840
  store i32 %47, i32* %uid, align 4, !dbg !2839
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2841
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !2841
  %bf.load40 = load i32, i32* %49, align 8, !dbg !2841
  %bf.clear = and i32 %bf.load40, 65535, !dbg !2841
  %cmp41 = icmp eq i32 %bf.clear, 8, !dbg !2841
  br i1 %cmp41, label %land.lhs.true, label %lor.lhs.false, !dbg !2841

lor.lhs.false:                                    ; preds = %for.body36
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2841
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !2841
  %bf.load42 = load i32, i32* %51, align 8, !dbg !2841
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !2841
  %cmp44 = icmp eq i32 %bf.clear43, 7, !dbg !2841
  br i1 %cmp44, label %land.lhs.true, label %lor.lhs.false45, !dbg !2841

lor.lhs.false45:                                  ; preds = %lor.lhs.false
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2841
  %53 = bitcast %struct.rtx_def* %52 to i32*, !dbg !2841
  %bf.load46 = load i32, i32* %53, align 8, !dbg !2841
  %bf.clear47 = and i32 %bf.load46, 65535, !dbg !2841
  %cmp48 = icmp eq i32 %bf.clear47, 9, !dbg !2841
  br i1 %cmp48, label %land.lhs.true, label %lor.lhs.false49, !dbg !2841

lor.lhs.false49:                                  ; preds = %lor.lhs.false45
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2841
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !2841
  %bf.load50 = load i32, i32* %55, align 8, !dbg !2841
  %bf.clear51 = and i32 %bf.load50, 65535, !dbg !2841
  %cmp52 = icmp eq i32 %bf.clear51, 10, !dbg !2841
  br i1 %cmp52, label %land.lhs.true, label %if.then56, !dbg !2841

land.lhs.true:                                    ; preds = %lor.lhs.false49, %lor.lhs.false45, %lor.lhs.false, %for.body36
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2841
  %57 = bitcast %struct.rtx_def* %56 to i32*, !dbg !2841
  %bf.load53 = load i32, i32* %57, align 8, !dbg !2841
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !2841
  %cmp55 = icmp eq i32 %bf.clear54, 7, !dbg !2841
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !2843

if.then56:                                        ; preds = %land.lhs.true, %lor.lhs.false49
  br label %for.inc94, !dbg !2844

if.end57:                                         ; preds = %land.lhs.true
  %58 = load %struct.df*, %struct.df** @df, align 8, !dbg !2845
  %insns = getelementptr inbounds %struct.df, %struct.df* %58, i32 0, i32 10, !dbg !2845
  %59 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !2845
  %60 = load i32, i32* %uid, align 4, !dbg !2845
  %idxprom = zext i32 %60 to i64, !dbg !2845
  %arrayidx58 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %59, i64 %idxprom, !dbg !2845
  %61 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx58, align 8, !dbg !2845
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %61, i32 0, i32 1, !dbg !2845
  %62 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !2845
  store %union.df_ref_d** %62, %union.df_ref_d*** %def_rec, align 8, !dbg !2847
  br label %for.cond59, !dbg !2848

for.cond59:                                       ; preds = %for.inc77, %if.end57
  %63 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2849
  %64 = load %union.df_ref_d*, %union.df_ref_d** %63, align 8, !dbg !2851
  %tobool60 = icmp ne %union.df_ref_d* %64, null, !dbg !2852
  br i1 %tobool60, label %for.body61, label %for.end79, !dbg !2852

for.body61:                                       ; preds = %for.cond59
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def62, metadata !2853, metadata !DIExpression()), !dbg !2855
  %65 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2856
  %66 = load %union.df_ref_d*, %union.df_ref_d** %65, align 8, !dbg !2857
  store %union.df_ref_d* %66, %union.df_ref_d** %def62, align 8, !dbg !2855
  %67 = load %union.df_ref_d*, %union.df_ref_d** %def62, align 8, !dbg !2858
  %base63 = bitcast %union.df_ref_d* %67 to %struct.df_base_ref*, !dbg !2858
  %68 = bitcast %struct.df_base_ref* %base63 to i32*, !dbg !2858
  %bf.load64 = load i32, i32* %68, align 8, !dbg !2858
  %bf.ashr65 = ashr i32 %bf.load64, 16, !dbg !2858
  %and66 = and i32 %bf.ashr65, 17, !dbg !2860
  %tobool67 = icmp ne i32 %and66, 0, !dbg !2860
  br i1 %tobool67, label %if.end76, label %if.then68, !dbg !2861

if.then68:                                        ; preds = %for.body61
  call void @llvm.dbg.declare(metadata i32* %dregno69, metadata !2862, metadata !DIExpression()), !dbg !2864
  %69 = load %union.df_ref_d*, %union.df_ref_d** %def62, align 8, !dbg !2865
  %base70 = bitcast %union.df_ref_d* %69 to %struct.df_base_ref*, !dbg !2865
  %regno71 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base70, i32 0, i32 6, !dbg !2865
  %70 = load i32, i32* %regno71, align 8, !dbg !2865
  store i32 %70, i32* %dregno69, align 4, !dbg !2864
  %71 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2866
  %def72 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %71, i32 0, i32 0, !dbg !2867
  %72 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def72, align 8, !dbg !2867
  %73 = load i32, i32* %dregno69, align 4, !dbg !2868
  %call73 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %72, i32 %73), !dbg !2869
  %74 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2870
  %use74 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %74, i32 0, i32 1, !dbg !2871
  %75 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use74, align 8, !dbg !2871
  %76 = load i32, i32* %dregno69, align 4, !dbg !2872
  %call75 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %75, i32 %76), !dbg !2873
  br label %if.end76, !dbg !2874

if.end76:                                         ; preds = %if.then68, %for.body61
  br label %for.inc77, !dbg !2875

for.inc77:                                        ; preds = %if.end76
  %77 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2876
  %incdec.ptr78 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %77, i32 1, !dbg !2876
  store %union.df_ref_d** %incdec.ptr78, %union.df_ref_d*** %def_rec, align 8, !dbg !2876
  br label %for.cond59, !dbg !2877, !llvm.loop !2878

for.end79:                                        ; preds = %for.cond59
  %78 = load %struct.df*, %struct.df** @df, align 8, !dbg !2880
  %insns80 = getelementptr inbounds %struct.df, %struct.df* %78, i32 0, i32 10, !dbg !2880
  %79 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns80, align 8, !dbg !2880
  %80 = load i32, i32* %uid, align 4, !dbg !2880
  %idxprom81 = zext i32 %80 to i64, !dbg !2880
  %arrayidx82 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %79, i64 %idxprom81, !dbg !2880
  %81 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx82, align 8, !dbg !2880
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %81, i32 0, i32 2, !dbg !2880
  %82 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !2880
  store %union.df_ref_d** %82, %union.df_ref_d*** %use_rec, align 8, !dbg !2882
  br label %for.cond83, !dbg !2883

for.cond83:                                       ; preds = %for.inc91, %for.end79
  %83 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !2884
  %84 = load %union.df_ref_d*, %union.df_ref_d** %83, align 8, !dbg !2886
  %tobool84 = icmp ne %union.df_ref_d* %84, null, !dbg !2887
  br i1 %tobool84, label %for.body85, label %for.end93, !dbg !2887

for.body85:                                       ; preds = %for.cond83
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use86, metadata !2888, metadata !DIExpression()), !dbg !2890
  %85 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !2891
  %86 = load %union.df_ref_d*, %union.df_ref_d** %85, align 8, !dbg !2892
  store %union.df_ref_d* %86, %union.df_ref_d** %use86, align 8, !dbg !2890
  %87 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2893
  %use87 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %87, i32 0, i32 1, !dbg !2894
  %88 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use87, align 8, !dbg !2894
  %89 = load %union.df_ref_d*, %union.df_ref_d** %use86, align 8, !dbg !2895
  %base88 = bitcast %union.df_ref_d* %89 to %struct.df_base_ref*, !dbg !2895
  %regno89 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base88, i32 0, i32 6, !dbg !2895
  %90 = load i32, i32* %regno89, align 8, !dbg !2895
  %call90 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %88, i32 %90), !dbg !2896
  br label %for.inc91, !dbg !2897

for.inc91:                                        ; preds = %for.body85
  %91 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !2898
  %incdec.ptr92 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %91, i32 1, !dbg !2898
  store %union.df_ref_d** %incdec.ptr92, %union.df_ref_d*** %use_rec, align 8, !dbg !2898
  br label %for.cond83, !dbg !2899, !llvm.loop !2900

for.end93:                                        ; preds = %for.cond83
  br label %for.inc94, !dbg !2902

for.inc94:                                        ; preds = %for.end93, %if.then56
  %92 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2834
  %u95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !2834
  %fld96 = bitcast %union.u* %u95 to [1 x %union.rtunion_def]*, !dbg !2834
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i64 0, i64 1, !dbg !2834
  %rt_rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**, !dbg !2834
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx98, align 8, !dbg !2834
  store %struct.rtx_def* %93, %struct.rtx_def** %insn, align 8, !dbg !2834
  br label %for.cond31, !dbg !2834, !llvm.loop !2903

for.end99:                                        ; preds = %land.end
  %94 = load i32, i32* %bb_index.addr, align 4, !dbg !2905
  %call100 = call %union.df_ref_d** @df_get_artificial_defs(i32 %94), !dbg !2907
  store %union.df_ref_d** %call100, %union.df_ref_d*** %def_rec, align 8, !dbg !2908
  br label %for.cond101, !dbg !2909

for.cond101:                                      ; preds = %for.inc119, %for.end99
  %95 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2910
  %96 = load %union.df_ref_d*, %union.df_ref_d** %95, align 8, !dbg !2912
  %tobool102 = icmp ne %union.df_ref_d* %96, null, !dbg !2913
  br i1 %tobool102, label %for.body103, label %for.end121, !dbg !2913

for.body103:                                      ; preds = %for.cond101
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def104, metadata !2914, metadata !DIExpression()), !dbg !2916
  %97 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2917
  %98 = load %union.df_ref_d*, %union.df_ref_d** %97, align 8, !dbg !2918
  store %union.df_ref_d* %98, %union.df_ref_d** %def104, align 8, !dbg !2916
  %99 = load %union.df_ref_d*, %union.df_ref_d** %def104, align 8, !dbg !2919
  %base105 = bitcast %union.df_ref_d* %99 to %struct.df_base_ref*, !dbg !2919
  %100 = bitcast %struct.df_base_ref* %base105 to i32*, !dbg !2919
  %bf.load106 = load i32, i32* %100, align 8, !dbg !2919
  %bf.ashr107 = ashr i32 %bf.load106, 16, !dbg !2919
  %and108 = and i32 %bf.ashr107, 2, !dbg !2921
  %tobool109 = icmp ne i32 %and108, 0, !dbg !2921
  br i1 %tobool109, label %if.then110, label %if.end118, !dbg !2922

if.then110:                                       ; preds = %for.body103
  call void @llvm.dbg.declare(metadata i32* %dregno111, metadata !2923, metadata !DIExpression()), !dbg !2925
  %101 = load %union.df_ref_d*, %union.df_ref_d** %def104, align 8, !dbg !2926
  %base112 = bitcast %union.df_ref_d* %101 to %struct.df_base_ref*, !dbg !2926
  %regno113 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base112, i32 0, i32 6, !dbg !2926
  %102 = load i32, i32* %regno113, align 8, !dbg !2926
  store i32 %102, i32* %dregno111, align 4, !dbg !2925
  %103 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2927
  %def114 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %103, i32 0, i32 0, !dbg !2928
  %104 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def114, align 8, !dbg !2928
  %105 = load i32, i32* %dregno111, align 4, !dbg !2929
  %call115 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %104, i32 %105), !dbg !2930
  %106 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !2931
  %use116 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %106, i32 0, i32 1, !dbg !2932
  %107 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use116, align 8, !dbg !2932
  %108 = load i32, i32* %dregno111, align 4, !dbg !2933
  %call117 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %107, i32 %108), !dbg !2934
  br label %if.end118, !dbg !2935

if.end118:                                        ; preds = %if.then110, %for.body103
  br label %for.inc119, !dbg !2936

for.inc119:                                       ; preds = %if.end118
  %109 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !2937
  %incdec.ptr120 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %109, i32 1, !dbg !2937
  store %union.df_ref_d** %incdec.ptr120, %union.df_ref_d*** %def_rec, align 8, !dbg !2937
  br label %for.cond101, !dbg !2938, !llvm.loop !2939

for.end121:                                       ; preds = %for.cond101
  %110 = load %struct.df*, %struct.df** @df, align 8, !dbg !2941
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %110, i32 0, i32 1, !dbg !2941
  %arrayidx122 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !2941
  %111 = load %struct.dataflow*, %struct.dataflow** %arrayidx122, align 8, !dbg !2941
  %tobool123 = icmp ne %struct.dataflow* %111, null, !dbg !2941
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !2943

if.then124:                                       ; preds = %for.end121
  %112 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2944
  call void @df_recompute_luids(%struct.basic_block_def* %112), !dbg !2945
  br label %if.end125, !dbg !2945

if.end125:                                        ; preds = %if.then124, %for.end121
  ret void, !dbg !2946
}

declare dso_local zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %index) #0 !dbg !2947 {
entry:
  %retval = alloca %struct.df_scan_bb_info*, align 8
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2950, metadata !DIExpression()), !dbg !2951
  %0 = load i32, i32* %index.addr, align 4, !dbg !2952
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !2954
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !2954
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !2954
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2954
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 2, !dbg !2955
  %3 = load i32, i32* %block_info_size, align 8, !dbg !2955
  %cmp = icmp ult i32 %0, %3, !dbg !2956
  br i1 %cmp, label %if.then, label %if.else, !dbg !2957

if.then:                                          ; preds = %entry
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !2958
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !2958
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 0, !dbg !2958
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !2958
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 1, !dbg !2959
  %6 = load i8**, i8*** %block_info, align 8, !dbg !2959
  %7 = load i32, i32* %index.addr, align 4, !dbg !2960
  %idxprom = zext i32 %7 to i64, !dbg !2958
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %idxprom, !dbg !2958
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !2958
  %9 = bitcast i8* %8 to %struct.df_scan_bb_info*, !dbg !2961
  store %struct.df_scan_bb_info* %9, %struct.df_scan_bb_info** %retval, align 8, !dbg !2962
  br label %return, !dbg !2962

if.else:                                          ; preds = %entry
  store %struct.df_scan_bb_info* null, %struct.df_scan_bb_info** %retval, align 8, !dbg !2963
  br label %return, !dbg !2963

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %retval, align 8, !dbg !2964
  ret %struct.df_scan_bb_info* %10, !dbg !2964
}

declare dso_local zeroext i8 @bitmap_intersect_compl_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_live_add_problem() #0 !dbg !2965 {
entry:
  call void @df_add_problem(%struct.df_problem* @problem_LIVE), !dbg !2966
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !2967
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2968
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !2968
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !2968
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2968
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 4, !dbg !2969
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !2970
  ret void, !dbg !2971
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_live_set_all_dirty() #0 !dbg !2972 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !2973, metadata !DIExpression()), !dbg !2974
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2975
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !2975
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !2975
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2975
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 0, !dbg !2975
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2975
  store %struct.basic_block_def* %2, %struct.basic_block_def** %bb, align 8, !dbg !2975
  br label %for.cond, !dbg !2975

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2977
  %tobool = icmp ne %struct.basic_block_def* %3, null, !dbg !2975
  br i1 %tobool, label %for.body, label %for.end, !dbg !2975

for.body:                                         ; preds = %for.cond
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !2979
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !2979
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !2979
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2979
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 4, !dbg !2980
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !2980
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2981
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i32 0, i32 9, !dbg !2982
  %8 = load i32, i32* %index, align 8, !dbg !2982
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %6, i32 %8), !dbg !2983
  br label %for.inc, !dbg !2983

for.inc:                                          ; preds = %for.body
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2977
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 6, !dbg !2977
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !2977
  store %struct.basic_block_def* %10, %struct.basic_block_def** %bb, align 8, !dbg !2977
  br label %for.cond, !dbg !2977, !llvm.loop !2984

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2986
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_live_verify_transfer_functions() #0 !dbg !2987 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  %saved_gen = alloca %struct.bitmap_head_def*, align 8
  %saved_kill = alloca %struct.bitmap_head_def*, align 8
  %all_blocks = alloca %struct.bitmap_head_def*, align 8
  %bb_info = alloca %struct.df_live_bb_info*, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !2988, metadata !DIExpression()), !dbg !2989
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %saved_gen, metadata !2990, metadata !DIExpression()), !dbg !2991
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %saved_kill, metadata !2992, metadata !DIExpression()), !dbg !2993
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks, metadata !2994, metadata !DIExpression()), !dbg !2995
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2996
  %tobool = icmp ne %struct.df* %0, null, !dbg !2996
  br i1 %tobool, label %if.end, label %if.then, !dbg !2998

if.then:                                          ; preds = %entry
  br label %return, !dbg !2999

if.end:                                           ; preds = %entry
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !3000
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %saved_gen, align 8, !dbg !3001
  %call1 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !3002
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** %saved_kill, align 8, !dbg !3003
  %call2 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !3004
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** %all_blocks, align 8, !dbg !3005
  call void @df_grow_insn_info(), !dbg !3006
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3007
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, !dbg !3007
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3007
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3007
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i32 0, i32 0, !dbg !3007
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3007
  store %struct.basic_block_def* %3, %struct.basic_block_def** %bb, align 8, !dbg !3007
  br label %for.cond, !dbg !3007

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3009
  %tobool3 = icmp ne %struct.basic_block_def* %4, null, !dbg !3007
  br i1 %tobool3, label %for.body, label %for.end, !dbg !3007

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_live_bb_info** %bb_info, metadata !3011, metadata !DIExpression()), !dbg !3013
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3014
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 9, !dbg !3015
  %6 = load i32, i32* %index, align 8, !dbg !3015
  %call4 = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %6), !dbg !3016
  store %struct.df_live_bb_info* %call4, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3013
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks, align 8, !dbg !3017
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3018
  %index5 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i32 0, i32 9, !dbg !3019
  %9 = load i32, i32* %index5, align 8, !dbg !3019
  %call6 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %7, i32 %9), !dbg !3020
  %10 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3021
  %tobool7 = icmp ne %struct.df_live_bb_info* %10, null, !dbg !3021
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !3023

if.then8:                                         ; preds = %for.body
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !3024
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 1, !dbg !3024
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !3024
  %12 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3024
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %12, i32 0, i32 4, !dbg !3027
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !3027
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3028
  %index9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i32 0, i32 9, !dbg !3029
  %15 = load i32, i32* %index9, align 8, !dbg !3029
  %call10 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %13, i32 %15), !dbg !3030
  %tobool11 = icmp ne i32 %call10, 0, !dbg !3030
  br i1 %tobool11, label %if.end26, label %if.then12, !dbg !3031

if.then12:                                        ; preds = %if.then8
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_gen, align 8, !dbg !3032
  %17 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3034
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %17, i32 0, i32 1, !dbg !3035
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !3035
  call void @bitmap_copy(%struct.bitmap_head_def* %16, %struct.bitmap_head_def* %18), !dbg !3036
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_kill, align 8, !dbg !3037
  %20 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3038
  %kill = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %20, i32 0, i32 0, !dbg !3039
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !3039
  call void @bitmap_copy(%struct.bitmap_head_def* %19, %struct.bitmap_head_def* %21), !dbg !3040
  %22 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3041
  %gen13 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %22, i32 0, i32 1, !dbg !3042
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen13, align 8, !dbg !3042
  call void @bitmap_clear(%struct.bitmap_head_def* %23), !dbg !3043
  %24 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3044
  %kill14 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %24, i32 0, i32 0, !dbg !3045
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill14, align 8, !dbg !3045
  call void @bitmap_clear(%struct.bitmap_head_def* %25), !dbg !3046
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3047
  %index15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i32 0, i32 9, !dbg !3048
  %27 = load i32, i32* %index15, align 8, !dbg !3048
  call void @df_live_bb_local_compute(i32 %27), !dbg !3049
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_gen, align 8, !dbg !3050
  %29 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3050
  %gen16 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %29, i32 0, i32 1, !dbg !3050
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen16, align 8, !dbg !3050
  %call17 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %28, %struct.bitmap_head_def* %30), !dbg !3050
  %tobool18 = icmp ne i8 %call17, 0, !dbg !3050
  br i1 %tobool18, label %cond.false, label %cond.true, !dbg !3050

cond.true:                                        ; preds = %if.then12
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1863, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3050
  br label %cond.end, !dbg !3050

cond.false:                                       ; preds = %if.then12
  br label %cond.end, !dbg !3050

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3050
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_kill, align 8, !dbg !3051
  %32 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3051
  %kill19 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %32, i32 0, i32 0, !dbg !3051
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill19, align 8, !dbg !3051
  %call20 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %31, %struct.bitmap_head_def* %33), !dbg !3051
  %tobool21 = icmp ne i8 %call20, 0, !dbg !3051
  br i1 %tobool21, label %cond.false23, label %cond.true22, !dbg !3051

cond.true22:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1864, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3051
  br label %cond.end24, !dbg !3051

cond.false23:                                     ; preds = %cond.end
  br label %cond.end24, !dbg !3051

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i32 [ 0, %cond.true22 ], [ 0, %cond.false23 ], !dbg !3051
  br label %if.end26, !dbg !3052

if.end26:                                         ; preds = %cond.end24, %if.then8
  br label %if.end37, !dbg !3053

if.else:                                          ; preds = %for.body
  %34 = load %struct.df*, %struct.df** @df, align 8, !dbg !3054
  %problems_by_index27 = getelementptr inbounds %struct.df, %struct.df* %34, i32 0, i32 1, !dbg !3054
  %arrayidx28 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index27, i64 0, i64 2, !dbg !3054
  %35 = load %struct.dataflow*, %struct.dataflow** %arrayidx28, align 8, !dbg !3054
  %out_of_date_transfer_functions29 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %35, i32 0, i32 4, !dbg !3054
  %36 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions29, align 8, !dbg !3054
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3054
  %index30 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i32 0, i32 9, !dbg !3054
  %38 = load i32, i32* %index30, align 8, !dbg !3054
  %call31 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %36, i32 %38), !dbg !3054
  %tobool32 = icmp ne i32 %call31, 0, !dbg !3054
  br i1 %tobool32, label %cond.false34, label %cond.true33, !dbg !3054

cond.true33:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1873, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3054
  br label %cond.end35, !dbg !3054

cond.false34:                                     ; preds = %if.else
  br label %cond.end35, !dbg !3054

cond.end35:                                       ; preds = %cond.false34, %cond.true33
  %cond36 = phi i32 [ 0, %cond.true33 ], [ 0, %cond.false34 ], !dbg !3054
  br label %if.end37

if.end37:                                         ; preds = %cond.end35, %if.end26
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3056
  %index38 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i32 0, i32 9, !dbg !3056
  %40 = load i32, i32* %index38, align 8, !dbg !3056
  %call39 = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %40), !dbg !3056
  %tobool40 = icmp ne %struct.df_scan_bb_info* %call39, null, !dbg !3056
  br i1 %tobool40, label %cond.false42, label %cond.true41, !dbg !3056

cond.true41:                                      ; preds = %if.end37
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1877, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3056
  br label %cond.end43, !dbg !3056

cond.false42:                                     ; preds = %if.end37
  br label %cond.end43, !dbg !3056

cond.end43:                                       ; preds = %cond.false42, %cond.true41
  %cond44 = phi i32 [ 0, %cond.true41 ], [ 0, %cond.false42 ], !dbg !3056
  br label %for.inc, !dbg !3057

for.inc:                                          ; preds = %cond.end43
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3009
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i32 0, i32 6, !dbg !3009
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !3009
  store %struct.basic_block_def* %42, %struct.basic_block_def** %bb, align 8, !dbg !3009
  br label %for.cond, !dbg !3009, !llvm.loop !3058

for.end:                                          ; preds = %for.cond
  %43 = load %struct.df*, %struct.df** @df, align 8, !dbg !3060
  %problems_by_index45 = getelementptr inbounds %struct.df, %struct.df* %43, i32 0, i32 1, !dbg !3060
  %arrayidx46 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index45, i64 0, i64 2, !dbg !3060
  %44 = load %struct.dataflow*, %struct.dataflow** %arrayidx46, align 8, !dbg !3060
  %out_of_date_transfer_functions47 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %44, i32 0, i32 4, !dbg !3060
  %45 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions47, align 8, !dbg !3060
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks, align 8, !dbg !3060
  %call48 = call zeroext i8 @bitmap_intersect_compl_p(%struct.bitmap_head_def* %45, %struct.bitmap_head_def* %46), !dbg !3060
  %tobool49 = icmp ne i8 %call48, 0, !dbg !3060
  br i1 %tobool49, label %cond.true50, label %cond.false51, !dbg !3060

cond.true50:                                      ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1882, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3060
  br label %cond.end52, !dbg !3060

cond.false51:                                     ; preds = %for.end
  br label %cond.end52, !dbg !3060

cond.end52:                                       ; preds = %cond.false51, %cond.true50
  %cond53 = phi i32 [ 0, %cond.true50 ], [ 0, %cond.false51 ], !dbg !3060
  %47 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_gen, align 8, !dbg !3061
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %47), !dbg !3061
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %saved_gen, align 8, !dbg !3061
  %48 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %saved_kill, align 8, !dbg !3062
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %48), !dbg !3062
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %saved_kill, align 8, !dbg !3062
  %49 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks, align 8, !dbg !3063
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %49), !dbg !3063
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %all_blocks, align 8, !dbg !3063
  br label %return, !dbg !3064

return:                                           ; preds = %cond.end52, %if.then
  ret void, !dbg !3064
}

declare dso_local void @df_grow_insn_info() #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_bb_local_compute(i32 %bb_index) #0 !dbg !3065 {
entry:
  %bb_index.addr = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %bb_info = alloca %struct.df_live_bb_info*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %luid = alloca i32, align 4
  %uid = alloca i32, align 4
  %insn_info = alloca %struct.df_insn_info*, align 8
  %def = alloca %union.df_ref_d*, align 8
  %regno = alloca i32, align 4
  %def87 = alloca %union.df_ref_d*, align 8
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !3066, metadata !DIExpression()), !dbg !3067
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !3068, metadata !DIExpression()), !dbg !3069
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3070
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !3070
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3070
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3070
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 2, !dbg !3070
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3070
  %tobool = icmp ne %struct.VEC_basic_block_gc* %2, null, !dbg !3070
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3070

cond.true:                                        ; preds = %entry
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3070
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, !dbg !3070
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !3070
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !3070
  %x_basic_block_info3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i32 0, i32 2, !dbg !3070
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info3, align 8, !dbg !3070
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i32 0, i32 0, !dbg !3070
  br label %cond.end, !dbg !3070

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3070

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3070
  %6 = load i32, i32* %bb_index.addr, align 4, !dbg !3070
  %call = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %6), !dbg !3070
  store %struct.basic_block_def* %call, %struct.basic_block_def** %bb, align 8, !dbg !3069
  call void @llvm.dbg.declare(metadata %struct.df_live_bb_info** %bb_info, metadata !3071, metadata !DIExpression()), !dbg !3072
  %7 = load i32, i32* %bb_index.addr, align 4, !dbg !3073
  %call4 = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %7), !dbg !3074
  store %struct.df_live_bb_info* %call4, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3072
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !3075, metadata !DIExpression()), !dbg !3076
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !3077, metadata !DIExpression()), !dbg !3078
  call void @llvm.dbg.declare(metadata i32* %luid, metadata !3079, metadata !DIExpression()), !dbg !3080
  store i32 0, i32* %luid, align 4, !dbg !3080
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3081
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i32 0, i32 7, !dbg !3081
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3081
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3081
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i32 0, i32 0, !dbg !3081
  %10 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3081
  store %struct.rtx_def* %10, %struct.rtx_def** %insn, align 8, !dbg !3081
  br label %for.cond, !dbg !3081

for.cond:                                         ; preds = %for.inc77, %cond.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3083
  %tobool5 = icmp ne %struct.rtx_def* %11, null, !dbg !3083
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !3083

land.rhs:                                         ; preds = %for.cond
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3083
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3083
  %il6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 7, !dbg !3083
  %rtl7 = bitcast %union.basic_block_il_dependent* %il6 to %struct.rtl_bb_info**, !dbg !3083
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl7, align 8, !dbg !3083
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i32 0, i32 1, !dbg !3083
  %15 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3083
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !3083
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3083
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !3083
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3083
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3083
  %cmp = icmp ne %struct.rtx_def* %12, %16, !dbg !3083
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %17 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !3085
  br i1 %17, label %for.body, label %for.end82, !dbg !3081

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !3086, metadata !DIExpression()), !dbg !3088
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3089
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !3089
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !3089
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 0, !dbg !3089
  %rt_int = bitcast %union.rtunion_def* %arrayidx10 to i32*, !dbg !3089
  %19 = load i32, i32* %rt_int, align 8, !dbg !3089
  store i32 %19, i32* %uid, align 4, !dbg !3088
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !3090, metadata !DIExpression()), !dbg !3091
  %20 = load %struct.df*, %struct.df** @df, align 8, !dbg !3092
  %insns = getelementptr inbounds %struct.df, %struct.df* %20, i32 0, i32 10, !dbg !3092
  %21 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3092
  %22 = load i32, i32* %uid, align 4, !dbg !3092
  %idxprom = zext i32 %22 to i64, !dbg !3092
  %arrayidx11 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %21, i64 %idxprom, !dbg !3092
  %23 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx11, align 8, !dbg !3092
  store %struct.df_insn_info* %23, %struct.df_insn_info** %insn_info, align 8, !dbg !3091
  %24 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !3093
  %tobool12 = icmp ne %struct.df_insn_info* %24, null, !dbg !3093
  br i1 %tobool12, label %if.end, label %if.then, !dbg !3095

if.then:                                          ; preds = %for.body
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3096
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !3096
  %bf.load = load i32, i32* %26, align 8, !dbg !3096
  %bf.clear = and i32 %bf.load, 65535, !dbg !3096
  %cmp13 = icmp eq i32 %bf.clear, 8, !dbg !3096
  br i1 %cmp13, label %cond.true25, label %lor.lhs.false, !dbg !3096

lor.lhs.false:                                    ; preds = %if.then
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3096
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !3096
  %bf.load14 = load i32, i32* %28, align 8, !dbg !3096
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !3096
  %cmp16 = icmp eq i32 %bf.clear15, 7, !dbg !3096
  br i1 %cmp16, label %cond.true25, label %lor.lhs.false17, !dbg !3096

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3096
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !3096
  %bf.load18 = load i32, i32* %30, align 8, !dbg !3096
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !3096
  %cmp20 = icmp eq i32 %bf.clear19, 9, !dbg !3096
  br i1 %cmp20, label %cond.true25, label %lor.lhs.false21, !dbg !3096

lor.lhs.false21:                                  ; preds = %lor.lhs.false17
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3096
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !3096
  %bf.load22 = load i32, i32* %32, align 8, !dbg !3096
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !3096
  %cmp24 = icmp eq i32 %bf.clear23, 10, !dbg !3096
  br i1 %cmp24, label %cond.true25, label %cond.false26, !dbg !3096

cond.true25:                                      ; preds = %lor.lhs.false21, %lor.lhs.false17, %lor.lhs.false, %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1474, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3096
  br label %cond.end27, !dbg !3096

cond.false26:                                     ; preds = %lor.lhs.false21
  br label %cond.end27, !dbg !3096

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond28 = phi i32 [ 0, %cond.true25 ], [ 0, %cond.false26 ], !dbg !3096
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3098
  %call29 = call %struct.df_insn_info* @df_insn_create_insn_record(%struct.rtx_def* %33), !dbg !3099
  store %struct.df_insn_info* %call29, %struct.df_insn_info** %insn_info, align 8, !dbg !3100
  br label %if.end, !dbg !3101

if.end:                                           ; preds = %cond.end27, %for.body
  %34 = load i32, i32* %luid, align 4, !dbg !3102
  %35 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !3103
  %luid30 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %35, i32 0, i32 5, !dbg !3103
  store i32 %34, i32* %luid30, align 8, !dbg !3104
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3105
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !3105
  %bf.load31 = load i32, i32* %37, align 8, !dbg !3105
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !3105
  %cmp33 = icmp eq i32 %bf.clear32, 8, !dbg !3105
  br i1 %cmp33, label %if.end47, label %lor.lhs.false34, !dbg !3105

lor.lhs.false34:                                  ; preds = %if.end
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3105
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !3105
  %bf.load35 = load i32, i32* %39, align 8, !dbg !3105
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !3105
  %cmp37 = icmp eq i32 %bf.clear36, 7, !dbg !3105
  br i1 %cmp37, label %if.end47, label %lor.lhs.false38, !dbg !3105

lor.lhs.false38:                                  ; preds = %lor.lhs.false34
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3105
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !3105
  %bf.load39 = load i32, i32* %41, align 8, !dbg !3105
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !3105
  %cmp41 = icmp eq i32 %bf.clear40, 9, !dbg !3105
  br i1 %cmp41, label %if.end47, label %lor.lhs.false42, !dbg !3105

lor.lhs.false42:                                  ; preds = %lor.lhs.false38
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3105
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !3105
  %bf.load43 = load i32, i32* %43, align 8, !dbg !3105
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !3105
  %cmp45 = icmp eq i32 %bf.clear44, 10, !dbg !3105
  br i1 %cmp45, label %if.end47, label %if.then46, !dbg !3107

if.then46:                                        ; preds = %lor.lhs.false42
  br label %for.inc77, !dbg !3108

if.end47:                                         ; preds = %lor.lhs.false42, %lor.lhs.false38, %lor.lhs.false34, %if.end
  %44 = load i32, i32* %luid, align 4, !dbg !3109
  %inc = add nsw i32 %44, 1, !dbg !3109
  store i32 %inc, i32* %luid, align 4, !dbg !3109
  %45 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !3110
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %45, i32 0, i32 1, !dbg !3110
  %46 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !3110
  store %union.df_ref_d** %46, %union.df_ref_d*** %def_rec, align 8, !dbg !3112
  br label %for.cond48, !dbg !3113

for.cond48:                                       ; preds = %for.inc, %if.end47
  %47 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3114
  %48 = load %union.df_ref_d*, %union.df_ref_d** %47, align 8, !dbg !3116
  %tobool49 = icmp ne %union.df_ref_d* %48, null, !dbg !3117
  br i1 %tobool49, label %for.body50, label %for.end, !dbg !3117

for.body50:                                       ; preds = %for.cond48
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !3118, metadata !DIExpression()), !dbg !3120
  %49 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3121
  %50 = load %union.df_ref_d*, %union.df_ref_d** %49, align 8, !dbg !3122
  store %union.df_ref_d* %50, %union.df_ref_d** %def, align 8, !dbg !3120
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !3123, metadata !DIExpression()), !dbg !3124
  %51 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3125
  %base51 = bitcast %union.df_ref_d* %51 to %struct.df_base_ref*, !dbg !3125
  %regno52 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base51, i32 0, i32 6, !dbg !3125
  %52 = load i32, i32* %regno52, align 8, !dbg !3125
  store i32 %52, i32* %regno, align 4, !dbg !3124
  %53 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3126
  %base53 = bitcast %union.df_ref_d* %53 to %struct.df_base_ref*, !dbg !3126
  %54 = bitcast %struct.df_base_ref* %base53 to i32*, !dbg !3126
  %bf.load54 = load i32, i32* %54, align 8, !dbg !3126
  %bf.ashr = ashr i32 %bf.load54, 16, !dbg !3126
  %and = and i32 %bf.ashr, 17, !dbg !3126
  %cmp55 = icmp ne i32 %and, 0, !dbg !3126
  br i1 %cmp55, label %if.then56, label %if.else, !dbg !3128

if.then56:                                        ; preds = %for.body50
  %55 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3129
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %55, i32 0, i32 1, !dbg !3130
  %56 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !3130
  %57 = load i32, i32* %regno, align 4, !dbg !3131
  %call57 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %56, i32 %57), !dbg !3132
  br label %if.end76, !dbg !3132

if.else:                                          ; preds = %for.body50
  %58 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3133
  %base58 = bitcast %union.df_ref_d* %58 to %struct.df_base_ref*, !dbg !3133
  %59 = bitcast %struct.df_base_ref* %base58 to i32*, !dbg !3133
  %bf.load59 = load i32, i32* %59, align 8, !dbg !3133
  %bf.ashr60 = ashr i32 %bf.load59, 16, !dbg !3133
  %and61 = and i32 %bf.ashr60, 128, !dbg !3133
  %cmp62 = icmp ne i32 %and61, 0, !dbg !3133
  br i1 %cmp62, label %if.then63, label %if.else65, !dbg !3135

if.then63:                                        ; preds = %if.else
  %60 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3136
  %kill = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %60, i32 0, i32 0, !dbg !3137
  %61 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !3137
  %62 = load i32, i32* %regno, align 4, !dbg !3138
  %call64 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %61, i32 %62), !dbg !3139
  br label %if.end75, !dbg !3139

if.else65:                                        ; preds = %if.else
  %63 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3140
  %base66 = bitcast %union.df_ref_d* %63 to %struct.df_base_ref*, !dbg !3140
  %64 = bitcast %struct.df_base_ref* %base66 to i32*, !dbg !3140
  %bf.load67 = load i32, i32* %64, align 8, !dbg !3140
  %bf.ashr68 = ashr i32 %bf.load67, 16, !dbg !3140
  %and69 = and i32 %bf.ashr68, 64, !dbg !3140
  %cmp70 = icmp ne i32 %and69, 0, !dbg !3140
  br i1 %cmp70, label %if.end74, label %if.then71, !dbg !3142

if.then71:                                        ; preds = %if.else65
  %65 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3143
  %gen72 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %65, i32 0, i32 1, !dbg !3144
  %66 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen72, align 8, !dbg !3144
  %67 = load i32, i32* %regno, align 4, !dbg !3145
  %call73 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %66, i32 %67), !dbg !3146
  br label %if.end74, !dbg !3146

if.end74:                                         ; preds = %if.then71, %if.else65
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then63
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then56
  br label %for.inc, !dbg !3147

for.inc:                                          ; preds = %if.end76
  %68 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3148
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %68, i32 1, !dbg !3148
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !3148
  br label %for.cond48, !dbg !3149, !llvm.loop !3150

for.end:                                          ; preds = %for.cond48
  br label %for.inc77, !dbg !3152

for.inc77:                                        ; preds = %for.end, %if.then46
  %69 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3083
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !3083
  %fld79 = bitcast %union.u* %u78 to [1 x %union.rtunion_def]*, !dbg !3083
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i64 0, i64 2, !dbg !3083
  %rt_rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**, !dbg !3083
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !3083
  store %struct.rtx_def* %70, %struct.rtx_def** %insn, align 8, !dbg !3083
  br label %for.cond, !dbg !3083, !llvm.loop !3153

for.end82:                                        ; preds = %land.end
  %71 = load i32, i32* %bb_index.addr, align 4, !dbg !3155
  %call83 = call %union.df_ref_d** @df_get_artificial_defs(i32 %71), !dbg !3157
  store %union.df_ref_d** %call83, %union.df_ref_d*** %def_rec, align 8, !dbg !3158
  br label %for.cond84, !dbg !3159

for.cond84:                                       ; preds = %for.inc92, %for.end82
  %72 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3160
  %73 = load %union.df_ref_d*, %union.df_ref_d** %72, align 8, !dbg !3162
  %tobool85 = icmp ne %union.df_ref_d* %73, null, !dbg !3163
  br i1 %tobool85, label %for.body86, label %for.end94, !dbg !3163

for.body86:                                       ; preds = %for.cond84
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def87, metadata !3164, metadata !DIExpression()), !dbg !3166
  %74 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3167
  %75 = load %union.df_ref_d*, %union.df_ref_d** %74, align 8, !dbg !3168
  store %union.df_ref_d* %75, %union.df_ref_d** %def87, align 8, !dbg !3166
  %76 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !3169
  %gen88 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %76, i32 0, i32 1, !dbg !3170
  %77 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen88, align 8, !dbg !3170
  %78 = load %union.df_ref_d*, %union.df_ref_d** %def87, align 8, !dbg !3171
  %base89 = bitcast %union.df_ref_d* %78 to %struct.df_base_ref*, !dbg !3171
  %regno90 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base89, i32 0, i32 6, !dbg !3171
  %79 = load i32, i32* %regno90, align 8, !dbg !3171
  %call91 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %77, i32 %79), !dbg !3172
  br label %for.inc92, !dbg !3173

for.inc92:                                        ; preds = %for.body86
  %80 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3174
  %incdec.ptr93 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %80, i32 1, !dbg !3174
  store %union.df_ref_d** %incdec.ptr93, %union.df_ref_d*** %def_rec, align 8, !dbg !3174
  br label %for.cond84, !dbg !3175, !llvm.loop !3176

for.end94:                                        ; preds = %for.cond84
  ret void, !dbg !3178
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.df_link* @df_chain_create(%union.df_ref_d* %src, %union.df_ref_d* %dst) #0 !dbg !3179 {
entry:
  %src.addr = alloca %union.df_ref_d*, align 8
  %dst.addr = alloca %union.df_ref_d*, align 8
  %head = alloca %struct.df_link*, align 8
  %link = alloca %struct.df_link*, align 8
  store %union.df_ref_d* %src, %union.df_ref_d** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %src.addr, metadata !3182, metadata !DIExpression()), !dbg !3183
  store %union.df_ref_d* %dst, %union.df_ref_d** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %dst.addr, metadata !3184, metadata !DIExpression()), !dbg !3185
  call void @llvm.dbg.declare(metadata %struct.df_link** %head, metadata !3186, metadata !DIExpression()), !dbg !3187
  %0 = load %union.df_ref_d*, %union.df_ref_d** %src.addr, align 8, !dbg !3188
  %base = bitcast %union.df_ref_d* %0 to %struct.df_base_ref*, !dbg !3188
  %chain = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 2, !dbg !3188
  %1 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !3188
  store %struct.df_link* %1, %struct.df_link** %head, align 8, !dbg !3187
  call void @llvm.dbg.declare(metadata %struct.df_link** %link, metadata !3189, metadata !DIExpression()), !dbg !3190
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !3191
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 1, !dbg !3191
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !3191
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3191
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i32 0, i32 3, !dbg !3192
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !3192
  %call = call i8* @pool_alloc(%struct.alloc_pool_def* %4), !dbg !3193
  %5 = bitcast i8* %call to %struct.df_link*, !dbg !3194
  store %struct.df_link* %5, %struct.df_link** %link, align 8, !dbg !3190
  %6 = load %struct.df_link*, %struct.df_link** %link, align 8, !dbg !3195
  %7 = load %union.df_ref_d*, %union.df_ref_d** %src.addr, align 8, !dbg !3196
  %base1 = bitcast %union.df_ref_d* %7 to %struct.df_base_ref*, !dbg !3196
  %chain2 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base1, i32 0, i32 2, !dbg !3196
  store %struct.df_link* %6, %struct.df_link** %chain2, align 8, !dbg !3197
  %8 = load %struct.df_link*, %struct.df_link** %head, align 8, !dbg !3198
  %9 = load %struct.df_link*, %struct.df_link** %link, align 8, !dbg !3199
  %next = getelementptr inbounds %struct.df_link, %struct.df_link* %9, i32 0, i32 1, !dbg !3200
  store %struct.df_link* %8, %struct.df_link** %next, align 8, !dbg !3201
  %10 = load %union.df_ref_d*, %union.df_ref_d** %dst.addr, align 8, !dbg !3202
  %11 = load %struct.df_link*, %struct.df_link** %link, align 8, !dbg !3203
  %ref = getelementptr inbounds %struct.df_link, %struct.df_link* %11, i32 0, i32 0, !dbg !3204
  store %union.df_ref_d* %10, %union.df_ref_d** %ref, align 8, !dbg !3205
  %12 = load %struct.df_link*, %struct.df_link** %link, align 8, !dbg !3206
  ret %struct.df_link* %12, !dbg !3207
}

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_chain_unlink(%union.df_ref_d* %ref) #0 !dbg !3208 {
entry:
  %ref.addr = alloca %union.df_ref_d*, align 8
  %chain = alloca %struct.df_link*, align 8
  %next = alloca %struct.df_link*, align 8
  store %union.df_ref_d* %ref, %union.df_ref_d** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref.addr, metadata !3211, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.declare(metadata %struct.df_link** %chain, metadata !3213, metadata !DIExpression()), !dbg !3214
  %0 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3215
  %base = bitcast %union.df_ref_d* %0 to %struct.df_base_ref*, !dbg !3215
  %chain1 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 2, !dbg !3215
  %1 = load %struct.df_link*, %struct.df_link** %chain1, align 8, !dbg !3215
  store %struct.df_link* %1, %struct.df_link** %chain, align 8, !dbg !3214
  br label %while.cond, !dbg !3216

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !3217
  %tobool = icmp ne %struct.df_link* %2, null, !dbg !3216
  br i1 %tobool, label %while.body, label %while.end, !dbg !3216

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.df_link** %next, metadata !3218, metadata !DIExpression()), !dbg !3220
  %3 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !3221
  %next2 = getelementptr inbounds %struct.df_link, %struct.df_link* %3, i32 0, i32 1, !dbg !3222
  %4 = load %struct.df_link*, %struct.df_link** %next2, align 8, !dbg !3222
  store %struct.df_link* %4, %struct.df_link** %next, align 8, !dbg !3220
  %5 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !3223
  %ref3 = getelementptr inbounds %struct.df_link, %struct.df_link* %5, i32 0, i32 0, !dbg !3224
  %6 = load %union.df_ref_d*, %union.df_ref_d** %ref3, align 8, !dbg !3224
  %7 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3225
  call void @df_chain_unlink_1(%union.df_ref_d* %6, %union.df_ref_d* %7), !dbg !3226
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !3227
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 1, !dbg !3227
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !3227
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3227
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %9, i32 0, i32 3, !dbg !3228
  %10 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !3228
  %11 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !3229
  %12 = bitcast %struct.df_link* %11 to i8*, !dbg !3229
  call void @pool_free(%struct.alloc_pool_def* %10, i8* %12), !dbg !3230
  %13 = load %struct.df_link*, %struct.df_link** %next, align 8, !dbg !3231
  store %struct.df_link* %13, %struct.df_link** %chain, align 8, !dbg !3232
  br label %while.cond, !dbg !3216, !llvm.loop !3233

while.end:                                        ; preds = %while.cond
  %14 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3235
  %base4 = bitcast %union.df_ref_d* %14 to %struct.df_base_ref*, !dbg !3235
  %chain5 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base4, i32 0, i32 2, !dbg !3235
  store %struct.df_link* null, %struct.df_link** %chain5, align 8, !dbg !3236
  ret void, !dbg !3237
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_chain_unlink_1(%union.df_ref_d* %ref, %union.df_ref_d* %target) #0 !dbg !3238 {
entry:
  %ref.addr = alloca %union.df_ref_d*, align 8
  %target.addr = alloca %union.df_ref_d*, align 8
  %chain = alloca %struct.df_link*, align 8
  %prev = alloca %struct.df_link*, align 8
  store %union.df_ref_d* %ref, %union.df_ref_d** %ref.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref.addr, metadata !3241, metadata !DIExpression()), !dbg !3242
  store %union.df_ref_d* %target, %union.df_ref_d** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %target.addr, metadata !3243, metadata !DIExpression()), !dbg !3244
  call void @llvm.dbg.declare(metadata %struct.df_link** %chain, metadata !3245, metadata !DIExpression()), !dbg !3246
  %0 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3247
  %base = bitcast %union.df_ref_d* %0 to %struct.df_base_ref*, !dbg !3247
  %chain1 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 2, !dbg !3247
  %1 = load %struct.df_link*, %struct.df_link** %chain1, align 8, !dbg !3247
  store %struct.df_link* %1, %struct.df_link** %chain, align 8, !dbg !3246
  call void @llvm.dbg.declare(metadata %struct.df_link** %prev, metadata !3248, metadata !DIExpression()), !dbg !3249
  store %struct.df_link* null, %struct.df_link** %prev, align 8, !dbg !3249
  br label %while.cond, !dbg !3250

while.cond:                                       ; preds = %if.end9, %entry
  %2 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !3251
  %tobool = icmp ne %struct.df_link* %2, null, !dbg !3250
  br i1 %tobool, label %while.body, label %while.end, !dbg !3250

while.body:                                       ; preds = %while.cond
  %3 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !3252
  %ref2 = getelementptr inbounds %struct.df_link, %struct.df_link* %3, i32 0, i32 0, !dbg !3255
  %4 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3255
  %5 = load %union.df_ref_d*, %union.df_ref_d** %target.addr, align 8, !dbg !3256
  %cmp = icmp eq %union.df_ref_d* %4, %5, !dbg !3257
  br i1 %cmp, label %if.then, label %if.end9, !dbg !3258

if.then:                                          ; preds = %while.body
  %6 = load %struct.df_link*, %struct.df_link** %prev, align 8, !dbg !3259
  %tobool3 = icmp ne %struct.df_link* %6, null, !dbg !3259
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !3262

if.then4:                                         ; preds = %if.then
  %7 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !3263
  %next = getelementptr inbounds %struct.df_link, %struct.df_link* %7, i32 0, i32 1, !dbg !3264
  %8 = load %struct.df_link*, %struct.df_link** %next, align 8, !dbg !3264
  %9 = load %struct.df_link*, %struct.df_link** %prev, align 8, !dbg !3265
  %next5 = getelementptr inbounds %struct.df_link, %struct.df_link* %9, i32 0, i32 1, !dbg !3266
  store %struct.df_link* %8, %struct.df_link** %next5, align 8, !dbg !3267
  br label %if.end, !dbg !3265

if.else:                                          ; preds = %if.then
  %10 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !3268
  %next6 = getelementptr inbounds %struct.df_link, %struct.df_link* %10, i32 0, i32 1, !dbg !3269
  %11 = load %struct.df_link*, %struct.df_link** %next6, align 8, !dbg !3269
  %12 = load %union.df_ref_d*, %union.df_ref_d** %ref.addr, align 8, !dbg !3270
  %base7 = bitcast %union.df_ref_d* %12 to %struct.df_base_ref*, !dbg !3270
  %chain8 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base7, i32 0, i32 2, !dbg !3270
  store %struct.df_link* %11, %struct.df_link** %chain8, align 8, !dbg !3271
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %13 = load %struct.df*, %struct.df** @df, align 8, !dbg !3272
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %13, i32 0, i32 1, !dbg !3272
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !3272
  %14 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3272
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %14, i32 0, i32 3, !dbg !3273
  %15 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !3273
  %16 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !3274
  %17 = bitcast %struct.df_link* %16 to i8*, !dbg !3274
  call void @pool_free(%struct.alloc_pool_def* %15, i8* %17), !dbg !3275
  br label %while.end, !dbg !3276

if.end9:                                          ; preds = %while.body
  %18 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !3277
  store %struct.df_link* %18, %struct.df_link** %prev, align 8, !dbg !3278
  %19 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !3279
  %next10 = getelementptr inbounds %struct.df_link, %struct.df_link* %19, i32 0, i32 1, !dbg !3280
  %20 = load %struct.df_link*, %struct.df_link** %next10, align 8, !dbg !3280
  store %struct.df_link* %20, %struct.df_link** %chain, align 8, !dbg !3281
  br label %while.cond, !dbg !3250, !llvm.loop !3282

while.end:                                        ; preds = %if.end, %while.cond
  ret void, !dbg !3284
}

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_chain_copy(%union.df_ref_d* %to_ref, %struct.df_link* %from_ref) #0 !dbg !3285 {
entry:
  %to_ref.addr = alloca %union.df_ref_d*, align 8
  %from_ref.addr = alloca %struct.df_link*, align 8
  store %union.df_ref_d* %to_ref, %union.df_ref_d** %to_ref.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %to_ref.addr, metadata !3288, metadata !DIExpression()), !dbg !3289
  store %struct.df_link* %from_ref, %struct.df_link** %from_ref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_link** %from_ref.addr, metadata !3290, metadata !DIExpression()), !dbg !3291
  br label %while.cond, !dbg !3292

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.df_link*, %struct.df_link** %from_ref.addr, align 8, !dbg !3293
  %tobool = icmp ne %struct.df_link* %0, null, !dbg !3292
  br i1 %tobool, label %while.body, label %while.end, !dbg !3292

while.body:                                       ; preds = %while.cond
  %1 = load %union.df_ref_d*, %union.df_ref_d** %to_ref.addr, align 8, !dbg !3294
  %2 = load %struct.df_link*, %struct.df_link** %from_ref.addr, align 8, !dbg !3296
  %ref = getelementptr inbounds %struct.df_link, %struct.df_link* %2, i32 0, i32 0, !dbg !3297
  %3 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !3297
  %call = call %struct.df_link* @df_chain_create(%union.df_ref_d* %1, %union.df_ref_d* %3), !dbg !3298
  %4 = load %struct.df_link*, %struct.df_link** %from_ref.addr, align 8, !dbg !3299
  %next = getelementptr inbounds %struct.df_link, %struct.df_link* %4, i32 0, i32 1, !dbg !3300
  %5 = load %struct.df_link*, %struct.df_link** %next, align 8, !dbg !3300
  store %struct.df_link* %5, %struct.df_link** %from_ref.addr, align 8, !dbg !3301
  br label %while.cond, !dbg !3292, !llvm.loop !3302

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3304
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_chain_add_problem(i32 %chain_flags) #0 !dbg !3305 {
entry:
  %chain_flags.addr = alloca i32, align 4
  store i32 %chain_flags, i32* %chain_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chain_flags.addr, metadata !3306, metadata !DIExpression()), !dbg !3307
  call void @df_add_problem(%struct.df_problem* @problem_CHAIN), !dbg !3308
  %0 = load i32, i32* %chain_flags.addr, align 4, !dbg !3309
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !3310
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !3310
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !3310
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3310
  %local_flags = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 6, !dbg !3311
  store i32 %0, i32* %local_flags, align 8, !dbg !3312
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !3313
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !3314
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !3314
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 4, !dbg !3314
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !3314
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 4, !dbg !3315
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !3316
  ret void, !dbg !3317
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @df_byte_lr_get_regno_start(i32 %regno) #0 !dbg !3318 {
entry:
  %regno.addr = alloca i32, align 4
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !3321, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !3323, metadata !DIExpression()), !dbg !3324
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3325
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !3325
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !3325
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3325
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !3326
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !3326
  %3 = bitcast i8* %2 to %struct.df_byte_lr_problem_data*, !dbg !3327
  store %struct.df_byte_lr_problem_data* %3, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3324
  %4 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3328
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %4, i32 0, i32 3, !dbg !3329
  %5 = load i32*, i32** %regno_start, align 8, !dbg !3329
  %6 = load i32, i32* %regno.addr, align 4, !dbg !3330
  %idxprom = zext i32 %6 to i64, !dbg !3328
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !3328
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !3328
  ret i32 %7, !dbg !3331
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @df_byte_lr_get_regno_len(i32 %regno) #0 !dbg !3332 {
entry:
  %regno.addr = alloca i32, align 4
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !3333, metadata !DIExpression()), !dbg !3334
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !3335, metadata !DIExpression()), !dbg !3336
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3337
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !3337
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !3337
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3337
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !3338
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !3338
  %3 = bitcast i8* %2 to %struct.df_byte_lr_problem_data*, !dbg !3339
  store %struct.df_byte_lr_problem_data* %3, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3336
  %4 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3340
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %4, i32 0, i32 4, !dbg !3341
  %5 = load i32*, i32** %regno_len, align 8, !dbg !3341
  %6 = load i32, i32* %regno.addr, align 4, !dbg !3342
  %idxprom = zext i32 %6 to i64, !dbg !3340
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !3340
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !3340
  ret i32 %7, !dbg !3343
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_byte_lr_add_problem() #0 !dbg !3344 {
entry:
  call void @df_add_problem(%struct.df_problem* @problem_BYTE_LR), !dbg !3345
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !3346
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3347
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !3347
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !3347
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3347
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 4, !dbg !3348
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !3349
  ret void, !dbg !3350
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_byte_lr_simulate_defs(%struct.rtx_def* %insn, %struct.bitmap_head_def* %live) #0 !dbg !3351 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %uid = alloca i32, align 4
  %def = alloca %union.df_ref_d*, align 8
  %dregno = alloca i32, align 4
  %start = alloca i32, align 4
  %len = alloca i32, align 4
  %sb = alloca i32, align 4
  %lb = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3354, metadata !DIExpression()), !dbg !3355
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !3356, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !3358, metadata !DIExpression()), !dbg !3359
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3360
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !3360
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !3360
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3360
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !3361
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !3361
  %3 = bitcast i8* %2 to %struct.df_byte_lr_problem_data*, !dbg !3362
  store %struct.df_byte_lr_problem_data* %3, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3359
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !3363, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !3365, metadata !DIExpression()), !dbg !3366
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3367
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !3367
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3367
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3367
  %rt_int = bitcast %union.rtunion_def* %arrayidx2 to i32*, !dbg !3367
  %5 = load i32, i32* %rt_int, align 8, !dbg !3367
  store i32 %5, i32* %uid, align 4, !dbg !3366
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !3368
  %insns = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 10, !dbg !3368
  %7 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3368
  %8 = load i32, i32* %uid, align 4, !dbg !3368
  %idxprom = zext i32 %8 to i64, !dbg !3368
  %arrayidx3 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %7, i64 %idxprom, !dbg !3368
  %9 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx3, align 8, !dbg !3368
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %9, i32 0, i32 1, !dbg !3368
  %10 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !3368
  store %union.df_ref_d** %10, %union.df_ref_d*** %def_rec, align 8, !dbg !3370
  br label %for.cond, !dbg !3371

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3372
  %12 = load %union.df_ref_d*, %union.df_ref_d** %11, align 8, !dbg !3374
  %tobool = icmp ne %union.df_ref_d* %12, null, !dbg !3375
  br i1 %tobool, label %for.body, label %for.end, !dbg !3375

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !3376, metadata !DIExpression()), !dbg !3378
  %13 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3379
  %14 = load %union.df_ref_d*, %union.df_ref_d** %13, align 8, !dbg !3380
  store %union.df_ref_d* %14, %union.df_ref_d** %def, align 8, !dbg !3378
  %15 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3381
  %base = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !3381
  %16 = bitcast %struct.df_base_ref* %base to i32*, !dbg !3381
  %bf.load = load i32, i32* %16, align 8, !dbg !3381
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !3381
  %and = and i32 %bf.ashr, 1, !dbg !3383
  %tobool4 = icmp ne i32 %and, 0, !dbg !3383
  br i1 %tobool4, label %if.end15, label %if.then, !dbg !3384

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !3385, metadata !DIExpression()), !dbg !3387
  %17 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3388
  %base5 = bitcast %union.df_ref_d* %17 to %struct.df_base_ref*, !dbg !3388
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base5, i32 0, i32 6, !dbg !3388
  %18 = load i32, i32* %regno, align 8, !dbg !3388
  store i32 %18, i32* %dregno, align 4, !dbg !3387
  call void @llvm.dbg.declare(metadata i32* %start, metadata !3389, metadata !DIExpression()), !dbg !3390
  %19 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3391
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %19, i32 0, i32 3, !dbg !3392
  %20 = load i32*, i32** %regno_start, align 8, !dbg !3392
  %21 = load i32, i32* %dregno, align 4, !dbg !3393
  %idxprom6 = zext i32 %21 to i64, !dbg !3391
  %arrayidx7 = getelementptr inbounds i32, i32* %20, i64 %idxprom6, !dbg !3391
  %22 = load i32, i32* %arrayidx7, align 4, !dbg !3391
  store i32 %22, i32* %start, align 4, !dbg !3390
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3394, metadata !DIExpression()), !dbg !3395
  %23 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3396
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %23, i32 0, i32 4, !dbg !3397
  %24 = load i32*, i32** %regno_len, align 8, !dbg !3397
  %25 = load i32, i32* %dregno, align 4, !dbg !3398
  %idxprom8 = zext i32 %25 to i64, !dbg !3396
  %arrayidx9 = getelementptr inbounds i32, i32* %24, i64 %idxprom8, !dbg !3396
  %26 = load i32, i32* %arrayidx9, align 4, !dbg !3396
  store i32 %26, i32* %len, align 4, !dbg !3395
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !3399, metadata !DIExpression()), !dbg !3400
  call void @llvm.dbg.declare(metadata i32* %lb, metadata !3401, metadata !DIExpression()), !dbg !3402
  %27 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3403
  %call = call zeroext i8 @df_compute_accessed_bytes(%union.df_ref_d* %27, i32 1, i32* %sb, i32* %lb), !dbg !3405
  %tobool10 = icmp ne i8 %call, 0, !dbg !3405
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !3406

if.then11:                                        ; preds = %if.then
  %28 = load i32, i32* %sb, align 4, !dbg !3407
  %29 = load i32, i32* %start, align 4, !dbg !3409
  %add = add i32 %29, %28, !dbg !3409
  store i32 %add, i32* %start, align 4, !dbg !3409
  %30 = load i32, i32* %lb, align 4, !dbg !3410
  %31 = load i32, i32* %sb, align 4, !dbg !3411
  %sub = sub i32 %30, %31, !dbg !3412
  store i32 %sub, i32* %len, align 4, !dbg !3413
  br label %if.end, !dbg !3414

if.end:                                           ; preds = %if.then11, %if.then
  %32 = load i32, i32* %len, align 4, !dbg !3415
  %tobool12 = icmp ne i32 %32, 0, !dbg !3415
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !3417

if.then13:                                        ; preds = %if.end
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3418
  %34 = load i32, i32* %start, align 4, !dbg !3419
  %35 = load i32, i32* %len, align 4, !dbg !3420
  call void @bitmap_clear_range(%struct.bitmap_head_def* %33, i32 %34, i32 %35), !dbg !3421
  br label %if.end14, !dbg !3421

if.end14:                                         ; preds = %if.then13, %if.end
  br label %if.end15, !dbg !3422

if.end15:                                         ; preds = %if.end14, %for.body
  br label %for.inc, !dbg !3423

for.inc:                                          ; preds = %if.end15
  %36 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3424
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %36, i32 1, !dbg !3424
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !3424
  br label %for.cond, !dbg !3425, !llvm.loop !3426

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3428
}

declare dso_local zeroext i8 @df_compute_accessed_bytes(%union.df_ref_d*, i32, i32*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_byte_lr_simulate_uses(%struct.rtx_def* %insn, %struct.bitmap_head_def* %live) #0 !dbg !3429 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  %use_rec = alloca %union.df_ref_d**, align 8
  %uid = alloca i32, align 4
  %use = alloca %union.df_ref_d*, align 8
  %uregno = alloca i32, align 4
  %start = alloca i32, align 4
  %len = alloca i32, align 4
  %sb = alloca i32, align 4
  %lb = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3430, metadata !DIExpression()), !dbg !3431
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !3432, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !3434, metadata !DIExpression()), !dbg !3435
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3436
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !3436
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !3436
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3436
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !3437
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !3437
  %3 = bitcast i8* %2 to %struct.df_byte_lr_problem_data*, !dbg !3438
  store %struct.df_byte_lr_problem_data* %3, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3435
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %use_rec, metadata !3439, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !3441, metadata !DIExpression()), !dbg !3442
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3443
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !3443
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3443
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3443
  %rt_int = bitcast %union.rtunion_def* %arrayidx2 to i32*, !dbg !3443
  %5 = load i32, i32* %rt_int, align 8, !dbg !3443
  store i32 %5, i32* %uid, align 4, !dbg !3442
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !3444
  %insns = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 10, !dbg !3444
  %7 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3444
  %8 = load i32, i32* %uid, align 4, !dbg !3444
  %idxprom = zext i32 %8 to i64, !dbg !3444
  %arrayidx3 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %7, i64 %idxprom, !dbg !3444
  %9 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx3, align 8, !dbg !3444
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %9, i32 0, i32 2, !dbg !3444
  %10 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !3444
  store %union.df_ref_d** %10, %union.df_ref_d*** %use_rec, align 8, !dbg !3446
  br label %for.cond, !dbg !3447

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !3448
  %12 = load %union.df_ref_d*, %union.df_ref_d** %11, align 8, !dbg !3450
  %tobool = icmp ne %union.df_ref_d* %12, null, !dbg !3451
  br i1 %tobool, label %for.body, label %for.end, !dbg !3451

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use, metadata !3452, metadata !DIExpression()), !dbg !3454
  %13 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !3455
  %14 = load %union.df_ref_d*, %union.df_ref_d** %13, align 8, !dbg !3456
  store %union.df_ref_d* %14, %union.df_ref_d** %use, align 8, !dbg !3454
  call void @llvm.dbg.declare(metadata i32* %uregno, metadata !3457, metadata !DIExpression()), !dbg !3458
  %15 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !3459
  %base = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !3459
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 6, !dbg !3459
  %16 = load i32, i32* %regno, align 8, !dbg !3459
  store i32 %16, i32* %uregno, align 4, !dbg !3458
  call void @llvm.dbg.declare(metadata i32* %start, metadata !3460, metadata !DIExpression()), !dbg !3461
  %17 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3462
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %17, i32 0, i32 3, !dbg !3463
  %18 = load i32*, i32** %regno_start, align 8, !dbg !3463
  %19 = load i32, i32* %uregno, align 4, !dbg !3464
  %idxprom4 = zext i32 %19 to i64, !dbg !3462
  %arrayidx5 = getelementptr inbounds i32, i32* %18, i64 %idxprom4, !dbg !3462
  %20 = load i32, i32* %arrayidx5, align 4, !dbg !3462
  store i32 %20, i32* %start, align 4, !dbg !3461
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3465, metadata !DIExpression()), !dbg !3466
  %21 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3467
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %21, i32 0, i32 4, !dbg !3468
  %22 = load i32*, i32** %regno_len, align 8, !dbg !3468
  %23 = load i32, i32* %uregno, align 4, !dbg !3469
  %idxprom6 = zext i32 %23 to i64, !dbg !3467
  %arrayidx7 = getelementptr inbounds i32, i32* %22, i64 %idxprom6, !dbg !3467
  %24 = load i32, i32* %arrayidx7, align 4, !dbg !3467
  store i32 %24, i32* %len, align 4, !dbg !3466
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !3470, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.declare(metadata i32* %lb, metadata !3472, metadata !DIExpression()), !dbg !3473
  %25 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !3474
  %call = call zeroext i8 @df_compute_accessed_bytes(%union.df_ref_d* %25, i32 0, i32* %sb, i32* %lb), !dbg !3476
  %tobool8 = icmp ne i8 %call, 0, !dbg !3476
  br i1 %tobool8, label %if.end, label %if.then, !dbg !3477

if.then:                                          ; preds = %for.body
  %26 = load i32, i32* %sb, align 4, !dbg !3478
  %27 = load i32, i32* %start, align 4, !dbg !3480
  %add = add i32 %27, %26, !dbg !3480
  store i32 %add, i32* %start, align 4, !dbg !3480
  %28 = load i32, i32* %lb, align 4, !dbg !3481
  %29 = load i32, i32* %sb, align 4, !dbg !3482
  %sub = sub i32 %28, %29, !dbg !3483
  store i32 %sub, i32* %len, align 4, !dbg !3484
  br label %if.end, !dbg !3485

if.end:                                           ; preds = %if.then, %for.body
  %30 = load i32, i32* %len, align 4, !dbg !3486
  %tobool9 = icmp ne i32 %30, 0, !dbg !3486
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !3488

if.then10:                                        ; preds = %if.end
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3489
  %32 = load i32, i32* %start, align 4, !dbg !3490
  %33 = load i32, i32* %len, align 4, !dbg !3491
  call void @bitmap_set_range(%struct.bitmap_head_def* %31, i32 %32, i32 %33), !dbg !3492
  br label %if.end11, !dbg !3492

if.end11:                                         ; preds = %if.then10, %if.end
  br label %for.inc, !dbg !3493

for.inc:                                          ; preds = %if.end11
  %34 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !3494
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %34, i32 1, !dbg !3494
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %use_rec, align 8, !dbg !3494
  br label %for.cond, !dbg !3495, !llvm.loop !3496

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3498
}

declare dso_local void @bitmap_set_range(%struct.bitmap_head_def*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_byte_lr_simulate_artificial_refs_at_top(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) #0 !dbg !3499 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %bb_index = alloca i32, align 4
  %def = alloca %union.df_ref_d*, align 8
  %dregno = alloca i32, align 4
  %start = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !3500, metadata !DIExpression()), !dbg !3501
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !3502, metadata !DIExpression()), !dbg !3503
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !3504, metadata !DIExpression()), !dbg !3505
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3506
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !3506
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !3506
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3506
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !3507
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !3507
  %3 = bitcast i8* %2 to %struct.df_byte_lr_problem_data*, !dbg !3508
  store %struct.df_byte_lr_problem_data* %3, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3505
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !3509, metadata !DIExpression()), !dbg !3510
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !3511, metadata !DIExpression()), !dbg !3512
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !3513
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i32 0, i32 9, !dbg !3514
  %5 = load i32, i32* %index, align 8, !dbg !3514
  store i32 %5, i32* %bb_index, align 4, !dbg !3512
  %6 = load i32, i32* %bb_index, align 4, !dbg !3515
  %call = call %union.df_ref_d** @df_get_artificial_defs(i32 %6), !dbg !3517
  store %union.df_ref_d** %call, %union.df_ref_d*** %def_rec, align 8, !dbg !3518
  br label %for.cond, !dbg !3519

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3520
  %8 = load %union.df_ref_d*, %union.df_ref_d** %7, align 8, !dbg !3522
  %tobool = icmp ne %union.df_ref_d* %8, null, !dbg !3523
  br i1 %tobool, label %for.body, label %for.end, !dbg !3523

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !3524, metadata !DIExpression()), !dbg !3526
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3527
  %10 = load %union.df_ref_d*, %union.df_ref_d** %9, align 8, !dbg !3528
  store %union.df_ref_d* %10, %union.df_ref_d** %def, align 8, !dbg !3526
  %11 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3529
  %base = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !3529
  %12 = bitcast %struct.df_base_ref* %base to i32*, !dbg !3529
  %bf.load = load i32, i32* %12, align 8, !dbg !3529
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !3529
  %and = and i32 %bf.ashr, 2, !dbg !3531
  %tobool2 = icmp ne i32 %and, 0, !dbg !3531
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3532

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !3533, metadata !DIExpression()), !dbg !3535
  %13 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3536
  %base3 = bitcast %union.df_ref_d* %13 to %struct.df_base_ref*, !dbg !3536
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base3, i32 0, i32 6, !dbg !3536
  %14 = load i32, i32* %regno, align 8, !dbg !3536
  store i32 %14, i32* %dregno, align 4, !dbg !3535
  call void @llvm.dbg.declare(metadata i32* %start, metadata !3537, metadata !DIExpression()), !dbg !3538
  %15 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3539
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %15, i32 0, i32 3, !dbg !3540
  %16 = load i32*, i32** %regno_start, align 8, !dbg !3540
  %17 = load i32, i32* %dregno, align 4, !dbg !3541
  %idxprom = zext i32 %17 to i64, !dbg !3539
  %arrayidx4 = getelementptr inbounds i32, i32* %16, i64 %idxprom, !dbg !3539
  %18 = load i32, i32* %arrayidx4, align 4, !dbg !3539
  store i32 %18, i32* %start, align 4, !dbg !3538
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3542, metadata !DIExpression()), !dbg !3543
  %19 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3544
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %19, i32 0, i32 4, !dbg !3545
  %20 = load i32*, i32** %regno_len, align 8, !dbg !3545
  %21 = load i32, i32* %dregno, align 4, !dbg !3546
  %idxprom5 = zext i32 %21 to i64, !dbg !3544
  %arrayidx6 = getelementptr inbounds i32, i32* %20, i64 %idxprom5, !dbg !3544
  %22 = load i32, i32* %arrayidx6, align 4, !dbg !3544
  store i32 %22, i32* %len, align 4, !dbg !3543
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3547
  %24 = load i32, i32* %start, align 4, !dbg !3548
  %25 = load i32, i32* %len, align 4, !dbg !3549
  call void @bitmap_clear_range(%struct.bitmap_head_def* %23, i32 %24, i32 %25), !dbg !3550
  br label %if.end, !dbg !3551

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3552

for.inc:                                          ; preds = %if.end
  %26 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3553
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %26, i32 1, !dbg !3553
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !3553
  br label %for.cond, !dbg !3554, !llvm.loop !3555

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3557
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_byte_lr_simulate_artificial_refs_at_end(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) #0 !dbg !3558 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %use_rec = alloca %union.df_ref_d**, align 8
  %bb_index = alloca i32, align 4
  %def = alloca %union.df_ref_d*, align 8
  %dregno = alloca i32, align 4
  %start = alloca i32, align 4
  %len = alloca i32, align 4
  %use = alloca %union.df_ref_d*, align 8
  %uregno = alloca i32, align 4
  %start18 = alloca i32, align 4
  %len22 = alloca i32, align 4
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !3559, metadata !DIExpression()), !dbg !3560
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !3561, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !3563, metadata !DIExpression()), !dbg !3564
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3565
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !3565
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !3565
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3565
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !3566
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !3566
  %3 = bitcast i8* %2 to %struct.df_byte_lr_problem_data*, !dbg !3567
  store %struct.df_byte_lr_problem_data* %3, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3564
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !3568, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %use_rec, metadata !3570, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !3572, metadata !DIExpression()), !dbg !3573
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !3574
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i32 0, i32 9, !dbg !3575
  %5 = load i32, i32* %index, align 8, !dbg !3575
  store i32 %5, i32* %bb_index, align 4, !dbg !3573
  %6 = load i32, i32* %bb_index, align 4, !dbg !3576
  %call = call %union.df_ref_d** @df_get_artificial_defs(i32 %6), !dbg !3578
  store %union.df_ref_d** %call, %union.df_ref_d*** %def_rec, align 8, !dbg !3579
  br label %for.cond, !dbg !3580

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3581
  %8 = load %union.df_ref_d*, %union.df_ref_d** %7, align 8, !dbg !3583
  %tobool = icmp ne %union.df_ref_d* %8, null, !dbg !3584
  br i1 %tobool, label %for.body, label %for.end, !dbg !3584

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !3585, metadata !DIExpression()), !dbg !3587
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3588
  %10 = load %union.df_ref_d*, %union.df_ref_d** %9, align 8, !dbg !3589
  store %union.df_ref_d* %10, %union.df_ref_d** %def, align 8, !dbg !3587
  %11 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3590
  %base = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !3590
  %12 = bitcast %struct.df_base_ref* %base to i32*, !dbg !3590
  %bf.load = load i32, i32* %12, align 8, !dbg !3590
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !3590
  %and = and i32 %bf.ashr, 2, !dbg !3592
  %cmp = icmp eq i32 %and, 0, !dbg !3593
  br i1 %cmp, label %if.then, label %if.end, !dbg !3594

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !3595, metadata !DIExpression()), !dbg !3597
  %13 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3598
  %base2 = bitcast %union.df_ref_d* %13 to %struct.df_base_ref*, !dbg !3598
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base2, i32 0, i32 6, !dbg !3598
  %14 = load i32, i32* %regno, align 8, !dbg !3598
  store i32 %14, i32* %dregno, align 4, !dbg !3597
  call void @llvm.dbg.declare(metadata i32* %start, metadata !3599, metadata !DIExpression()), !dbg !3600
  %15 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3601
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %15, i32 0, i32 3, !dbg !3602
  %16 = load i32*, i32** %regno_start, align 8, !dbg !3602
  %17 = load i32, i32* %dregno, align 4, !dbg !3603
  %idxprom = zext i32 %17 to i64, !dbg !3601
  %arrayidx3 = getelementptr inbounds i32, i32* %16, i64 %idxprom, !dbg !3601
  %18 = load i32, i32* %arrayidx3, align 4, !dbg !3601
  store i32 %18, i32* %start, align 4, !dbg !3600
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3604, metadata !DIExpression()), !dbg !3605
  %19 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3606
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %19, i32 0, i32 4, !dbg !3607
  %20 = load i32*, i32** %regno_len, align 8, !dbg !3607
  %21 = load i32, i32* %dregno, align 4, !dbg !3608
  %idxprom4 = zext i32 %21 to i64, !dbg !3606
  %arrayidx5 = getelementptr inbounds i32, i32* %20, i64 %idxprom4, !dbg !3606
  %22 = load i32, i32* %arrayidx5, align 4, !dbg !3606
  store i32 %22, i32* %len, align 4, !dbg !3605
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3609
  %24 = load i32, i32* %start, align 4, !dbg !3610
  %25 = load i32, i32* %len, align 4, !dbg !3611
  call void @bitmap_clear_range(%struct.bitmap_head_def* %23, i32 %24, i32 %25), !dbg !3612
  br label %if.end, !dbg !3613

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3614

for.inc:                                          ; preds = %if.end
  %26 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3615
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %26, i32 1, !dbg !3615
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !3615
  br label %for.cond, !dbg !3616, !llvm.loop !3617

for.end:                                          ; preds = %for.cond
  %27 = load i32, i32* %bb_index, align 4, !dbg !3619
  %call6 = call %union.df_ref_d** @df_get_artificial_uses(i32 %27), !dbg !3621
  store %union.df_ref_d** %call6, %union.df_ref_d*** %use_rec, align 8, !dbg !3622
  br label %for.cond7, !dbg !3623

for.cond7:                                        ; preds = %for.inc27, %for.end
  %28 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !3624
  %29 = load %union.df_ref_d*, %union.df_ref_d** %28, align 8, !dbg !3626
  %tobool8 = icmp ne %union.df_ref_d* %29, null, !dbg !3627
  br i1 %tobool8, label %for.body9, label %for.end29, !dbg !3627

for.body9:                                        ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use, metadata !3628, metadata !DIExpression()), !dbg !3630
  %30 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !3631
  %31 = load %union.df_ref_d*, %union.df_ref_d** %30, align 8, !dbg !3632
  store %union.df_ref_d* %31, %union.df_ref_d** %use, align 8, !dbg !3630
  %32 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !3633
  %base10 = bitcast %union.df_ref_d* %32 to %struct.df_base_ref*, !dbg !3633
  %33 = bitcast %struct.df_base_ref* %base10 to i32*, !dbg !3633
  %bf.load11 = load i32, i32* %33, align 8, !dbg !3633
  %bf.ashr12 = ashr i32 %bf.load11, 16, !dbg !3633
  %and13 = and i32 %bf.ashr12, 2, !dbg !3635
  %cmp14 = icmp eq i32 %and13, 0, !dbg !3636
  br i1 %cmp14, label %if.then15, label %if.end26, !dbg !3637

if.then15:                                        ; preds = %for.body9
  call void @llvm.dbg.declare(metadata i32* %uregno, metadata !3638, metadata !DIExpression()), !dbg !3640
  %34 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !3641
  %base16 = bitcast %union.df_ref_d* %34 to %struct.df_base_ref*, !dbg !3641
  %regno17 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base16, i32 0, i32 6, !dbg !3641
  %35 = load i32, i32* %regno17, align 8, !dbg !3641
  store i32 %35, i32* %uregno, align 4, !dbg !3640
  call void @llvm.dbg.declare(metadata i32* %start18, metadata !3642, metadata !DIExpression()), !dbg !3643
  %36 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3644
  %regno_start19 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %36, i32 0, i32 3, !dbg !3645
  %37 = load i32*, i32** %regno_start19, align 8, !dbg !3645
  %38 = load i32, i32* %uregno, align 4, !dbg !3646
  %idxprom20 = zext i32 %38 to i64, !dbg !3644
  %arrayidx21 = getelementptr inbounds i32, i32* %37, i64 %idxprom20, !dbg !3644
  %39 = load i32, i32* %arrayidx21, align 4, !dbg !3644
  store i32 %39, i32* %start18, align 4, !dbg !3643
  call void @llvm.dbg.declare(metadata i32* %len22, metadata !3647, metadata !DIExpression()), !dbg !3648
  %40 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !3649
  %regno_len23 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %40, i32 0, i32 4, !dbg !3650
  %41 = load i32*, i32** %regno_len23, align 8, !dbg !3650
  %42 = load i32, i32* %uregno, align 4, !dbg !3651
  %idxprom24 = zext i32 %42 to i64, !dbg !3649
  %arrayidx25 = getelementptr inbounds i32, i32* %41, i64 %idxprom24, !dbg !3649
  %43 = load i32, i32* %arrayidx25, align 4, !dbg !3649
  store i32 %43, i32* %len22, align 4, !dbg !3648
  %44 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3652
  %45 = load i32, i32* %start18, align 4, !dbg !3653
  %46 = load i32, i32* %len22, align 4, !dbg !3654
  call void @bitmap_set_range(%struct.bitmap_head_def* %44, i32 %45, i32 %46), !dbg !3655
  br label %if.end26, !dbg !3656

if.end26:                                         ; preds = %if.then15, %for.body9
  br label %for.inc27, !dbg !3657

for.inc27:                                        ; preds = %if.end26
  %47 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !3658
  %incdec.ptr28 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %47, i32 1, !dbg !3658
  store %union.df_ref_d** %incdec.ptr28, %union.df_ref_d*** %use_rec, align 8, !dbg !3658
  br label %for.cond7, !dbg !3659, !llvm.loop !3660

for.end29:                                        ; preds = %for.cond7
  ret void, !dbg !3662
}

; Function Attrs: noinline nounwind uwtable
define internal %union.df_ref_d** @df_get_artificial_uses(i32 %bb_index) #0 !dbg !3663 {
entry:
  %bb_index.addr = alloca i32, align 4
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !3664, metadata !DIExpression()), !dbg !3665
  %0 = load i32, i32* %bb_index.addr, align 4, !dbg !3666
  %call = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %0), !dbg !3667
  %artificial_uses = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %call, i32 0, i32 1, !dbg !3668
  %1 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses, align 8, !dbg !3668
  ret %union.df_ref_d** %1, !dbg !3669
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_note_add_problem() #0 !dbg !3670 {
entry:
  call void @df_add_problem(%struct.df_problem* @problem_NOTE), !dbg !3671
  ret void, !dbg !3672
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_simulate_find_defs(%struct.rtx_def* %insn, %struct.bitmap_head_def* %defs) #0 !dbg !3673 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %defs.addr = alloca %struct.bitmap_head_def*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %uid = alloca i32, align 4
  %def = alloca %union.df_ref_d*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3674, metadata !DIExpression()), !dbg !3675
  store %struct.bitmap_head_def* %defs, %struct.bitmap_head_def** %defs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %defs.addr, metadata !3676, metadata !DIExpression()), !dbg !3677
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !3678, metadata !DIExpression()), !dbg !3679
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !3680, metadata !DIExpression()), !dbg !3681
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3682
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !3682
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3682
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3682
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3682
  %1 = load i32, i32* %rt_int, align 8, !dbg !3682
  store i32 %1, i32* %uid, align 4, !dbg !3681
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !3683
  %insns = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 10, !dbg !3683
  %3 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3683
  %4 = load i32, i32* %uid, align 4, !dbg !3683
  %idxprom = zext i32 %4 to i64, !dbg !3683
  %arrayidx1 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %3, i64 %idxprom, !dbg !3683
  %5 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx1, align 8, !dbg !3683
  %defs2 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %5, i32 0, i32 1, !dbg !3683
  %6 = load %union.df_ref_d**, %union.df_ref_d*** %defs2, align 8, !dbg !3683
  store %union.df_ref_d** %6, %union.df_ref_d*** %def_rec, align 8, !dbg !3685
  br label %for.cond, !dbg !3686

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3687
  %8 = load %union.df_ref_d*, %union.df_ref_d** %7, align 8, !dbg !3689
  %tobool = icmp ne %union.df_ref_d* %8, null, !dbg !3690
  br i1 %tobool, label %for.body, label %for.end, !dbg !3690

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !3691, metadata !DIExpression()), !dbg !3693
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3694
  %10 = load %union.df_ref_d*, %union.df_ref_d** %9, align 8, !dbg !3695
  store %union.df_ref_d* %10, %union.df_ref_d** %def, align 8, !dbg !3693
  %11 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3696
  %base = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !3696
  %12 = bitcast %struct.df_base_ref* %base to i32*, !dbg !3696
  %bf.load = load i32, i32* %12, align 8, !dbg !3696
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !3696
  %and = and i32 %bf.ashr, 17, !dbg !3698
  %tobool3 = icmp ne i32 %and, 0, !dbg !3698
  br i1 %tobool3, label %if.end, label %if.then, !dbg !3699

if.then:                                          ; preds = %for.body
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %defs.addr, align 8, !dbg !3700
  %14 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3701
  %base4 = bitcast %union.df_ref_d* %14 to %struct.df_base_ref*, !dbg !3701
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base4, i32 0, i32 6, !dbg !3701
  %15 = load i32, i32* %regno, align 8, !dbg !3701
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %13, i32 %15), !dbg !3702
  br label %if.end, !dbg !3702

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3703

for.inc:                                          ; preds = %if.end
  %16 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3704
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %16, i32 1, !dbg !3704
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !3704
  br label %for.cond, !dbg !3705, !llvm.loop !3706

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3708
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_simulate_defs(%struct.rtx_def* %insn, %struct.bitmap_head_def* %live) #0 !dbg !3709 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %uid = alloca i32, align 4
  %def = alloca %union.df_ref_d*, align 8
  %dregno = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3710, metadata !DIExpression()), !dbg !3711
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !3712, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !3714, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !3716, metadata !DIExpression()), !dbg !3717
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3718
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !3718
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3718
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3718
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3718
  %1 = load i32, i32* %rt_int, align 8, !dbg !3718
  store i32 %1, i32* %uid, align 4, !dbg !3717
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !3719
  %insns = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 10, !dbg !3719
  %3 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3719
  %4 = load i32, i32* %uid, align 4, !dbg !3719
  %idxprom = zext i32 %4 to i64, !dbg !3719
  %arrayidx1 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %3, i64 %idxprom, !dbg !3719
  %5 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx1, align 8, !dbg !3719
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %5, i32 0, i32 1, !dbg !3719
  %6 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !3719
  store %union.df_ref_d** %6, %union.df_ref_d*** %def_rec, align 8, !dbg !3721
  br label %for.cond, !dbg !3722

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3723
  %8 = load %union.df_ref_d*, %union.df_ref_d** %7, align 8, !dbg !3725
  %tobool = icmp ne %union.df_ref_d* %8, null, !dbg !3726
  br i1 %tobool, label %for.body, label %for.end, !dbg !3726

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !3727, metadata !DIExpression()), !dbg !3729
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3730
  %10 = load %union.df_ref_d*, %union.df_ref_d** %9, align 8, !dbg !3731
  store %union.df_ref_d* %10, %union.df_ref_d** %def, align 8, !dbg !3729
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !3732, metadata !DIExpression()), !dbg !3733
  %11 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3734
  %base = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !3734
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 6, !dbg !3734
  %12 = load i32, i32* %regno, align 8, !dbg !3734
  store i32 %12, i32* %dregno, align 4, !dbg !3733
  %13 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3735
  %base2 = bitcast %union.df_ref_d* %13 to %struct.df_base_ref*, !dbg !3735
  %14 = bitcast %struct.df_base_ref* %base2 to i32*, !dbg !3735
  %bf.load = load i32, i32* %14, align 8, !dbg !3735
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !3735
  %and = and i32 %bf.ashr, 17, !dbg !3737
  %tobool3 = icmp ne i32 %and, 0, !dbg !3737
  br i1 %tobool3, label %if.end, label %if.then, !dbg !3738

if.then:                                          ; preds = %for.body
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3739
  %16 = load i32, i32* %dregno, align 4, !dbg !3740
  %call = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %15, i32 %16), !dbg !3741
  br label %if.end, !dbg !3741

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3742

for.inc:                                          ; preds = %if.end
  %17 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3743
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %17, i32 1, !dbg !3743
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !3743
  br label %for.cond, !dbg !3744, !llvm.loop !3745

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3747
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_simulate_uses(%struct.rtx_def* %insn, %struct.bitmap_head_def* %live) #0 !dbg !3748 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %use_rec = alloca %union.df_ref_d**, align 8
  %uid = alloca i32, align 4
  %use = alloca %union.df_ref_d*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3749, metadata !DIExpression()), !dbg !3750
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !3751, metadata !DIExpression()), !dbg !3752
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %use_rec, metadata !3753, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !3755, metadata !DIExpression()), !dbg !3756
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3757
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !3757
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3757
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3757
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3757
  %1 = load i32, i32* %rt_int, align 8, !dbg !3757
  store i32 %1, i32* %uid, align 4, !dbg !3756
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3758
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !3758
  %bf.load = load i32, i32* %3, align 8, !dbg !3758
  %bf.clear = and i32 %bf.load, 65535, !dbg !3758
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !3758
  br i1 %cmp, label %if.then, label %if.end, !dbg !3760

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !3761

if.end:                                           ; preds = %entry
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !3762
  %insns = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 10, !dbg !3762
  %5 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3762
  %6 = load i32, i32* %uid, align 4, !dbg !3762
  %idxprom = zext i32 %6 to i64, !dbg !3762
  %arrayidx1 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %5, i64 %idxprom, !dbg !3762
  %7 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx1, align 8, !dbg !3762
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %7, i32 0, i32 2, !dbg !3762
  %8 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !3762
  store %union.df_ref_d** %8, %union.df_ref_d*** %use_rec, align 8, !dbg !3764
  br label %for.cond, !dbg !3765

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !3766
  %10 = load %union.df_ref_d*, %union.df_ref_d** %9, align 8, !dbg !3768
  %tobool = icmp ne %union.df_ref_d* %10, null, !dbg !3769
  br i1 %tobool, label %for.body, label %for.end, !dbg !3769

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use, metadata !3770, metadata !DIExpression()), !dbg !3772
  %11 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !3773
  %12 = load %union.df_ref_d*, %union.df_ref_d** %11, align 8, !dbg !3774
  store %union.df_ref_d* %12, %union.df_ref_d** %use, align 8, !dbg !3772
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3775
  %14 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !3776
  %base = bitcast %union.df_ref_d* %14 to %struct.df_base_ref*, !dbg !3776
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 6, !dbg !3776
  %15 = load i32, i32* %regno, align 8, !dbg !3776
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %13, i32 %15), !dbg !3777
  br label %for.inc, !dbg !3778

for.inc:                                          ; preds = %for.body
  %16 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !3779
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %16, i32 1, !dbg !3779
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %use_rec, align 8, !dbg !3779
  br label %for.cond, !dbg !3780, !llvm.loop !3781

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !3783
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_simulate_initialize_backwards(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) #0 !dbg !3784 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %use_rec = alloca %union.df_ref_d**, align 8
  %bb_index = alloca i32, align 4
  %def = alloca %union.df_ref_d*, align 8
  %use = alloca %union.df_ref_d*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !3785, metadata !DIExpression()), !dbg !3786
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !3787, metadata !DIExpression()), !dbg !3788
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !3789, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %use_rec, metadata !3791, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !3793, metadata !DIExpression()), !dbg !3794
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !3795
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !3796
  %1 = load i32, i32* %index, align 8, !dbg !3796
  store i32 %1, i32* %bb_index, align 4, !dbg !3794
  %2 = load i32, i32* %bb_index, align 4, !dbg !3797
  %call = call %union.df_ref_d** @df_get_artificial_defs(i32 %2), !dbg !3799
  store %union.df_ref_d** %call, %union.df_ref_d*** %def_rec, align 8, !dbg !3800
  br label %for.cond, !dbg !3801

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3802
  %4 = load %union.df_ref_d*, %union.df_ref_d** %3, align 8, !dbg !3804
  %tobool = icmp ne %union.df_ref_d* %4, null, !dbg !3805
  br i1 %tobool, label %for.body, label %for.end, !dbg !3805

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !3806, metadata !DIExpression()), !dbg !3808
  %5 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3809
  %6 = load %union.df_ref_d*, %union.df_ref_d** %5, align 8, !dbg !3810
  store %union.df_ref_d* %6, %union.df_ref_d** %def, align 8, !dbg !3808
  %7 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3811
  %base = bitcast %union.df_ref_d* %7 to %struct.df_base_ref*, !dbg !3811
  %8 = bitcast %struct.df_base_ref* %base to i32*, !dbg !3811
  %bf.load = load i32, i32* %8, align 8, !dbg !3811
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !3811
  %and = and i32 %bf.ashr, 2, !dbg !3813
  %cmp = icmp eq i32 %and, 0, !dbg !3814
  br i1 %cmp, label %if.then, label %if.end, !dbg !3815

if.then:                                          ; preds = %for.body
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3816
  %10 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3817
  %base1 = bitcast %union.df_ref_d* %10 to %struct.df_base_ref*, !dbg !3817
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base1, i32 0, i32 6, !dbg !3817
  %11 = load i32, i32* %regno, align 8, !dbg !3817
  %call2 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %9, i32 %11), !dbg !3818
  br label %if.end, !dbg !3818

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3819

for.inc:                                          ; preds = %if.end
  %12 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3820
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %12, i32 1, !dbg !3820
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !3820
  br label %for.cond, !dbg !3821, !llvm.loop !3822

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %bb_index, align 4, !dbg !3824
  %call3 = call %union.df_ref_d** @df_get_artificial_uses(i32 %13), !dbg !3826
  store %union.df_ref_d** %call3, %union.df_ref_d*** %use_rec, align 8, !dbg !3827
  br label %for.cond4, !dbg !3828

for.cond4:                                        ; preds = %for.inc17, %for.end
  %14 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !3829
  %15 = load %union.df_ref_d*, %union.df_ref_d** %14, align 8, !dbg !3831
  %tobool5 = icmp ne %union.df_ref_d* %15, null, !dbg !3832
  br i1 %tobool5, label %for.body6, label %for.end19, !dbg !3832

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use, metadata !3833, metadata !DIExpression()), !dbg !3835
  %16 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !3836
  %17 = load %union.df_ref_d*, %union.df_ref_d** %16, align 8, !dbg !3837
  store %union.df_ref_d* %17, %union.df_ref_d** %use, align 8, !dbg !3835
  %18 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !3838
  %base7 = bitcast %union.df_ref_d* %18 to %struct.df_base_ref*, !dbg !3838
  %19 = bitcast %struct.df_base_ref* %base7 to i32*, !dbg !3838
  %bf.load8 = load i32, i32* %19, align 8, !dbg !3838
  %bf.ashr9 = ashr i32 %bf.load8, 16, !dbg !3838
  %and10 = and i32 %bf.ashr9, 2, !dbg !3840
  %cmp11 = icmp eq i32 %and10, 0, !dbg !3841
  br i1 %cmp11, label %if.then12, label %if.end16, !dbg !3842

if.then12:                                        ; preds = %for.body6
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3843
  %21 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !3844
  %base13 = bitcast %union.df_ref_d* %21 to %struct.df_base_ref*, !dbg !3844
  %regno14 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base13, i32 0, i32 6, !dbg !3844
  %22 = load i32, i32* %regno14, align 8, !dbg !3844
  %call15 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %20, i32 %22), !dbg !3845
  br label %if.end16, !dbg !3845

if.end16:                                         ; preds = %if.then12, %for.body6
  br label %for.inc17, !dbg !3846

for.inc17:                                        ; preds = %if.end16
  %23 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !3847
  %incdec.ptr18 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %23, i32 1, !dbg !3847
  store %union.df_ref_d** %incdec.ptr18, %union.df_ref_d*** %use_rec, align 8, !dbg !3847
  br label %for.cond4, !dbg !3848, !llvm.loop !3849

for.end19:                                        ; preds = %for.cond4
  ret void, !dbg !3851
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_simulate_one_insn_backwards(%struct.basic_block_def* %bb, %struct.rtx_def* %insn, %struct.bitmap_head_def* %live) #0 !dbg !3852 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !3853, metadata !DIExpression()), !dbg !3854
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3855, metadata !DIExpression()), !dbg !3856
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !3857, metadata !DIExpression()), !dbg !3858
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3859
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3859
  %bf.load = load i32, i32* %1, align 8, !dbg !3859
  %bf.clear = and i32 %bf.load, 65535, !dbg !3859
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3859
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !3859

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3859
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !3859
  %bf.load1 = load i32, i32* %3, align 8, !dbg !3859
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3859
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !3859
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !3859

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3859
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !3859
  %bf.load5 = load i32, i32* %5, align 8, !dbg !3859
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !3859
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !3859
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !3859

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3859
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !3859
  %bf.load9 = load i32, i32* %7, align 8, !dbg !3859
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !3859
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !3859
  br i1 %cmp11, label %land.lhs.true, label %if.then, !dbg !3859

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3859
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !3859
  %bf.load12 = load i32, i32* %9, align 8, !dbg !3859
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3859
  %cmp14 = icmp eq i32 %bf.clear13, 7, !dbg !3859
  br i1 %cmp14, label %if.then, label %if.end, !dbg !3861

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false8
  br label %return, !dbg !3862

if.end:                                           ; preds = %land.lhs.true
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3863
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3864
  call void @df_simulate_defs(%struct.rtx_def* %10, %struct.bitmap_head_def* %11), !dbg !3865
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3866
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3867
  call void @df_simulate_uses(%struct.rtx_def* %12, %struct.bitmap_head_def* %13), !dbg !3868
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !3869
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3870
  call void @df_simulate_fixup_sets(%struct.basic_block_def* %14, %struct.bitmap_head_def* %15), !dbg !3871
  br label %return, !dbg !3872

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3872
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_simulate_fixup_sets(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) #0 !dbg !3873 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !3874, metadata !DIExpression()), !dbg !3875
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !3876, metadata !DIExpression()), !dbg !3877
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !3878
  %call = call zeroext i8 @bb_has_eh_pred(%struct.basic_block_def* %0), !dbg !3880
  %tobool = icmp ne i8 %call, 0, !dbg !3880
  br i1 %tobool, label %if.then, label %if.else, !dbg !3881

if.then:                                          ; preds = %entry
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3882
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !3883
  %eh_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 15, !dbg !3884
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !3884
  %call1 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %1, %struct.bitmap_head_def* %3), !dbg !3885
  br label %if.end, !dbg !3885

if.else:                                          ; preds = %entry
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3886
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !3887
  %regular_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 14, !dbg !3888
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !3888
  %call2 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %6), !dbg !3889
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3890
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_simulate_finalize_backwards(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) #0 !dbg !3891 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %bb_index = alloca i32, align 4
  %def = alloca %union.df_ref_d*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !3892, metadata !DIExpression()), !dbg !3893
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !3894, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !3896, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !3898, metadata !DIExpression()), !dbg !3899
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !3900
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !3901
  %1 = load i32, i32* %index, align 8, !dbg !3901
  store i32 %1, i32* %bb_index, align 4, !dbg !3899
  %2 = load i32, i32* %bb_index, align 4, !dbg !3902
  %call = call %union.df_ref_d** @df_get_artificial_defs(i32 %2), !dbg !3904
  store %union.df_ref_d** %call, %union.df_ref_d*** %def_rec, align 8, !dbg !3905
  br label %for.cond, !dbg !3906

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3907
  %4 = load %union.df_ref_d*, %union.df_ref_d** %3, align 8, !dbg !3909
  %tobool = icmp ne %union.df_ref_d* %4, null, !dbg !3910
  br i1 %tobool, label %for.body, label %for.end, !dbg !3910

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !3911, metadata !DIExpression()), !dbg !3913
  %5 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3914
  %6 = load %union.df_ref_d*, %union.df_ref_d** %5, align 8, !dbg !3915
  store %union.df_ref_d* %6, %union.df_ref_d** %def, align 8, !dbg !3913
  %7 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3916
  %base = bitcast %union.df_ref_d* %7 to %struct.df_base_ref*, !dbg !3916
  %8 = bitcast %struct.df_base_ref* %base to i32*, !dbg !3916
  %bf.load = load i32, i32* %8, align 8, !dbg !3916
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !3916
  %and = and i32 %bf.ashr, 2, !dbg !3918
  %tobool1 = icmp ne i32 %and, 0, !dbg !3918
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3919

if.then:                                          ; preds = %for.body
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3920
  %10 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3921
  %base2 = bitcast %union.df_ref_d* %10 to %struct.df_base_ref*, !dbg !3921
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base2, i32 0, i32 6, !dbg !3921
  %11 = load i32, i32* %regno, align 8, !dbg !3921
  %call3 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %9, i32 %11), !dbg !3922
  br label %if.end, !dbg !3922

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3923

for.inc:                                          ; preds = %if.end
  %12 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3924
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %12, i32 1, !dbg !3924
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !3924
  br label %for.cond, !dbg !3925, !llvm.loop !3926

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3928
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_simulate_initialize_forwards(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) #0 !dbg !3929 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %bb_index = alloca i32, align 4
  %def = alloca %union.df_ref_d*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !3930, metadata !DIExpression()), !dbg !3931
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !3932, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !3934, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !3936, metadata !DIExpression()), !dbg !3937
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !3938
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !3939
  %1 = load i32, i32* %index, align 8, !dbg !3939
  store i32 %1, i32* %bb_index, align 4, !dbg !3937
  %2 = load i32, i32* %bb_index, align 4, !dbg !3940
  %call = call %union.df_ref_d** @df_get_artificial_defs(i32 %2), !dbg !3942
  store %union.df_ref_d** %call, %union.df_ref_d*** %def_rec, align 8, !dbg !3943
  br label %for.cond, !dbg !3944

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3945
  %4 = load %union.df_ref_d*, %union.df_ref_d** %3, align 8, !dbg !3947
  %tobool = icmp ne %union.df_ref_d* %4, null, !dbg !3948
  br i1 %tobool, label %for.body, label %for.end, !dbg !3948

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !3949, metadata !DIExpression()), !dbg !3951
  %5 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3952
  %6 = load %union.df_ref_d*, %union.df_ref_d** %5, align 8, !dbg !3953
  store %union.df_ref_d* %6, %union.df_ref_d** %def, align 8, !dbg !3951
  %7 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3954
  %base = bitcast %union.df_ref_d* %7 to %struct.df_base_ref*, !dbg !3954
  %8 = bitcast %struct.df_base_ref* %base to i32*, !dbg !3954
  %bf.load = load i32, i32* %8, align 8, !dbg !3954
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !3954
  %and = and i32 %bf.ashr, 2, !dbg !3956
  %tobool1 = icmp ne i32 %and, 0, !dbg !3956
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3957

if.then:                                          ; preds = %for.body
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3958
  %10 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3959
  %base2 = bitcast %union.df_ref_d* %10 to %struct.df_base_ref*, !dbg !3959
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base2, i32 0, i32 6, !dbg !3959
  %11 = load i32, i32* %regno, align 8, !dbg !3959
  %call3 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %9, i32 %11), !dbg !3960
  br label %if.end, !dbg !3960

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !3961

for.inc:                                          ; preds = %if.end
  %12 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3962
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %12, i32 1, !dbg !3962
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !3962
  br label %for.cond, !dbg !3963, !llvm.loop !3964

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3966
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_simulate_one_insn_forwards(%struct.basic_block_def* %bb, %struct.rtx_def* %insn, %struct.bitmap_head_def* %live) #0 !dbg !3967 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %link = alloca %struct.rtx_def*, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !3968, metadata !DIExpression()), !dbg !3969
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3970, metadata !DIExpression()), !dbg !3971
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !3972, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %link, metadata !3974, metadata !DIExpression()), !dbg !3975
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3976
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3976
  %bf.load = load i32, i32* %1, align 8, !dbg !3976
  %bf.clear = and i32 %bf.load, 65535, !dbg !3976
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3976
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !3976

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3976
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !3976
  %bf.load1 = load i32, i32* %3, align 8, !dbg !3976
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !3976
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !3976
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !3976

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3976
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !3976
  %bf.load5 = load i32, i32* %5, align 8, !dbg !3976
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !3976
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !3976
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !3976

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3976
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !3976
  %bf.load9 = load i32, i32* %7, align 8, !dbg !3976
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !3976
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !3976
  br i1 %cmp11, label %if.end, label %if.then, !dbg !3978

if.then:                                          ; preds = %lor.lhs.false8
  br label %return, !dbg !3979

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !3980
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 1, !dbg !3980
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 6, !dbg !3980
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3980
  %tobool = icmp ne %struct.dataflow* %9, null, !dbg !3980
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3980

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 3935, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3980
  br label %cond.end, !dbg !3980

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !3980

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3980
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3981
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !3982
  call void @df_simulate_find_defs(%struct.rtx_def* %10, %struct.bitmap_head_def* %11), !dbg !3983
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3984
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !3984
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3984
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 7, !dbg !3984
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !3984
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3984
  store %struct.rtx_def* %13, %struct.rtx_def** %link, align 8, !dbg !3986
  br label %for.cond, !dbg !3987

for.cond:                                         ; preds = %for.inc, %cond.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !3988
  %tobool13 = icmp ne %struct.rtx_def* %14, null, !dbg !3990
  br i1 %tobool13, label %for.body, label %for.end, !dbg !3990

for.body:                                         ; preds = %for.cond
  %15 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !3991
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !3991
  %bf.load14 = load i32, i32* %16, align 8, !dbg !3991
  %bf.lshr = lshr i32 %bf.load14, 16, !dbg !3991
  %bf.clear15 = and i32 %bf.lshr, 255, !dbg !3991
  switch i32 %bf.clear15, label %sw.default [
    i32 1, label %sw.bb
    i32 6, label %sw.bb
  ], !dbg !3993

sw.bb:                                            ; preds = %for.body, %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg, metadata !3994, metadata !DIExpression()), !dbg !3997
  %17 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !3998
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !3998
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !3998
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 0, !dbg !3998
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !3998
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !3998
  store %struct.rtx_def* %18, %struct.rtx_def** %reg, align 8, !dbg !3997
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !3999, metadata !DIExpression()), !dbg !4000
  %19 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4001
  %call = call i32 @rhs_regno(%struct.rtx_def* %19), !dbg !4001
  store i32 %call, i32* %regno, align 4, !dbg !4000
  %20 = load i32, i32* %regno, align 4, !dbg !4002
  %cmp20 = icmp slt i32 %20, 53, !dbg !4004
  br i1 %cmp20, label %if.then21, label %if.else, !dbg !4005

if.then21:                                        ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i32* %n, metadata !4006, metadata !DIExpression()), !dbg !4008
  %21 = load i32, i32* %regno, align 4, !dbg !4009
  %idxprom = sext i32 %21 to i64, !dbg !4010
  %arrayidx22 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !4010
  %22 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !4011
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !4011
  %bf.load23 = load i32, i32* %23, align 8, !dbg !4011
  %bf.lshr24 = lshr i32 %bf.load23, 16, !dbg !4011
  %bf.clear25 = and i32 %bf.lshr24, 255, !dbg !4011
  %idxprom26 = zext i32 %bf.clear25 to i64, !dbg !4010
  %arrayidx27 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx22, i64 0, i64 %idxprom26, !dbg !4010
  %24 = load i8, i8* %arrayidx27, align 1, !dbg !4010
  %conv = zext i8 %24 to i32, !dbg !4010
  store i32 %conv, i32* %n, align 4, !dbg !4008
  br label %while.cond, !dbg !4012

while.cond:                                       ; preds = %while.body, %if.then21
  %25 = load i32, i32* %n, align 4, !dbg !4013
  %dec = add nsw i32 %25, -1, !dbg !4013
  store i32 %dec, i32* %n, align 4, !dbg !4013
  %cmp28 = icmp sge i32 %dec, 0, !dbg !4014
  br i1 %cmp28, label %while.body, label %while.end, !dbg !4012

while.body:                                       ; preds = %while.cond
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !4015
  %27 = load i32, i32* %regno, align 4, !dbg !4016
  %28 = load i32, i32* %n, align 4, !dbg !4017
  %add = add nsw i32 %27, %28, !dbg !4018
  %call30 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %26, i32 %add), !dbg !4019
  br label %while.cond, !dbg !4012, !llvm.loop !4020

while.end:                                        ; preds = %while.cond
  br label %if.end32, !dbg !4022

if.else:                                          ; preds = %sw.bb
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !4023
  %30 = load i32, i32* %regno, align 4, !dbg !4024
  %call31 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %29, i32 %30), !dbg !4025
  br label %if.end32

if.end32:                                         ; preds = %if.else, %while.end
  br label %sw.epilog, !dbg !4026

sw.default:                                       ; preds = %for.body
  br label %sw.epilog, !dbg !4027

sw.epilog:                                        ; preds = %sw.default, %if.end32
  br label %for.inc, !dbg !4028

for.inc:                                          ; preds = %sw.epilog
  %31 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !4029
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !4029
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !4029
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 1, !dbg !4029
  %rt_rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**, !dbg !4029
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx36, align 8, !dbg !4029
  store %struct.rtx_def* %32, %struct.rtx_def** %link, align 8, !dbg !4030
  br label %for.cond, !dbg !4031, !llvm.loop !4032

for.end:                                          ; preds = %for.cond
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4034
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !4035
  call void @df_simulate_fixup_sets(%struct.basic_block_def* %33, %struct.bitmap_head_def* %34), !dbg !4036
  br label %return, !dbg !4037

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !4037
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rhs_regno(%struct.rtx_def* %x) #0 !dbg !4038 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4044, metadata !DIExpression()), !dbg !4045
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4046
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4046
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4046
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4046
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4046
  %1 = load i32, i32* %rt_uint, align 8, !dbg !4046
  ret i32 %1, !dbg !4047
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_md_simulate_artificial_defs_at_top(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %local_md) #0 !dbg !4048 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %local_md.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %def_rec = alloca %union.df_ref_d**, align 8
  %def = alloca %union.df_ref_d*, align 8
  %dregno = alloca i32, align 4
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4049, metadata !DIExpression()), !dbg !4050
  store %struct.bitmap_head_def* %local_md, %struct.bitmap_head_def** %local_md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %local_md.addr, metadata !4051, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !4053, metadata !DIExpression()), !dbg !4054
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4055
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !4056
  %1 = load i32, i32* %index, align 8, !dbg !4056
  store i32 %1, i32* %bb_index, align 4, !dbg !4054
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !4057, metadata !DIExpression()), !dbg !4058
  %2 = load i32, i32* %bb_index, align 4, !dbg !4059
  %call = call %union.df_ref_d** @df_get_artificial_defs(i32 %2), !dbg !4061
  store %union.df_ref_d** %call, %union.df_ref_d*** %def_rec, align 8, !dbg !4062
  br label %for.cond, !dbg !4063

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !4064
  %4 = load %union.df_ref_d*, %union.df_ref_d** %3, align 8, !dbg !4066
  %tobool = icmp ne %union.df_ref_d* %4, null, !dbg !4067
  br i1 %tobool, label %for.body, label %for.end, !dbg !4067

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !4068, metadata !DIExpression()), !dbg !4070
  %5 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !4071
  %6 = load %union.df_ref_d*, %union.df_ref_d** %5, align 8, !dbg !4072
  store %union.df_ref_d* %6, %union.df_ref_d** %def, align 8, !dbg !4070
  %7 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !4073
  %base = bitcast %union.df_ref_d* %7 to %struct.df_base_ref*, !dbg !4073
  %8 = bitcast %struct.df_base_ref* %base to i32*, !dbg !4073
  %bf.load = load i32, i32* %8, align 8, !dbg !4073
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !4073
  %and = and i32 %bf.ashr, 2, !dbg !4075
  %tobool1 = icmp ne i32 %and, 0, !dbg !4075
  br i1 %tobool1, label %if.then, label %if.end11, !dbg !4076

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !4077, metadata !DIExpression()), !dbg !4079
  %9 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !4080
  %base2 = bitcast %union.df_ref_d* %9 to %struct.df_base_ref*, !dbg !4080
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base2, i32 0, i32 6, !dbg !4080
  %10 = load i32, i32* %regno, align 8, !dbg !4080
  store i32 %10, i32* %dregno, align 4, !dbg !4079
  %11 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !4081
  %base3 = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !4081
  %12 = bitcast %struct.df_base_ref* %base3 to i32*, !dbg !4081
  %bf.load4 = load i32, i32* %12, align 8, !dbg !4081
  %bf.ashr5 = ashr i32 %bf.load4, 16, !dbg !4081
  %and6 = and i32 %bf.ashr5, 81, !dbg !4083
  %tobool7 = icmp ne i32 %and6, 0, !dbg !4083
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !4084

if.then8:                                         ; preds = %if.then
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %local_md.addr, align 8, !dbg !4085
  %14 = load i32, i32* %dregno, align 4, !dbg !4086
  %call9 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %13, i32 %14), !dbg !4087
  br label %if.end, !dbg !4087

if.else:                                          ; preds = %if.then
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %local_md.addr, align 8, !dbg !4088
  %16 = load i32, i32* %dregno, align 4, !dbg !4089
  %call10 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %15, i32 %16), !dbg !4090
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end11, !dbg !4091

if.end11:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !4092

for.inc:                                          ; preds = %if.end11
  %17 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !4093
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %17, i32 1, !dbg !4093
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !4093
  br label %for.cond, !dbg !4094, !llvm.loop !4095

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4097
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_md_simulate_one_insn(%struct.basic_block_def* %bb, %struct.rtx_def* %insn, %struct.bitmap_head_def* %local_md) #0 !dbg !4098 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %local_md.addr = alloca %struct.bitmap_head_def*, align 8
  %uid = alloca i32, align 4
  %def_rec = alloca %union.df_ref_d**, align 8
  %def = alloca %union.df_ref_d*, align 8
  %dregno = alloca i32, align 4
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4099, metadata !DIExpression()), !dbg !4100
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4101, metadata !DIExpression()), !dbg !4102
  store %struct.bitmap_head_def* %local_md, %struct.bitmap_head_def** %local_md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %local_md.addr, metadata !4103, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !4105, metadata !DIExpression()), !dbg !4106
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4107
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4107
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4107
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4107
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4107
  %1 = load i32, i32* %rt_int, align 8, !dbg !4107
  store i32 %1, i32* %uid, align 4, !dbg !4106
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !4108, metadata !DIExpression()), !dbg !4109
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !4110
  %insns = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 10, !dbg !4110
  %3 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !4110
  %4 = load i32, i32* %uid, align 4, !dbg !4110
  %idxprom = zext i32 %4 to i64, !dbg !4110
  %arrayidx1 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %3, i64 %idxprom, !dbg !4110
  %5 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx1, align 8, !dbg !4110
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %5, i32 0, i32 1, !dbg !4110
  %6 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !4110
  store %union.df_ref_d** %6, %union.df_ref_d*** %def_rec, align 8, !dbg !4112
  br label %for.cond, !dbg !4113

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !4114
  %8 = load %union.df_ref_d*, %union.df_ref_d** %7, align 8, !dbg !4116
  %tobool = icmp ne %union.df_ref_d* %8, null, !dbg !4117
  br i1 %tobool, label %for.body, label %for.end, !dbg !4117

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !4118, metadata !DIExpression()), !dbg !4120
  %9 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !4121
  %10 = load %union.df_ref_d*, %union.df_ref_d** %9, align 8, !dbg !4122
  store %union.df_ref_d* %10, %union.df_ref_d** %def, align 8, !dbg !4120
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !4123, metadata !DIExpression()), !dbg !4124
  %11 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !4125
  %base = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !4125
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 6, !dbg !4125
  %12 = load i32, i32* %regno, align 8, !dbg !4125
  store i32 %12, i32* %dregno, align 4, !dbg !4124
  %13 = load %struct.df*, %struct.df** @df, align 8, !dbg !4126
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %13, i32 0, i32 27, !dbg !4128
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !4128
  %bf.cast = sext i8 %bf.load to i32, !dbg !4128
  %and = and i32 %bf.cast, 2, !dbg !4129
  %tobool2 = icmp ne i32 %and, 0, !dbg !4129
  br i1 %tobool2, label %lor.lhs.false, label %if.then, !dbg !4130

lor.lhs.false:                                    ; preds = %for.body
  %14 = load i32, i32* %dregno, align 4, !dbg !4131
  %cmp = icmp uge i32 %14, 53, !dbg !4132
  br i1 %cmp, label %if.then, label %if.end12, !dbg !4133

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %15 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !4134
  %base3 = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !4134
  %16 = bitcast %struct.df_base_ref* %base3 to i32*, !dbg !4134
  %bf.load4 = load i32, i32* %16, align 8, !dbg !4134
  %bf.ashr = ashr i32 %bf.load4, 16, !dbg !4134
  %and5 = and i32 %bf.ashr, 81, !dbg !4137
  %tobool6 = icmp ne i32 %and5, 0, !dbg !4137
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !4138

if.then7:                                         ; preds = %if.then
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %local_md.addr, align 8, !dbg !4139
  %18 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !4140
  %base8 = bitcast %union.df_ref_d* %18 to %struct.df_base_ref*, !dbg !4140
  %id = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base8, i32 0, i32 7, !dbg !4140
  %19 = load i32, i32* %id, align 4, !dbg !4140
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %17, i32 %19), !dbg !4141
  br label %if.end, !dbg !4141

if.else:                                          ; preds = %if.then
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %local_md.addr, align 8, !dbg !4142
  %21 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !4143
  %base9 = bitcast %union.df_ref_d* %21 to %struct.df_base_ref*, !dbg !4143
  %id10 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base9, i32 0, i32 7, !dbg !4143
  %22 = load i32, i32* %id10, align 4, !dbg !4143
  %call11 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %20, i32 %22), !dbg !4144
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end12, !dbg !4145

if.end12:                                         ; preds = %if.end, %lor.lhs.false
  br label %for.inc, !dbg !4146

for.inc:                                          ; preds = %if.end12
  %23 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !4147
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %23, i32 1, !dbg !4147
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !4147
  br label %for.cond, !dbg !4148, !llvm.loop !4149

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4151
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @df_md_add_problem() #0 !dbg !4152 {
entry:
  call void @df_add_problem(%struct.df_problem* @problem_MD), !dbg !4153
  ret void, !dbg !4154
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !4155 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !4158, metadata !DIExpression()), !dbg !4159
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !4160
  %3 = load i32, i32* %index, align 8, !dbg !4160
  %4 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !4161
  %5 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 0, !dbg !4161
  %6 = load i32, i32* %5, align 8, !dbg !4161
  %7 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 1, !dbg !4161
  %8 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %7, align 8, !dbg !4161
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %6, %struct.VEC_edge_gc** %8), !dbg !4161
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !4161
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4161

cond.true:                                        ; preds = %entry
  %9 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !4161
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !4161
  %11 = load i32, i32* %10, align 8, !dbg !4161
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !4161
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !4161
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !4161
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !4161
  br label %cond.end, !dbg !4161

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4161

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4161
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !4161
  %cmp = icmp eq i32 %3, %call2, !dbg !4162
  %conv = zext i1 %cmp to i32, !dbg !4162
  %conv3 = trunc i32 %conv to i8, !dbg !4163
  ret i8 %conv3, !dbg !4164
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !4165 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !4168, metadata !DIExpression()), !dbg !4169
  %3 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !4170
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !4170
  %5 = load i32, i32* %4, align 8, !dbg !4170
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !4170
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !4170
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !4170
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !4170
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4170

cond.true:                                        ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !4170
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !4170
  %10 = load i32, i32* %9, align 8, !dbg !4170
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !4170
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !4170
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %10, %struct.VEC_edge_gc** %12), !dbg !4170
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !4170
  br label %cond.end, !dbg !4170

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4170

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4170
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !4170
  %13 = load i32, i32* %index, align 8, !dbg !4170
  %call2 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %13), !dbg !4170
  ret %struct.edge_def* %call2, !dbg !4171
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) #0 !dbg !4172 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !4177, metadata !DIExpression()), !dbg !4178
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !4178
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !4178
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4178

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !4178
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %1, i32 0, i32 0, !dbg !4178
  %2 = load i32, i32* %num, align 8, !dbg !4178
  br label %cond.end, !dbg !4178

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4178

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !4178
  ret i32 %cond, !dbg !4178
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !4179 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !4182, metadata !DIExpression()), !dbg !4183
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !4184
  %3 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container, align 8, !dbg !4184
  %tobool = icmp ne %struct.VEC_edge_gc** %3, null, !dbg !4184
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4184

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4184
  br label %cond.end, !dbg !4184

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4184

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !4184
  %container1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !4185
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container1, align 8, !dbg !4185
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %4, align 8, !dbg !4186
  ret %struct.VEC_edge_gc* %5, !dbg !4187
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) #0 !dbg !4188 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !4191, metadata !DIExpression()), !dbg !4192
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !4193, metadata !DIExpression()), !dbg !4192
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !4192
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !4192
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4192

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !4192
  %2 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !4192
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %2, i32 0, i32 0, !dbg !4192
  %3 = load i32, i32* %num, align 8, !dbg !4192
  %cmp = icmp ult i32 %1, %3, !dbg !4192
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !4194
  %land.ext = zext i1 %4 to i32, !dbg !4192
  %5 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !4192
  %vec = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %5, i32 0, i32 2, !dbg !4192
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !4192
  %idxprom = zext i32 %6 to i64, !dbg !4192
  %arrayidx = getelementptr inbounds [1 x %struct.edge_def*], [1 x %struct.edge_def*]* %vec, i64 0, i64 %idxprom, !dbg !4192
  %7 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !4192
  ret %struct.edge_def* %7, !dbg !4192
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_rd_alloc(%struct.bitmap_head_def* %all_blocks) #0 !dbg !4195 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %problem_data = alloca %struct.df_rd_problem_data*, align 8
  %bb_info = alloca %struct.df_rd_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !4196, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !4198, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !4200, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.declare(metadata %struct.df_rd_problem_data** %problem_data, metadata !4209, metadata !DIExpression()), !dbg !4210
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4211
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !4211
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 3, !dbg !4211
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4211
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 3, !dbg !4213
  %2 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !4213
  %tobool = icmp ne %struct.alloc_pool_def* %2, null, !dbg !4211
  br i1 %tobool, label %if.end, label %if.then, !dbg !4214

if.then:                                          ; preds = %entry
  %call = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i64 40, i64 50), !dbg !4215
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !4216
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !4216
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 3, !dbg !4216
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !4216
  %block_pool3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 3, !dbg !4217
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** %block_pool3, align 8, !dbg !4218
  br label %if.end, !dbg !4216

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !4219
  %problems_by_index4 = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 1, !dbg !4219
  %arrayidx5 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index4, i64 0, i64 3, !dbg !4219
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx5, align 8, !dbg !4219
  %problem_data6 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i32 0, i32 5, !dbg !4221
  %7 = load i8*, i8** %problem_data6, align 8, !dbg !4221
  %tobool7 = icmp ne i8* %7, null, !dbg !4219
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !4222

if.then8:                                         ; preds = %if.end
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !4223
  %problems_by_index9 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 1, !dbg !4223
  %arrayidx10 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index9, i64 0, i64 3, !dbg !4223
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx10, align 8, !dbg !4223
  %problem_data11 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %9, i32 0, i32 5, !dbg !4225
  %10 = load i8*, i8** %problem_data11, align 8, !dbg !4225
  %11 = bitcast i8* %10 to %struct.df_rd_problem_data*, !dbg !4226
  store %struct.df_rd_problem_data* %11, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4227
  %12 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4228
  %sparse_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %12, i32 0, i32 0, !dbg !4229
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_invalidated_by_call, align 8, !dbg !4229
  call void @bitmap_clear(%struct.bitmap_head_def* %13), !dbg !4230
  %14 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4231
  %dense_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %14, i32 0, i32 1, !dbg !4232
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dense_invalidated_by_call, align 8, !dbg !4232
  call void @bitmap_clear(%struct.bitmap_head_def* %15), !dbg !4233
  br label %if.end22, !dbg !4234

if.else:                                          ; preds = %if.end
  %call12 = call i8* @xmalloc(i64 120), !dbg !4235
  %16 = bitcast i8* %call12 to %struct.df_rd_problem_data*, !dbg !4235
  store %struct.df_rd_problem_data* %16, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4237
  %17 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4238
  %18 = bitcast %struct.df_rd_problem_data* %17 to i8*, !dbg !4238
  %19 = load %struct.df*, %struct.df** @df, align 8, !dbg !4239
  %problems_by_index13 = getelementptr inbounds %struct.df, %struct.df* %19, i32 0, i32 1, !dbg !4239
  %arrayidx14 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index13, i64 0, i64 3, !dbg !4239
  %20 = load %struct.dataflow*, %struct.dataflow** %arrayidx14, align 8, !dbg !4239
  %problem_data15 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %20, i32 0, i32 5, !dbg !4240
  store i8* %18, i8** %problem_data15, align 8, !dbg !4241
  %21 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4242
  %rd_bitmaps = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %21, i32 0, i32 2, !dbg !4243
  call void @bitmap_obstack_initialize(%struct.bitmap_obstack* %rd_bitmaps), !dbg !4244
  %22 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4245
  %rd_bitmaps16 = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %22, i32 0, i32 2, !dbg !4245
  %call17 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %rd_bitmaps16), !dbg !4245
  %23 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4246
  %sparse_invalidated_by_call18 = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %23, i32 0, i32 0, !dbg !4247
  store %struct.bitmap_head_def* %call17, %struct.bitmap_head_def** %sparse_invalidated_by_call18, align 8, !dbg !4248
  %24 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4249
  %rd_bitmaps19 = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %24, i32 0, i32 2, !dbg !4249
  %call20 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %rd_bitmaps19), !dbg !4249
  %25 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4250
  %dense_invalidated_by_call21 = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %25, i32 0, i32 1, !dbg !4251
  store %struct.bitmap_head_def* %call20, %struct.bitmap_head_def** %dense_invalidated_by_call21, align 8, !dbg !4252
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then8
  %26 = load %struct.df*, %struct.df** @df, align 8, !dbg !4253
  %problems_by_index23 = getelementptr inbounds %struct.df, %struct.df* %26, i32 0, i32 1, !dbg !4253
  %arrayidx24 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index23, i64 0, i64 3, !dbg !4253
  %27 = load %struct.dataflow*, %struct.dataflow** %arrayidx24, align 8, !dbg !4253
  call void @df_grow_bb_info(%struct.dataflow* %27), !dbg !4254
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !4255
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %28, i32 0, i32* %bb_index), !dbg !4255
  br label %for.cond, !dbg !4255

for.cond:                                         ; preds = %for.inc, %if.end22
  %call25 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !4257
  %tobool26 = icmp ne i8 %call25, 0, !dbg !4255
  br i1 %tobool26, label %for.body, label %for.end, !dbg !4255

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_rd_bb_info** %bb_info, metadata !4259, metadata !DIExpression()), !dbg !4261
  %29 = load i32, i32* %bb_index, align 4, !dbg !4262
  %call27 = call %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %29), !dbg !4263
  store %struct.df_rd_bb_info* %call27, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4261
  %30 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4264
  %tobool28 = icmp ne %struct.df_rd_bb_info* %30, null, !dbg !4264
  br i1 %tobool28, label %if.then29, label %if.else30, !dbg !4266

if.then29:                                        ; preds = %for.body
  %31 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4267
  %kill = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %31, i32 0, i32 0, !dbg !4269
  %32 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !4269
  call void @bitmap_clear(%struct.bitmap_head_def* %32), !dbg !4270
  %33 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4271
  %sparse_kill = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %33, i32 0, i32 1, !dbg !4272
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_kill, align 8, !dbg !4272
  call void @bitmap_clear(%struct.bitmap_head_def* %34), !dbg !4273
  %35 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4274
  %gen = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %35, i32 0, i32 2, !dbg !4275
  %36 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !4275
  call void @bitmap_clear(%struct.bitmap_head_def* %36), !dbg !4276
  br label %if.end48, !dbg !4277

if.else30:                                        ; preds = %for.body
  %37 = load %struct.df*, %struct.df** @df, align 8, !dbg !4278
  %problems_by_index31 = getelementptr inbounds %struct.df, %struct.df* %37, i32 0, i32 1, !dbg !4278
  %arrayidx32 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index31, i64 0, i64 3, !dbg !4278
  %38 = load %struct.dataflow*, %struct.dataflow** %arrayidx32, align 8, !dbg !4278
  %block_pool33 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %38, i32 0, i32 3, !dbg !4280
  %39 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool33, align 8, !dbg !4280
  %call34 = call i8* @pool_alloc(%struct.alloc_pool_def* %39), !dbg !4281
  %40 = bitcast i8* %call34 to %struct.df_rd_bb_info*, !dbg !4282
  store %struct.df_rd_bb_info* %40, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4283
  %41 = load i32, i32* %bb_index, align 4, !dbg !4284
  %42 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4285
  call void @df_rd_set_bb_info(i32 %41, %struct.df_rd_bb_info* %42), !dbg !4286
  %43 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4287
  %rd_bitmaps35 = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %43, i32 0, i32 2, !dbg !4287
  %call36 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %rd_bitmaps35), !dbg !4287
  %44 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4288
  %kill37 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %44, i32 0, i32 0, !dbg !4289
  store %struct.bitmap_head_def* %call36, %struct.bitmap_head_def** %kill37, align 8, !dbg !4290
  %45 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4291
  %rd_bitmaps38 = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %45, i32 0, i32 2, !dbg !4291
  %call39 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %rd_bitmaps38), !dbg !4291
  %46 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4292
  %sparse_kill40 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %46, i32 0, i32 1, !dbg !4293
  store %struct.bitmap_head_def* %call39, %struct.bitmap_head_def** %sparse_kill40, align 8, !dbg !4294
  %47 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4295
  %rd_bitmaps41 = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %47, i32 0, i32 2, !dbg !4295
  %call42 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %rd_bitmaps41), !dbg !4295
  %48 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4296
  %gen43 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %48, i32 0, i32 2, !dbg !4297
  store %struct.bitmap_head_def* %call42, %struct.bitmap_head_def** %gen43, align 8, !dbg !4298
  %49 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4299
  %rd_bitmaps44 = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %49, i32 0, i32 2, !dbg !4299
  %call45 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %rd_bitmaps44), !dbg !4299
  %50 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4300
  %in = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %50, i32 0, i32 3, !dbg !4301
  store %struct.bitmap_head_def* %call45, %struct.bitmap_head_def** %in, align 8, !dbg !4302
  %51 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4303
  %rd_bitmaps46 = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %51, i32 0, i32 2, !dbg !4303
  %call47 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %rd_bitmaps46), !dbg !4303
  %52 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4304
  %out = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %52, i32 0, i32 4, !dbg !4305
  store %struct.bitmap_head_def* %call47, %struct.bitmap_head_def** %out, align 8, !dbg !4306
  br label %if.end48

if.end48:                                         ; preds = %if.else30, %if.then29
  br label %for.inc, !dbg !4307

for.inc:                                          ; preds = %if.end48
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !4257
  br label %for.cond, !dbg !4257, !llvm.loop !4308

for.end:                                          ; preds = %for.cond
  %53 = load %struct.df*, %struct.df** @df, align 8, !dbg !4310
  %problems_by_index49 = getelementptr inbounds %struct.df, %struct.df* %53, i32 0, i32 1, !dbg !4310
  %arrayidx50 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index49, i64 0, i64 3, !dbg !4310
  %54 = load %struct.dataflow*, %struct.dataflow** %arrayidx50, align 8, !dbg !4310
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %54, i32 0, i32 9, !dbg !4311
  store i8 1, i8* %optional_p, align 2, !dbg !4312
  ret void, !dbg !4313
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_rd_free_bb_info(%struct.basic_block_def* %bb, i8* %vbb_info) #0 !dbg !4314 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %vbb_info.addr = alloca i8*, align 8
  %bb_info = alloca %struct.df_rd_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4315, metadata !DIExpression()), !dbg !4316
  store i8* %vbb_info, i8** %vbb_info.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vbb_info.addr, metadata !4317, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.declare(metadata %struct.df_rd_bb_info** %bb_info, metadata !4319, metadata !DIExpression()), !dbg !4320
  %0 = load i8*, i8** %vbb_info.addr, align 8, !dbg !4321
  %1 = bitcast i8* %0 to %struct.df_rd_bb_info*, !dbg !4322
  store %struct.df_rd_bb_info* %1, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4320
  %2 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4323
  %tobool = icmp ne %struct.df_rd_bb_info* %2, null, !dbg !4323
  br i1 %tobool, label %if.then, label %if.end, !dbg !4325

if.then:                                          ; preds = %entry
  %3 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4326
  %kill = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %3, i32 0, i32 0, !dbg !4326
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !4326
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %4), !dbg !4326
  %5 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4326
  %kill1 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %5, i32 0, i32 0, !dbg !4326
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %kill1, align 8, !dbg !4326
  %6 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4328
  %sparse_kill = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %6, i32 0, i32 1, !dbg !4328
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_kill, align 8, !dbg !4328
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %7), !dbg !4328
  %8 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4328
  %sparse_kill2 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %8, i32 0, i32 1, !dbg !4328
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %sparse_kill2, align 8, !dbg !4328
  %9 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4329
  %gen = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %9, i32 0, i32 2, !dbg !4329
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !4329
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %10), !dbg !4329
  %11 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4329
  %gen3 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %11, i32 0, i32 2, !dbg !4329
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %gen3, align 8, !dbg !4329
  %12 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4330
  %in = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %12, i32 0, i32 3, !dbg !4330
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !4330
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %13), !dbg !4330
  %14 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4330
  %in4 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %14, i32 0, i32 3, !dbg !4330
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in4, align 8, !dbg !4330
  %15 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4331
  %out = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %15, i32 0, i32 4, !dbg !4331
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !4331
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %16), !dbg !4331
  %17 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4331
  %out5 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %17, i32 0, i32 4, !dbg !4331
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out5, align 8, !dbg !4331
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !4332
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 1, !dbg !4332
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 3, !dbg !4332
  %19 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4332
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %19, i32 0, i32 3, !dbg !4333
  %20 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !4333
  %21 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4334
  %22 = bitcast %struct.df_rd_bb_info* %21 to i8*, !dbg !4334
  call void @pool_free(%struct.alloc_pool_def* %20, i8* %22), !dbg !4335
  br label %if.end, !dbg !4336

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4337
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_rd_local_compute(%struct.bitmap_head_def* %all_blocks) #0 !dbg !4338 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %regno = alloca i32, align 4
  %problem_data = alloca %struct.df_rd_problem_data*, align 8
  %sparse_invalidated = alloca %struct.bitmap_head_def*, align 8
  %dense_invalidated = alloca %struct.bitmap_head_def*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !4339, metadata !DIExpression()), !dbg !4340
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !4341, metadata !DIExpression()), !dbg !4342
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !4343, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !4345, metadata !DIExpression()), !dbg !4346
  call void @llvm.dbg.declare(metadata %struct.df_rd_problem_data** %problem_data, metadata !4347, metadata !DIExpression()), !dbg !4348
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4349
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !4349
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 3, !dbg !4349
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4349
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !4350
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !4350
  %3 = bitcast i8* %2 to %struct.df_rd_problem_data*, !dbg !4351
  store %struct.df_rd_problem_data* %3, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4348
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %sparse_invalidated, metadata !4352, metadata !DIExpression()), !dbg !4353
  %4 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4354
  %sparse_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %4, i32 0, i32 0, !dbg !4355
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_invalidated_by_call, align 8, !dbg !4355
  store %struct.bitmap_head_def* %5, %struct.bitmap_head_def** %sparse_invalidated, align 8, !dbg !4353
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %dense_invalidated, metadata !4356, metadata !DIExpression()), !dbg !4357
  %6 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4358
  %dense_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %6, i32 0, i32 1, !dbg !4359
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dense_invalidated_by_call, align 8, !dbg !4359
  store %struct.bitmap_head_def* %7, %struct.bitmap_head_def** %dense_invalidated, align 8, !dbg !4357
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !4360
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @seen_in_block, align 8, !dbg !4361
  %call2 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !4362
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !4363
  call void @df_maybe_reorganize_def_refs(i32 3), !dbg !4364
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !4365
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %8, i32 0, i32* %bb_index), !dbg !4365
  br label %for.cond, !dbg !4365

for.cond:                                         ; preds = %for.inc, %entry
  %call3 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !4367
  %tobool = icmp ne i8 %call3, 0, !dbg !4365
  br i1 %tobool, label %for.body, label %for.end, !dbg !4365

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %bb_index, align 4, !dbg !4369
  call void @df_rd_bb_local_compute(i32 %9), !dbg !4371
  br label %for.inc, !dbg !4372

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !4367
  br label %for.cond, !dbg !4367, !llvm.loop !4373

for.end:                                          ; preds = %for.cond
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @regs_invalidated_by_call_regset, align 8, !dbg !4375
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %10, i32 0, i32* %regno), !dbg !4375
  br label %for.cond4, !dbg !4375

for.cond4:                                        ; preds = %for.inc17, %for.end
  %call5 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %regno), !dbg !4377
  %tobool6 = icmp ne i8 %call5, 0, !dbg !4375
  br i1 %tobool6, label %for.body7, label %for.end18, !dbg !4375

for.body7:                                        ; preds = %for.cond4
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !4379
  %def_info = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 3, !dbg !4379
  %count = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 2, !dbg !4379
  %12 = load i32*, i32** %count, align 8, !dbg !4379
  %13 = load i32, i32* %regno, align 4, !dbg !4379
  %idxprom = zext i32 %13 to i64, !dbg !4379
  %arrayidx8 = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !4379
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !4379
  %cmp = icmp ugt i32 %14, 32, !dbg !4382
  br i1 %cmp, label %if.then, label %if.else, !dbg !4383

if.then:                                          ; preds = %for.body7
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_invalidated, align 8, !dbg !4384
  %16 = load i32, i32* %regno, align 4, !dbg !4385
  %call9 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %15, i32 %16), !dbg !4386
  br label %if.end, !dbg !4386

if.else:                                          ; preds = %for.body7
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dense_invalidated, align 8, !dbg !4387
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !4388
  %def_info10 = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 3, !dbg !4388
  %begin = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info10, i32 0, i32 1, !dbg !4388
  %19 = load i32*, i32** %begin, align 8, !dbg !4388
  %20 = load i32, i32* %regno, align 4, !dbg !4388
  %idxprom11 = zext i32 %20 to i64, !dbg !4388
  %arrayidx12 = getelementptr inbounds i32, i32* %19, i64 %idxprom11, !dbg !4388
  %21 = load i32, i32* %arrayidx12, align 4, !dbg !4388
  %22 = load %struct.df*, %struct.df** @df, align 8, !dbg !4389
  %def_info13 = getelementptr inbounds %struct.df, %struct.df* %22, i32 0, i32 3, !dbg !4389
  %count14 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info13, i32 0, i32 2, !dbg !4389
  %23 = load i32*, i32** %count14, align 8, !dbg !4389
  %24 = load i32, i32* %regno, align 4, !dbg !4389
  %idxprom15 = zext i32 %24 to i64, !dbg !4389
  %arrayidx16 = getelementptr inbounds i32, i32* %23, i64 %idxprom15, !dbg !4389
  %25 = load i32, i32* %arrayidx16, align 4, !dbg !4389
  call void @bitmap_set_range(%struct.bitmap_head_def* %17, i32 %21, i32 %25), !dbg !4390
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc17, !dbg !4391

for.inc17:                                        ; preds = %if.end
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %regno), !dbg !4377
  br label %for.cond4, !dbg !4377, !llvm.loop !4392

for.end18:                                        ; preds = %for.cond4
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_block, align 8, !dbg !4394
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %26), !dbg !4394
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @seen_in_block, align 8, !dbg !4394
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !4395
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %27), !dbg !4395
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !4395
  ret void, !dbg !4396
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_rd_init_solution(%struct.bitmap_head_def* %all_blocks) #0 !dbg !4397 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_rd_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !4398, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !4400, metadata !DIExpression()), !dbg !4401
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !4402, metadata !DIExpression()), !dbg !4403
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !4404
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %bb_index), !dbg !4404
  br label %for.cond, !dbg !4404

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !4406
  %tobool = icmp ne i8 %call, 0, !dbg !4404
  br i1 %tobool, label %for.body, label %for.end, !dbg !4404

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_rd_bb_info** %bb_info, metadata !4408, metadata !DIExpression()), !dbg !4410
  %1 = load i32, i32* %bb_index, align 4, !dbg !4411
  %call1 = call %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %1), !dbg !4412
  store %struct.df_rd_bb_info* %call1, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4410
  %2 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4413
  %out = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %2, i32 0, i32 4, !dbg !4414
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !4414
  %4 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4415
  %gen = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %4, i32 0, i32 2, !dbg !4416
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !4416
  call void @bitmap_copy(%struct.bitmap_head_def* %3, %struct.bitmap_head_def* %5), !dbg !4417
  %6 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4418
  %in = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %6, i32 0, i32 3, !dbg !4419
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !4419
  call void @bitmap_clear(%struct.bitmap_head_def* %7), !dbg !4420
  br label %for.inc, !dbg !4421

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !4406
  br label %for.cond, !dbg !4406, !llvm.loop !4422

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4424
}

declare dso_local void @df_worklist_dataflow(%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_rd_confluence_n(%struct.edge_def* %e) #0 !dbg !4425 {
entry:
  %e.addr = alloca %struct.edge_def*, align 8
  %op1 = alloca %struct.bitmap_head_def*, align 8
  %op2 = alloca %struct.bitmap_head_def*, align 8
  %problem_data = alloca %struct.df_rd_problem_data*, align 8
  %sparse_invalidated = alloca %struct.bitmap_head_def*, align 8
  %dense_invalidated = alloca %struct.bitmap_head_def*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %regno = alloca i32, align 4
  %tmp = alloca %struct.bitmap_head_def*, align 8
  store %struct.edge_def* %e, %struct.edge_def** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e.addr, metadata !4426, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %op1, metadata !4428, metadata !DIExpression()), !dbg !4429
  %0 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !4430
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %0, i32 0, i32 1, !dbg !4431
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4431
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 9, !dbg !4432
  %2 = load i32, i32* %index, align 8, !dbg !4432
  %call = call %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %2), !dbg !4433
  %in = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call, i32 0, i32 3, !dbg !4434
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !4434
  store %struct.bitmap_head_def* %3, %struct.bitmap_head_def** %op1, align 8, !dbg !4429
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %op2, metadata !4435, metadata !DIExpression()), !dbg !4436
  %4 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !4437
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %4, i32 0, i32 0, !dbg !4438
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4438
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 9, !dbg !4439
  %6 = load i32, i32* %index1, align 8, !dbg !4439
  %call2 = call %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %6), !dbg !4440
  %out = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call2, i32 0, i32 4, !dbg !4441
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !4441
  store %struct.bitmap_head_def* %7, %struct.bitmap_head_def** %op2, align 8, !dbg !4436
  %8 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !4442
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %8, i32 0, i32 7, !dbg !4444
  %9 = load i32, i32* %flags, align 8, !dbg !4444
  %and = and i32 %9, 16, !dbg !4445
  %tobool = icmp ne i32 %and, 0, !dbg !4445
  br i1 %tobool, label %if.then, label %if.end, !dbg !4446

if.then:                                          ; preds = %entry
  br label %if.end18, !dbg !4447

if.end:                                           ; preds = %entry
  %10 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !4448
  %flags3 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %10, i32 0, i32 7, !dbg !4450
  %11 = load i32, i32* %flags3, align 8, !dbg !4450
  %and4 = and i32 %11, 8, !dbg !4451
  %tobool5 = icmp ne i32 %and4, 0, !dbg !4451
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !4452

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.df_rd_problem_data** %problem_data, metadata !4453, metadata !DIExpression()), !dbg !4455
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !4456
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 1, !dbg !4456
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 3, !dbg !4456
  %13 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4456
  %problem_data7 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %13, i32 0, i32 5, !dbg !4457
  %14 = load i8*, i8** %problem_data7, align 8, !dbg !4457
  %15 = bitcast i8* %14 to %struct.df_rd_problem_data*, !dbg !4458
  store %struct.df_rd_problem_data* %15, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4455
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %sparse_invalidated, metadata !4459, metadata !DIExpression()), !dbg !4460
  %16 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4461
  %sparse_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %16, i32 0, i32 0, !dbg !4462
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_invalidated_by_call, align 8, !dbg !4462
  store %struct.bitmap_head_def* %17, %struct.bitmap_head_def** %sparse_invalidated, align 8, !dbg !4460
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %dense_invalidated, metadata !4463, metadata !DIExpression()), !dbg !4464
  %18 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4465
  %dense_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %18, i32 0, i32 1, !dbg !4466
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dense_invalidated_by_call, align 8, !dbg !4466
  store %struct.bitmap_head_def* %19, %struct.bitmap_head_def** %dense_invalidated, align 8, !dbg !4464
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !4467, metadata !DIExpression()), !dbg !4468
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !4469, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %tmp, metadata !4471, metadata !DIExpression()), !dbg !4472
  %call8 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !4473
  store %struct.bitmap_head_def* %call8, %struct.bitmap_head_def** %tmp, align 8, !dbg !4472
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !4474
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op2, align 8, !dbg !4475
  call void @bitmap_copy(%struct.bitmap_head_def* %20, %struct.bitmap_head_def* %21), !dbg !4476
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !4477
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dense_invalidated, align 8, !dbg !4478
  %call9 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %22, %struct.bitmap_head_def* %23), !dbg !4479
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_invalidated, align 8, !dbg !4480
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %24, i32 0, i32* %regno), !dbg !4480
  br label %for.cond, !dbg !4480

for.cond:                                         ; preds = %for.inc, %if.then6
  %call10 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %regno), !dbg !4482
  %tobool11 = icmp ne i8 %call10, 0, !dbg !4480
  br i1 %tobool11, label %for.body, label %for.end, !dbg !4480

for.body:                                         ; preds = %for.cond
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !4484
  %26 = load %struct.df*, %struct.df** @df, align 8, !dbg !4486
  %def_info = getelementptr inbounds %struct.df, %struct.df* %26, i32 0, i32 3, !dbg !4486
  %begin = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 1, !dbg !4486
  %27 = load i32*, i32** %begin, align 8, !dbg !4486
  %28 = load i32, i32* %regno, align 4, !dbg !4486
  %idxprom = zext i32 %28 to i64, !dbg !4486
  %arrayidx12 = getelementptr inbounds i32, i32* %27, i64 %idxprom, !dbg !4486
  %29 = load i32, i32* %arrayidx12, align 4, !dbg !4486
  %30 = load %struct.df*, %struct.df** @df, align 8, !dbg !4487
  %def_info13 = getelementptr inbounds %struct.df, %struct.df* %30, i32 0, i32 3, !dbg !4487
  %count = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info13, i32 0, i32 2, !dbg !4487
  %31 = load i32*, i32** %count, align 8, !dbg !4487
  %32 = load i32, i32* %regno, align 4, !dbg !4487
  %idxprom14 = zext i32 %32 to i64, !dbg !4487
  %arrayidx15 = getelementptr inbounds i32, i32* %31, i64 %idxprom14, !dbg !4487
  %33 = load i32, i32* %arrayidx15, align 4, !dbg !4487
  call void @bitmap_clear_range(%struct.bitmap_head_def* %25, i32 %29, i32 %33), !dbg !4488
  br label %for.inc, !dbg !4489

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %regno), !dbg !4482
  br label %for.cond, !dbg !4482, !llvm.loop !4490

for.end:                                          ; preds = %for.cond
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !4492
  %35 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !4493
  %call16 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %34, %struct.bitmap_head_def* %35), !dbg !4494
  %36 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !4495
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %36), !dbg !4495
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %tmp, align 8, !dbg !4495
  br label %if.end18, !dbg !4496

if.else:                                          ; preds = %if.end
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !4497
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op2, align 8, !dbg !4498
  %call17 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %37, %struct.bitmap_head_def* %38), !dbg !4499
  br label %if.end18

if.end18:                                         ; preds = %if.then, %if.else, %for.end
  ret void, !dbg !4500
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_rd_transfer_function(i32 %bb_index) #0 !dbg !4501 {
entry:
  %retval = alloca i8, align 1
  %bb_index.addr = alloca i32, align 4
  %bb_info = alloca %struct.df_rd_bb_info*, align 8
  %regno = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %in = alloca %struct.bitmap_head_def*, align 8
  %out = alloca %struct.bitmap_head_def*, align 8
  %gen = alloca %struct.bitmap_head_def*, align 8
  %kill = alloca %struct.bitmap_head_def*, align 8
  %sparse_kill = alloca %struct.bitmap_head_def*, align 8
  %problem_data = alloca %struct.df_rd_problem_data*, align 8
  %changed = alloca i8, align 1
  %tmp = alloca %struct.bitmap_head_def*, align 8
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !4502, metadata !DIExpression()), !dbg !4503
  call void @llvm.dbg.declare(metadata %struct.df_rd_bb_info** %bb_info, metadata !4504, metadata !DIExpression()), !dbg !4505
  %0 = load i32, i32* %bb_index.addr, align 4, !dbg !4506
  %call = call %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %0), !dbg !4507
  store %struct.df_rd_bb_info* %call, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4505
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !4510, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %in, metadata !4512, metadata !DIExpression()), !dbg !4513
  %1 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4514
  %in1 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %1, i32 0, i32 3, !dbg !4515
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in1, align 8, !dbg !4515
  store %struct.bitmap_head_def* %2, %struct.bitmap_head_def** %in, align 8, !dbg !4513
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %out, metadata !4516, metadata !DIExpression()), !dbg !4517
  %3 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4518
  %out2 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %3, i32 0, i32 4, !dbg !4519
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out2, align 8, !dbg !4519
  store %struct.bitmap_head_def* %4, %struct.bitmap_head_def** %out, align 8, !dbg !4517
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %gen, metadata !4520, metadata !DIExpression()), !dbg !4521
  %5 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4522
  %gen3 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %5, i32 0, i32 2, !dbg !4523
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen3, align 8, !dbg !4523
  store %struct.bitmap_head_def* %6, %struct.bitmap_head_def** %gen, align 8, !dbg !4521
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %kill, metadata !4524, metadata !DIExpression()), !dbg !4525
  %7 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4526
  %kill4 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %7, i32 0, i32 0, !dbg !4527
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill4, align 8, !dbg !4527
  store %struct.bitmap_head_def* %8, %struct.bitmap_head_def** %kill, align 8, !dbg !4525
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %sparse_kill, metadata !4528, metadata !DIExpression()), !dbg !4529
  %9 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4530
  %sparse_kill5 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %9, i32 0, i32 1, !dbg !4531
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_kill5, align 8, !dbg !4531
  store %struct.bitmap_head_def* %10, %struct.bitmap_head_def** %sparse_kill, align 8, !dbg !4529
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_kill, align 8, !dbg !4532
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %11, i32 0, i32 0, !dbg !4532
  %12 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !4532
  %tobool = icmp ne %struct.bitmap_element_def* %12, null, !dbg !4532
  br i1 %tobool, label %if.else, label %if.then, !dbg !4534

if.then:                                          ; preds = %entry
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !4535
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !4536
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !4537
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !4538
  %call6 = call zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def* %13, %struct.bitmap_head_def* %14, %struct.bitmap_head_def* %15, %struct.bitmap_head_def* %16), !dbg !4539
  store i8 %call6, i8* %retval, align 1, !dbg !4540
  br label %return, !dbg !4540

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.df_rd_problem_data** %problem_data, metadata !4541, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !4544, metadata !DIExpression()), !dbg !4545
  store i8 0, i8* %changed, align 1, !dbg !4545
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %tmp, metadata !4546, metadata !DIExpression()), !dbg !4547
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !4548
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %17, i32 0, i32 1, !dbg !4548
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 3, !dbg !4548
  %18 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4548
  %problem_data7 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %18, i32 0, i32 5, !dbg !4549
  %19 = load i8*, i8** %problem_data7, align 8, !dbg !4549
  %20 = bitcast i8* %19 to %struct.df_rd_problem_data*, !dbg !4550
  store %struct.df_rd_problem_data* %20, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4551
  %21 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4552
  %rd_bitmaps = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %21, i32 0, i32 2, !dbg !4552
  %call8 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %rd_bitmaps), !dbg !4552
  store %struct.bitmap_head_def* %call8, %struct.bitmap_head_def** %tmp, align 8, !dbg !4553
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !4554
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !4555
  call void @bitmap_copy(%struct.bitmap_head_def* %22, %struct.bitmap_head_def* %23), !dbg !4556
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_kill, align 8, !dbg !4557
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %24, i32 0, i32* %regno), !dbg !4557
  br label %for.cond, !dbg !4557

for.cond:                                         ; preds = %for.inc, %if.else
  %call9 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %regno), !dbg !4559
  %tobool10 = icmp ne i8 %call9, 0, !dbg !4557
  br i1 %tobool10, label %for.body, label %for.end, !dbg !4557

for.body:                                         ; preds = %for.cond
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !4561
  %26 = load %struct.df*, %struct.df** @df, align 8, !dbg !4563
  %def_info = getelementptr inbounds %struct.df, %struct.df* %26, i32 0, i32 3, !dbg !4563
  %begin = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 1, !dbg !4563
  %27 = load i32*, i32** %begin, align 8, !dbg !4563
  %28 = load i32, i32* %regno, align 4, !dbg !4563
  %idxprom = zext i32 %28 to i64, !dbg !4563
  %arrayidx11 = getelementptr inbounds i32, i32* %27, i64 %idxprom, !dbg !4563
  %29 = load i32, i32* %arrayidx11, align 4, !dbg !4563
  %30 = load %struct.df*, %struct.df** @df, align 8, !dbg !4564
  %def_info12 = getelementptr inbounds %struct.df, %struct.df* %30, i32 0, i32 3, !dbg !4564
  %count = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info12, i32 0, i32 2, !dbg !4564
  %31 = load i32*, i32** %count, align 8, !dbg !4564
  %32 = load i32, i32* %regno, align 4, !dbg !4564
  %idxprom13 = zext i32 %32 to i64, !dbg !4564
  %arrayidx14 = getelementptr inbounds i32, i32* %31, i64 %idxprom13, !dbg !4564
  %33 = load i32, i32* %arrayidx14, align 4, !dbg !4564
  call void @bitmap_clear_range(%struct.bitmap_head_def* %25, i32 %29, i32 %33), !dbg !4565
  br label %for.inc, !dbg !4566

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %regno), !dbg !4559
  br label %for.cond, !dbg !4559, !llvm.loop !4567

for.end:                                          ; preds = %for.cond
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !4569
  %35 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !4570
  %call15 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %34, %struct.bitmap_head_def* %35), !dbg !4571
  %36 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !4572
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !4573
  %call16 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %36, %struct.bitmap_head_def* %37), !dbg !4574
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !4575
  %39 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !4576
  %call17 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %38, %struct.bitmap_head_def* %39), !dbg !4577
  %tobool18 = icmp ne i8 %call17, 0, !dbg !4578
  %lnot = xor i1 %tobool18, true, !dbg !4578
  %lnot.ext = zext i1 %lnot to i32, !dbg !4578
  %conv = trunc i32 %lnot.ext to i8, !dbg !4578
  store i8 %conv, i8* %changed, align 1, !dbg !4579
  %40 = load i8, i8* %changed, align 1, !dbg !4580
  %tobool19 = icmp ne i8 %40, 0, !dbg !4580
  br i1 %tobool19, label %if.then20, label %if.else22, !dbg !4582

if.then20:                                        ; preds = %for.end
  %41 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !4583
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %41), !dbg !4583
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out, align 8, !dbg !4583
  %42 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !4585
  %43 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4586
  %out21 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %43, i32 0, i32 4, !dbg !4587
  store %struct.bitmap_head_def* %42, %struct.bitmap_head_def** %out21, align 8, !dbg !4588
  br label %if.end, !dbg !4589

if.else22:                                        ; preds = %for.end
  %44 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %tmp, align 8, !dbg !4590
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %44), !dbg !4590
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %tmp, align 8, !dbg !4590
  br label %if.end

if.end:                                           ; preds = %if.else22, %if.then20
  %45 = load i8, i8* %changed, align 1, !dbg !4591
  store i8 %45, i8* %retval, align 1, !dbg !4592
  br label %return, !dbg !4592

return:                                           ; preds = %if.end, %if.then
  %46 = load i8, i8* %retval, align 1, !dbg !4593
  ret i8 %46, !dbg !4593
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_rd_free() #0 !dbg !4594 {
entry:
  %problem_data = alloca %struct.df_rd_problem_data*, align 8
  call void @llvm.dbg.declare(metadata %struct.df_rd_problem_data** %problem_data, metadata !4595, metadata !DIExpression()), !dbg !4596
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4597
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !4597
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 3, !dbg !4597
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4597
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !4598
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !4598
  %3 = bitcast i8* %2 to %struct.df_rd_problem_data*, !dbg !4599
  store %struct.df_rd_problem_data* %3, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4596
  %4 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4600
  %tobool = icmp ne %struct.df_rd_problem_data* %4, null, !dbg !4600
  br i1 %tobool, label %if.then, label %if.end, !dbg !4602

if.then:                                          ; preds = %entry
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !4603
  %problems_by_index2 = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 1, !dbg !4603
  %arrayidx3 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index2, i64 0, i64 3, !dbg !4603
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx3, align 8, !dbg !4603
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i32 0, i32 3, !dbg !4605
  %7 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !4605
  call void @free_alloc_pool(%struct.alloc_pool_def* %7), !dbg !4606
  %8 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4607
  %rd_bitmaps = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %8, i32 0, i32 2, !dbg !4608
  call void @bitmap_obstack_release(%struct.bitmap_obstack* %rd_bitmaps), !dbg !4609
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !4610
  %problems_by_index4 = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 1, !dbg !4610
  %arrayidx5 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index4, i64 0, i64 3, !dbg !4610
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx5, align 8, !dbg !4610
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %10, i32 0, i32 2, !dbg !4611
  store i32 0, i32* %block_info_size, align 8, !dbg !4612
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !4613
  %problems_by_index6 = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 1, !dbg !4613
  %arrayidx7 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index6, i64 0, i64 3, !dbg !4613
  %12 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !4613
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %12, i32 0, i32 1, !dbg !4614
  %13 = load i8**, i8*** %block_info, align 8, !dbg !4614
  %14 = bitcast i8** %13 to i8*, !dbg !4613
  call void @free(i8* %14), !dbg !4615
  %15 = load %struct.df*, %struct.df** @df, align 8, !dbg !4616
  %problems_by_index8 = getelementptr inbounds %struct.df, %struct.df* %15, i32 0, i32 1, !dbg !4616
  %arrayidx9 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index8, i64 0, i64 3, !dbg !4616
  %16 = load %struct.dataflow*, %struct.dataflow** %arrayidx9, align 8, !dbg !4616
  %problem_data10 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %16, i32 0, i32 5, !dbg !4617
  %17 = load i8*, i8** %problem_data10, align 8, !dbg !4617
  call void @free(i8* %17), !dbg !4618
  br label %if.end, !dbg !4619

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !4620
  %problems_by_index11 = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 1, !dbg !4620
  %arrayidx12 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index11, i64 0, i64 3, !dbg !4620
  %19 = load %struct.dataflow*, %struct.dataflow** %arrayidx12, align 8, !dbg !4620
  %20 = bitcast %struct.dataflow* %19 to i8*, !dbg !4620
  call void @free(i8* %20), !dbg !4621
  ret void, !dbg !4622
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_rd_start_dump(%struct._IO_FILE* %file) #0 !dbg !4623 {
entry:
  %file.addr = alloca %struct._IO_FILE*, align 8
  %problem_data = alloca %struct.df_rd_problem_data*, align 8
  %m = alloca i32, align 4
  %regno = alloca i32, align 4
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !4624, metadata !DIExpression()), !dbg !4625
  call void @llvm.dbg.declare(metadata %struct.df_rd_problem_data** %problem_data, metadata !4626, metadata !DIExpression()), !dbg !4627
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4628
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !4628
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 3, !dbg !4628
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4628
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !4629
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !4629
  %3 = bitcast i8* %2 to %struct.df_rd_problem_data*, !dbg !4630
  store %struct.df_rd_problem_data* %3, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4627
  call void @llvm.dbg.declare(metadata i32* %m, metadata !4631, metadata !DIExpression()), !dbg !4632
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !4633
  %regs_inited = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 9, !dbg !4633
  %5 = load i32, i32* %regs_inited, align 4, !dbg !4633
  store i32 %5, i32* %m, align 4, !dbg !4632
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !4634, metadata !DIExpression()), !dbg !4635
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !4636
  %problems_by_index2 = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 1, !dbg !4636
  %arrayidx3 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index2, i64 0, i64 3, !dbg !4636
  %7 = load %struct.dataflow*, %struct.dataflow** %arrayidx3, align 8, !dbg !4636
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %7, i32 0, i32 1, !dbg !4638
  %8 = load i8**, i8*** %block_info, align 8, !dbg !4638
  %tobool = icmp ne i8** %8, null, !dbg !4636
  br i1 %tobool, label %if.end, label %if.then, !dbg !4639

if.then:                                          ; preds = %entry
  br label %return, !dbg !4640

if.end:                                           ; preds = %entry
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4641
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0)), !dbg !4642
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4643
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0)), !dbg !4644
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4645
  %12 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4645
  %sparse_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %12, i32 0, i32 0, !dbg !4645
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_invalidated_by_call, align 8, !dbg !4645
  call void @bitmap_print(%struct._IO_FILE* %11, %struct.bitmap_head_def* %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !4645
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4646
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0)), !dbg !4647
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4648
  %16 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %problem_data, align 8, !dbg !4648
  %dense_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %16, i32 0, i32 1, !dbg !4648
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dense_invalidated_by_call, align 8, !dbg !4648
  call void @bitmap_print(%struct._IO_FILE* %15, %struct.bitmap_head_def* %17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !4648
  store i32 0, i32* %regno, align 4, !dbg !4649
  br label %for.cond, !dbg !4651

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load i32, i32* %regno, align 4, !dbg !4652
  %19 = load i32, i32* %m, align 4, !dbg !4654
  %cmp = icmp ult i32 %18, %19, !dbg !4655
  br i1 %cmp, label %for.body, label %for.end, !dbg !4656

for.body:                                         ; preds = %for.cond
  %20 = load %struct.df*, %struct.df** @df, align 8, !dbg !4657
  %def_info = getelementptr inbounds %struct.df, %struct.df* %20, i32 0, i32 3, !dbg !4657
  %count = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 2, !dbg !4657
  %21 = load i32*, i32** %count, align 8, !dbg !4657
  %22 = load i32, i32* %regno, align 4, !dbg !4657
  %idxprom = zext i32 %22 to i64, !dbg !4657
  %arrayidx6 = getelementptr inbounds i32, i32* %21, i64 %idxprom, !dbg !4657
  %23 = load i32, i32* %arrayidx6, align 4, !dbg !4657
  %tobool7 = icmp ne i32 %23, 0, !dbg !4657
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !4659

if.then8:                                         ; preds = %for.body
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4660
  %25 = load i32, i32* %regno, align 4, !dbg !4661
  %26 = load %struct.df*, %struct.df** @df, align 8, !dbg !4662
  %def_info9 = getelementptr inbounds %struct.df, %struct.df* %26, i32 0, i32 3, !dbg !4662
  %begin = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info9, i32 0, i32 1, !dbg !4662
  %27 = load i32*, i32** %begin, align 8, !dbg !4662
  %28 = load i32, i32* %regno, align 4, !dbg !4662
  %idxprom10 = zext i32 %28 to i64, !dbg !4662
  %arrayidx11 = getelementptr inbounds i32, i32* %27, i64 %idxprom10, !dbg !4662
  %29 = load i32, i32* %arrayidx11, align 4, !dbg !4662
  %30 = load %struct.df*, %struct.df** @df, align 8, !dbg !4663
  %def_info12 = getelementptr inbounds %struct.df, %struct.df* %30, i32 0, i32 3, !dbg !4663
  %count13 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info12, i32 0, i32 2, !dbg !4663
  %31 = load i32*, i32** %count13, align 8, !dbg !4663
  %32 = load i32, i32* %regno, align 4, !dbg !4663
  %idxprom14 = zext i32 %32 to i64, !dbg !4663
  %arrayidx15 = getelementptr inbounds i32, i32* %31, i64 %idxprom14, !dbg !4663
  %33 = load i32, i32* %arrayidx15, align 4, !dbg !4663
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i32 %25, i32 %29, i32 %33), !dbg !4664
  br label %if.end17, !dbg !4664

if.end17:                                         ; preds = %if.then8, %for.body
  br label %for.inc, !dbg !4657

for.inc:                                          ; preds = %if.end17
  %34 = load i32, i32* %regno, align 4, !dbg !4665
  %inc = add i32 %34, 1, !dbg !4665
  store i32 %inc, i32* %regno, align 4, !dbg !4665
  br label %for.cond, !dbg !4666, !llvm.loop !4667

for.end:                                          ; preds = %for.cond
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4669
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !4670
  br label %return, !dbg !4671

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !4671
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_rd_top_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !4672 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %bb_info = alloca %struct.df_rd_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4673, metadata !DIExpression()), !dbg !4674
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !4675, metadata !DIExpression()), !dbg !4676
  call void @llvm.dbg.declare(metadata %struct.df_rd_bb_info** %bb_info, metadata !4677, metadata !DIExpression()), !dbg !4678
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4679
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !4680
  %1 = load i32, i32* %index, align 8, !dbg !4680
  %call = call %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %1), !dbg !4681
  store %struct.df_rd_bb_info* %call, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4678
  %2 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4682
  %tobool = icmp ne %struct.df_rd_bb_info* %2, null, !dbg !4682
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4684

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4685
  %in = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %3, i32 0, i32 3, !dbg !4686
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !4686
  %tobool1 = icmp ne %struct.bitmap_head_def* %4, null, !dbg !4685
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4687

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !4688

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4689
  %6 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4690
  %in2 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %6, i32 0, i32 3, !dbg !4691
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in2, align 8, !dbg !4691
  %call3 = call i64 @bitmap_count_bits(%struct.bitmap_head_def* %7), !dbg !4692
  %conv = trunc i64 %call3 to i32, !dbg !4693
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i32 %conv), !dbg !4694
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4695
  %9 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4695
  %in5 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %9, i32 0, i32 3, !dbg !4695
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in5, align 8, !dbg !4695
  call void @bitmap_print(%struct._IO_FILE* %8, %struct.bitmap_head_def* %10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !4695
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4696
  %12 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4697
  %gen = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %12, i32 0, i32 2, !dbg !4698
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !4698
  %call6 = call i64 @bitmap_count_bits(%struct.bitmap_head_def* %13), !dbg !4699
  %conv7 = trunc i64 %call6 to i32, !dbg !4700
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i32 %conv7), !dbg !4701
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4702
  %15 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4702
  %gen9 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %15, i32 0, i32 2, !dbg !4702
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen9, align 8, !dbg !4702
  call void @bitmap_print(%struct._IO_FILE* %14, %struct.bitmap_head_def* %16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !4702
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4703
  %18 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4704
  %kill = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %18, i32 0, i32 0, !dbg !4705
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !4705
  %call10 = call i64 @bitmap_count_bits(%struct.bitmap_head_def* %19), !dbg !4706
  %conv11 = trunc i64 %call10 to i32, !dbg !4707
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i32 %conv11), !dbg !4708
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4709
  %21 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4709
  %kill13 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %21, i32 0, i32 0, !dbg !4709
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill13, align 8, !dbg !4709
  call void @bitmap_print(%struct._IO_FILE* %20, %struct.bitmap_head_def* %22, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !4709
  br label %return, !dbg !4710

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !4710
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_rd_bottom_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !4711 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %bb_info = alloca %struct.df_rd_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4712, metadata !DIExpression()), !dbg !4713
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !4714, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.declare(metadata %struct.df_rd_bb_info** %bb_info, metadata !4716, metadata !DIExpression()), !dbg !4717
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4718
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !4719
  %1 = load i32, i32* %index, align 8, !dbg !4719
  %call = call %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %1), !dbg !4720
  store %struct.df_rd_bb_info* %call, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4717
  %2 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4721
  %tobool = icmp ne %struct.df_rd_bb_info* %2, null, !dbg !4721
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4723

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4724
  %out = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %3, i32 0, i32 4, !dbg !4725
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !4725
  %tobool1 = icmp ne %struct.bitmap_head_def* %4, null, !dbg !4724
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4726

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !4727

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4728
  %6 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4729
  %out2 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %6, i32 0, i32 4, !dbg !4730
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out2, align 8, !dbg !4730
  %call3 = call i64 @bitmap_count_bits(%struct.bitmap_head_def* %7), !dbg !4731
  %conv = trunc i64 %call3 to i32, !dbg !4732
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i32 %conv), !dbg !4733
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !4734
  %9 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4734
  %out5 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %9, i32 0, i32 4, !dbg !4734
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out5, align 8, !dbg !4734
  call void @bitmap_print(%struct._IO_FILE* %8, %struct.bitmap_head_def* %10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !4734
  br label %return, !dbg !4735

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !4735
}

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) #2

declare dso_local i8* @xmalloc(i64) #2

declare dso_local void @bitmap_obstack_initialize(%struct.bitmap_obstack*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) #0 !dbg !4736 {
entry:
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %map.addr = alloca %struct.bitmap_head_def*, align 8
  %start_bit.addr = alloca i32, align 4
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !4743, metadata !DIExpression()), !dbg !4744
  store %struct.bitmap_head_def* %map, %struct.bitmap_head_def** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %map.addr, metadata !4745, metadata !DIExpression()), !dbg !4746
  store i32 %start_bit, i32* %start_bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start_bit.addr, metadata !4747, metadata !DIExpression()), !dbg !4748
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !4749, metadata !DIExpression()), !dbg !4750
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %map.addr, align 8, !dbg !4751
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %0, i32 0, i32 0, !dbg !4752
  %1 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !4752
  %2 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4753
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %2, i32 0, i32 0, !dbg !4754
  store %struct.bitmap_element_def* %1, %struct.bitmap_element_def** %elt1, align 8, !dbg !4755
  %3 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4756
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %3, i32 0, i32 1, !dbg !4757
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !4758
  br label %while.body, !dbg !4759

while.body:                                       ; preds = %entry, %if.end5
  %4 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4760
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %4, i32 0, i32 0, !dbg !4763
  %5 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt11, align 8, !dbg !4763
  %tobool = icmp ne %struct.bitmap_element_def* %5, null, !dbg !4760
  br i1 %tobool, label %if.end, label %if.then, !dbg !4764

if.then:                                          ; preds = %while.body
  %6 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4765
  %elt12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %6, i32 0, i32 0, !dbg !4767
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt12, align 8, !dbg !4768
  br label %while.end, !dbg !4769

if.end:                                           ; preds = %while.body
  %7 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4770
  %elt13 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %7, i32 0, i32 0, !dbg !4772
  %8 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt13, align 8, !dbg !4772
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %8, i32 0, i32 2, !dbg !4773
  %9 = load i32, i32* %indx, align 8, !dbg !4773
  %10 = load i32, i32* %start_bit.addr, align 4, !dbg !4774
  %div = udiv i32 %10, 128, !dbg !4775
  %cmp = icmp uge i32 %9, %div, !dbg !4776
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !4777

if.then4:                                         ; preds = %if.end
  br label %while.end, !dbg !4778

if.end5:                                          ; preds = %if.end
  %11 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4779
  %elt16 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %11, i32 0, i32 0, !dbg !4780
  %12 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt16, align 8, !dbg !4780
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %12, i32 0, i32 0, !dbg !4781
  %13 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8, !dbg !4781
  %14 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4782
  %elt17 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %14, i32 0, i32 0, !dbg !4783
  store %struct.bitmap_element_def* %13, %struct.bitmap_element_def** %elt17, align 8, !dbg !4784
  br label %while.body, !dbg !4759, !llvm.loop !4785

while.end:                                        ; preds = %if.then4, %if.then
  %15 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4787
  %elt18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %15, i32 0, i32 0, !dbg !4789
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt18, align 8, !dbg !4789
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i32 0, i32 2, !dbg !4790
  %17 = load i32, i32* %indx9, align 8, !dbg !4790
  %18 = load i32, i32* %start_bit.addr, align 4, !dbg !4791
  %div10 = udiv i32 %18, 128, !dbg !4792
  %cmp11 = icmp ne i32 %17, %div10, !dbg !4793
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !4794

if.then12:                                        ; preds = %while.end
  %19 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4795
  %elt113 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %19, i32 0, i32 0, !dbg !4796
  %20 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt113, align 8, !dbg !4796
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %20, i32 0, i32 2, !dbg !4797
  %21 = load i32, i32* %indx14, align 8, !dbg !4797
  %mul = mul i32 %21, 128, !dbg !4798
  store i32 %mul, i32* %start_bit.addr, align 4, !dbg !4799
  br label %if.end15, !dbg !4800

if.end15:                                         ; preds = %if.then12, %while.end
  %22 = load i32, i32* %start_bit.addr, align 4, !dbg !4801
  %div16 = udiv i32 %22, 64, !dbg !4802
  %rem = urem i32 %div16, 2, !dbg !4803
  %23 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4804
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %23, i32 0, i32 2, !dbg !4805
  store i32 %rem, i32* %word_no, align 8, !dbg !4806
  %24 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4807
  %elt117 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %24, i32 0, i32 0, !dbg !4808
  %25 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt117, align 8, !dbg !4808
  %bits = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %25, i32 0, i32 3, !dbg !4809
  %26 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4810
  %word_no18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %26, i32 0, i32 2, !dbg !4811
  %27 = load i32, i32* %word_no18, align 8, !dbg !4811
  %idxprom = zext i32 %27 to i64, !dbg !4807
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits, i64 0, i64 %idxprom, !dbg !4807
  %28 = load i64, i64* %arrayidx, align 8, !dbg !4807
  %29 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4812
  %bits19 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %29, i32 0, i32 3, !dbg !4813
  store i64 %28, i64* %bits19, align 8, !dbg !4814
  %30 = load i32, i32* %start_bit.addr, align 4, !dbg !4815
  %rem20 = urem i32 %30, 64, !dbg !4816
  %31 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4817
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %31, i32 0, i32 3, !dbg !4818
  %32 = load i64, i64* %bits21, align 8, !dbg !4819
  %sh_prom = zext i32 %rem20 to i64, !dbg !4819
  %shr = lshr i64 %32, %sh_prom, !dbg !4819
  store i64 %shr, i64* %bits21, align 8, !dbg !4819
  %33 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4820
  %bits22 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %33, i32 0, i32 3, !dbg !4821
  %34 = load i64, i64* %bits22, align 8, !dbg !4821
  %tobool23 = icmp ne i64 %34, 0, !dbg !4822
  %lnot = xor i1 %tobool23, true, !dbg !4822
  %lnot.ext = zext i1 %lnot to i32, !dbg !4822
  %35 = load i32, i32* %start_bit.addr, align 4, !dbg !4823
  %add = add i32 %35, %lnot.ext, !dbg !4823
  store i32 %add, i32* %start_bit.addr, align 4, !dbg !4823
  %36 = load i32, i32* %start_bit.addr, align 4, !dbg !4824
  %37 = load i32*, i32** %bit_no.addr, align 8, !dbg !4825
  store i32 %36, i32* %37, align 4, !dbg !4826
  ret void, !dbg !4827
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) #0 !dbg !4828 {
entry:
  %retval = alloca i8, align 1
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !4831, metadata !DIExpression()), !dbg !4832
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !4833, metadata !DIExpression()), !dbg !4834
  %0 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4835
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %0, i32 0, i32 3, !dbg !4837
  %1 = load i64, i64* %bits, align 8, !dbg !4837
  %tobool = icmp ne i64 %1, 0, !dbg !4835
  br i1 %tobool, label %if.then, label %if.end, !dbg !4838

if.then:                                          ; preds = %entry
  br label %next_bit, !dbg !4839

next_bit:                                         ; preds = %if.then15, %if.then
  call void @llvm.dbg.label(metadata !4840), !dbg !4842
  br label %while.cond, !dbg !4843

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4844
  %bits1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %2, i32 0, i32 3, !dbg !4845
  %3 = load i64, i64* %bits1, align 8, !dbg !4845
  %and = and i64 %3, 1, !dbg !4846
  %tobool2 = icmp ne i64 %and, 0, !dbg !4847
  %lnot = xor i1 %tobool2, true, !dbg !4847
  br i1 %lnot, label %while.body, label %while.end, !dbg !4843

while.body:                                       ; preds = %while.cond
  %4 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4848
  %bits3 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %4, i32 0, i32 3, !dbg !4850
  %5 = load i64, i64* %bits3, align 8, !dbg !4851
  %shr = lshr i64 %5, 1, !dbg !4851
  store i64 %shr, i64* %bits3, align 8, !dbg !4851
  %6 = load i32*, i32** %bit_no.addr, align 8, !dbg !4852
  %7 = load i32, i32* %6, align 4, !dbg !4853
  %add = add i32 %7, 1, !dbg !4853
  store i32 %add, i32* %6, align 4, !dbg !4853
  br label %while.cond, !dbg !4843, !llvm.loop !4854

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval, align 1, !dbg !4856
  br label %return, !dbg !4856

if.end:                                           ; preds = %entry
  %8 = load i32*, i32** %bit_no.addr, align 8, !dbg !4857
  %9 = load i32, i32* %8, align 4, !dbg !4858
  %add4 = add i32 %9, 64, !dbg !4859
  %sub = sub i32 %add4, 1, !dbg !4860
  %div = udiv i32 %sub, 64, !dbg !4861
  %mul = mul i32 %div, 64, !dbg !4862
  %10 = load i32*, i32** %bit_no.addr, align 8, !dbg !4863
  store i32 %mul, i32* %10, align 4, !dbg !4864
  %11 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4865
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %11, i32 0, i32 2, !dbg !4866
  %12 = load i32, i32* %word_no, align 8, !dbg !4867
  %inc = add i32 %12, 1, !dbg !4867
  store i32 %inc, i32* %word_no, align 8, !dbg !4867
  br label %while.body6, !dbg !4868

while.body6:                                      ; preds = %if.end, %if.end26
  br label %while.cond7, !dbg !4869

while.cond7:                                      ; preds = %if.end16, %while.body6
  %13 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4871
  %word_no8 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %13, i32 0, i32 2, !dbg !4872
  %14 = load i32, i32* %word_no8, align 8, !dbg !4872
  %cmp = icmp ne i32 %14, 2, !dbg !4873
  br i1 %cmp, label %while.body9, label %while.end20, !dbg !4869

while.body9:                                      ; preds = %while.cond7
  %15 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4874
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %15, i32 0, i32 0, !dbg !4876
  %16 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !4876
  %bits10 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %16, i32 0, i32 3, !dbg !4877
  %17 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4878
  %word_no11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %17, i32 0, i32 2, !dbg !4879
  %18 = load i32, i32* %word_no11, align 8, !dbg !4879
  %idxprom = zext i32 %18 to i64, !dbg !4874
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* %bits10, i64 0, i64 %idxprom, !dbg !4874
  %19 = load i64, i64* %arrayidx, align 8, !dbg !4874
  %20 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4880
  %bits12 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %20, i32 0, i32 3, !dbg !4881
  store i64 %19, i64* %bits12, align 8, !dbg !4882
  %21 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4883
  %bits13 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %21, i32 0, i32 3, !dbg !4885
  %22 = load i64, i64* %bits13, align 8, !dbg !4885
  %tobool14 = icmp ne i64 %22, 0, !dbg !4883
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !4886

if.then15:                                        ; preds = %while.body9
  br label %next_bit, !dbg !4887

if.end16:                                         ; preds = %while.body9
  %23 = load i32*, i32** %bit_no.addr, align 8, !dbg !4888
  %24 = load i32, i32* %23, align 4, !dbg !4889
  %add17 = add i32 %24, 64, !dbg !4889
  store i32 %add17, i32* %23, align 4, !dbg !4889
  %25 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4890
  %word_no18 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %25, i32 0, i32 2, !dbg !4891
  %26 = load i32, i32* %word_no18, align 8, !dbg !4892
  %inc19 = add i32 %26, 1, !dbg !4892
  store i32 %inc19, i32* %word_no18, align 8, !dbg !4892
  br label %while.cond7, !dbg !4869, !llvm.loop !4893

while.end20:                                      ; preds = %while.cond7
  %27 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4895
  %elt121 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %27, i32 0, i32 0, !dbg !4896
  %28 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt121, align 8, !dbg !4896
  %next = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %28, i32 0, i32 0, !dbg !4897
  %29 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %next, align 8, !dbg !4897
  %30 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4898
  %elt122 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %30, i32 0, i32 0, !dbg !4899
  store %struct.bitmap_element_def* %29, %struct.bitmap_element_def** %elt122, align 8, !dbg !4900
  %31 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4901
  %elt123 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %31, i32 0, i32 0, !dbg !4903
  %32 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt123, align 8, !dbg !4903
  %tobool24 = icmp ne %struct.bitmap_element_def* %32, null, !dbg !4901
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !4904

if.then25:                                        ; preds = %while.end20
  store i8 0, i8* %retval, align 1, !dbg !4905
  br label %return, !dbg !4905

if.end26:                                         ; preds = %while.end20
  %33 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4906
  %elt127 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %33, i32 0, i32 0, !dbg !4907
  %34 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt127, align 8, !dbg !4907
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %34, i32 0, i32 2, !dbg !4908
  %35 = load i32, i32* %indx, align 8, !dbg !4908
  %mul28 = mul i32 %35, 128, !dbg !4909
  %36 = load i32*, i32** %bit_no.addr, align 8, !dbg !4910
  store i32 %mul28, i32* %36, align 4, !dbg !4911
  %37 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4912
  %word_no29 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %37, i32 0, i32 2, !dbg !4913
  store i32 0, i32* %word_no29, align 8, !dbg !4914
  br label %while.body6, !dbg !4868, !llvm.loop !4915

return:                                           ; preds = %if.then25, %while.end
  %38 = load i8, i8* %retval, align 1, !dbg !4917
  ret i8 %38, !dbg !4917
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %index) #0 !dbg !4918 {
entry:
  %retval = alloca %struct.df_rd_bb_info*, align 8
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4921, metadata !DIExpression()), !dbg !4922
  %0 = load i32, i32* %index.addr, align 4, !dbg !4923
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !4925
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !4925
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 3, !dbg !4925
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4925
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 2, !dbg !4926
  %3 = load i32, i32* %block_info_size, align 8, !dbg !4926
  %cmp = icmp ult i32 %0, %3, !dbg !4927
  br i1 %cmp, label %if.then, label %if.else, !dbg !4928

if.then:                                          ; preds = %entry
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !4929
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !4929
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 3, !dbg !4929
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !4929
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 1, !dbg !4930
  %6 = load i8**, i8*** %block_info, align 8, !dbg !4930
  %7 = load i32, i32* %index.addr, align 4, !dbg !4931
  %idxprom = zext i32 %7 to i64, !dbg !4929
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %idxprom, !dbg !4929
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !4929
  %9 = bitcast i8* %8 to %struct.df_rd_bb_info*, !dbg !4932
  store %struct.df_rd_bb_info* %9, %struct.df_rd_bb_info** %retval, align 8, !dbg !4933
  br label %return, !dbg !4933

if.else:                                          ; preds = %entry
  store %struct.df_rd_bb_info* null, %struct.df_rd_bb_info** %retval, align 8, !dbg !4934
  br label %return, !dbg !4934

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %retval, align 8, !dbg !4935
  ret %struct.df_rd_bb_info* %10, !dbg !4935
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_rd_set_bb_info(i32 %index, %struct.df_rd_bb_info* %bb_info) #0 !dbg !4936 {
entry:
  %index.addr = alloca i32, align 4
  %bb_info.addr = alloca %struct.df_rd_bb_info*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4939, metadata !DIExpression()), !dbg !4940
  store %struct.df_rd_bb_info* %bb_info, %struct.df_rd_bb_info** %bb_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_rd_bb_info** %bb_info.addr, metadata !4941, metadata !DIExpression()), !dbg !4942
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4943
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !4943
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 3, !dbg !4943
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4943
  %tobool = icmp ne %struct.dataflow* %1, null, !dbg !4943
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4943

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4943
  br label %cond.end, !dbg !4943

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4943

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !4943
  %2 = load i32, i32* %index.addr, align 4, !dbg !4944
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !4944
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !4944
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 3, !dbg !4944
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !4944
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 2, !dbg !4944
  %5 = load i32, i32* %block_info_size, align 8, !dbg !4944
  %cmp = icmp ult i32 %2, %5, !dbg !4944
  br i1 %cmp, label %cond.false4, label %cond.true3, !dbg !4944

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4944
  br label %cond.end5, !dbg !4944

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !4944

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !4944
  %6 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info.addr, align 8, !dbg !4945
  %7 = bitcast %struct.df_rd_bb_info* %6 to i8*, !dbg !4945
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !4946
  %problems_by_index7 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 1, !dbg !4946
  %arrayidx8 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index7, i64 0, i64 3, !dbg !4946
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !4946
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %9, i32 0, i32 1, !dbg !4947
  %10 = load i8**, i8*** %block_info, align 8, !dbg !4947
  %11 = load i32, i32* %index.addr, align 4, !dbg !4948
  %idxprom = zext i32 %11 to i64, !dbg !4946
  %arrayidx9 = getelementptr inbounds i8*, i8** %10, i64 %idxprom, !dbg !4946
  store i8* %7, i8** %arrayidx9, align 8, !dbg !4949
  ret void, !dbg !4950
}

; Function Attrs: noinline nounwind uwtable
define internal void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) #0 !dbg !4951 {
entry:
  %bi.addr = alloca %struct.bitmap_iterator*, align 8
  %bit_no.addr = alloca i32*, align 8
  store %struct.bitmap_iterator* %bi, %struct.bitmap_iterator** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator** %bi.addr, metadata !4954, metadata !DIExpression()), !dbg !4955
  store i32* %bit_no, i32** %bit_no.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_no.addr, metadata !4956, metadata !DIExpression()), !dbg !4957
  %0 = load %struct.bitmap_iterator*, %struct.bitmap_iterator** %bi.addr, align 8, !dbg !4958
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %0, i32 0, i32 3, !dbg !4959
  %1 = load i64, i64* %bits, align 8, !dbg !4960
  %shr = lshr i64 %1, 1, !dbg !4960
  store i64 %shr, i64* %bits, align 8, !dbg !4960
  %2 = load i32*, i32** %bit_no.addr, align 8, !dbg !4961
  %3 = load i32, i32* %2, align 4, !dbg !4962
  %add = add i32 %3, 1, !dbg !4962
  store i32 %add, i32* %2, align 4, !dbg !4962
  ret void, !dbg !4963
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

declare dso_local void @df_maybe_reorganize_def_refs(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_rd_bb_local_compute(i32 %bb_index) #0 !dbg !4964 {
entry:
  %bb_index.addr = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %bb_info = alloca %struct.df_rd_bb_info*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %uid = alloca i32, align 4
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !4965, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !4967, metadata !DIExpression()), !dbg !4968
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4969
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !4969
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !4969
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4969
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 2, !dbg !4969
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4969
  %tobool = icmp ne %struct.VEC_basic_block_gc* %2, null, !dbg !4969
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4969

cond.true:                                        ; preds = %entry
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4969
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, !dbg !4969
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !4969
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !4969
  %x_basic_block_info3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i32 0, i32 2, !dbg !4969
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info3, align 8, !dbg !4969
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i32 0, i32 0, !dbg !4969
  br label %cond.end, !dbg !4969

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4969

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4969
  %6 = load i32, i32* %bb_index.addr, align 4, !dbg !4969
  %call = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %6), !dbg !4969
  store %struct.basic_block_def* %call, %struct.basic_block_def** %bb, align 8, !dbg !4968
  call void @llvm.dbg.declare(metadata %struct.df_rd_bb_info** %bb_info, metadata !4970, metadata !DIExpression()), !dbg !4971
  %7 = load i32, i32* %bb_index.addr, align 4, !dbg !4972
  %call4 = call %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %7), !dbg !4973
  store %struct.df_rd_bb_info* %call4, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4971
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !4974, metadata !DIExpression()), !dbg !4975
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_block, align 8, !dbg !4976
  call void @bitmap_clear(%struct.bitmap_head_def* %8), !dbg !4977
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !4978
  call void @bitmap_clear(%struct.bitmap_head_def* %9), !dbg !4979
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !4980
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 27, !dbg !4982
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !4982
  %bf.cast = sext i8 %bf.load to i32, !dbg !4982
  %and = and i32 %bf.cast, 2, !dbg !4983
  %tobool5 = icmp ne i32 %and, 0, !dbg !4983
  br i1 %tobool5, label %if.end, label %if.then, !dbg !4984

if.then:                                          ; preds = %cond.end
  %11 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !4985
  %12 = load i32, i32* %bb_index.addr, align 4, !dbg !4986
  %call6 = call %union.df_ref_d** @df_get_artificial_defs(i32 %12), !dbg !4987
  call void @df_rd_bb_local_compute_process_def(%struct.df_rd_bb_info* %11, %union.df_ref_d** %call6, i32 0), !dbg !4988
  br label %if.end, !dbg !4988

if.end:                                           ; preds = %if.then, %cond.end
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4989
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 7, !dbg !4989
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4989
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4989
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i32 0, i32 1, !dbg !4989
  %15 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4989
  store %struct.rtx_def* %15, %struct.rtx_def** %insn, align 8, !dbg !4989
  br label %for.cond, !dbg !4989

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4991
  %tobool7 = icmp ne %struct.rtx_def* %16, null, !dbg !4991
  br i1 %tobool7, label %land.rhs, label %land.end, !dbg !4991

land.rhs:                                         ; preds = %for.cond
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4991
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4991
  %il8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i32 0, i32 7, !dbg !4991
  %rtl9 = bitcast %union.basic_block_il_dependent* %il8 to %struct.rtl_bb_info**, !dbg !4991
  %19 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !4991
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %19, i32 0, i32 0, !dbg !4991
  %20 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !4991
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !4991
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4991
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !4991
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4991
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4991
  %cmp = icmp ne %struct.rtx_def* %17, %21, !dbg !4991
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %22 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !4993
  br i1 %22, label %for.body, label %for.end, !dbg !4989

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !4994, metadata !DIExpression()), !dbg !4996
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4997
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !4997
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !4997
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 0, !dbg !4997
  %rt_int = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !4997
  %24 = load i32, i32* %rt_int, align 8, !dbg !4997
  store i32 %24, i32* %uid, align 4, !dbg !4996
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4998
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !4998
  %bf.load13 = load i32, i32* %26, align 8, !dbg !4998
  %bf.clear = and i32 %bf.load13, 65535, !dbg !4998
  %cmp14 = icmp eq i32 %bf.clear, 8, !dbg !4998
  br i1 %cmp14, label %if.end27, label %lor.lhs.false, !dbg !4998

lor.lhs.false:                                    ; preds = %for.body
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4998
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !4998
  %bf.load15 = load i32, i32* %28, align 8, !dbg !4998
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !4998
  %cmp17 = icmp eq i32 %bf.clear16, 7, !dbg !4998
  br i1 %cmp17, label %if.end27, label %lor.lhs.false18, !dbg !4998

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4998
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !4998
  %bf.load19 = load i32, i32* %30, align 8, !dbg !4998
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !4998
  %cmp21 = icmp eq i32 %bf.clear20, 9, !dbg !4998
  br i1 %cmp21, label %if.end27, label %lor.lhs.false22, !dbg !4998

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4998
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !4998
  %bf.load23 = load i32, i32* %32, align 8, !dbg !4998
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !4998
  %cmp25 = icmp eq i32 %bf.clear24, 10, !dbg !4998
  br i1 %cmp25, label %if.end27, label %if.then26, !dbg !5000

if.then26:                                        ; preds = %lor.lhs.false22
  br label %for.inc, !dbg !5001

if.end27:                                         ; preds = %lor.lhs.false22, %lor.lhs.false18, %lor.lhs.false, %for.body
  %33 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !5002
  %34 = load %struct.df*, %struct.df** @df, align 8, !dbg !5003
  %insns = getelementptr inbounds %struct.df, %struct.df* %34, i32 0, i32 10, !dbg !5003
  %35 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !5003
  %36 = load i32, i32* %uid, align 4, !dbg !5003
  %idxprom = zext i32 %36 to i64, !dbg !5003
  %arrayidx28 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %35, i64 %idxprom, !dbg !5003
  %37 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx28, align 8, !dbg !5003
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %37, i32 0, i32 1, !dbg !5003
  %38 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !5003
  call void @df_rd_bb_local_compute_process_def(%struct.df_rd_bb_info* %33, %union.df_ref_d** %38, i32 0), !dbg !5004
  %39 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_block, align 8, !dbg !5005
  %40 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !5006
  %call29 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %39, %struct.bitmap_head_def* %40), !dbg !5007
  %41 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !5008
  call void @bitmap_clear(%struct.bitmap_head_def* %41), !dbg !5009
  br label %for.inc, !dbg !5010

for.inc:                                          ; preds = %if.end27, %if.then26
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4991
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !4991
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !4991
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 1, !dbg !4991
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !4991
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !4991
  store %struct.rtx_def* %43, %struct.rtx_def** %insn, align 8, !dbg !4991
  br label %for.cond, !dbg !4991, !llvm.loop !5011

for.end:                                          ; preds = %land.end
  %44 = load %struct.df*, %struct.df** @df, align 8, !dbg !5013
  %changeable_flags34 = getelementptr inbounds %struct.df, %struct.df* %44, i32 0, i32 27, !dbg !5015
  %bf.load35 = load i8, i8* %changeable_flags34, align 4, !dbg !5015
  %bf.cast36 = sext i8 %bf.load35 to i32, !dbg !5015
  %and37 = and i32 %bf.cast36, 2, !dbg !5016
  %tobool38 = icmp ne i32 %and37, 0, !dbg !5016
  br i1 %tobool38, label %if.end41, label %if.then39, !dbg !5017

if.then39:                                        ; preds = %for.end
  %45 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !5018
  %46 = load i32, i32* %bb_index.addr, align 4, !dbg !5019
  %call40 = call %union.df_ref_d** @df_get_artificial_defs(i32 %46), !dbg !5020
  call void @df_rd_bb_local_compute_process_def(%struct.df_rd_bb_info* %45, %union.df_ref_d** %call40, i32 2), !dbg !5021
  br label %if.end41, !dbg !5021

if.end41:                                         ; preds = %if.then39, %for.end
  ret void, !dbg !5022
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) #0 !dbg !5023 {
entry:
  %vec_.addr = alloca %struct.VEC_basic_block_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_basic_block_base* %vec_, %struct.VEC_basic_block_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_basic_block_base** %vec_.addr, metadata !5028, metadata !DIExpression()), !dbg !5029
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !5030, metadata !DIExpression()), !dbg !5029
  %0 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !5029
  %tobool = icmp ne %struct.VEC_basic_block_base* %0, null, !dbg !5029
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5029

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !5029
  %2 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !5029
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %2, i32 0, i32 0, !dbg !5029
  %3 = load i32, i32* %num, align 8, !dbg !5029
  %cmp = icmp ult i32 %1, %3, !dbg !5029
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !5031
  %land.ext = zext i1 %4 to i32, !dbg !5029
  %5 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !5029
  %vec = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %5, i32 0, i32 2, !dbg !5029
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !5029
  %idxprom = zext i32 %6 to i64, !dbg !5029
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %vec, i64 0, i64 %idxprom, !dbg !5029
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !5029
  ret %struct.basic_block_def* %7, !dbg !5029
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_rd_bb_local_compute_process_def(%struct.df_rd_bb_info* %bb_info, %union.df_ref_d** %def_rec, i32 %top_flag) #0 !dbg !5032 {
entry:
  %bb_info.addr = alloca %struct.df_rd_bb_info*, align 8
  %def_rec.addr = alloca %union.df_ref_d**, align 8
  %top_flag.addr = alloca i32, align 4
  %def = alloca %union.df_ref_d*, align 8
  %regno = alloca i32, align 4
  %begin = alloca i32, align 4
  %n_defs = alloca i32, align 4
  store %struct.df_rd_bb_info* %bb_info, %struct.df_rd_bb_info** %bb_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_rd_bb_info** %bb_info.addr, metadata !5035, metadata !DIExpression()), !dbg !5036
  store %union.df_ref_d** %def_rec, %union.df_ref_d*** %def_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec.addr, metadata !5037, metadata !DIExpression()), !dbg !5038
  store i32 %top_flag, i32* %top_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %top_flag.addr, metadata !5039, metadata !DIExpression()), !dbg !5040
  br label %while.cond, !dbg !5041

while.cond:                                       ; preds = %if.end40, %entry
  %0 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec.addr, align 8, !dbg !5042
  %1 = load %union.df_ref_d*, %union.df_ref_d** %0, align 8, !dbg !5043
  %tobool = icmp ne %union.df_ref_d* %1, null, !dbg !5041
  br i1 %tobool, label %while.body, label %while.end, !dbg !5041

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !5044, metadata !DIExpression()), !dbg !5046
  %2 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec.addr, align 8, !dbg !5047
  %3 = load %union.df_ref_d*, %union.df_ref_d** %2, align 8, !dbg !5048
  store %union.df_ref_d* %3, %union.df_ref_d** %def, align 8, !dbg !5046
  %4 = load i32, i32* %top_flag.addr, align 4, !dbg !5049
  %5 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !5051
  %base = bitcast %union.df_ref_d* %5 to %struct.df_base_ref*, !dbg !5051
  %6 = bitcast %struct.df_base_ref* %base to i32*, !dbg !5051
  %bf.load = load i32, i32* %6, align 8, !dbg !5051
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !5051
  %and = and i32 %bf.ashr, 2, !dbg !5052
  %cmp = icmp eq i32 %4, %and, !dbg !5053
  br i1 %cmp, label %if.then, label %if.end40, !dbg !5054

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !5055, metadata !DIExpression()), !dbg !5057
  %7 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !5058
  %base1 = bitcast %union.df_ref_d* %7 to %struct.df_base_ref*, !dbg !5058
  %regno2 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base1, i32 0, i32 6, !dbg !5058
  %8 = load i32, i32* %regno2, align 8, !dbg !5058
  store i32 %8, i32* %regno, align 4, !dbg !5057
  call void @llvm.dbg.declare(metadata i32* %begin, metadata !5059, metadata !DIExpression()), !dbg !5060
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !5061
  %def_info = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 3, !dbg !5061
  %begin3 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 1, !dbg !5061
  %10 = load i32*, i32** %begin3, align 8, !dbg !5061
  %11 = load i32, i32* %regno, align 4, !dbg !5061
  %idxprom = zext i32 %11 to i64, !dbg !5061
  %arrayidx = getelementptr inbounds i32, i32* %10, i64 %idxprom, !dbg !5061
  %12 = load i32, i32* %arrayidx, align 4, !dbg !5061
  store i32 %12, i32* %begin, align 4, !dbg !5060
  call void @llvm.dbg.declare(metadata i32* %n_defs, metadata !5062, metadata !DIExpression()), !dbg !5063
  %13 = load %struct.df*, %struct.df** @df, align 8, !dbg !5064
  %def_info4 = getelementptr inbounds %struct.df, %struct.df* %13, i32 0, i32 3, !dbg !5064
  %count = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info4, i32 0, i32 2, !dbg !5064
  %14 = load i32*, i32** %count, align 8, !dbg !5064
  %15 = load i32, i32* %regno, align 4, !dbg !5064
  %idxprom5 = zext i32 %15 to i64, !dbg !5064
  %arrayidx6 = getelementptr inbounds i32, i32* %14, i64 %idxprom5, !dbg !5064
  %16 = load i32, i32* %arrayidx6, align 4, !dbg !5064
  store i32 %16, i32* %n_defs, align 4, !dbg !5063
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !5065
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %17, i32 0, i32 27, !dbg !5067
  %bf.load7 = load i8, i8* %changeable_flags, align 4, !dbg !5067
  %bf.cast = sext i8 %bf.load7 to i32, !dbg !5067
  %and8 = and i32 %bf.cast, 2, !dbg !5068
  %tobool9 = icmp ne i32 %and8, 0, !dbg !5068
  br i1 %tobool9, label %lor.lhs.false, label %if.then11, !dbg !5069

lor.lhs.false:                                    ; preds = %if.then
  %18 = load i32, i32* %regno, align 4, !dbg !5070
  %cmp10 = icmp uge i32 %18, 53, !dbg !5071
  br i1 %cmp10, label %if.then11, label %if.end39, !dbg !5072

if.then11:                                        ; preds = %lor.lhs.false, %if.then
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_block, align 8, !dbg !5073
  %20 = load i32, i32* %regno, align 4, !dbg !5076
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %19, i32 %20), !dbg !5077
  %tobool12 = icmp ne i32 %call, 0, !dbg !5077
  br i1 %tobool12, label %if.end38, label %if.then13, !dbg !5078

if.then13:                                        ; preds = %if.then11
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !5079
  %22 = load i32, i32* %regno, align 4, !dbg !5082
  %call14 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %21, i32 %22), !dbg !5083
  %tobool15 = icmp ne i32 %call14, 0, !dbg !5083
  br i1 %tobool15, label %if.end26, label %land.lhs.true, !dbg !5084

land.lhs.true:                                    ; preds = %if.then13
  %23 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !5085
  %base16 = bitcast %union.df_ref_d* %23 to %struct.df_base_ref*, !dbg !5085
  %24 = bitcast %struct.df_base_ref* %base16 to i32*, !dbg !5085
  %bf.load17 = load i32, i32* %24, align 8, !dbg !5085
  %bf.ashr18 = ashr i32 %bf.load17, 16, !dbg !5085
  %and19 = and i32 %bf.ashr18, 81, !dbg !5086
  %tobool20 = icmp ne i32 %and19, 0, !dbg !5086
  br i1 %tobool20, label %if.end26, label %if.then21, !dbg !5087

if.then21:                                        ; preds = %land.lhs.true
  %25 = load i32, i32* %n_defs, align 4, !dbg !5088
  %cmp22 = icmp ugt i32 %25, 32, !dbg !5091
  br i1 %cmp22, label %if.then23, label %if.else, !dbg !5092

if.then23:                                        ; preds = %if.then21
  %26 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info.addr, align 8, !dbg !5093
  %sparse_kill = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %26, i32 0, i32 1, !dbg !5095
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_kill, align 8, !dbg !5095
  %28 = load i32, i32* %regno, align 4, !dbg !5096
  %call24 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %27, i32 %28), !dbg !5097
  %29 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info.addr, align 8, !dbg !5098
  %gen = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %29, i32 0, i32 2, !dbg !5099
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !5099
  %31 = load i32, i32* %begin, align 4, !dbg !5100
  %32 = load i32, i32* %n_defs, align 4, !dbg !5101
  call void @bitmap_clear_range(%struct.bitmap_head_def* %30, i32 %31, i32 %32), !dbg !5102
  br label %if.end, !dbg !5103

if.else:                                          ; preds = %if.then21
  %33 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info.addr, align 8, !dbg !5104
  %kill = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %33, i32 0, i32 0, !dbg !5106
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !5106
  %35 = load i32, i32* %begin, align 4, !dbg !5107
  %36 = load i32, i32* %n_defs, align 4, !dbg !5108
  call void @bitmap_set_range(%struct.bitmap_head_def* %34, i32 %35, i32 %36), !dbg !5109
  %37 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info.addr, align 8, !dbg !5110
  %gen25 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %37, i32 0, i32 2, !dbg !5111
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen25, align 8, !dbg !5111
  %39 = load i32, i32* %begin, align 4, !dbg !5112
  %40 = load i32, i32* %n_defs, align 4, !dbg !5113
  call void @bitmap_clear_range(%struct.bitmap_head_def* %38, i32 %39, i32 %40), !dbg !5114
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then23
  br label %if.end26, !dbg !5115

if.end26:                                         ; preds = %if.end, %land.lhs.true, %if.then13
  %41 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !5116
  %42 = load i32, i32* %regno, align 4, !dbg !5117
  %call27 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %41, i32 %42), !dbg !5118
  %43 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !5119
  %base28 = bitcast %union.df_ref_d* %43 to %struct.df_base_ref*, !dbg !5119
  %44 = bitcast %struct.df_base_ref* %base28 to i32*, !dbg !5119
  %bf.load29 = load i32, i32* %44, align 8, !dbg !5119
  %bf.ashr30 = ashr i32 %bf.load29, 16, !dbg !5119
  %and31 = and i32 %bf.ashr30, 192, !dbg !5121
  %tobool32 = icmp ne i32 %and31, 0, !dbg !5121
  br i1 %tobool32, label %if.end37, label %if.then33, !dbg !5122

if.then33:                                        ; preds = %if.end26
  %45 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info.addr, align 8, !dbg !5123
  %gen34 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %45, i32 0, i32 2, !dbg !5124
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen34, align 8, !dbg !5124
  %47 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !5125
  %base35 = bitcast %union.df_ref_d* %47 to %struct.df_base_ref*, !dbg !5125
  %id = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base35, i32 0, i32 7, !dbg !5125
  %48 = load i32, i32* %id, align 4, !dbg !5125
  %call36 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %46, i32 %48), !dbg !5126
  br label %if.end37, !dbg !5126

if.end37:                                         ; preds = %if.then33, %if.end26
  br label %if.end38, !dbg !5127

if.end38:                                         ; preds = %if.end37, %if.then11
  br label %if.end39, !dbg !5128

if.end39:                                         ; preds = %if.end38, %lor.lhs.false
  br label %if.end40, !dbg !5129

if.end40:                                         ; preds = %if.end39, %while.body
  %49 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec.addr, align 8, !dbg !5130
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %49, i32 1, !dbg !5130
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec.addr, align 8, !dbg !5130
  br label %while.cond, !dbg !5041, !llvm.loop !5131

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5133
}

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

declare dso_local zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

declare dso_local zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) #2

declare dso_local void @bitmap_obstack_release(%struct.bitmap_obstack*) #2

declare dso_local void @free(i8*) #2

declare dso_local void @bitmap_print(%struct._IO_FILE*, %struct.bitmap_head_def*, i8*, i8*) #2

declare dso_local i64 @bitmap_count_bits(%struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_alloc(%struct.bitmap_head_def* %all_blocks) #0 !dbg !5134 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_lr_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !5135, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !5137, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !5139, metadata !DIExpression()), !dbg !5140
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5141
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !5141
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !5141
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5141
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 3, !dbg !5143
  %2 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !5143
  %tobool = icmp ne %struct.alloc_pool_def* %2, null, !dbg !5141
  br i1 %tobool, label %if.end, label %if.then, !dbg !5144

if.then:                                          ; preds = %entry
  %call = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i64 32, i64 50), !dbg !5145
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5146
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !5146
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 1, !dbg !5146
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !5146
  %block_pool3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 3, !dbg !5147
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** %block_pool3, align 8, !dbg !5148
  br label %if.end, !dbg !5146

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !5149
  %problems_by_index4 = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 1, !dbg !5149
  %arrayidx5 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index4, i64 0, i64 1, !dbg !5149
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx5, align 8, !dbg !5149
  call void @df_grow_bb_info(%struct.dataflow* %6), !dbg !5150
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !5151
  %problems_by_index6 = getelementptr inbounds %struct.df, %struct.df* %7, i32 0, i32 1, !dbg !5151
  %arrayidx7 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index6, i64 0, i64 1, !dbg !5151
  %8 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !5151
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %8, i32 0, i32 4, !dbg !5151
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !5151
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %9, i32 0, i32* %bb_index), !dbg !5151
  br label %for.cond, !dbg !5151

for.cond:                                         ; preds = %for.inc, %if.end
  %call8 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5153
  %tobool9 = icmp ne i8 %call8, 0, !dbg !5151
  br i1 %tobool9, label %for.body, label %for.end, !dbg !5151

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_info, metadata !5155, metadata !DIExpression()), !dbg !5157
  %10 = load i32, i32* %bb_index, align 4, !dbg !5158
  %call10 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %10), !dbg !5159
  store %struct.df_lr_bb_info* %call10, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5157
  %11 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5160
  %tobool11 = icmp ne %struct.df_lr_bb_info* %11, null, !dbg !5160
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !5162

if.then12:                                        ; preds = %for.body
  %12 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5163
  %def = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %12, i32 0, i32 0, !dbg !5165
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !5165
  call void @bitmap_clear(%struct.bitmap_head_def* %13), !dbg !5166
  %14 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5167
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %14, i32 0, i32 1, !dbg !5168
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !5168
  call void @bitmap_clear(%struct.bitmap_head_def* %15), !dbg !5169
  br label %if.end23, !dbg !5170

if.else:                                          ; preds = %for.body
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !5171
  %problems_by_index13 = getelementptr inbounds %struct.df, %struct.df* %16, i32 0, i32 1, !dbg !5171
  %arrayidx14 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index13, i64 0, i64 1, !dbg !5171
  %17 = load %struct.dataflow*, %struct.dataflow** %arrayidx14, align 8, !dbg !5171
  %block_pool15 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %17, i32 0, i32 3, !dbg !5173
  %18 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool15, align 8, !dbg !5173
  %call16 = call i8* @pool_alloc(%struct.alloc_pool_def* %18), !dbg !5174
  %19 = bitcast i8* %call16 to %struct.df_lr_bb_info*, !dbg !5175
  store %struct.df_lr_bb_info* %19, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5176
  %20 = load i32, i32* %bb_index, align 4, !dbg !5177
  %21 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5178
  call void @df_lr_set_bb_info(i32 %20, %struct.df_lr_bb_info* %21), !dbg !5179
  %call17 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !5180
  %22 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5181
  %use18 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %22, i32 0, i32 1, !dbg !5182
  store %struct.bitmap_head_def* %call17, %struct.bitmap_head_def** %use18, align 8, !dbg !5183
  %call19 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !5184
  %23 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5185
  %def20 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %23, i32 0, i32 0, !dbg !5186
  store %struct.bitmap_head_def* %call19, %struct.bitmap_head_def** %def20, align 8, !dbg !5187
  %call21 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !5188
  %24 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5189
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %24, i32 0, i32 2, !dbg !5190
  store %struct.bitmap_head_def* %call21, %struct.bitmap_head_def** %in, align 8, !dbg !5191
  %call22 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !5192
  %25 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5193
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %25, i32 0, i32 3, !dbg !5194
  store %struct.bitmap_head_def* %call22, %struct.bitmap_head_def** %out, align 8, !dbg !5195
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then12
  br label %for.inc, !dbg !5196

for.inc:                                          ; preds = %if.end23
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5153
  br label %for.cond, !dbg !5153, !llvm.loop !5197

for.end:                                          ; preds = %for.cond
  %26 = load %struct.df*, %struct.df** @df, align 8, !dbg !5199
  %problems_by_index24 = getelementptr inbounds %struct.df, %struct.df* %26, i32 0, i32 1, !dbg !5199
  %arrayidx25 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index24, i64 0, i64 1, !dbg !5199
  %27 = load %struct.dataflow*, %struct.dataflow** %arrayidx25, align 8, !dbg !5199
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %27, i32 0, i32 9, !dbg !5200
  store i8 0, i8* %optional_p, align 2, !dbg !5201
  ret void, !dbg !5202
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_reset(%struct.bitmap_head_def* %all_blocks) #0 !dbg !5203 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_lr_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !5204, metadata !DIExpression()), !dbg !5205
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !5206, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !5208, metadata !DIExpression()), !dbg !5209
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !5210
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %bb_index), !dbg !5210
  br label %for.cond, !dbg !5210

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5212
  %tobool = icmp ne i8 %call, 0, !dbg !5210
  br i1 %tobool, label %for.body, label %for.end, !dbg !5210

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_info, metadata !5214, metadata !DIExpression()), !dbg !5216
  %1 = load i32, i32* %bb_index, align 4, !dbg !5217
  %call1 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %1), !dbg !5218
  store %struct.df_lr_bb_info* %call1, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5216
  %2 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5219
  %tobool2 = icmp ne %struct.df_lr_bb_info* %2, null, !dbg !5219
  br i1 %tobool2, label %cond.false, label %cond.true, !dbg !5219

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 818, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5219
  br label %cond.end, !dbg !5219

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !5219

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !5219
  %3 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5220
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %3, i32 0, i32 2, !dbg !5221
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5221
  call void @bitmap_clear(%struct.bitmap_head_def* %4), !dbg !5222
  %5 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5223
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %5, i32 0, i32 3, !dbg !5224
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5224
  call void @bitmap_clear(%struct.bitmap_head_def* %6), !dbg !5225
  br label %for.inc, !dbg !5226

for.inc:                                          ; preds = %cond.end
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5212
  br label %for.cond, !dbg !5212, !llvm.loop !5227

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5229
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_free_bb_info(%struct.basic_block_def* %bb, i8* %vbb_info) #0 !dbg !5230 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %vbb_info.addr = alloca i8*, align 8
  %bb_info = alloca %struct.df_lr_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !5231, metadata !DIExpression()), !dbg !5232
  store i8* %vbb_info, i8** %vbb_info.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vbb_info.addr, metadata !5233, metadata !DIExpression()), !dbg !5234
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_info, metadata !5235, metadata !DIExpression()), !dbg !5236
  %0 = load i8*, i8** %vbb_info.addr, align 8, !dbg !5237
  %1 = bitcast i8* %0 to %struct.df_lr_bb_info*, !dbg !5238
  store %struct.df_lr_bb_info* %1, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5236
  %2 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5239
  %tobool = icmp ne %struct.df_lr_bb_info* %2, null, !dbg !5239
  br i1 %tobool, label %if.then, label %if.end, !dbg !5241

if.then:                                          ; preds = %entry
  %3 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5242
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %3, i32 0, i32 1, !dbg !5242
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !5242
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %4), !dbg !5242
  %5 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5242
  %use1 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %5, i32 0, i32 1, !dbg !5242
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %use1, align 8, !dbg !5242
  %6 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5244
  %def = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %6, i32 0, i32 0, !dbg !5244
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !5244
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %7), !dbg !5244
  %8 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5244
  %def2 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %8, i32 0, i32 0, !dbg !5244
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %def2, align 8, !dbg !5244
  %9 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5245
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %9, i32 0, i32 2, !dbg !5245
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5245
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %10), !dbg !5245
  %11 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5245
  %in3 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %11, i32 0, i32 2, !dbg !5245
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in3, align 8, !dbg !5245
  %12 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5246
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %12, i32 0, i32 3, !dbg !5246
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5246
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %13), !dbg !5246
  %14 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5246
  %out4 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %14, i32 0, i32 3, !dbg !5246
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out4, align 8, !dbg !5246
  %15 = load %struct.df*, %struct.df** @df, align 8, !dbg !5247
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %15, i32 0, i32 1, !dbg !5247
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !5247
  %16 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5247
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %16, i32 0, i32 3, !dbg !5248
  %17 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !5248
  %18 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5249
  %19 = bitcast %struct.df_lr_bb_info* %18 to i8*, !dbg !5249
  call void @pool_free(%struct.alloc_pool_def* %17, i8* %19), !dbg !5250
  br label %if.end, !dbg !5251

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5252
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_local_compute(%struct.bitmap_head_def* %all_blocks) #0 !dbg !5253 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_lr_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !5254, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !5258, metadata !DIExpression()), !dbg !5259
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5260
  %hardware_regs_used = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 13, !dbg !5261
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !5261
  call void @bitmap_clear(%struct.bitmap_head_def* %1), !dbg !5262
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !5263
  %hardware_regs_used1 = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 13, !dbg !5264
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used1, align 8, !dbg !5264
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %3, i32 7), !dbg !5265
  %4 = load i32, i32* @reload_completed, align 4, !dbg !5266
  %tobool = icmp ne i32 %4, 0, !dbg !5266
  br i1 %tobool, label %if.end42, label %if.then, !dbg !5268

if.then:                                          ; preds = %entry
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !5269
  %hardware_regs_used2 = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 13, !dbg !5271
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used2, align 8, !dbg !5271
  %call3 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %6, i32 20), !dbg !5272
  %7 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !5273
  %tobool4 = icmp ne i8 %7, 0, !dbg !5273
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !5275

if.then5:                                         ; preds = %if.then
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !5276
  %hardware_regs_used6 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 13, !dbg !5277
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used6, align 8, !dbg !5277
  %call7 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %9, i32 16), !dbg !5278
  br label %if.end, !dbg !5278

if.end:                                           ; preds = %if.then5, %if.then
  %10 = load i32, i32* @flag_pic, align 4, !dbg !5279
  %tobool8 = icmp ne i32 %10, 0, !dbg !5279
  br i1 %tobool8, label %cond.false, label %cond.true, !dbg !5279

cond.true:                                        ; preds = %if.end
  br label %cond.end13, !dbg !5279

cond.false:                                       ; preds = %if.end
  %11 = load i32, i32* @reload_completed, align 4, !dbg !5279
  %tobool9 = icmp ne i32 %11, 0, !dbg !5279
  br i1 %tobool9, label %cond.true10, label %cond.false12, !dbg !5279

cond.true10:                                      ; preds = %cond.false
  %12 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !5279
  %call11 = call i32 @rhs_regno(%struct.rtx_def* %12), !dbg !5279
  br label %cond.end, !dbg !5279

cond.false12:                                     ; preds = %cond.false
  br label %cond.end, !dbg !5279

cond.end:                                         ; preds = %cond.false12, %cond.true10
  %cond = phi i32 [ %call11, %cond.true10 ], [ 3, %cond.false12 ], !dbg !5279
  br label %cond.end13, !dbg !5279

cond.end13:                                       ; preds = %cond.end, %cond.true
  %cond14 = phi i32 [ -1, %cond.true ], [ %cond, %cond.end ], !dbg !5279
  %cmp = icmp ne i32 %cond14, -1, !dbg !5281
  br i1 %cmp, label %land.lhs.true, label %if.end41, !dbg !5282

land.lhs.true:                                    ; preds = %cond.end13
  %13 = load i32, i32* @flag_pic, align 4, !dbg !5283
  %tobool15 = icmp ne i32 %13, 0, !dbg !5283
  br i1 %tobool15, label %cond.false17, label %cond.true16, !dbg !5283

cond.true16:                                      ; preds = %land.lhs.true
  br label %cond.end24, !dbg !5283

cond.false17:                                     ; preds = %land.lhs.true
  %14 = load i32, i32* @reload_completed, align 4, !dbg !5283
  %tobool18 = icmp ne i32 %14, 0, !dbg !5283
  br i1 %tobool18, label %cond.true19, label %cond.false21, !dbg !5283

cond.true19:                                      ; preds = %cond.false17
  %15 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !5283
  %call20 = call i32 @rhs_regno(%struct.rtx_def* %15), !dbg !5283
  br label %cond.end22, !dbg !5283

cond.false21:                                     ; preds = %cond.false17
  br label %cond.end22, !dbg !5283

cond.end22:                                       ; preds = %cond.false21, %cond.true19
  %cond23 = phi i32 [ %call20, %cond.true19 ], [ 3, %cond.false21 ], !dbg !5283
  br label %cond.end24, !dbg !5283

cond.end24:                                       ; preds = %cond.end22, %cond.true16
  %cond25 = phi i32 [ -1, %cond.true16 ], [ %cond23, %cond.end22 ], !dbg !5283
  %idxprom = zext i32 %cond25 to i64, !dbg !5284
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom, !dbg !5284
  %16 = load i8, i8* %arrayidx, align 1, !dbg !5284
  %conv = sext i8 %16 to i32, !dbg !5284
  %tobool26 = icmp ne i32 %conv, 0, !dbg !5284
  br i1 %tobool26, label %if.then27, label %if.end41, !dbg !5285

if.then27:                                        ; preds = %cond.end24
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !5286
  %hardware_regs_used28 = getelementptr inbounds %struct.df, %struct.df* %17, i32 0, i32 13, !dbg !5287
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used28, align 8, !dbg !5287
  %19 = load i32, i32* @flag_pic, align 4, !dbg !5288
  %tobool29 = icmp ne i32 %19, 0, !dbg !5288
  br i1 %tobool29, label %cond.false31, label %cond.true30, !dbg !5288

cond.true30:                                      ; preds = %if.then27
  br label %cond.end38, !dbg !5288

cond.false31:                                     ; preds = %if.then27
  %20 = load i32, i32* @reload_completed, align 4, !dbg !5288
  %tobool32 = icmp ne i32 %20, 0, !dbg !5288
  br i1 %tobool32, label %cond.true33, label %cond.false35, !dbg !5288

cond.true33:                                      ; preds = %cond.false31
  %21 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !5288
  %call34 = call i32 @rhs_regno(%struct.rtx_def* %21), !dbg !5288
  br label %cond.end36, !dbg !5288

cond.false35:                                     ; preds = %cond.false31
  br label %cond.end36, !dbg !5288

cond.end36:                                       ; preds = %cond.false35, %cond.true33
  %cond37 = phi i32 [ %call34, %cond.true33 ], [ 3, %cond.false35 ], !dbg !5288
  br label %cond.end38, !dbg !5288

cond.end38:                                       ; preds = %cond.end36, %cond.true30
  %cond39 = phi i32 [ -1, %cond.true30 ], [ %cond37, %cond.end36 ], !dbg !5288
  %call40 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %18, i32 %cond39), !dbg !5289
  br label %if.end41, !dbg !5289

if.end41:                                         ; preds = %cond.end38, %cond.end24, %cond.end13
  br label %if.end42, !dbg !5290

if.end42:                                         ; preds = %if.end41, %entry
  %22 = load %struct.df*, %struct.df** @df, align 8, !dbg !5291
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %22, i32 0, i32 1, !dbg !5291
  %arrayidx43 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !5291
  %23 = load %struct.dataflow*, %struct.dataflow** %arrayidx43, align 8, !dbg !5291
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %23, i32 0, i32 4, !dbg !5291
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !5291
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %24, i32 0, i32* %bb_index), !dbg !5291
  br label %for.cond, !dbg !5291

for.cond:                                         ; preds = %for.inc, %if.end42
  %call44 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5293
  %tobool45 = icmp ne i8 %call44, 0, !dbg !5291
  br i1 %tobool45, label %for.body, label %for.end, !dbg !5291

for.body:                                         ; preds = %for.cond
  %25 = load i32, i32* %bb_index, align 4, !dbg !5295
  %cmp46 = icmp eq i32 %25, 1, !dbg !5298
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !5299

if.then48:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_info, metadata !5300, metadata !DIExpression()), !dbg !5302
  %call49 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 1), !dbg !5303
  store %struct.df_lr_bb_info* %call49, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5302
  %26 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5304
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %26, i32 0, i32 1, !dbg !5305
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !5305
  %28 = load %struct.df*, %struct.df** @df, align 8, !dbg !5306
  %exit_block_uses = getelementptr inbounds %struct.df, %struct.df* %28, i32 0, i32 17, !dbg !5307
  %29 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !5307
  call void @bitmap_copy(%struct.bitmap_head_def* %27, %struct.bitmap_head_def* %29), !dbg !5308
  br label %if.end50, !dbg !5309

if.else:                                          ; preds = %for.body
  %30 = load i32, i32* %bb_index, align 4, !dbg !5310
  call void @df_lr_bb_local_compute(i32 %30), !dbg !5311
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then48
  br label %for.inc, !dbg !5312

for.inc:                                          ; preds = %if.end50
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5293
  br label %for.cond, !dbg !5293, !llvm.loop !5313

for.end:                                          ; preds = %for.cond
  %31 = load %struct.df*, %struct.df** @df, align 8, !dbg !5315
  %problems_by_index51 = getelementptr inbounds %struct.df, %struct.df* %31, i32 0, i32 1, !dbg !5315
  %arrayidx52 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index51, i64 0, i64 1, !dbg !5315
  %32 = load %struct.dataflow*, %struct.dataflow** %arrayidx52, align 8, !dbg !5315
  %out_of_date_transfer_functions53 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %32, i32 0, i32 4, !dbg !5316
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions53, align 8, !dbg !5316
  call void @bitmap_clear(%struct.bitmap_head_def* %33), !dbg !5317
  ret void, !dbg !5318
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_init(%struct.bitmap_head_def* %all_blocks) #0 !dbg !5319 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_lr_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !5320, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !5322, metadata !DIExpression()), !dbg !5323
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !5324, metadata !DIExpression()), !dbg !5325
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !5326
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %bb_index), !dbg !5326
  br label %for.cond, !dbg !5326

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5328
  %tobool = icmp ne i8 %call, 0, !dbg !5326
  br i1 %tobool, label %for.body, label %for.end, !dbg !5326

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_info, metadata !5330, metadata !DIExpression()), !dbg !5332
  %1 = load i32, i32* %bb_index, align 4, !dbg !5333
  %call1 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %1), !dbg !5334
  store %struct.df_lr_bb_info* %call1, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5332
  %2 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5335
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %2, i32 0, i32 2, !dbg !5336
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5336
  %4 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5337
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %4, i32 0, i32 1, !dbg !5338
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !5338
  call void @bitmap_copy(%struct.bitmap_head_def* %3, %struct.bitmap_head_def* %5), !dbg !5339
  %6 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5340
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %6, i32 0, i32 3, !dbg !5341
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5341
  call void @bitmap_clear(%struct.bitmap_head_def* %7), !dbg !5342
  br label %for.inc, !dbg !5343

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5328
  br label %for.cond, !dbg !5328, !llvm.loop !5344

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5346
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_confluence_0(%struct.basic_block_def* %bb) #0 !dbg !5347 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %op1 = alloca %struct.bitmap_head_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !5348, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %op1, metadata !5350, metadata !DIExpression()), !dbg !5351
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !5352
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !5353
  %1 = load i32, i32* %index, align 8, !dbg !5353
  %call = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %1), !dbg !5354
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i32 0, i32 3, !dbg !5355
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5355
  store %struct.bitmap_head_def* %2, %struct.bitmap_head_def** %op1, align 8, !dbg !5351
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !5356
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5358
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, !dbg !5358
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !5358
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5358
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i32 0, i32 1, !dbg !5358
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5358
  %cmp = icmp ne %struct.basic_block_def* %3, %6, !dbg !5359
  br i1 %cmp, label %if.then, label %if.end, !dbg !5360

if.then:                                          ; preds = %entry
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !5361
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !5362
  %hardware_regs_used = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 13, !dbg !5363
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !5363
  call void @bitmap_copy(%struct.bitmap_head_def* %7, %struct.bitmap_head_def* %9), !dbg !5364
  br label %if.end, !dbg !5364

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5365
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_confluence_n(%struct.edge_def* %e) #0 !dbg !5366 {
entry:
  %e.addr = alloca %struct.edge_def*, align 8
  %op1 = alloca %struct.bitmap_head_def*, align 8
  %op2 = alloca %struct.bitmap_head_def*, align 8
  store %struct.edge_def* %e, %struct.edge_def** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e.addr, metadata !5367, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %op1, metadata !5369, metadata !DIExpression()), !dbg !5370
  %0 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !5371
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %0, i32 0, i32 0, !dbg !5372
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5372
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 9, !dbg !5373
  %2 = load i32, i32* %index, align 8, !dbg !5373
  %call = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %2), !dbg !5374
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i32 0, i32 3, !dbg !5375
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5375
  store %struct.bitmap_head_def* %3, %struct.bitmap_head_def** %op1, align 8, !dbg !5370
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %op2, metadata !5376, metadata !DIExpression()), !dbg !5377
  %4 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !5378
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %4, i32 0, i32 1, !dbg !5379
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5379
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 9, !dbg !5380
  %6 = load i32, i32* %index1, align 8, !dbg !5380
  %call2 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %6), !dbg !5381
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call2, i32 0, i32 2, !dbg !5382
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5382
  store %struct.bitmap_head_def* %7, %struct.bitmap_head_def** %op2, align 8, !dbg !5377
  %8 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !5383
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %8, i32 0, i32 7, !dbg !5385
  %9 = load i32, i32* %flags, align 8, !dbg !5385
  %and = and i32 %9, 8, !dbg !5386
  %tobool = icmp ne i32 %and, 0, !dbg !5386
  br i1 %tobool, label %if.then, label %if.else, !dbg !5387

if.then:                                          ; preds = %entry
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !5388
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op2, align 8, !dbg !5389
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @regs_invalidated_by_call_regset, align 8, !dbg !5390
  %call3 = call zeroext i8 @bitmap_ior_and_compl_into(%struct.bitmap_head_def* %10, %struct.bitmap_head_def* %11, %struct.bitmap_head_def* %12), !dbg !5391
  br label %if.end, !dbg !5391

if.else:                                          ; preds = %entry
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !5392
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op2, align 8, !dbg !5393
  %call4 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %13, %struct.bitmap_head_def* %14), !dbg !5394
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !5395
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !5396
  %hardware_regs_used = getelementptr inbounds %struct.df, %struct.df* %16, i32 0, i32 13, !dbg !5397
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !5397
  %call5 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %15, %struct.bitmap_head_def* %17), !dbg !5398
  ret void, !dbg !5399
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_lr_transfer_function(i32 %bb_index) #0 !dbg !5400 {
entry:
  %bb_index.addr = alloca i32, align 4
  %bb_info = alloca %struct.df_lr_bb_info*, align 8
  %in = alloca %struct.bitmap_head_def*, align 8
  %out = alloca %struct.bitmap_head_def*, align 8
  %use = alloca %struct.bitmap_head_def*, align 8
  %def = alloca %struct.bitmap_head_def*, align 8
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !5401, metadata !DIExpression()), !dbg !5402
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_info, metadata !5403, metadata !DIExpression()), !dbg !5404
  %0 = load i32, i32* %bb_index.addr, align 4, !dbg !5405
  %call = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %0), !dbg !5406
  store %struct.df_lr_bb_info* %call, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5404
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %in, metadata !5407, metadata !DIExpression()), !dbg !5408
  %1 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5409
  %in1 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %1, i32 0, i32 2, !dbg !5410
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in1, align 8, !dbg !5410
  store %struct.bitmap_head_def* %2, %struct.bitmap_head_def** %in, align 8, !dbg !5408
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %out, metadata !5411, metadata !DIExpression()), !dbg !5412
  %3 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5413
  %out2 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %3, i32 0, i32 3, !dbg !5414
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out2, align 8, !dbg !5414
  store %struct.bitmap_head_def* %4, %struct.bitmap_head_def** %out, align 8, !dbg !5412
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %use, metadata !5415, metadata !DIExpression()), !dbg !5416
  %5 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5417
  %use3 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %5, i32 0, i32 1, !dbg !5418
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use3, align 8, !dbg !5418
  store %struct.bitmap_head_def* %6, %struct.bitmap_head_def** %use, align 8, !dbg !5416
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %def, metadata !5419, metadata !DIExpression()), !dbg !5420
  %7 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5421
  %def4 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %7, i32 0, i32 0, !dbg !5422
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def4, align 8, !dbg !5422
  store %struct.bitmap_head_def* %8, %struct.bitmap_head_def** %def, align 8, !dbg !5420
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5423
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !5424
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5425
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !5426
  %call5 = call zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def* %9, %struct.bitmap_head_def* %10, %struct.bitmap_head_def* %11, %struct.bitmap_head_def* %12), !dbg !5427
  ret i8 %call5, !dbg !5428
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_finalize(%struct.bitmap_head_def* %all_blocks) #0 !dbg !5429 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !5430, metadata !DIExpression()), !dbg !5431
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5432
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !5432
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !5432
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5432
  %solutions_dirty = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 8, !dbg !5433
  store i8 0, i8* %solutions_dirty, align 1, !dbg !5434
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !5435
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 27, !dbg !5437
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !5437
  %bf.cast = sext i8 %bf.load to i32, !dbg !5437
  %and = and i32 %bf.cast, 1, !dbg !5438
  %tobool = icmp ne i32 %and, 0, !dbg !5438
  br i1 %tobool, label %if.then, label %if.end9, !dbg !5439

if.then:                                          ; preds = %entry
  call void @run_fast_df_dce(), !dbg !5440
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5442
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !5442
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 1, !dbg !5442
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !5442
  %solutions_dirty3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 8, !dbg !5444
  %5 = load i8, i8* %solutions_dirty3, align 1, !dbg !5444
  %tobool4 = icmp ne i8 %5, 0, !dbg !5442
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !5445

if.then5:                                         ; preds = %if.then
  %call = call i32 @df_clear_flags(i32 1), !dbg !5446
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !5448
  call void @df_lr_alloc(%struct.bitmap_head_def* %6), !dbg !5449
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !5450
  call void @df_lr_local_compute(%struct.bitmap_head_def* %7), !dbg !5451
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !5452
  %problems_by_index6 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 1, !dbg !5452
  %arrayidx7 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index6, i64 0, i64 1, !dbg !5452
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !5452
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !5453
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !5454
  %postorder = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 21, !dbg !5455
  %12 = load i32*, i32** %postorder, align 8, !dbg !5455
  %13 = load %struct.df*, %struct.df** @df, align 8, !dbg !5456
  %n_blocks = getelementptr inbounds %struct.df, %struct.df* %13, i32 0, i32 23, !dbg !5457
  %14 = load i32, i32* %n_blocks, align 8, !dbg !5457
  call void @df_worklist_dataflow(%struct.dataflow* %9, %struct.bitmap_head_def* %10, i32* %12, i32 %14), !dbg !5458
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !5459
  call void @df_lr_finalize(%struct.bitmap_head_def* %15), !dbg !5460
  %call8 = call i32 @df_set_flags(i32 1), !dbg !5461
  br label %if.end, !dbg !5462

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end9, !dbg !5463

if.end9:                                          ; preds = %if.end, %entry
  ret void, !dbg !5464
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_free() #0 !dbg !5465 {
entry:
  %i = alloca i32, align 4
  %bb_info = alloca %struct.df_lr_bb_info*, align 8
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5466
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !5466
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !5466
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5466
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 1, !dbg !5468
  %2 = load i8**, i8*** %block_info, align 8, !dbg !5468
  %tobool = icmp ne i8** %2, null, !dbg !5466
  br i1 %tobool, label %if.then, label %if.end17, !dbg !5469

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5470, metadata !DIExpression()), !dbg !5472
  store i32 0, i32* %i, align 4, !dbg !5473
  br label %for.cond, !dbg !5475

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %i, align 4, !dbg !5476
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !5478
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !5478
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 1, !dbg !5478
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !5478
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 2, !dbg !5479
  %6 = load i32, i32* %block_info_size, align 8, !dbg !5479
  %cmp = icmp ult i32 %3, %6, !dbg !5480
  br i1 %cmp, label %for.body, label %for.end, !dbg !5481

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_info, metadata !5482, metadata !DIExpression()), !dbg !5484
  %7 = load i32, i32* %i, align 4, !dbg !5485
  %call = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %7), !dbg !5486
  store %struct.df_lr_bb_info* %call, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5484
  %8 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5487
  %tobool3 = icmp ne %struct.df_lr_bb_info* %8, null, !dbg !5487
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !5489

if.then4:                                         ; preds = %for.body
  %9 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5490
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %9, i32 0, i32 1, !dbg !5490
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !5490
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %10), !dbg !5490
  %11 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5490
  %use5 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %11, i32 0, i32 1, !dbg !5490
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %use5, align 8, !dbg !5490
  %12 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5492
  %def = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %12, i32 0, i32 0, !dbg !5492
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !5492
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %13), !dbg !5492
  %14 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5492
  %def6 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %14, i32 0, i32 0, !dbg !5492
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %def6, align 8, !dbg !5492
  %15 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5493
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %15, i32 0, i32 2, !dbg !5493
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5493
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %16), !dbg !5493
  %17 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5493
  %in7 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %17, i32 0, i32 2, !dbg !5493
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in7, align 8, !dbg !5493
  %18 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5494
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %18, i32 0, i32 3, !dbg !5494
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5494
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %19), !dbg !5494
  %20 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5494
  %out8 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %20, i32 0, i32 3, !dbg !5494
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out8, align 8, !dbg !5494
  br label %if.end, !dbg !5495

if.end:                                           ; preds = %if.then4, %for.body
  br label %for.inc, !dbg !5496

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %i, align 4, !dbg !5497
  %inc = add i32 %21, 1, !dbg !5497
  store i32 %inc, i32* %i, align 4, !dbg !5497
  br label %for.cond, !dbg !5498, !llvm.loop !5499

for.end:                                          ; preds = %for.cond
  %22 = load %struct.df*, %struct.df** @df, align 8, !dbg !5501
  %problems_by_index9 = getelementptr inbounds %struct.df, %struct.df* %22, i32 0, i32 1, !dbg !5501
  %arrayidx10 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index9, i64 0, i64 1, !dbg !5501
  %23 = load %struct.dataflow*, %struct.dataflow** %arrayidx10, align 8, !dbg !5501
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %23, i32 0, i32 3, !dbg !5502
  %24 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !5502
  call void @free_alloc_pool(%struct.alloc_pool_def* %24), !dbg !5503
  %25 = load %struct.df*, %struct.df** @df, align 8, !dbg !5504
  %problems_by_index11 = getelementptr inbounds %struct.df, %struct.df* %25, i32 0, i32 1, !dbg !5504
  %arrayidx12 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index11, i64 0, i64 1, !dbg !5504
  %26 = load %struct.dataflow*, %struct.dataflow** %arrayidx12, align 8, !dbg !5504
  %block_info_size13 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %26, i32 0, i32 2, !dbg !5505
  store i32 0, i32* %block_info_size13, align 8, !dbg !5506
  %27 = load %struct.df*, %struct.df** @df, align 8, !dbg !5507
  %problems_by_index14 = getelementptr inbounds %struct.df, %struct.df* %27, i32 0, i32 1, !dbg !5507
  %arrayidx15 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index14, i64 0, i64 1, !dbg !5507
  %28 = load %struct.dataflow*, %struct.dataflow** %arrayidx15, align 8, !dbg !5507
  %block_info16 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %28, i32 0, i32 1, !dbg !5508
  %29 = load i8**, i8*** %block_info16, align 8, !dbg !5508
  %30 = bitcast i8** %29 to i8*, !dbg !5507
  call void @free(i8* %30), !dbg !5509
  br label %if.end17, !dbg !5510

if.end17:                                         ; preds = %for.end, %entry
  %31 = load %struct.df*, %struct.df** @df, align 8, !dbg !5511
  %problems_by_index18 = getelementptr inbounds %struct.df, %struct.df* %31, i32 0, i32 1, !dbg !5511
  %arrayidx19 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index18, i64 0, i64 1, !dbg !5511
  %32 = load %struct.dataflow*, %struct.dataflow** %arrayidx19, align 8, !dbg !5511
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %32, i32 0, i32 4, !dbg !5511
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !5511
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %33), !dbg !5511
  %34 = load %struct.df*, %struct.df** @df, align 8, !dbg !5511
  %problems_by_index20 = getelementptr inbounds %struct.df, %struct.df* %34, i32 0, i32 1, !dbg !5511
  %arrayidx21 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index20, i64 0, i64 1, !dbg !5511
  %35 = load %struct.dataflow*, %struct.dataflow** %arrayidx21, align 8, !dbg !5511
  %out_of_date_transfer_functions22 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %35, i32 0, i32 4, !dbg !5511
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out_of_date_transfer_functions22, align 8, !dbg !5511
  %36 = load %struct.df*, %struct.df** @df, align 8, !dbg !5512
  %problems_by_index23 = getelementptr inbounds %struct.df, %struct.df* %36, i32 0, i32 1, !dbg !5512
  %arrayidx24 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index23, i64 0, i64 1, !dbg !5512
  %37 = load %struct.dataflow*, %struct.dataflow** %arrayidx24, align 8, !dbg !5512
  %38 = bitcast %struct.dataflow* %37 to i8*, !dbg !5512
  call void @free(i8* %38), !dbg !5513
  ret void, !dbg !5514
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_top_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !5515 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %bb_info = alloca %struct.df_lr_bb_info*, align 8
  %problem_data = alloca %struct.df_lr_problem_data*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !5516, metadata !DIExpression()), !dbg !5517
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !5518, metadata !DIExpression()), !dbg !5519
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_info, metadata !5520, metadata !DIExpression()), !dbg !5521
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !5522
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !5523
  %1 = load i32, i32* %index, align 8, !dbg !5523
  %call = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %1), !dbg !5524
  store %struct.df_lr_bb_info* %call, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5521
  call void @llvm.dbg.declare(metadata %struct.df_lr_problem_data** %problem_data, metadata !5525, metadata !DIExpression()), !dbg !5526
  %2 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5527
  %tobool = icmp ne %struct.df_lr_bb_info* %2, null, !dbg !5527
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5529

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5530
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %3, i32 0, i32 2, !dbg !5531
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5531
  %tobool1 = icmp ne %struct.bitmap_head_def* %4, null, !dbg !5530
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5532

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !5533

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !5534
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0)), !dbg !5535
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !5536
  %7 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5537
  %in3 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %7, i32 0, i32 2, !dbg !5538
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in3, align 8, !dbg !5538
  call void @df_print_regset(%struct._IO_FILE* %6, %struct.bitmap_head_def* %8), !dbg !5539
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !5540
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 1, !dbg !5540
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !5540
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5540
  %problem_data4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %10, i32 0, i32 5, !dbg !5542
  %11 = load i8*, i8** %problem_data4, align 8, !dbg !5542
  %tobool5 = icmp ne i8* %11, null, !dbg !5540
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !5543

if.then6:                                         ; preds = %if.end
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !5544
  %problems_by_index7 = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 1, !dbg !5544
  %arrayidx8 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index7, i64 0, i64 1, !dbg !5544
  %13 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !5544
  %problem_data9 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %13, i32 0, i32 5, !dbg !5546
  %14 = load i8*, i8** %problem_data9, align 8, !dbg !5546
  %15 = bitcast i8* %14 to %struct.df_lr_problem_data*, !dbg !5547
  store %struct.df_lr_problem_data* %15, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5548
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !5549
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0)), !dbg !5550
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !5551
  %18 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5552
  %in11 = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %18, i32 0, i32 0, !dbg !5553
  %19 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in11, align 8, !dbg !5553
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !5554
  %index12 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i32 0, i32 9, !dbg !5555
  %21 = load i32, i32* %index12, align 8, !dbg !5555
  %idxprom = sext i32 %21 to i64, !dbg !5552
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %19, i64 %idxprom, !dbg !5552
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx13, align 8, !dbg !5552
  call void @df_print_regset(%struct._IO_FILE* %17, %struct.bitmap_head_def* %22), !dbg !5556
  br label %if.end14, !dbg !5557

if.end14:                                         ; preds = %if.then6, %if.end
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !5558
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0)), !dbg !5559
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !5560
  %25 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5561
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %25, i32 0, i32 1, !dbg !5562
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !5562
  call void @df_print_regset(%struct._IO_FILE* %24, %struct.bitmap_head_def* %26), !dbg !5563
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !5564
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0)), !dbg !5565
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !5566
  %29 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5567
  %def = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %29, i32 0, i32 0, !dbg !5568
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !5568
  call void @df_print_regset(%struct._IO_FILE* %28, %struct.bitmap_head_def* %30), !dbg !5569
  br label %return, !dbg !5570

return:                                           ; preds = %if.end14, %if.then
  ret void, !dbg !5570
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_bottom_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !5571 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %bb_info = alloca %struct.df_lr_bb_info*, align 8
  %problem_data = alloca %struct.df_lr_problem_data*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !5572, metadata !DIExpression()), !dbg !5573
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !5574, metadata !DIExpression()), !dbg !5575
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_info, metadata !5576, metadata !DIExpression()), !dbg !5577
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !5578
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !5579
  %1 = load i32, i32* %index, align 8, !dbg !5579
  %call = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %1), !dbg !5580
  store %struct.df_lr_bb_info* %call, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5577
  call void @llvm.dbg.declare(metadata %struct.df_lr_problem_data** %problem_data, metadata !5581, metadata !DIExpression()), !dbg !5582
  %2 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5583
  %tobool = icmp ne %struct.df_lr_bb_info* %2, null, !dbg !5583
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5585

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5586
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %3, i32 0, i32 3, !dbg !5587
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5587
  %tobool1 = icmp ne %struct.bitmap_head_def* %4, null, !dbg !5586
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5588

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end14, !dbg !5589

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !5590
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0)), !dbg !5591
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !5592
  %7 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info, align 8, !dbg !5593
  %out3 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %7, i32 0, i32 3, !dbg !5594
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out3, align 8, !dbg !5594
  call void @df_print_regset(%struct._IO_FILE* %6, %struct.bitmap_head_def* %8), !dbg !5595
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !5596
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 1, !dbg !5596
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !5596
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5596
  %problem_data4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %10, i32 0, i32 5, !dbg !5598
  %11 = load i8*, i8** %problem_data4, align 8, !dbg !5598
  %tobool5 = icmp ne i8* %11, null, !dbg !5596
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !5599

if.then6:                                         ; preds = %if.end
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !5600
  %problems_by_index7 = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 1, !dbg !5600
  %arrayidx8 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index7, i64 0, i64 1, !dbg !5600
  %13 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !5600
  %problem_data9 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %13, i32 0, i32 5, !dbg !5602
  %14 = load i8*, i8** %problem_data9, align 8, !dbg !5602
  %15 = bitcast i8* %14 to %struct.df_lr_problem_data*, !dbg !5603
  store %struct.df_lr_problem_data* %15, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5604
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !5605
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0)), !dbg !5606
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !5607
  %18 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5608
  %out11 = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %18, i32 0, i32 1, !dbg !5609
  %19 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out11, align 8, !dbg !5609
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !5610
  %index12 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i32 0, i32 9, !dbg !5611
  %21 = load i32, i32* %index12, align 8, !dbg !5611
  %idxprom = sext i32 %21 to i64, !dbg !5608
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %19, i64 %idxprom, !dbg !5608
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx13, align 8, !dbg !5608
  call void @df_print_regset(%struct._IO_FILE* %17, %struct.bitmap_head_def* %22), !dbg !5612
  br label %if.end14, !dbg !5613

if.end14:                                         ; preds = %if.then, %if.then6, %if.end
  ret void, !dbg !5614
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_verify_solution_start() #0 !dbg !5615 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  %problem_data = alloca %struct.df_lr_problem_data*, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !5616, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.declare(metadata %struct.df_lr_problem_data** %problem_data, metadata !5618, metadata !DIExpression()), !dbg !5619
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5620
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !5620
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !5620
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5620
  %solutions_dirty = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 8, !dbg !5622
  %2 = load i8, i8* %solutions_dirty, align 1, !dbg !5622
  %tobool = icmp ne i8 %2, 0, !dbg !5620
  br i1 %tobool, label %if.then, label %if.end, !dbg !5623

if.then:                                          ; preds = %entry
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5624
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !5624
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 1, !dbg !5624
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !5624
  %problem_data3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 5, !dbg !5626
  store i8* null, i8** %problem_data3, align 8, !dbg !5627
  br label %for.end, !dbg !5628

if.end:                                           ; preds = %entry
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !5629
  %problems_by_index4 = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 1, !dbg !5629
  %arrayidx5 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index4, i64 0, i64 1, !dbg !5629
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx5, align 8, !dbg !5629
  %solutions_dirty6 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i32 0, i32 8, !dbg !5630
  store i8 1, i8* %solutions_dirty6, align 1, !dbg !5631
  %call = call i8* @xmalloc(i64 16), !dbg !5632
  %7 = bitcast i8* %call to %struct.df_lr_problem_data*, !dbg !5632
  store %struct.df_lr_problem_data* %7, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5633
  %8 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5634
  %9 = bitcast %struct.df_lr_problem_data* %8 to i8*, !dbg !5634
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !5635
  %problems_by_index7 = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 1, !dbg !5635
  %arrayidx8 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index7, i64 0, i64 1, !dbg !5635
  %11 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !5635
  %problem_data9 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %11, i32 0, i32 5, !dbg !5636
  store i8* %9, i8** %problem_data9, align 8, !dbg !5637
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5638
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, !dbg !5638
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !5638
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5638
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i32 0, i32 5, !dbg !5638
  %14 = load i32, i32* %x_last_basic_block, align 8, !dbg !5638
  %conv = sext i32 %14 to i64, !dbg !5638
  %mul = mul i64 8, %conv, !dbg !5638
  %call10 = call i8* @xmalloc(i64 %mul), !dbg !5638
  %15 = bitcast i8* %call10 to %struct.bitmap_head_def**, !dbg !5638
  %16 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5639
  %in = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %16, i32 0, i32 0, !dbg !5640
  store %struct.bitmap_head_def** %15, %struct.bitmap_head_def*** %in, align 8, !dbg !5641
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5642
  %add.ptr11 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, !dbg !5642
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %add.ptr11, i32 0, i32 1, !dbg !5642
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !5642
  %x_last_basic_block13 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i32 0, i32 5, !dbg !5642
  %19 = load i32, i32* %x_last_basic_block13, align 8, !dbg !5642
  %conv14 = sext i32 %19 to i64, !dbg !5642
  %mul15 = mul i64 8, %conv14, !dbg !5642
  %call16 = call i8* @xmalloc(i64 %mul15), !dbg !5642
  %20 = bitcast i8* %call16 to %struct.bitmap_head_def**, !dbg !5642
  %21 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5643
  %out = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %21, i32 0, i32 1, !dbg !5644
  store %struct.bitmap_head_def** %20, %struct.bitmap_head_def*** %out, align 8, !dbg !5645
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5646
  %add.ptr17 = getelementptr inbounds %struct.function, %struct.function* %22, i64 0, !dbg !5646
  %cfg18 = getelementptr inbounds %struct.function, %struct.function* %add.ptr17, i32 0, i32 1, !dbg !5646
  %23 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg18, align 8, !dbg !5646
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %23, i32 0, i32 0, !dbg !5646
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5646
  store %struct.basic_block_def* %24, %struct.basic_block_def** %bb, align 8, !dbg !5646
  br label %for.cond, !dbg !5646

for.cond:                                         ; preds = %for.inc, %if.end
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5648
  %tobool19 = icmp ne %struct.basic_block_def* %25, null, !dbg !5646
  br i1 %tobool19, label %for.body, label %for.end, !dbg !5646

for.body:                                         ; preds = %for.cond
  %call20 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !5650
  %26 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5652
  %in21 = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %26, i32 0, i32 0, !dbg !5653
  %27 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in21, align 8, !dbg !5653
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5654
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %28, i32 0, i32 9, !dbg !5655
  %29 = load i32, i32* %index, align 8, !dbg !5655
  %idxprom = sext i32 %29 to i64, !dbg !5652
  %arrayidx22 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %27, i64 %idxprom, !dbg !5652
  store %struct.bitmap_head_def* %call20, %struct.bitmap_head_def** %arrayidx22, align 8, !dbg !5656
  %call23 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !5657
  %30 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5658
  %out24 = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %30, i32 0, i32 1, !dbg !5659
  %31 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out24, align 8, !dbg !5659
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5660
  %index25 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i32 0, i32 9, !dbg !5661
  %33 = load i32, i32* %index25, align 8, !dbg !5661
  %idxprom26 = sext i32 %33 to i64, !dbg !5658
  %arrayidx27 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %31, i64 %idxprom26, !dbg !5658
  store %struct.bitmap_head_def* %call23, %struct.bitmap_head_def** %arrayidx27, align 8, !dbg !5662
  %34 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5663
  %in28 = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %34, i32 0, i32 0, !dbg !5664
  %35 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in28, align 8, !dbg !5664
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5665
  %index29 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i32 0, i32 9, !dbg !5666
  %37 = load i32, i32* %index29, align 8, !dbg !5666
  %idxprom30 = sext i32 %37 to i64, !dbg !5663
  %arrayidx31 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %35, i64 %idxprom30, !dbg !5663
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx31, align 8, !dbg !5663
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5667
  %index32 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i32 0, i32 9, !dbg !5667
  %40 = load i32, i32* %index32, align 8, !dbg !5667
  %call33 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %40), !dbg !5667
  %in34 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call33, i32 0, i32 2, !dbg !5667
  %41 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in34, align 8, !dbg !5667
  call void @bitmap_copy(%struct.bitmap_head_def* %38, %struct.bitmap_head_def* %41), !dbg !5668
  %42 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5669
  %out35 = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %42, i32 0, i32 1, !dbg !5670
  %43 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out35, align 8, !dbg !5670
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5671
  %index36 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %44, i32 0, i32 9, !dbg !5672
  %45 = load i32, i32* %index36, align 8, !dbg !5672
  %idxprom37 = sext i32 %45 to i64, !dbg !5669
  %arrayidx38 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %43, i64 %idxprom37, !dbg !5669
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx38, align 8, !dbg !5669
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5673
  %index39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %47, i32 0, i32 9, !dbg !5673
  %48 = load i32, i32* %index39, align 8, !dbg !5673
  %call40 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %48), !dbg !5673
  %out41 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call40, i32 0, i32 3, !dbg !5673
  %49 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out41, align 8, !dbg !5673
  call void @bitmap_copy(%struct.bitmap_head_def* %46, %struct.bitmap_head_def* %49), !dbg !5674
  br label %for.inc, !dbg !5675

for.inc:                                          ; preds = %for.body
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5648
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %50, i32 0, i32 6, !dbg !5648
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !5648
  store %struct.basic_block_def* %51, %struct.basic_block_def** %bb, align 8, !dbg !5648
  br label %for.cond, !dbg !5648, !llvm.loop !5676

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !5678
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_verify_solution_end() #0 !dbg !5679 {
entry:
  %problem_data = alloca %struct.df_lr_problem_data*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  call void @llvm.dbg.declare(metadata %struct.df_lr_problem_data** %problem_data, metadata !5680, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !5682, metadata !DIExpression()), !dbg !5683
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5684
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !5684
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !5684
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5684
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !5686
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !5686
  %cmp = icmp eq i8* %2, null, !dbg !5687
  br i1 %cmp, label %if.then, label %if.end, !dbg !5688

if.then:                                          ; preds = %entry
  br label %return, !dbg !5689

if.end:                                           ; preds = %entry
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5690
  %problems_by_index2 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !5690
  %arrayidx3 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index2, i64 0, i64 1, !dbg !5690
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx3, align 8, !dbg !5690
  %problem_data4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 5, !dbg !5691
  %5 = load i8*, i8** %problem_data4, align 8, !dbg !5691
  %6 = bitcast i8* %5 to %struct.df_lr_problem_data*, !dbg !5692
  store %struct.df_lr_problem_data* %6, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5693
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !5694
  %problems_by_index5 = getelementptr inbounds %struct.df, %struct.df* %7, i32 0, i32 1, !dbg !5694
  %arrayidx6 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index5, i64 0, i64 1, !dbg !5694
  %8 = load %struct.dataflow*, %struct.dataflow** %arrayidx6, align 8, !dbg !5694
  %solutions_dirty = getelementptr inbounds %struct.dataflow, %struct.dataflow* %8, i32 0, i32 8, !dbg !5696
  %9 = load i8, i8* %solutions_dirty, align 1, !dbg !5696
  %tobool = icmp ne i8 %9, 0, !dbg !5694
  br i1 %tobool, label %if.then7, label %if.else, !dbg !5697

if.then7:                                         ; preds = %if.end
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !5698
  %problems_by_index8 = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 1, !dbg !5698
  %arrayidx9 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index8, i64 0, i64 1, !dbg !5698
  %11 = load %struct.dataflow*, %struct.dataflow** %arrayidx9, align 8, !dbg !5698
  %solutions_dirty10 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %11, i32 0, i32 8, !dbg !5699
  store i8 0, i8* %solutions_dirty10, align 1, !dbg !5700
  br label %if.end27, !dbg !5698

if.else:                                          ; preds = %if.end
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5701
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, !dbg !5701
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !5701
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5701
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i32 0, i32 0, !dbg !5701
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5701
  store %struct.basic_block_def* %14, %struct.basic_block_def** %bb, align 8, !dbg !5701
  br label %for.cond, !dbg !5701

for.cond:                                         ; preds = %for.inc, %if.else
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5703
  %tobool11 = icmp ne %struct.basic_block_def* %15, null, !dbg !5701
  br i1 %tobool11, label %for.body, label %for.end, !dbg !5701

for.body:                                         ; preds = %for.cond
  %16 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5705
  %in = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %16, i32 0, i32 0, !dbg !5708
  %17 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in, align 8, !dbg !5708
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5709
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i32 0, i32 9, !dbg !5710
  %19 = load i32, i32* %index, align 8, !dbg !5710
  %idxprom = sext i32 %19 to i64, !dbg !5705
  %arrayidx12 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %17, i64 %idxprom, !dbg !5705
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx12, align 8, !dbg !5705
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5711
  %index13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i32 0, i32 9, !dbg !5711
  %22 = load i32, i32* %index13, align 8, !dbg !5711
  %call = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %22), !dbg !5711
  %in14 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i32 0, i32 2, !dbg !5711
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in14, align 8, !dbg !5711
  %call15 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %20, %struct.bitmap_head_def* %23), !dbg !5712
  %tobool16 = icmp ne i8 %call15, 0, !dbg !5712
  br i1 %tobool16, label %lor.lhs.false, label %if.then25, !dbg !5713

lor.lhs.false:                                    ; preds = %for.body
  %24 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5714
  %out = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %24, i32 0, i32 1, !dbg !5715
  %25 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out, align 8, !dbg !5715
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5716
  %index17 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i32 0, i32 9, !dbg !5717
  %27 = load i32, i32* %index17, align 8, !dbg !5717
  %idxprom18 = sext i32 %27 to i64, !dbg !5714
  %arrayidx19 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %25, i64 %idxprom18, !dbg !5714
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx19, align 8, !dbg !5714
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5718
  %index20 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i32 0, i32 9, !dbg !5718
  %30 = load i32, i32* %index20, align 8, !dbg !5718
  %call21 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %30), !dbg !5718
  %out22 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call21, i32 0, i32 3, !dbg !5718
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out22, align 8, !dbg !5718
  %call23 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %28, %struct.bitmap_head_def* %31), !dbg !5719
  %tobool24 = icmp ne i8 %call23, 0, !dbg !5719
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !5720

if.then25:                                        ; preds = %lor.lhs.false, %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1203, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5721
  br label %if.end26, !dbg !5723

if.end26:                                         ; preds = %if.then25, %lor.lhs.false
  br label %for.inc, !dbg !5724

for.inc:                                          ; preds = %if.end26
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5703
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i32 0, i32 6, !dbg !5703
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !5703
  store %struct.basic_block_def* %33, %struct.basic_block_def** %bb, align 8, !dbg !5703
  br label %for.cond, !dbg !5703, !llvm.loop !5725

for.end:                                          ; preds = %for.cond
  br label %if.end27

if.end27:                                         ; preds = %for.end, %if.then7
  %34 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5727
  %add.ptr28 = getelementptr inbounds %struct.function, %struct.function* %34, i64 0, !dbg !5727
  %cfg29 = getelementptr inbounds %struct.function, %struct.function* %add.ptr28, i32 0, i32 1, !dbg !5727
  %35 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg29, align 8, !dbg !5727
  %x_entry_block_ptr30 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %35, i32 0, i32 0, !dbg !5727
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr30, align 8, !dbg !5727
  store %struct.basic_block_def* %36, %struct.basic_block_def** %bb, align 8, !dbg !5727
  br label %for.cond31, !dbg !5727

for.cond31:                                       ; preds = %for.inc50, %if.end27
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5729
  %tobool32 = icmp ne %struct.basic_block_def* %37, null, !dbg !5727
  br i1 %tobool32, label %for.body33, label %for.end52, !dbg !5727

for.body33:                                       ; preds = %for.cond31
  %38 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5731
  %in34 = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %38, i32 0, i32 0, !dbg !5731
  %39 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in34, align 8, !dbg !5731
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5731
  %index35 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i32 0, i32 9, !dbg !5731
  %41 = load i32, i32* %index35, align 8, !dbg !5731
  %idxprom36 = sext i32 %41 to i64, !dbg !5731
  %arrayidx37 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %39, i64 %idxprom36, !dbg !5731
  %42 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx37, align 8, !dbg !5731
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %42), !dbg !5731
  %43 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5731
  %in38 = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %43, i32 0, i32 0, !dbg !5731
  %44 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in38, align 8, !dbg !5731
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5731
  %index39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %45, i32 0, i32 9, !dbg !5731
  %46 = load i32, i32* %index39, align 8, !dbg !5731
  %idxprom40 = sext i32 %46 to i64, !dbg !5731
  %arrayidx41 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %44, i64 %idxprom40, !dbg !5731
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx41, align 8, !dbg !5731
  %47 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5733
  %out42 = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %47, i32 0, i32 1, !dbg !5733
  %48 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out42, align 8, !dbg !5733
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5733
  %index43 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %49, i32 0, i32 9, !dbg !5733
  %50 = load i32, i32* %index43, align 8, !dbg !5733
  %idxprom44 = sext i32 %50 to i64, !dbg !5733
  %arrayidx45 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %48, i64 %idxprom44, !dbg !5733
  %51 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx45, align 8, !dbg !5733
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %51), !dbg !5733
  %52 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5733
  %out46 = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %52, i32 0, i32 1, !dbg !5733
  %53 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out46, align 8, !dbg !5733
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5733
  %index47 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %54, i32 0, i32 9, !dbg !5733
  %55 = load i32, i32* %index47, align 8, !dbg !5733
  %idxprom48 = sext i32 %55 to i64, !dbg !5733
  %arrayidx49 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %53, i64 %idxprom48, !dbg !5733
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx49, align 8, !dbg !5733
  br label %for.inc50, !dbg !5734

for.inc50:                                        ; preds = %for.body33
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !5729
  %next_bb51 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %56, i32 0, i32 6, !dbg !5729
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb51, align 8, !dbg !5729
  store %struct.basic_block_def* %57, %struct.basic_block_def** %bb, align 8, !dbg !5729
  br label %for.cond31, !dbg !5729, !llvm.loop !5735

for.end52:                                        ; preds = %for.cond31
  %58 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5737
  %in53 = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %58, i32 0, i32 0, !dbg !5738
  %59 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in53, align 8, !dbg !5738
  %60 = bitcast %struct.bitmap_head_def** %59 to i8*, !dbg !5737
  call void @free(i8* %60), !dbg !5739
  %61 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5740
  %out54 = getelementptr inbounds %struct.df_lr_problem_data, %struct.df_lr_problem_data* %61, i32 0, i32 1, !dbg !5741
  %62 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out54, align 8, !dbg !5741
  %63 = bitcast %struct.bitmap_head_def** %62 to i8*, !dbg !5740
  call void @free(i8* %63), !dbg !5742
  %64 = load %struct.df_lr_problem_data*, %struct.df_lr_problem_data** %problem_data, align 8, !dbg !5743
  %65 = bitcast %struct.df_lr_problem_data* %64 to i8*, !dbg !5743
  call void @free(i8* %65), !dbg !5744
  %66 = load %struct.df*, %struct.df** @df, align 8, !dbg !5745
  %problems_by_index55 = getelementptr inbounds %struct.df, %struct.df* %66, i32 0, i32 1, !dbg !5745
  %arrayidx56 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index55, i64 0, i64 1, !dbg !5745
  %67 = load %struct.dataflow*, %struct.dataflow** %arrayidx56, align 8, !dbg !5745
  %problem_data57 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %67, i32 0, i32 5, !dbg !5746
  store i8* null, i8** %problem_data57, align 8, !dbg !5747
  br label %return, !dbg !5748

return:                                           ; preds = %for.end52, %if.then
  ret void, !dbg !5748
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_lr_set_bb_info(i32 %index, %struct.df_lr_bb_info* %bb_info) #0 !dbg !5749 {
entry:
  %index.addr = alloca i32, align 4
  %bb_info.addr = alloca %struct.df_lr_bb_info*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5752, metadata !DIExpression()), !dbg !5753
  store %struct.df_lr_bb_info* %bb_info, %struct.df_lr_bb_info** %bb_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_info.addr, metadata !5754, metadata !DIExpression()), !dbg !5755
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5756
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !5756
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !5756
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5756
  %tobool = icmp ne %struct.dataflow* %1, null, !dbg !5756
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5756

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 745, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5756
  br label %cond.end, !dbg !5756

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5756

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !5756
  %2 = load i32, i32* %index.addr, align 4, !dbg !5757
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5757
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !5757
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 1, !dbg !5757
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !5757
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 2, !dbg !5757
  %5 = load i32, i32* %block_info_size, align 8, !dbg !5757
  %cmp = icmp ult i32 %2, %5, !dbg !5757
  br i1 %cmp, label %cond.false4, label %cond.true3, !dbg !5757

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 746, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5757
  br label %cond.end5, !dbg !5757

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !5757

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !5757
  %6 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_info.addr, align 8, !dbg !5758
  %7 = bitcast %struct.df_lr_bb_info* %6 to i8*, !dbg !5758
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !5759
  %problems_by_index7 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 1, !dbg !5759
  %arrayidx8 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index7, i64 0, i64 1, !dbg !5759
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !5759
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %9, i32 0, i32 1, !dbg !5760
  %10 = load i8**, i8*** %block_info, align 8, !dbg !5760
  %11 = load i32, i32* %index.addr, align 4, !dbg !5761
  %idxprom = zext i32 %11 to i64, !dbg !5759
  %arrayidx9 = getelementptr inbounds i8*, i8** %10, i64 %idxprom, !dbg !5759
  store i8* %7, i8** %arrayidx9, align 8, !dbg !5762
  ret void, !dbg !5763
}

declare dso_local zeroext i8 @bitmap_ior_and_compl_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

declare dso_local void @run_fast_df_dce() #2

declare dso_local i32 @df_clear_flags(i32) #2

declare dso_local i32 @df_set_flags(i32) #2

declare dso_local void @df_print_regset(%struct._IO_FILE*, %struct.bitmap_head_def*) #2

declare dso_local void @df_recompute_luids(%struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_alloc(%struct.bitmap_head_def* %all_blocks) #0 !dbg !5764 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_live_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !5765, metadata !DIExpression()), !dbg !5766
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !5767, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !5769, metadata !DIExpression()), !dbg !5770
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5771
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !5771
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !5771
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5771
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 3, !dbg !5773
  %2 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !5773
  %tobool = icmp ne %struct.alloc_pool_def* %2, null, !dbg !5771
  br i1 %tobool, label %if.end, label %if.then, !dbg !5774

if.then:                                          ; preds = %entry
  %call = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0), i64 32, i64 100), !dbg !5775
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5776
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !5776
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 2, !dbg !5776
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !5776
  %block_pool3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 3, !dbg !5777
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** %block_pool3, align 8, !dbg !5778
  br label %if.end, !dbg !5776

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !5779
  %tobool4 = icmp ne %struct.bitmap_head_def* %5, null, !dbg !5779
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !5781

if.then5:                                         ; preds = %if.end
  %call6 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !5782
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !5783
  br label %if.end7, !dbg !5784

if.end7:                                          ; preds = %if.then5, %if.end
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !5785
  %problems_by_index8 = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 1, !dbg !5785
  %arrayidx9 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index8, i64 0, i64 2, !dbg !5785
  %7 = load %struct.dataflow*, %struct.dataflow** %arrayidx9, align 8, !dbg !5785
  call void @df_grow_bb_info(%struct.dataflow* %7), !dbg !5786
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !5787
  %problems_by_index10 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 1, !dbg !5787
  %arrayidx11 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index10, i64 0, i64 2, !dbg !5787
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx11, align 8, !dbg !5787
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %9, i32 0, i32 4, !dbg !5787
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !5787
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %10, i32 0, i32* %bb_index), !dbg !5787
  br label %for.cond, !dbg !5787

for.cond:                                         ; preds = %for.inc, %if.end7
  %call12 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5789
  %tobool13 = icmp ne i8 %call12, 0, !dbg !5787
  br i1 %tobool13, label %for.body, label %for.end, !dbg !5787

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_live_bb_info** %bb_info, metadata !5791, metadata !DIExpression()), !dbg !5793
  %11 = load i32, i32* %bb_index, align 4, !dbg !5794
  %call14 = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %11), !dbg !5795
  store %struct.df_live_bb_info* %call14, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5793
  %12 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5796
  %tobool15 = icmp ne %struct.df_live_bb_info* %12, null, !dbg !5796
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !5798

if.then16:                                        ; preds = %for.body
  %13 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5799
  %kill = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %13, i32 0, i32 0, !dbg !5801
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !5801
  call void @bitmap_clear(%struct.bitmap_head_def* %14), !dbg !5802
  %15 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5803
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %15, i32 0, i32 1, !dbg !5804
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !5804
  call void @bitmap_clear(%struct.bitmap_head_def* %16), !dbg !5805
  br label %if.end27, !dbg !5806

if.else:                                          ; preds = %for.body
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !5807
  %problems_by_index17 = getelementptr inbounds %struct.df, %struct.df* %17, i32 0, i32 1, !dbg !5807
  %arrayidx18 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index17, i64 0, i64 2, !dbg !5807
  %18 = load %struct.dataflow*, %struct.dataflow** %arrayidx18, align 8, !dbg !5807
  %block_pool19 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %18, i32 0, i32 3, !dbg !5809
  %19 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool19, align 8, !dbg !5809
  %call20 = call i8* @pool_alloc(%struct.alloc_pool_def* %19), !dbg !5810
  %20 = bitcast i8* %call20 to %struct.df_live_bb_info*, !dbg !5811
  store %struct.df_live_bb_info* %20, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5812
  %21 = load i32, i32* %bb_index, align 4, !dbg !5813
  %22 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5814
  call void @df_live_set_bb_info(i32 %21, %struct.df_live_bb_info* %22), !dbg !5815
  %call21 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !5816
  %23 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5817
  %kill22 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %23, i32 0, i32 0, !dbg !5818
  store %struct.bitmap_head_def* %call21, %struct.bitmap_head_def** %kill22, align 8, !dbg !5819
  %call23 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !5820
  %24 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5821
  %gen24 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %24, i32 0, i32 1, !dbg !5822
  store %struct.bitmap_head_def* %call23, %struct.bitmap_head_def** %gen24, align 8, !dbg !5823
  %call25 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !5824
  %25 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5825
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %25, i32 0, i32 2, !dbg !5826
  store %struct.bitmap_head_def* %call25, %struct.bitmap_head_def** %in, align 8, !dbg !5827
  %call26 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !5828
  %26 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5829
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %26, i32 0, i32 3, !dbg !5830
  store %struct.bitmap_head_def* %call26, %struct.bitmap_head_def** %out, align 8, !dbg !5831
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then16
  br label %for.inc, !dbg !5832

for.inc:                                          ; preds = %if.end27
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5789
  br label %for.cond, !dbg !5789, !llvm.loop !5833

for.end:                                          ; preds = %for.cond
  %27 = load i32, i32* @optimize, align 4, !dbg !5835
  %cmp = icmp sle i32 %27, 1, !dbg !5836
  %conv = zext i1 %cmp to i32, !dbg !5836
  %conv28 = trunc i32 %conv to i8, !dbg !5837
  %28 = load %struct.df*, %struct.df** @df, align 8, !dbg !5838
  %problems_by_index29 = getelementptr inbounds %struct.df, %struct.df* %28, i32 0, i32 1, !dbg !5838
  %arrayidx30 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index29, i64 0, i64 2, !dbg !5838
  %29 = load %struct.dataflow*, %struct.dataflow** %arrayidx30, align 8, !dbg !5838
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %29, i32 0, i32 9, !dbg !5839
  store i8 %conv28, i8* %optional_p, align 2, !dbg !5840
  ret void, !dbg !5841
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_reset(%struct.bitmap_head_def* %all_blocks) #0 !dbg !5842 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_live_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !5843, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !5845, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !5847, metadata !DIExpression()), !dbg !5848
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !5849
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %bb_index), !dbg !5849
  br label %for.cond, !dbg !5849

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5851
  %tobool = icmp ne i8 %call, 0, !dbg !5849
  br i1 %tobool, label %for.body, label %for.end, !dbg !5849

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_live_bb_info** %bb_info, metadata !5853, metadata !DIExpression()), !dbg !5855
  %1 = load i32, i32* %bb_index, align 4, !dbg !5856
  %call1 = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %1), !dbg !5857
  store %struct.df_live_bb_info* %call1, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5855
  %2 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5858
  %tobool2 = icmp ne %struct.df_live_bb_info* %2, null, !dbg !5858
  br i1 %tobool2, label %cond.false, label %cond.true, !dbg !5858

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1447, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5858
  br label %cond.end, !dbg !5858

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !5858

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !5858
  %3 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5859
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %3, i32 0, i32 2, !dbg !5860
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5860
  call void @bitmap_clear(%struct.bitmap_head_def* %4), !dbg !5861
  %5 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5862
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %5, i32 0, i32 3, !dbg !5863
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5863
  call void @bitmap_clear(%struct.bitmap_head_def* %6), !dbg !5864
  br label %for.inc, !dbg !5865

for.inc:                                          ; preds = %cond.end
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5851
  br label %for.cond, !dbg !5851, !llvm.loop !5866

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5868
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_free_bb_info(%struct.basic_block_def* %bb, i8* %vbb_info) #0 !dbg !5869 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %vbb_info.addr = alloca i8*, align 8
  %bb_info = alloca %struct.df_live_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !5870, metadata !DIExpression()), !dbg !5871
  store i8* %vbb_info, i8** %vbb_info.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vbb_info.addr, metadata !5872, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.declare(metadata %struct.df_live_bb_info** %bb_info, metadata !5874, metadata !DIExpression()), !dbg !5875
  %0 = load i8*, i8** %vbb_info.addr, align 8, !dbg !5876
  %1 = bitcast i8* %0 to %struct.df_live_bb_info*, !dbg !5877
  store %struct.df_live_bb_info* %1, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5875
  %2 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5878
  %tobool = icmp ne %struct.df_live_bb_info* %2, null, !dbg !5878
  br i1 %tobool, label %if.then, label %if.end, !dbg !5880

if.then:                                          ; preds = %entry
  %3 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5881
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %3, i32 0, i32 1, !dbg !5881
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !5881
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %4), !dbg !5881
  %5 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5881
  %gen1 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %5, i32 0, i32 1, !dbg !5881
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %gen1, align 8, !dbg !5881
  %6 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5883
  %kill = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %6, i32 0, i32 0, !dbg !5883
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !5883
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %7), !dbg !5883
  %8 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5883
  %kill2 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %8, i32 0, i32 0, !dbg !5883
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %kill2, align 8, !dbg !5883
  %9 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5884
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %9, i32 0, i32 2, !dbg !5884
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5884
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %10), !dbg !5884
  %11 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5884
  %in3 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %11, i32 0, i32 2, !dbg !5884
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in3, align 8, !dbg !5884
  %12 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5885
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %12, i32 0, i32 3, !dbg !5885
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5885
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %13), !dbg !5885
  %14 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5885
  %out4 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %14, i32 0, i32 3, !dbg !5885
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out4, align 8, !dbg !5885
  %15 = load %struct.df*, %struct.df** @df, align 8, !dbg !5886
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %15, i32 0, i32 1, !dbg !5886
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !5886
  %16 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5886
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %16, i32 0, i32 3, !dbg !5887
  %17 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !5887
  %18 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5888
  %19 = bitcast %struct.df_live_bb_info* %18 to i8*, !dbg !5888
  call void @pool_free(%struct.alloc_pool_def* %17, i8* %19), !dbg !5889
  br label %if.end, !dbg !5890

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5891
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_local_compute(%struct.bitmap_head_def* %all_blocks) #0 !dbg !5892 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !5893, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !5895, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !5897, metadata !DIExpression()), !dbg !5898
  call void @df_grow_insn_info(), !dbg !5899
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5900
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !5900
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !5900
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5900
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 4, !dbg !5900
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !5900
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %2, i32 0, i32* %bb_index), !dbg !5900
  br label %for.cond, !dbg !5900

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5902
  %tobool = icmp ne i8 %call, 0, !dbg !5900
  br i1 %tobool, label %for.body, label %for.end, !dbg !5900

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %bb_index, align 4, !dbg !5904
  call void @df_live_bb_local_compute(i32 %3), !dbg !5906
  br label %for.inc, !dbg !5907

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5902
  br label %for.cond, !dbg !5902, !llvm.loop !5908

for.end:                                          ; preds = %for.cond
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !5910
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !5910
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 2, !dbg !5910
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !5910
  %out_of_date_transfer_functions3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 4, !dbg !5911
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions3, align 8, !dbg !5911
  call void @bitmap_clear(%struct.bitmap_head_def* %6), !dbg !5912
  ret void, !dbg !5913
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_init(%struct.bitmap_head_def* %all_blocks) #0 !dbg !5914 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_live_bb_info*, align 8
  %bb_lr_info = alloca %struct.df_lr_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !5915, metadata !DIExpression()), !dbg !5916
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !5917, metadata !DIExpression()), !dbg !5918
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !5919, metadata !DIExpression()), !dbg !5920
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !5921
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %bb_index), !dbg !5921
  br label %for.cond, !dbg !5921

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5923
  %tobool = icmp ne i8 %call, 0, !dbg !5921
  br i1 %tobool, label %for.body, label %for.end, !dbg !5921

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_live_bb_info** %bb_info, metadata !5925, metadata !DIExpression()), !dbg !5927
  %1 = load i32, i32* %bb_index, align 4, !dbg !5928
  %call1 = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %1), !dbg !5929
  store %struct.df_live_bb_info* %call1, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5927
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_lr_info, metadata !5930, metadata !DIExpression()), !dbg !5931
  %2 = load i32, i32* %bb_index, align 4, !dbg !5932
  %call2 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %2), !dbg !5933
  store %struct.df_lr_bb_info* %call2, %struct.df_lr_bb_info** %bb_lr_info, align 8, !dbg !5931
  %3 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5934
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %3, i32 0, i32 3, !dbg !5935
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5935
  %5 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5936
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %5, i32 0, i32 1, !dbg !5937
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !5937
  %7 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_lr_info, align 8, !dbg !5938
  %out3 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %7, i32 0, i32 3, !dbg !5939
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out3, align 8, !dbg !5939
  call void @bitmap_and(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %6, %struct.bitmap_head_def* %8), !dbg !5940
  %9 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5941
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %9, i32 0, i32 2, !dbg !5942
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5942
  call void @bitmap_clear(%struct.bitmap_head_def* %10), !dbg !5943
  br label %for.inc, !dbg !5944

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !5923
  br label %for.cond, !dbg !5923, !llvm.loop !5945

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5947
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_confluence_n(%struct.edge_def* %e) #0 !dbg !5948 {
entry:
  %e.addr = alloca %struct.edge_def*, align 8
  %op1 = alloca %struct.bitmap_head_def*, align 8
  %op2 = alloca %struct.bitmap_head_def*, align 8
  store %struct.edge_def* %e, %struct.edge_def** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e.addr, metadata !5949, metadata !DIExpression()), !dbg !5950
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %op1, metadata !5951, metadata !DIExpression()), !dbg !5952
  %0 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !5953
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %0, i32 0, i32 1, !dbg !5954
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5954
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 9, !dbg !5955
  %2 = load i32, i32* %index, align 8, !dbg !5955
  %call = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %2), !dbg !5956
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i32 0, i32 2, !dbg !5957
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5957
  store %struct.bitmap_head_def* %3, %struct.bitmap_head_def** %op1, align 8, !dbg !5952
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %op2, metadata !5958, metadata !DIExpression()), !dbg !5959
  %4 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !5960
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %4, i32 0, i32 0, !dbg !5961
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5961
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 9, !dbg !5962
  %6 = load i32, i32* %index1, align 8, !dbg !5962
  %call2 = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %6), !dbg !5963
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call2, i32 0, i32 3, !dbg !5964
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5964
  store %struct.bitmap_head_def* %7, %struct.bitmap_head_def** %op2, align 8, !dbg !5959
  %8 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !5965
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %8, i32 0, i32 7, !dbg !5967
  %9 = load i32, i32* %flags, align 8, !dbg !5967
  %and = and i32 %9, 16, !dbg !5968
  %tobool = icmp ne i32 %and, 0, !dbg !5968
  br i1 %tobool, label %if.then, label %if.end, !dbg !5969

if.then:                                          ; preds = %entry
  br label %return, !dbg !5970

if.end:                                           ; preds = %entry
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !5971
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op2, align 8, !dbg !5972
  %call3 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %10, %struct.bitmap_head_def* %11), !dbg !5973
  br label %return, !dbg !5974

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5974
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_live_transfer_function(i32 %bb_index) #0 !dbg !5975 {
entry:
  %bb_index.addr = alloca i32, align 4
  %bb_info = alloca %struct.df_live_bb_info*, align 8
  %bb_lr_info = alloca %struct.df_lr_bb_info*, align 8
  %in = alloca %struct.bitmap_head_def*, align 8
  %out = alloca %struct.bitmap_head_def*, align 8
  %gen = alloca %struct.bitmap_head_def*, align 8
  %kill = alloca %struct.bitmap_head_def*, align 8
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !5976, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.declare(metadata %struct.df_live_bb_info** %bb_info, metadata !5978, metadata !DIExpression()), !dbg !5979
  %0 = load i32, i32* %bb_index.addr, align 4, !dbg !5980
  %call = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %0), !dbg !5981
  store %struct.df_live_bb_info* %call, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5979
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_lr_info, metadata !5982, metadata !DIExpression()), !dbg !5983
  %1 = load i32, i32* %bb_index.addr, align 4, !dbg !5984
  %call1 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %1), !dbg !5985
  store %struct.df_lr_bb_info* %call1, %struct.df_lr_bb_info** %bb_lr_info, align 8, !dbg !5983
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %in, metadata !5986, metadata !DIExpression()), !dbg !5987
  %2 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5988
  %in2 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %2, i32 0, i32 2, !dbg !5989
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in2, align 8, !dbg !5989
  store %struct.bitmap_head_def* %3, %struct.bitmap_head_def** %in, align 8, !dbg !5987
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %out, metadata !5990, metadata !DIExpression()), !dbg !5991
  %4 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5992
  %out3 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %4, i32 0, i32 3, !dbg !5993
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out3, align 8, !dbg !5993
  store %struct.bitmap_head_def* %5, %struct.bitmap_head_def** %out, align 8, !dbg !5991
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %gen, metadata !5994, metadata !DIExpression()), !dbg !5995
  %6 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !5996
  %gen4 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %6, i32 0, i32 1, !dbg !5997
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen4, align 8, !dbg !5997
  store %struct.bitmap_head_def* %7, %struct.bitmap_head_def** %gen, align 8, !dbg !5995
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %kill, metadata !5998, metadata !DIExpression()), !dbg !5999
  %8 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6000
  %kill5 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %8, i32 0, i32 0, !dbg !6001
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill5, align 8, !dbg !6001
  store %struct.bitmap_head_def* %9, %struct.bitmap_head_def** %kill, align 8, !dbg !5999
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !6002
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !6003
  %12 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_lr_info, align 8, !dbg !6004
  %out6 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %12, i32 0, i32 3, !dbg !6005
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out6, align 8, !dbg !6005
  call void @bitmap_and(%struct.bitmap_head_def* %10, %struct.bitmap_head_def* %11, %struct.bitmap_head_def* %13), !dbg !6006
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6007
  %15 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_lr_info, align 8, !dbg !6008
  %in7 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %15, i32 0, i32 2, !dbg !6009
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in7, align 8, !dbg !6009
  call void @bitmap_and_into(%struct.bitmap_head_def* %14, %struct.bitmap_head_def* %16), !dbg !6010
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !6011
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !6012
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6013
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !6014
  %call8 = call zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def* %17, %struct.bitmap_head_def* %18, %struct.bitmap_head_def* %19, %struct.bitmap_head_def* %20), !dbg !6015
  ret i8 %call8, !dbg !6016
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_finalize(%struct.bitmap_head_def* %all_blocks) #0 !dbg !6017 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_index = alloca i32, align 4
  %bb_lr_info = alloca %struct.df_lr_bb_info*, align 8
  %bb_live_info = alloca %struct.df_live_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !6018, metadata !DIExpression()), !dbg !6019
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6020
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !6020
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !6020
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6020
  %solutions_dirty = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 8, !dbg !6022
  %2 = load i8, i8* %solutions_dirty, align 1, !dbg !6022
  %tobool = icmp ne i8 %2, 0, !dbg !6020
  br i1 %tobool, label %if.then, label %if.end, !dbg !6023

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !6024, metadata !DIExpression()), !dbg !6026
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !6027, metadata !DIExpression()), !dbg !6028
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !6029
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %3, i32 0, i32* %bb_index), !dbg !6029
  br label %for.cond, !dbg !6029

for.cond:                                         ; preds = %for.inc, %if.then
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !6031
  %tobool1 = icmp ne i8 %call, 0, !dbg !6029
  br i1 %tobool1, label %for.body, label %for.end, !dbg !6029

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_lr_bb_info** %bb_lr_info, metadata !6033, metadata !DIExpression()), !dbg !6035
  %4 = load i32, i32* %bb_index, align 4, !dbg !6036
  %call2 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %4), !dbg !6037
  store %struct.df_lr_bb_info* %call2, %struct.df_lr_bb_info** %bb_lr_info, align 8, !dbg !6035
  call void @llvm.dbg.declare(metadata %struct.df_live_bb_info** %bb_live_info, metadata !6038, metadata !DIExpression()), !dbg !6039
  %5 = load i32, i32* %bb_index, align 4, !dbg !6040
  %call3 = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %5), !dbg !6041
  store %struct.df_live_bb_info* %call3, %struct.df_live_bb_info** %bb_live_info, align 8, !dbg !6039
  %6 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_live_info, align 8, !dbg !6042
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %6, i32 0, i32 2, !dbg !6043
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6043
  %8 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_lr_info, align 8, !dbg !6044
  %in4 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %8, i32 0, i32 2, !dbg !6045
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in4, align 8, !dbg !6045
  call void @bitmap_and_into(%struct.bitmap_head_def* %7, %struct.bitmap_head_def* %9), !dbg !6046
  %10 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_live_info, align 8, !dbg !6047
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %10, i32 0, i32 3, !dbg !6048
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !6048
  %12 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %bb_lr_info, align 8, !dbg !6049
  %out5 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %12, i32 0, i32 3, !dbg !6050
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out5, align 8, !dbg !6050
  call void @bitmap_and_into(%struct.bitmap_head_def* %11, %struct.bitmap_head_def* %13), !dbg !6051
  br label %for.inc, !dbg !6052

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !6031
  br label %for.cond, !dbg !6031, !llvm.loop !6053

for.end:                                          ; preds = %for.cond
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !6055
  %problems_by_index6 = getelementptr inbounds %struct.df, %struct.df* %14, i32 0, i32 1, !dbg !6055
  %arrayidx7 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index6, i64 0, i64 2, !dbg !6055
  %15 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !6055
  %solutions_dirty8 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %15, i32 0, i32 8, !dbg !6056
  store i8 0, i8* %solutions_dirty8, align 1, !dbg !6057
  br label %if.end, !dbg !6058

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !6059
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_free() #0 !dbg !6060 {
entry:
  %i = alloca i32, align 4
  %bb_info = alloca %struct.df_live_bb_info*, align 8
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6061
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !6061
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !6061
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6061
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 1, !dbg !6063
  %2 = load i8**, i8*** %block_info, align 8, !dbg !6063
  %tobool = icmp ne i8** %2, null, !dbg !6061
  br i1 %tobool, label %if.then, label %if.end20, !dbg !6064

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6065, metadata !DIExpression()), !dbg !6067
  store i32 0, i32* %i, align 4, !dbg !6068
  br label %for.cond, !dbg !6070

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %i, align 4, !dbg !6071
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !6073
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !6073
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 2, !dbg !6073
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !6073
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 2, !dbg !6074
  %6 = load i32, i32* %block_info_size, align 8, !dbg !6074
  %cmp = icmp ult i32 %3, %6, !dbg !6075
  br i1 %cmp, label %for.body, label %for.end, !dbg !6076

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_live_bb_info** %bb_info, metadata !6077, metadata !DIExpression()), !dbg !6079
  %7 = load i32, i32* %i, align 4, !dbg !6080
  %call = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %7), !dbg !6081
  store %struct.df_live_bb_info* %call, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6079
  %8 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6082
  %tobool3 = icmp ne %struct.df_live_bb_info* %8, null, !dbg !6082
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !6084

if.then4:                                         ; preds = %for.body
  %9 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6085
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %9, i32 0, i32 1, !dbg !6085
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !6085
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %10), !dbg !6085
  %11 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6085
  %gen5 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %11, i32 0, i32 1, !dbg !6085
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %gen5, align 8, !dbg !6085
  %12 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6087
  %kill = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %12, i32 0, i32 0, !dbg !6087
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !6087
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %13), !dbg !6087
  %14 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6087
  %kill6 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %14, i32 0, i32 0, !dbg !6087
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %kill6, align 8, !dbg !6087
  %15 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6088
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %15, i32 0, i32 2, !dbg !6088
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6088
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %16), !dbg !6088
  %17 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6088
  %in7 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %17, i32 0, i32 2, !dbg !6088
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in7, align 8, !dbg !6088
  %18 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6089
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %18, i32 0, i32 3, !dbg !6089
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !6089
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %19), !dbg !6089
  %20 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6089
  %out8 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %20, i32 0, i32 3, !dbg !6089
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out8, align 8, !dbg !6089
  br label %if.end, !dbg !6090

if.end:                                           ; preds = %if.then4, %for.body
  br label %for.inc, !dbg !6091

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %i, align 4, !dbg !6092
  %inc = add i32 %21, 1, !dbg !6092
  store i32 %inc, i32* %i, align 4, !dbg !6092
  br label %for.cond, !dbg !6093, !llvm.loop !6094

for.end:                                          ; preds = %for.cond
  %22 = load %struct.df*, %struct.df** @df, align 8, !dbg !6096
  %problems_by_index9 = getelementptr inbounds %struct.df, %struct.df* %22, i32 0, i32 1, !dbg !6096
  %arrayidx10 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index9, i64 0, i64 2, !dbg !6096
  %23 = load %struct.dataflow*, %struct.dataflow** %arrayidx10, align 8, !dbg !6096
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %23, i32 0, i32 3, !dbg !6097
  %24 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !6097
  call void @free_alloc_pool(%struct.alloc_pool_def* %24), !dbg !6098
  %25 = load %struct.df*, %struct.df** @df, align 8, !dbg !6099
  %problems_by_index11 = getelementptr inbounds %struct.df, %struct.df* %25, i32 0, i32 1, !dbg !6099
  %arrayidx12 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index11, i64 0, i64 2, !dbg !6099
  %26 = load %struct.dataflow*, %struct.dataflow** %arrayidx12, align 8, !dbg !6099
  %block_info_size13 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %26, i32 0, i32 2, !dbg !6100
  store i32 0, i32* %block_info_size13, align 8, !dbg !6101
  %27 = load %struct.df*, %struct.df** @df, align 8, !dbg !6102
  %problems_by_index14 = getelementptr inbounds %struct.df, %struct.df* %27, i32 0, i32 1, !dbg !6102
  %arrayidx15 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index14, i64 0, i64 2, !dbg !6102
  %28 = load %struct.dataflow*, %struct.dataflow** %arrayidx15, align 8, !dbg !6102
  %block_info16 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %28, i32 0, i32 1, !dbg !6103
  %29 = load i8**, i8*** %block_info16, align 8, !dbg !6103
  %30 = bitcast i8** %29 to i8*, !dbg !6102
  call void @free(i8* %30), !dbg !6104
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !6105
  %tobool17 = icmp ne %struct.bitmap_head_def* %31, null, !dbg !6105
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !6107

if.then18:                                        ; preds = %for.end
  %32 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !6108
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %32), !dbg !6108
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !6108
  br label %if.end19, !dbg !6108

if.end19:                                         ; preds = %if.then18, %for.end
  br label %if.end20, !dbg !6109

if.end20:                                         ; preds = %if.end19, %entry
  %33 = load %struct.df*, %struct.df** @df, align 8, !dbg !6110
  %problems_by_index21 = getelementptr inbounds %struct.df, %struct.df* %33, i32 0, i32 1, !dbg !6110
  %arrayidx22 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index21, i64 0, i64 2, !dbg !6110
  %34 = load %struct.dataflow*, %struct.dataflow** %arrayidx22, align 8, !dbg !6110
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %34, i32 0, i32 4, !dbg !6110
  %35 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !6110
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %35), !dbg !6110
  %36 = load %struct.df*, %struct.df** @df, align 8, !dbg !6110
  %problems_by_index23 = getelementptr inbounds %struct.df, %struct.df* %36, i32 0, i32 1, !dbg !6110
  %arrayidx24 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index23, i64 0, i64 2, !dbg !6110
  %37 = load %struct.dataflow*, %struct.dataflow** %arrayidx24, align 8, !dbg !6110
  %out_of_date_transfer_functions25 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %37, i32 0, i32 4, !dbg !6110
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out_of_date_transfer_functions25, align 8, !dbg !6110
  %38 = load %struct.df*, %struct.df** @df, align 8, !dbg !6111
  %problems_by_index26 = getelementptr inbounds %struct.df, %struct.df* %38, i32 0, i32 1, !dbg !6111
  %arrayidx27 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index26, i64 0, i64 2, !dbg !6111
  %39 = load %struct.dataflow*, %struct.dataflow** %arrayidx27, align 8, !dbg !6111
  %40 = bitcast %struct.dataflow* %39 to i8*, !dbg !6111
  call void @free(i8* %40), !dbg !6112
  ret void, !dbg !6113
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_top_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !6114 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %bb_info = alloca %struct.df_live_bb_info*, align 8
  %problem_data = alloca %struct.df_live_problem_data*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !6115, metadata !DIExpression()), !dbg !6116
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !6117, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.declare(metadata %struct.df_live_bb_info** %bb_info, metadata !6119, metadata !DIExpression()), !dbg !6120
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6121
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !6122
  %1 = load i32, i32* %index, align 8, !dbg !6122
  %call = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %1), !dbg !6123
  store %struct.df_live_bb_info* %call, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6120
  call void @llvm.dbg.declare(metadata %struct.df_live_problem_data** %problem_data, metadata !6124, metadata !DIExpression()), !dbg !6125
  %2 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6126
  %tobool = icmp ne %struct.df_live_bb_info* %2, null, !dbg !6126
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6128

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6129
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %3, i32 0, i32 2, !dbg !6130
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6130
  %tobool1 = icmp ne %struct.bitmap_head_def* %4, null, !dbg !6129
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6131

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !6132

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6133
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i64 0, i64 0)), !dbg !6134
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6135
  %7 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6136
  %in3 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %7, i32 0, i32 2, !dbg !6137
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in3, align 8, !dbg !6137
  call void @df_print_regset(%struct._IO_FILE* %6, %struct.bitmap_head_def* %8), !dbg !6138
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !6139
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 1, !dbg !6139
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !6139
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6139
  %problem_data4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %10, i32 0, i32 5, !dbg !6141
  %11 = load i8*, i8** %problem_data4, align 8, !dbg !6141
  %tobool5 = icmp ne i8* %11, null, !dbg !6139
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !6142

if.then6:                                         ; preds = %if.end
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !6143
  %problems_by_index7 = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 1, !dbg !6143
  %arrayidx8 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index7, i64 0, i64 2, !dbg !6143
  %13 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !6143
  %problem_data9 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %13, i32 0, i32 5, !dbg !6145
  %14 = load i8*, i8** %problem_data9, align 8, !dbg !6145
  %15 = bitcast i8* %14 to %struct.df_live_problem_data*, !dbg !6146
  store %struct.df_live_problem_data* %15, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6147
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6148
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0)), !dbg !6149
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6150
  %18 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6151
  %in11 = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %18, i32 0, i32 0, !dbg !6152
  %19 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in11, align 8, !dbg !6152
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6153
  %index12 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i32 0, i32 9, !dbg !6154
  %21 = load i32, i32* %index12, align 8, !dbg !6154
  %idxprom = sext i32 %21 to i64, !dbg !6151
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %19, i64 %idxprom, !dbg !6151
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx13, align 8, !dbg !6151
  call void @df_print_regset(%struct._IO_FILE* %17, %struct.bitmap_head_def* %22), !dbg !6155
  br label %if.end14, !dbg !6156

if.end14:                                         ; preds = %if.then6, %if.end
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6157
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0)), !dbg !6158
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6159
  %25 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6160
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %25, i32 0, i32 1, !dbg !6161
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !6161
  call void @df_print_regset(%struct._IO_FILE* %24, %struct.bitmap_head_def* %26), !dbg !6162
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6163
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0)), !dbg !6164
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6165
  %29 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6166
  %kill = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %29, i32 0, i32 0, !dbg !6167
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !6167
  call void @df_print_regset(%struct._IO_FILE* %28, %struct.bitmap_head_def* %30), !dbg !6168
  br label %return, !dbg !6169

return:                                           ; preds = %if.end14, %if.then
  ret void, !dbg !6169
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_bottom_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !6170 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %bb_info = alloca %struct.df_live_bb_info*, align 8
  %problem_data = alloca %struct.df_live_problem_data*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !6171, metadata !DIExpression()), !dbg !6172
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !6173, metadata !DIExpression()), !dbg !6174
  call void @llvm.dbg.declare(metadata %struct.df_live_bb_info** %bb_info, metadata !6175, metadata !DIExpression()), !dbg !6176
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6177
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !6178
  %1 = load i32, i32* %index, align 8, !dbg !6178
  %call = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %1), !dbg !6179
  store %struct.df_live_bb_info* %call, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6176
  call void @llvm.dbg.declare(metadata %struct.df_live_problem_data** %problem_data, metadata !6180, metadata !DIExpression()), !dbg !6181
  %2 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6182
  %tobool = icmp ne %struct.df_live_bb_info* %2, null, !dbg !6182
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6184

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6185
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %3, i32 0, i32 3, !dbg !6186
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !6186
  %tobool1 = icmp ne %struct.bitmap_head_def* %4, null, !dbg !6185
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6187

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end14, !dbg !6188

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6189
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i64 0, i64 0)), !dbg !6190
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6191
  %7 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info, align 8, !dbg !6192
  %out3 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %7, i32 0, i32 3, !dbg !6193
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out3, align 8, !dbg !6193
  call void @df_print_regset(%struct._IO_FILE* %6, %struct.bitmap_head_def* %8), !dbg !6194
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !6195
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 1, !dbg !6195
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !6195
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6195
  %problem_data4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %10, i32 0, i32 5, !dbg !6197
  %11 = load i8*, i8** %problem_data4, align 8, !dbg !6197
  %tobool5 = icmp ne i8* %11, null, !dbg !6195
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !6198

if.then6:                                         ; preds = %if.end
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !6199
  %problems_by_index7 = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 1, !dbg !6199
  %arrayidx8 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index7, i64 0, i64 2, !dbg !6199
  %13 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !6199
  %problem_data9 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %13, i32 0, i32 5, !dbg !6201
  %14 = load i8*, i8** %problem_data9, align 8, !dbg !6201
  %15 = bitcast i8* %14 to %struct.df_live_problem_data*, !dbg !6202
  store %struct.df_live_problem_data* %15, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6203
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6204
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0)), !dbg !6205
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6206
  %18 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6207
  %out11 = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %18, i32 0, i32 1, !dbg !6208
  %19 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out11, align 8, !dbg !6208
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6209
  %index12 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i32 0, i32 9, !dbg !6210
  %21 = load i32, i32* %index12, align 8, !dbg !6210
  %idxprom = sext i32 %21 to i64, !dbg !6207
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %19, i64 %idxprom, !dbg !6207
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx13, align 8, !dbg !6207
  call void @df_print_regset(%struct._IO_FILE* %17, %struct.bitmap_head_def* %22), !dbg !6211
  br label %if.end14, !dbg !6212

if.end14:                                         ; preds = %if.then, %if.then6, %if.end
  ret void, !dbg !6213
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_verify_solution_start() #0 !dbg !6214 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  %problem_data = alloca %struct.df_live_problem_data*, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !6215, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.declare(metadata %struct.df_live_problem_data** %problem_data, metadata !6217, metadata !DIExpression()), !dbg !6218
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6219
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !6219
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !6219
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6219
  %solutions_dirty = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 8, !dbg !6221
  %2 = load i8, i8* %solutions_dirty, align 1, !dbg !6221
  %tobool = icmp ne i8 %2, 0, !dbg !6219
  br i1 %tobool, label %if.then, label %if.end, !dbg !6222

if.then:                                          ; preds = %entry
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !6223
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !6223
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 2, !dbg !6223
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !6223
  %problem_data3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 5, !dbg !6225
  store i8* null, i8** %problem_data3, align 8, !dbg !6226
  br label %for.end, !dbg !6227

if.end:                                           ; preds = %entry
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !6228
  %problems_by_index4 = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 1, !dbg !6228
  %arrayidx5 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index4, i64 0, i64 2, !dbg !6228
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx5, align 8, !dbg !6228
  %solutions_dirty6 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i32 0, i32 8, !dbg !6229
  store i8 1, i8* %solutions_dirty6, align 1, !dbg !6230
  %call = call i8* @xmalloc(i64 16), !dbg !6231
  %7 = bitcast i8* %call to %struct.df_live_problem_data*, !dbg !6231
  store %struct.df_live_problem_data* %7, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6232
  %8 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6233
  %9 = bitcast %struct.df_live_problem_data* %8 to i8*, !dbg !6233
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !6234
  %problems_by_index7 = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 1, !dbg !6234
  %arrayidx8 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index7, i64 0, i64 2, !dbg !6234
  %11 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !6234
  %problem_data9 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %11, i32 0, i32 5, !dbg !6235
  store i8* %9, i8** %problem_data9, align 8, !dbg !6236
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6237
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, !dbg !6237
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !6237
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6237
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i32 0, i32 5, !dbg !6237
  %14 = load i32, i32* %x_last_basic_block, align 8, !dbg !6237
  %conv = sext i32 %14 to i64, !dbg !6237
  %mul = mul i64 8, %conv, !dbg !6237
  %call10 = call i8* @xmalloc(i64 %mul), !dbg !6237
  %15 = bitcast i8* %call10 to %struct.bitmap_head_def**, !dbg !6237
  %16 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6238
  %in = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %16, i32 0, i32 0, !dbg !6239
  store %struct.bitmap_head_def** %15, %struct.bitmap_head_def*** %in, align 8, !dbg !6240
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6241
  %add.ptr11 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, !dbg !6241
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %add.ptr11, i32 0, i32 1, !dbg !6241
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !6241
  %x_last_basic_block13 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i32 0, i32 5, !dbg !6241
  %19 = load i32, i32* %x_last_basic_block13, align 8, !dbg !6241
  %conv14 = sext i32 %19 to i64, !dbg !6241
  %mul15 = mul i64 8, %conv14, !dbg !6241
  %call16 = call i8* @xmalloc(i64 %mul15), !dbg !6241
  %20 = bitcast i8* %call16 to %struct.bitmap_head_def**, !dbg !6241
  %21 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6242
  %out = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %21, i32 0, i32 1, !dbg !6243
  store %struct.bitmap_head_def** %20, %struct.bitmap_head_def*** %out, align 8, !dbg !6244
  %22 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6245
  %add.ptr17 = getelementptr inbounds %struct.function, %struct.function* %22, i64 0, !dbg !6245
  %cfg18 = getelementptr inbounds %struct.function, %struct.function* %add.ptr17, i32 0, i32 1, !dbg !6245
  %23 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg18, align 8, !dbg !6245
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %23, i32 0, i32 0, !dbg !6245
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6245
  store %struct.basic_block_def* %24, %struct.basic_block_def** %bb, align 8, !dbg !6245
  br label %for.cond, !dbg !6245

for.cond:                                         ; preds = %for.inc, %if.end
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6247
  %tobool19 = icmp ne %struct.basic_block_def* %25, null, !dbg !6245
  br i1 %tobool19, label %for.body, label %for.end, !dbg !6245

for.body:                                         ; preds = %for.cond
  %call20 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !6249
  %26 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6251
  %in21 = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %26, i32 0, i32 0, !dbg !6252
  %27 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in21, align 8, !dbg !6252
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6253
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %28, i32 0, i32 9, !dbg !6254
  %29 = load i32, i32* %index, align 8, !dbg !6254
  %idxprom = sext i32 %29 to i64, !dbg !6251
  %arrayidx22 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %27, i64 %idxprom, !dbg !6251
  store %struct.bitmap_head_def* %call20, %struct.bitmap_head_def** %arrayidx22, align 8, !dbg !6255
  %call23 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !6256
  %30 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6257
  %out24 = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %30, i32 0, i32 1, !dbg !6258
  %31 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out24, align 8, !dbg !6258
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6259
  %index25 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i32 0, i32 9, !dbg !6260
  %33 = load i32, i32* %index25, align 8, !dbg !6260
  %idxprom26 = sext i32 %33 to i64, !dbg !6257
  %arrayidx27 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %31, i64 %idxprom26, !dbg !6257
  store %struct.bitmap_head_def* %call23, %struct.bitmap_head_def** %arrayidx27, align 8, !dbg !6261
  %34 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6262
  %in28 = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %34, i32 0, i32 0, !dbg !6263
  %35 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in28, align 8, !dbg !6263
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6264
  %index29 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i32 0, i32 9, !dbg !6265
  %37 = load i32, i32* %index29, align 8, !dbg !6265
  %idxprom30 = sext i32 %37 to i64, !dbg !6262
  %arrayidx31 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %35, i64 %idxprom30, !dbg !6262
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx31, align 8, !dbg !6262
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6266
  %index32 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %39, i32 0, i32 9, !dbg !6266
  %40 = load i32, i32* %index32, align 8, !dbg !6266
  %call33 = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %40), !dbg !6266
  %in34 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call33, i32 0, i32 2, !dbg !6266
  %41 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in34, align 8, !dbg !6266
  call void @bitmap_copy(%struct.bitmap_head_def* %38, %struct.bitmap_head_def* %41), !dbg !6267
  %42 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6268
  %out35 = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %42, i32 0, i32 1, !dbg !6269
  %43 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out35, align 8, !dbg !6269
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6270
  %index36 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %44, i32 0, i32 9, !dbg !6271
  %45 = load i32, i32* %index36, align 8, !dbg !6271
  %idxprom37 = sext i32 %45 to i64, !dbg !6268
  %arrayidx38 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %43, i64 %idxprom37, !dbg !6268
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx38, align 8, !dbg !6268
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6272
  %index39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %47, i32 0, i32 9, !dbg !6272
  %48 = load i32, i32* %index39, align 8, !dbg !6272
  %call40 = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %48), !dbg !6272
  %out41 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call40, i32 0, i32 3, !dbg !6272
  %49 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out41, align 8, !dbg !6272
  call void @bitmap_copy(%struct.bitmap_head_def* %46, %struct.bitmap_head_def* %49), !dbg !6273
  br label %for.inc, !dbg !6274

for.inc:                                          ; preds = %for.body
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6247
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %50, i32 0, i32 6, !dbg !6247
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !6247
  store %struct.basic_block_def* %51, %struct.basic_block_def** %bb, align 8, !dbg !6247
  br label %for.cond, !dbg !6247, !llvm.loop !6275

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !6277
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_verify_solution_end() #0 !dbg !6278 {
entry:
  %problem_data = alloca %struct.df_live_problem_data*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  call void @llvm.dbg.declare(metadata %struct.df_live_problem_data** %problem_data, metadata !6279, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !6281, metadata !DIExpression()), !dbg !6282
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6283
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !6283
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !6283
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6283
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !6285
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !6285
  %cmp = icmp eq i8* %2, null, !dbg !6286
  br i1 %cmp, label %if.then, label %if.end, !dbg !6287

if.then:                                          ; preds = %entry
  br label %return, !dbg !6288

if.end:                                           ; preds = %entry
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !6289
  %problems_by_index2 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !6289
  %arrayidx3 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index2, i64 0, i64 2, !dbg !6289
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx3, align 8, !dbg !6289
  %problem_data4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 5, !dbg !6290
  %5 = load i8*, i8** %problem_data4, align 8, !dbg !6290
  %6 = bitcast i8* %5 to %struct.df_live_problem_data*, !dbg !6291
  store %struct.df_live_problem_data* %6, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6292
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6293
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, !dbg !6293
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !6293
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6293
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i32 0, i32 0, !dbg !6293
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6293
  store %struct.basic_block_def* %9, %struct.basic_block_def** %bb, align 8, !dbg !6293
  br label %for.cond, !dbg !6293

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6295
  %tobool = icmp ne %struct.basic_block_def* %10, null, !dbg !6293
  br i1 %tobool, label %for.body, label %for.end, !dbg !6293

for.body:                                         ; preds = %for.cond
  %11 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6297
  %in = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %11, i32 0, i32 0, !dbg !6300
  %12 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in, align 8, !dbg !6300
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6301
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 9, !dbg !6302
  %14 = load i32, i32* %index, align 8, !dbg !6302
  %idxprom = sext i32 %14 to i64, !dbg !6297
  %arrayidx5 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %12, i64 %idxprom, !dbg !6297
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx5, align 8, !dbg !6297
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6303
  %index6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i32 0, i32 9, !dbg !6303
  %17 = load i32, i32* %index6, align 8, !dbg !6303
  %call = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %17), !dbg !6303
  %in7 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i32 0, i32 2, !dbg !6303
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in7, align 8, !dbg !6303
  %call8 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %15, %struct.bitmap_head_def* %18), !dbg !6304
  %tobool9 = icmp ne i8 %call8, 0, !dbg !6304
  br i1 %tobool9, label %lor.lhs.false, label %if.then18, !dbg !6305

lor.lhs.false:                                    ; preds = %for.body
  %19 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6306
  %out = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %19, i32 0, i32 1, !dbg !6307
  %20 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out, align 8, !dbg !6307
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6308
  %index10 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i32 0, i32 9, !dbg !6309
  %22 = load i32, i32* %index10, align 8, !dbg !6309
  %idxprom11 = sext i32 %22 to i64, !dbg !6306
  %arrayidx12 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %20, i64 %idxprom11, !dbg !6306
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx12, align 8, !dbg !6306
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6310
  %index13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i32 0, i32 9, !dbg !6310
  %25 = load i32, i32* %index13, align 8, !dbg !6310
  %call14 = call %struct.df_live_bb_info* @df_live_get_bb_info(i32 %25), !dbg !6310
  %out15 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call14, i32 0, i32 3, !dbg !6310
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out15, align 8, !dbg !6310
  %call16 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %23, %struct.bitmap_head_def* %26), !dbg !6311
  %tobool17 = icmp ne i8 %call16, 0, !dbg !6311
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !6312

if.then18:                                        ; preds = %lor.lhs.false, %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1749, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6313
  br label %if.end19, !dbg !6315

if.end19:                                         ; preds = %if.then18, %lor.lhs.false
  br label %for.inc, !dbg !6316

for.inc:                                          ; preds = %if.end19
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6295
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i32 0, i32 6, !dbg !6295
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !6295
  store %struct.basic_block_def* %28, %struct.basic_block_def** %bb, align 8, !dbg !6295
  br label %for.cond, !dbg !6295, !llvm.loop !6317

for.end:                                          ; preds = %for.cond
  %29 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6319
  %add.ptr20 = getelementptr inbounds %struct.function, %struct.function* %29, i64 0, !dbg !6319
  %cfg21 = getelementptr inbounds %struct.function, %struct.function* %add.ptr20, i32 0, i32 1, !dbg !6319
  %30 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg21, align 8, !dbg !6319
  %x_entry_block_ptr22 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %30, i32 0, i32 0, !dbg !6319
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr22, align 8, !dbg !6319
  store %struct.basic_block_def* %31, %struct.basic_block_def** %bb, align 8, !dbg !6319
  br label %for.cond23, !dbg !6319

for.cond23:                                       ; preds = %for.inc42, %for.end
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6321
  %tobool24 = icmp ne %struct.basic_block_def* %32, null, !dbg !6319
  br i1 %tobool24, label %for.body25, label %for.end44, !dbg !6319

for.body25:                                       ; preds = %for.cond23
  %33 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6323
  %in26 = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %33, i32 0, i32 0, !dbg !6323
  %34 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in26, align 8, !dbg !6323
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6323
  %index27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i32 0, i32 9, !dbg !6323
  %36 = load i32, i32* %index27, align 8, !dbg !6323
  %idxprom28 = sext i32 %36 to i64, !dbg !6323
  %arrayidx29 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %34, i64 %idxprom28, !dbg !6323
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx29, align 8, !dbg !6323
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %37), !dbg !6323
  %38 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6323
  %in30 = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %38, i32 0, i32 0, !dbg !6323
  %39 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in30, align 8, !dbg !6323
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6323
  %index31 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i32 0, i32 9, !dbg !6323
  %41 = load i32, i32* %index31, align 8, !dbg !6323
  %idxprom32 = sext i32 %41 to i64, !dbg !6323
  %arrayidx33 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %39, i64 %idxprom32, !dbg !6323
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx33, align 8, !dbg !6323
  %42 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6325
  %out34 = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %42, i32 0, i32 1, !dbg !6325
  %43 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out34, align 8, !dbg !6325
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6325
  %index35 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %44, i32 0, i32 9, !dbg !6325
  %45 = load i32, i32* %index35, align 8, !dbg !6325
  %idxprom36 = sext i32 %45 to i64, !dbg !6325
  %arrayidx37 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %43, i64 %idxprom36, !dbg !6325
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx37, align 8, !dbg !6325
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %46), !dbg !6325
  %47 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6325
  %out38 = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %47, i32 0, i32 1, !dbg !6325
  %48 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out38, align 8, !dbg !6325
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6325
  %index39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %49, i32 0, i32 9, !dbg !6325
  %50 = load i32, i32* %index39, align 8, !dbg !6325
  %idxprom40 = sext i32 %50 to i64, !dbg !6325
  %arrayidx41 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %48, i64 %idxprom40, !dbg !6325
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx41, align 8, !dbg !6325
  br label %for.inc42, !dbg !6326

for.inc42:                                        ; preds = %for.body25
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6321
  %next_bb43 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %51, i32 0, i32 6, !dbg !6321
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb43, align 8, !dbg !6321
  store %struct.basic_block_def* %52, %struct.basic_block_def** %bb, align 8, !dbg !6321
  br label %for.cond23, !dbg !6321, !llvm.loop !6327

for.end44:                                        ; preds = %for.cond23
  %53 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6329
  %in45 = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %53, i32 0, i32 0, !dbg !6330
  %54 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in45, align 8, !dbg !6330
  %55 = bitcast %struct.bitmap_head_def** %54 to i8*, !dbg !6329
  call void @free(i8* %55), !dbg !6331
  %56 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6332
  %out46 = getelementptr inbounds %struct.df_live_problem_data, %struct.df_live_problem_data* %56, i32 0, i32 1, !dbg !6333
  %57 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %out46, align 8, !dbg !6333
  %58 = bitcast %struct.bitmap_head_def** %57 to i8*, !dbg !6332
  call void @free(i8* %58), !dbg !6334
  %59 = load %struct.df_live_problem_data*, %struct.df_live_problem_data** %problem_data, align 8, !dbg !6335
  %60 = bitcast %struct.df_live_problem_data* %59 to i8*, !dbg !6335
  call void @free(i8* %60), !dbg !6336
  %61 = load %struct.df*, %struct.df** @df, align 8, !dbg !6337
  %problems_by_index47 = getelementptr inbounds %struct.df, %struct.df* %61, i32 0, i32 1, !dbg !6337
  %arrayidx48 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index47, i64 0, i64 2, !dbg !6337
  %62 = load %struct.dataflow*, %struct.dataflow** %arrayidx48, align 8, !dbg !6337
  %problem_data49 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %62, i32 0, i32 5, !dbg !6338
  store i8* null, i8** %problem_data49, align 8, !dbg !6339
  br label %return, !dbg !6340

return:                                           ; preds = %for.end44, %if.then
  ret void, !dbg !6340
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_live_set_bb_info(i32 %index, %struct.df_live_bb_info* %bb_info) #0 !dbg !6341 {
entry:
  %index.addr = alloca i32, align 4
  %bb_info.addr = alloca %struct.df_live_bb_info*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6344, metadata !DIExpression()), !dbg !6345
  store %struct.df_live_bb_info* %bb_info, %struct.df_live_bb_info** %bb_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_live_bb_info** %bb_info.addr, metadata !6346, metadata !DIExpression()), !dbg !6347
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6348
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !6348
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 2, !dbg !6348
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6348
  %tobool = icmp ne %struct.dataflow* %1, null, !dbg !6348
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6348

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6348
  br label %cond.end, !dbg !6348

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6348

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6348
  %2 = load i32, i32* %index.addr, align 4, !dbg !6349
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !6349
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !6349
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 2, !dbg !6349
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !6349
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 2, !dbg !6349
  %5 = load i32, i32* %block_info_size, align 8, !dbg !6349
  %cmp = icmp ult i32 %2, %5, !dbg !6349
  br i1 %cmp, label %cond.false4, label %cond.true3, !dbg !6349

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1374, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6349
  br label %cond.end5, !dbg !6349

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !6349

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !6349
  %6 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %bb_info.addr, align 8, !dbg !6350
  %7 = bitcast %struct.df_live_bb_info* %6 to i8*, !dbg !6350
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !6351
  %problems_by_index7 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 1, !dbg !6351
  %arrayidx8 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index7, i64 0, i64 2, !dbg !6351
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !6351
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %9, i32 0, i32 1, !dbg !6352
  %10 = load i8**, i8*** %block_info, align 8, !dbg !6352
  %11 = load i32, i32* %index.addr, align 4, !dbg !6353
  %idxprom = zext i32 %11 to i64, !dbg !6351
  %arrayidx9 = getelementptr inbounds i8*, i8** %10, i64 %idxprom, !dbg !6351
  store i8* %7, i8** %arrayidx9, align 8, !dbg !6354
  ret void, !dbg !6355
}

declare dso_local void @bitmap_and(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

declare dso_local void @bitmap_and_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

declare dso_local %struct.df_insn_info* @df_insn_create_insn_record(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_chain_alloc(%struct.bitmap_head_def* %all_blocks) #0 !dbg !6356 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !6357, metadata !DIExpression()), !dbg !6358
  call void @df_chain_remove_problem(), !dbg !6359
  %call = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.34, i64 0, i64 0), i64 16, i64 50), !dbg !6360
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6361
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !6361
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !6361
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6361
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 3, !dbg !6362
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** %block_pool, align 8, !dbg !6363
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !6364
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %2, i32 0, i32 1, !dbg !6364
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 4, !dbg !6364
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !6364
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i32 0, i32 9, !dbg !6365
  store i8 1, i8* %optional_p, align 2, !dbg !6366
  ret void, !dbg !6367
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_chain_reset(%struct.bitmap_head_def* %blocks_to_clear) #0 !dbg !6368 {
entry:
  %blocks_to_clear.addr = alloca %struct.bitmap_head_def*, align 8
  store %struct.bitmap_head_def* %blocks_to_clear, %struct.bitmap_head_def** %blocks_to_clear.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %blocks_to_clear.addr, metadata !6369, metadata !DIExpression()), !dbg !6370
  call void @df_chain_remove_problem(), !dbg !6371
  ret void, !dbg !6372
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_chain_finalize(%struct.bitmap_head_def* %all_blocks) #0 !dbg !6373 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !6374, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !6376, metadata !DIExpression()), !dbg !6377
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !6378, metadata !DIExpression()), !dbg !6379
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !6380
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %bb_index), !dbg !6380
  br label %for.cond, !dbg !6380

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !6382
  %tobool = icmp ne i8 %call, 0, !dbg !6380
  br i1 %tobool, label %for.body, label %for.end, !dbg !6380

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %bb_index, align 4, !dbg !6384
  call void @df_chain_create_bb(i32 %1), !dbg !6386
  br label %for.inc, !dbg !6387

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !6382
  br label %for.cond, !dbg !6382, !llvm.loop !6388

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6390
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_chain_free() #0 !dbg !6391 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6392
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !6392
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !6392
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6392
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 3, !dbg !6393
  %2 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !6393
  call void @free_alloc_pool(%struct.alloc_pool_def* %2), !dbg !6394
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !6395
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !6395
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 4, !dbg !6395
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !6395
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 4, !dbg !6395
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !6395
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %5), !dbg !6395
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !6395
  %problems_by_index3 = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 1, !dbg !6395
  %arrayidx4 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index3, i64 0, i64 4, !dbg !6395
  %7 = load %struct.dataflow*, %struct.dataflow** %arrayidx4, align 8, !dbg !6395
  %out_of_date_transfer_functions5 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %7, i32 0, i32 4, !dbg !6395
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out_of_date_transfer_functions5, align 8, !dbg !6395
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !6396
  %problems_by_index6 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 1, !dbg !6396
  %arrayidx7 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index6, i64 0, i64 4, !dbg !6396
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !6396
  %10 = bitcast %struct.dataflow* %9 to i8*, !dbg !6396
  call void @free(i8* %10), !dbg !6397
  ret void, !dbg !6398
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_chain_fully_remove_problem() #0 !dbg !6399 {
entry:
  call void @df_chain_remove_problem(), !dbg !6400
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6401
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !6401
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !6401
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6401
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 4, !dbg !6401
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !6401
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %2), !dbg !6401
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !6401
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !6401
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 4, !dbg !6401
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !6401
  %out_of_date_transfer_functions3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 4, !dbg !6401
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out_of_date_transfer_functions3, align 8, !dbg !6401
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !6402
  %problems_by_index4 = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 1, !dbg !6402
  %arrayidx5 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index4, i64 0, i64 4, !dbg !6402
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx5, align 8, !dbg !6402
  %7 = bitcast %struct.dataflow* %6 to i8*, !dbg !6402
  call void @free(i8* %7), !dbg !6403
  ret void, !dbg !6404
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_chain_top_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !6405 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %def = alloca %union.df_ref_d*, align 8
  %insn_info = alloca %struct.df_insn_info*, align 8
  %def39 = alloca %union.df_ref_d*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !6406, metadata !DIExpression()), !dbg !6407
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !6408, metadata !DIExpression()), !dbg !6409
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6410
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !6410
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !6410
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6410
  %local_flags = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 6, !dbg !6410
  %2 = load i32, i32* %local_flags, align 8, !dbg !6410
  %and = and i32 %2, 1, !dbg !6410
  %tobool = icmp ne i32 %and, 0, !dbg !6410
  br i1 %tobool, label %if.then, label %if.end61, !dbg !6412

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !6413, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !6416, metadata !DIExpression()), !dbg !6417
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6418
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 9, !dbg !6419
  %4 = load i32, i32* %index, align 8, !dbg !6419
  %call = call %union.df_ref_d** @df_get_artificial_defs(i32 %4), !dbg !6420
  store %union.df_ref_d** %call, %union.df_ref_d*** %def_rec, align 8, !dbg !6417
  %5 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6421
  %6 = load %union.df_ref_d*, %union.df_ref_d** %5, align 8, !dbg !6423
  %tobool1 = icmp ne %union.df_ref_d* %6, null, !dbg !6423
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !6424

if.then2:                                         ; preds = %if.then
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6425
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.35, i64 0, i64 0)), !dbg !6427
  br label %while.cond, !dbg !6428

while.cond:                                       ; preds = %while.body, %if.then2
  %8 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6429
  %9 = load %union.df_ref_d*, %union.df_ref_d** %8, align 8, !dbg !6430
  %tobool4 = icmp ne %union.df_ref_d* %9, null, !dbg !6428
  br i1 %tobool4, label %while.body, label %while.end, !dbg !6428

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !6431, metadata !DIExpression()), !dbg !6433
  %10 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6434
  %11 = load %union.df_ref_d*, %union.df_ref_d** %10, align 8, !dbg !6435
  store %union.df_ref_d* %11, %union.df_ref_d** %def, align 8, !dbg !6433
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6436
  %13 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !6437
  %base = bitcast %union.df_ref_d* %13 to %struct.df_base_ref*, !dbg !6437
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 6, !dbg !6437
  %14 = load i32, i32* %regno, align 8, !dbg !6437
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i64 0, i64 0), i32 %14), !dbg !6438
  %15 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !6439
  %base6 = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !6439
  %chain = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base6, i32 0, i32 2, !dbg !6439
  %16 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !6439
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6440
  call void @df_chain_dump(%struct.df_link* %16, %struct._IO_FILE* %17), !dbg !6441
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6442
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !6443
  %19 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6444
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %19, i32 1, !dbg !6444
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !6444
  br label %while.cond, !dbg !6428, !llvm.loop !6445

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !6447

if.end:                                           ; preds = %while.end, %if.then
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6448
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i32 0, i32 7, !dbg !6448
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6448
  %21 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6448
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %21, i32 0, i32 0, !dbg !6448
  %22 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6448
  store %struct.rtx_def* %22, %struct.rtx_def** %insn, align 8, !dbg !6448
  br label %for.cond, !dbg !6448

for.cond:                                         ; preds = %for.inc, %if.end
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6450
  %tobool8 = icmp ne %struct.rtx_def* %23, null, !dbg !6450
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !6450

land.rhs:                                         ; preds = %for.cond
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6450
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6450
  %il9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i32 0, i32 7, !dbg !6450
  %rtl10 = bitcast %union.basic_block_il_dependent* %il9 to %struct.rtl_bb_info**, !dbg !6450
  %26 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl10, align 8, !dbg !6450
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %26, i32 0, i32 1, !dbg !6450
  %27 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6450
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !6450
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6450
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !6450
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !6450
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6450
  %cmp = icmp ne %struct.rtx_def* %24, %28, !dbg !6450
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %29 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !6452
  br i1 %29, label %for.body, label %for.end, !dbg !6448

for.body:                                         ; preds = %land.end
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6453
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !6453
  %bf.load = load i32, i32* %31, align 8, !dbg !6453
  %bf.clear = and i32 %bf.load, 65535, !dbg !6453
  %cmp12 = icmp eq i32 %bf.clear, 8, !dbg !6453
  br i1 %cmp12, label %if.then24, label %lor.lhs.false, !dbg !6453

lor.lhs.false:                                    ; preds = %for.body
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6453
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !6453
  %bf.load13 = load i32, i32* %33, align 8, !dbg !6453
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !6453
  %cmp15 = icmp eq i32 %bf.clear14, 7, !dbg !6453
  br i1 %cmp15, label %if.then24, label %lor.lhs.false16, !dbg !6453

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6453
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !6453
  %bf.load17 = load i32, i32* %35, align 8, !dbg !6453
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !6453
  %cmp19 = icmp eq i32 %bf.clear18, 9, !dbg !6453
  br i1 %cmp19, label %if.then24, label %lor.lhs.false20, !dbg !6453

lor.lhs.false20:                                  ; preds = %lor.lhs.false16
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6453
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !6453
  %bf.load21 = load i32, i32* %37, align 8, !dbg !6453
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !6453
  %cmp23 = icmp eq i32 %bf.clear22, 10, !dbg !6453
  br i1 %cmp23, label %if.then24, label %if.end56, !dbg !6456

if.then24:                                        ; preds = %lor.lhs.false20, %lor.lhs.false16, %lor.lhs.false, %for.body
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !6457, metadata !DIExpression()), !dbg !6459
  %38 = load %struct.df*, %struct.df** @df, align 8, !dbg !6460
  %insns = getelementptr inbounds %struct.df, %struct.df* %38, i32 0, i32 10, !dbg !6460
  %39 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !6460
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6460
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !6460
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !6460
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !6460
  %rt_int = bitcast %union.rtunion_def* %arrayidx27 to i32*, !dbg !6460
  %41 = load i32, i32* %rt_int, align 8, !dbg !6460
  %idxprom = sext i32 %41 to i64, !dbg !6460
  %arrayidx28 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %39, i64 %idxprom, !dbg !6460
  %42 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx28, align 8, !dbg !6460
  store %struct.df_insn_info* %42, %struct.df_insn_info** %insn_info, align 8, !dbg !6459
  %43 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !6461
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %43, i32 0, i32 1, !dbg !6461
  %44 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !6461
  store %union.df_ref_d** %44, %union.df_ref_d*** %def_rec, align 8, !dbg !6462
  %45 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6463
  %46 = load %union.df_ref_d*, %union.df_ref_d** %45, align 8, !dbg !6465
  %tobool29 = icmp ne %union.df_ref_d* %46, null, !dbg !6465
  br i1 %tobool29, label %if.then30, label %if.end55, !dbg !6466

if.then30:                                        ; preds = %if.then24
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6467
  %48 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !6469
  %luid = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %48, i32 0, i32 5, !dbg !6469
  %49 = load i32, i32* %luid, align 8, !dbg !6469
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6470
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !6470
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !6470
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 0, !dbg !6470
  %rt_int34 = bitcast %union.rtunion_def* %arrayidx33 to i32*, !dbg !6470
  %51 = load i32, i32* %rt_int34, align 8, !dbg !6470
  %call35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.37, i64 0, i64 0), i32 %49, i32 %51), !dbg !6471
  br label %while.cond36, !dbg !6472

while.cond36:                                     ; preds = %if.end49, %if.then30
  %52 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6473
  %53 = load %union.df_ref_d*, %union.df_ref_d** %52, align 8, !dbg !6474
  %tobool37 = icmp ne %union.df_ref_d* %53, null, !dbg !6472
  br i1 %tobool37, label %while.body38, label %while.end54, !dbg !6472

while.body38:                                     ; preds = %while.cond36
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def39, metadata !6475, metadata !DIExpression()), !dbg !6477
  %54 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6478
  %55 = load %union.df_ref_d*, %union.df_ref_d** %54, align 8, !dbg !6479
  store %union.df_ref_d* %55, %union.df_ref_d** %def39, align 8, !dbg !6477
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6480
  %57 = load %union.df_ref_d*, %union.df_ref_d** %def39, align 8, !dbg !6481
  %base40 = bitcast %union.df_ref_d* %57 to %struct.df_base_ref*, !dbg !6481
  %regno41 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base40, i32 0, i32 6, !dbg !6481
  %58 = load i32, i32* %regno41, align 8, !dbg !6481
  %call42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i32 %58), !dbg !6482
  %59 = load %union.df_ref_d*, %union.df_ref_d** %def39, align 8, !dbg !6483
  %base43 = bitcast %union.df_ref_d* %59 to %struct.df_base_ref*, !dbg !6483
  %60 = bitcast %struct.df_base_ref* %base43 to i32*, !dbg !6483
  %bf.load44 = load i32, i32* %60, align 8, !dbg !6483
  %bf.ashr = ashr i32 %bf.load44, 16, !dbg !6483
  %and45 = and i32 %bf.ashr, 32, !dbg !6485
  %tobool46 = icmp ne i32 %and45, 0, !dbg !6485
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !6486

if.then47:                                        ; preds = %while.body38
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6487
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)), !dbg !6488
  br label %if.end49, !dbg !6488

if.end49:                                         ; preds = %if.then47, %while.body38
  %62 = load %union.df_ref_d*, %union.df_ref_d** %def39, align 8, !dbg !6489
  %base50 = bitcast %union.df_ref_d* %62 to %struct.df_base_ref*, !dbg !6489
  %chain51 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base50, i32 0, i32 2, !dbg !6489
  %63 = load %struct.df_link*, %struct.df_link** %chain51, align 8, !dbg !6489
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6490
  call void @df_chain_dump(%struct.df_link* %63, %struct._IO_FILE* %64), !dbg !6491
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6492
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !6493
  %66 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6494
  %incdec.ptr53 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %66, i32 1, !dbg !6494
  store %union.df_ref_d** %incdec.ptr53, %union.df_ref_d*** %def_rec, align 8, !dbg !6494
  br label %while.cond36, !dbg !6472, !llvm.loop !6495

while.end54:                                      ; preds = %while.cond36
  br label %if.end55, !dbg !6497

if.end55:                                         ; preds = %while.end54, %if.then24
  br label %if.end56, !dbg !6498

if.end56:                                         ; preds = %if.end55, %lor.lhs.false20
  br label %for.inc, !dbg !6499

for.inc:                                          ; preds = %if.end56
  %67 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6450
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !6450
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !6450
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 2, !dbg !6450
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !6450
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx60, align 8, !dbg !6450
  store %struct.rtx_def* %68, %struct.rtx_def** %insn, align 8, !dbg !6450
  br label %for.cond, !dbg !6450, !llvm.loop !6500

for.end:                                          ; preds = %land.end
  br label %if.end61, !dbg !6502

if.end61:                                         ; preds = %for.end, %entry
  ret void, !dbg !6503
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_chain_bottom_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !6504 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %use_rec = alloca %union.df_ref_d**, align 8
  %use = alloca %union.df_ref_d*, align 8
  %insn_info = alloca %struct.df_insn_info*, align 8
  %eq_use_rec = alloca %union.df_ref_d**, align 8
  %use41 = alloca %union.df_ref_d*, align 8
  %use60 = alloca %union.df_ref_d*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !6505, metadata !DIExpression()), !dbg !6506
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !6507, metadata !DIExpression()), !dbg !6508
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6509
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !6509
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !6509
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6509
  %local_flags = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 6, !dbg !6509
  %2 = load i32, i32* %local_flags, align 8, !dbg !6509
  %and = and i32 %2, 2, !dbg !6509
  %tobool = icmp ne i32 %and, 0, !dbg !6509
  br i1 %tobool, label %if.then, label %if.end75, !dbg !6511

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !6512, metadata !DIExpression()), !dbg !6514
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %use_rec, metadata !6515, metadata !DIExpression()), !dbg !6516
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6517
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 9, !dbg !6518
  %4 = load i32, i32* %index, align 8, !dbg !6518
  %call = call %union.df_ref_d** @df_get_artificial_uses(i32 %4), !dbg !6519
  store %union.df_ref_d** %call, %union.df_ref_d*** %use_rec, align 8, !dbg !6516
  %5 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6520
  %6 = load %union.df_ref_d*, %union.df_ref_d** %5, align 8, !dbg !6522
  %tobool1 = icmp ne %union.df_ref_d* %6, null, !dbg !6522
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !6523

if.then2:                                         ; preds = %if.then
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6524
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.40, i64 0, i64 0)), !dbg !6526
  br label %while.cond, !dbg !6527

while.cond:                                       ; preds = %while.body, %if.then2
  %8 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6528
  %9 = load %union.df_ref_d*, %union.df_ref_d** %8, align 8, !dbg !6529
  %tobool4 = icmp ne %union.df_ref_d* %9, null, !dbg !6527
  br i1 %tobool4, label %while.body, label %while.end, !dbg !6527

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use, metadata !6530, metadata !DIExpression()), !dbg !6532
  %10 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6533
  %11 = load %union.df_ref_d*, %union.df_ref_d** %10, align 8, !dbg !6534
  store %union.df_ref_d* %11, %union.df_ref_d** %use, align 8, !dbg !6532
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6535
  %13 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !6536
  %base = bitcast %union.df_ref_d* %13 to %struct.df_base_ref*, !dbg !6536
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 6, !dbg !6536
  %14 = load i32, i32* %regno, align 8, !dbg !6536
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i64 0, i64 0), i32 %14), !dbg !6537
  %15 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !6538
  %base6 = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !6538
  %chain = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base6, i32 0, i32 2, !dbg !6538
  %16 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !6538
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6539
  call void @df_chain_dump(%struct.df_link* %16, %struct._IO_FILE* %17), !dbg !6540
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6541
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !6542
  %19 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6543
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %19, i32 1, !dbg !6543
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %use_rec, align 8, !dbg !6543
  br label %while.cond, !dbg !6527, !llvm.loop !6544

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !6546

if.end:                                           ; preds = %while.end, %if.then
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6547
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i32 0, i32 7, !dbg !6547
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6547
  %21 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6547
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %21, i32 0, i32 0, !dbg !6547
  %22 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6547
  store %struct.rtx_def* %22, %struct.rtx_def** %insn, align 8, !dbg !6547
  br label %for.cond, !dbg !6547

for.cond:                                         ; preds = %for.inc, %if.end
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6549
  %tobool8 = icmp ne %struct.rtx_def* %23, null, !dbg !6549
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !6549

land.rhs:                                         ; preds = %for.cond
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6549
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !6549
  %il9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %25, i32 0, i32 7, !dbg !6549
  %rtl10 = bitcast %union.basic_block_il_dependent* %il9 to %struct.rtl_bb_info**, !dbg !6549
  %26 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl10, align 8, !dbg !6549
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %26, i32 0, i32 1, !dbg !6549
  %27 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6549
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !6549
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6549
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !6549
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !6549
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6549
  %cmp = icmp ne %struct.rtx_def* %24, %28, !dbg !6549
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %29 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !6551
  br i1 %29, label %for.body, label %for.end, !dbg !6547

for.body:                                         ; preds = %land.end
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6552
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !6552
  %bf.load = load i32, i32* %31, align 8, !dbg !6552
  %bf.clear = and i32 %bf.load, 65535, !dbg !6552
  %cmp12 = icmp eq i32 %bf.clear, 8, !dbg !6552
  br i1 %cmp12, label %if.then24, label %lor.lhs.false, !dbg !6552

lor.lhs.false:                                    ; preds = %for.body
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6552
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !6552
  %bf.load13 = load i32, i32* %33, align 8, !dbg !6552
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !6552
  %cmp15 = icmp eq i32 %bf.clear14, 7, !dbg !6552
  br i1 %cmp15, label %if.then24, label %lor.lhs.false16, !dbg !6552

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6552
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !6552
  %bf.load17 = load i32, i32* %35, align 8, !dbg !6552
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !6552
  %cmp19 = icmp eq i32 %bf.clear18, 9, !dbg !6552
  br i1 %cmp19, label %if.then24, label %lor.lhs.false20, !dbg !6552

lor.lhs.false20:                                  ; preds = %lor.lhs.false16
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6552
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !6552
  %bf.load21 = load i32, i32* %37, align 8, !dbg !6552
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !6552
  %cmp23 = icmp eq i32 %bf.clear22, 10, !dbg !6552
  br i1 %cmp23, label %if.then24, label %if.end70, !dbg !6555

if.then24:                                        ; preds = %lor.lhs.false20, %lor.lhs.false16, %lor.lhs.false, %for.body
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !6556, metadata !DIExpression()), !dbg !6558
  %38 = load %struct.df*, %struct.df** @df, align 8, !dbg !6559
  %insns = getelementptr inbounds %struct.df, %struct.df* %38, i32 0, i32 10, !dbg !6559
  %39 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !6559
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6559
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !6559
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !6559
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !6559
  %rt_int = bitcast %union.rtunion_def* %arrayidx27 to i32*, !dbg !6559
  %41 = load i32, i32* %rt_int, align 8, !dbg !6559
  %idxprom = sext i32 %41 to i64, !dbg !6559
  %arrayidx28 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %39, i64 %idxprom, !dbg !6559
  %42 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx28, align 8, !dbg !6559
  store %struct.df_insn_info* %42, %struct.df_insn_info** %insn_info, align 8, !dbg !6558
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %eq_use_rec, metadata !6560, metadata !DIExpression()), !dbg !6561
  %43 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !6562
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %43, i32 0, i32 3, !dbg !6562
  %44 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !6562
  store %union.df_ref_d** %44, %union.df_ref_d*** %eq_use_rec, align 8, !dbg !6561
  %45 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !6563
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %45, i32 0, i32 2, !dbg !6563
  %46 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !6563
  store %union.df_ref_d** %46, %union.df_ref_d*** %use_rec, align 8, !dbg !6564
  %47 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6565
  %48 = load %union.df_ref_d*, %union.df_ref_d** %47, align 8, !dbg !6567
  %tobool29 = icmp ne %union.df_ref_d* %48, null, !dbg !6567
  br i1 %tobool29, label %if.then32, label %lor.lhs.false30, !dbg !6568

lor.lhs.false30:                                  ; preds = %if.then24
  %49 = load %union.df_ref_d**, %union.df_ref_d*** %eq_use_rec, align 8, !dbg !6569
  %50 = load %union.df_ref_d*, %union.df_ref_d** %49, align 8, !dbg !6570
  %tobool31 = icmp ne %union.df_ref_d* %50, null, !dbg !6570
  br i1 %tobool31, label %if.then32, label %if.end69, !dbg !6571

if.then32:                                        ; preds = %lor.lhs.false30, %if.then24
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6572
  %52 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !6574
  %luid = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %52, i32 0, i32 5, !dbg !6574
  %53 = load i32, i32* %luid, align 8, !dbg !6574
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6575
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !6575
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !6575
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !6575
  %rt_int36 = bitcast %union.rtunion_def* %arrayidx35 to i32*, !dbg !6575
  %55 = load i32, i32* %rt_int36, align 8, !dbg !6575
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.41, i64 0, i64 0), i32 %53, i32 %55), !dbg !6576
  br label %while.cond38, !dbg !6577

while.cond38:                                     ; preds = %if.end51, %if.then32
  %56 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6578
  %57 = load %union.df_ref_d*, %union.df_ref_d** %56, align 8, !dbg !6579
  %tobool39 = icmp ne %union.df_ref_d* %57, null, !dbg !6577
  br i1 %tobool39, label %while.body40, label %while.end56, !dbg !6577

while.body40:                                     ; preds = %while.cond38
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use41, metadata !6580, metadata !DIExpression()), !dbg !6582
  %58 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6583
  %59 = load %union.df_ref_d*, %union.df_ref_d** %58, align 8, !dbg !6584
  store %union.df_ref_d* %59, %union.df_ref_d** %use41, align 8, !dbg !6582
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6585
  %61 = load %union.df_ref_d*, %union.df_ref_d** %use41, align 8, !dbg !6586
  %base42 = bitcast %union.df_ref_d* %61 to %struct.df_base_ref*, !dbg !6586
  %regno43 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base42, i32 0, i32 6, !dbg !6586
  %62 = load i32, i32* %regno43, align 8, !dbg !6586
  %call44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i32 %62), !dbg !6587
  %63 = load %union.df_ref_d*, %union.df_ref_d** %use41, align 8, !dbg !6588
  %base45 = bitcast %union.df_ref_d* %63 to %struct.df_base_ref*, !dbg !6588
  %64 = bitcast %struct.df_base_ref* %base45 to i32*, !dbg !6588
  %bf.load46 = load i32, i32* %64, align 8, !dbg !6588
  %bf.ashr = ashr i32 %bf.load46, 16, !dbg !6588
  %and47 = and i32 %bf.ashr, 32, !dbg !6590
  %tobool48 = icmp ne i32 %and47, 0, !dbg !6590
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !6591

if.then49:                                        ; preds = %while.body40
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6592
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)), !dbg !6593
  br label %if.end51, !dbg !6593

if.end51:                                         ; preds = %if.then49, %while.body40
  %66 = load %union.df_ref_d*, %union.df_ref_d** %use41, align 8, !dbg !6594
  %base52 = bitcast %union.df_ref_d* %66 to %struct.df_base_ref*, !dbg !6594
  %chain53 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base52, i32 0, i32 2, !dbg !6594
  %67 = load %struct.df_link*, %struct.df_link** %chain53, align 8, !dbg !6594
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6595
  call void @df_chain_dump(%struct.df_link* %67, %struct._IO_FILE* %68), !dbg !6596
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6597
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %69, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !6598
  %70 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6599
  %incdec.ptr55 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %70, i32 1, !dbg !6599
  store %union.df_ref_d** %incdec.ptr55, %union.df_ref_d*** %use_rec, align 8, !dbg !6599
  br label %while.cond38, !dbg !6577, !llvm.loop !6600

while.end56:                                      ; preds = %while.cond38
  br label %while.cond57, !dbg !6602

while.cond57:                                     ; preds = %while.body59, %while.end56
  %71 = load %union.df_ref_d**, %union.df_ref_d*** %eq_use_rec, align 8, !dbg !6603
  %72 = load %union.df_ref_d*, %union.df_ref_d** %71, align 8, !dbg !6604
  %tobool58 = icmp ne %union.df_ref_d* %72, null, !dbg !6602
  br i1 %tobool58, label %while.body59, label %while.end68, !dbg !6602

while.body59:                                     ; preds = %while.cond57
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use60, metadata !6605, metadata !DIExpression()), !dbg !6607
  %73 = load %union.df_ref_d**, %union.df_ref_d*** %eq_use_rec, align 8, !dbg !6608
  %74 = load %union.df_ref_d*, %union.df_ref_d** %73, align 8, !dbg !6609
  store %union.df_ref_d* %74, %union.df_ref_d** %use60, align 8, !dbg !6607
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6610
  %76 = load %union.df_ref_d*, %union.df_ref_d** %use60, align 8, !dbg !6611
  %base61 = bitcast %union.df_ref_d* %76 to %struct.df_base_ref*, !dbg !6611
  %regno62 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base61, i32 0, i32 6, !dbg !6611
  %77 = load i32, i32* %regno62, align 8, !dbg !6611
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i64 0, i64 0), i32 %77), !dbg !6612
  %78 = load %union.df_ref_d*, %union.df_ref_d** %use60, align 8, !dbg !6613
  %base64 = bitcast %union.df_ref_d* %78 to %struct.df_base_ref*, !dbg !6613
  %chain65 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base64, i32 0, i32 2, !dbg !6613
  %79 = load %struct.df_link*, %struct.df_link** %chain65, align 8, !dbg !6613
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6614
  call void @df_chain_dump(%struct.df_link* %79, %struct._IO_FILE* %80), !dbg !6615
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !6616
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)), !dbg !6617
  %82 = load %union.df_ref_d**, %union.df_ref_d*** %eq_use_rec, align 8, !dbg !6618
  %incdec.ptr67 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %82, i32 1, !dbg !6618
  store %union.df_ref_d** %incdec.ptr67, %union.df_ref_d*** %eq_use_rec, align 8, !dbg !6618
  br label %while.cond57, !dbg !6602, !llvm.loop !6619

while.end68:                                      ; preds = %while.cond57
  br label %if.end69, !dbg !6621

if.end69:                                         ; preds = %while.end68, %lor.lhs.false30
  br label %if.end70, !dbg !6622

if.end70:                                         ; preds = %if.end69, %lor.lhs.false20
  br label %for.inc, !dbg !6623

for.inc:                                          ; preds = %if.end70
  %83 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6549
  %u71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !6549
  %fld72 = bitcast %union.u* %u71 to [1 x %union.rtunion_def]*, !dbg !6549
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i64 0, i64 2, !dbg !6549
  %rt_rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**, !dbg !6549
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx74, align 8, !dbg !6549
  store %struct.rtx_def* %84, %struct.rtx_def** %insn, align 8, !dbg !6549
  br label %for.cond, !dbg !6549, !llvm.loop !6624

for.end:                                          ; preds = %land.end
  br label %if.end75, !dbg !6626

if.end75:                                         ; preds = %for.end, %entry
  ret void, !dbg !6627
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_chain_remove_problem() #0 !dbg !6628 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_index = alloca i32, align 4
  %insn = alloca %struct.rtx_def*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %use_rec = alloca %union.df_ref_d**, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %uid = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !6629, metadata !DIExpression()), !dbg !6630
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !6631, metadata !DIExpression()), !dbg !6632
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6633
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !6633
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !6633
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6633
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 3, !dbg !6635
  %2 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !6635
  %tobool = icmp ne %struct.alloc_pool_def* %2, null, !dbg !6633
  br i1 %tobool, label %if.then, label %if.end, !dbg !6636

if.then:                                          ; preds = %entry
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !6637
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !6637
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 4, !dbg !6637
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !6637
  %block_pool3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 3, !dbg !6638
  %5 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool3, align 8, !dbg !6638
  call void @free_alloc_pool(%struct.alloc_pool_def* %5), !dbg !6639
  br label %if.end, !dbg !6639

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !6640
  %problems_by_index4 = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 1, !dbg !6640
  %arrayidx5 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index4, i64 0, i64 4, !dbg !6640
  %7 = load %struct.dataflow*, %struct.dataflow** %arrayidx5, align 8, !dbg !6640
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %7, i32 0, i32 4, !dbg !6640
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !6640
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %8, i32 0, i32* %bb_index), !dbg !6640
  br label %for.cond, !dbg !6640

for.cond:                                         ; preds = %for.inc113, %if.end
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !6642
  %tobool6 = icmp ne i8 %call, 0, !dbg !6640
  br i1 %tobool6, label %for.body, label %for.end114, !dbg !6640

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !6644, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !6647, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %use_rec, metadata !6649, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !6651, metadata !DIExpression()), !dbg !6652
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6653
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, !dbg !6653
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !6653
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6653
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i32 0, i32 2, !dbg !6653
  %11 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !6653
  %tobool7 = icmp ne %struct.VEC_basic_block_gc* %11, null, !dbg !6653
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !6653

cond.true:                                        ; preds = %for.body
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6653
  %add.ptr8 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, !dbg !6653
  %cfg9 = getelementptr inbounds %struct.function, %struct.function* %add.ptr8, i32 0, i32 1, !dbg !6653
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9, align 8, !dbg !6653
  %x_basic_block_info10 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i32 0, i32 2, !dbg !6653
  %14 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info10, align 8, !dbg !6653
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %14, i32 0, i32 0, !dbg !6653
  br label %cond.end, !dbg !6653

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !6653

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !6653
  %15 = load i32, i32* %bb_index, align 4, !dbg !6653
  %call11 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %15), !dbg !6653
  store %struct.basic_block_def* %call11, %struct.basic_block_def** %bb, align 8, !dbg !6652
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !6654
  %problems_by_index12 = getelementptr inbounds %struct.df, %struct.df* %16, i32 0, i32 1, !dbg !6654
  %arrayidx13 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index12, i64 0, i64 4, !dbg !6654
  %17 = load %struct.dataflow*, %struct.dataflow** %arrayidx13, align 8, !dbg !6654
  %local_flags = getelementptr inbounds %struct.dataflow, %struct.dataflow* %17, i32 0, i32 6, !dbg !6654
  %18 = load i32, i32* %local_flags, align 8, !dbg !6654
  %and = and i32 %18, 1, !dbg !6654
  %tobool14 = icmp ne i32 %and, 0, !dbg !6654
  br i1 %tobool14, label %if.then15, label %if.end21, !dbg !6656

if.then15:                                        ; preds = %cond.end
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6657
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i32 0, i32 9, !dbg !6659
  %20 = load i32, i32* %index, align 8, !dbg !6659
  %call16 = call %union.df_ref_d** @df_get_artificial_defs(i32 %20), !dbg !6660
  store %union.df_ref_d** %call16, %union.df_ref_d*** %def_rec, align 8, !dbg !6661
  br label %for.cond17, !dbg !6662

for.cond17:                                       ; preds = %for.inc, %if.then15
  %21 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6663
  %22 = load %union.df_ref_d*, %union.df_ref_d** %21, align 8, !dbg !6665
  %tobool18 = icmp ne %union.df_ref_d* %22, null, !dbg !6666
  br i1 %tobool18, label %for.body19, label %for.end, !dbg !6666

for.body19:                                       ; preds = %for.cond17
  %23 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6667
  %24 = load %union.df_ref_d*, %union.df_ref_d** %23, align 8, !dbg !6667
  %base20 = bitcast %union.df_ref_d* %24 to %struct.df_base_ref*, !dbg !6667
  %chain = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base20, i32 0, i32 2, !dbg !6667
  store %struct.df_link* null, %struct.df_link** %chain, align 8, !dbg !6668
  br label %for.inc, !dbg !6667

for.inc:                                          ; preds = %for.body19
  %25 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6669
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %25, i32 1, !dbg !6669
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !6669
  br label %for.cond17, !dbg !6670, !llvm.loop !6671

for.end:                                          ; preds = %for.cond17
  br label %if.end21, !dbg !6672

if.end21:                                         ; preds = %for.end, %cond.end
  %26 = load %struct.df*, %struct.df** @df, align 8, !dbg !6673
  %problems_by_index22 = getelementptr inbounds %struct.df, %struct.df* %26, i32 0, i32 1, !dbg !6673
  %arrayidx23 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index22, i64 0, i64 4, !dbg !6673
  %27 = load %struct.dataflow*, %struct.dataflow** %arrayidx23, align 8, !dbg !6673
  %local_flags24 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %27, i32 0, i32 6, !dbg !6673
  %28 = load i32, i32* %local_flags24, align 8, !dbg !6673
  %and25 = and i32 %28, 2, !dbg !6673
  %tobool26 = icmp ne i32 %and25, 0, !dbg !6673
  br i1 %tobool26, label %if.then27, label %if.end38, !dbg !6675

if.then27:                                        ; preds = %if.end21
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6676
  %index28 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i32 0, i32 9, !dbg !6678
  %30 = load i32, i32* %index28, align 8, !dbg !6678
  %call29 = call %union.df_ref_d** @df_get_artificial_uses(i32 %30), !dbg !6679
  store %union.df_ref_d** %call29, %union.df_ref_d*** %use_rec, align 8, !dbg !6680
  br label %for.cond30, !dbg !6681

for.cond30:                                       ; preds = %for.inc35, %if.then27
  %31 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6682
  %32 = load %union.df_ref_d*, %union.df_ref_d** %31, align 8, !dbg !6684
  %tobool31 = icmp ne %union.df_ref_d* %32, null, !dbg !6685
  br i1 %tobool31, label %for.body32, label %for.end37, !dbg !6685

for.body32:                                       ; preds = %for.cond30
  %33 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6686
  %34 = load %union.df_ref_d*, %union.df_ref_d** %33, align 8, !dbg !6686
  %base33 = bitcast %union.df_ref_d* %34 to %struct.df_base_ref*, !dbg !6686
  %chain34 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base33, i32 0, i32 2, !dbg !6686
  store %struct.df_link* null, %struct.df_link** %chain34, align 8, !dbg !6687
  br label %for.inc35, !dbg !6686

for.inc35:                                        ; preds = %for.body32
  %35 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6688
  %incdec.ptr36 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %35, i32 1, !dbg !6688
  store %union.df_ref_d** %incdec.ptr36, %union.df_ref_d*** %use_rec, align 8, !dbg !6688
  br label %for.cond30, !dbg !6689, !llvm.loop !6690

for.end37:                                        ; preds = %for.cond30
  br label %if.end38, !dbg !6691

if.end38:                                         ; preds = %for.end37, %if.end21
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6692
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i32 0, i32 7, !dbg !6692
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6692
  %37 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6692
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %37, i32 0, i32 0, !dbg !6692
  %38 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6692
  store %struct.rtx_def* %38, %struct.rtx_def** %insn, align 8, !dbg !6692
  br label %for.cond39, !dbg !6692

for.cond39:                                       ; preds = %for.inc107, %if.end38
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6694
  %tobool40 = icmp ne %struct.rtx_def* %39, null, !dbg !6694
  br i1 %tobool40, label %land.rhs, label %land.end, !dbg !6694

land.rhs:                                         ; preds = %for.cond39
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6694
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6694
  %il41 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i32 0, i32 7, !dbg !6694
  %rtl42 = bitcast %union.basic_block_il_dependent* %il41 to %struct.rtl_bb_info**, !dbg !6694
  %42 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl42, align 8, !dbg !6694
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %42, i32 0, i32 1, !dbg !6694
  %43 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6694
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !6694
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6694
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !6694
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !6694
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6694
  %cmp = icmp ne %struct.rtx_def* %40, %44, !dbg !6694
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond39
  %45 = phi i1 [ false, %for.cond39 ], [ %cmp, %land.rhs ], !dbg !6696
  br i1 %45, label %for.body44, label %for.end112, !dbg !6692

for.body44:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !6697, metadata !DIExpression()), !dbg !6699
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6700
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !6700
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !6700
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 0, !dbg !6700
  %rt_int = bitcast %union.rtunion_def* %arrayidx47 to i32*, !dbg !6700
  %47 = load i32, i32* %rt_int, align 8, !dbg !6700
  store i32 %47, i32* %uid, align 4, !dbg !6699
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6701
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !6701
  %bf.load = load i32, i32* %49, align 8, !dbg !6701
  %bf.clear = and i32 %bf.load, 65535, !dbg !6701
  %cmp48 = icmp eq i32 %bf.clear, 8, !dbg !6701
  br i1 %cmp48, label %if.then60, label %lor.lhs.false, !dbg !6701

lor.lhs.false:                                    ; preds = %for.body44
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6701
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !6701
  %bf.load49 = load i32, i32* %51, align 8, !dbg !6701
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !6701
  %cmp51 = icmp eq i32 %bf.clear50, 7, !dbg !6701
  br i1 %cmp51, label %if.then60, label %lor.lhs.false52, !dbg !6701

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6701
  %53 = bitcast %struct.rtx_def* %52 to i32*, !dbg !6701
  %bf.load53 = load i32, i32* %53, align 8, !dbg !6701
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !6701
  %cmp55 = icmp eq i32 %bf.clear54, 9, !dbg !6701
  br i1 %cmp55, label %if.then60, label %lor.lhs.false56, !dbg !6701

lor.lhs.false56:                                  ; preds = %lor.lhs.false52
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6701
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !6701
  %bf.load57 = load i32, i32* %55, align 8, !dbg !6701
  %bf.clear58 = and i32 %bf.load57, 65535, !dbg !6701
  %cmp59 = icmp eq i32 %bf.clear58, 10, !dbg !6701
  br i1 %cmp59, label %if.then60, label %if.end106, !dbg !6703

if.then60:                                        ; preds = %lor.lhs.false56, %lor.lhs.false52, %lor.lhs.false, %for.body44
  %56 = load %struct.df*, %struct.df** @df, align 8, !dbg !6704
  %problems_by_index61 = getelementptr inbounds %struct.df, %struct.df* %56, i32 0, i32 1, !dbg !6704
  %arrayidx62 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index61, i64 0, i64 4, !dbg !6704
  %57 = load %struct.dataflow*, %struct.dataflow** %arrayidx62, align 8, !dbg !6704
  %local_flags63 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %57, i32 0, i32 6, !dbg !6704
  %58 = load i32, i32* %local_flags63, align 8, !dbg !6704
  %and64 = and i32 %58, 1, !dbg !6704
  %tobool65 = icmp ne i32 %and64, 0, !dbg !6704
  br i1 %tobool65, label %if.then66, label %if.end76, !dbg !6707

if.then66:                                        ; preds = %if.then60
  %59 = load %struct.df*, %struct.df** @df, align 8, !dbg !6708
  %insns = getelementptr inbounds %struct.df, %struct.df* %59, i32 0, i32 10, !dbg !6708
  %60 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !6708
  %61 = load i32, i32* %uid, align 4, !dbg !6708
  %idxprom = zext i32 %61 to i64, !dbg !6708
  %arrayidx67 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %60, i64 %idxprom, !dbg !6708
  %62 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx67, align 8, !dbg !6708
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %62, i32 0, i32 1, !dbg !6708
  %63 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !6708
  store %union.df_ref_d** %63, %union.df_ref_d*** %def_rec, align 8, !dbg !6710
  br label %for.cond68, !dbg !6711

for.cond68:                                       ; preds = %for.inc73, %if.then66
  %64 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6712
  %65 = load %union.df_ref_d*, %union.df_ref_d** %64, align 8, !dbg !6714
  %tobool69 = icmp ne %union.df_ref_d* %65, null, !dbg !6715
  br i1 %tobool69, label %for.body70, label %for.end75, !dbg !6715

for.body70:                                       ; preds = %for.cond68
  %66 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6716
  %67 = load %union.df_ref_d*, %union.df_ref_d** %66, align 8, !dbg !6716
  %base71 = bitcast %union.df_ref_d* %67 to %struct.df_base_ref*, !dbg !6716
  %chain72 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base71, i32 0, i32 2, !dbg !6716
  store %struct.df_link* null, %struct.df_link** %chain72, align 8, !dbg !6717
  br label %for.inc73, !dbg !6716

for.inc73:                                        ; preds = %for.body70
  %68 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !6718
  %incdec.ptr74 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %68, i32 1, !dbg !6718
  store %union.df_ref_d** %incdec.ptr74, %union.df_ref_d*** %def_rec, align 8, !dbg !6718
  br label %for.cond68, !dbg !6719, !llvm.loop !6720

for.end75:                                        ; preds = %for.cond68
  br label %if.end76, !dbg !6721

if.end76:                                         ; preds = %for.end75, %if.then60
  %69 = load %struct.df*, %struct.df** @df, align 8, !dbg !6722
  %problems_by_index77 = getelementptr inbounds %struct.df, %struct.df* %69, i32 0, i32 1, !dbg !6722
  %arrayidx78 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index77, i64 0, i64 4, !dbg !6722
  %70 = load %struct.dataflow*, %struct.dataflow** %arrayidx78, align 8, !dbg !6722
  %local_flags79 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %70, i32 0, i32 6, !dbg !6722
  %71 = load i32, i32* %local_flags79, align 8, !dbg !6722
  %and80 = and i32 %71, 2, !dbg !6722
  %tobool81 = icmp ne i32 %and80, 0, !dbg !6722
  br i1 %tobool81, label %if.then82, label %if.end105, !dbg !6724

if.then82:                                        ; preds = %if.end76
  %72 = load %struct.df*, %struct.df** @df, align 8, !dbg !6725
  %insns83 = getelementptr inbounds %struct.df, %struct.df* %72, i32 0, i32 10, !dbg !6725
  %73 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns83, align 8, !dbg !6725
  %74 = load i32, i32* %uid, align 4, !dbg !6725
  %idxprom84 = zext i32 %74 to i64, !dbg !6725
  %arrayidx85 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %73, i64 %idxprom84, !dbg !6725
  %75 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx85, align 8, !dbg !6725
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %75, i32 0, i32 2, !dbg !6725
  %76 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !6725
  store %union.df_ref_d** %76, %union.df_ref_d*** %use_rec, align 8, !dbg !6728
  br label %for.cond86, !dbg !6729

for.cond86:                                       ; preds = %for.inc91, %if.then82
  %77 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6730
  %78 = load %union.df_ref_d*, %union.df_ref_d** %77, align 8, !dbg !6732
  %tobool87 = icmp ne %union.df_ref_d* %78, null, !dbg !6733
  br i1 %tobool87, label %for.body88, label %for.end93, !dbg !6733

for.body88:                                       ; preds = %for.cond86
  %79 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6734
  %80 = load %union.df_ref_d*, %union.df_ref_d** %79, align 8, !dbg !6734
  %base89 = bitcast %union.df_ref_d* %80 to %struct.df_base_ref*, !dbg !6734
  %chain90 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base89, i32 0, i32 2, !dbg !6734
  store %struct.df_link* null, %struct.df_link** %chain90, align 8, !dbg !6735
  br label %for.inc91, !dbg !6734

for.inc91:                                        ; preds = %for.body88
  %81 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6736
  %incdec.ptr92 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %81, i32 1, !dbg !6736
  store %union.df_ref_d** %incdec.ptr92, %union.df_ref_d*** %use_rec, align 8, !dbg !6736
  br label %for.cond86, !dbg !6737, !llvm.loop !6738

for.end93:                                        ; preds = %for.cond86
  %82 = load %struct.df*, %struct.df** @df, align 8, !dbg !6740
  %insns94 = getelementptr inbounds %struct.df, %struct.df* %82, i32 0, i32 10, !dbg !6740
  %83 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns94, align 8, !dbg !6740
  %84 = load i32, i32* %uid, align 4, !dbg !6740
  %idxprom95 = zext i32 %84 to i64, !dbg !6740
  %arrayidx96 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %83, i64 %idxprom95, !dbg !6740
  %85 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx96, align 8, !dbg !6740
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %85, i32 0, i32 3, !dbg !6740
  %86 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !6740
  store %union.df_ref_d** %86, %union.df_ref_d*** %use_rec, align 8, !dbg !6742
  br label %for.cond97, !dbg !6743

for.cond97:                                       ; preds = %for.inc102, %for.end93
  %87 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6744
  %88 = load %union.df_ref_d*, %union.df_ref_d** %87, align 8, !dbg !6746
  %tobool98 = icmp ne %union.df_ref_d* %88, null, !dbg !6747
  br i1 %tobool98, label %for.body99, label %for.end104, !dbg !6747

for.body99:                                       ; preds = %for.cond97
  %89 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6748
  %90 = load %union.df_ref_d*, %union.df_ref_d** %89, align 8, !dbg !6748
  %base100 = bitcast %union.df_ref_d* %90 to %struct.df_base_ref*, !dbg !6748
  %chain101 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base100, i32 0, i32 2, !dbg !6748
  store %struct.df_link* null, %struct.df_link** %chain101, align 8, !dbg !6749
  br label %for.inc102, !dbg !6748

for.inc102:                                       ; preds = %for.body99
  %91 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !6750
  %incdec.ptr103 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %91, i32 1, !dbg !6750
  store %union.df_ref_d** %incdec.ptr103, %union.df_ref_d*** %use_rec, align 8, !dbg !6750
  br label %for.cond97, !dbg !6751, !llvm.loop !6752

for.end104:                                       ; preds = %for.cond97
  br label %if.end105, !dbg !6754

if.end105:                                        ; preds = %for.end104, %if.end76
  br label %if.end106, !dbg !6755

if.end106:                                        ; preds = %if.end105, %lor.lhs.false56
  br label %for.inc107, !dbg !6756

for.inc107:                                       ; preds = %if.end106
  %92 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6694
  %u108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !6694
  %fld109 = bitcast %union.u* %u108 to [1 x %union.rtunion_def]*, !dbg !6694
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i64 0, i64 2, !dbg !6694
  %rt_rtx111 = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**, !dbg !6694
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx111, align 8, !dbg !6694
  store %struct.rtx_def* %93, %struct.rtx_def** %insn, align 8, !dbg !6694
  br label %for.cond39, !dbg !6694, !llvm.loop !6757

for.end112:                                       ; preds = %land.end
  br label %for.inc113, !dbg !6759

for.inc113:                                       ; preds = %for.end112
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !6642
  br label %for.cond, !dbg !6642, !llvm.loop !6760

for.end114:                                       ; preds = %for.cond
  %94 = load %struct.df*, %struct.df** @df, align 8, !dbg !6762
  %problems_by_index115 = getelementptr inbounds %struct.df, %struct.df* %94, i32 0, i32 1, !dbg !6762
  %arrayidx116 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index115, i64 0, i64 4, !dbg !6762
  %95 = load %struct.dataflow*, %struct.dataflow** %arrayidx116, align 8, !dbg !6762
  %out_of_date_transfer_functions117 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %95, i32 0, i32 4, !dbg !6763
  %96 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions117, align 8, !dbg !6763
  call void @bitmap_clear(%struct.bitmap_head_def* %96), !dbg !6764
  %97 = load %struct.df*, %struct.df** @df, align 8, !dbg !6765
  %problems_by_index118 = getelementptr inbounds %struct.df, %struct.df* %97, i32 0, i32 1, !dbg !6765
  %arrayidx119 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index118, i64 0, i64 4, !dbg !6765
  %98 = load %struct.dataflow*, %struct.dataflow** %arrayidx119, align 8, !dbg !6765
  %block_pool120 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %98, i32 0, i32 3, !dbg !6766
  store %struct.alloc_pool_def* null, %struct.alloc_pool_def** %block_pool120, align 8, !dbg !6767
  ret void, !dbg !6768
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_chain_create_bb(i32 %bb_index) #0 !dbg !6769 {
entry:
  %bb_index.addr = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %bb_info = alloca %struct.df_rd_bb_info*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %cpy = alloca %struct.bitmap_head_def*, align 8
  %uid = alloca i32, align 4
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !6770, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !6772, metadata !DIExpression()), !dbg !6773
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6774
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !6774
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !6774
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6774
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 2, !dbg !6774
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !6774
  %tobool = icmp ne %struct.VEC_basic_block_gc* %2, null, !dbg !6774
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6774

cond.true:                                        ; preds = %entry
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6774
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, !dbg !6774
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !6774
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !6774
  %x_basic_block_info3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i32 0, i32 2, !dbg !6774
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info3, align 8, !dbg !6774
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i32 0, i32 0, !dbg !6774
  br label %cond.end, !dbg !6774

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6774

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !6774
  %6 = load i32, i32* %bb_index.addr, align 4, !dbg !6774
  %call = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %6), !dbg !6774
  store %struct.basic_block_def* %call, %struct.basic_block_def** %bb, align 8, !dbg !6773
  call void @llvm.dbg.declare(metadata %struct.df_rd_bb_info** %bb_info, metadata !6775, metadata !DIExpression()), !dbg !6776
  %7 = load i32, i32* %bb_index.addr, align 4, !dbg !6777
  %call4 = call %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %7), !dbg !6778
  store %struct.df_rd_bb_info* %call4, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !6776
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !6779, metadata !DIExpression()), !dbg !6780
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %cpy, metadata !6781, metadata !DIExpression()), !dbg !6782
  %call5 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !6783
  store %struct.bitmap_head_def* %call5, %struct.bitmap_head_def** %cpy, align 8, !dbg !6782
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cpy, align 8, !dbg !6784
  %9 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %bb_info, align 8, !dbg !6785
  %in = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %9, i32 0, i32 3, !dbg !6786
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6786
  call void @bitmap_copy(%struct.bitmap_head_def* %8, %struct.bitmap_head_def* %10), !dbg !6787
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !6788
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %11, i32 0, i32 1, !dbg !6788
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !6788
  %12 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6788
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %12, i32 0, i32 4, !dbg !6789
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !6789
  %14 = load i32, i32* %bb_index.addr, align 4, !dbg !6790
  %call6 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %13, i32 %14), !dbg !6791
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6792
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cpy, align 8, !dbg !6793
  call void @df_rd_simulate_artificial_defs_at_top(%struct.basic_block_def* %15, %struct.bitmap_head_def* %16), !dbg !6794
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6795
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i32 0, i32 7, !dbg !6795
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6795
  %18 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6795
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %18, i32 0, i32 0, !dbg !6795
  %19 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6795
  store %struct.rtx_def* %19, %struct.rtx_def** %insn, align 8, !dbg !6795
  br label %for.cond, !dbg !6795

for.cond:                                         ; preds = %for.inc, %cond.end
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6797
  %tobool7 = icmp ne %struct.rtx_def* %20, null, !dbg !6797
  br i1 %tobool7, label %land.rhs, label %land.end, !dbg !6797

land.rhs:                                         ; preds = %for.cond
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6797
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6797
  %il8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i32 0, i32 7, !dbg !6797
  %rtl9 = bitcast %union.basic_block_il_dependent* %il8 to %struct.rtl_bb_info**, !dbg !6797
  %23 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !6797
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %23, i32 0, i32 1, !dbg !6797
  %24 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6797
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !6797
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6797
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !6797
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !6797
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6797
  %cmp = icmp ne %struct.rtx_def* %21, %25, !dbg !6797
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %26 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !6799
  br i1 %26, label %for.body, label %for.end, !dbg !6795

for.body:                                         ; preds = %land.end
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6800
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !6800
  %bf.load = load i32, i32* %28, align 8, !dbg !6800
  %bf.clear = and i32 %bf.load, 65535, !dbg !6800
  %cmp11 = icmp eq i32 %bf.clear, 8, !dbg !6800
  br i1 %cmp11, label %if.then, label %lor.lhs.false, !dbg !6800

lor.lhs.false:                                    ; preds = %for.body
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6800
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !6800
  %bf.load12 = load i32, i32* %30, align 8, !dbg !6800
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !6800
  %cmp14 = icmp eq i32 %bf.clear13, 7, !dbg !6800
  br i1 %cmp14, label %if.then, label %lor.lhs.false15, !dbg !6800

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6800
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !6800
  %bf.load16 = load i32, i32* %32, align 8, !dbg !6800
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !6800
  %cmp18 = icmp eq i32 %bf.clear17, 9, !dbg !6800
  br i1 %cmp18, label %if.then, label %lor.lhs.false19, !dbg !6800

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6800
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !6800
  %bf.load20 = load i32, i32* %34, align 8, !dbg !6800
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !6800
  %cmp22 = icmp eq i32 %bf.clear21, 10, !dbg !6800
  br i1 %cmp22, label %if.then, label %if.end33, !dbg !6802

if.then:                                          ; preds = %lor.lhs.false19, %lor.lhs.false15, %lor.lhs.false, %for.body
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !6803, metadata !DIExpression()), !dbg !6805
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6806
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !6806
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !6806
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 0, !dbg !6806
  %rt_int = bitcast %union.rtunion_def* %arrayidx25 to i32*, !dbg !6806
  %36 = load i32, i32* %rt_int, align 8, !dbg !6806
  store i32 %36, i32* %uid, align 4, !dbg !6805
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cpy, align 8, !dbg !6807
  %38 = load %struct.df*, %struct.df** @df, align 8, !dbg !6808
  %insns = getelementptr inbounds %struct.df, %struct.df* %38, i32 0, i32 10, !dbg !6808
  %39 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !6808
  %40 = load i32, i32* %uid, align 4, !dbg !6808
  %idxprom = zext i32 %40 to i64, !dbg !6808
  %arrayidx26 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %39, i64 %idxprom, !dbg !6808
  %41 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx26, align 8, !dbg !6808
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %41, i32 0, i32 2, !dbg !6808
  %42 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !6808
  call void @df_chain_create_bb_process_use(%struct.bitmap_head_def* %37, %union.df_ref_d** %42, i32 0), !dbg !6809
  %43 = load %struct.df*, %struct.df** @df, align 8, !dbg !6810
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %43, i32 0, i32 27, !dbg !6812
  %bf.load27 = load i8, i8* %changeable_flags, align 4, !dbg !6812
  %bf.cast = sext i8 %bf.load27 to i32, !dbg !6812
  %and = and i32 %bf.cast, 4, !dbg !6813
  %tobool28 = icmp ne i32 %and, 0, !dbg !6813
  br i1 %tobool28, label %if.then29, label %if.end, !dbg !6814

if.then29:                                        ; preds = %if.then
  %44 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cpy, align 8, !dbg !6815
  %45 = load %struct.df*, %struct.df** @df, align 8, !dbg !6816
  %insns30 = getelementptr inbounds %struct.df, %struct.df* %45, i32 0, i32 10, !dbg !6816
  %46 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns30, align 8, !dbg !6816
  %47 = load i32, i32* %uid, align 4, !dbg !6816
  %idxprom31 = zext i32 %47 to i64, !dbg !6816
  %arrayidx32 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %46, i64 %idxprom31, !dbg !6816
  %48 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx32, align 8, !dbg !6816
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %48, i32 0, i32 3, !dbg !6816
  %49 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !6816
  call void @df_chain_create_bb_process_use(%struct.bitmap_head_def* %44, %union.df_ref_d** %49, i32 0), !dbg !6817
  br label %if.end, !dbg !6817

if.end:                                           ; preds = %if.then29, %if.then
  %50 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6818
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6819
  %52 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cpy, align 8, !dbg !6820
  call void @df_rd_simulate_one_insn(%struct.basic_block_def* %50, %struct.rtx_def* %51, %struct.bitmap_head_def* %52), !dbg !6821
  br label %if.end33, !dbg !6822

if.end33:                                         ; preds = %if.end, %lor.lhs.false19
  br label %for.inc, !dbg !6800

for.inc:                                          ; preds = %if.end33
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6797
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !6797
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !6797
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 2, !dbg !6797
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !6797
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !6797
  store %struct.rtx_def* %54, %struct.rtx_def** %insn, align 8, !dbg !6797
  br label %for.cond, !dbg !6797, !llvm.loop !6823

for.end:                                          ; preds = %land.end
  %55 = load %struct.df*, %struct.df** @df, align 8, !dbg !6825
  %changeable_flags38 = getelementptr inbounds %struct.df, %struct.df* %55, i32 0, i32 27, !dbg !6827
  %bf.load39 = load i8, i8* %changeable_flags38, align 4, !dbg !6827
  %bf.cast40 = sext i8 %bf.load39 to i32, !dbg !6827
  %and41 = and i32 %bf.cast40, 2, !dbg !6828
  %tobool42 = icmp ne i32 %and41, 0, !dbg !6828
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !6829

if.then43:                                        ; preds = %for.end
  %56 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cpy, align 8, !dbg !6830
  %57 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6831
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %57, i32 0, i32 9, !dbg !6832
  %58 = load i32, i32* %index, align 8, !dbg !6832
  %call44 = call %union.df_ref_d** @df_get_artificial_uses(i32 %58), !dbg !6833
  call void @df_chain_create_bb_process_use(%struct.bitmap_head_def* %56, %union.df_ref_d** %call44, i32 0), !dbg !6834
  br label %if.end45, !dbg !6834

if.end45:                                         ; preds = %if.then43, %for.end
  %59 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %cpy, align 8, !dbg !6835
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %59), !dbg !6835
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %cpy, align 8, !dbg !6835
  ret void, !dbg !6836
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_chain_create_bb_process_use(%struct.bitmap_head_def* %local_rd, %union.df_ref_d** %use_rec, i32 %top_flag) #0 !dbg !6837 {
entry:
  %local_rd.addr = alloca %struct.bitmap_head_def*, align 8
  %use_rec.addr = alloca %union.df_ref_d**, align 8
  %top_flag.addr = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %def_index = alloca i32, align 4
  %use = alloca %union.df_ref_d*, align 8
  %uregno = alloca i32, align 4
  %count = alloca i32, align 4
  %first_index = alloca i32, align 4
  %last_index = alloca i32, align 4
  %def = alloca %union.df_ref_d*, align 8
  store %struct.bitmap_head_def* %local_rd, %struct.bitmap_head_def** %local_rd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %local_rd.addr, metadata !6840, metadata !DIExpression()), !dbg !6841
  store %union.df_ref_d** %use_rec, %union.df_ref_d*** %use_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %use_rec.addr, metadata !6842, metadata !DIExpression()), !dbg !6843
  store i32 %top_flag, i32* %top_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %top_flag.addr, metadata !6844, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !6846, metadata !DIExpression()), !dbg !6847
  call void @llvm.dbg.declare(metadata i32* %def_index, metadata !6848, metadata !DIExpression()), !dbg !6849
  br label %while.cond, !dbg !6850

while.cond:                                       ; preds = %if.end35, %entry
  %0 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec.addr, align 8, !dbg !6851
  %1 = load %union.df_ref_d*, %union.df_ref_d** %0, align 8, !dbg !6852
  %tobool = icmp ne %union.df_ref_d* %1, null, !dbg !6850
  br i1 %tobool, label %while.body, label %while.end, !dbg !6850

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use, metadata !6853, metadata !DIExpression()), !dbg !6855
  %2 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec.addr, align 8, !dbg !6856
  %3 = load %union.df_ref_d*, %union.df_ref_d** %2, align 8, !dbg !6857
  store %union.df_ref_d* %3, %union.df_ref_d** %use, align 8, !dbg !6855
  call void @llvm.dbg.declare(metadata i32* %uregno, metadata !6858, metadata !DIExpression()), !dbg !6859
  %4 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !6860
  %base = bitcast %union.df_ref_d* %4 to %struct.df_base_ref*, !dbg !6860
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 6, !dbg !6860
  %5 = load i32, i32* %regno, align 8, !dbg !6860
  store i32 %5, i32* %uregno, align 4, !dbg !6859
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !6861
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 27, !dbg !6863
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !6863
  %bf.cast = sext i8 %bf.load to i32, !dbg !6863
  %and = and i32 %bf.cast, 2, !dbg !6864
  %tobool1 = icmp ne i32 %and, 0, !dbg !6864
  br i1 %tobool1, label %lor.lhs.false, label %if.then, !dbg !6865

lor.lhs.false:                                    ; preds = %while.body
  %7 = load i32, i32* %uregno, align 4, !dbg !6866
  %cmp = icmp uge i32 %7, 53, !dbg !6867
  br i1 %cmp, label %if.then, label %if.end35, !dbg !6868

if.then:                                          ; preds = %lor.lhs.false, %while.body
  call void @llvm.dbg.declare(metadata i32* %count, metadata !6869, metadata !DIExpression()), !dbg !6871
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !6872
  %def_info = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 3, !dbg !6872
  %count2 = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info, i32 0, i32 2, !dbg !6872
  %9 = load i32*, i32** %count2, align 8, !dbg !6872
  %10 = load i32, i32* %uregno, align 4, !dbg !6872
  %idxprom = zext i32 %10 to i64, !dbg !6872
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !6872
  %11 = load i32, i32* %arrayidx, align 4, !dbg !6872
  store i32 %11, i32* %count, align 4, !dbg !6871
  %12 = load i32, i32* %count, align 4, !dbg !6873
  %tobool3 = icmp ne i32 %12, 0, !dbg !6873
  br i1 %tobool3, label %if.then4, label %if.end34, !dbg !6875

if.then4:                                         ; preds = %if.then
  %13 = load i32, i32* %top_flag.addr, align 4, !dbg !6876
  %14 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !6879
  %base5 = bitcast %union.df_ref_d* %14 to %struct.df_base_ref*, !dbg !6879
  %15 = bitcast %struct.df_base_ref* %base5 to i32*, !dbg !6879
  %bf.load6 = load i32, i32* %15, align 8, !dbg !6879
  %bf.ashr = ashr i32 %bf.load6, 16, !dbg !6879
  %and7 = and i32 %bf.ashr, 2, !dbg !6880
  %cmp8 = icmp eq i32 %13, %and7, !dbg !6881
  br i1 %cmp8, label %if.then9, label %if.end33, !dbg !6882

if.then9:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata i32* %first_index, metadata !6883, metadata !DIExpression()), !dbg !6885
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !6886
  %def_info10 = getelementptr inbounds %struct.df, %struct.df* %16, i32 0, i32 3, !dbg !6886
  %begin = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info10, i32 0, i32 1, !dbg !6886
  %17 = load i32*, i32** %begin, align 8, !dbg !6886
  %18 = load i32, i32* %uregno, align 4, !dbg !6886
  %idxprom11 = zext i32 %18 to i64, !dbg !6886
  %arrayidx12 = getelementptr inbounds i32, i32* %17, i64 %idxprom11, !dbg !6886
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !6886
  store i32 %19, i32* %first_index, align 4, !dbg !6885
  call void @llvm.dbg.declare(metadata i32* %last_index, metadata !6887, metadata !DIExpression()), !dbg !6888
  %20 = load i32, i32* %first_index, align 4, !dbg !6889
  %21 = load i32, i32* %count, align 4, !dbg !6890
  %add = add i32 %20, %21, !dbg !6891
  %sub = sub i32 %add, 1, !dbg !6892
  store i32 %sub, i32* %last_index, align 4, !dbg !6888
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %local_rd.addr, align 8, !dbg !6893
  %23 = load i32, i32* %first_index, align 4, !dbg !6893
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %22, i32 %23, i32* %def_index), !dbg !6893
  br label %for.cond, !dbg !6893

for.cond:                                         ; preds = %for.inc, %if.then9
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %def_index), !dbg !6895
  %tobool13 = icmp ne i8 %call, 0, !dbg !6893
  br i1 %tobool13, label %for.body, label %for.end, !dbg !6893

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !6897, metadata !DIExpression()), !dbg !6899
  %24 = load i32, i32* %def_index, align 4, !dbg !6900
  %25 = load i32, i32* %last_index, align 4, !dbg !6902
  %cmp14 = icmp ugt i32 %24, %25, !dbg !6903
  br i1 %cmp14, label %if.then15, label %if.end, !dbg !6904

if.then15:                                        ; preds = %for.body
  br label %for.end, !dbg !6905

if.end:                                           ; preds = %for.body
  %26 = load %struct.df*, %struct.df** @df, align 8, !dbg !6906
  %def_info16 = getelementptr inbounds %struct.df, %struct.df* %26, i32 0, i32 3, !dbg !6906
  %refs = getelementptr inbounds %struct.df_ref_info, %struct.df_ref_info* %def_info16, i32 0, i32 0, !dbg !6906
  %27 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !6906
  %28 = load i32, i32* %def_index, align 4, !dbg !6906
  %idxprom17 = zext i32 %28 to i64, !dbg !6906
  %arrayidx18 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %27, i64 %idxprom17, !dbg !6906
  %29 = load %union.df_ref_d*, %union.df_ref_d** %arrayidx18, align 8, !dbg !6906
  store %union.df_ref_d* %29, %union.df_ref_d** %def, align 8, !dbg !6907
  %30 = load %struct.df*, %struct.df** @df, align 8, !dbg !6908
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %30, i32 0, i32 1, !dbg !6908
  %arrayidx19 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 4, !dbg !6908
  %31 = load %struct.dataflow*, %struct.dataflow** %arrayidx19, align 8, !dbg !6908
  %local_flags = getelementptr inbounds %struct.dataflow, %struct.dataflow* %31, i32 0, i32 6, !dbg !6908
  %32 = load i32, i32* %local_flags, align 8, !dbg !6908
  %and20 = and i32 %32, 1, !dbg !6908
  %tobool21 = icmp ne i32 %and20, 0, !dbg !6908
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !6910

if.then22:                                        ; preds = %if.end
  %33 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !6911
  %34 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !6912
  %call23 = call %struct.df_link* @df_chain_create(%union.df_ref_d* %33, %union.df_ref_d* %34), !dbg !6913
  br label %if.end24, !dbg !6913

if.end24:                                         ; preds = %if.then22, %if.end
  %35 = load %struct.df*, %struct.df** @df, align 8, !dbg !6914
  %problems_by_index25 = getelementptr inbounds %struct.df, %struct.df* %35, i32 0, i32 1, !dbg !6914
  %arrayidx26 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index25, i64 0, i64 4, !dbg !6914
  %36 = load %struct.dataflow*, %struct.dataflow** %arrayidx26, align 8, !dbg !6914
  %local_flags27 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %36, i32 0, i32 6, !dbg !6914
  %37 = load i32, i32* %local_flags27, align 8, !dbg !6914
  %and28 = and i32 %37, 2, !dbg !6914
  %tobool29 = icmp ne i32 %and28, 0, !dbg !6914
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !6916

if.then30:                                        ; preds = %if.end24
  %38 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !6917
  %39 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !6918
  %call31 = call %struct.df_link* @df_chain_create(%union.df_ref_d* %38, %union.df_ref_d* %39), !dbg !6919
  br label %if.end32, !dbg !6919

if.end32:                                         ; preds = %if.then30, %if.end24
  br label %for.inc, !dbg !6920

for.inc:                                          ; preds = %if.end32
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %def_index), !dbg !6895
  br label %for.cond, !dbg !6895, !llvm.loop !6921

for.end:                                          ; preds = %if.then15, %for.cond
  br label %if.end33, !dbg !6923

if.end33:                                         ; preds = %for.end, %if.then4
  br label %if.end34, !dbg !6924

if.end34:                                         ; preds = %if.end33, %if.then
  br label %if.end35, !dbg !6925

if.end35:                                         ; preds = %if.end34, %lor.lhs.false
  %40 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec.addr, align 8, !dbg !6926
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %40, i32 1, !dbg !6926
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %use_rec.addr, align 8, !dbg !6926
  br label %while.cond, !dbg !6850, !llvm.loop !6927

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6929
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_alloc(%struct.bitmap_head_def* %all_blocks) #0 !dbg !6930 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %regno = alloca i32, align 4
  %index = alloca i32, align 4
  %max_reg = alloca i32, align 4
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %insn_info = alloca %struct.df_insn_info*, align 8
  %len = alloca i32, align 4
  %bb_info = alloca %struct.df_byte_lr_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !6931, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !6933, metadata !DIExpression()), !dbg !6934
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !6935, metadata !DIExpression()), !dbg !6936
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !6937, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !6939, metadata !DIExpression()), !dbg !6940
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6941, metadata !DIExpression()), !dbg !6942
  store i32 0, i32* %index, align 4, !dbg !6942
  call void @llvm.dbg.declare(metadata i32* %max_reg, metadata !6943, metadata !DIExpression()), !dbg !6944
  %call = call i32 @max_reg_num(), !dbg !6945
  store i32 %call, i32* %max_reg, align 4, !dbg !6944
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !6946, metadata !DIExpression()), !dbg !6947
  %call1 = call i8* @xmalloc(i64 144), !dbg !6948
  %0 = bitcast i8* %call1 to %struct.df_byte_lr_problem_data*, !dbg !6948
  store %struct.df_byte_lr_problem_data* %0, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !6947
  %1 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !6949
  %2 = bitcast %struct.df_byte_lr_problem_data* %1 to i8*, !dbg !6949
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !6950
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !6950
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !6950
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6950
  %problem_data2 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 5, !dbg !6951
  store i8* %2, i8** %problem_data2, align 8, !dbg !6952
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !6953
  %problems_by_index3 = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 1, !dbg !6953
  %arrayidx4 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index3, i64 0, i64 5, !dbg !6953
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx4, align 8, !dbg !6953
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i32 0, i32 3, !dbg !6955
  %7 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !6955
  %tobool = icmp ne %struct.alloc_pool_def* %7, null, !dbg !6953
  br i1 %tobool, label %if.end, label %if.then, !dbg !6956

if.then:                                          ; preds = %entry
  %call5 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i64 0, i64 0), i64 32, i64 50), !dbg !6957
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !6958
  %problems_by_index6 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 1, !dbg !6958
  %arrayidx7 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index6, i64 0, i64 5, !dbg !6958
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !6958
  %block_pool8 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %9, i32 0, i32 3, !dbg !6959
  store %struct.alloc_pool_def* %call5, %struct.alloc_pool_def** %block_pool8, align 8, !dbg !6960
  br label %if.end, !dbg !6958

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !6961
  %problems_by_index9 = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 1, !dbg !6961
  %arrayidx10 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index9, i64 0, i64 5, !dbg !6961
  %11 = load %struct.dataflow*, %struct.dataflow** %arrayidx10, align 8, !dbg !6961
  call void @df_grow_bb_info(%struct.dataflow* %11), !dbg !6962
  %12 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !6963
  %byte_lr_bitmaps = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %12, i32 0, i32 5, !dbg !6964
  call void @bitmap_obstack_initialize(%struct.bitmap_obstack* %byte_lr_bitmaps), !dbg !6965
  %13 = load i32, i32* %max_reg, align 4, !dbg !6966
  %conv = zext i32 %13 to i64, !dbg !6966
  %mul = mul i64 4, %conv, !dbg !6966
  %call11 = call i8* @xmalloc(i64 %mul), !dbg !6966
  %14 = bitcast i8* %call11 to i32*, !dbg !6966
  %15 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !6967
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %15, i32 0, i32 3, !dbg !6968
  store i32* %14, i32** %regno_start, align 8, !dbg !6969
  %16 = load i32, i32* %max_reg, align 4, !dbg !6970
  %conv12 = zext i32 %16 to i64, !dbg !6970
  %mul13 = mul i64 4, %conv12, !dbg !6970
  %call14 = call i8* @xmalloc(i64 %mul13), !dbg !6970
  %17 = bitcast i8* %call14 to i32*, !dbg !6970
  %18 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !6971
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %18, i32 0, i32 4, !dbg !6972
  store i32* %17, i32** %regno_len, align 8, !dbg !6973
  %19 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !6974
  %byte_lr_bitmaps15 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %19, i32 0, i32 5, !dbg !6974
  %call16 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %byte_lr_bitmaps15), !dbg !6974
  %20 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !6975
  %hardware_regs_used = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %20, i32 0, i32 1, !dbg !6976
  store %struct.bitmap_head_def* %call16, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !6977
  %21 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !6978
  %byte_lr_bitmaps17 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %21, i32 0, i32 5, !dbg !6978
  %call18 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %byte_lr_bitmaps17), !dbg !6978
  %22 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !6979
  %invalidated_by_call = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %22, i32 0, i32 0, !dbg !6980
  store %struct.bitmap_head_def* %call18, %struct.bitmap_head_def** %invalidated_by_call, align 8, !dbg !6981
  %23 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !6982
  %byte_lr_bitmaps19 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %23, i32 0, i32 5, !dbg !6982
  %call20 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %byte_lr_bitmaps19), !dbg !6982
  %24 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !6983
  %needs_expansion = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %24, i32 0, i32 2, !dbg !6984
  store %struct.bitmap_head_def* %call20, %struct.bitmap_head_def** %needs_expansion, align 8, !dbg !6985
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6986
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, !dbg !6986
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !6986
  %26 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6986
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %26, i32 0, i32 0, !dbg !6986
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6986
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i32 0, i32 6, !dbg !6986
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !6986
  store %struct.basic_block_def* %28, %struct.basic_block_def** %bb, align 8, !dbg !6986
  br label %for.cond, !dbg !6986

for.cond:                                         ; preds = %for.inc62, %if.end
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6988
  %30 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6988
  %add.ptr21 = getelementptr inbounds %struct.function, %struct.function* %30, i64 0, !dbg !6988
  %cfg22 = getelementptr inbounds %struct.function, %struct.function* %add.ptr21, i32 0, i32 1, !dbg !6988
  %31 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg22, align 8, !dbg !6988
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %31, i32 0, i32 1, !dbg !6988
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6988
  %cmp = icmp ne %struct.basic_block_def* %29, %32, !dbg !6988
  br i1 %cmp, label %for.body, label %for.end64, !dbg !6986

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !6990, metadata !DIExpression()), !dbg !6992
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6993
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %33, i32 0, i32 7, !dbg !6993
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6993
  %34 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6993
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %34, i32 0, i32 0, !dbg !6993
  %35 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6993
  store %struct.rtx_def* %35, %struct.rtx_def** %insn, align 8, !dbg !6993
  br label %for.cond24, !dbg !6993

for.cond24:                                       ; preds = %for.inc, %for.body
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6995
  %tobool25 = icmp ne %struct.rtx_def* %36, null, !dbg !6995
  br i1 %tobool25, label %land.rhs, label %land.end, !dbg !6995

land.rhs:                                         ; preds = %for.cond24
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6995
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6995
  %il26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %38, i32 0, i32 7, !dbg !6995
  %rtl27 = bitcast %union.basic_block_il_dependent* %il26 to %struct.rtl_bb_info**, !dbg !6995
  %39 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl27, align 8, !dbg !6995
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %39, i32 0, i32 1, !dbg !6995
  %40 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6995
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !6995
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6995
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !6995
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !6995
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6995
  %cmp29 = icmp ne %struct.rtx_def* %37, %41, !dbg !6995
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond24
  %42 = phi i1 [ false, %for.cond24 ], [ %cmp29, %land.rhs ], !dbg !6997
  br i1 %42, label %for.body31, label %for.end, !dbg !6993

for.body31:                                       ; preds = %land.end
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6998
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !6998
  %bf.load = load i32, i32* %44, align 8, !dbg !6998
  %bf.clear = and i32 %bf.load, 65535, !dbg !6998
  %cmp32 = icmp eq i32 %bf.clear, 8, !dbg !6998
  br i1 %cmp32, label %if.then48, label %lor.lhs.false, !dbg !6998

lor.lhs.false:                                    ; preds = %for.body31
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6998
  %46 = bitcast %struct.rtx_def* %45 to i32*, !dbg !6998
  %bf.load34 = load i32, i32* %46, align 8, !dbg !6998
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !6998
  %cmp36 = icmp eq i32 %bf.clear35, 7, !dbg !6998
  br i1 %cmp36, label %if.then48, label %lor.lhs.false38, !dbg !6998

lor.lhs.false38:                                  ; preds = %lor.lhs.false
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6998
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !6998
  %bf.load39 = load i32, i32* %48, align 8, !dbg !6998
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !6998
  %cmp41 = icmp eq i32 %bf.clear40, 9, !dbg !6998
  br i1 %cmp41, label %if.then48, label %lor.lhs.false43, !dbg !6998

lor.lhs.false43:                                  ; preds = %lor.lhs.false38
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6998
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !6998
  %bf.load44 = load i32, i32* %50, align 8, !dbg !6998
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !6998
  %cmp46 = icmp eq i32 %bf.clear45, 10, !dbg !6998
  br i1 %cmp46, label %if.then48, label %if.end53, !dbg !7001

if.then48:                                        ; preds = %lor.lhs.false43, %lor.lhs.false38, %lor.lhs.false, %for.body31
  call void @llvm.dbg.declare(metadata %struct.df_insn_info** %insn_info, metadata !7002, metadata !DIExpression()), !dbg !7004
  %51 = load %struct.df*, %struct.df** @df, align 8, !dbg !7005
  %insns = getelementptr inbounds %struct.df, %struct.df* %51, i32 0, i32 10, !dbg !7005
  %52 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !7005
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7005
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !7005
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !7005
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 0, !dbg !7005
  %rt_int = bitcast %union.rtunion_def* %arrayidx51 to i32*, !dbg !7005
  %54 = load i32, i32* %rt_int, align 8, !dbg !7005
  %idxprom = sext i32 %54 to i64, !dbg !7005
  %arrayidx52 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %52, i64 %idxprom, !dbg !7005
  %55 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx52, align 8, !dbg !7005
  store %struct.df_insn_info* %55, %struct.df_insn_info** %insn_info, align 8, !dbg !7004
  %56 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !7006
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %56, i32 0, i32 1, !dbg !7006
  %57 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !7006
  call void @df_byte_lr_check_regs(%union.df_ref_d** %57), !dbg !7007
  %58 = load %struct.df_insn_info*, %struct.df_insn_info** %insn_info, align 8, !dbg !7008
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %58, i32 0, i32 2, !dbg !7008
  %59 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !7008
  call void @df_byte_lr_check_regs(%union.df_ref_d** %59), !dbg !7009
  br label %if.end53, !dbg !7010

if.end53:                                         ; preds = %if.then48, %lor.lhs.false43
  br label %for.inc, !dbg !7011

for.inc:                                          ; preds = %if.end53
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6995
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1, !dbg !6995
  %fld55 = bitcast %union.u* %u54 to [1 x %union.rtunion_def]*, !dbg !6995
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i64 0, i64 2, !dbg !6995
  %rt_rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**, !dbg !6995
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx57, align 8, !dbg !6995
  store %struct.rtx_def* %61, %struct.rtx_def** %insn, align 8, !dbg !6995
  br label %for.cond24, !dbg !6995, !llvm.loop !7012

for.end:                                          ; preds = %land.end
  %62 = load %struct.df*, %struct.df** @df, align 8, !dbg !7014
  %problems_by_index58 = getelementptr inbounds %struct.df, %struct.df* %62, i32 0, i32 1, !dbg !7014
  %arrayidx59 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index58, i64 0, i64 5, !dbg !7014
  %63 = load %struct.dataflow*, %struct.dataflow** %arrayidx59, align 8, !dbg !7014
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %63, i32 0, i32 4, !dbg !7015
  %64 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !7015
  %65 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7016
  %index60 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %65, i32 0, i32 9, !dbg !7017
  %66 = load i32, i32* %index60, align 8, !dbg !7017
  %call61 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %64, i32 %66), !dbg !7018
  br label %for.inc62, !dbg !7019

for.inc62:                                        ; preds = %for.end
  %67 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6988
  %next_bb63 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %67, i32 0, i32 6, !dbg !6988
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb63, align 8, !dbg !6988
  store %struct.basic_block_def* %68, %struct.basic_block_def** %bb, align 8, !dbg !6988
  br label %for.cond, !dbg !6988, !llvm.loop !7020

for.end64:                                        ; preds = %for.cond
  %69 = load %struct.df*, %struct.df** @df, align 8, !dbg !7022
  %problems_by_index65 = getelementptr inbounds %struct.df, %struct.df* %69, i32 0, i32 1, !dbg !7022
  %arrayidx66 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index65, i64 0, i64 5, !dbg !7022
  %70 = load %struct.dataflow*, %struct.dataflow** %arrayidx66, align 8, !dbg !7022
  %out_of_date_transfer_functions67 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %70, i32 0, i32 4, !dbg !7023
  %71 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions67, align 8, !dbg !7023
  %call68 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %71, i32 0), !dbg !7024
  %72 = load %struct.df*, %struct.df** @df, align 8, !dbg !7025
  %problems_by_index69 = getelementptr inbounds %struct.df, %struct.df* %72, i32 0, i32 1, !dbg !7025
  %arrayidx70 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index69, i64 0, i64 5, !dbg !7025
  %73 = load %struct.dataflow*, %struct.dataflow** %arrayidx70, align 8, !dbg !7025
  %out_of_date_transfer_functions71 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %73, i32 0, i32 4, !dbg !7026
  %74 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions71, align 8, !dbg !7026
  %call72 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %74, i32 1), !dbg !7027
  store i32 0, i32* %regno, align 4, !dbg !7028
  br label %for.cond73, !dbg !7030

for.cond73:                                       ; preds = %for.inc96, %for.end64
  %75 = load i32, i32* %regno, align 4, !dbg !7031
  %76 = load i32, i32* %max_reg, align 4, !dbg !7033
  %cmp74 = icmp ult i32 %75, %76, !dbg !7034
  br i1 %cmp74, label %for.body76, label %for.end97, !dbg !7035

for.body76:                                       ; preds = %for.cond73
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7036, metadata !DIExpression()), !dbg !7038
  %77 = load i32, i32* %index, align 4, !dbg !7039
  %78 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7040
  %regno_start77 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %78, i32 0, i32 3, !dbg !7041
  %79 = load i32*, i32** %regno_start77, align 8, !dbg !7041
  %80 = load i32, i32* %regno, align 4, !dbg !7042
  %idxprom78 = zext i32 %80 to i64, !dbg !7040
  %arrayidx79 = getelementptr inbounds i32, i32* %79, i64 %idxprom78, !dbg !7040
  store i32 %77, i32* %arrayidx79, align 4, !dbg !7043
  %81 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7044
  %needs_expansion80 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %81, i32 0, i32 2, !dbg !7046
  %82 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %needs_expansion80, align 8, !dbg !7046
  %83 = load i32, i32* %regno, align 4, !dbg !7047
  %call81 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %82, i32 %83), !dbg !7048
  %tobool82 = icmp ne i32 %call81, 0, !dbg !7048
  br i1 %tobool82, label %if.then83, label %if.else, !dbg !7049

if.then83:                                        ; preds = %for.body76
  %84 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !7050
  %85 = load i32, i32* %regno, align 4, !dbg !7050
  %idxprom84 = zext i32 %85 to i64, !dbg !7050
  %arrayidx85 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %84, i64 %idxprom84, !dbg !7050
  %86 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx85, align 8, !dbg !7050
  %87 = bitcast %struct.rtx_def* %86 to i32*, !dbg !7050
  %bf.load86 = load i32, i32* %87, align 8, !dbg !7050
  %bf.lshr = lshr i32 %bf.load86, 16, !dbg !7050
  %bf.clear87 = and i32 %bf.lshr, 255, !dbg !7050
  %idxprom88 = zext i32 %bf.clear87 to i64, !dbg !7050
  %arrayidx89 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom88, !dbg !7050
  %88 = load i8, i8* %arrayidx89, align 1, !dbg !7050
  %conv90 = zext i8 %88 to i16, !dbg !7050
  %conv91 = zext i16 %conv90 to i32, !dbg !7050
  store i32 %conv91, i32* %len, align 4, !dbg !7051
  br label %if.end92, !dbg !7052

if.else:                                          ; preds = %for.body76
  store i32 1, i32* %len, align 4, !dbg !7053
  br label %if.end92

if.end92:                                         ; preds = %if.else, %if.then83
  %89 = load i32, i32* %len, align 4, !dbg !7054
  %90 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7055
  %regno_len93 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %90, i32 0, i32 4, !dbg !7056
  %91 = load i32*, i32** %regno_len93, align 8, !dbg !7056
  %92 = load i32, i32* %regno, align 4, !dbg !7057
  %idxprom94 = zext i32 %92 to i64, !dbg !7055
  %arrayidx95 = getelementptr inbounds i32, i32* %91, i64 %idxprom94, !dbg !7055
  store i32 %89, i32* %arrayidx95, align 4, !dbg !7058
  %93 = load i32, i32* %len, align 4, !dbg !7059
  %94 = load i32, i32* %index, align 4, !dbg !7060
  %add = add i32 %94, %93, !dbg !7060
  store i32 %add, i32* %index, align 4, !dbg !7060
  br label %for.inc96, !dbg !7061

for.inc96:                                        ; preds = %if.end92
  %95 = load i32, i32* %regno, align 4, !dbg !7062
  %inc = add i32 %95, 1, !dbg !7062
  store i32 %inc, i32* %regno, align 4, !dbg !7062
  br label %for.cond73, !dbg !7063, !llvm.loop !7064

for.end97:                                        ; preds = %for.cond73
  %96 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7066
  %hardware_regs_used98 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %96, i32 0, i32 1, !dbg !7067
  %97 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used98, align 8, !dbg !7067
  %98 = load %struct.df*, %struct.df** @df, align 8, !dbg !7068
  %hardware_regs_used99 = getelementptr inbounds %struct.df, %struct.df* %98, i32 0, i32 13, !dbg !7069
  %99 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used99, align 8, !dbg !7069
  call void @df_byte_lr_expand_bitmap(%struct.bitmap_head_def* %97, %struct.bitmap_head_def* %99), !dbg !7070
  %100 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7071
  %invalidated_by_call100 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %100, i32 0, i32 0, !dbg !7072
  %101 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %invalidated_by_call100, align 8, !dbg !7072
  %102 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @regs_invalidated_by_call_regset, align 8, !dbg !7073
  call void @df_byte_lr_expand_bitmap(%struct.bitmap_head_def* %101, %struct.bitmap_head_def* %102), !dbg !7074
  %103 = load %struct.df*, %struct.df** @df, align 8, !dbg !7075
  %problems_by_index101 = getelementptr inbounds %struct.df, %struct.df* %103, i32 0, i32 1, !dbg !7075
  %arrayidx102 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index101, i64 0, i64 5, !dbg !7075
  %104 = load %struct.dataflow*, %struct.dataflow** %arrayidx102, align 8, !dbg !7075
  %out_of_date_transfer_functions103 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %104, i32 0, i32 4, !dbg !7075
  %105 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions103, align 8, !dbg !7075
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %105, i32 0, i32* %bb_index), !dbg !7075
  br label %for.cond104, !dbg !7075

for.cond104:                                      ; preds = %for.inc127, %for.end97
  %call105 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !7077
  %tobool106 = icmp ne i8 %call105, 0, !dbg !7075
  br i1 %tobool106, label %for.body107, label %for.end128, !dbg !7075

for.body107:                                      ; preds = %for.cond104
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_bb_info** %bb_info, metadata !7079, metadata !DIExpression()), !dbg !7081
  %106 = load i32, i32* %bb_index, align 4, !dbg !7082
  %call108 = call %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %106), !dbg !7083
  store %struct.df_byte_lr_bb_info* %call108, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7081
  %107 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7084
  %tobool109 = icmp ne %struct.df_byte_lr_bb_info* %107, null, !dbg !7084
  br i1 %tobool109, label %if.then110, label %if.else111, !dbg !7086

if.then110:                                       ; preds = %for.body107
  %108 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7087
  %def = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %108, i32 0, i32 0, !dbg !7089
  %109 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !7089
  call void @bitmap_clear(%struct.bitmap_head_def* %109), !dbg !7090
  %110 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7091
  %use = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %110, i32 0, i32 1, !dbg !7092
  %111 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !7092
  call void @bitmap_clear(%struct.bitmap_head_def* %111), !dbg !7093
  br label %if.end126, !dbg !7094

if.else111:                                       ; preds = %for.body107
  %112 = load %struct.df*, %struct.df** @df, align 8, !dbg !7095
  %problems_by_index112 = getelementptr inbounds %struct.df, %struct.df* %112, i32 0, i32 1, !dbg !7095
  %arrayidx113 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index112, i64 0, i64 5, !dbg !7095
  %113 = load %struct.dataflow*, %struct.dataflow** %arrayidx113, align 8, !dbg !7095
  %block_pool114 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %113, i32 0, i32 3, !dbg !7097
  %114 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool114, align 8, !dbg !7097
  %call115 = call i8* @pool_alloc(%struct.alloc_pool_def* %114), !dbg !7098
  %115 = bitcast i8* %call115 to %struct.df_byte_lr_bb_info*, !dbg !7099
  store %struct.df_byte_lr_bb_info* %115, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7100
  %116 = load i32, i32* %bb_index, align 4, !dbg !7101
  %117 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7102
  call void @df_byte_lr_set_bb_info(i32 %116, %struct.df_byte_lr_bb_info* %117), !dbg !7103
  %118 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7104
  %byte_lr_bitmaps116 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %118, i32 0, i32 5, !dbg !7104
  %call117 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %byte_lr_bitmaps116), !dbg !7104
  %119 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7105
  %use118 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %119, i32 0, i32 1, !dbg !7106
  store %struct.bitmap_head_def* %call117, %struct.bitmap_head_def** %use118, align 8, !dbg !7107
  %120 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7108
  %byte_lr_bitmaps119 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %120, i32 0, i32 5, !dbg !7108
  %call120 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %byte_lr_bitmaps119), !dbg !7108
  %121 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7109
  %def121 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %121, i32 0, i32 0, !dbg !7110
  store %struct.bitmap_head_def* %call120, %struct.bitmap_head_def** %def121, align 8, !dbg !7111
  %122 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7112
  %byte_lr_bitmaps122 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %122, i32 0, i32 5, !dbg !7112
  %call123 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %byte_lr_bitmaps122), !dbg !7112
  %123 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7113
  %in = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %123, i32 0, i32 2, !dbg !7114
  store %struct.bitmap_head_def* %call123, %struct.bitmap_head_def** %in, align 8, !dbg !7115
  %124 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7116
  %byte_lr_bitmaps124 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %124, i32 0, i32 5, !dbg !7116
  %call125 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* %byte_lr_bitmaps124), !dbg !7116
  %125 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7117
  %out = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %125, i32 0, i32 3, !dbg !7118
  store %struct.bitmap_head_def* %call125, %struct.bitmap_head_def** %out, align 8, !dbg !7119
  br label %if.end126

if.end126:                                        ; preds = %if.else111, %if.then110
  br label %for.inc127, !dbg !7120

for.inc127:                                       ; preds = %if.end126
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !7077
  br label %for.cond104, !dbg !7077, !llvm.loop !7121

for.end128:                                       ; preds = %for.cond104
  %126 = load %struct.df*, %struct.df** @df, align 8, !dbg !7123
  %problems_by_index129 = getelementptr inbounds %struct.df, %struct.df* %126, i32 0, i32 1, !dbg !7123
  %arrayidx130 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index129, i64 0, i64 5, !dbg !7123
  %127 = load %struct.dataflow*, %struct.dataflow** %arrayidx130, align 8, !dbg !7123
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %127, i32 0, i32 9, !dbg !7124
  store i8 1, i8* %optional_p, align 2, !dbg !7125
  ret void, !dbg !7126
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_reset(%struct.bitmap_head_def* %all_blocks) #0 !dbg !7127 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_byte_lr_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !7128, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !7130, metadata !DIExpression()), !dbg !7131
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !7132, metadata !DIExpression()), !dbg !7133
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !7134
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %bb_index), !dbg !7134
  br label %for.cond, !dbg !7134

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !7136
  %tobool = icmp ne i8 %call, 0, !dbg !7134
  br i1 %tobool, label %for.body, label %for.end, !dbg !7134

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_bb_info** %bb_info, metadata !7138, metadata !DIExpression()), !dbg !7140
  %1 = load i32, i32* %bb_index, align 4, !dbg !7141
  %call1 = call %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %1), !dbg !7142
  store %struct.df_byte_lr_bb_info* %call1, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7140
  %2 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7143
  %tobool2 = icmp ne %struct.df_byte_lr_bb_info* %2, null, !dbg !7143
  br i1 %tobool2, label %cond.false, label %cond.true, !dbg !7143

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 2589, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7143
  br label %cond.end, !dbg !7143

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !7143

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7143
  %3 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7144
  %in = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %3, i32 0, i32 2, !dbg !7145
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7145
  call void @bitmap_clear(%struct.bitmap_head_def* %4), !dbg !7146
  %5 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7147
  %out = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %5, i32 0, i32 3, !dbg !7148
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7148
  call void @bitmap_clear(%struct.bitmap_head_def* %6), !dbg !7149
  br label %for.inc, !dbg !7150

for.inc:                                          ; preds = %cond.end
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !7136
  br label %for.cond, !dbg !7136, !llvm.loop !7151

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7153
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_free_bb_info(%struct.basic_block_def* %bb, i8* %vbb_info) #0 !dbg !7154 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %vbb_info.addr = alloca i8*, align 8
  %bb_info = alloca %struct.df_byte_lr_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !7155, metadata !DIExpression()), !dbg !7156
  store i8* %vbb_info, i8** %vbb_info.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vbb_info.addr, metadata !7157, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_bb_info** %bb_info, metadata !7159, metadata !DIExpression()), !dbg !7160
  %0 = load i8*, i8** %vbb_info.addr, align 8, !dbg !7161
  %1 = bitcast i8* %0 to %struct.df_byte_lr_bb_info*, !dbg !7162
  store %struct.df_byte_lr_bb_info* %1, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7160
  %2 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7163
  %tobool = icmp ne %struct.df_byte_lr_bb_info* %2, null, !dbg !7163
  br i1 %tobool, label %if.then, label %if.end, !dbg !7165

if.then:                                          ; preds = %entry
  %3 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7166
  %use = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %3, i32 0, i32 1, !dbg !7166
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !7166
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %4), !dbg !7166
  %5 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7166
  %use1 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %5, i32 0, i32 1, !dbg !7166
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %use1, align 8, !dbg !7166
  %6 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7168
  %def = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %6, i32 0, i32 0, !dbg !7168
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !7168
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %7), !dbg !7168
  %8 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7168
  %def2 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %8, i32 0, i32 0, !dbg !7168
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %def2, align 8, !dbg !7168
  %9 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7169
  %in = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %9, i32 0, i32 2, !dbg !7169
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7169
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %10), !dbg !7169
  %11 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7169
  %in3 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %11, i32 0, i32 2, !dbg !7169
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in3, align 8, !dbg !7169
  %12 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7170
  %out = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %12, i32 0, i32 3, !dbg !7170
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7170
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %13), !dbg !7170
  %14 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7170
  %out4 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %14, i32 0, i32 3, !dbg !7170
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out4, align 8, !dbg !7170
  %15 = load %struct.df*, %struct.df** @df, align 8, !dbg !7171
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %15, i32 0, i32 1, !dbg !7171
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !7171
  %16 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7171
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %16, i32 0, i32 3, !dbg !7172
  %17 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !7172
  %18 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7173
  %19 = bitcast %struct.df_byte_lr_bb_info* %18 to i8*, !dbg !7173
  call void @pool_free(%struct.alloc_pool_def* %17, i8* %19), !dbg !7174
  br label %if.end, !dbg !7175

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7176
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_local_compute(%struct.bitmap_head_def* %all_blocks) #0 !dbg !7177 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_byte_lr_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !7178, metadata !DIExpression()), !dbg !7179
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !7180, metadata !DIExpression()), !dbg !7181
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !7182, metadata !DIExpression()), !dbg !7183
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7184
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !7184
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !7184
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7184
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 4, !dbg !7184
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !7184
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %2, i32 0, i32* %bb_index), !dbg !7184
  br label %for.cond, !dbg !7184

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !7186
  %tobool = icmp ne i8 %call, 0, !dbg !7184
  br i1 %tobool, label %for.body, label %for.end, !dbg !7184

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %bb_index, align 4, !dbg !7188
  %cmp = icmp eq i32 %3, 1, !dbg !7191
  br i1 %cmp, label %if.then, label %if.else, !dbg !7192

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_bb_info** %bb_info, metadata !7193, metadata !DIExpression()), !dbg !7195
  %call1 = call %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 1), !dbg !7196
  store %struct.df_byte_lr_bb_info* %call1, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7195
  %4 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7197
  %use = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %4, i32 0, i32 1, !dbg !7198
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !7198
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !7199
  %exit_block_uses = getelementptr inbounds %struct.df, %struct.df* %6, i32 0, i32 17, !dbg !7200
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !7200
  call void @df_byte_lr_expand_bitmap(%struct.bitmap_head_def* %5, %struct.bitmap_head_def* %7), !dbg !7201
  br label %if.end, !dbg !7202

if.else:                                          ; preds = %for.body
  %8 = load i32, i32* %bb_index, align 4, !dbg !7203
  call void @df_byte_lr_bb_local_compute(i32 %8), !dbg !7204
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !7205

for.inc:                                          ; preds = %if.end
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !7186
  br label %for.cond, !dbg !7186, !llvm.loop !7206

for.end:                                          ; preds = %for.cond
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !7208
  %problems_by_index2 = getelementptr inbounds %struct.df, %struct.df* %9, i32 0, i32 1, !dbg !7208
  %arrayidx3 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index2, i64 0, i64 5, !dbg !7208
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx3, align 8, !dbg !7208
  %out_of_date_transfer_functions4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %10, i32 0, i32 4, !dbg !7209
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions4, align 8, !dbg !7209
  call void @bitmap_clear(%struct.bitmap_head_def* %11), !dbg !7210
  ret void, !dbg !7211
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_init(%struct.bitmap_head_def* %all_blocks) #0 !dbg !7212 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_byte_lr_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !7213, metadata !DIExpression()), !dbg !7214
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !7215, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !7217, metadata !DIExpression()), !dbg !7218
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !7219
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %bb_index), !dbg !7219
  br label %for.cond, !dbg !7219

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !7221
  %tobool = icmp ne i8 %call, 0, !dbg !7219
  br i1 %tobool, label %for.body, label %for.end, !dbg !7219

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_bb_info** %bb_info, metadata !7223, metadata !DIExpression()), !dbg !7225
  %1 = load i32, i32* %bb_index, align 4, !dbg !7226
  %call1 = call %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %1), !dbg !7227
  store %struct.df_byte_lr_bb_info* %call1, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7225
  %2 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7228
  %in = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %2, i32 0, i32 2, !dbg !7229
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7229
  %4 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7230
  %use = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %4, i32 0, i32 1, !dbg !7231
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !7231
  call void @bitmap_copy(%struct.bitmap_head_def* %3, %struct.bitmap_head_def* %5), !dbg !7232
  %6 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7233
  %out = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %6, i32 0, i32 3, !dbg !7234
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7234
  call void @bitmap_clear(%struct.bitmap_head_def* %7), !dbg !7235
  br label %for.inc, !dbg !7236

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !7221
  br label %for.cond, !dbg !7221, !llvm.loop !7237

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7239
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_confluence_0(%struct.basic_block_def* %bb) #0 !dbg !7240 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  %op1 = alloca %struct.bitmap_head_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !7241, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !7243, metadata !DIExpression()), !dbg !7244
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7245
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !7245
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !7245
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7245
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !7246
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !7246
  %3 = bitcast i8* %2 to %struct.df_byte_lr_problem_data*, !dbg !7247
  store %struct.df_byte_lr_problem_data* %3, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7244
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %op1, metadata !7248, metadata !DIExpression()), !dbg !7249
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7250
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i32 0, i32 9, !dbg !7251
  %5 = load i32, i32* %index, align 8, !dbg !7251
  %call = call %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %5), !dbg !7252
  %out = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call, i32 0, i32 3, !dbg !7253
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7253
  store %struct.bitmap_head_def* %6, %struct.bitmap_head_def** %op1, align 8, !dbg !7249
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7254
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7256
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, !dbg !7256
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7256
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7256
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i32 0, i32 1, !dbg !7256
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7256
  %cmp = icmp ne %struct.basic_block_def* %7, %10, !dbg !7257
  br i1 %cmp, label %if.then, label %if.end, !dbg !7258

if.then:                                          ; preds = %entry
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !7259
  %12 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7260
  %hardware_regs_used = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %12, i32 0, i32 1, !dbg !7261
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !7261
  call void @bitmap_copy(%struct.bitmap_head_def* %11, %struct.bitmap_head_def* %13), !dbg !7262
  br label %if.end, !dbg !7262

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7263
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_confluence_n(%struct.edge_def* %e) #0 !dbg !7264 {
entry:
  %e.addr = alloca %struct.edge_def*, align 8
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  %op1 = alloca %struct.bitmap_head_def*, align 8
  %op2 = alloca %struct.bitmap_head_def*, align 8
  store %struct.edge_def* %e, %struct.edge_def** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e.addr, metadata !7265, metadata !DIExpression()), !dbg !7266
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !7267, metadata !DIExpression()), !dbg !7268
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7269
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !7269
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !7269
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7269
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !7270
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !7270
  %3 = bitcast i8* %2 to %struct.df_byte_lr_problem_data*, !dbg !7271
  store %struct.df_byte_lr_problem_data* %3, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7268
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %op1, metadata !7272, metadata !DIExpression()), !dbg !7273
  %4 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !7274
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %4, i32 0, i32 0, !dbg !7275
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7275
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 9, !dbg !7276
  %6 = load i32, i32* %index, align 8, !dbg !7276
  %call = call %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %6), !dbg !7277
  %out = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call, i32 0, i32 3, !dbg !7278
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7278
  store %struct.bitmap_head_def* %7, %struct.bitmap_head_def** %op1, align 8, !dbg !7273
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %op2, metadata !7279, metadata !DIExpression()), !dbg !7280
  %8 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !7281
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %8, i32 0, i32 1, !dbg !7282
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7282
  %index2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 9, !dbg !7283
  %10 = load i32, i32* %index2, align 8, !dbg !7283
  %call3 = call %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %10), !dbg !7284
  %in = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call3, i32 0, i32 2, !dbg !7285
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7285
  store %struct.bitmap_head_def* %11, %struct.bitmap_head_def** %op2, align 8, !dbg !7280
  %12 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !7286
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %12, i32 0, i32 7, !dbg !7288
  %13 = load i32, i32* %flags, align 8, !dbg !7288
  %and = and i32 %13, 8, !dbg !7289
  %tobool = icmp ne i32 %and, 0, !dbg !7289
  br i1 %tobool, label %if.then, label %if.else, !dbg !7290

if.then:                                          ; preds = %entry
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !7291
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op2, align 8, !dbg !7292
  %16 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7293
  %invalidated_by_call = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %16, i32 0, i32 0, !dbg !7294
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %invalidated_by_call, align 8, !dbg !7294
  %call4 = call zeroext i8 @bitmap_ior_and_compl_into(%struct.bitmap_head_def* %14, %struct.bitmap_head_def* %15, %struct.bitmap_head_def* %17), !dbg !7295
  br label %if.end, !dbg !7295

if.else:                                          ; preds = %entry
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !7296
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op2, align 8, !dbg !7297
  %call5 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %18, %struct.bitmap_head_def* %19), !dbg !7298
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !7299
  %21 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7300
  %hardware_regs_used = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %21, i32 0, i32 1, !dbg !7301
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !7301
  %call6 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %20, %struct.bitmap_head_def* %22), !dbg !7302
  ret void, !dbg !7303
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_byte_lr_transfer_function(i32 %bb_index) #0 !dbg !7304 {
entry:
  %bb_index.addr = alloca i32, align 4
  %bb_info = alloca %struct.df_byte_lr_bb_info*, align 8
  %in = alloca %struct.bitmap_head_def*, align 8
  %out = alloca %struct.bitmap_head_def*, align 8
  %use = alloca %struct.bitmap_head_def*, align 8
  %def = alloca %struct.bitmap_head_def*, align 8
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !7305, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_bb_info** %bb_info, metadata !7307, metadata !DIExpression()), !dbg !7308
  %0 = load i32, i32* %bb_index.addr, align 4, !dbg !7309
  %call = call %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %0), !dbg !7310
  store %struct.df_byte_lr_bb_info* %call, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7308
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %in, metadata !7311, metadata !DIExpression()), !dbg !7312
  %1 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7313
  %in1 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %1, i32 0, i32 2, !dbg !7314
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in1, align 8, !dbg !7314
  store %struct.bitmap_head_def* %2, %struct.bitmap_head_def** %in, align 8, !dbg !7312
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %out, metadata !7315, metadata !DIExpression()), !dbg !7316
  %3 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7317
  %out2 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %3, i32 0, i32 3, !dbg !7318
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out2, align 8, !dbg !7318
  store %struct.bitmap_head_def* %4, %struct.bitmap_head_def** %out, align 8, !dbg !7316
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %use, metadata !7319, metadata !DIExpression()), !dbg !7320
  %5 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7321
  %use3 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %5, i32 0, i32 1, !dbg !7322
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use3, align 8, !dbg !7322
  store %struct.bitmap_head_def* %6, %struct.bitmap_head_def** %use, align 8, !dbg !7320
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %def, metadata !7323, metadata !DIExpression()), !dbg !7324
  %7 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7325
  %def4 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %7, i32 0, i32 0, !dbg !7326
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def4, align 8, !dbg !7326
  store %struct.bitmap_head_def* %8, %struct.bitmap_head_def** %def, align 8, !dbg !7324
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7327
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !7328
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7329
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !7330
  %call5 = call zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def* %9, %struct.bitmap_head_def* %10, %struct.bitmap_head_def* %11, %struct.bitmap_head_def* %12), !dbg !7331
  ret i8 %call5, !dbg !7332
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_free() #0 !dbg !7333 {
entry:
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !7334, metadata !DIExpression()), !dbg !7335
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7336
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !7336
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !7336
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7336
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !7337
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !7337
  %3 = bitcast i8* %2 to %struct.df_byte_lr_problem_data*, !dbg !7338
  store %struct.df_byte_lr_problem_data* %3, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7335
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !7339
  %problems_by_index2 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !7339
  %arrayidx3 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index2, i64 0, i64 5, !dbg !7339
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx3, align 8, !dbg !7339
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 1, !dbg !7341
  %6 = load i8**, i8*** %block_info, align 8, !dbg !7341
  %tobool = icmp ne i8** %6, null, !dbg !7339
  br i1 %tobool, label %if.then, label %if.end, !dbg !7342

if.then:                                          ; preds = %entry
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !7343
  %problems_by_index4 = getelementptr inbounds %struct.df, %struct.df* %7, i32 0, i32 1, !dbg !7343
  %arrayidx5 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index4, i64 0, i64 5, !dbg !7343
  %8 = load %struct.dataflow*, %struct.dataflow** %arrayidx5, align 8, !dbg !7343
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %8, i32 0, i32 3, !dbg !7345
  %9 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !7345
  call void @free_alloc_pool(%struct.alloc_pool_def* %9), !dbg !7346
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !7347
  %problems_by_index6 = getelementptr inbounds %struct.df, %struct.df* %10, i32 0, i32 1, !dbg !7347
  %arrayidx7 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index6, i64 0, i64 5, !dbg !7347
  %11 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !7347
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %11, i32 0, i32 2, !dbg !7348
  store i32 0, i32* %block_info_size, align 8, !dbg !7349
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !7350
  %problems_by_index8 = getelementptr inbounds %struct.df, %struct.df* %12, i32 0, i32 1, !dbg !7350
  %arrayidx9 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index8, i64 0, i64 5, !dbg !7350
  %13 = load %struct.dataflow*, %struct.dataflow** %arrayidx9, align 8, !dbg !7350
  %block_info10 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %13, i32 0, i32 1, !dbg !7351
  %14 = load i8**, i8*** %block_info10, align 8, !dbg !7351
  %15 = bitcast i8** %14 to i8*, !dbg !7350
  call void @free(i8* %15), !dbg !7352
  br label %if.end, !dbg !7353

if.end:                                           ; preds = %if.then, %entry
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !7354
  %problems_by_index11 = getelementptr inbounds %struct.df, %struct.df* %16, i32 0, i32 1, !dbg !7354
  %arrayidx12 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index11, i64 0, i64 5, !dbg !7354
  %17 = load %struct.dataflow*, %struct.dataflow** %arrayidx12, align 8, !dbg !7354
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %17, i32 0, i32 4, !dbg !7354
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !7354
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %18), !dbg !7354
  %19 = load %struct.df*, %struct.df** @df, align 8, !dbg !7354
  %problems_by_index13 = getelementptr inbounds %struct.df, %struct.df* %19, i32 0, i32 1, !dbg !7354
  %arrayidx14 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index13, i64 0, i64 5, !dbg !7354
  %20 = load %struct.dataflow*, %struct.dataflow** %arrayidx14, align 8, !dbg !7354
  %out_of_date_transfer_functions15 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %20, i32 0, i32 4, !dbg !7354
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out_of_date_transfer_functions15, align 8, !dbg !7354
  %21 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7355
  %byte_lr_bitmaps = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %21, i32 0, i32 5, !dbg !7356
  call void @bitmap_obstack_release(%struct.bitmap_obstack* %byte_lr_bitmaps), !dbg !7357
  %22 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7358
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %22, i32 0, i32 3, !dbg !7359
  %23 = load i32*, i32** %regno_start, align 8, !dbg !7359
  %24 = bitcast i32* %23 to i8*, !dbg !7358
  call void @free(i8* %24), !dbg !7360
  %25 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7361
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %25, i32 0, i32 4, !dbg !7362
  %26 = load i32*, i32** %regno_len, align 8, !dbg !7362
  %27 = bitcast i32* %26 to i8*, !dbg !7361
  call void @free(i8* %27), !dbg !7363
  %28 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7364
  %29 = bitcast %struct.df_byte_lr_problem_data* %28 to i8*, !dbg !7364
  call void @free(i8* %29), !dbg !7365
  %30 = load %struct.df*, %struct.df** @df, align 8, !dbg !7366
  %problems_by_index16 = getelementptr inbounds %struct.df, %struct.df* %30, i32 0, i32 1, !dbg !7366
  %arrayidx17 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index16, i64 0, i64 5, !dbg !7366
  %31 = load %struct.dataflow*, %struct.dataflow** %arrayidx17, align 8, !dbg !7366
  %32 = bitcast %struct.dataflow* %31 to i8*, !dbg !7366
  call void @free(i8* %32), !dbg !7367
  ret void, !dbg !7368
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_top_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !7369 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %bb_info = alloca %struct.df_byte_lr_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !7370, metadata !DIExpression()), !dbg !7371
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !7372, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_bb_info** %bb_info, metadata !7374, metadata !DIExpression()), !dbg !7375
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7376
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !7377
  %1 = load i32, i32* %index, align 8, !dbg !7377
  %call = call %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %1), !dbg !7378
  store %struct.df_byte_lr_bb_info* %call, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7375
  %2 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7379
  %tobool = icmp ne %struct.df_byte_lr_bb_info* %2, null, !dbg !7379
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7381

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7382
  %in = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %3, i32 0, i32 2, !dbg !7383
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7383
  %tobool1 = icmp ne %struct.bitmap_head_def* %4, null, !dbg !7382
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7384

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !7385

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7386
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i64 0, i64 0)), !dbg !7387
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7388
  %7 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7389
  %in3 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %7, i32 0, i32 2, !dbg !7390
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in3, align 8, !dbg !7390
  call void @df_print_byte_regset(%struct._IO_FILE* %6, %struct.bitmap_head_def* %8), !dbg !7391
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7392
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i64 0, i64 0)), !dbg !7393
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7394
  %11 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7395
  %use = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %11, i32 0, i32 1, !dbg !7396
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !7396
  call void @df_print_byte_regset(%struct._IO_FILE* %10, %struct.bitmap_head_def* %12), !dbg !7397
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7398
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0)), !dbg !7399
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7400
  %15 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7401
  %def = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %15, i32 0, i32 0, !dbg !7402
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !7402
  call void @df_print_byte_regset(%struct._IO_FILE* %14, %struct.bitmap_head_def* %16), !dbg !7403
  br label %return, !dbg !7404

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7404
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_bottom_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !7405 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %bb_info = alloca %struct.df_byte_lr_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !7406, metadata !DIExpression()), !dbg !7407
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !7408, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_bb_info** %bb_info, metadata !7410, metadata !DIExpression()), !dbg !7411
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7412
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !7413
  %1 = load i32, i32* %index, align 8, !dbg !7413
  %call = call %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %1), !dbg !7414
  store %struct.df_byte_lr_bb_info* %call, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7411
  %2 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7415
  %tobool = icmp ne %struct.df_byte_lr_bb_info* %2, null, !dbg !7415
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7417

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7418
  %out = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %3, i32 0, i32 3, !dbg !7419
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7419
  %tobool1 = icmp ne %struct.bitmap_head_def* %4, null, !dbg !7418
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7420

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !7421

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7422
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i64 0, i64 0)), !dbg !7423
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !7424
  %7 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7425
  %out3 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %7, i32 0, i32 3, !dbg !7426
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out3, align 8, !dbg !7426
  call void @df_print_byte_regset(%struct._IO_FILE* %6, %struct.bitmap_head_def* %8), !dbg !7427
  br label %return, !dbg !7428

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7428
}

declare dso_local i32 @max_reg_num() #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_check_regs(%union.df_ref_d** %ref_rec) #0 !dbg !7429 {
entry:
  %ref_rec.addr = alloca %union.df_ref_d**, align 8
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  %ref = alloca %union.df_ref_d*, align 8
  store %union.df_ref_d** %ref_rec, %union.df_ref_d*** %ref_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %ref_rec.addr, metadata !7432, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !7434, metadata !DIExpression()), !dbg !7435
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7436
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !7436
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !7436
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7436
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !7437
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !7437
  %3 = bitcast i8* %2 to %struct.df_byte_lr_problem_data*, !dbg !7438
  store %struct.df_byte_lr_problem_data* %3, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7435
  br label %for.cond, !dbg !7439

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !7440
  %5 = load %union.df_ref_d*, %union.df_ref_d** %4, align 8, !dbg !7443
  %tobool = icmp ne %union.df_ref_d* %5, null, !dbg !7444
  br i1 %tobool, label %for.body, label %for.end, !dbg !7444

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %ref, metadata !7445, metadata !DIExpression()), !dbg !7447
  %6 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !7448
  %7 = load %union.df_ref_d*, %union.df_ref_d** %6, align 8, !dbg !7449
  store %union.df_ref_d* %7, %union.df_ref_d** %ref, align 8, !dbg !7447
  %8 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7450
  %base = bitcast %union.df_ref_d* %8 to %struct.df_base_ref*, !dbg !7450
  %9 = bitcast %struct.df_base_ref* %base to i32*, !dbg !7450
  %bf.load = load i32, i32* %9, align 8, !dbg !7450
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !7450
  %and = and i32 %bf.ashr, 1792, !dbg !7450
  %cmp = icmp ne i32 %and, 0, !dbg !7450
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7452

lor.lhs.false:                                    ; preds = %for.body
  %10 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7453
  %base2 = bitcast %union.df_ref_d* %10 to %struct.df_base_ref*, !dbg !7453
  %reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base2, i32 0, i32 1, !dbg !7453
  %11 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !7453
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !7453
  %bf.load3 = load i32, i32* %12, align 8, !dbg !7453
  %bf.clear = and i32 %bf.load3, 65535, !dbg !7453
  %cmp4 = icmp eq i32 %bf.clear, 39, !dbg !7454
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7455

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %13 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7456
  %needs_expansion = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %13, i32 0, i32 2, !dbg !7457
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %needs_expansion, align 8, !dbg !7457
  %15 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !7458
  %base5 = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !7458
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base5, i32 0, i32 6, !dbg !7458
  %16 = load i32, i32* %regno, align 8, !dbg !7458
  %call = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %14, i32 %16), !dbg !7459
  br label %if.end, !dbg !7459

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !7460

for.inc:                                          ; preds = %if.end
  %17 = load %union.df_ref_d**, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !7461
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %17, i32 1, !dbg !7461
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %ref_rec.addr, align 8, !dbg !7461
  br label %for.cond, !dbg !7462, !llvm.loop !7463

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7465
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_expand_bitmap(%struct.bitmap_head_def* %dest, %struct.bitmap_head_def* %src) #0 !dbg !7466 {
entry:
  %dest.addr = alloca %struct.bitmap_head_def*, align 8
  %src.addr = alloca %struct.bitmap_head_def*, align 8
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  store %struct.bitmap_head_def* %dest, %struct.bitmap_head_def** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %dest.addr, metadata !7469, metadata !DIExpression()), !dbg !7470
  store %struct.bitmap_head_def* %src, %struct.bitmap_head_def** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %src.addr, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !7473, metadata !DIExpression()), !dbg !7474
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7475
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !7475
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !7475
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7475
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !7476
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !7476
  %3 = bitcast i8* %2 to %struct.df_byte_lr_problem_data*, !dbg !7477
  store %struct.df_byte_lr_problem_data* %3, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7474
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !7478, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7480, metadata !DIExpression()), !dbg !7481
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dest.addr, align 8, !dbg !7482
  call void @bitmap_clear(%struct.bitmap_head_def* %4), !dbg !7483
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %src.addr, align 8, !dbg !7484
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %5, i32 0, i32* %i), !dbg !7484
  br label %for.cond, !dbg !7484

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %i), !dbg !7486
  %tobool = icmp ne i8 %call, 0, !dbg !7484
  br i1 %tobool, label %for.body, label %for.end, !dbg !7484

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dest.addr, align 8, !dbg !7488
  %7 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7490
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %7, i32 0, i32 3, !dbg !7491
  %8 = load i32*, i32** %regno_start, align 8, !dbg !7491
  %9 = load i32, i32* %i, align 4, !dbg !7492
  %idxprom = zext i32 %9 to i64, !dbg !7490
  %arrayidx2 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !7490
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !7490
  %11 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7493
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %11, i32 0, i32 4, !dbg !7494
  %12 = load i32*, i32** %regno_len, align 8, !dbg !7494
  %13 = load i32, i32* %i, align 4, !dbg !7495
  %idxprom3 = zext i32 %13 to i64, !dbg !7493
  %arrayidx4 = getelementptr inbounds i32, i32* %12, i64 %idxprom3, !dbg !7493
  %14 = load i32, i32* %arrayidx4, align 4, !dbg !7493
  call void @bitmap_set_range(%struct.bitmap_head_def* %6, i32 %10, i32 %14), !dbg !7496
  br label %for.inc, !dbg !7497

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %i), !dbg !7486
  br label %for.cond, !dbg !7486, !llvm.loop !7498

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7500
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %index) #0 !dbg !7501 {
entry:
  %retval = alloca %struct.df_byte_lr_bb_info*, align 8
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7504, metadata !DIExpression()), !dbg !7505
  %0 = load i32, i32* %index.addr, align 4, !dbg !7506
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !7508
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !7508
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !7508
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7508
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 2, !dbg !7509
  %3 = load i32, i32* %block_info_size, align 8, !dbg !7509
  %cmp = icmp ult i32 %0, %3, !dbg !7510
  br i1 %cmp, label %if.then, label %if.else, !dbg !7511

if.then:                                          ; preds = %entry
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !7512
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !7512
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 5, !dbg !7512
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !7512
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 1, !dbg !7513
  %6 = load i8**, i8*** %block_info, align 8, !dbg !7513
  %7 = load i32, i32* %index.addr, align 4, !dbg !7514
  %idxprom = zext i32 %7 to i64, !dbg !7512
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %idxprom, !dbg !7512
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !7512
  %9 = bitcast i8* %8 to %struct.df_byte_lr_bb_info*, !dbg !7515
  store %struct.df_byte_lr_bb_info* %9, %struct.df_byte_lr_bb_info** %retval, align 8, !dbg !7516
  br label %return, !dbg !7516

if.else:                                          ; preds = %entry
  store %struct.df_byte_lr_bb_info* null, %struct.df_byte_lr_bb_info** %retval, align 8, !dbg !7517
  br label %return, !dbg !7517

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %retval, align 8, !dbg !7518
  ret %struct.df_byte_lr_bb_info* %10, !dbg !7518
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_set_bb_info(i32 %index, %struct.df_byte_lr_bb_info* %bb_info) #0 !dbg !7519 {
entry:
  %index.addr = alloca i32, align 4
  %bb_info.addr = alloca %struct.df_byte_lr_bb_info*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7522, metadata !DIExpression()), !dbg !7523
  store %struct.df_byte_lr_bb_info* %bb_info, %struct.df_byte_lr_bb_info** %bb_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_bb_info** %bb_info.addr, metadata !7524, metadata !DIExpression()), !dbg !7525
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7526
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !7526
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !7526
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7526
  %tobool = icmp ne %struct.dataflow* %1, null, !dbg !7526
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7526

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 2415, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7526
  br label %cond.end, !dbg !7526

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7526

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7526
  %2 = load i32, i32* %index.addr, align 4, !dbg !7527
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !7527
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !7527
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 5, !dbg !7527
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !7527
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 2, !dbg !7527
  %5 = load i32, i32* %block_info_size, align 8, !dbg !7527
  %cmp = icmp ult i32 %2, %5, !dbg !7527
  br i1 %cmp, label %cond.false4, label %cond.true3, !dbg !7527

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 2416, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7527
  br label %cond.end5, !dbg !7527

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !7527

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !7527
  %6 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info.addr, align 8, !dbg !7528
  %7 = bitcast %struct.df_byte_lr_bb_info* %6 to i8*, !dbg !7528
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !7529
  %problems_by_index7 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 1, !dbg !7529
  %arrayidx8 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index7, i64 0, i64 5, !dbg !7529
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !7529
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %9, i32 0, i32 1, !dbg !7530
  %10 = load i8**, i8*** %block_info, align 8, !dbg !7530
  %11 = load i32, i32* %index.addr, align 4, !dbg !7531
  %idxprom = zext i32 %11 to i64, !dbg !7529
  %arrayidx9 = getelementptr inbounds i8*, i8** %10, i64 %idxprom, !dbg !7529
  store i8* %7, i8** %arrayidx9, align 8, !dbg !7532
  ret void, !dbg !7533
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_byte_lr_bb_local_compute(i32 %bb_index) #0 !dbg !7534 {
entry:
  %bb_index.addr = alloca i32, align 4
  %problem_data = alloca %struct.df_byte_lr_problem_data*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %bb_info = alloca %struct.df_byte_lr_bb_info*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %use_rec = alloca %union.df_ref_d**, align 8
  %def = alloca %union.df_ref_d*, align 8
  %dregno = alloca i32, align 4
  %start = alloca i32, align 4
  %len = alloca i32, align 4
  %use18 = alloca %union.df_ref_d*, align 8
  %uregno = alloca i32, align 4
  %start27 = alloca i32, align 4
  %len31 = alloca i32, align 4
  %uid = alloca i32, align 4
  %def70 = alloca %union.df_ref_d*, align 8
  %dregno77 = alloca i32, align 4
  %start80 = alloca i32, align 4
  %len84 = alloca i32, align 4
  %sb = alloca i32, align 4
  %lb = alloca i32, align 4
  %use107 = alloca %union.df_ref_d*, align 8
  %uregno108 = alloca i32, align 4
  %start111 = alloca i32, align 4
  %len115 = alloca i32, align 4
  %sb119 = alloca i32, align 4
  %lb120 = alloca i32, align 4
  %def144 = alloca %union.df_ref_d*, align 8
  %dregno151 = alloca i32, align 4
  %start154 = alloca i32, align 4
  %len158 = alloca i32, align 4
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !7535, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_problem_data** %problem_data, metadata !7537, metadata !DIExpression()), !dbg !7538
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7539
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !7539
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 5, !dbg !7539
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7539
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 5, !dbg !7540
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !7540
  %3 = bitcast i8* %2 to %struct.df_byte_lr_problem_data*, !dbg !7541
  store %struct.df_byte_lr_problem_data* %3, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7538
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7542, metadata !DIExpression()), !dbg !7543
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7544
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, !dbg !7544
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7544
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7544
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i32 0, i32 2, !dbg !7544
  %6 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7544
  %tobool = icmp ne %struct.VEC_basic_block_gc* %6, null, !dbg !7544
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7544

cond.true:                                        ; preds = %entry
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7544
  %add.ptr2 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, !dbg !7544
  %cfg3 = getelementptr inbounds %struct.function, %struct.function* %add.ptr2, i32 0, i32 1, !dbg !7544
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3, align 8, !dbg !7544
  %x_basic_block_info4 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i32 0, i32 2, !dbg !7544
  %9 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info4, align 8, !dbg !7544
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %9, i32 0, i32 0, !dbg !7544
  br label %cond.end, !dbg !7544

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7544

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7544
  %10 = load i32, i32* %bb_index.addr, align 4, !dbg !7544
  %call = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %10), !dbg !7544
  store %struct.basic_block_def* %call, %struct.basic_block_def** %bb, align 8, !dbg !7543
  call void @llvm.dbg.declare(metadata %struct.df_byte_lr_bb_info** %bb_info, metadata !7545, metadata !DIExpression()), !dbg !7546
  %11 = load i32, i32* %bb_index.addr, align 4, !dbg !7547
  %call5 = call %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %11), !dbg !7548
  store %struct.df_byte_lr_bb_info* %call5, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7546
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !7549, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !7551, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %use_rec, metadata !7553, metadata !DIExpression()), !dbg !7554
  %12 = load i32, i32* %bb_index.addr, align 4, !dbg !7555
  %call6 = call %union.df_ref_d** @df_get_artificial_defs(i32 %12), !dbg !7557
  store %union.df_ref_d** %call6, %union.df_ref_d*** %def_rec, align 8, !dbg !7558
  br label %for.cond, !dbg !7559

for.cond:                                         ; preds = %for.inc, %cond.end
  %13 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !7560
  %14 = load %union.df_ref_d*, %union.df_ref_d** %13, align 8, !dbg !7562
  %tobool7 = icmp ne %union.df_ref_d* %14, null, !dbg !7563
  br i1 %tobool7, label %for.body, label %for.end, !dbg !7563

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !7564, metadata !DIExpression()), !dbg !7566
  %15 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !7567
  %16 = load %union.df_ref_d*, %union.df_ref_d** %15, align 8, !dbg !7568
  store %union.df_ref_d* %16, %union.df_ref_d** %def, align 8, !dbg !7566
  %17 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !7569
  %base8 = bitcast %union.df_ref_d* %17 to %struct.df_base_ref*, !dbg !7569
  %18 = bitcast %struct.df_base_ref* %base8 to i32*, !dbg !7569
  %bf.load = load i32, i32* %18, align 8, !dbg !7569
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !7569
  %and = and i32 %bf.ashr, 2, !dbg !7571
  %cmp = icmp eq i32 %and, 0, !dbg !7572
  br i1 %cmp, label %if.then, label %if.end, !dbg !7573

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !7574, metadata !DIExpression()), !dbg !7576
  %19 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !7577
  %base9 = bitcast %union.df_ref_d* %19 to %struct.df_base_ref*, !dbg !7577
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base9, i32 0, i32 6, !dbg !7577
  %20 = load i32, i32* %regno, align 8, !dbg !7577
  store i32 %20, i32* %dregno, align 4, !dbg !7576
  call void @llvm.dbg.declare(metadata i32* %start, metadata !7578, metadata !DIExpression()), !dbg !7579
  %21 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7580
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %21, i32 0, i32 3, !dbg !7581
  %22 = load i32*, i32** %regno_start, align 8, !dbg !7581
  %23 = load i32, i32* %dregno, align 4, !dbg !7582
  %idxprom = zext i32 %23 to i64, !dbg !7580
  %arrayidx10 = getelementptr inbounds i32, i32* %22, i64 %idxprom, !dbg !7580
  %24 = load i32, i32* %arrayidx10, align 4, !dbg !7580
  store i32 %24, i32* %start, align 4, !dbg !7579
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7583, metadata !DIExpression()), !dbg !7584
  %25 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7585
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %25, i32 0, i32 4, !dbg !7586
  %26 = load i32*, i32** %regno_len, align 8, !dbg !7586
  %27 = load i32, i32* %dregno, align 4, !dbg !7587
  %idxprom11 = zext i32 %27 to i64, !dbg !7585
  %arrayidx12 = getelementptr inbounds i32, i32* %26, i64 %idxprom11, !dbg !7585
  %28 = load i32, i32* %arrayidx12, align 4, !dbg !7585
  store i32 %28, i32* %len, align 4, !dbg !7584
  %29 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7588
  %def13 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %29, i32 0, i32 0, !dbg !7589
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def13, align 8, !dbg !7589
  %31 = load i32, i32* %start, align 4, !dbg !7590
  %32 = load i32, i32* %len, align 4, !dbg !7591
  call void @bitmap_set_range(%struct.bitmap_head_def* %30, i32 %31, i32 %32), !dbg !7592
  %33 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7593
  %use = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %33, i32 0, i32 1, !dbg !7594
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !7594
  %35 = load i32, i32* %start, align 4, !dbg !7595
  %36 = load i32, i32* %len, align 4, !dbg !7596
  call void @bitmap_clear_range(%struct.bitmap_head_def* %34, i32 %35, i32 %36), !dbg !7597
  br label %if.end, !dbg !7598

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7599

for.inc:                                          ; preds = %if.end
  %37 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !7600
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %37, i32 1, !dbg !7600
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !7600
  br label %for.cond, !dbg !7601, !llvm.loop !7602

for.end:                                          ; preds = %for.cond
  %38 = load i32, i32* %bb_index.addr, align 4, !dbg !7604
  %call14 = call %union.df_ref_d** @df_get_artificial_uses(i32 %38), !dbg !7606
  store %union.df_ref_d** %call14, %union.df_ref_d*** %use_rec, align 8, !dbg !7607
  br label %for.cond15, !dbg !7608

for.cond15:                                       ; preds = %for.inc37, %for.end
  %39 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !7609
  %40 = load %union.df_ref_d*, %union.df_ref_d** %39, align 8, !dbg !7611
  %tobool16 = icmp ne %union.df_ref_d* %40, null, !dbg !7612
  br i1 %tobool16, label %for.body17, label %for.end39, !dbg !7612

for.body17:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use18, metadata !7613, metadata !DIExpression()), !dbg !7615
  %41 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !7616
  %42 = load %union.df_ref_d*, %union.df_ref_d** %41, align 8, !dbg !7617
  store %union.df_ref_d* %42, %union.df_ref_d** %use18, align 8, !dbg !7615
  %43 = load %union.df_ref_d*, %union.df_ref_d** %use18, align 8, !dbg !7618
  %base19 = bitcast %union.df_ref_d* %43 to %struct.df_base_ref*, !dbg !7618
  %44 = bitcast %struct.df_base_ref* %base19 to i32*, !dbg !7618
  %bf.load20 = load i32, i32* %44, align 8, !dbg !7618
  %bf.ashr21 = ashr i32 %bf.load20, 16, !dbg !7618
  %and22 = and i32 %bf.ashr21, 2, !dbg !7620
  %cmp23 = icmp eq i32 %and22, 0, !dbg !7621
  br i1 %cmp23, label %if.then24, label %if.end36, !dbg !7622

if.then24:                                        ; preds = %for.body17
  call void @llvm.dbg.declare(metadata i32* %uregno, metadata !7623, metadata !DIExpression()), !dbg !7625
  %45 = load %union.df_ref_d*, %union.df_ref_d** %use18, align 8, !dbg !7626
  %base25 = bitcast %union.df_ref_d* %45 to %struct.df_base_ref*, !dbg !7626
  %regno26 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base25, i32 0, i32 6, !dbg !7626
  %46 = load i32, i32* %regno26, align 8, !dbg !7626
  store i32 %46, i32* %uregno, align 4, !dbg !7625
  call void @llvm.dbg.declare(metadata i32* %start27, metadata !7627, metadata !DIExpression()), !dbg !7628
  %47 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7629
  %regno_start28 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %47, i32 0, i32 3, !dbg !7630
  %48 = load i32*, i32** %regno_start28, align 8, !dbg !7630
  %49 = load i32, i32* %uregno, align 4, !dbg !7631
  %idxprom29 = zext i32 %49 to i64, !dbg !7629
  %arrayidx30 = getelementptr inbounds i32, i32* %48, i64 %idxprom29, !dbg !7629
  %50 = load i32, i32* %arrayidx30, align 4, !dbg !7629
  store i32 %50, i32* %start27, align 4, !dbg !7628
  call void @llvm.dbg.declare(metadata i32* %len31, metadata !7632, metadata !DIExpression()), !dbg !7633
  %51 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7634
  %regno_len32 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %51, i32 0, i32 4, !dbg !7635
  %52 = load i32*, i32** %regno_len32, align 8, !dbg !7635
  %53 = load i32, i32* %uregno, align 4, !dbg !7636
  %idxprom33 = zext i32 %53 to i64, !dbg !7634
  %arrayidx34 = getelementptr inbounds i32, i32* %52, i64 %idxprom33, !dbg !7634
  %54 = load i32, i32* %arrayidx34, align 4, !dbg !7634
  store i32 %54, i32* %len31, align 4, !dbg !7633
  %55 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7637
  %use35 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %55, i32 0, i32 1, !dbg !7638
  %56 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use35, align 8, !dbg !7638
  %57 = load i32, i32* %start27, align 4, !dbg !7639
  %58 = load i32, i32* %len31, align 4, !dbg !7640
  call void @bitmap_set_range(%struct.bitmap_head_def* %56, i32 %57, i32 %58), !dbg !7641
  br label %if.end36, !dbg !7642

if.end36:                                         ; preds = %if.then24, %for.body17
  br label %for.inc37, !dbg !7643

for.inc37:                                        ; preds = %if.end36
  %59 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !7644
  %incdec.ptr38 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %59, i32 1, !dbg !7644
  store %union.df_ref_d** %incdec.ptr38, %union.df_ref_d*** %use_rec, align 8, !dbg !7644
  br label %for.cond15, !dbg !7645, !llvm.loop !7646

for.end39:                                        ; preds = %for.cond15
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7648
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %60, i32 0, i32 7, !dbg !7648
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7648
  %61 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7648
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %61, i32 0, i32 1, !dbg !7648
  %62 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7648
  store %struct.rtx_def* %62, %struct.rtx_def** %insn, align 8, !dbg !7648
  br label %for.cond40, !dbg !7648

for.cond40:                                       ; preds = %for.inc134, %for.end39
  %63 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7650
  %tobool41 = icmp ne %struct.rtx_def* %63, null, !dbg !7650
  br i1 %tobool41, label %land.rhs, label %land.end, !dbg !7650

land.rhs:                                         ; preds = %for.cond40
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7650
  %65 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7650
  %il42 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %65, i32 0, i32 7, !dbg !7650
  %rtl43 = bitcast %union.basic_block_il_dependent* %il42 to %struct.rtl_bb_info**, !dbg !7650
  %66 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl43, align 8, !dbg !7650
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %66, i32 0, i32 0, !dbg !7650
  %67 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !7650
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !7650
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7650
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !7650
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !7650
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7650
  %cmp45 = icmp ne %struct.rtx_def* %64, %68, !dbg !7650
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond40
  %69 = phi i1 [ false, %for.cond40 ], [ %cmp45, %land.rhs ], !dbg !7652
  br i1 %69, label %for.body46, label %for.end139, !dbg !7648

for.body46:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !7653, metadata !DIExpression()), !dbg !7655
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7656
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !7656
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !7656
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 0, !dbg !7656
  %rt_int = bitcast %union.rtunion_def* %arrayidx49 to i32*, !dbg !7656
  %71 = load i32, i32* %rt_int, align 8, !dbg !7656
  store i32 %71, i32* %uid, align 4, !dbg !7655
  %72 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7657
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !7657
  %bf.load50 = load i32, i32* %73, align 8, !dbg !7657
  %bf.clear = and i32 %bf.load50, 65535, !dbg !7657
  %cmp51 = icmp eq i32 %bf.clear, 8, !dbg !7657
  br i1 %cmp51, label %if.end64, label %lor.lhs.false, !dbg !7657

lor.lhs.false:                                    ; preds = %for.body46
  %74 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7657
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !7657
  %bf.load52 = load i32, i32* %75, align 8, !dbg !7657
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !7657
  %cmp54 = icmp eq i32 %bf.clear53, 7, !dbg !7657
  br i1 %cmp54, label %if.end64, label %lor.lhs.false55, !dbg !7657

lor.lhs.false55:                                  ; preds = %lor.lhs.false
  %76 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7657
  %77 = bitcast %struct.rtx_def* %76 to i32*, !dbg !7657
  %bf.load56 = load i32, i32* %77, align 8, !dbg !7657
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !7657
  %cmp58 = icmp eq i32 %bf.clear57, 9, !dbg !7657
  br i1 %cmp58, label %if.end64, label %lor.lhs.false59, !dbg !7657

lor.lhs.false59:                                  ; preds = %lor.lhs.false55
  %78 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7657
  %79 = bitcast %struct.rtx_def* %78 to i32*, !dbg !7657
  %bf.load60 = load i32, i32* %79, align 8, !dbg !7657
  %bf.clear61 = and i32 %bf.load60, 65535, !dbg !7657
  %cmp62 = icmp eq i32 %bf.clear61, 10, !dbg !7657
  br i1 %cmp62, label %if.end64, label %if.then63, !dbg !7659

if.then63:                                        ; preds = %lor.lhs.false59
  br label %for.inc134, !dbg !7660

if.end64:                                         ; preds = %lor.lhs.false59, %lor.lhs.false55, %lor.lhs.false, %for.body46
  %80 = load %struct.df*, %struct.df** @df, align 8, !dbg !7661
  %insns = getelementptr inbounds %struct.df, %struct.df* %80, i32 0, i32 10, !dbg !7661
  %81 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !7661
  %82 = load i32, i32* %uid, align 4, !dbg !7661
  %idxprom65 = zext i32 %82 to i64, !dbg !7661
  %arrayidx66 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %81, i64 %idxprom65, !dbg !7661
  %83 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx66, align 8, !dbg !7661
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %83, i32 0, i32 1, !dbg !7661
  %84 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !7661
  store %union.df_ref_d** %84, %union.df_ref_d*** %def_rec, align 8, !dbg !7663
  br label %for.cond67, !dbg !7664

for.cond67:                                       ; preds = %for.inc98, %if.end64
  %85 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !7665
  %86 = load %union.df_ref_d*, %union.df_ref_d** %85, align 8, !dbg !7667
  %tobool68 = icmp ne %union.df_ref_d* %86, null, !dbg !7668
  br i1 %tobool68, label %for.body69, label %for.end100, !dbg !7668

for.body69:                                       ; preds = %for.cond67
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def70, metadata !7669, metadata !DIExpression()), !dbg !7671
  %87 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !7672
  %88 = load %union.df_ref_d*, %union.df_ref_d** %87, align 8, !dbg !7673
  store %union.df_ref_d* %88, %union.df_ref_d** %def70, align 8, !dbg !7671
  %89 = load %union.df_ref_d*, %union.df_ref_d** %def70, align 8, !dbg !7674
  %base71 = bitcast %union.df_ref_d* %89 to %struct.df_base_ref*, !dbg !7674
  %90 = bitcast %struct.df_base_ref* %base71 to i32*, !dbg !7674
  %bf.load72 = load i32, i32* %90, align 8, !dbg !7674
  %bf.ashr73 = ashr i32 %bf.load72, 16, !dbg !7674
  %and74 = and i32 %bf.ashr73, 1, !dbg !7676
  %tobool75 = icmp ne i32 %and74, 0, !dbg !7676
  br i1 %tobool75, label %if.end97, label %if.then76, !dbg !7677

if.then76:                                        ; preds = %for.body69
  call void @llvm.dbg.declare(metadata i32* %dregno77, metadata !7678, metadata !DIExpression()), !dbg !7680
  %91 = load %union.df_ref_d*, %union.df_ref_d** %def70, align 8, !dbg !7681
  %base78 = bitcast %union.df_ref_d* %91 to %struct.df_base_ref*, !dbg !7681
  %regno79 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base78, i32 0, i32 6, !dbg !7681
  %92 = load i32, i32* %regno79, align 8, !dbg !7681
  store i32 %92, i32* %dregno77, align 4, !dbg !7680
  call void @llvm.dbg.declare(metadata i32* %start80, metadata !7682, metadata !DIExpression()), !dbg !7683
  %93 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7684
  %regno_start81 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %93, i32 0, i32 3, !dbg !7685
  %94 = load i32*, i32** %regno_start81, align 8, !dbg !7685
  %95 = load i32, i32* %dregno77, align 4, !dbg !7686
  %idxprom82 = zext i32 %95 to i64, !dbg !7684
  %arrayidx83 = getelementptr inbounds i32, i32* %94, i64 %idxprom82, !dbg !7684
  %96 = load i32, i32* %arrayidx83, align 4, !dbg !7684
  store i32 %96, i32* %start80, align 4, !dbg !7683
  call void @llvm.dbg.declare(metadata i32* %len84, metadata !7687, metadata !DIExpression()), !dbg !7688
  %97 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7689
  %regno_len85 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %97, i32 0, i32 4, !dbg !7690
  %98 = load i32*, i32** %regno_len85, align 8, !dbg !7690
  %99 = load i32, i32* %dregno77, align 4, !dbg !7691
  %idxprom86 = zext i32 %99 to i64, !dbg !7689
  %arrayidx87 = getelementptr inbounds i32, i32* %98, i64 %idxprom86, !dbg !7689
  %100 = load i32, i32* %arrayidx87, align 4, !dbg !7689
  store i32 %100, i32* %len84, align 4, !dbg !7688
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !7692, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.declare(metadata i32* %lb, metadata !7694, metadata !DIExpression()), !dbg !7695
  %101 = load %union.df_ref_d*, %union.df_ref_d** %def70, align 8, !dbg !7696
  %call88 = call zeroext i8 @df_compute_accessed_bytes(%union.df_ref_d* %101, i32 1, i32* %sb, i32* %lb), !dbg !7698
  %tobool89 = icmp ne i8 %call88, 0, !dbg !7698
  br i1 %tobool89, label %if.end91, label %if.then90, !dbg !7699

if.then90:                                        ; preds = %if.then76
  %102 = load i32, i32* %sb, align 4, !dbg !7700
  %103 = load i32, i32* %start80, align 4, !dbg !7702
  %add = add i32 %103, %102, !dbg !7702
  store i32 %add, i32* %start80, align 4, !dbg !7702
  %104 = load i32, i32* %lb, align 4, !dbg !7703
  %105 = load i32, i32* %sb, align 4, !dbg !7704
  %sub = sub i32 %104, %105, !dbg !7705
  store i32 %sub, i32* %len84, align 4, !dbg !7706
  br label %if.end91, !dbg !7707

if.end91:                                         ; preds = %if.then90, %if.then76
  %106 = load i32, i32* %len84, align 4, !dbg !7708
  %tobool92 = icmp ne i32 %106, 0, !dbg !7708
  br i1 %tobool92, label %if.then93, label %if.end96, !dbg !7710

if.then93:                                        ; preds = %if.end91
  %107 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7711
  %def94 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %107, i32 0, i32 0, !dbg !7713
  %108 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def94, align 8, !dbg !7713
  %109 = load i32, i32* %start80, align 4, !dbg !7714
  %110 = load i32, i32* %len84, align 4, !dbg !7715
  call void @bitmap_set_range(%struct.bitmap_head_def* %108, i32 %109, i32 %110), !dbg !7716
  %111 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7717
  %use95 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %111, i32 0, i32 1, !dbg !7718
  %112 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use95, align 8, !dbg !7718
  %113 = load i32, i32* %start80, align 4, !dbg !7719
  %114 = load i32, i32* %len84, align 4, !dbg !7720
  call void @bitmap_clear_range(%struct.bitmap_head_def* %112, i32 %113, i32 %114), !dbg !7721
  br label %if.end96, !dbg !7722

if.end96:                                         ; preds = %if.then93, %if.end91
  br label %if.end97, !dbg !7723

if.end97:                                         ; preds = %if.end96, %for.body69
  br label %for.inc98, !dbg !7724

for.inc98:                                        ; preds = %if.end97
  %115 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !7725
  %incdec.ptr99 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %115, i32 1, !dbg !7725
  store %union.df_ref_d** %incdec.ptr99, %union.df_ref_d*** %def_rec, align 8, !dbg !7725
  br label %for.cond67, !dbg !7726, !llvm.loop !7727

for.end100:                                       ; preds = %for.cond67
  %116 = load %struct.df*, %struct.df** @df, align 8, !dbg !7729
  %insns101 = getelementptr inbounds %struct.df, %struct.df* %116, i32 0, i32 10, !dbg !7729
  %117 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns101, align 8, !dbg !7729
  %118 = load i32, i32* %uid, align 4, !dbg !7729
  %idxprom102 = zext i32 %118 to i64, !dbg !7729
  %arrayidx103 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %117, i64 %idxprom102, !dbg !7729
  %119 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx103, align 8, !dbg !7729
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %119, i32 0, i32 2, !dbg !7729
  %120 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !7729
  store %union.df_ref_d** %120, %union.df_ref_d*** %use_rec, align 8, !dbg !7731
  br label %for.cond104, !dbg !7732

for.cond104:                                      ; preds = %for.inc131, %for.end100
  %121 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !7733
  %122 = load %union.df_ref_d*, %union.df_ref_d** %121, align 8, !dbg !7735
  %tobool105 = icmp ne %union.df_ref_d* %122, null, !dbg !7736
  br i1 %tobool105, label %for.body106, label %for.end133, !dbg !7736

for.body106:                                      ; preds = %for.cond104
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use107, metadata !7737, metadata !DIExpression()), !dbg !7739
  %123 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !7740
  %124 = load %union.df_ref_d*, %union.df_ref_d** %123, align 8, !dbg !7741
  store %union.df_ref_d* %124, %union.df_ref_d** %use107, align 8, !dbg !7739
  call void @llvm.dbg.declare(metadata i32* %uregno108, metadata !7742, metadata !DIExpression()), !dbg !7743
  %125 = load %union.df_ref_d*, %union.df_ref_d** %use107, align 8, !dbg !7744
  %base109 = bitcast %union.df_ref_d* %125 to %struct.df_base_ref*, !dbg !7744
  %regno110 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base109, i32 0, i32 6, !dbg !7744
  %126 = load i32, i32* %regno110, align 8, !dbg !7744
  store i32 %126, i32* %uregno108, align 4, !dbg !7743
  call void @llvm.dbg.declare(metadata i32* %start111, metadata !7745, metadata !DIExpression()), !dbg !7746
  %127 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7747
  %regno_start112 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %127, i32 0, i32 3, !dbg !7748
  %128 = load i32*, i32** %regno_start112, align 8, !dbg !7748
  %129 = load i32, i32* %uregno108, align 4, !dbg !7749
  %idxprom113 = zext i32 %129 to i64, !dbg !7747
  %arrayidx114 = getelementptr inbounds i32, i32* %128, i64 %idxprom113, !dbg !7747
  %130 = load i32, i32* %arrayidx114, align 4, !dbg !7747
  store i32 %130, i32* %start111, align 4, !dbg !7746
  call void @llvm.dbg.declare(metadata i32* %len115, metadata !7750, metadata !DIExpression()), !dbg !7751
  %131 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7752
  %regno_len116 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %131, i32 0, i32 4, !dbg !7753
  %132 = load i32*, i32** %regno_len116, align 8, !dbg !7753
  %133 = load i32, i32* %uregno108, align 4, !dbg !7754
  %idxprom117 = zext i32 %133 to i64, !dbg !7752
  %arrayidx118 = getelementptr inbounds i32, i32* %132, i64 %idxprom117, !dbg !7752
  %134 = load i32, i32* %arrayidx118, align 4, !dbg !7752
  store i32 %134, i32* %len115, align 4, !dbg !7751
  call void @llvm.dbg.declare(metadata i32* %sb119, metadata !7755, metadata !DIExpression()), !dbg !7756
  call void @llvm.dbg.declare(metadata i32* %lb120, metadata !7757, metadata !DIExpression()), !dbg !7758
  %135 = load %union.df_ref_d*, %union.df_ref_d** %use107, align 8, !dbg !7759
  %call121 = call zeroext i8 @df_compute_accessed_bytes(%union.df_ref_d* %135, i32 0, i32* %sb119, i32* %lb120), !dbg !7761
  %tobool122 = icmp ne i8 %call121, 0, !dbg !7761
  br i1 %tobool122, label %if.end126, label %if.then123, !dbg !7762

if.then123:                                       ; preds = %for.body106
  %136 = load i32, i32* %sb119, align 4, !dbg !7763
  %137 = load i32, i32* %start111, align 4, !dbg !7765
  %add124 = add i32 %137, %136, !dbg !7765
  store i32 %add124, i32* %start111, align 4, !dbg !7765
  %138 = load i32, i32* %lb120, align 4, !dbg !7766
  %139 = load i32, i32* %sb119, align 4, !dbg !7767
  %sub125 = sub i32 %138, %139, !dbg !7768
  store i32 %sub125, i32* %len115, align 4, !dbg !7769
  br label %if.end126, !dbg !7770

if.end126:                                        ; preds = %if.then123, %for.body106
  %140 = load i32, i32* %len115, align 4, !dbg !7771
  %tobool127 = icmp ne i32 %140, 0, !dbg !7771
  br i1 %tobool127, label %if.then128, label %if.end130, !dbg !7773

if.then128:                                       ; preds = %if.end126
  %141 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7774
  %use129 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %141, i32 0, i32 1, !dbg !7775
  %142 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use129, align 8, !dbg !7775
  %143 = load i32, i32* %start111, align 4, !dbg !7776
  %144 = load i32, i32* %len115, align 4, !dbg !7777
  call void @bitmap_set_range(%struct.bitmap_head_def* %142, i32 %143, i32 %144), !dbg !7778
  br label %if.end130, !dbg !7778

if.end130:                                        ; preds = %if.then128, %if.end126
  br label %for.inc131, !dbg !7779

for.inc131:                                       ; preds = %if.end130
  %145 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !7780
  %incdec.ptr132 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %145, i32 1, !dbg !7780
  store %union.df_ref_d** %incdec.ptr132, %union.df_ref_d*** %use_rec, align 8, !dbg !7780
  br label %for.cond104, !dbg !7781, !llvm.loop !7782

for.end133:                                       ; preds = %for.cond104
  br label %for.inc134, !dbg !7784

for.inc134:                                       ; preds = %for.end133, %if.then63
  %146 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7650
  %u135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1, !dbg !7650
  %fld136 = bitcast %union.u* %u135 to [1 x %union.rtunion_def]*, !dbg !7650
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i64 0, i64 1, !dbg !7650
  %rt_rtx138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtx_def**, !dbg !7650
  %147 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx138, align 8, !dbg !7650
  store %struct.rtx_def* %147, %struct.rtx_def** %insn, align 8, !dbg !7650
  br label %for.cond40, !dbg !7650, !llvm.loop !7785

for.end139:                                       ; preds = %land.end
  %148 = load i32, i32* %bb_index.addr, align 4, !dbg !7787
  %call140 = call %union.df_ref_d** @df_get_artificial_defs(i32 %148), !dbg !7789
  store %union.df_ref_d** %call140, %union.df_ref_d*** %def_rec, align 8, !dbg !7790
  br label %for.cond141, !dbg !7791

for.cond141:                                      ; preds = %for.inc165, %for.end139
  %149 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !7792
  %150 = load %union.df_ref_d*, %union.df_ref_d** %149, align 8, !dbg !7794
  %tobool142 = icmp ne %union.df_ref_d* %150, null, !dbg !7795
  br i1 %tobool142, label %for.body143, label %for.end167, !dbg !7795

for.body143:                                      ; preds = %for.cond141
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def144, metadata !7796, metadata !DIExpression()), !dbg !7798
  %151 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !7799
  %152 = load %union.df_ref_d*, %union.df_ref_d** %151, align 8, !dbg !7800
  store %union.df_ref_d* %152, %union.df_ref_d** %def144, align 8, !dbg !7798
  %153 = load %union.df_ref_d*, %union.df_ref_d** %def144, align 8, !dbg !7801
  %base145 = bitcast %union.df_ref_d* %153 to %struct.df_base_ref*, !dbg !7801
  %154 = bitcast %struct.df_base_ref* %base145 to i32*, !dbg !7801
  %bf.load146 = load i32, i32* %154, align 8, !dbg !7801
  %bf.ashr147 = ashr i32 %bf.load146, 16, !dbg !7801
  %and148 = and i32 %bf.ashr147, 2, !dbg !7803
  %tobool149 = icmp ne i32 %and148, 0, !dbg !7803
  br i1 %tobool149, label %if.then150, label %if.end164, !dbg !7804

if.then150:                                       ; preds = %for.body143
  call void @llvm.dbg.declare(metadata i32* %dregno151, metadata !7805, metadata !DIExpression()), !dbg !7807
  %155 = load %union.df_ref_d*, %union.df_ref_d** %def144, align 8, !dbg !7808
  %base152 = bitcast %union.df_ref_d* %155 to %struct.df_base_ref*, !dbg !7808
  %regno153 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base152, i32 0, i32 6, !dbg !7808
  %156 = load i32, i32* %regno153, align 8, !dbg !7808
  store i32 %156, i32* %dregno151, align 4, !dbg !7807
  call void @llvm.dbg.declare(metadata i32* %start154, metadata !7809, metadata !DIExpression()), !dbg !7810
  %157 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7811
  %regno_start155 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %157, i32 0, i32 3, !dbg !7812
  %158 = load i32*, i32** %regno_start155, align 8, !dbg !7812
  %159 = load i32, i32* %dregno151, align 4, !dbg !7813
  %idxprom156 = zext i32 %159 to i64, !dbg !7811
  %arrayidx157 = getelementptr inbounds i32, i32* %158, i64 %idxprom156, !dbg !7811
  %160 = load i32, i32* %arrayidx157, align 4, !dbg !7811
  store i32 %160, i32* %start154, align 4, !dbg !7810
  call void @llvm.dbg.declare(metadata i32* %len158, metadata !7814, metadata !DIExpression()), !dbg !7815
  %161 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %problem_data, align 8, !dbg !7816
  %regno_len159 = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %161, i32 0, i32 4, !dbg !7817
  %162 = load i32*, i32** %regno_len159, align 8, !dbg !7817
  %163 = load i32, i32* %dregno151, align 4, !dbg !7818
  %idxprom160 = zext i32 %163 to i64, !dbg !7816
  %arrayidx161 = getelementptr inbounds i32, i32* %162, i64 %idxprom160, !dbg !7816
  %164 = load i32, i32* %arrayidx161, align 4, !dbg !7816
  store i32 %164, i32* %len158, align 4, !dbg !7815
  %165 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7819
  %def162 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %165, i32 0, i32 0, !dbg !7820
  %166 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def162, align 8, !dbg !7820
  %167 = load i32, i32* %start154, align 4, !dbg !7821
  %168 = load i32, i32* %len158, align 4, !dbg !7822
  call void @bitmap_set_range(%struct.bitmap_head_def* %166, i32 %167, i32 %168), !dbg !7823
  %169 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %bb_info, align 8, !dbg !7824
  %use163 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %169, i32 0, i32 1, !dbg !7825
  %170 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use163, align 8, !dbg !7825
  %171 = load i32, i32* %start154, align 4, !dbg !7826
  %172 = load i32, i32* %len158, align 4, !dbg !7827
  call void @bitmap_clear_range(%struct.bitmap_head_def* %170, i32 %171, i32 %172), !dbg !7828
  br label %if.end164, !dbg !7829

if.end164:                                        ; preds = %if.then150, %for.body143
  br label %for.inc165, !dbg !7830

for.inc165:                                       ; preds = %if.end164
  %173 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !7831
  %incdec.ptr166 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %173, i32 1, !dbg !7831
  store %union.df_ref_d** %incdec.ptr166, %union.df_ref_d*** %def_rec, align 8, !dbg !7831
  br label %for.cond141, !dbg !7832, !llvm.loop !7833

for.end167:                                       ; preds = %for.cond141
  ret void, !dbg !7835
}

declare dso_local void @df_print_byte_regset(%struct._IO_FILE*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_note_alloc(%struct.bitmap_head_def* %all_blocks) #0 !dbg !7836 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !7837, metadata !DIExpression()), !dbg !7838
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7839
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !7839
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 6, !dbg !7839
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7839
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 9, !dbg !7840
  store i8 1, i8* %optional_p, align 2, !dbg !7841
  ret void, !dbg !7842
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_note_compute(%struct.bitmap_head_def* %all_blocks) #0 !dbg !7843 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %live = alloca %struct.bitmap_head_def*, align 8
  %do_not_gen = alloca %struct.bitmap_head_def*, align 8
  %artificial_uses = alloca %struct.bitmap_head_def*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !7844, metadata !DIExpression()), !dbg !7845
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !7846, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !7848, metadata !DIExpression()), !dbg !7849
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live, metadata !7850, metadata !DIExpression()), !dbg !7851
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !7852
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %live, align 8, !dbg !7851
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %do_not_gen, metadata !7853, metadata !DIExpression()), !dbg !7854
  %call1 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !7855
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** %do_not_gen, align 8, !dbg !7854
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %artificial_uses, metadata !7856, metadata !DIExpression()), !dbg !7857
  %call2 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @df_bitmap_obstack), !dbg !7858
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** %artificial_uses, align 8, !dbg !7857
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !7859
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %bb_index), !dbg !7859
  br label %for.cond, !dbg !7859

for.cond:                                         ; preds = %for.inc, %entry
  %call3 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !7861
  %tobool = icmp ne i8 %call3, 0, !dbg !7859
  br i1 %tobool, label %for.body, label %for.end, !dbg !7859

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %bb_index, align 4, !dbg !7863
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !7865
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen, align 8, !dbg !7866
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses, align 8, !dbg !7867
  call void @df_note_bb_compute(i32 %1, %struct.bitmap_head_def* %2, %struct.bitmap_head_def* %3, %struct.bitmap_head_def* %4), !dbg !7868
  br label %for.inc, !dbg !7869

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !7861
  br label %for.cond, !dbg !7861, !llvm.loop !7870

for.end:                                          ; preds = %for.cond
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !7872
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %5), !dbg !7872
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %live, align 8, !dbg !7872
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen, align 8, !dbg !7873
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %6), !dbg !7873
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %do_not_gen, align 8, !dbg !7873
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses, align 8, !dbg !7874
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %7), !dbg !7874
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %artificial_uses, align 8, !dbg !7874
  ret void, !dbg !7875
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_note_free() #0 !dbg !7876 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7877
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !7877
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 6, !dbg !7877
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7877
  %2 = bitcast %struct.dataflow* %1 to i8*, !dbg !7877
  call void @free(i8* %2), !dbg !7878
  ret void, !dbg !7879
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_note_bb_compute(i32 %bb_index, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def* %artificial_uses) #0 !dbg !7880 {
entry:
  %bb_index.addr = alloca i32, align 4
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %do_not_gen.addr = alloca %struct.bitmap_head_def*, align 8
  %artificial_uses.addr = alloca %struct.bitmap_head_def*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %use_rec = alloca %union.df_ref_d**, align 8
  %def = alloca %union.df_ref_d*, align 8
  %use = alloca %union.df_ref_d*, align 8
  %regno20 = alloca i32, align 4
  %uid = alloca i32, align 4
  %mws_rec = alloca %struct.df_mw_hardreg**, align 8
  %old_dead_notes = alloca %struct.rtx_def*, align 8
  %old_unused_notes = alloca %struct.rtx_def*, align 8
  %debug_insn = alloca i32, align 4
  %mws = alloca %struct.df_mw_hardreg*, align 8
  %def79 = alloca %union.df_ref_d*, align 8
  %dregno = alloca i32, align 4
  %mws111 = alloca %struct.df_mw_hardreg*, align 8
  %def129 = alloca %union.df_ref_d*, align 8
  %dregno130 = alloca i32, align 4
  %mws163 = alloca %struct.df_mw_hardreg*, align 8
  %really_add_notes = alloca i8, align 1
  %use190 = alloca %union.df_ref_d*, align 8
  %uregno = alloca i32, align 4
  %reg = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %next276 = alloca %struct.rtx_def*, align 8
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !7883, metadata !DIExpression()), !dbg !7884
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !7885, metadata !DIExpression()), !dbg !7886
  store %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def** %do_not_gen.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %do_not_gen.addr, metadata !7887, metadata !DIExpression()), !dbg !7888
  store %struct.bitmap_head_def* %artificial_uses, %struct.bitmap_head_def** %artificial_uses.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %artificial_uses.addr, metadata !7889, metadata !DIExpression()), !dbg !7890
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7891, metadata !DIExpression()), !dbg !7892
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7893
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !7893
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7893
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7893
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 2, !dbg !7893
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7893
  %tobool = icmp ne %struct.VEC_basic_block_gc* %2, null, !dbg !7893
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7893

cond.true:                                        ; preds = %entry
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7893
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, !dbg !7893
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !7893
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !7893
  %x_basic_block_info3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i32 0, i32 2, !dbg !7893
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info3, align 8, !dbg !7893
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i32 0, i32 0, !dbg !7893
  br label %cond.end, !dbg !7893

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7893

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7893
  %6 = load i32, i32* %bb_index.addr, align 4, !dbg !7893
  %call = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %6), !dbg !7893
  store %struct.basic_block_def* %call, %struct.basic_block_def** %bb, align 8, !dbg !7892
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !7894, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !7896, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %use_rec, metadata !7898, metadata !DIExpression()), !dbg !7899
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !7900
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7901
  %call4 = call %struct.bitmap_head_def* @df_get_live_out(%struct.basic_block_def* %8), !dbg !7902
  call void @bitmap_copy(%struct.bitmap_head_def* %7, %struct.bitmap_head_def* %call4), !dbg !7903
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !7904
  call void @bitmap_clear(%struct.bitmap_head_def* %9), !dbg !7905
  %10 = load i32, i32* %bb_index.addr, align 4, !dbg !7906
  %call5 = call %union.df_ref_d** @df_get_artificial_defs(i32 %10), !dbg !7908
  store %union.df_ref_d** %call5, %union.df_ref_d*** %def_rec, align 8, !dbg !7909
  br label %for.cond, !dbg !7910

for.cond:                                         ; preds = %for.inc, %cond.end
  %11 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !7911
  %12 = load %union.df_ref_d*, %union.df_ref_d** %11, align 8, !dbg !7913
  %tobool6 = icmp ne %union.df_ref_d* %12, null, !dbg !7914
  br i1 %tobool6, label %for.body, label %for.end, !dbg !7914

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !7915, metadata !DIExpression()), !dbg !7917
  %13 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !7918
  %14 = load %union.df_ref_d*, %union.df_ref_d** %13, align 8, !dbg !7919
  store %union.df_ref_d* %14, %union.df_ref_d** %def, align 8, !dbg !7917
  %15 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !7920
  %base7 = bitcast %union.df_ref_d* %15 to %struct.df_base_ref*, !dbg !7920
  %16 = bitcast %struct.df_base_ref* %base7 to i32*, !dbg !7920
  %bf.load = load i32, i32* %16, align 8, !dbg !7920
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !7920
  %and = and i32 %bf.ashr, 2, !dbg !7922
  %cmp = icmp eq i32 %and, 0, !dbg !7923
  br i1 %cmp, label %if.then, label %if.end, !dbg !7924

if.then:                                          ; preds = %for.body
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !7925
  %18 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !7926
  %base8 = bitcast %union.df_ref_d* %18 to %struct.df_base_ref*, !dbg !7926
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base8, i32 0, i32 6, !dbg !7926
  %19 = load i32, i32* %regno, align 8, !dbg !7926
  %call9 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %17, i32 %19), !dbg !7927
  br label %if.end, !dbg !7927

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7928

for.inc:                                          ; preds = %if.end
  %20 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !7929
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %20, i32 1, !dbg !7929
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !7929
  br label %for.cond, !dbg !7930, !llvm.loop !7931

for.end:                                          ; preds = %for.cond
  %21 = load i32, i32* %bb_index.addr, align 4, !dbg !7933
  %call10 = call %union.df_ref_d** @df_get_artificial_uses(i32 %21), !dbg !7935
  store %union.df_ref_d** %call10, %union.df_ref_d*** %use_rec, align 8, !dbg !7936
  br label %for.cond11, !dbg !7937

for.cond11:                                       ; preds = %for.inc26, %for.end
  %22 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !7938
  %23 = load %union.df_ref_d*, %union.df_ref_d** %22, align 8, !dbg !7940
  %tobool12 = icmp ne %union.df_ref_d* %23, null, !dbg !7941
  br i1 %tobool12, label %for.body13, label %for.end28, !dbg !7941

for.body13:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use, metadata !7942, metadata !DIExpression()), !dbg !7944
  %24 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !7945
  %25 = load %union.df_ref_d*, %union.df_ref_d** %24, align 8, !dbg !7946
  store %union.df_ref_d* %25, %union.df_ref_d** %use, align 8, !dbg !7944
  %26 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !7947
  %base14 = bitcast %union.df_ref_d* %26 to %struct.df_base_ref*, !dbg !7947
  %27 = bitcast %struct.df_base_ref* %base14 to i32*, !dbg !7947
  %bf.load15 = load i32, i32* %27, align 8, !dbg !7947
  %bf.ashr16 = ashr i32 %bf.load15, 16, !dbg !7947
  %and17 = and i32 %bf.ashr16, 2, !dbg !7949
  %cmp18 = icmp eq i32 %and17, 0, !dbg !7950
  br i1 %cmp18, label %if.then19, label %if.end25, !dbg !7951

if.then19:                                        ; preds = %for.body13
  call void @llvm.dbg.declare(metadata i32* %regno20, metadata !7952, metadata !DIExpression()), !dbg !7954
  %28 = load %union.df_ref_d*, %union.df_ref_d** %use, align 8, !dbg !7955
  %base21 = bitcast %union.df_ref_d* %28 to %struct.df_base_ref*, !dbg !7955
  %regno22 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base21, i32 0, i32 6, !dbg !7955
  %29 = load i32, i32* %regno22, align 8, !dbg !7955
  store i32 %29, i32* %regno20, align 4, !dbg !7954
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !7956
  %31 = load i32, i32* %regno20, align 4, !dbg !7957
  %call23 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %30, i32 %31), !dbg !7958
  %32 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !7959
  %33 = load i32, i32* %regno20, align 4, !dbg !7960
  %call24 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %32, i32 %33), !dbg !7961
  br label %if.end25, !dbg !7962

if.end25:                                         ; preds = %if.then19, %for.body13
  br label %for.inc26, !dbg !7963

for.inc26:                                        ; preds = %if.end25
  %34 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !7964
  %incdec.ptr27 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %34, i32 1, !dbg !7964
  store %union.df_ref_d** %incdec.ptr27, %union.df_ref_d*** %use_rec, align 8, !dbg !7964
  br label %for.cond11, !dbg !7965, !llvm.loop !7966

for.end28:                                        ; preds = %for.cond11
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7968
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i32 0, i32 7, !dbg !7968
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7968
  %36 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7968
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %36, i32 0, i32 1, !dbg !7968
  %37 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7968
  store %struct.rtx_def* %37, %struct.rtx_def** %insn, align 8, !dbg !7968
  br label %for.cond29, !dbg !7968

for.cond29:                                       ; preds = %for.inc296, %for.end28
  %38 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7970
  %tobool30 = icmp ne %struct.rtx_def* %38, null, !dbg !7970
  br i1 %tobool30, label %land.rhs, label %land.end, !dbg !7970

land.rhs:                                         ; preds = %for.cond29
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7970
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7970
  %il31 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %40, i32 0, i32 7, !dbg !7970
  %rtl32 = bitcast %union.basic_block_il_dependent* %il31 to %struct.rtl_bb_info**, !dbg !7970
  %41 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl32, align 8, !dbg !7970
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %41, i32 0, i32 0, !dbg !7970
  %42 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !7970
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !7970
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7970
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !7970
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7970
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7970
  %cmp33 = icmp ne %struct.rtx_def* %39, %43, !dbg !7970
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond29
  %44 = phi i1 [ false, %for.cond29 ], [ %cmp33, %land.rhs ], !dbg !7972
  br i1 %44, label %for.body34, label %for.end301, !dbg !7968

for.body34:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !7973, metadata !DIExpression()), !dbg !7975
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7976
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !7976
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !7976
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 0, !dbg !7976
  %rt_int = bitcast %union.rtunion_def* %arrayidx37 to i32*, !dbg !7976
  %46 = load i32, i32* %rt_int, align 8, !dbg !7976
  store i32 %46, i32* %uid, align 4, !dbg !7975
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg*** %mws_rec, metadata !7977, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_dead_notes, metadata !7979, metadata !DIExpression()), !dbg !7980
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_unused_notes, metadata !7981, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.declare(metadata i32* %debug_insn, metadata !7983, metadata !DIExpression()), !dbg !7984
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7985
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !7985
  %bf.load38 = load i32, i32* %48, align 8, !dbg !7985
  %bf.clear = and i32 %bf.load38, 65535, !dbg !7985
  %cmp39 = icmp eq i32 %bf.clear, 8, !dbg !7985
  br i1 %cmp39, label %if.end52, label %lor.lhs.false, !dbg !7985

lor.lhs.false:                                    ; preds = %for.body34
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7985
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !7985
  %bf.load40 = load i32, i32* %50, align 8, !dbg !7985
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !7985
  %cmp42 = icmp eq i32 %bf.clear41, 7, !dbg !7985
  br i1 %cmp42, label %if.end52, label %lor.lhs.false43, !dbg !7985

lor.lhs.false43:                                  ; preds = %lor.lhs.false
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7985
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !7985
  %bf.load44 = load i32, i32* %52, align 8, !dbg !7985
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !7985
  %cmp46 = icmp eq i32 %bf.clear45, 9, !dbg !7985
  br i1 %cmp46, label %if.end52, label %lor.lhs.false47, !dbg !7985

lor.lhs.false47:                                  ; preds = %lor.lhs.false43
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7985
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !7985
  %bf.load48 = load i32, i32* %54, align 8, !dbg !7985
  %bf.clear49 = and i32 %bf.load48, 65535, !dbg !7985
  %cmp50 = icmp eq i32 %bf.clear49, 10, !dbg !7985
  br i1 %cmp50, label %if.end52, label %if.then51, !dbg !7987

if.then51:                                        ; preds = %lor.lhs.false47
  br label %for.inc296, !dbg !7988

if.end52:                                         ; preds = %lor.lhs.false47, %lor.lhs.false43, %lor.lhs.false, %for.body34
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7989
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !7989
  %bf.load53 = load i32, i32* %56, align 8, !dbg !7989
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !7989
  %cmp55 = icmp eq i32 %bf.clear54, 7, !dbg !7989
  %conv = zext i1 %cmp55 to i32, !dbg !7989
  store i32 %conv, i32* %debug_insn, align 4, !dbg !7990
  %57 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen.addr, align 8, !dbg !7991
  call void @bitmap_clear(%struct.bitmap_head_def* %57), !dbg !7992
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7993
  call void @df_kill_notes(%struct.rtx_def* %58, %struct.rtx_def** %old_dead_notes, %struct.rtx_def** %old_unused_notes), !dbg !7994
  %59 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7995
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !7995
  %bf.load56 = load i32, i32* %60, align 8, !dbg !7995
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !7995
  %cmp58 = icmp eq i32 %bf.clear57, 10, !dbg !7995
  br i1 %cmp58, label %if.then60, label %if.else, !dbg !7997

if.then60:                                        ; preds = %if.end52
  %61 = load %struct.df*, %struct.df** @df, align 8, !dbg !7998
  %insns = getelementptr inbounds %struct.df, %struct.df* %61, i32 0, i32 10, !dbg !7998
  %62 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !7998
  %63 = load i32, i32* %uid, align 4, !dbg !7998
  %idxprom = zext i32 %63 to i64, !dbg !7998
  %arrayidx61 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %62, i64 %idxprom, !dbg !7998
  %64 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx61, align 8, !dbg !7998
  %mw_hardregs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %64, i32 0, i32 4, !dbg !7998
  %65 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs, align 8, !dbg !7998
  store %struct.df_mw_hardreg** %65, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8000
  br label %while.cond, !dbg !8001

while.cond:                                       ; preds = %if.end71, %if.then60
  %66 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8002
  %67 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %66, align 8, !dbg !8003
  %tobool62 = icmp ne %struct.df_mw_hardreg* %67, null, !dbg !8001
  br i1 %tobool62, label %while.body, label %while.end, !dbg !8001

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %mws, metadata !8004, metadata !DIExpression()), !dbg !8006
  %68 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8007
  %69 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %68, align 8, !dbg !8008
  store %struct.df_mw_hardreg* %69, %struct.df_mw_hardreg** %mws, align 8, !dbg !8006
  %70 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws, align 8, !dbg !8009
  %type = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %70, i32 0, i32 1, !dbg !8009
  %bf.load63 = load i32, i32* %type, align 8, !dbg !8009
  %bf.clear64 = and i32 %bf.load63, 65535, !dbg !8009
  %cmp65 = icmp eq i32 %bf.clear64, 0, !dbg !8009
  br i1 %cmp65, label %land.lhs.true, label %if.end71, !dbg !8011

land.lhs.true:                                    ; preds = %while.body
  %71 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws, align 8, !dbg !8012
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %71, i32 0, i32 2, !dbg !8013
  %72 = load i32, i32* %start_regno, align 4, !dbg !8013
  %call67 = call zeroext i8 @df_ignore_stack_reg(i32 %72), !dbg !8014
  %tobool68 = icmp ne i8 %call67, 0, !dbg !8014
  br i1 %tobool68, label %if.end71, label %if.then69, !dbg !8015

if.then69:                                        ; preds = %land.lhs.true
  %73 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8016
  %74 = load %struct.rtx_def*, %struct.rtx_def** %old_unused_notes, align 8, !dbg !8017
  %75 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws, align 8, !dbg !8018
  %76 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8019
  %77 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen.addr, align 8, !dbg !8020
  %78 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8021
  %call70 = call %struct.rtx_def* @df_set_unused_notes_for_mw(%struct.rtx_def* %73, %struct.rtx_def* %74, %struct.df_mw_hardreg* %75, %struct.bitmap_head_def* %76, %struct.bitmap_head_def* %77, %struct.bitmap_head_def* %78), !dbg !8022
  store %struct.rtx_def* %call70, %struct.rtx_def** %old_unused_notes, align 8, !dbg !8023
  br label %if.end71, !dbg !8024

if.end71:                                         ; preds = %if.then69, %land.lhs.true, %while.body
  %79 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8025
  %incdec.ptr72 = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %79, i32 1, !dbg !8025
  store %struct.df_mw_hardreg** %incdec.ptr72, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8025
  br label %while.cond, !dbg !8001, !llvm.loop !8026

while.end:                                        ; preds = %while.cond
  %80 = load %struct.df*, %struct.df** @df, align 8, !dbg !8028
  %insns73 = getelementptr inbounds %struct.df, %struct.df* %80, i32 0, i32 10, !dbg !8028
  %81 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns73, align 8, !dbg !8028
  %82 = load i32, i32* %uid, align 4, !dbg !8028
  %idxprom74 = zext i32 %82 to i64, !dbg !8028
  %arrayidx75 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %81, i64 %idxprom74, !dbg !8028
  %83 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx75, align 8, !dbg !8028
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %83, i32 0, i32 1, !dbg !8028
  %84 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !8028
  store %union.df_ref_d** %84, %union.df_ref_d*** %def_rec, align 8, !dbg !8030
  br label %for.cond76, !dbg !8031

for.cond76:                                       ; preds = %for.inc101, %while.end
  %85 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !8032
  %86 = load %union.df_ref_d*, %union.df_ref_d** %85, align 8, !dbg !8034
  %tobool77 = icmp ne %union.df_ref_d* %86, null, !dbg !8035
  br i1 %tobool77, label %for.body78, label %for.end103, !dbg !8035

for.body78:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def79, metadata !8036, metadata !DIExpression()), !dbg !8038
  %87 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !8039
  %88 = load %union.df_ref_d*, %union.df_ref_d** %87, align 8, !dbg !8040
  store %union.df_ref_d* %88, %union.df_ref_d** %def79, align 8, !dbg !8038
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !8041, metadata !DIExpression()), !dbg !8042
  %89 = load %union.df_ref_d*, %union.df_ref_d** %def79, align 8, !dbg !8043
  %base80 = bitcast %union.df_ref_d* %89 to %struct.df_base_ref*, !dbg !8043
  %regno81 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base80, i32 0, i32 6, !dbg !8043
  %90 = load i32, i32* %regno81, align 8, !dbg !8043
  store i32 %90, i32* %dregno, align 4, !dbg !8042
  %91 = load %union.df_ref_d*, %union.df_ref_d** %def79, align 8, !dbg !8044
  %base82 = bitcast %union.df_ref_d* %91 to %struct.df_base_ref*, !dbg !8044
  %92 = bitcast %struct.df_base_ref* %base82 to i32*, !dbg !8044
  %bf.load83 = load i32, i32* %92, align 8, !dbg !8044
  %bf.ashr84 = ashr i32 %bf.load83, 16, !dbg !8044
  %and85 = and i32 %bf.ashr84, 192, !dbg !8044
  %cmp86 = icmp ne i32 %and85, 0, !dbg !8044
  br i1 %cmp86, label %if.end91, label %if.then88, !dbg !8046

if.then88:                                        ; preds = %for.body78
  %93 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8047
  %94 = load %struct.rtx_def*, %struct.rtx_def** %old_unused_notes, align 8, !dbg !8049
  %95 = load %union.df_ref_d*, %union.df_ref_d** %def79, align 8, !dbg !8050
  %96 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8051
  %97 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8052
  %call89 = call %struct.rtx_def* @df_create_unused_note(%struct.rtx_def* %93, %struct.rtx_def* %94, %union.df_ref_d* %95, %struct.bitmap_head_def* %96, %struct.bitmap_head_def* %97), !dbg !8053
  store %struct.rtx_def* %call89, %struct.rtx_def** %old_unused_notes, align 8, !dbg !8054
  %98 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen.addr, align 8, !dbg !8055
  %99 = load i32, i32* %dregno, align 4, !dbg !8056
  %call90 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %98, i32 %99), !dbg !8057
  br label %if.end91, !dbg !8058

if.end91:                                         ; preds = %if.then88, %for.body78
  %100 = load %union.df_ref_d*, %union.df_ref_d** %def79, align 8, !dbg !8059
  %base92 = bitcast %union.df_ref_d* %100 to %struct.df_base_ref*, !dbg !8059
  %101 = bitcast %struct.df_base_ref* %base92 to i32*, !dbg !8059
  %bf.load93 = load i32, i32* %101, align 8, !dbg !8059
  %bf.ashr94 = ashr i32 %bf.load93, 16, !dbg !8059
  %and95 = and i32 %bf.ashr94, 17, !dbg !8059
  %cmp96 = icmp ne i32 %and95, 0, !dbg !8059
  br i1 %cmp96, label %if.end100, label %if.then98, !dbg !8061

if.then98:                                        ; preds = %if.end91
  %102 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8062
  %103 = load i32, i32* %dregno, align 4, !dbg !8063
  %call99 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %102, i32 %103), !dbg !8064
  br label %if.end100, !dbg !8064

if.end100:                                        ; preds = %if.then98, %if.end91
  br label %for.inc101, !dbg !8065

for.inc101:                                       ; preds = %if.end100
  %104 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !8066
  %incdec.ptr102 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %104, i32 1, !dbg !8066
  store %union.df_ref_d** %incdec.ptr102, %union.df_ref_d*** %def_rec, align 8, !dbg !8066
  br label %for.cond76, !dbg !8067, !llvm.loop !8068

for.end103:                                       ; preds = %for.cond76
  br label %if.end155, !dbg !8070

if.else:                                          ; preds = %if.end52
  %105 = load %struct.df*, %struct.df** @df, align 8, !dbg !8071
  %insns104 = getelementptr inbounds %struct.df, %struct.df* %105, i32 0, i32 10, !dbg !8071
  %106 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns104, align 8, !dbg !8071
  %107 = load i32, i32* %uid, align 4, !dbg !8071
  %idxprom105 = zext i32 %107 to i64, !dbg !8071
  %arrayidx106 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %106, i64 %idxprom105, !dbg !8071
  %108 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx106, align 8, !dbg !8071
  %mw_hardregs107 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %108, i32 0, i32 4, !dbg !8071
  %109 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs107, align 8, !dbg !8071
  store %struct.df_mw_hardreg** %109, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8073
  br label %while.cond108, !dbg !8074

while.cond108:                                    ; preds = %if.end119, %if.else
  %110 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8075
  %111 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %110, align 8, !dbg !8076
  %tobool109 = icmp ne %struct.df_mw_hardreg* %111, null, !dbg !8074
  br i1 %tobool109, label %while.body110, label %while.end121, !dbg !8074

while.body110:                                    ; preds = %while.cond108
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %mws111, metadata !8077, metadata !DIExpression()), !dbg !8079
  %112 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8080
  %113 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %112, align 8, !dbg !8081
  store %struct.df_mw_hardreg* %113, %struct.df_mw_hardreg** %mws111, align 8, !dbg !8079
  %114 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws111, align 8, !dbg !8082
  %type112 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %114, i32 0, i32 1, !dbg !8082
  %bf.load113 = load i32, i32* %type112, align 8, !dbg !8082
  %bf.clear114 = and i32 %bf.load113, 65535, !dbg !8082
  %cmp115 = icmp eq i32 %bf.clear114, 0, !dbg !8082
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !8084

if.then117:                                       ; preds = %while.body110
  %115 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8085
  %116 = load %struct.rtx_def*, %struct.rtx_def** %old_unused_notes, align 8, !dbg !8086
  %117 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws111, align 8, !dbg !8087
  %118 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8088
  %119 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen.addr, align 8, !dbg !8089
  %120 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8090
  %call118 = call %struct.rtx_def* @df_set_unused_notes_for_mw(%struct.rtx_def* %115, %struct.rtx_def* %116, %struct.df_mw_hardreg* %117, %struct.bitmap_head_def* %118, %struct.bitmap_head_def* %119, %struct.bitmap_head_def* %120), !dbg !8091
  store %struct.rtx_def* %call118, %struct.rtx_def** %old_unused_notes, align 8, !dbg !8092
  br label %if.end119, !dbg !8093

if.end119:                                        ; preds = %if.then117, %while.body110
  %121 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8094
  %incdec.ptr120 = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %121, i32 1, !dbg !8094
  store %struct.df_mw_hardreg** %incdec.ptr120, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8094
  br label %while.cond108, !dbg !8074, !llvm.loop !8095

while.end121:                                     ; preds = %while.cond108
  %122 = load %struct.df*, %struct.df** @df, align 8, !dbg !8097
  %insns122 = getelementptr inbounds %struct.df, %struct.df* %122, i32 0, i32 10, !dbg !8097
  %123 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns122, align 8, !dbg !8097
  %124 = load i32, i32* %uid, align 4, !dbg !8097
  %idxprom123 = zext i32 %124 to i64, !dbg !8097
  %arrayidx124 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %123, i64 %idxprom123, !dbg !8097
  %125 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx124, align 8, !dbg !8097
  %defs125 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %125, i32 0, i32 1, !dbg !8097
  %126 = load %union.df_ref_d**, %union.df_ref_d*** %defs125, align 8, !dbg !8097
  store %union.df_ref_d** %126, %union.df_ref_d*** %def_rec, align 8, !dbg !8099
  br label %for.cond126, !dbg !8100

for.cond126:                                      ; preds = %for.inc152, %while.end121
  %127 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !8101
  %128 = load %union.df_ref_d*, %union.df_ref_d** %127, align 8, !dbg !8103
  %tobool127 = icmp ne %union.df_ref_d* %128, null, !dbg !8104
  br i1 %tobool127, label %for.body128, label %for.end154, !dbg !8104

for.body128:                                      ; preds = %for.cond126
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def129, metadata !8105, metadata !DIExpression()), !dbg !8107
  %129 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !8108
  %130 = load %union.df_ref_d*, %union.df_ref_d** %129, align 8, !dbg !8109
  store %union.df_ref_d* %130, %union.df_ref_d** %def129, align 8, !dbg !8107
  call void @llvm.dbg.declare(metadata i32* %dregno130, metadata !8110, metadata !DIExpression()), !dbg !8111
  %131 = load %union.df_ref_d*, %union.df_ref_d** %def129, align 8, !dbg !8112
  %base131 = bitcast %union.df_ref_d* %131 to %struct.df_base_ref*, !dbg !8112
  %regno132 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base131, i32 0, i32 6, !dbg !8112
  %132 = load i32, i32* %regno132, align 8, !dbg !8112
  store i32 %132, i32* %dregno130, align 4, !dbg !8111
  %133 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8113
  %134 = load %struct.rtx_def*, %struct.rtx_def** %old_unused_notes, align 8, !dbg !8114
  %135 = load %union.df_ref_d*, %union.df_ref_d** %def129, align 8, !dbg !8115
  %136 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8116
  %137 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8117
  %call133 = call %struct.rtx_def* @df_create_unused_note(%struct.rtx_def* %133, %struct.rtx_def* %134, %union.df_ref_d* %135, %struct.bitmap_head_def* %136, %struct.bitmap_head_def* %137), !dbg !8118
  store %struct.rtx_def* %call133, %struct.rtx_def** %old_unused_notes, align 8, !dbg !8119
  %138 = load %union.df_ref_d*, %union.df_ref_d** %def129, align 8, !dbg !8120
  %base134 = bitcast %union.df_ref_d* %138 to %struct.df_base_ref*, !dbg !8120
  %139 = bitcast %struct.df_base_ref* %base134 to i32*, !dbg !8120
  %bf.load135 = load i32, i32* %139, align 8, !dbg !8120
  %bf.ashr136 = ashr i32 %bf.load135, 16, !dbg !8120
  %and137 = and i32 %bf.ashr136, 192, !dbg !8120
  %cmp138 = icmp ne i32 %and137, 0, !dbg !8120
  br i1 %cmp138, label %if.end142, label %if.then140, !dbg !8122

if.then140:                                       ; preds = %for.body128
  %140 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen.addr, align 8, !dbg !8123
  %141 = load i32, i32* %dregno130, align 4, !dbg !8124
  %call141 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %140, i32 %141), !dbg !8125
  br label %if.end142, !dbg !8125

if.end142:                                        ; preds = %if.then140, %for.body128
  %142 = load %union.df_ref_d*, %union.df_ref_d** %def129, align 8, !dbg !8126
  %base143 = bitcast %union.df_ref_d* %142 to %struct.df_base_ref*, !dbg !8126
  %143 = bitcast %struct.df_base_ref* %base143 to i32*, !dbg !8126
  %bf.load144 = load i32, i32* %143, align 8, !dbg !8126
  %bf.ashr145 = ashr i32 %bf.load144, 16, !dbg !8126
  %and146 = and i32 %bf.ashr145, 17, !dbg !8126
  %cmp147 = icmp ne i32 %and146, 0, !dbg !8126
  br i1 %cmp147, label %if.end151, label %if.then149, !dbg !8128

if.then149:                                       ; preds = %if.end142
  %144 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8129
  %145 = load i32, i32* %dregno130, align 4, !dbg !8130
  %call150 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %144, i32 %145), !dbg !8131
  br label %if.end151, !dbg !8131

if.end151:                                        ; preds = %if.then149, %if.end142
  br label %for.inc152, !dbg !8132

for.inc152:                                       ; preds = %if.end151
  %146 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !8133
  %incdec.ptr153 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %146, i32 1, !dbg !8133
  store %union.df_ref_d** %incdec.ptr153, %union.df_ref_d*** %def_rec, align 8, !dbg !8133
  br label %for.cond126, !dbg !8134, !llvm.loop !8135

for.end154:                                       ; preds = %for.cond126
  br label %if.end155

if.end155:                                        ; preds = %for.end154, %for.end103
  %147 = load %struct.df*, %struct.df** @df, align 8, !dbg !8137
  %insns156 = getelementptr inbounds %struct.df, %struct.df* %147, i32 0, i32 10, !dbg !8137
  %148 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns156, align 8, !dbg !8137
  %149 = load i32, i32* %uid, align 4, !dbg !8137
  %idxprom157 = zext i32 %149 to i64, !dbg !8137
  %arrayidx158 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %148, i64 %idxprom157, !dbg !8137
  %150 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx158, align 8, !dbg !8137
  %mw_hardregs159 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %150, i32 0, i32 4, !dbg !8137
  %151 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs159, align 8, !dbg !8137
  store %struct.df_mw_hardreg** %151, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8138
  br label %while.cond160, !dbg !8139

while.cond160:                                    ; preds = %if.end181, %if.end155
  %152 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8140
  %153 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %152, align 8, !dbg !8141
  %tobool161 = icmp ne %struct.df_mw_hardreg* %153, null, !dbg !8139
  br i1 %tobool161, label %while.body162, label %while.end183, !dbg !8139

while.body162:                                    ; preds = %while.cond160
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %mws163, metadata !8142, metadata !DIExpression()), !dbg !8144
  %154 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8145
  %155 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %154, align 8, !dbg !8146
  store %struct.df_mw_hardreg* %155, %struct.df_mw_hardreg** %mws163, align 8, !dbg !8144
  %156 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws163, align 8, !dbg !8147
  %type164 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %156, i32 0, i32 1, !dbg !8147
  %bf.load165 = load i32, i32* %type164, align 8, !dbg !8147
  %bf.clear166 = and i32 %bf.load165, 65535, !dbg !8147
  %cmp167 = icmp eq i32 %bf.clear166, 0, !dbg !8147
  br i1 %cmp167, label %land.lhs.true169, label %if.end181, !dbg !8149

land.lhs.true169:                                 ; preds = %while.body162
  %157 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws163, align 8, !dbg !8150
  %start_regno170 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %157, i32 0, i32 2, !dbg !8151
  %158 = load i32, i32* %start_regno170, align 4, !dbg !8151
  %call171 = call zeroext i8 @df_ignore_stack_reg(i32 %158), !dbg !8152
  %tobool172 = icmp ne i8 %call171, 0, !dbg !8152
  br i1 %tobool172, label %if.end181, label %if.then173, !dbg !8153

if.then173:                                       ; preds = %land.lhs.true169
  call void @llvm.dbg.declare(metadata i8* %really_add_notes, metadata !8154, metadata !DIExpression()), !dbg !8156
  %159 = load i32, i32* %debug_insn, align 4, !dbg !8157
  %cmp174 = icmp ne i32 %159, 0, !dbg !8158
  %conv175 = zext i1 %cmp174 to i32, !dbg !8158
  %conv176 = trunc i32 %conv175 to i8, !dbg !8157
  store i8 %conv176, i8* %really_add_notes, align 1, !dbg !8156
  %160 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8159
  %161 = load %struct.rtx_def*, %struct.rtx_def** %old_dead_notes, align 8, !dbg !8160
  %162 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws163, align 8, !dbg !8161
  %163 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8162
  %164 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen.addr, align 8, !dbg !8163
  %165 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8164
  %call177 = call %struct.rtx_def* @df_set_dead_notes_for_mw(%struct.rtx_def* %160, %struct.rtx_def* %161, %struct.df_mw_hardreg* %162, %struct.bitmap_head_def* %163, %struct.bitmap_head_def* %164, %struct.bitmap_head_def* %165, i8* %really_add_notes), !dbg !8165
  store %struct.rtx_def* %call177, %struct.rtx_def** %old_dead_notes, align 8, !dbg !8166
  %166 = load i8, i8* %really_add_notes, align 1, !dbg !8167
  %tobool178 = icmp ne i8 %166, 0, !dbg !8167
  br i1 %tobool178, label %if.then179, label %if.end180, !dbg !8169

if.then179:                                       ; preds = %if.then173
  store i32 -1, i32* %debug_insn, align 4, !dbg !8170
  br label %if.end180, !dbg !8171

if.end180:                                        ; preds = %if.then179, %if.then173
  br label %if.end181, !dbg !8172

if.end181:                                        ; preds = %if.end180, %land.lhs.true169, %while.body162
  %167 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8173
  %incdec.ptr182 = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %167, i32 1, !dbg !8173
  store %struct.df_mw_hardreg** %incdec.ptr182, %struct.df_mw_hardreg*** %mws_rec, align 8, !dbg !8173
  br label %while.cond160, !dbg !8139, !llvm.loop !8174

while.end183:                                     ; preds = %while.cond160
  %168 = load %struct.df*, %struct.df** @df, align 8, !dbg !8176
  %insns184 = getelementptr inbounds %struct.df, %struct.df* %168, i32 0, i32 10, !dbg !8176
  %169 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns184, align 8, !dbg !8176
  %170 = load i32, i32* %uid, align 4, !dbg !8176
  %idxprom185 = zext i32 %170 to i64, !dbg !8176
  %arrayidx186 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %169, i64 %idxprom185, !dbg !8176
  %171 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx186, align 8, !dbg !8176
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %171, i32 0, i32 2, !dbg !8176
  %172 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !8176
  store %union.df_ref_d** %172, %union.df_ref_d*** %use_rec, align 8, !dbg !8178
  br label %for.cond187, !dbg !8179

for.cond187:                                      ; preds = %for.inc262, %while.end183
  %173 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !8180
  %174 = load %union.df_ref_d*, %union.df_ref_d** %173, align 8, !dbg !8182
  %tobool188 = icmp ne %union.df_ref_d* %174, null, !dbg !8183
  br i1 %tobool188, label %for.body189, label %for.end264, !dbg !8183

for.body189:                                      ; preds = %for.cond187
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %use190, metadata !8184, metadata !DIExpression()), !dbg !8186
  %175 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !8187
  %176 = load %union.df_ref_d*, %union.df_ref_d** %175, align 8, !dbg !8188
  store %union.df_ref_d* %176, %union.df_ref_d** %use190, align 8, !dbg !8186
  call void @llvm.dbg.declare(metadata i32* %uregno, metadata !8189, metadata !DIExpression()), !dbg !8190
  %177 = load %union.df_ref_d*, %union.df_ref_d** %use190, align 8, !dbg !8191
  %base191 = bitcast %union.df_ref_d* %177 to %struct.df_base_ref*, !dbg !8191
  %regno192 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base191, i32 0, i32 6, !dbg !8191
  %178 = load i32, i32* %regno192, align 8, !dbg !8191
  store i32 %178, i32* %uregno, align 4, !dbg !8190
  %179 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8192
  %180 = load i32, i32* %uregno, align 4, !dbg !8194
  %call193 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %179, i32 %180), !dbg !8195
  %tobool194 = icmp ne i32 %call193, 0, !dbg !8195
  br i1 %tobool194, label %if.end261, label %if.then195, !dbg !8196

if.then195:                                       ; preds = %for.body189
  %181 = load i32, i32* %debug_insn, align 4, !dbg !8197
  %tobool196 = icmp ne i32 %181, 0, !dbg !8197
  br i1 %tobool196, label %if.then197, label %if.end198, !dbg !8200

if.then197:                                       ; preds = %if.then195
  store i32 -1, i32* %debug_insn, align 4, !dbg !8201
  br label %for.end264, !dbg !8203

if.end198:                                        ; preds = %if.then195
  %182 = load %union.df_ref_d*, %union.df_ref_d** %use190, align 8, !dbg !8204
  %base199 = bitcast %union.df_ref_d* %182 to %struct.df_base_ref*, !dbg !8204
  %183 = bitcast %struct.df_base_ref* %base199 to i32*, !dbg !8204
  %bf.load200 = load i32, i32* %183, align 8, !dbg !8204
  %bf.ashr201 = ashr i32 %bf.load200, 16, !dbg !8204
  %and202 = and i32 %bf.ashr201, 4096, !dbg !8206
  %tobool203 = icmp ne i32 %and202, 0, !dbg !8206
  br i1 %tobool203, label %if.end259, label %land.lhs.true204, !dbg !8207

land.lhs.true204:                                 ; preds = %if.end198
  %184 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen.addr, align 8, !dbg !8208
  %185 = load i32, i32* %uregno, align 4, !dbg !8209
  %call205 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %184, i32 %185), !dbg !8210
  %tobool206 = icmp ne i32 %call205, 0, !dbg !8210
  br i1 %tobool206, label %if.end259, label %land.lhs.true207, !dbg !8211

land.lhs.true207:                                 ; preds = %land.lhs.true204
  %186 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8212
  %187 = load i32, i32* %uregno, align 4, !dbg !8213
  %call208 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %186, i32 %187), !dbg !8214
  %tobool209 = icmp ne i32 %call208, 0, !dbg !8214
  br i1 %tobool209, label %if.end259, label %land.lhs.true210, !dbg !8215

land.lhs.true210:                                 ; preds = %land.lhs.true207
  %188 = load %union.df_ref_d*, %union.df_ref_d** %use190, align 8, !dbg !8216
  %base211 = bitcast %union.df_ref_d* %188 to %struct.df_base_ref*, !dbg !8216
  %189 = bitcast %struct.df_base_ref* %base211 to i32*, !dbg !8216
  %bf.load212 = load i32, i32* %189, align 8, !dbg !8216
  %bf.ashr213 = ashr i32 %bf.load212, 16, !dbg !8216
  %and214 = and i32 %bf.ashr213, 32, !dbg !8217
  %tobool215 = icmp ne i32 %and214, 0, !dbg !8217
  br i1 %tobool215, label %if.end259, label %land.lhs.true216, !dbg !8218

land.lhs.true216:                                 ; preds = %land.lhs.true210
  %190 = load i32, i32* %uregno, align 4, !dbg !8219
  %call217 = call zeroext i8 @df_ignore_stack_reg(i32 %190), !dbg !8220
  %tobool218 = icmp ne i8 %call217, 0, !dbg !8220
  br i1 %tobool218, label %if.end259, label %if.then219, !dbg !8221

if.then219:                                       ; preds = %land.lhs.true216
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg, metadata !8222, metadata !DIExpression()), !dbg !8224
  %191 = load %union.df_ref_d*, %union.df_ref_d** %use190, align 8, !dbg !8225
  %base220 = bitcast %union.df_ref_d* %191 to %struct.df_base_ref*, !dbg !8225
  %192 = bitcast %struct.df_base_ref* %base220 to i32*, !dbg !8225
  %bf.load221 = load i32, i32* %192, align 8, !dbg !8225
  %bf.clear222 = and i32 %bf.load221, 255, !dbg !8225
  %cmp223 = icmp eq i32 %bf.clear222, 2, !dbg !8225
  br i1 %cmp223, label %cond.true231, label %lor.lhs.false225, !dbg !8225

lor.lhs.false225:                                 ; preds = %if.then219
  %193 = load %union.df_ref_d*, %union.df_ref_d** %use190, align 8, !dbg !8225
  %base226 = bitcast %union.df_ref_d* %193 to %struct.df_base_ref*, !dbg !8225
  %194 = bitcast %struct.df_base_ref* %base226 to i32*, !dbg !8225
  %bf.load227 = load i32, i32* %194, align 8, !dbg !8225
  %bf.clear228 = and i32 %bf.load227, 255, !dbg !8225
  %cmp229 = icmp eq i32 %bf.clear228, 3, !dbg !8225
  br i1 %cmp229, label %cond.true231, label %cond.false233, !dbg !8226

cond.true231:                                     ; preds = %lor.lhs.false225, %if.then219
  %195 = load %union.df_ref_d*, %union.df_ref_d** %use190, align 8, !dbg !8225
  %regular_ref = bitcast %union.df_ref_d* %195 to %struct.df_regular_ref*, !dbg !8225
  %loc = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref, i32 0, i32 1, !dbg !8225
  %196 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !8225
  %tobool232 = icmp ne %struct.rtx_def** %196, null, !dbg !8225
  br i1 %tobool232, label %cond.true234, label %cond.false253, !dbg !8225

cond.false233:                                    ; preds = %lor.lhs.false225
  br i1 false, label %cond.true234, label %cond.false253, !dbg !8226

cond.true234:                                     ; preds = %cond.false233, %cond.true231
  %197 = load %union.df_ref_d*, %union.df_ref_d** %use190, align 8, !dbg !8227
  %regular_ref235 = bitcast %union.df_ref_d* %197 to %struct.df_regular_ref*, !dbg !8227
  %loc236 = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref235, i32 0, i32 1, !dbg !8227
  %198 = load %struct.rtx_def**, %struct.rtx_def*** %loc236, align 8, !dbg !8227
  %199 = load %struct.rtx_def*, %struct.rtx_def** %198, align 8, !dbg !8227
  %200 = bitcast %struct.rtx_def* %199 to i32*, !dbg !8227
  %bf.load237 = load i32, i32* %200, align 8, !dbg !8227
  %bf.clear238 = and i32 %bf.load237, 65535, !dbg !8227
  %cmp239 = icmp eq i32 %bf.clear238, 39, !dbg !8227
  br i1 %cmp239, label %cond.true241, label %cond.false248, !dbg !8227

cond.true241:                                     ; preds = %cond.true234
  %201 = load %union.df_ref_d*, %union.df_ref_d** %use190, align 8, !dbg !8227
  %regular_ref242 = bitcast %union.df_ref_d* %201 to %struct.df_regular_ref*, !dbg !8227
  %loc243 = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref242, i32 0, i32 1, !dbg !8227
  %202 = load %struct.rtx_def**, %struct.rtx_def*** %loc243, align 8, !dbg !8227
  %203 = load %struct.rtx_def*, %struct.rtx_def** %202, align 8, !dbg !8227
  %u244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1, !dbg !8227
  %fld245 = bitcast %union.u* %u244 to [1 x %union.rtunion_def]*, !dbg !8227
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i64 0, i64 0, !dbg !8227
  %rt_rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**, !dbg !8227
  br label %cond.end251, !dbg !8227

cond.false248:                                    ; preds = %cond.true234
  %204 = load %union.df_ref_d*, %union.df_ref_d** %use190, align 8, !dbg !8227
  %regular_ref249 = bitcast %union.df_ref_d* %204 to %struct.df_regular_ref*, !dbg !8227
  %loc250 = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref249, i32 0, i32 1, !dbg !8227
  %205 = load %struct.rtx_def**, %struct.rtx_def*** %loc250, align 8, !dbg !8227
  br label %cond.end251, !dbg !8227

cond.end251:                                      ; preds = %cond.false248, %cond.true241
  %cond252 = phi %struct.rtx_def** [ %rt_rtx247, %cond.true241 ], [ %205, %cond.false248 ], !dbg !8227
  %206 = load %struct.rtx_def*, %struct.rtx_def** %cond252, align 8, !dbg !8228
  br label %cond.end256, !dbg !8226

cond.false253:                                    ; preds = %cond.false233, %cond.true231
  %207 = load %union.df_ref_d*, %union.df_ref_d** %use190, align 8, !dbg !8229
  %base254 = bitcast %union.df_ref_d* %207 to %struct.df_base_ref*, !dbg !8229
  %reg255 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base254, i32 0, i32 1, !dbg !8229
  %208 = load %struct.rtx_def*, %struct.rtx_def** %reg255, align 8, !dbg !8229
  br label %cond.end256, !dbg !8226

cond.end256:                                      ; preds = %cond.false253, %cond.end251
  %cond257 = phi %struct.rtx_def* [ %206, %cond.end251 ], [ %208, %cond.false253 ], !dbg !8226
  store %struct.rtx_def* %cond257, %struct.rtx_def** %reg, align 8, !dbg !8224
  %209 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8230
  %210 = load %struct.rtx_def*, %struct.rtx_def** %old_dead_notes, align 8, !dbg !8231
  %211 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !8232
  %call258 = call %struct.rtx_def* @df_set_note(i32 1, %struct.rtx_def* %209, %struct.rtx_def* %210, %struct.rtx_def* %211), !dbg !8233
  store %struct.rtx_def* %call258, %struct.rtx_def** %old_dead_notes, align 8, !dbg !8234
  br label %if.end259, !dbg !8235

if.end259:                                        ; preds = %cond.end256, %land.lhs.true216, %land.lhs.true210, %land.lhs.true207, %land.lhs.true204, %if.end198
  %212 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8236
  %213 = load i32, i32* %uregno, align 4, !dbg !8237
  %call260 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %212, i32 %213), !dbg !8238
  br label %if.end261, !dbg !8239

if.end261:                                        ; preds = %if.end259, %for.body189
  br label %for.inc262, !dbg !8240

for.inc262:                                       ; preds = %if.end261
  %214 = load %union.df_ref_d**, %union.df_ref_d*** %use_rec, align 8, !dbg !8241
  %incdec.ptr263 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %214, i32 1, !dbg !8241
  store %union.df_ref_d** %incdec.ptr263, %union.df_ref_d*** %use_rec, align 8, !dbg !8241
  br label %for.cond187, !dbg !8242, !llvm.loop !8243

for.end264:                                       ; preds = %if.then197, %for.cond187
  br label %while.cond265, !dbg !8245

while.cond265:                                    ; preds = %while.body267, %for.end264
  %215 = load %struct.rtx_def*, %struct.rtx_def** %old_unused_notes, align 8, !dbg !8246
  %tobool266 = icmp ne %struct.rtx_def* %215, null, !dbg !8245
  br i1 %tobool266, label %while.body267, label %while.end272, !dbg !8245

while.body267:                                    ; preds = %while.cond265
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !8247, metadata !DIExpression()), !dbg !8249
  %216 = load %struct.rtx_def*, %struct.rtx_def** %old_unused_notes, align 8, !dbg !8250
  %u268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1, !dbg !8250
  %fld269 = bitcast %union.u* %u268 to [1 x %union.rtunion_def]*, !dbg !8250
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i64 0, i64 1, !dbg !8250
  %rt_rtx271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtx_def**, !dbg !8250
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx271, align 8, !dbg !8250
  store %struct.rtx_def* %217, %struct.rtx_def** %next, align 8, !dbg !8249
  %218 = load %struct.rtx_def*, %struct.rtx_def** %old_unused_notes, align 8, !dbg !8251
  call void @free_EXPR_LIST_node(%struct.rtx_def* %218), !dbg !8252
  %219 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !8253
  store %struct.rtx_def* %219, %struct.rtx_def** %old_unused_notes, align 8, !dbg !8254
  br label %while.cond265, !dbg !8245, !llvm.loop !8255

while.end272:                                     ; preds = %while.cond265
  br label %while.cond273, !dbg !8257

while.cond273:                                    ; preds = %while.body275, %while.end272
  %220 = load %struct.rtx_def*, %struct.rtx_def** %old_dead_notes, align 8, !dbg !8258
  %tobool274 = icmp ne %struct.rtx_def* %220, null, !dbg !8257
  br i1 %tobool274, label %while.body275, label %while.end281, !dbg !8257

while.body275:                                    ; preds = %while.cond273
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next276, metadata !8259, metadata !DIExpression()), !dbg !8261
  %221 = load %struct.rtx_def*, %struct.rtx_def** %old_dead_notes, align 8, !dbg !8262
  %u277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1, !dbg !8262
  %fld278 = bitcast %union.u* %u277 to [1 x %union.rtunion_def]*, !dbg !8262
  %arrayidx279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i64 0, i64 1, !dbg !8262
  %rt_rtx280 = bitcast %union.rtunion_def* %arrayidx279 to %struct.rtx_def**, !dbg !8262
  %222 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx280, align 8, !dbg !8262
  store %struct.rtx_def* %222, %struct.rtx_def** %next276, align 8, !dbg !8261
  %223 = load %struct.rtx_def*, %struct.rtx_def** %old_dead_notes, align 8, !dbg !8263
  call void @free_EXPR_LIST_node(%struct.rtx_def* %223), !dbg !8264
  %224 = load %struct.rtx_def*, %struct.rtx_def** %next276, align 8, !dbg !8265
  store %struct.rtx_def* %224, %struct.rtx_def** %old_dead_notes, align 8, !dbg !8266
  br label %while.cond273, !dbg !8257, !llvm.loop !8267

while.end281:                                     ; preds = %while.cond273
  %225 = load i32, i32* %debug_insn, align 4, !dbg !8269
  %cmp282 = icmp eq i32 %225, -1, !dbg !8271
  br i1 %cmp282, label %if.then284, label %if.end295, !dbg !8272

if.then284:                                       ; preds = %while.end281
  %226 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8273
  %call285 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %226), !dbg !8273
  %227 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8275
  %u286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %227, i32 0, i32 1, !dbg !8275
  %fld287 = bitcast %union.u* %u286 to [1 x %union.rtunion_def]*, !dbg !8275
  %arrayidx288 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld287, i64 0, i64 5, !dbg !8275
  %rt_rtx289 = bitcast %union.rtunion_def* %arrayidx288 to %struct.rtx_def**, !dbg !8275
  %228 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx289, align 8, !dbg !8275
  %u290 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %228, i32 0, i32 1, !dbg !8275
  %fld291 = bitcast %union.u* %u290 to [1 x %union.rtunion_def]*, !dbg !8275
  %arrayidx292 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld291, i64 0, i64 1, !dbg !8275
  %rt_rtx293 = bitcast %union.rtunion_def* %arrayidx292 to %struct.rtx_def**, !dbg !8275
  store %struct.rtx_def* %call285, %struct.rtx_def** %rt_rtx293, align 8, !dbg !8276
  %229 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8277
  %call294 = call zeroext i8 @df_insn_rescan_debug_internal(%struct.rtx_def* %229), !dbg !8278
  br label %if.end295, !dbg !8279

if.end295:                                        ; preds = %if.then284, %while.end281
  br label %for.inc296, !dbg !8280

for.inc296:                                       ; preds = %if.end295, %if.then51
  %230 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7970
  %u297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1, !dbg !7970
  %fld298 = bitcast %union.u* %u297 to [1 x %union.rtunion_def]*, !dbg !7970
  %arrayidx299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld298, i64 0, i64 1, !dbg !7970
  %rt_rtx300 = bitcast %union.rtunion_def* %arrayidx299 to %struct.rtx_def**, !dbg !7970
  %231 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx300, align 8, !dbg !7970
  store %struct.rtx_def* %231, %struct.rtx_def** %insn, align 8, !dbg !7970
  br label %for.cond29, !dbg !7970, !llvm.loop !8281

for.end301:                                       ; preds = %land.end
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_kill_notes(%struct.rtx_def* %insn, %struct.rtx_def** %old_dead_notes, %struct.rtx_def** %old_unused_notes) #0 !dbg !8284 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %old_dead_notes.addr = alloca %struct.rtx_def**, align 8
  %old_unused_notes.addr = alloca %struct.rtx_def**, align 8
  %pprev = alloca %struct.rtx_def**, align 8
  %link = alloca %struct.rtx_def*, align 8
  %dead = alloca %struct.rtx_def*, align 8
  %unused = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %next33 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8287, metadata !DIExpression()), !dbg !8288
  store %struct.rtx_def** %old_dead_notes, %struct.rtx_def*** %old_dead_notes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %old_dead_notes.addr, metadata !8289, metadata !DIExpression()), !dbg !8290
  store %struct.rtx_def** %old_unused_notes, %struct.rtx_def*** %old_unused_notes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %old_unused_notes.addr, metadata !8291, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %pprev, metadata !8293, metadata !DIExpression()), !dbg !8294
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8295
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !8295
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8295
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 7, !dbg !8295
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8295
  store %struct.rtx_def** %rt_rtx, %struct.rtx_def*** %pprev, align 8, !dbg !8294
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %link, metadata !8296, metadata !DIExpression()), !dbg !8297
  %1 = load %struct.rtx_def**, %struct.rtx_def*** %pprev, align 8, !dbg !8298
  %2 = load %struct.rtx_def*, %struct.rtx_def** %1, align 8, !dbg !8299
  store %struct.rtx_def* %2, %struct.rtx_def** %link, align 8, !dbg !8297
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dead, metadata !8300, metadata !DIExpression()), !dbg !8301
  store %struct.rtx_def* null, %struct.rtx_def** %dead, align 8, !dbg !8301
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %unused, metadata !8302, metadata !DIExpression()), !dbg !8303
  store %struct.rtx_def* null, %struct.rtx_def** %unused, align 8, !dbg !8303
  br label %while.cond, !dbg !8304

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8305
  %tobool = icmp ne %struct.rtx_def* %3, null, !dbg !8304
  br i1 %tobool, label %while.body, label %while.end, !dbg !8304

while.body:                                       ; preds = %while.cond
  %4 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8306
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !8306
  %bf.load = load i32, i32* %5, align 8, !dbg !8306
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8306
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8306
  switch i32 %bf.clear, label %sw.default [
    i32 1, label %sw.bb
    i32 6, label %sw.bb19
  ], !dbg !8308

sw.bb:                                            ; preds = %while.body
  %6 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8309
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !8309
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !8309
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !8309
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !8309
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !8309
  %call = call i32 @rhs_regno(%struct.rtx_def* %7), !dbg !8309
  %call5 = call zeroext i8 @df_ignore_stack_reg(i32 %call), !dbg !8312
  %tobool6 = icmp ne i8 %call5, 0, !dbg !8312
  br i1 %tobool6, label %if.then, label %if.else, !dbg !8313

if.then:                                          ; preds = %sw.bb
  %8 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8314
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !8314
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !8314
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 1, !dbg !8314
  %rt_rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !8314
  store %struct.rtx_def** %rt_rtx10, %struct.rtx_def*** %pprev, align 8, !dbg !8316
  %9 = load %struct.rtx_def**, %struct.rtx_def*** %pprev, align 8, !dbg !8317
  %10 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8, !dbg !8318
  store %struct.rtx_def* %10, %struct.rtx_def** %link, align 8, !dbg !8319
  br label %if.end, !dbg !8320

if.else:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !8321, metadata !DIExpression()), !dbg !8323
  %11 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8324
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !8324
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !8324
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 1, !dbg !8324
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !8324
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !8324
  store %struct.rtx_def* %12, %struct.rtx_def** %next, align 8, !dbg !8323
  %13 = load %struct.rtx_def*, %struct.rtx_def** %dead, align 8, !dbg !8325
  %14 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8326
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !8326
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !8326
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 1, !dbg !8326
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !8326
  store %struct.rtx_def* %13, %struct.rtx_def** %rt_rtx18, align 8, !dbg !8327
  %15 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8328
  store %struct.rtx_def* %15, %struct.rtx_def** %dead, align 8, !dbg !8329
  %16 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !8330
  store %struct.rtx_def* %16, %struct.rtx_def** %link, align 8, !dbg !8331
  %17 = load %struct.rtx_def**, %struct.rtx_def*** %pprev, align 8, !dbg !8332
  store %struct.rtx_def* %16, %struct.rtx_def** %17, align 8, !dbg !8333
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !8334

sw.bb19:                                          ; preds = %while.body
  %18 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8335
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !8335
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !8335
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 0, !dbg !8335
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !8335
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !8335
  %call24 = call i32 @rhs_regno(%struct.rtx_def* %19), !dbg !8335
  %call25 = call zeroext i8 @df_ignore_stack_reg(i32 %call24), !dbg !8337
  %tobool26 = icmp ne i8 %call25, 0, !dbg !8337
  br i1 %tobool26, label %if.then27, label %if.else32, !dbg !8338

if.then27:                                        ; preds = %sw.bb19
  %20 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8339
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !8339
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !8339
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 1, !dbg !8339
  %rt_rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**, !dbg !8339
  store %struct.rtx_def** %rt_rtx31, %struct.rtx_def*** %pprev, align 8, !dbg !8341
  %21 = load %struct.rtx_def**, %struct.rtx_def*** %pprev, align 8, !dbg !8342
  %22 = load %struct.rtx_def*, %struct.rtx_def** %21, align 8, !dbg !8343
  store %struct.rtx_def* %22, %struct.rtx_def** %link, align 8, !dbg !8344
  br label %if.end42, !dbg !8345

if.else32:                                        ; preds = %sw.bb19
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next33, metadata !8346, metadata !DIExpression()), !dbg !8348
  %23 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8349
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !8349
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !8349
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 1, !dbg !8349
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !8349
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !8349
  store %struct.rtx_def* %24, %struct.rtx_def** %next33, align 8, !dbg !8348
  %25 = load %struct.rtx_def*, %struct.rtx_def** %unused, align 8, !dbg !8350
  %26 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8351
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !8351
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !8351
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 1, !dbg !8351
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !8351
  store %struct.rtx_def* %25, %struct.rtx_def** %rt_rtx41, align 8, !dbg !8352
  %27 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8353
  store %struct.rtx_def* %27, %struct.rtx_def** %unused, align 8, !dbg !8354
  %28 = load %struct.rtx_def*, %struct.rtx_def** %next33, align 8, !dbg !8355
  store %struct.rtx_def* %28, %struct.rtx_def** %link, align 8, !dbg !8356
  %29 = load %struct.rtx_def**, %struct.rtx_def*** %pprev, align 8, !dbg !8357
  store %struct.rtx_def* %28, %struct.rtx_def** %29, align 8, !dbg !8358
  br label %if.end42

if.end42:                                         ; preds = %if.else32, %if.then27
  br label %sw.epilog, !dbg !8359

sw.default:                                       ; preds = %while.body
  %30 = load %struct.rtx_def*, %struct.rtx_def** %link, align 8, !dbg !8360
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !8360
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !8360
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 1, !dbg !8360
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !8360
  store %struct.rtx_def** %rt_rtx46, %struct.rtx_def*** %pprev, align 8, !dbg !8361
  %31 = load %struct.rtx_def**, %struct.rtx_def*** %pprev, align 8, !dbg !8362
  %32 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8, !dbg !8363
  store %struct.rtx_def* %32, %struct.rtx_def** %link, align 8, !dbg !8364
  br label %sw.epilog, !dbg !8365

sw.epilog:                                        ; preds = %sw.default, %if.end42, %if.end
  br label %while.cond, !dbg !8304, !llvm.loop !8366

while.end:                                        ; preds = %while.cond
  %33 = load %struct.rtx_def*, %struct.rtx_def** %dead, align 8, !dbg !8368
  %34 = load %struct.rtx_def**, %struct.rtx_def*** %old_dead_notes.addr, align 8, !dbg !8369
  store %struct.rtx_def* %33, %struct.rtx_def** %34, align 8, !dbg !8370
  %35 = load %struct.rtx_def*, %struct.rtx_def** %unused, align 8, !dbg !8371
  %36 = load %struct.rtx_def**, %struct.rtx_def*** %old_unused_notes.addr, align 8, !dbg !8372
  store %struct.rtx_def* %35, %struct.rtx_def** %36, align 8, !dbg !8373
  ret void, !dbg !8374
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_ignore_stack_reg(i32 %regno) #0 !dbg !8375 {
entry:
  %regno.addr = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !8376, metadata !DIExpression()), !dbg !8377
  %0 = load i32, i32* @regstack_completed, align 4, !dbg !8378
  %tobool = icmp ne i32 %0, 0, !dbg !8378
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8379

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %regno.addr, align 4, !dbg !8380
  %conv = sext i32 %1 to i64, !dbg !8380
  %sub = sub i64 %conv, 8, !dbg !8380
  %cmp = icmp ule i64 %sub, 7, !dbg !8380
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !8381
  %land.ext = zext i1 %2 to i32, !dbg !8379
  %conv2 = trunc i32 %land.ext to i8, !dbg !8378
  ret i8 %conv2, !dbg !8382
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @df_set_unused_notes_for_mw(%struct.rtx_def* %insn, %struct.rtx_def* %old, %struct.df_mw_hardreg* %mws, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def* %artificial_uses) #0 !dbg !8383 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %old.addr = alloca %struct.rtx_def*, align 8
  %mws.addr = alloca %struct.df_mw_hardreg*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %do_not_gen.addr = alloca %struct.bitmap_head_def*, align 8
  %artificial_uses.addr = alloca %struct.bitmap_head_def*, align 8
  %r = alloca i32, align 4
  %regno = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8386, metadata !DIExpression()), !dbg !8387
  store %struct.rtx_def* %old, %struct.rtx_def** %old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old.addr, metadata !8388, metadata !DIExpression()), !dbg !8389
  store %struct.df_mw_hardreg* %mws, %struct.df_mw_hardreg** %mws.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %mws.addr, metadata !8390, metadata !DIExpression()), !dbg !8391
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !8392, metadata !DIExpression()), !dbg !8393
  store %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def** %do_not_gen.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %do_not_gen.addr, metadata !8394, metadata !DIExpression()), !dbg !8395
  store %struct.bitmap_head_def* %artificial_uses, %struct.bitmap_head_def** %artificial_uses.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %artificial_uses.addr, metadata !8396, metadata !DIExpression()), !dbg !8397
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8398, metadata !DIExpression()), !dbg !8399
  %0 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8400
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8402
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8403
  %call = call zeroext i8 @df_whole_mw_reg_unused_p(%struct.df_mw_hardreg* %0, %struct.bitmap_head_def* %1, %struct.bitmap_head_def* %2), !dbg !8404
  %tobool = icmp ne i8 %call, 0, !dbg !8404
  br i1 %tobool, label %if.then, label %if.else, !dbg !8405

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !8406, metadata !DIExpression()), !dbg !8408
  %3 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8409
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %3, i32 0, i32 2, !dbg !8410
  %4 = load i32, i32* %start_regno, align 4, !dbg !8410
  store i32 %4, i32* %regno, align 4, !dbg !8408
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8411
  %6 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8412
  %7 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8413
  %mw_reg = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %7, i32 0, i32 0, !dbg !8414
  %8 = load %struct.rtx_def*, %struct.rtx_def** %mw_reg, align 8, !dbg !8414
  %call1 = call %struct.rtx_def* @df_set_note(i32 6, %struct.rtx_def* %5, %struct.rtx_def* %6, %struct.rtx_def* %8), !dbg !8415
  store %struct.rtx_def* %call1, %struct.rtx_def** %old.addr, align 8, !dbg !8416
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen.addr, align 8, !dbg !8417
  %10 = load i32, i32* %regno, align 4, !dbg !8418
  %call2 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %9, i32 %10), !dbg !8419
  br label %if.end11, !dbg !8420

if.else:                                          ; preds = %entry
  %11 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8421
  %start_regno3 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %11, i32 0, i32 2, !dbg !8423
  %12 = load i32, i32* %start_regno3, align 4, !dbg !8423
  store i32 %12, i32* %r, align 4, !dbg !8424
  br label %for.cond, !dbg !8425

for.cond:                                         ; preds = %for.inc, %if.else
  %13 = load i32, i32* %r, align 4, !dbg !8426
  %14 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8428
  %end_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %14, i32 0, i32 3, !dbg !8429
  %15 = load i32, i32* %end_regno, align 8, !dbg !8429
  %cmp = icmp ule i32 %13, %15, !dbg !8430
  br i1 %cmp, label %for.body, label %for.end, !dbg !8431

for.body:                                         ; preds = %for.cond
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8432
  %17 = load i32, i32* %r, align 4, !dbg !8435
  %call4 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %16, i32 %17), !dbg !8436
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8436
  br i1 %tobool5, label %if.end, label %land.lhs.true, !dbg !8437

land.lhs.true:                                    ; preds = %for.body
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8438
  %19 = load i32, i32* %r, align 4, !dbg !8439
  %call6 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %18, i32 %19), !dbg !8440
  %tobool7 = icmp ne i32 %call6, 0, !dbg !8440
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !8441

if.then8:                                         ; preds = %land.lhs.true
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8442
  %21 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8444
  %22 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !8445
  %23 = load i32, i32* %r, align 4, !dbg !8446
  %idxprom = zext i32 %23 to i64, !dbg !8445
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %22, i64 %idxprom, !dbg !8445
  %24 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !8445
  %call9 = call %struct.rtx_def* @df_set_note(i32 6, %struct.rtx_def* %20, %struct.rtx_def* %21, %struct.rtx_def* %24), !dbg !8447
  store %struct.rtx_def* %call9, %struct.rtx_def** %old.addr, align 8, !dbg !8448
  br label %if.end, !dbg !8449

if.end:                                           ; preds = %if.then8, %land.lhs.true, %for.body
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen.addr, align 8, !dbg !8450
  %26 = load i32, i32* %r, align 4, !dbg !8451
  %call10 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %25, i32 %26), !dbg !8452
  br label %for.inc, !dbg !8453

for.inc:                                          ; preds = %if.end
  %27 = load i32, i32* %r, align 4, !dbg !8454
  %inc = add i32 %27, 1, !dbg !8454
  store i32 %inc, i32* %r, align 4, !dbg !8454
  br label %for.cond, !dbg !8455, !llvm.loop !8456

for.end:                                          ; preds = %for.cond
  br label %if.end11

if.end11:                                         ; preds = %for.end, %if.then
  %28 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8458
  ret %struct.rtx_def* %28, !dbg !8459
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @df_create_unused_note(%struct.rtx_def* %insn, %struct.rtx_def* %old, %union.df_ref_d* %def, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %artificial_uses) #0 !dbg !8460 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %old.addr = alloca %struct.rtx_def*, align 8
  %def.addr = alloca %union.df_ref_d*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %artificial_uses.addr = alloca %struct.bitmap_head_def*, align 8
  %dregno = alloca i32, align 4
  %reg = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8463, metadata !DIExpression()), !dbg !8464
  store %struct.rtx_def* %old, %struct.rtx_def** %old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old.addr, metadata !8465, metadata !DIExpression()), !dbg !8466
  store %union.df_ref_d* %def, %union.df_ref_d** %def.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def.addr, metadata !8467, metadata !DIExpression()), !dbg !8468
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !8469, metadata !DIExpression()), !dbg !8470
  store %struct.bitmap_head_def* %artificial_uses, %struct.bitmap_head_def** %artificial_uses.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %artificial_uses.addr, metadata !8471, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !8473, metadata !DIExpression()), !dbg !8474
  %0 = load %union.df_ref_d*, %union.df_ref_d** %def.addr, align 8, !dbg !8475
  %base = bitcast %union.df_ref_d* %0 to %struct.df_base_ref*, !dbg !8475
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 6, !dbg !8475
  %1 = load i32, i32* %regno, align 8, !dbg !8475
  store i32 %1, i32* %dregno, align 4, !dbg !8474
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8476
  %3 = load i32, i32* %dregno, align 4, !dbg !8478
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %2, i32 %3), !dbg !8479
  %tobool = icmp ne i32 %call, 0, !dbg !8479
  br i1 %tobool, label %if.end, label %lor.lhs.false, !dbg !8480

lor.lhs.false:                                    ; preds = %entry
  %4 = load %union.df_ref_d*, %union.df_ref_d** %def.addr, align 8, !dbg !8481
  %base1 = bitcast %union.df_ref_d* %4 to %struct.df_base_ref*, !dbg !8481
  %5 = bitcast %struct.df_base_ref* %base1 to i32*, !dbg !8481
  %bf.load = load i32, i32* %5, align 8, !dbg !8481
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !8481
  %and = and i32 %bf.ashr, 4096, !dbg !8482
  %tobool2 = icmp ne i32 %and, 0, !dbg !8482
  br i1 %tobool2, label %if.end, label %lor.lhs.false3, !dbg !8483

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8484
  %7 = load i32, i32* %dregno, align 4, !dbg !8485
  %call4 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %7), !dbg !8486
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8486
  br i1 %tobool5, label %if.end, label %lor.lhs.false6, !dbg !8487

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %8 = load i32, i32* %dregno, align 4, !dbg !8488
  %call7 = call zeroext i8 @df_ignore_stack_reg(i32 %8), !dbg !8489
  %conv = zext i8 %call7 to i32, !dbg !8489
  %tobool8 = icmp ne i32 %conv, 0, !dbg !8489
  br i1 %tobool8, label %if.end, label %if.then, !dbg !8490

if.then:                                          ; preds = %lor.lhs.false6
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg, metadata !8491, metadata !DIExpression()), !dbg !8493
  %9 = load %union.df_ref_d*, %union.df_ref_d** %def.addr, align 8, !dbg !8494
  %base9 = bitcast %union.df_ref_d* %9 to %struct.df_base_ref*, !dbg !8494
  %10 = bitcast %struct.df_base_ref* %base9 to i32*, !dbg !8494
  %bf.load10 = load i32, i32* %10, align 8, !dbg !8494
  %bf.clear = and i32 %bf.load10, 255, !dbg !8494
  %cmp = icmp eq i32 %bf.clear, 2, !dbg !8494
  br i1 %cmp, label %cond.true, label %lor.lhs.false12, !dbg !8494

lor.lhs.false12:                                  ; preds = %if.then
  %11 = load %union.df_ref_d*, %union.df_ref_d** %def.addr, align 8, !dbg !8494
  %base13 = bitcast %union.df_ref_d* %11 to %struct.df_base_ref*, !dbg !8494
  %12 = bitcast %struct.df_base_ref* %base13 to i32*, !dbg !8494
  %bf.load14 = load i32, i32* %12, align 8, !dbg !8494
  %bf.clear15 = and i32 %bf.load14, 255, !dbg !8494
  %cmp16 = icmp eq i32 %bf.clear15, 3, !dbg !8494
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !8495

cond.true:                                        ; preds = %lor.lhs.false12, %if.then
  %13 = load %union.df_ref_d*, %union.df_ref_d** %def.addr, align 8, !dbg !8494
  %regular_ref = bitcast %union.df_ref_d* %13 to %struct.df_regular_ref*, !dbg !8494
  %loc = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref, i32 0, i32 1, !dbg !8494
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !8494
  %tobool18 = icmp ne %struct.rtx_def** %14, null, !dbg !8494
  br i1 %tobool18, label %cond.true19, label %cond.false32, !dbg !8494

cond.false:                                       ; preds = %lor.lhs.false12
  br i1 false, label %cond.true19, label %cond.false32, !dbg !8495

cond.true19:                                      ; preds = %cond.false, %cond.true
  %15 = load %union.df_ref_d*, %union.df_ref_d** %def.addr, align 8, !dbg !8496
  %regular_ref20 = bitcast %union.df_ref_d* %15 to %struct.df_regular_ref*, !dbg !8496
  %loc21 = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref20, i32 0, i32 1, !dbg !8496
  %16 = load %struct.rtx_def**, %struct.rtx_def*** %loc21, align 8, !dbg !8496
  %17 = load %struct.rtx_def*, %struct.rtx_def** %16, align 8, !dbg !8496
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !8496
  %bf.load22 = load i32, i32* %18, align 8, !dbg !8496
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !8496
  %cmp24 = icmp eq i32 %bf.clear23, 39, !dbg !8496
  br i1 %cmp24, label %cond.true26, label %cond.false29, !dbg !8496

cond.true26:                                      ; preds = %cond.true19
  %19 = load %union.df_ref_d*, %union.df_ref_d** %def.addr, align 8, !dbg !8496
  %regular_ref27 = bitcast %union.df_ref_d* %19 to %struct.df_regular_ref*, !dbg !8496
  %loc28 = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref27, i32 0, i32 1, !dbg !8496
  %20 = load %struct.rtx_def**, %struct.rtx_def*** %loc28, align 8, !dbg !8496
  %21 = load %struct.rtx_def*, %struct.rtx_def** %20, align 8, !dbg !8496
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !8496
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8496
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8496
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8496
  br label %cond.end, !dbg !8496

cond.false29:                                     ; preds = %cond.true19
  %22 = load %union.df_ref_d*, %union.df_ref_d** %def.addr, align 8, !dbg !8496
  %regular_ref30 = bitcast %union.df_ref_d* %22 to %struct.df_regular_ref*, !dbg !8496
  %loc31 = getelementptr inbounds %struct.df_regular_ref, %struct.df_regular_ref* %regular_ref30, i32 0, i32 1, !dbg !8496
  %23 = load %struct.rtx_def**, %struct.rtx_def*** %loc31, align 8, !dbg !8496
  br label %cond.end, !dbg !8496

cond.end:                                         ; preds = %cond.false29, %cond.true26
  %cond = phi %struct.rtx_def** [ %rt_rtx, %cond.true26 ], [ %23, %cond.false29 ], !dbg !8496
  %24 = load %struct.rtx_def*, %struct.rtx_def** %cond, align 8, !dbg !8497
  br label %cond.end35, !dbg !8495

cond.false32:                                     ; preds = %cond.false, %cond.true
  %25 = load %union.df_ref_d*, %union.df_ref_d** %def.addr, align 8, !dbg !8498
  %base33 = bitcast %union.df_ref_d* %25 to %struct.df_base_ref*, !dbg !8498
  %reg34 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base33, i32 0, i32 1, !dbg !8498
  %26 = load %struct.rtx_def*, %struct.rtx_def** %reg34, align 8, !dbg !8498
  br label %cond.end35, !dbg !8495

cond.end35:                                       ; preds = %cond.false32, %cond.end
  %cond36 = phi %struct.rtx_def* [ %24, %cond.end ], [ %26, %cond.false32 ], !dbg !8495
  store %struct.rtx_def* %cond36, %struct.rtx_def** %reg, align 8, !dbg !8493
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8499
  %28 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8500
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !8501
  %call37 = call %struct.rtx_def* @df_set_note(i32 6, %struct.rtx_def* %27, %struct.rtx_def* %28, %struct.rtx_def* %29), !dbg !8502
  store %struct.rtx_def* %call37, %struct.rtx_def** %old.addr, align 8, !dbg !8503
  br label %if.end, !dbg !8504

if.end:                                           ; preds = %cond.end35, %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry
  %30 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8505
  ret %struct.rtx_def* %30, !dbg !8506
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @df_set_dead_notes_for_mw(%struct.rtx_def* %insn, %struct.rtx_def* %old, %struct.df_mw_hardreg* %mws, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def* %artificial_uses, i8* %added_notes_p) #0 !dbg !8507 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %old.addr = alloca %struct.rtx_def*, align 8
  %mws.addr = alloca %struct.df_mw_hardreg*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %do_not_gen.addr = alloca %struct.bitmap_head_def*, align 8
  %artificial_uses.addr = alloca %struct.bitmap_head_def*, align 8
  %added_notes_p.addr = alloca i8*, align 8
  %r = alloca i32, align 4
  %is_debug = alloca i8, align 1
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8511, metadata !DIExpression()), !dbg !8512
  store %struct.rtx_def* %old, %struct.rtx_def** %old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old.addr, metadata !8513, metadata !DIExpression()), !dbg !8514
  store %struct.df_mw_hardreg* %mws, %struct.df_mw_hardreg** %mws.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %mws.addr, metadata !8515, metadata !DIExpression()), !dbg !8516
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !8517, metadata !DIExpression()), !dbg !8518
  store %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def** %do_not_gen.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %do_not_gen.addr, metadata !8519, metadata !DIExpression()), !dbg !8520
  store %struct.bitmap_head_def* %artificial_uses, %struct.bitmap_head_def** %artificial_uses.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %artificial_uses.addr, metadata !8521, metadata !DIExpression()), !dbg !8522
  store i8* %added_notes_p, i8** %added_notes_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %added_notes_p.addr, metadata !8523, metadata !DIExpression()), !dbg !8524
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8525, metadata !DIExpression()), !dbg !8526
  call void @llvm.dbg.declare(metadata i8* %is_debug, metadata !8527, metadata !DIExpression()), !dbg !8528
  %0 = load i8*, i8** %added_notes_p.addr, align 8, !dbg !8529
  %1 = load i8, i8* %0, align 1, !dbg !8530
  store i8 %1, i8* %is_debug, align 1, !dbg !8528
  %2 = load i8*, i8** %added_notes_p.addr, align 8, !dbg !8531
  store i8 0, i8* %2, align 1, !dbg !8532
  %3 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8533
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8535
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8536
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen.addr, align 8, !dbg !8537
  %call = call zeroext i8 @df_whole_mw_reg_dead_p(%struct.df_mw_hardreg* %3, %struct.bitmap_head_def* %4, %struct.bitmap_head_def* %5, %struct.bitmap_head_def* %6), !dbg !8538
  %tobool = icmp ne i8 %call, 0, !dbg !8538
  br i1 %tobool, label %if.then, label %if.else, !dbg !8539

if.then:                                          ; preds = %entry
  %7 = load i8, i8* %is_debug, align 1, !dbg !8540
  %tobool1 = icmp ne i8 %7, 0, !dbg !8540
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !8543

if.then2:                                         ; preds = %if.then
  %8 = load i8*, i8** %added_notes_p.addr, align 8, !dbg !8544
  store i8 1, i8* %8, align 1, !dbg !8546
  %9 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8547
  store %struct.rtx_def* %9, %struct.rtx_def** %retval, align 8, !dbg !8548
  br label %return, !dbg !8548

if.end:                                           ; preds = %if.then
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8549
  %11 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8550
  %12 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8551
  %mw_reg = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %12, i32 0, i32 0, !dbg !8552
  %13 = load %struct.rtx_def*, %struct.rtx_def** %mw_reg, align 8, !dbg !8552
  %call3 = call %struct.rtx_def* @df_set_note(i32 1, %struct.rtx_def* %10, %struct.rtx_def* %11, %struct.rtx_def* %13), !dbg !8553
  store %struct.rtx_def* %call3, %struct.rtx_def** %old.addr, align 8, !dbg !8554
  br label %if.end17, !dbg !8555

if.else:                                          ; preds = %entry
  %14 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8556
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %14, i32 0, i32 2, !dbg !8559
  %15 = load i32, i32* %start_regno, align 4, !dbg !8559
  store i32 %15, i32* %r, align 4, !dbg !8560
  br label %for.cond, !dbg !8561

for.cond:                                         ; preds = %for.inc, %if.else
  %16 = load i32, i32* %r, align 4, !dbg !8562
  %17 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8564
  %end_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %17, i32 0, i32 3, !dbg !8565
  %18 = load i32, i32* %end_regno, align 8, !dbg !8565
  %cmp = icmp ule i32 %16, %18, !dbg !8566
  br i1 %cmp, label %for.body, label %for.end, !dbg !8567

for.body:                                         ; preds = %for.cond
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8568
  %20 = load i32, i32* %r, align 4, !dbg !8570
  %call4 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %19, i32 %20), !dbg !8571
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8571
  br i1 %tobool5, label %if.end16, label %land.lhs.true, !dbg !8572

land.lhs.true:                                    ; preds = %for.body
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8573
  %22 = load i32, i32* %r, align 4, !dbg !8574
  %call6 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %21, i32 %22), !dbg !8575
  %tobool7 = icmp ne i32 %call6, 0, !dbg !8575
  br i1 %tobool7, label %if.end16, label %land.lhs.true8, !dbg !8576

land.lhs.true8:                                   ; preds = %land.lhs.true
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen.addr, align 8, !dbg !8577
  %24 = load i32, i32* %r, align 4, !dbg !8578
  %call9 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %23, i32 %24), !dbg !8579
  %tobool10 = icmp ne i32 %call9, 0, !dbg !8579
  br i1 %tobool10, label %if.end16, label %if.then11, !dbg !8580

if.then11:                                        ; preds = %land.lhs.true8
  %25 = load i8, i8* %is_debug, align 1, !dbg !8581
  %tobool12 = icmp ne i8 %25, 0, !dbg !8581
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !8584

if.then13:                                        ; preds = %if.then11
  %26 = load i8*, i8** %added_notes_p.addr, align 8, !dbg !8585
  store i8 1, i8* %26, align 1, !dbg !8587
  %27 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8588
  store %struct.rtx_def* %27, %struct.rtx_def** %retval, align 8, !dbg !8589
  br label %return, !dbg !8589

if.end14:                                         ; preds = %if.then11
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8590
  %29 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8591
  %30 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !8592
  %31 = load i32, i32* %r, align 4, !dbg !8593
  %idxprom = zext i32 %31 to i64, !dbg !8592
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %30, i64 %idxprom, !dbg !8592
  %32 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !8592
  %call15 = call %struct.rtx_def* @df_set_note(i32 1, %struct.rtx_def* %28, %struct.rtx_def* %29, %struct.rtx_def* %32), !dbg !8594
  store %struct.rtx_def* %call15, %struct.rtx_def** %old.addr, align 8, !dbg !8595
  br label %if.end16, !dbg !8596

if.end16:                                         ; preds = %if.end14, %land.lhs.true8, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8597

for.inc:                                          ; preds = %if.end16
  %33 = load i32, i32* %r, align 4, !dbg !8598
  %inc = add i32 %33, 1, !dbg !8598
  store i32 %inc, i32* %r, align 4, !dbg !8598
  br label %for.cond, !dbg !8599, !llvm.loop !8600

for.end:                                          ; preds = %for.cond
  br label %if.end17

if.end17:                                         ; preds = %for.end, %if.end
  %34 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8602
  store %struct.rtx_def* %34, %struct.rtx_def** %retval, align 8, !dbg !8603
  br label %return, !dbg !8603

return:                                           ; preds = %if.end17, %if.then13, %if.then2
  %35 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !8604
  ret %struct.rtx_def* %35, !dbg !8604
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @df_set_note(i32 %note_type, %struct.rtx_def* %insn, %struct.rtx_def* %old, %struct.rtx_def* %reg) #0 !dbg !8605 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %note_type.addr = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %old.addr = alloca %struct.rtx_def*, align 8
  %reg.addr = alloca %struct.rtx_def*, align 8
  %curr = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  store i32 %note_type, i32* %note_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %note_type.addr, metadata !8608, metadata !DIExpression()), !dbg !8609
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8610, metadata !DIExpression()), !dbg !8611
  store %struct.rtx_def* %old, %struct.rtx_def** %old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old.addr, metadata !8612, metadata !DIExpression()), !dbg !8613
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !8614, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %curr, metadata !8616, metadata !DIExpression()), !dbg !8617
  %0 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8618
  store %struct.rtx_def* %0, %struct.rtx_def** %curr, align 8, !dbg !8617
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev, metadata !8619, metadata !DIExpression()), !dbg !8620
  store %struct.rtx_def* null, %struct.rtx_def** %prev, align 8, !dbg !8620
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8621
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !8621
  %bf.load = load i32, i32* %2, align 8, !dbg !8621
  %bf.clear = and i32 %bf.load, 65535, !dbg !8621
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !8621
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8621

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 3184, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8621
  br label %cond.end, !dbg !8621

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8621

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8621
  br label %while.cond, !dbg !8622

while.cond:                                       ; preds = %if.end33, %cond.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %curr, align 8, !dbg !8623
  %tobool = icmp ne %struct.rtx_def* %3, null, !dbg !8622
  br i1 %tobool, label %while.body, label %while.end, !dbg !8622

while.body:                                       ; preds = %while.cond
  %4 = load %struct.rtx_def*, %struct.rtx_def** %curr, align 8, !dbg !8624
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !8624
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8624
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8624
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8624
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8624
  %6 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8626
  %cmp1 = icmp eq %struct.rtx_def* %5, %6, !dbg !8627
  br i1 %cmp1, label %if.then, label %if.else28, !dbg !8628

if.then:                                          ; preds = %while.body
  %7 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8629
  %tobool2 = icmp ne %struct.rtx_def* %7, null, !dbg !8629
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !8632

if.then3:                                         ; preds = %if.then
  %8 = load %struct.rtx_def*, %struct.rtx_def** %curr, align 8, !dbg !8633
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !8633
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !8633
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 1, !dbg !8633
  %rt_rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !8633
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !8633
  %10 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8634
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !8634
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !8634
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 1, !dbg !8634
  %rt_rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !8634
  store %struct.rtx_def* %9, %struct.rtx_def** %rt_rtx11, align 8, !dbg !8635
  br label %if.end, !dbg !8634

if.else:                                          ; preds = %if.then
  %11 = load %struct.rtx_def*, %struct.rtx_def** %curr, align 8, !dbg !8636
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !8636
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !8636
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 1, !dbg !8636
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !8636
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !8636
  store %struct.rtx_def* %12, %struct.rtx_def** %old.addr, align 8, !dbg !8637
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8638
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !8638
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !8638
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 7, !dbg !8638
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !8638
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !8638
  %15 = load %struct.rtx_def*, %struct.rtx_def** %curr, align 8, !dbg !8639
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !8639
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !8639
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 1, !dbg !8639
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !8639
  store %struct.rtx_def* %14, %struct.rtx_def** %rt_rtx23, align 8, !dbg !8640
  %16 = load %struct.rtx_def*, %struct.rtx_def** %curr, align 8, !dbg !8641
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8642
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !8642
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !8642
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 7, !dbg !8642
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !8642
  store %struct.rtx_def* %16, %struct.rtx_def** %rt_rtx27, align 8, !dbg !8643
  %18 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8644
  store %struct.rtx_def* %18, %struct.rtx_def** %retval, align 8, !dbg !8645
  br label %return, !dbg !8645

if.else28:                                        ; preds = %while.body
  %19 = load %struct.rtx_def*, %struct.rtx_def** %curr, align 8, !dbg !8646
  store %struct.rtx_def* %19, %struct.rtx_def** %prev, align 8, !dbg !8648
  %20 = load %struct.rtx_def*, %struct.rtx_def** %curr, align 8, !dbg !8649
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !8649
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !8649
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 1, !dbg !8649
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !8649
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !8649
  store %struct.rtx_def* %21, %struct.rtx_def** %curr, align 8, !dbg !8650
  br label %if.end33

if.end33:                                         ; preds = %if.else28
  br label %while.cond, !dbg !8622, !llvm.loop !8651

while.end:                                        ; preds = %while.cond
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8653
  %23 = load i32, i32* %note_type.addr, align 4, !dbg !8654
  %24 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !8655
  call void @add_reg_note(%struct.rtx_def* %22, i32 %23, %struct.rtx_def* %24), !dbg !8656
  %25 = load %struct.rtx_def*, %struct.rtx_def** %old.addr, align 8, !dbg !8657
  store %struct.rtx_def* %25, %struct.rtx_def** %retval, align 8, !dbg !8658
  br label %return, !dbg !8658

return:                                           ; preds = %while.end, %if.end
  %26 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !8659
  ret %struct.rtx_def* %26, !dbg !8659
}

declare dso_local void @free_EXPR_LIST_node(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) #2

declare dso_local zeroext i8 @df_insn_rescan_debug_internal(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_whole_mw_reg_unused_p(%struct.df_mw_hardreg* %mws, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %artificial_uses) #0 !dbg !8660 {
entry:
  %retval = alloca i8, align 1
  %mws.addr = alloca %struct.df_mw_hardreg*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %artificial_uses.addr = alloca %struct.bitmap_head_def*, align 8
  %r = alloca i32, align 4
  store %struct.df_mw_hardreg* %mws, %struct.df_mw_hardreg** %mws.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %mws.addr, metadata !8663, metadata !DIExpression()), !dbg !8664
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !8665, metadata !DIExpression()), !dbg !8666
  store %struct.bitmap_head_def* %artificial_uses, %struct.bitmap_head_def** %artificial_uses.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %artificial_uses.addr, metadata !8667, metadata !DIExpression()), !dbg !8668
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8669, metadata !DIExpression()), !dbg !8670
  %0 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8671
  %flags = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %0, i32 0, i32 1, !dbg !8673
  %bf.load = load i32, i32* %flags, align 8, !dbg !8673
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !8673
  %and = and i32 %bf.ashr, 16, !dbg !8674
  %tobool = icmp ne i32 %and, 0, !dbg !8674
  br i1 %tobool, label %if.then, label %if.end, !dbg !8675

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8676
  br label %return, !dbg !8676

if.end:                                           ; preds = %entry
  %1 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8677
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %1, i32 0, i32 2, !dbg !8679
  %2 = load i32, i32* %start_regno, align 4, !dbg !8679
  store i32 %2, i32* %r, align 4, !dbg !8680
  br label %for.cond, !dbg !8681

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %r, align 4, !dbg !8682
  %4 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8684
  %end_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %4, i32 0, i32 3, !dbg !8685
  %5 = load i32, i32* %end_regno, align 8, !dbg !8685
  %cmp = icmp ule i32 %3, %5, !dbg !8686
  br i1 %cmp, label %for.body, label %for.end, !dbg !8687

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8688
  %7 = load i32, i32* %r, align 4, !dbg !8690
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %7), !dbg !8691
  %tobool1 = icmp ne i32 %call, 0, !dbg !8691
  br i1 %tobool1, label %if.then4, label %lor.lhs.false, !dbg !8692

lor.lhs.false:                                    ; preds = %for.body
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8693
  %9 = load i32, i32* %r, align 4, !dbg !8694
  %call2 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %9), !dbg !8695
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8695
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8696

if.then4:                                         ; preds = %lor.lhs.false, %for.body
  store i8 0, i8* %retval, align 1, !dbg !8697
  br label %return, !dbg !8697

if.end5:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !8698

for.inc:                                          ; preds = %if.end5
  %10 = load i32, i32* %r, align 4, !dbg !8699
  %inc = add i32 %10, 1, !dbg !8699
  store i32 %inc, i32* %r, align 4, !dbg !8699
  br label %for.cond, !dbg !8700, !llvm.loop !8701

for.end:                                          ; preds = %for.cond
  %11 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8703
  %mw_reg = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %11, i32 0, i32 0, !dbg !8703
  %12 = load %struct.rtx_def*, %struct.rtx_def** %mw_reg, align 8, !dbg !8703
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !8703
  %bf.load6 = load i32, i32* %13, align 8, !dbg !8703
  %bf.clear = and i32 %bf.load6, 65535, !dbg !8703
  %cmp7 = icmp eq i32 %bf.clear, 37, !dbg !8703
  br i1 %cmp7, label %cond.false, label %cond.true, !dbg !8703

cond.true:                                        ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 3230, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8703
  br label %cond.end, !dbg !8703

cond.false:                                       ; preds = %for.end
  br label %cond.end, !dbg !8703

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8703
  store i8 1, i8* %retval, align 1, !dbg !8704
  br label %return, !dbg !8704

return:                                           ; preds = %cond.end, %if.then4, %if.then
  %14 = load i8, i8* %retval, align 1, !dbg !8705
  ret i8 %14, !dbg !8705
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_whole_mw_reg_dead_p(%struct.df_mw_hardreg* %mws, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %artificial_uses, %struct.bitmap_head_def* %do_not_gen) #0 !dbg !8706 {
entry:
  %retval = alloca i8, align 1
  %mws.addr = alloca %struct.df_mw_hardreg*, align 8
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %artificial_uses.addr = alloca %struct.bitmap_head_def*, align 8
  %do_not_gen.addr = alloca %struct.bitmap_head_def*, align 8
  %r = alloca i32, align 4
  store %struct.df_mw_hardreg* %mws, %struct.df_mw_hardreg** %mws.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_mw_hardreg** %mws.addr, metadata !8709, metadata !DIExpression()), !dbg !8710
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !8711, metadata !DIExpression()), !dbg !8712
  store %struct.bitmap_head_def* %artificial_uses, %struct.bitmap_head_def** %artificial_uses.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %artificial_uses.addr, metadata !8713, metadata !DIExpression()), !dbg !8714
  store %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def** %do_not_gen.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %do_not_gen.addr, metadata !8715, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8717, metadata !DIExpression()), !dbg !8718
  %0 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8719
  %flags = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %0, i32 0, i32 1, !dbg !8721
  %bf.load = load i32, i32* %flags, align 8, !dbg !8721
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !8721
  %and = and i32 %bf.ashr, 16, !dbg !8722
  %tobool = icmp ne i32 %and, 0, !dbg !8722
  br i1 %tobool, label %if.then, label %if.end, !dbg !8723

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8724
  br label %return, !dbg !8724

if.end:                                           ; preds = %entry
  %1 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8725
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %1, i32 0, i32 2, !dbg !8727
  %2 = load i32, i32* %start_regno, align 4, !dbg !8727
  store i32 %2, i32* %r, align 4, !dbg !8728
  br label %for.cond, !dbg !8729

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %r, align 4, !dbg !8730
  %4 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8732
  %end_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %4, i32 0, i32 3, !dbg !8733
  %5 = load i32, i32* %end_regno, align 8, !dbg !8733
  %cmp = icmp ule i32 %3, %5, !dbg !8734
  br i1 %cmp, label %for.body, label %for.end, !dbg !8735

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !8736
  %7 = load i32, i32* %r, align 4, !dbg !8738
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %7), !dbg !8739
  %tobool1 = icmp ne i32 %call, 0, !dbg !8739
  br i1 %tobool1, label %if.then7, label %lor.lhs.false, !dbg !8740

lor.lhs.false:                                    ; preds = %for.body
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %artificial_uses.addr, align 8, !dbg !8741
  %9 = load i32, i32* %r, align 4, !dbg !8742
  %call2 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %9), !dbg !8743
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8743
  br i1 %tobool3, label %if.then7, label %lor.lhs.false4, !dbg !8744

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %do_not_gen.addr, align 8, !dbg !8745
  %11 = load i32, i32* %r, align 4, !dbg !8746
  %call5 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %10, i32 %11), !dbg !8747
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8747
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8748

if.then7:                                         ; preds = %lor.lhs.false4, %lor.lhs.false, %for.body
  store i8 0, i8* %retval, align 1, !dbg !8749
  br label %return, !dbg !8749

if.end8:                                          ; preds = %lor.lhs.false4
  br label %for.inc, !dbg !8750

for.inc:                                          ; preds = %if.end8
  %12 = load i32, i32* %r, align 4, !dbg !8751
  %inc = add i32 %12, 1, !dbg !8751
  store i32 %inc, i32* %r, align 4, !dbg !8751
  br label %for.cond, !dbg !8752, !llvm.loop !8753

for.end:                                          ; preds = %for.cond
  %13 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws.addr, align 8, !dbg !8755
  %mw_reg = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %13, i32 0, i32 0, !dbg !8755
  %14 = load %struct.rtx_def*, %struct.rtx_def** %mw_reg, align 8, !dbg !8755
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !8755
  %bf.load9 = load i32, i32* %15, align 8, !dbg !8755
  %bf.clear = and i32 %bf.load9, 65535, !dbg !8755
  %cmp10 = icmp eq i32 %bf.clear, 37, !dbg !8755
  br i1 %cmp10, label %cond.false, label %cond.true, !dbg !8755

cond.true:                                        ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 3306, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8755
  br label %cond.end, !dbg !8755

cond.false:                                       ; preds = %for.end
  br label %cond.end, !dbg !8755

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8755
  store i8 1, i8* %retval, align 1, !dbg !8756
  br label %return, !dbg !8756

return:                                           ; preds = %cond.end, %if.then7, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !8757
  ret i8 %16, !dbg !8757
}

declare dso_local void @add_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bb_has_eh_pred(%struct.basic_block_def* %bb) #0 !dbg !8758 {
entry:
  %retval = alloca i8, align 1
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !8761, metadata !DIExpression()), !dbg !8762
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !8763, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !8765, metadata !DIExpression()), !dbg !8766
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8767
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 0, !dbg !8767
  %call = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds), !dbg !8767
  %1 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !8767
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, i32 0, i32 0, !dbg !8767
  %3 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !8767
  store i32 %3, i32* %2, align 8, !dbg !8767
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, i32 0, i32 1, !dbg !8767
  %5 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !8767
  store %struct.VEC_edge_gc** %5, %struct.VEC_edge_gc*** %4, align 8, !dbg !8767
  %6 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !8767
  %7 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !8767
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false), !dbg !8767
  br label %for.cond, !dbg !8767

for.cond:                                         ; preds = %for.inc, %entry
  %8 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !8769
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !8769
  %10 = load i32, i32* %9, align 8, !dbg !8769
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !8769
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !8769
  %call1 = call zeroext i8 @ei_cond(i32 %10, %struct.VEC_edge_gc** %12, %struct.edge_def** %e), !dbg !8769
  %tobool = icmp ne i8 %call1, 0, !dbg !8767
  br i1 %tobool, label %for.body, label %for.end, !dbg !8767

for.body:                                         ; preds = %for.cond
  %13 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8771
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i32 0, i32 7, !dbg !8774
  %14 = load i32, i32* %flags, align 8, !dbg !8774
  %and = and i32 %14, 8, !dbg !8775
  %tobool2 = icmp ne i32 %and, 0, !dbg !8775
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8776

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !8777
  br label %return, !dbg !8777

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8778

for.inc:                                          ; preds = %if.end
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !8769
  br label %for.cond, !dbg !8769, !llvm.loop !8779

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !8781
  br label %return, !dbg !8781

return:                                           ; preds = %for.end, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !8782
  ret i8 %15, !dbg !8782
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_alloc(%struct.bitmap_head_def* %all_blocks) #0 !dbg !8783 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_md_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !8784, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !8786, metadata !DIExpression()), !dbg !8787
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !8788, metadata !DIExpression()), !dbg !8789
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !8790
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !8790
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 7, !dbg !8790
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !8790
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i32 0, i32 3, !dbg !8792
  %2 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !8792
  %tobool = icmp ne %struct.alloc_pool_def* %2, null, !dbg !8790
  br i1 %tobool, label %if.end, label %if.then, !dbg !8793

if.then:                                          ; preds = %entry
  %call = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i64 0, i64 0), i64 40, i64 50), !dbg !8794
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !8795
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !8795
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 7, !dbg !8795
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !8795
  %block_pool3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 3, !dbg !8796
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** %block_pool3, align 8, !dbg !8797
  br label %if.end, !dbg !8795

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !8798
  %problems_by_index4 = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 1, !dbg !8798
  %arrayidx5 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index4, i64 0, i64 7, !dbg !8798
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx5, align 8, !dbg !8798
  call void @df_grow_bb_info(%struct.dataflow* %6), !dbg !8799
  %call6 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !8800
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** @df_md_scratch, align 8, !dbg !8801
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !8802
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %7, i32 0, i32* %bb_index), !dbg !8802
  br label %for.cond, !dbg !8802

for.cond:                                         ; preds = %for.inc, %if.end
  %call7 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !8804
  %tobool8 = icmp ne i8 %call7, 0, !dbg !8802
  br i1 %tobool8, label %for.body, label %for.end, !dbg !8802

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_md_bb_info** %bb_info, metadata !8806, metadata !DIExpression()), !dbg !8808
  %8 = load i32, i32* %bb_index, align 4, !dbg !8809
  %call9 = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %8), !dbg !8810
  store %struct.df_md_bb_info* %call9, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8808
  %9 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8811
  %tobool10 = icmp ne %struct.df_md_bb_info* %9, null, !dbg !8811
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !8813

if.then11:                                        ; preds = %for.body
  %10 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8814
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %10, i32 0, i32 2, !dbg !8816
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !8816
  call void @bitmap_clear(%struct.bitmap_head_def* %11), !dbg !8817
  %12 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8818
  %gen = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %12, i32 0, i32 0, !dbg !8819
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !8819
  call void @bitmap_clear(%struct.bitmap_head_def* %13), !dbg !8820
  %14 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8821
  %kill = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %14, i32 0, i32 1, !dbg !8822
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !8822
  call void @bitmap_clear(%struct.bitmap_head_def* %15), !dbg !8823
  %16 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8824
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %16, i32 0, i32 3, !dbg !8825
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !8825
  call void @bitmap_clear(%struct.bitmap_head_def* %17), !dbg !8826
  %18 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8827
  %out = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %18, i32 0, i32 4, !dbg !8828
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !8828
  call void @bitmap_clear(%struct.bitmap_head_def* %19), !dbg !8829
  br label %if.end26, !dbg !8830

if.else:                                          ; preds = %for.body
  %20 = load %struct.df*, %struct.df** @df, align 8, !dbg !8831
  %problems_by_index12 = getelementptr inbounds %struct.df, %struct.df* %20, i32 0, i32 1, !dbg !8831
  %arrayidx13 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index12, i64 0, i64 7, !dbg !8831
  %21 = load %struct.dataflow*, %struct.dataflow** %arrayidx13, align 8, !dbg !8831
  %block_pool14 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %21, i32 0, i32 3, !dbg !8833
  %22 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool14, align 8, !dbg !8833
  %call15 = call i8* @pool_alloc(%struct.alloc_pool_def* %22), !dbg !8834
  %23 = bitcast i8* %call15 to %struct.df_md_bb_info*, !dbg !8835
  store %struct.df_md_bb_info* %23, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8836
  %24 = load i32, i32* %bb_index, align 4, !dbg !8837
  %25 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8838
  call void @df_md_set_bb_info(i32 %24, %struct.df_md_bb_info* %25), !dbg !8839
  %call16 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !8840
  %26 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8841
  %init17 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %26, i32 0, i32 2, !dbg !8842
  store %struct.bitmap_head_def* %call16, %struct.bitmap_head_def** %init17, align 8, !dbg !8843
  %call18 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !8844
  %27 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8845
  %gen19 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %27, i32 0, i32 0, !dbg !8846
  store %struct.bitmap_head_def* %call18, %struct.bitmap_head_def** %gen19, align 8, !dbg !8847
  %call20 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !8848
  %28 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8849
  %kill21 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %28, i32 0, i32 1, !dbg !8850
  store %struct.bitmap_head_def* %call20, %struct.bitmap_head_def** %kill21, align 8, !dbg !8851
  %call22 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !8852
  %29 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8853
  %in23 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %29, i32 0, i32 3, !dbg !8854
  store %struct.bitmap_head_def* %call22, %struct.bitmap_head_def** %in23, align 8, !dbg !8855
  %call24 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !8856
  %30 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8857
  %out25 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %30, i32 0, i32 4, !dbg !8858
  store %struct.bitmap_head_def* %call24, %struct.bitmap_head_def** %out25, align 8, !dbg !8859
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !8860

for.inc:                                          ; preds = %if.end26
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !8804
  br label %for.cond, !dbg !8804, !llvm.loop !8861

for.end:                                          ; preds = %for.cond
  %31 = load %struct.df*, %struct.df** @df, align 8, !dbg !8863
  %problems_by_index27 = getelementptr inbounds %struct.df, %struct.df* %31, i32 0, i32 1, !dbg !8863
  %arrayidx28 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index27, i64 0, i64 7, !dbg !8863
  %32 = load %struct.dataflow*, %struct.dataflow** %arrayidx28, align 8, !dbg !8863
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %32, i32 0, i32 9, !dbg !8864
  store i8 1, i8* %optional_p, align 2, !dbg !8865
  ret void, !dbg !8866
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_reset(%struct.bitmap_head_def* %all_blocks) #0 !dbg !8867 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_md_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !8868, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !8870, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !8872, metadata !DIExpression()), !dbg !8873
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !8874
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %bb_index), !dbg !8874
  br label %for.cond, !dbg !8874

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !8876
  %tobool = icmp ne i8 %call, 0, !dbg !8874
  br i1 %tobool, label %for.body, label %for.end, !dbg !8874

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_md_bb_info** %bb_info, metadata !8878, metadata !DIExpression()), !dbg !8880
  %1 = load i32, i32* %bb_index, align 4, !dbg !8881
  %call1 = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %1), !dbg !8882
  store %struct.df_md_bb_info* %call1, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8880
  %2 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8883
  %tobool2 = icmp ne %struct.df_md_bb_info* %2, null, !dbg !8883
  br i1 %tobool2, label %cond.false, label %cond.true, !dbg !8883

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 4267, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !8883
  br label %cond.end, !dbg !8883

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !8883

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8883
  %3 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8884
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %3, i32 0, i32 3, !dbg !8885
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !8885
  call void @bitmap_clear(%struct.bitmap_head_def* %4), !dbg !8886
  %5 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8887
  %out = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %5, i32 0, i32 4, !dbg !8888
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !8888
  call void @bitmap_clear(%struct.bitmap_head_def* %6), !dbg !8889
  br label %for.inc, !dbg !8890

for.inc:                                          ; preds = %cond.end
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !8876
  br label %for.cond, !dbg !8876, !llvm.loop !8891

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8893
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_free_bb_info(%struct.basic_block_def* %bb, i8* %vbb_info) #0 !dbg !8894 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %vbb_info.addr = alloca i8*, align 8
  %bb_info = alloca %struct.df_md_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !8895, metadata !DIExpression()), !dbg !8896
  store i8* %vbb_info, i8** %vbb_info.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vbb_info.addr, metadata !8897, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.declare(metadata %struct.df_md_bb_info** %bb_info, metadata !8899, metadata !DIExpression()), !dbg !8900
  %0 = load i8*, i8** %vbb_info.addr, align 8, !dbg !8901
  %1 = bitcast i8* %0 to %struct.df_md_bb_info*, !dbg !8902
  store %struct.df_md_bb_info* %1, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8900
  %2 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8903
  %tobool = icmp ne %struct.df_md_bb_info* %2, null, !dbg !8903
  br i1 %tobool, label %if.then, label %if.end, !dbg !8905

if.then:                                          ; preds = %entry
  %3 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8906
  %kill = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %3, i32 0, i32 1, !dbg !8906
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !8906
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %4), !dbg !8906
  %5 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8906
  %kill1 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %5, i32 0, i32 1, !dbg !8906
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %kill1, align 8, !dbg !8906
  %6 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8908
  %gen = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %6, i32 0, i32 0, !dbg !8908
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !8908
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %7), !dbg !8908
  %8 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8908
  %gen2 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %8, i32 0, i32 0, !dbg !8908
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %gen2, align 8, !dbg !8908
  %9 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8909
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %9, i32 0, i32 2, !dbg !8909
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !8909
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %10), !dbg !8909
  %11 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8909
  %init3 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %11, i32 0, i32 2, !dbg !8909
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %init3, align 8, !dbg !8909
  %12 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8910
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %12, i32 0, i32 3, !dbg !8910
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !8910
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %13), !dbg !8910
  %14 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8910
  %in4 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %14, i32 0, i32 3, !dbg !8910
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in4, align 8, !dbg !8910
  %15 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8911
  %out = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %15, i32 0, i32 4, !dbg !8911
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !8911
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %16), !dbg !8911
  %17 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8911
  %out5 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %17, i32 0, i32 4, !dbg !8911
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out5, align 8, !dbg !8911
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !8912
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %18, i32 0, i32 1, !dbg !8912
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 7, !dbg !8912
  %19 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !8912
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %19, i32 0, i32 3, !dbg !8913
  %20 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !8913
  %21 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !8914
  %22 = bitcast %struct.df_md_bb_info* %21 to i8*, !dbg !8914
  call void @pool_free(%struct.alloc_pool_def* %20, i8* %22), !dbg !8915
  br label %if.end, !dbg !8916

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8917
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_local_compute(%struct.bitmap_head_def* %all_blocks) #0 !dbg !8918 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %df_bb_index = alloca i32, align 4
  %bi1 = alloca %struct.bitmap_iterator, align 8
  %bi2 = alloca %struct.bitmap_iterator, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %frontiers = alloca %struct.bitmap_head_def**, align 8
  %kill = alloca %struct.bitmap_head_def*, align 8
  %bb23 = alloca %struct.basic_block_def*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !8919, metadata !DIExpression()), !dbg !8920
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !8921, metadata !DIExpression()), !dbg !8922
  call void @llvm.dbg.declare(metadata i32* %df_bb_index, metadata !8923, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi1, metadata !8925, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi2, metadata !8927, metadata !DIExpression()), !dbg !8928
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !8929, metadata !DIExpression()), !dbg !8930
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def*** %frontiers, metadata !8931, metadata !DIExpression()), !dbg !8932
  %call = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !8933
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !8934
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !8935
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi1, %struct.bitmap_head_def* %0, i32 0, i32* %bb_index), !dbg !8935
  br label %for.cond, !dbg !8935

for.cond:                                         ; preds = %for.inc, %entry
  %call1 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi1, i32* %bb_index), !dbg !8937
  %tobool = icmp ne i8 %call1, 0, !dbg !8935
  br i1 %tobool, label %for.body, label %for.end, !dbg !8935

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %bb_index, align 4, !dbg !8939
  call void @df_md_bb_local_compute(i32 %1), !dbg !8941
  br label %for.inc, !dbg !8942

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi1, i32* %bb_index), !dbg !8937
  br label %for.cond, !dbg !8937, !llvm.loop !8943

for.end:                                          ; preds = %for.cond
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !8945
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %2), !dbg !8945
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !8945
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8946
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, !dbg !8946
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !8946
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8946
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i32 0, i32 5, !dbg !8946
  %5 = load i32, i32* %x_last_basic_block, align 8, !dbg !8946
  %conv = sext i32 %5 to i64, !dbg !8946
  %mul = mul i64 8, %conv, !dbg !8946
  %call2 = call i8* @xmalloc(i64 %mul), !dbg !8946
  %6 = bitcast i8* %call2 to %struct.bitmap_head_def**, !dbg !8946
  store %struct.bitmap_head_def** %6, %struct.bitmap_head_def*** %frontiers, align 8, !dbg !8947
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8948
  %add.ptr3 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, !dbg !8948
  %cfg4 = getelementptr inbounds %struct.function, %struct.function* %add.ptr3, i32 0, i32 1, !dbg !8948
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4, align 8, !dbg !8948
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i32 0, i32 0, !dbg !8948
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !8948
  store %struct.basic_block_def* %9, %struct.basic_block_def** %bb, align 8, !dbg !8948
  br label %for.cond5, !dbg !8948

for.cond5:                                        ; preds = %for.inc9, %for.end
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8950
  %tobool6 = icmp ne %struct.basic_block_def* %10, null, !dbg !8948
  br i1 %tobool6, label %for.body7, label %for.end10, !dbg !8948

for.body7:                                        ; preds = %for.cond5
  %call8 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !8952
  %11 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %frontiers, align 8, !dbg !8953
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8954
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i32 0, i32 9, !dbg !8955
  %13 = load i32, i32* %index, align 8, !dbg !8955
  %idxprom = sext i32 %13 to i64, !dbg !8953
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %11, i64 %idxprom, !dbg !8953
  store %struct.bitmap_head_def* %call8, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !8956
  br label %for.inc9, !dbg !8953

for.inc9:                                         ; preds = %for.body7
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8950
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %14, i32 0, i32 6, !dbg !8950
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !8950
  store %struct.basic_block_def* %15, %struct.basic_block_def** %bb, align 8, !dbg !8950
  br label %for.cond5, !dbg !8950, !llvm.loop !8957

for.end10:                                        ; preds = %for.cond5
  %16 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %frontiers, align 8, !dbg !8959
  call void @compute_dominance_frontiers(%struct.bitmap_head_def** %16), !dbg !8960
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !8961
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi1, %struct.bitmap_head_def* %17, i32 0, i32* %bb_index), !dbg !8961
  br label %for.cond11, !dbg !8961

for.cond11:                                       ; preds = %for.inc38, %for.end10
  %call12 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi1, i32* %bb_index), !dbg !8963
  %tobool13 = icmp ne i8 %call12, 0, !dbg !8961
  br i1 %tobool13, label %for.body14, label %for.end39, !dbg !8961

for.body14:                                       ; preds = %for.cond11
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %kill, metadata !8965, metadata !DIExpression()), !dbg !8967
  %18 = load i32, i32* %bb_index, align 4, !dbg !8968
  %call15 = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %18), !dbg !8969
  %kill16 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call15, i32 0, i32 1, !dbg !8970
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill16, align 8, !dbg !8970
  store %struct.bitmap_head_def* %19, %struct.bitmap_head_def** %kill, align 8, !dbg !8967
  %20 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %frontiers, align 8, !dbg !8971
  %21 = load i32, i32* %bb_index, align 4, !dbg !8971
  %idxprom17 = zext i32 %21 to i64, !dbg !8971
  %arrayidx18 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %20, i64 %idxprom17, !dbg !8971
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx18, align 8, !dbg !8971
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi2, %struct.bitmap_head_def* %22, i32 0, i32* %df_bb_index), !dbg !8971
  br label %for.cond19, !dbg !8971

for.cond19:                                       ; preds = %for.inc36, %for.body14
  %call20 = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi2, i32* %df_bb_index), !dbg !8973
  %tobool21 = icmp ne i8 %call20, 0, !dbg !8971
  br i1 %tobool21, label %for.body22, label %for.end37, !dbg !8971

for.body22:                                       ; preds = %for.cond19
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb23, metadata !8975, metadata !DIExpression()), !dbg !8977
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8978
  %add.ptr24 = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, !dbg !8978
  %cfg25 = getelementptr inbounds %struct.function, %struct.function* %add.ptr24, i32 0, i32 1, !dbg !8978
  %24 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg25, align 8, !dbg !8978
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %24, i32 0, i32 2, !dbg !8978
  %25 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !8978
  %tobool26 = icmp ne %struct.VEC_basic_block_gc* %25, null, !dbg !8978
  br i1 %tobool26, label %cond.true, label %cond.false, !dbg !8978

cond.true:                                        ; preds = %for.body22
  %26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8978
  %add.ptr27 = getelementptr inbounds %struct.function, %struct.function* %26, i64 0, !dbg !8978
  %cfg28 = getelementptr inbounds %struct.function, %struct.function* %add.ptr27, i32 0, i32 1, !dbg !8978
  %27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg28, align 8, !dbg !8978
  %x_basic_block_info29 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i32 0, i32 2, !dbg !8978
  %28 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info29, align 8, !dbg !8978
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %28, i32 0, i32 0, !dbg !8978
  br label %cond.end, !dbg !8978

cond.false:                                       ; preds = %for.body22
  br label %cond.end, !dbg !8978

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8978
  %29 = load i32, i32* %df_bb_index, align 4, !dbg !8978
  %call30 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %29), !dbg !8978
  store %struct.basic_block_def* %call30, %struct.basic_block_def** %bb23, align 8, !dbg !8977
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !8979
  %31 = load i32, i32* %df_bb_index, align 4, !dbg !8981
  %call31 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %30, i32 %31), !dbg !8982
  %tobool32 = icmp ne i32 %call31, 0, !dbg !8982
  br i1 %tobool32, label %if.then, label %if.end, !dbg !8983

if.then:                                          ; preds = %cond.end
  %32 = load i32, i32* %df_bb_index, align 4, !dbg !8984
  %call33 = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %32), !dbg !8985
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call33, i32 0, i32 2, !dbg !8986
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !8986
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !8987
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %bb23, align 8, !dbg !8988
  %call34 = call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %35), !dbg !8989
  %call35 = call zeroext i8 @bitmap_ior_and_into(%struct.bitmap_head_def* %33, %struct.bitmap_head_def* %34, %struct.bitmap_head_def* %call34), !dbg !8990
  br label %if.end, !dbg !8990

if.end:                                           ; preds = %if.then, %cond.end
  br label %for.inc36, !dbg !8991

for.inc36:                                        ; preds = %if.end
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi2, i32* %df_bb_index), !dbg !8973
  br label %for.cond19, !dbg !8973, !llvm.loop !8992

for.end37:                                        ; preds = %for.cond19
  br label %for.inc38, !dbg !8994

for.inc38:                                        ; preds = %for.end37
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi1, i32* %bb_index), !dbg !8963
  br label %for.cond11, !dbg !8963, !llvm.loop !8995

for.end39:                                        ; preds = %for.cond11
  %36 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8997
  %add.ptr40 = getelementptr inbounds %struct.function, %struct.function* %36, i64 0, !dbg !8997
  %cfg41 = getelementptr inbounds %struct.function, %struct.function* %add.ptr40, i32 0, i32 1, !dbg !8997
  %37 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg41, align 8, !dbg !8997
  %x_entry_block_ptr42 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %37, i32 0, i32 0, !dbg !8997
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr42, align 8, !dbg !8997
  store %struct.basic_block_def* %38, %struct.basic_block_def** %bb, align 8, !dbg !8997
  br label %for.cond43, !dbg !8997

for.cond43:                                       ; preds = %for.inc52, %for.end39
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8999
  %tobool44 = icmp ne %struct.basic_block_def* %39, null, !dbg !8997
  br i1 %tobool44, label %for.body45, label %for.end54, !dbg !8997

for.body45:                                       ; preds = %for.cond43
  %40 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %frontiers, align 8, !dbg !9001
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !9001
  %index46 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i32 0, i32 9, !dbg !9001
  %42 = load i32, i32* %index46, align 8, !dbg !9001
  %idxprom47 = sext i32 %42 to i64, !dbg !9001
  %arrayidx48 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %40, i64 %idxprom47, !dbg !9001
  %43 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx48, align 8, !dbg !9001
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %43), !dbg !9001
  %44 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %frontiers, align 8, !dbg !9001
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !9001
  %index49 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %45, i32 0, i32 9, !dbg !9001
  %46 = load i32, i32* %index49, align 8, !dbg !9001
  %idxprom50 = sext i32 %46 to i64, !dbg !9001
  %arrayidx51 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %44, i64 %idxprom50, !dbg !9001
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx51, align 8, !dbg !9001
  br label %for.inc52, !dbg !9001

for.inc52:                                        ; preds = %for.body45
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8999
  %next_bb53 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %47, i32 0, i32 6, !dbg !8999
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb53, align 8, !dbg !8999
  store %struct.basic_block_def* %48, %struct.basic_block_def** %bb, align 8, !dbg !8999
  br label %for.cond43, !dbg !8999, !llvm.loop !9002

for.end54:                                        ; preds = %for.cond43
  %49 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %frontiers, align 8, !dbg !9004
  %50 = bitcast %struct.bitmap_head_def** %49 to i8*, !dbg !9004
  call void @free(i8* %50), !dbg !9005
  ret void, !dbg !9006
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_init(%struct.bitmap_head_def* %all_blocks) #0 !dbg !9007 {
entry:
  %all_blocks.addr = alloca %struct.bitmap_head_def*, align 8
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_info = alloca %struct.df_md_bb_info*, align 8
  store %struct.bitmap_head_def* %all_blocks, %struct.bitmap_head_def** %all_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %all_blocks.addr, metadata !9008, metadata !DIExpression()), !dbg !9009
  call void @llvm.dbg.declare(metadata i32* %bb_index, metadata !9010, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.declare(metadata %struct.bitmap_iterator* %bi, metadata !9012, metadata !DIExpression()), !dbg !9013
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %all_blocks.addr, align 8, !dbg !9014
  call void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %0, i32 0, i32* %bb_index), !dbg !9014
  br label %for.cond, !dbg !9014

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !9016
  %tobool = icmp ne i8 %call, 0, !dbg !9014
  br i1 %tobool, label %for.body, label %for.end, !dbg !9014

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_md_bb_info** %bb_info, metadata !9018, metadata !DIExpression()), !dbg !9020
  %1 = load i32, i32* %bb_index, align 4, !dbg !9021
  %call1 = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %1), !dbg !9022
  store %struct.df_md_bb_info* %call1, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9020
  %2 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9023
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %2, i32 0, i32 3, !dbg !9024
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !9024
  %4 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9025
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %4, i32 0, i32 2, !dbg !9026
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !9026
  call void @bitmap_copy(%struct.bitmap_head_def* %3, %struct.bitmap_head_def* %5), !dbg !9027
  %6 = load i32, i32* %bb_index, align 4, !dbg !9028
  %call2 = call zeroext i8 @df_md_transfer_function(i32 %6), !dbg !9029
  br label %for.inc, !dbg !9030

for.inc:                                          ; preds = %for.body
  call void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bb_index), !dbg !9016
  br label %for.cond, !dbg !9016, !llvm.loop !9031

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9033
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_confluence_0(%struct.basic_block_def* %bb) #0 !dbg !9034 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %bb_info = alloca %struct.df_md_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !9035, metadata !DIExpression()), !dbg !9036
  call void @llvm.dbg.declare(metadata %struct.df_md_bb_info** %bb_info, metadata !9037, metadata !DIExpression()), !dbg !9038
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9039
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !9040
  %1 = load i32, i32* %index, align 8, !dbg !9040
  %call = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %1), !dbg !9041
  store %struct.df_md_bb_info* %call, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9038
  %2 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9042
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %2, i32 0, i32 3, !dbg !9043
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !9043
  %4 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9044
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %4, i32 0, i32 2, !dbg !9045
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !9045
  call void @bitmap_copy(%struct.bitmap_head_def* %3, %struct.bitmap_head_def* %5), !dbg !9046
  ret void, !dbg !9047
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_confluence_n(%struct.edge_def* %e) #0 !dbg !9048 {
entry:
  %e.addr = alloca %struct.edge_def*, align 8
  %op1 = alloca %struct.bitmap_head_def*, align 8
  %op2 = alloca %struct.bitmap_head_def*, align 8
  store %struct.edge_def* %e, %struct.edge_def** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e.addr, metadata !9049, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %op1, metadata !9051, metadata !DIExpression()), !dbg !9052
  %0 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !9053
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %0, i32 0, i32 1, !dbg !9054
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !9054
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 9, !dbg !9055
  %2 = load i32, i32* %index, align 8, !dbg !9055
  %call = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %2), !dbg !9056
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i32 0, i32 3, !dbg !9057
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !9057
  store %struct.bitmap_head_def* %3, %struct.bitmap_head_def** %op1, align 8, !dbg !9052
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %op2, metadata !9058, metadata !DIExpression()), !dbg !9059
  %4 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !9060
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %4, i32 0, i32 0, !dbg !9061
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !9061
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 9, !dbg !9062
  %6 = load i32, i32* %index1, align 8, !dbg !9062
  %call2 = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %6), !dbg !9063
  %out = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call2, i32 0, i32 4, !dbg !9064
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !9064
  store %struct.bitmap_head_def* %7, %struct.bitmap_head_def** %op2, align 8, !dbg !9059
  %8 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !9065
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %8, i32 0, i32 7, !dbg !9067
  %9 = load i32, i32* %flags, align 8, !dbg !9067
  %and = and i32 %9, 16, !dbg !9068
  %tobool = icmp ne i32 %and, 0, !dbg !9068
  br i1 %tobool, label %if.then, label %if.end, !dbg !9069

if.then:                                          ; preds = %entry
  br label %if.end9, !dbg !9070

if.end:                                           ; preds = %entry
  %10 = load %struct.edge_def*, %struct.edge_def** %e.addr, align 8, !dbg !9071
  %flags3 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %10, i32 0, i32 7, !dbg !9073
  %11 = load i32, i32* %flags3, align 8, !dbg !9073
  %and4 = and i32 %11, 8, !dbg !9074
  %tobool5 = icmp ne i32 %and4, 0, !dbg !9074
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !9075

if.then6:                                         ; preds = %if.end
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !9076
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op2, align 8, !dbg !9077
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @regs_invalidated_by_call_regset, align 8, !dbg !9078
  %call7 = call zeroext i8 @bitmap_ior_and_compl_into(%struct.bitmap_head_def* %12, %struct.bitmap_head_def* %13, %struct.bitmap_head_def* %14), !dbg !9079
  br label %if.end9, !dbg !9079

if.else:                                          ; preds = %if.end
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op1, align 8, !dbg !9080
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %op2, align 8, !dbg !9081
  %call8 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %15, %struct.bitmap_head_def* %16), !dbg !9082
  br label %if.end9

if.end9:                                          ; preds = %if.then, %if.else, %if.then6
  ret void, !dbg !9083
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @df_md_transfer_function(i32 %bb_index) #0 !dbg !9084 {
entry:
  %bb_index.addr = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %bb_info = alloca %struct.df_md_bb_info*, align 8
  %in = alloca %struct.bitmap_head_def*, align 8
  %out = alloca %struct.bitmap_head_def*, align 8
  %gen = alloca %struct.bitmap_head_def*, align 8
  %kill = alloca %struct.bitmap_head_def*, align 8
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !9085, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !9087, metadata !DIExpression()), !dbg !9088
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9089
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !9089
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !9089
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9089
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 2, !dbg !9089
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !9089
  %tobool = icmp ne %struct.VEC_basic_block_gc* %2, null, !dbg !9089
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9089

cond.true:                                        ; preds = %entry
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9089
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, !dbg !9089
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !9089
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !9089
  %x_basic_block_info3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i32 0, i32 2, !dbg !9089
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info3, align 8, !dbg !9089
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i32 0, i32 0, !dbg !9089
  br label %cond.end, !dbg !9089

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9089

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9089
  %6 = load i32, i32* %bb_index.addr, align 4, !dbg !9089
  %call = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %6), !dbg !9089
  store %struct.basic_block_def* %call, %struct.basic_block_def** %bb, align 8, !dbg !9088
  call void @llvm.dbg.declare(metadata %struct.df_md_bb_info** %bb_info, metadata !9090, metadata !DIExpression()), !dbg !9091
  %7 = load i32, i32* %bb_index.addr, align 4, !dbg !9092
  %call4 = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %7), !dbg !9093
  store %struct.df_md_bb_info* %call4, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9091
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %in, metadata !9094, metadata !DIExpression()), !dbg !9095
  %8 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9096
  %in5 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %8, i32 0, i32 3, !dbg !9097
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in5, align 8, !dbg !9097
  store %struct.bitmap_head_def* %9, %struct.bitmap_head_def** %in, align 8, !dbg !9095
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %out, metadata !9098, metadata !DIExpression()), !dbg !9099
  %10 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9100
  %out6 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %10, i32 0, i32 4, !dbg !9101
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out6, align 8, !dbg !9101
  store %struct.bitmap_head_def* %11, %struct.bitmap_head_def** %out, align 8, !dbg !9099
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %gen, metadata !9102, metadata !DIExpression()), !dbg !9103
  %12 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9104
  %gen7 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %12, i32 0, i32 0, !dbg !9105
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen7, align 8, !dbg !9105
  store %struct.bitmap_head_def* %13, %struct.bitmap_head_def** %gen, align 8, !dbg !9103
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %kill, metadata !9106, metadata !DIExpression()), !dbg !9107
  %14 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9108
  %kill8 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %14, i32 0, i32 1, !dbg !9109
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill8, align 8, !dbg !9109
  store %struct.bitmap_head_def* %15, %struct.bitmap_head_def** %kill, align 8, !dbg !9107
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_md_scratch, align 8, !dbg !9110
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !9111
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !9112
  %call9 = call %struct.bitmap_head_def* @df_get_live_out(%struct.basic_block_def* %18), !dbg !9113
  call void @bitmap_and(%struct.bitmap_head_def* %16, %struct.bitmap_head_def* %17, %struct.bitmap_head_def* %call9), !dbg !9114
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !9115
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !9116
  %call10 = call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %20), !dbg !9117
  call void @bitmap_and_into(%struct.bitmap_head_def* %19, %struct.bitmap_head_def* %call10), !dbg !9118
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !9119
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_md_scratch, align 8, !dbg !9120
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !9121
  %24 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !9122
  %call11 = call zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def* %21, %struct.bitmap_head_def* %22, %struct.bitmap_head_def* %23, %struct.bitmap_head_def* %24), !dbg !9123
  ret i8 %call11, !dbg !9124
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_free() #0 !dbg !9125 {
entry:
  %i = alloca i32, align 4
  %bb_info = alloca %struct.df_md_bb_info*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9126, metadata !DIExpression()), !dbg !9127
  store i32 0, i32* %i, align 4, !dbg !9128
  br label %for.cond, !dbg !9130

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9131
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !9133
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !9133
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 7, !dbg !9133
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !9133
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 2, !dbg !9134
  %3 = load i32, i32* %block_info_size, align 8, !dbg !9134
  %cmp = icmp ult i32 %0, %3, !dbg !9135
  br i1 %cmp, label %for.body, label %for.end, !dbg !9136

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.df_md_bb_info** %bb_info, metadata !9137, metadata !DIExpression()), !dbg !9139
  %4 = load i32, i32* %i, align 4, !dbg !9140
  %call = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %4), !dbg !9141
  store %struct.df_md_bb_info* %call, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9139
  %5 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9142
  %tobool = icmp ne %struct.df_md_bb_info* %5, null, !dbg !9142
  br i1 %tobool, label %if.then, label %if.end, !dbg !9144

if.then:                                          ; preds = %for.body
  %6 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9145
  %kill = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %6, i32 0, i32 1, !dbg !9145
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !9145
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %7), !dbg !9145
  %8 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9145
  %kill1 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %8, i32 0, i32 1, !dbg !9145
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %kill1, align 8, !dbg !9145
  %9 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9147
  %gen = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %9, i32 0, i32 0, !dbg !9147
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !9147
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %10), !dbg !9147
  %11 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9147
  %gen2 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %11, i32 0, i32 0, !dbg !9147
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %gen2, align 8, !dbg !9147
  %12 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9148
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %12, i32 0, i32 2, !dbg !9148
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !9148
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %13), !dbg !9148
  %14 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9148
  %init3 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %14, i32 0, i32 2, !dbg !9148
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %init3, align 8, !dbg !9148
  %15 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9149
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %15, i32 0, i32 3, !dbg !9149
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !9149
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %16), !dbg !9149
  %17 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9149
  %in4 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %17, i32 0, i32 3, !dbg !9149
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in4, align 8, !dbg !9149
  %18 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9150
  %out = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %18, i32 0, i32 4, !dbg !9150
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !9150
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %19), !dbg !9150
  %20 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9150
  %out5 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %20, i32 0, i32 4, !dbg !9150
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out5, align 8, !dbg !9150
  br label %if.end, !dbg !9151

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !9152

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %i, align 4, !dbg !9153
  %inc = add i32 %21, 1, !dbg !9153
  store i32 %inc, i32* %i, align 4, !dbg !9153
  br label %for.cond, !dbg !9154, !llvm.loop !9155

for.end:                                          ; preds = %for.cond
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_md_scratch, align 8, !dbg !9157
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %22), !dbg !9157
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @df_md_scratch, align 8, !dbg !9157
  %23 = load %struct.df*, %struct.df** @df, align 8, !dbg !9158
  %problems_by_index6 = getelementptr inbounds %struct.df, %struct.df* %23, i32 0, i32 1, !dbg !9158
  %arrayidx7 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index6, i64 0, i64 7, !dbg !9158
  %24 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !9158
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %24, i32 0, i32 3, !dbg !9159
  %25 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !9159
  call void @free_alloc_pool(%struct.alloc_pool_def* %25), !dbg !9160
  %26 = load %struct.df*, %struct.df** @df, align 8, !dbg !9161
  %problems_by_index8 = getelementptr inbounds %struct.df, %struct.df* %26, i32 0, i32 1, !dbg !9161
  %arrayidx9 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index8, i64 0, i64 7, !dbg !9161
  %27 = load %struct.dataflow*, %struct.dataflow** %arrayidx9, align 8, !dbg !9161
  %block_info_size10 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %27, i32 0, i32 2, !dbg !9162
  store i32 0, i32* %block_info_size10, align 8, !dbg !9163
  %28 = load %struct.df*, %struct.df** @df, align 8, !dbg !9164
  %problems_by_index11 = getelementptr inbounds %struct.df, %struct.df* %28, i32 0, i32 1, !dbg !9164
  %arrayidx12 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index11, i64 0, i64 7, !dbg !9164
  %29 = load %struct.dataflow*, %struct.dataflow** %arrayidx12, align 8, !dbg !9164
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %29, i32 0, i32 1, !dbg !9165
  %30 = load i8**, i8*** %block_info, align 8, !dbg !9165
  %31 = bitcast i8** %30 to i8*, !dbg !9164
  call void @free(i8* %31), !dbg !9166
  %32 = load %struct.df*, %struct.df** @df, align 8, !dbg !9167
  %problems_by_index13 = getelementptr inbounds %struct.df, %struct.df* %32, i32 0, i32 1, !dbg !9167
  %arrayidx14 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index13, i64 0, i64 7, !dbg !9167
  %33 = load %struct.dataflow*, %struct.dataflow** %arrayidx14, align 8, !dbg !9167
  %34 = bitcast %struct.dataflow* %33 to i8*, !dbg !9167
  call void @free(i8* %34), !dbg !9168
  ret void, !dbg !9169
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_top_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !9170 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %bb_info = alloca %struct.df_md_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !9171, metadata !DIExpression()), !dbg !9172
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !9173, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.declare(metadata %struct.df_md_bb_info** %bb_info, metadata !9175, metadata !DIExpression()), !dbg !9176
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9177
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !9178
  %1 = load i32, i32* %index, align 8, !dbg !9178
  %call = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %1), !dbg !9179
  store %struct.df_md_bb_info* %call, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9176
  %2 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9180
  %tobool = icmp ne %struct.df_md_bb_info* %2, null, !dbg !9180
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9182

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9183
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %3, i32 0, i32 3, !dbg !9184
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !9184
  %tobool1 = icmp ne %struct.bitmap_head_def* %4, null, !dbg !9183
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9185

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !9186

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !9187
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0)), !dbg !9188
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !9189
  %7 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9190
  %in3 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %7, i32 0, i32 3, !dbg !9191
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in3, align 8, !dbg !9191
  call void @df_print_regset(%struct._IO_FILE* %6, %struct.bitmap_head_def* %8), !dbg !9192
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !9193
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0)), !dbg !9194
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !9195
  %11 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9196
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %11, i32 0, i32 2, !dbg !9197
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !9197
  call void @df_print_regset(%struct._IO_FILE* %10, %struct.bitmap_head_def* %12), !dbg !9198
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !9199
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0)), !dbg !9200
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !9201
  %15 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9202
  %gen = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %15, i32 0, i32 0, !dbg !9203
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !9203
  call void @df_print_regset(%struct._IO_FILE* %14, %struct.bitmap_head_def* %16), !dbg !9204
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !9205
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i64 0, i64 0)), !dbg !9206
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !9207
  %19 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9208
  %kill = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %19, i32 0, i32 1, !dbg !9209
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !9209
  call void @df_print_regset(%struct._IO_FILE* %18, %struct.bitmap_head_def* %20), !dbg !9210
  br label %return, !dbg !9211

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9211
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_bottom_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #0 !dbg !9212 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %bb_info = alloca %struct.df_md_bb_info*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !9213, metadata !DIExpression()), !dbg !9214
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !9215, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.declare(metadata %struct.df_md_bb_info** %bb_info, metadata !9217, metadata !DIExpression()), !dbg !9218
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !9219
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 9, !dbg !9220
  %1 = load i32, i32* %index, align 8, !dbg !9220
  %call = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %1), !dbg !9221
  store %struct.df_md_bb_info* %call, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9218
  %2 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9222
  %tobool = icmp ne %struct.df_md_bb_info* %2, null, !dbg !9222
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9224

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9225
  %out = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %3, i32 0, i32 4, !dbg !9226
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !9226
  %tobool1 = icmp ne %struct.bitmap_head_def* %4, null, !dbg !9225
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9227

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !9228

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !9229
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0)), !dbg !9230
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !9231
  %7 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9232
  %out3 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %7, i32 0, i32 4, !dbg !9233
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out3, align 8, !dbg !9233
  call void @df_print_regset(%struct._IO_FILE* %6, %struct.bitmap_head_def* %8), !dbg !9234
  br label %return, !dbg !9235

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9235
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_md_bb_info* @df_md_get_bb_info(i32 %index) #0 !dbg !9236 {
entry:
  %retval = alloca %struct.df_md_bb_info*, align 8
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9239, metadata !DIExpression()), !dbg !9240
  %0 = load i32, i32* %index.addr, align 4, !dbg !9241
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !9243
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !9243
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 7, !dbg !9243
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !9243
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 2, !dbg !9244
  %3 = load i32, i32* %block_info_size, align 8, !dbg !9244
  %cmp = icmp ult i32 %0, %3, !dbg !9245
  br i1 %cmp, label %if.then, label %if.else, !dbg !9246

if.then:                                          ; preds = %entry
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !9247
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !9247
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 7, !dbg !9247
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !9247
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 1, !dbg !9248
  %6 = load i8**, i8*** %block_info, align 8, !dbg !9248
  %7 = load i32, i32* %index.addr, align 4, !dbg !9249
  %idxprom = zext i32 %7 to i64, !dbg !9247
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %idxprom, !dbg !9247
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !9247
  %9 = bitcast i8* %8 to %struct.df_md_bb_info*, !dbg !9250
  store %struct.df_md_bb_info* %9, %struct.df_md_bb_info** %retval, align 8, !dbg !9251
  br label %return, !dbg !9251

if.else:                                          ; preds = %entry
  store %struct.df_md_bb_info* null, %struct.df_md_bb_info** %retval, align 8, !dbg !9252
  br label %return, !dbg !9252

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %retval, align 8, !dbg !9253
  ret %struct.df_md_bb_info* %10, !dbg !9253
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_set_bb_info(i32 %index, %struct.df_md_bb_info* %bb_info) #0 !dbg !9254 {
entry:
  %index.addr = alloca i32, align 4
  %bb_info.addr = alloca %struct.df_md_bb_info*, align 8
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  store %struct.df_md_bb_info* %bb_info, %struct.df_md_bb_info** %bb_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_md_bb_info** %bb_info.addr, metadata !9259, metadata !DIExpression()), !dbg !9260
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !9261
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %0, i32 0, i32 1, !dbg !9261
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 7, !dbg !9261
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !9261
  %tobool = icmp ne %struct.dataflow* %1, null, !dbg !9261
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !9261

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 4030, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9261
  br label %cond.end, !dbg !9261

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9261

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9261
  %2 = load i32, i32* %index.addr, align 4, !dbg !9262
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !9262
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %3, i32 0, i32 1, !dbg !9262
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 7, !dbg !9262
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !9262
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i32 0, i32 2, !dbg !9262
  %5 = load i32, i32* %block_info_size, align 8, !dbg !9262
  %cmp = icmp ult i32 %2, %5, !dbg !9262
  br i1 %cmp, label %cond.false4, label %cond.true3, !dbg !9262

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 4031, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9262
  br label %cond.end5, !dbg !9262

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !9262

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !9262
  %6 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info.addr, align 8, !dbg !9263
  %7 = bitcast %struct.df_md_bb_info* %6 to i8*, !dbg !9263
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !9264
  %problems_by_index7 = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 1, !dbg !9264
  %arrayidx8 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index7, i64 0, i64 7, !dbg !9264
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !9264
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %9, i32 0, i32 1, !dbg !9265
  %10 = load i8**, i8*** %block_info, align 8, !dbg !9265
  %11 = load i32, i32* %index.addr, align 4, !dbg !9266
  %idxprom = zext i32 %11 to i64, !dbg !9264
  %arrayidx9 = getelementptr inbounds i8*, i8** %10, i64 %idxprom, !dbg !9264
  store i8* %7, i8** %arrayidx9, align 8, !dbg !9267
  ret void, !dbg !9268
}

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_bb_local_compute(i32 %bb_index) #0 !dbg !9269 {
entry:
  %bb_index.addr = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %bb_info = alloca %struct.df_md_bb_info*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %uid = alloca i32, align 4
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !9270, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !9272, metadata !DIExpression()), !dbg !9273
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9274
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !9274
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !9274
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !9274
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 2, !dbg !9274
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !9274
  %tobool = icmp ne %struct.VEC_basic_block_gc* %2, null, !dbg !9274
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9274

cond.true:                                        ; preds = %entry
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9274
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, !dbg !9274
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !9274
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !9274
  %x_basic_block_info3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i32 0, i32 2, !dbg !9274
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info3, align 8, !dbg !9274
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i32 0, i32 0, !dbg !9274
  br label %cond.end, !dbg !9274

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9274

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9274
  %6 = load i32, i32* %bb_index.addr, align 4, !dbg !9274
  %call = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %6), !dbg !9274
  store %struct.basic_block_def* %call, %struct.basic_block_def** %bb, align 8, !dbg !9273
  call void @llvm.dbg.declare(metadata %struct.df_md_bb_info** %bb_info, metadata !9275, metadata !DIExpression()), !dbg !9276
  %7 = load i32, i32* %bb_index.addr, align 4, !dbg !9277
  %call4 = call %struct.df_md_bb_info* @df_md_get_bb_info(i32 %7), !dbg !9278
  store %struct.df_md_bb_info* %call4, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9276
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !9279, metadata !DIExpression()), !dbg !9280
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !9281
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %8, i32 0, i32 27, !dbg !9283
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !9283
  %bf.cast = sext i8 %bf.load to i32, !dbg !9283
  %and = and i32 %bf.cast, 2, !dbg !9284
  %tobool5 = icmp ne i32 %and, 0, !dbg !9284
  br i1 %tobool5, label %if.end, label %if.then, !dbg !9285

if.then:                                          ; preds = %cond.end
  %9 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9286
  %10 = load i32, i32* %bb_index.addr, align 4, !dbg !9287
  %call6 = call %union.df_ref_d** @df_get_artificial_defs(i32 %10), !dbg !9288
  call void @df_md_bb_local_compute_process_def(%struct.df_md_bb_info* %9, %union.df_ref_d** %call6, i32 2), !dbg !9289
  br label %if.end, !dbg !9289

if.end:                                           ; preds = %if.then, %cond.end
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !9290
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i32 0, i32 7, !dbg !9290
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !9290
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !9290
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i32 0, i32 0, !dbg !9290
  %13 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !9290
  store %struct.rtx_def* %13, %struct.rtx_def** %insn, align 8, !dbg !9290
  br label %for.cond, !dbg !9290

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9292
  %tobool7 = icmp ne %struct.rtx_def* %14, null, !dbg !9292
  br i1 %tobool7, label %land.rhs, label %land.end, !dbg !9292

land.rhs:                                         ; preds = %for.cond
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9292
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !9292
  %il8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i32 0, i32 7, !dbg !9292
  %rtl9 = bitcast %union.basic_block_il_dependent* %il8 to %struct.rtl_bb_info**, !dbg !9292
  %17 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl9, align 8, !dbg !9292
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %17, i32 0, i32 1, !dbg !9292
  %18 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !9292
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !9292
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9292
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !9292
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !9292
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9292
  %cmp = icmp ne %struct.rtx_def* %15, %19, !dbg !9292
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %20 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !9294
  br i1 %20, label %for.body, label %for.end, !dbg !9290

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !9295, metadata !DIExpression()), !dbg !9297
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9298
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !9298
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !9298
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 0, !dbg !9298
  %rt_int = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !9298
  %22 = load i32, i32* %rt_int, align 8, !dbg !9298
  store i32 %22, i32* %uid, align 4, !dbg !9297
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9299
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !9299
  %bf.load13 = load i32, i32* %24, align 8, !dbg !9299
  %bf.clear = and i32 %bf.load13, 65535, !dbg !9299
  %cmp14 = icmp eq i32 %bf.clear, 8, !dbg !9299
  br i1 %cmp14, label %if.end27, label %lor.lhs.false, !dbg !9299

lor.lhs.false:                                    ; preds = %for.body
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9299
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !9299
  %bf.load15 = load i32, i32* %26, align 8, !dbg !9299
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !9299
  %cmp17 = icmp eq i32 %bf.clear16, 7, !dbg !9299
  br i1 %cmp17, label %if.end27, label %lor.lhs.false18, !dbg !9299

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9299
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !9299
  %bf.load19 = load i32, i32* %28, align 8, !dbg !9299
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !9299
  %cmp21 = icmp eq i32 %bf.clear20, 9, !dbg !9299
  br i1 %cmp21, label %if.end27, label %lor.lhs.false22, !dbg !9299

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9299
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !9299
  %bf.load23 = load i32, i32* %30, align 8, !dbg !9299
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !9299
  %cmp25 = icmp eq i32 %bf.clear24, 10, !dbg !9299
  br i1 %cmp25, label %if.end27, label %if.then26, !dbg !9301

if.then26:                                        ; preds = %lor.lhs.false22
  br label %for.inc, !dbg !9302

if.end27:                                         ; preds = %lor.lhs.false22, %lor.lhs.false18, %lor.lhs.false, %for.body
  %31 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9303
  %32 = load %struct.df*, %struct.df** @df, align 8, !dbg !9304
  %insns = getelementptr inbounds %struct.df, %struct.df* %32, i32 0, i32 10, !dbg !9304
  %33 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !9304
  %34 = load i32, i32* %uid, align 4, !dbg !9304
  %idxprom = zext i32 %34 to i64, !dbg !9304
  %arrayidx28 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %33, i64 %idxprom, !dbg !9304
  %35 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx28, align 8, !dbg !9304
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %35, i32 0, i32 1, !dbg !9304
  %36 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !9304
  call void @df_md_bb_local_compute_process_def(%struct.df_md_bb_info* %31, %union.df_ref_d** %36, i32 0), !dbg !9305
  br label %for.inc, !dbg !9306

for.inc:                                          ; preds = %if.end27, %if.then26
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !9292
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !9292
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !9292
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 2, !dbg !9292
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !9292
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !9292
  store %struct.rtx_def* %38, %struct.rtx_def** %insn, align 8, !dbg !9292
  br label %for.cond, !dbg !9292, !llvm.loop !9307

for.end:                                          ; preds = %land.end
  %39 = load %struct.df*, %struct.df** @df, align 8, !dbg !9309
  %changeable_flags33 = getelementptr inbounds %struct.df, %struct.df* %39, i32 0, i32 27, !dbg !9311
  %bf.load34 = load i8, i8* %changeable_flags33, align 4, !dbg !9311
  %bf.cast35 = sext i8 %bf.load34 to i32, !dbg !9311
  %and36 = and i32 %bf.cast35, 2, !dbg !9312
  %tobool37 = icmp ne i32 %and36, 0, !dbg !9312
  br i1 %tobool37, label %if.end40, label %if.then38, !dbg !9313

if.then38:                                        ; preds = %for.end
  %40 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info, align 8, !dbg !9314
  %41 = load i32, i32* %bb_index.addr, align 4, !dbg !9315
  %call39 = call %union.df_ref_d** @df_get_artificial_defs(i32 %41), !dbg !9316
  call void @df_md_bb_local_compute_process_def(%struct.df_md_bb_info* %40, %union.df_ref_d** %call39, i32 0), !dbg !9317
  br label %if.end40, !dbg !9317

if.end40:                                         ; preds = %if.then38, %for.end
  ret void, !dbg !9318
}

declare dso_local void @compute_dominance_frontiers(%struct.bitmap_head_def**) #2

declare dso_local zeroext i8 @bitmap_ior_and_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @df_md_bb_local_compute_process_def(%struct.df_md_bb_info* %bb_info, %union.df_ref_d** %def_rec, i32 %top_flag) #0 !dbg !9319 {
entry:
  %bb_info.addr = alloca %struct.df_md_bb_info*, align 8
  %def_rec.addr = alloca %union.df_ref_d**, align 8
  %top_flag.addr = alloca i32, align 4
  %def = alloca %union.df_ref_d*, align 8
  %dregno = alloca i32, align 4
  store %struct.df_md_bb_info* %bb_info, %struct.df_md_bb_info** %bb_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.df_md_bb_info** %bb_info.addr, metadata !9322, metadata !DIExpression()), !dbg !9323
  store %union.df_ref_d** %def_rec, %union.df_ref_d*** %def_rec.addr, align 8
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec.addr, metadata !9324, metadata !DIExpression()), !dbg !9325
  store i32 %top_flag, i32* %top_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %top_flag.addr, metadata !9326, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !9328, metadata !DIExpression()), !dbg !9329
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !9330
  call void @bitmap_clear(%struct.bitmap_head_def* %0), !dbg !9331
  br label %while.cond, !dbg !9332

while.cond:                                       ; preds = %if.end22, %entry
  %1 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec.addr, align 8, !dbg !9333
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %1, i32 1, !dbg !9333
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec.addr, align 8, !dbg !9333
  %2 = load %union.df_ref_d*, %union.df_ref_d** %1, align 8, !dbg !9334
  store %union.df_ref_d* %2, %union.df_ref_d** %def, align 8, !dbg !9335
  %cmp = icmp ne %union.df_ref_d* %2, null, !dbg !9336
  br i1 %cmp, label %while.body, label %while.end, !dbg !9332

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %dregno, metadata !9337, metadata !DIExpression()), !dbg !9339
  %3 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !9340
  %base = bitcast %union.df_ref_d* %3 to %struct.df_base_ref*, !dbg !9340
  %regno = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base, i32 0, i32 6, !dbg !9340
  %4 = load i32, i32* %regno, align 8, !dbg !9340
  store i32 %4, i32* %dregno, align 4, !dbg !9339
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !9341
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %5, i32 0, i32 27, !dbg !9343
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !9343
  %bf.cast = sext i8 %bf.load to i32, !dbg !9343
  %and = and i32 %bf.cast, 2, !dbg !9344
  %tobool = icmp ne i32 %and, 0, !dbg !9344
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !9345

lor.lhs.false:                                    ; preds = %while.body
  %6 = load i32, i32* %dregno, align 4, !dbg !9346
  %cmp1 = icmp uge i32 %6, 53, !dbg !9347
  br i1 %cmp1, label %land.lhs.true, label %if.end22, !dbg !9348

land.lhs.true:                                    ; preds = %lor.lhs.false, %while.body
  %7 = load i32, i32* %top_flag.addr, align 4, !dbg !9349
  %8 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !9350
  %base2 = bitcast %union.df_ref_d* %8 to %struct.df_base_ref*, !dbg !9350
  %9 = bitcast %struct.df_base_ref* %base2 to i32*, !dbg !9350
  %bf.load3 = load i32, i32* %9, align 8, !dbg !9350
  %bf.ashr = ashr i32 %bf.load3, 16, !dbg !9350
  %and4 = and i32 %bf.ashr, 2, !dbg !9351
  %cmp5 = icmp eq i32 %7, %and4, !dbg !9352
  br i1 %cmp5, label %if.then, label %if.end22, !dbg !9353

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !9354
  %11 = load i32, i32* %dregno, align 4, !dbg !9357
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %10, i32 %11), !dbg !9358
  %tobool6 = icmp ne i32 %call, 0, !dbg !9358
  br i1 %tobool6, label %if.end21, label %if.then7, !dbg !9359

if.then7:                                         ; preds = %if.then
  %12 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !9360
  %base8 = bitcast %union.df_ref_d* %12 to %struct.df_base_ref*, !dbg !9360
  %13 = bitcast %struct.df_base_ref* %base8 to i32*, !dbg !9360
  %bf.load9 = load i32, i32* %13, align 8, !dbg !9360
  %bf.ashr10 = ashr i32 %bf.load9, 16, !dbg !9360
  %and11 = and i32 %bf.ashr10, 81, !dbg !9363
  %tobool12 = icmp ne i32 %and11, 0, !dbg !9363
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !9364

if.then13:                                        ; preds = %if.then7
  %14 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info.addr, align 8, !dbg !9365
  %gen = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %14, i32 0, i32 0, !dbg !9367
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !9367
  %16 = load i32, i32* %dregno, align 4, !dbg !9368
  %call14 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %15, i32 %16), !dbg !9369
  %17 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info.addr, align 8, !dbg !9370
  %kill = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %17, i32 0, i32 1, !dbg !9371
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !9371
  %19 = load i32, i32* %dregno, align 4, !dbg !9372
  %call15 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %18, i32 %19), !dbg !9373
  br label %if.end, !dbg !9374

if.else:                                          ; preds = %if.then7
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !9375
  %21 = load i32, i32* %dregno, align 4, !dbg !9377
  %call16 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %20, i32 %21), !dbg !9378
  %22 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info.addr, align 8, !dbg !9379
  %kill17 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %22, i32 0, i32 1, !dbg !9380
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill17, align 8, !dbg !9380
  %24 = load i32, i32* %dregno, align 4, !dbg !9381
  %call18 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %23, i32 %24), !dbg !9382
  %25 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %bb_info.addr, align 8, !dbg !9383
  %gen19 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %25, i32 0, i32 0, !dbg !9384
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen19, align 8, !dbg !9384
  %27 = load i32, i32* %dregno, align 4, !dbg !9385
  %call20 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %26, i32 %27), !dbg !9386
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  br label %if.end21, !dbg !9387

if.end21:                                         ; preds = %if.end, %if.then
  br label %if.end22, !dbg !9388

if.end22:                                         ; preds = %if.end21, %land.lhs.true, %lor.lhs.false
  br label %while.cond, !dbg !9332, !llvm.loop !9389

while.end:                                        ; preds = %while.cond
  ret void, !dbg !9391
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2282, !2283, !2284}
!llvm.ident = !{!2285}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "problem_RD", scope: !2, file: !3, line: 683, type: !2114, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !799, globals: !2107, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "df-problems.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !134, !141, !147, !152, !157, !176, !183, !190, !384, !390, !566, !572, !578, !596, !605, !609, !752, !786, !795}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !142, line: 363, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./basic-block.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!143 = !{!144, !145, !146}
!144 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !142, line: 355, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !153, line: 474, baseType: !7, size: 32, elements: !154)
!153 = !DIFile(filename: "./config/i386/i386.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156}
!155 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !158, line: 280, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175}
!160 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !158, line: 1817, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !158, line: 1805, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !158, line: 39, baseType: !7, size: 32, elements: !191)
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!192 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!281 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!282 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!283 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!284 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!285 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!286 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!287 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!288 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!289 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!290 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!291 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!292 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!293 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!294 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!295 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!296 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!297 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!298 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!299 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!300 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!301 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!302 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!303 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!304 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!305 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!307 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!308 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!309 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!310 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!311 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!312 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!313 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!314 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!315 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!316 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!317 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!318 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!319 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!320 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!321 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!322 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!323 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!324 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!325 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!326 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!327 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!328 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!329 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!330 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!331 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!332 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!333 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!334 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!335 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!336 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!337 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!338 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!339 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!340 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!341 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!342 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!343 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!344 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!356 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!357 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!358 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!359 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!360 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!361 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!377 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!378 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!379 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!380 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!381 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!382 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!383 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_flow_dir", file: !385, line: 60, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./df.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!386 = !{!387, !388, !389}
!387 = !DIEnumerator(name: "DF_NONE", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "DF_FORWARD", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "DF_BACKWARD", value: 2, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !391, line: 74, baseType: !7, size: 32, elements: !392)
!391 = !DIFile(filename: "./timevar.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565}
!393 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!397 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!398 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!399 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!400 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!401 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!402 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!403 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!404 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!405 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!406 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!565 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!566 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_ref_type", file: !385, line: 81, baseType: !7, size: 32, elements: !567)
!567 = !{!568, !569, !570, !571}
!568 = !DIEnumerator(name: "DF_REF_REG_DEF", value: 0, isUnsigned: true)
!569 = !DIEnumerator(name: "DF_REF_REG_USE", value: 1, isUnsigned: true)
!570 = !DIEnumerator(name: "DF_REF_REG_MEM_LOAD", value: 2, isUnsigned: true)
!571 = !DIEnumerator(name: "DF_REF_REG_MEM_STORE", value: 3, isUnsigned: true)
!572 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_ref_class", file: !385, line: 76, baseType: !7, size: 32, elements: !573)
!573 = !{!574, !575, !576, !577}
!574 = !DIEnumerator(name: "DF_REF_BASE", value: 0, isUnsigned: true)
!575 = !DIEnumerator(name: "DF_REF_ARTIFICIAL", value: 1, isUnsigned: true)
!576 = !DIEnumerator(name: "DF_REF_REGULAR", value: 2, isUnsigned: true)
!577 = !DIEnumerator(name: "DF_REF_EXTRACT", value: 3, isUnsigned: true)
!578 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_ref_flags", file: !385, line: 84, baseType: !7, size: 32, elements: !579)
!579 = !{!580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595}
!580 = !DIEnumerator(name: "DF_REF_CONDITIONAL", value: 1, isUnsigned: true)
!581 = !DIEnumerator(name: "DF_REF_AT_TOP", value: 2, isUnsigned: true)
!582 = !DIEnumerator(name: "DF_REF_IN_NOTE", value: 4, isUnsigned: true)
!583 = !DIEnumerator(name: "DF_HARD_REG_LIVE", value: 8, isUnsigned: true)
!584 = !DIEnumerator(name: "DF_REF_PARTIAL", value: 16, isUnsigned: true)
!585 = !DIEnumerator(name: "DF_REF_READ_WRITE", value: 32, isUnsigned: true)
!586 = !DIEnumerator(name: "DF_REF_MAY_CLOBBER", value: 64, isUnsigned: true)
!587 = !DIEnumerator(name: "DF_REF_MUST_CLOBBER", value: 128, isUnsigned: true)
!588 = !DIEnumerator(name: "DF_REF_SIGN_EXTRACT", value: 256, isUnsigned: true)
!589 = !DIEnumerator(name: "DF_REF_ZERO_EXTRACT", value: 512, isUnsigned: true)
!590 = !DIEnumerator(name: "DF_REF_STRICT_LOW_PART", value: 1024, isUnsigned: true)
!591 = !DIEnumerator(name: "DF_REF_SUBREG", value: 2048, isUnsigned: true)
!592 = !DIEnumerator(name: "DF_REF_MW_HARDREG", value: 4096, isUnsigned: true)
!593 = !DIEnumerator(name: "DF_REF_CALL_STACK_USAGE", value: 8192, isUnsigned: true)
!594 = !DIEnumerator(name: "DF_REF_REG_MARKER", value: 16384, isUnsigned: true)
!595 = !DIEnumerator(name: "DF_REF_PRE_POST_MODIFY", value: 32768, isUnsigned: true)
!596 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_changeable_flags", file: !385, line: 463, baseType: !7, size: 32, elements: !597)
!597 = !{!598, !599, !600, !601, !602, !603, !604}
!598 = !DIEnumerator(name: "DF_LR_RUN_DCE", value: 1, isUnsigned: true)
!599 = !DIEnumerator(name: "DF_NO_HARD_REGS", value: 2, isUnsigned: true)
!600 = !DIEnumerator(name: "DF_EQ_NOTES", value: 4, isUnsigned: true)
!601 = !DIEnumerator(name: "DF_NO_REGS_EVER_LIVE", value: 8, isUnsigned: true)
!602 = !DIEnumerator(name: "DF_NO_INSN_RESCAN", value: 16, isUnsigned: true)
!603 = !DIEnumerator(name: "DF_DEFER_INSN_RESCAN", value: 32, isUnsigned: true)
!604 = !DIEnumerator(name: "DF_VERIFY_SCHEDULED", value: 64, isUnsigned: true)
!605 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_mm", file: !385, line: 69, baseType: !7, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIEnumerator(name: "DF_MM_MAY", value: 0, isUnsigned: true)
!608 = !DIEnumerator(name: "DF_MM_MUST", value: 1, isUnsigned: true)
!609 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !610, line: 45, baseType: !7, size: 32, elements: !611)
!610 = !DIFile(filename: "./rtl.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!611 = !{!612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751}
!612 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!613 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!614 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!615 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!616 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!617 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!618 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!619 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!620 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!621 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!622 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!623 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!624 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!625 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!626 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!627 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!628 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!629 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!630 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!631 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!632 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!633 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!634 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!635 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!636 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!637 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!638 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!639 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!640 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!641 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!642 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!643 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!644 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!645 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!646 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!647 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!648 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!649 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!650 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!651 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!652 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!653 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!654 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!655 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!656 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!657 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!658 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!659 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!660 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!661 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!662 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!663 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!664 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!665 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!666 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!667 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!668 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!669 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!670 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!671 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!672 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!673 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!674 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!675 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!676 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!677 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!678 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!679 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!680 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!681 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!682 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!683 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!684 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!685 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!686 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!687 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!688 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!689 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!690 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!691 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!692 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!693 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!694 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!695 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!696 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!697 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!698 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!699 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!700 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!701 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!702 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!703 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!704 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!705 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!706 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!707 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!708 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!709 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!710 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!711 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!712 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!713 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!714 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!715 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!716 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!717 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!718 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!719 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!720 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!721 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!722 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!723 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!724 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!725 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!726 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!727 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!728 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!729 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!730 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!731 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!732 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!733 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!734 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!735 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!736 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!737 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!738 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!739 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!740 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!741 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!742 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!743 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!744 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!745 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!746 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!747 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!748 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!749 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!750 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!751 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!752 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !610, line: 836, baseType: !7, size: 32, elements: !753)
!753 = !{!754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785}
!754 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!755 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!756 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!757 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!758 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!759 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!760 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!761 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!762 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!763 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!764 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!765 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!766 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!767 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!768 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!769 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!770 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!771 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!772 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!773 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!774 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!775 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!776 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!777 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!778 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!779 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!780 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!781 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!782 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!783 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!784 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!785 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!786 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_ref_order", file: !385, line: 166, baseType: !7, size: 32, elements: !787)
!787 = !{!788, !789, !790, !791, !792, !793, !794}
!788 = !DIEnumerator(name: "DF_REF_ORDER_NO_TABLE", value: 0, isUnsigned: true)
!789 = !DIEnumerator(name: "DF_REF_ORDER_UNORDERED", value: 1, isUnsigned: true)
!790 = !DIEnumerator(name: "DF_REF_ORDER_UNORDERED_WITH_NOTES", value: 2, isUnsigned: true)
!791 = !DIEnumerator(name: "DF_REF_ORDER_BY_REG", value: 3, isUnsigned: true)
!792 = !DIEnumerator(name: "DF_REF_ORDER_BY_REG_WITH_NOTES", value: 4, isUnsigned: true)
!793 = !DIEnumerator(name: "DF_REF_ORDER_BY_INSN", value: 5, isUnsigned: true)
!794 = !DIEnumerator(name: "DF_REF_ORDER_BY_INSN_WITH_NOTES", value: 6, isUnsigned: true)
!795 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_chain_flags", file: !385, line: 456, baseType: !7, size: 32, elements: !796)
!796 = !{!797, !798}
!797 = !DIEnumerator(name: "DF_DU_CHAIN", value: 1, isUnsigned: true)
!798 = !DIEnumerator(name: "DF_UD_CHAIN", value: 2, isUnsigned: true)
!799 = !{!800, !801, !802, !868, !2037, !609, !752, !5, !2047, !2054, !2061, !2067, !855, !7, !2075, !2079, !2081, !2086, !795, !2044, !2091, !2092, !820, !2099}
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !803, line: 47, baseType: !804)
!803 = !DIFile(filename: "./coretypes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !806, line: 75, size: 256, elements: !807)
!806 = !DIFile(filename: "./bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!807 = !{!808, !823, !824, !825}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !805, file: !806, line: 76, baseType: !809, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !806, line: 68, baseType: !811)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !806, line: 63, size: 320, elements: !812)
!812 = !{!813, !815, !816, !817}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !811, file: !806, line: 64, baseType: !814, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !811, file: !806, line: 65, baseType: !814, size: 64, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !811, file: !806, line: 66, baseType: !7, size: 32, offset: 128)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !811, file: !806, line: 67, baseType: !818, size: 128, offset: 192)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !819, size: 128, elements: !821)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !806, line: 29, baseType: !820)
!820 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!821 = !{!822}
!822 = !DISubrange(count: 2)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !805, file: !806, line: 77, baseType: !809, size: 64, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !805, file: !806, line: 78, baseType: !7, size: 32, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !805, file: !806, line: 79, baseType: !826, size: 64, offset: 192)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !806, line: 49, baseType: !828)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !806, line: 45, size: 832, elements: !829)
!829 = !{!830, !831, !832}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !828, file: !806, line: 46, baseType: !814, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !828, file: !806, line: 47, baseType: !804, size: 64, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !828, file: !806, line: 48, baseType: !833, size: 704, offset: 128)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !834, line: 164, size: 704, elements: !835)
!834 = !DIFile(filename: "./include/obstack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!835 = !{!836, !838, !850, !851, !852, !853, !854, !856, !860, !864, !865, !866, !867}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !833, file: !834, line: 166, baseType: !837, size: 64)
!837 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !833, file: !834, line: 167, baseType: !839, size: 64, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !834, line: 157, size: 192, elements: !841)
!841 = !{!842, !845, !846}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !840, file: !834, line: 159, baseType: !843, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !840, file: !834, line: 160, baseType: !839, size: 64, offset: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !840, file: !834, line: 161, baseType: !847, size: 32, offset: 128)
!847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !844, size: 32, elements: !848)
!848 = !{!849}
!849 = !DISubrange(count: 4)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !833, file: !834, line: 168, baseType: !843, size: 64, offset: 128)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !833, file: !834, line: 169, baseType: !843, size: 64, offset: 192)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !833, file: !834, line: 170, baseType: !843, size: 64, offset: 256)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !833, file: !834, line: 171, baseType: !837, size: 64, offset: 320)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !833, file: !834, line: 172, baseType: !855, size: 32, offset: 384)
!855 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !833, file: !834, line: 176, baseType: !857, size: 64, offset: 448)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{!839, !801, !837}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !833, file: !834, line: 177, baseType: !861, size: 64, offset: 512)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{null, !801, !839}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !833, file: !834, line: 178, baseType: !801, size: 64, offset: 576)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !833, file: !834, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !833, file: !834, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !833, file: !834, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_link", file: !385, line: 449, size: 128, elements: !870)
!870 = !{!871, !2036}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !869, file: !385, line: 451, baseType: !872, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_ref", file: !385, line: 429, baseType: !873)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "df_ref_d", file: !385, line: 422, size: 704, elements: !875)
!875 = !{!876, !2018, !2024, !2029}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !874, file: !385, line: 424, baseType: !877, size: 512)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_base_ref", file: !385, line: 356, size: 512, elements: !878)
!878 = !{!879, !880, !881, !882, !1991, !1992, !2013, !2014, !2015, !2016, !2017}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !877, file: !385, line: 360, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !877, file: !385, line: 362, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !877, file: !385, line: 364, baseType: !855, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !877, file: !385, line: 365, baseType: !883, size: 64, offset: 64)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !803, line: 50, baseType: !884)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !610, line: 240, size: 384, elements: !886)
!886 = !{!887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !885, file: !610, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !885, file: !610, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !885, file: !610, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !885, file: !610, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !885, file: !610, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !885, file: !610, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !885, file: !610, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !885, file: !610, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !885, file: !610, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !885, file: !610, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !885, file: !610, line: 321, baseType: !898, size: 320, offset: 64)
!898 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !610, line: 315, size: 320, elements: !899)
!899 = !{!900, !1926, !1928, !1989, !1990}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !898, file: !610, line: 316, baseType: !901, size: 64)
!901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 64, elements: !919)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !610, line: 183, baseType: !903)
!903 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !610, line: 166, size: 64, elements: !904)
!904 = !{!905, !906, !907, !910, !911, !921, !922, !934, !937, !938, !1904, !1905, !1916, !1923}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !903, file: !610, line: 168, baseType: !855, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !903, file: !610, line: 169, baseType: !7, size: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !903, file: !610, line: 170, baseType: !908, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !903, file: !610, line: 171, baseType: !883, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !903, file: !610, line: 172, baseType: !912, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !803, line: 53, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !610, line: 359, size: 128, elements: !915)
!915 = !{!916, !917}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !914, file: !610, line: 360, baseType: !855, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !914, file: !610, line: 361, baseType: !918, size: 64, offset: 64)
!918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !883, size: 64, elements: !919)
!919 = !{!920}
!920 = !DISubrange(count: 1)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !903, file: !610, line: 173, baseType: !5, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !903, file: !610, line: 174, baseType: !923, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !610, line: 133, baseType: !924)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !610, line: 115, size: 32, elements: !925)
!925 = !{!926, !927, !928, !929, !930, !931, !932, !933}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !924, file: !610, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !924, file: !610, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !924, file: !610, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !924, file: !610, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !924, file: !610, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !924, file: !610, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !924, file: !610, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !924, file: !610, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !903, file: !610, line: 175, baseType: !935, size: 64)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !610, line: 175, flags: DIFlagFwdDecl)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !903, file: !610, line: 176, baseType: !804, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !903, file: !610, line: 177, baseType: !939, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !803, line: 56, baseType: !940)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !158, line: 3371, size: 1792, elements: !942)
!942 = !{!943, !976, !982, !993, !1012, !1023, !1028, !1035, !1041, !1055, !1067, !1105, !1110, !1138, !1146, !1147, !1152, !1161, !1167, !1172, !1176, !1180, !1540, !1589, !1595, !1601, !1608, !1634, !1648, !1665, !1677, !1699, !1714, !1886}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !941, file: !158, line: 3372, baseType: !944, size: 64)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !158, line: 360, size: 64, elements: !945)
!945 = !{!946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !944, file: !158, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !944, file: !158, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !944, file: !158, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !944, file: !158, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !944, file: !158, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !944, file: !158, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !944, file: !158, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !944, file: !158, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !944, file: !158, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !944, file: !158, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !944, file: !158, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !944, file: !158, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !944, file: !158, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !944, file: !158, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !944, file: !158, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !944, file: !158, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !944, file: !158, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !944, file: !158, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !944, file: !158, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !944, file: !158, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !944, file: !158, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !944, file: !158, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !944, file: !158, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !944, file: !158, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !944, file: !158, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !944, file: !158, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !944, file: !158, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !944, file: !158, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !944, file: !158, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !944, file: !158, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !941, file: !158, line: 3373, baseType: !977, size: 192)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !158, line: 402, size: 192, elements: !978)
!978 = !{!979, !980, !981}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !977, file: !158, line: 403, baseType: !944, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !977, file: !158, line: 404, baseType: !939, size: 64, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !977, file: !158, line: 405, baseType: !939, size: 64, offset: 128)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !941, file: !158, line: 3374, baseType: !983, size: 320)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !158, line: 1384, size: 320, elements: !984)
!984 = !{!985, !986}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !983, file: !158, line: 1385, baseType: !977, size: 192)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !983, file: !158, line: 1386, baseType: !987, size: 128, offset: 192)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !988, line: 58, baseType: !989)
!988 = !DIFile(filename: "./double-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !988, line: 54, size: 128, elements: !990)
!990 = !{!991, !992}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !989, file: !988, line: 56, baseType: !820, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !989, file: !988, line: 57, baseType: !837, size: 64, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !941, file: !158, line: 3375, baseType: !994, size: 256)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !158, line: 1397, size: 256, elements: !995)
!995 = !{!996, !997}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !994, file: !158, line: 1398, baseType: !977, size: 192)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !994, file: !158, line: 1399, baseType: !998, size: 64, offset: 192)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1000, line: 52, size: 256, elements: !1001)
!1000 = !DIFile(filename: "./real.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1001 = !{!1002, !1003, !1004, !1005, !1006, !1007, !1008}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !999, file: !1000, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !999, file: !1000, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !999, file: !1000, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !999, file: !1000, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !999, file: !1000, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !999, file: !1000, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !999, file: !1000, line: 62, baseType: !1009, size: 192, offset: 64)
!1009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !820, size: 192, elements: !1010)
!1010 = !{!1011}
!1011 = !DISubrange(count: 3)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !941, file: !158, line: 3376, baseType: !1013, size: 256)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !158, line: 1408, size: 256, elements: !1014)
!1014 = !{!1015, !1016}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1013, file: !158, line: 1409, baseType: !977, size: 192)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1013, file: !158, line: 1410, baseType: !1017, size: 64, offset: 192)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1019, line: 27, size: 192, elements: !1020)
!1019 = !DIFile(filename: "./fixed-value.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1020 = !{!1021, !1022}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1018, file: !1019, line: 29, baseType: !987, size: 128)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1018, file: !1019, line: 30, baseType: !5, size: 32, offset: 128)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !941, file: !158, line: 3377, baseType: !1024, size: 256)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !158, line: 1437, size: 256, elements: !1025)
!1025 = !{!1026, !1027}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1024, file: !158, line: 1438, baseType: !977, size: 192)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1024, file: !158, line: 1439, baseType: !939, size: 64, offset: 192)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !941, file: !158, line: 3378, baseType: !1029, size: 256)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !158, line: 1418, size: 256, elements: !1030)
!1030 = !{!1031, !1032, !1033}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1029, file: !158, line: 1419, baseType: !977, size: 192)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1029, file: !158, line: 1420, baseType: !855, size: 32, offset: 192)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1029, file: !158, line: 1421, baseType: !1034, size: 8, offset: 224)
!1034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !844, size: 8, elements: !919)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !941, file: !158, line: 3379, baseType: !1036, size: 320)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !158, line: 1428, size: 320, elements: !1037)
!1037 = !{!1038, !1039, !1040}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1036, file: !158, line: 1429, baseType: !977, size: 192)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1036, file: !158, line: 1430, baseType: !939, size: 64, offset: 192)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1036, file: !158, line: 1431, baseType: !939, size: 64, offset: 256)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !941, file: !158, line: 3380, baseType: !1042, size: 320)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !158, line: 1460, size: 320, elements: !1043)
!1043 = !{!1044, !1045}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1042, file: !158, line: 1461, baseType: !977, size: 192)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1042, file: !158, line: 1462, baseType: !1046, size: 128, offset: 192)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1047, line: 31, size: 128, elements: !1048)
!1047 = !DIFile(filename: "./symtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1048 = !{!1049, !1053, !1054}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1046, file: !1047, line: 32, baseType: !1050, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1052 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1046, file: !1047, line: 33, baseType: !7, size: 32, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1046, file: !1047, line: 34, baseType: !7, size: 32, offset: 96)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !941, file: !158, line: 3381, baseType: !1056, size: 384)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !158, line: 2507, size: 384, elements: !1057)
!1057 = !{!1058, !1059, !1064, !1065, !1066}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1056, file: !158, line: 2508, baseType: !977, size: 192)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1056, file: !158, line: 2509, baseType: !1060, size: 32, offset: 192)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1061, line: 58, baseType: !1062)
!1061 = !DIFile(filename: "./input.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1063, line: 44, baseType: !7)
!1063 = !DIFile(filename: "./line-map.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1056, file: !158, line: 2510, baseType: !7, size: 32, offset: 224)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1056, file: !158, line: 2511, baseType: !939, size: 64, offset: 256)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1056, file: !158, line: 2512, baseType: !939, size: 64, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !941, file: !158, line: 3382, baseType: !1068, size: 896)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !158, line: 2652, size: 896, elements: !1069)
!1069 = !{!1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1068, file: !158, line: 2653, baseType: !1056, size: 384)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1068, file: !158, line: 2654, baseType: !939, size: 64, offset: 384)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1068, file: !158, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1068, file: !158, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1068, file: !158, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1068, file: !158, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1068, file: !158, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1068, file: !158, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1068, file: !158, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1068, file: !158, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1068, file: !158, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1068, file: !158, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1068, file: !158, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1068, file: !158, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1068, file: !158, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1068, file: !158, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1068, file: !158, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1068, file: !158, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1068, file: !158, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1068, file: !158, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1068, file: !158, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1068, file: !158, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1068, file: !158, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1068, file: !158, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1068, file: !158, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1068, file: !158, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1068, file: !158, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1068, file: !158, line: 2703, baseType: !7, size: 32, offset: 512)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1068, file: !158, line: 2705, baseType: !939, size: 64, offset: 576)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1068, file: !158, line: 2706, baseType: !939, size: 64, offset: 640)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1068, file: !158, line: 2707, baseType: !939, size: 64, offset: 704)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1068, file: !158, line: 2708, baseType: !939, size: 64, offset: 768)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1068, file: !158, line: 2711, baseType: !1103, size: 64, offset: 832)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !158, line: 2711, flags: DIFlagFwdDecl)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !941, file: !158, line: 3383, baseType: !1106, size: 960)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !158, line: 2756, size: 960, elements: !1107)
!1107 = !{!1108, !1109}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1106, file: !158, line: 2757, baseType: !1068, size: 896)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1106, file: !158, line: 2758, baseType: !883, size: 64, offset: 896)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !941, file: !158, line: 3384, baseType: !1111, size: 1472)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !158, line: 3114, size: 1472, elements: !1112)
!1112 = !{!1113, !1134, !1135, !1136, !1137}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1111, file: !158, line: 3115, baseType: !1114, size: 1216)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !158, line: 2984, size: 1216, elements: !1115)
!1115 = !{!1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1114, file: !158, line: 2985, baseType: !1106, size: 960)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1114, file: !158, line: 2986, baseType: !939, size: 64, offset: 960)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1114, file: !158, line: 2987, baseType: !939, size: 64, offset: 1024)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1114, file: !158, line: 2988, baseType: !939, size: 64, offset: 1088)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1114, file: !158, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1114, file: !158, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1114, file: !158, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1114, file: !158, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1114, file: !158, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1114, file: !158, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1114, file: !158, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1114, file: !158, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1114, file: !158, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1114, file: !158, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1114, file: !158, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1114, file: !158, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1114, file: !158, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1114, file: !158, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1111, file: !158, line: 3117, baseType: !939, size: 64, offset: 1216)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1111, file: !158, line: 3119, baseType: !939, size: 64, offset: 1280)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1111, file: !158, line: 3121, baseType: !939, size: 64, offset: 1344)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1111, file: !158, line: 3123, baseType: !939, size: 64, offset: 1408)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !941, file: !158, line: 3385, baseType: !1139, size: 1088)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !158, line: 2874, size: 1088, elements: !1140)
!1140 = !{!1141, !1142, !1143}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1139, file: !158, line: 2875, baseType: !1106, size: 960)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1139, file: !158, line: 2876, baseType: !883, size: 64, offset: 960)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1139, file: !158, line: 2877, baseType: !1144, size: 64, offset: 1024)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !158, line: 2856, flags: DIFlagFwdDecl)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !941, file: !158, line: 3386, baseType: !1114, size: 1216)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !941, file: !158, line: 3387, baseType: !1148, size: 1280)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !158, line: 3093, size: 1280, elements: !1149)
!1149 = !{!1150, !1151}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1148, file: !158, line: 3094, baseType: !1114, size: 1216)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1148, file: !158, line: 3095, baseType: !1144, size: 64, offset: 1216)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !941, file: !158, line: 3388, baseType: !1153, size: 1216)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !158, line: 2824, size: 1216, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1153, file: !158, line: 2825, baseType: !1068, size: 896)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1153, file: !158, line: 2827, baseType: !939, size: 64, offset: 896)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1153, file: !158, line: 2828, baseType: !939, size: 64, offset: 960)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1153, file: !158, line: 2829, baseType: !939, size: 64, offset: 1024)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1153, file: !158, line: 2830, baseType: !939, size: 64, offset: 1088)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1153, file: !158, line: 2831, baseType: !939, size: 64, offset: 1152)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !941, file: !158, line: 3389, baseType: !1162, size: 1024)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !158, line: 2850, size: 1024, elements: !1163)
!1163 = !{!1164, !1165, !1166}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1162, file: !158, line: 2851, baseType: !1106, size: 960)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1162, file: !158, line: 2852, baseType: !855, size: 32, offset: 960)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1162, file: !158, line: 2853, baseType: !855, size: 32, offset: 992)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !941, file: !158, line: 3390, baseType: !1168, size: 1024)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !158, line: 2857, size: 1024, elements: !1169)
!1169 = !{!1170, !1171}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1168, file: !158, line: 2858, baseType: !1106, size: 960)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1168, file: !158, line: 2859, baseType: !1144, size: 64, offset: 960)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !941, file: !158, line: 3391, baseType: !1173, size: 960)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !158, line: 2862, size: 960, elements: !1174)
!1174 = !{!1175}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1173, file: !158, line: 2863, baseType: !1106, size: 960)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !941, file: !158, line: 3392, baseType: !1177, size: 1472)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !158, line: 3304, size: 1472, elements: !1178)
!1178 = !{!1179}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1177, file: !158, line: 3305, baseType: !1111, size: 1472)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !941, file: !158, line: 3393, baseType: !1181, size: 1792)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !158, line: 3248, size: 1792, elements: !1182)
!1182 = !{!1183, !1184, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1181, file: !158, line: 3249, baseType: !1111, size: 1472)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1181, file: !158, line: 3251, baseType: !1185, size: 64, offset: 1472)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 64)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1187, line: 463, size: 1152, elements: !1188)
!1187 = !DIFile(filename: "./function.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1188 = !{!1189, !1352, !1456, !1457, !1460, !1463, !1464, !1465, !1466, !1467, !1468, !1492, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1186, file: !1187, line: 464, baseType: !1190, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1192)
!1192 = !{!1193, !1242, !1255, !1269, !1320, !1333}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1191, file: !135, line: 197, baseType: !1194, size: 64)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1195)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1197)
!1197 = !{!1198, !1199, !1200, !1201, !1202, !1203, !1230, !1239, !1240, !1241}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1196, file: !135, line: 119, baseType: !1195, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1196, file: !135, line: 122, baseType: !1195, size: 64, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1196, file: !135, line: 123, baseType: !1195, size: 64, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1196, file: !135, line: 126, baseType: !855, size: 32, offset: 192)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1196, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1196, file: !135, line: 165, baseType: !1204, size: 192, offset: 256)
!1204 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1205)
!1205 = !{!1206, !1219, !1225}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1204, file: !135, line: 137, baseType: !1207, size: 128)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1208)
!1208 = !{!1209, !1218}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1207, file: !135, line: 135, baseType: !1210, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1211, file: !135, line: 96, baseType: !1210, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1211, file: !135, line: 97, baseType: !1210, size: 64, offset: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1211, file: !135, line: 101, baseType: !939, size: 64, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1211, file: !135, line: 106, baseType: !939, size: 64, offset: 192)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1211, file: !135, line: 111, baseType: !939, size: 64, offset: 256)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1207, file: !135, line: 136, baseType: !1210, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1204, file: !135, line: 151, baseType: !1220, size: 192)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1221)
!1221 = !{!1222, !1223, !1224}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1220, file: !135, line: 141, baseType: !939, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1220, file: !135, line: 145, baseType: !939, size: 64, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1220, file: !135, line: 150, baseType: !855, size: 32, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1204, file: !135, line: 164, baseType: !1226, size: 128)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1227)
!1227 = !{!1228, !1229}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1226, file: !135, line: 161, baseType: !939, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1226, file: !135, line: 163, baseType: !1060, size: 32, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1196, file: !135, line: 168, baseType: !1231, size: 64, offset: 448)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1233)
!1233 = !{!1234, !1235, !1236, !1237, !1238}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1232, file: !135, line: 70, baseType: !1231, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1232, file: !135, line: 73, baseType: !1195, size: 64, offset: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1232, file: !135, line: 78, baseType: !939, size: 64, offset: 128)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1232, file: !135, line: 85, baseType: !883, size: 64, offset: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1232, file: !135, line: 88, baseType: !855, size: 32, offset: 256)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1196, file: !135, line: 173, baseType: !883, size: 64, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1196, file: !135, line: 173, baseType: !883, size: 64, offset: 576)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1196, file: !135, line: 177, baseType: !1052, size: 8, offset: 640)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1191, file: !135, line: 200, baseType: !1243, size: 64, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1246)
!1246 = !{!1247}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1245, file: !135, line: 185, baseType: !1248, size: 128)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1250)
!1250 = !{!1251, !1252, !1253}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1249, file: !135, line: 184, baseType: !7, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1249, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1249, file: !135, line: 184, baseType: !1254, size: 64, offset: 64)
!1254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1194, size: 64, elements: !919)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1191, file: !135, line: 203, baseType: !1256, size: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1259)
!1259 = !{!1260}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1258, file: !135, line: 189, baseType: !1261, size: 128)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1263)
!1263 = !{!1264, !1265, !1266}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1262, file: !135, line: 188, baseType: !7, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1262, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1262, file: !135, line: 188, baseType: !1267, size: 64, offset: 64)
!1267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1268, size: 64, elements: !919)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1231)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1191, file: !135, line: 207, baseType: !1270, size: 64, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1271, line: 144, baseType: !1272)
!1271 = !DIFile(filename: "./include/hashtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1271, line: 100, size: 896, elements: !1274)
!1274 = !{!1275, !1283, !1288, !1293, !1294, !1297, !1298, !1299, !1300, !1301, !1306, !1308, !1309, !1314, !1319}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1273, file: !1271, line: 102, baseType: !1276, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1271, line: 52, baseType: !1277)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!1280, !1281}
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1271, line: 47, baseType: !7)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1273, file: !1271, line: 105, baseType: !1284, size: 64, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1271, line: 59, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!855, !1281, !1281}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1273, file: !1271, line: 108, baseType: !1289, size: 64, offset: 128)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1271, line: 63, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{null, !801}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1273, file: !1271, line: 111, baseType: !800, size: 64, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1273, file: !1271, line: 114, baseType: !1295, size: 64, offset: 256)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1296, line: 46, baseType: !820)
!1296 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1273, file: !1271, line: 117, baseType: !1295, size: 64, offset: 320)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1273, file: !1271, line: 120, baseType: !1295, size: 64, offset: 384)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1273, file: !1271, line: 124, baseType: !7, size: 32, offset: 448)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1273, file: !1271, line: 128, baseType: !7, size: 32, offset: 480)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1273, file: !1271, line: 131, baseType: !1302, size: 64, offset: 512)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1271, line: 75, baseType: !1303)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!801, !1295, !1295}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1273, file: !1271, line: 132, baseType: !1307, size: 64, offset: 576)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1271, line: 78, baseType: !1290)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1273, file: !1271, line: 135, baseType: !801, size: 64, offset: 640)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1273, file: !1271, line: 136, baseType: !1310, size: 64, offset: 704)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1271, line: 82, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!801, !801, !1295, !1295}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1273, file: !1271, line: 137, baseType: !1315, size: 64, offset: 768)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1271, line: 83, baseType: !1316)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{null, !801, !801}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1273, file: !1271, line: 141, baseType: !7, size: 32, offset: 832)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1191, file: !135, line: 211, baseType: !1321, size: 64, offset: 256)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !158, line: 183, baseType: !1323)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !158, line: 183, size: 128, elements: !1324)
!1324 = !{!1325}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1323, file: !158, line: 183, baseType: !1326, size: 128)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !158, line: 182, baseType: !1327)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !158, line: 182, size: 128, elements: !1328)
!1328 = !{!1329, !1330, !1331}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1327, file: !158, line: 182, baseType: !7, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1327, file: !158, line: 182, baseType: !7, size: 32, offset: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1327, file: !158, line: 182, baseType: !1332, size: 64, offset: 64)
!1332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 64, elements: !919)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1191, file: !135, line: 220, baseType: !1334, size: 64, offset: 320)
!1334 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1335)
!1335 = !{!1336, !1337}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1334, file: !135, line: 218, baseType: !1321, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1334, file: !135, line: 219, baseType: !1338, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1340, line: 29, baseType: !1341)
!1340 = !DIFile(filename: "./vecprim.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1340, line: 29, size: 96, elements: !1342)
!1342 = !{!1343}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1341, file: !1340, line: 29, baseType: !1344, size: 96)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1340, line: 27, baseType: !1345)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1340, line: 27, size: 96, elements: !1346)
!1346 = !{!1347, !1348, !1349}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1345, file: !1340, line: 27, baseType: !7, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1345, file: !1340, line: 27, baseType: !7, size: 32, offset: 32)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1345, file: !1340, line: 27, baseType: !1350, size: 8, offset: 64)
!1350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1351, size: 8, elements: !919)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1340, line: 26, baseType: !1052)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1186, file: !1187, line: 467, baseType: !1353, size: 64, offset: 64)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !142, line: 374, size: 640, elements: !1355)
!1355 = !{!1356, !1431, !1432, !1445, !1446, !1447, !1448, !1449, !1450, !1452, !1454, !1455}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1354, file: !142, line: 377, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !803, line: 111, baseType: !1358)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !142, line: 217, size: 832, elements: !1360)
!1360 = !{!1361, !1396, !1397, !1398, !1401, !1405, !1406, !1407, !1425, !1426, !1427, !1428, !1429, !1430}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1359, file: !142, line: 219, baseType: !1362, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !142, line: 151, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !142, line: 151, size: 128, elements: !1365)
!1365 = !{!1366}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1364, file: !142, line: 151, baseType: !1367, size: 128)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !142, line: 150, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !142, line: 150, size: 128, elements: !1369)
!1369 = !{!1370, !1371, !1372}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1368, file: !142, line: 150, baseType: !7, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1368, file: !142, line: 150, baseType: !7, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1368, file: !142, line: 150, baseType: !1373, size: 64, offset: 64)
!1373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1374, size: 64, elements: !919)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !803, line: 108, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !142, line: 122, size: 512, elements: !1377)
!1377 = !{!1378, !1379, !1380, !1388, !1389, !1390, !1391, !1392, !1393, !1394}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1376, file: !142, line: 124, baseType: !1358, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1376, file: !142, line: 125, baseType: !1358, size: 64, offset: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1376, file: !142, line: 131, baseType: !1381, size: 64, offset: 128)
!1381 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !142, line: 128, size: 64, elements: !1382)
!1382 = !{!1383, !1387}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1381, file: !142, line: 129, baseType: !1384, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !803, line: 66, baseType: !1385)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!1386 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !803, line: 65, flags: DIFlagFwdDecl)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1381, file: !142, line: 130, baseType: !883, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1376, file: !142, line: 134, baseType: !801, size: 64, offset: 192)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1376, file: !142, line: 137, baseType: !939, size: 64, offset: 256)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1376, file: !142, line: 138, baseType: !1060, size: 32, offset: 320)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1376, file: !142, line: 142, baseType: !7, size: 32, offset: 352)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1376, file: !142, line: 144, baseType: !855, size: 32, offset: 384)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1376, file: !142, line: 145, baseType: !855, size: 32, offset: 416)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1376, file: !142, line: 146, baseType: !1395, size: 64, offset: 448)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !142, line: 119, baseType: !837)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1359, file: !142, line: 220, baseType: !1362, size: 64, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1359, file: !142, line: 223, baseType: !801, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1359, file: !142, line: 226, baseType: !1399, size: 64, offset: 192)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 185, flags: DIFlagFwdDecl)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1359, file: !142, line: 229, baseType: !1402, size: 128, offset: 256)
!1402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 128, elements: !821)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !142, line: 229, flags: DIFlagFwdDecl)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1359, file: !142, line: 232, baseType: !1358, size: 64, offset: 384)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1359, file: !142, line: 233, baseType: !1358, size: 64, offset: 448)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1359, file: !142, line: 238, baseType: !1408, size: 64, offset: 512)
!1408 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !142, line: 235, size: 64, elements: !1409)
!1409 = !{!1410, !1416}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1408, file: !142, line: 236, baseType: !1411, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !142, line: 273, size: 128, elements: !1413)
!1413 = !{!1414, !1415}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1412, file: !142, line: 275, baseType: !1384, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1412, file: !142, line: 278, baseType: !1384, size: 64, offset: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1408, file: !142, line: 237, baseType: !1417, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !142, line: 259, size: 320, elements: !1419)
!1419 = !{!1420, !1421, !1422, !1423, !1424}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1418, file: !142, line: 261, baseType: !883, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1418, file: !142, line: 262, baseType: !883, size: 64, offset: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1418, file: !142, line: 266, baseType: !883, size: 64, offset: 128)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1418, file: !142, line: 267, baseType: !883, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1418, file: !142, line: 270, baseType: !855, size: 32, offset: 256)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1359, file: !142, line: 241, baseType: !1395, size: 64, offset: 576)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1359, file: !142, line: 244, baseType: !855, size: 32, offset: 640)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1359, file: !142, line: 247, baseType: !855, size: 32, offset: 672)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1359, file: !142, line: 250, baseType: !855, size: 32, offset: 704)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1359, file: !142, line: 253, baseType: !855, size: 32, offset: 736)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1359, file: !142, line: 256, baseType: !855, size: 32, offset: 768)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1354, file: !142, line: 378, baseType: !1357, size: 64, offset: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1354, file: !142, line: 381, baseType: !1433, size: 64, offset: 128)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !142, line: 282, baseType: !1435)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !142, line: 282, size: 128, elements: !1436)
!1436 = !{!1437}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1435, file: !142, line: 282, baseType: !1438, size: 128)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !142, line: 281, baseType: !1439)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !142, line: 281, size: 128, elements: !1440)
!1440 = !{!1441, !1442, !1443}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1439, file: !142, line: 281, baseType: !7, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1439, file: !142, line: 281, baseType: !7, size: 32, offset: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1439, file: !142, line: 281, baseType: !1444, size: 64, offset: 64)
!1444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1357, size: 64, elements: !919)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1354, file: !142, line: 384, baseType: !855, size: 32, offset: 192)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1354, file: !142, line: 387, baseType: !855, size: 32, offset: 224)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1354, file: !142, line: 390, baseType: !855, size: 32, offset: 256)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1354, file: !142, line: 394, baseType: !1433, size: 64, offset: 320)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1354, file: !142, line: 396, baseType: !141, size: 32, offset: 384)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1354, file: !142, line: 399, baseType: !1451, size: 64, offset: 416)
!1451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 64, elements: !821)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1354, file: !142, line: 402, baseType: !1453, size: 64, offset: 480)
!1453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !821)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1354, file: !142, line: 406, baseType: !855, size: 32, offset: 544)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1354, file: !142, line: 409, baseType: !855, size: 32, offset: 576)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1186, file: !1187, line: 470, baseType: !1385, size: 64, offset: 128)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1186, file: !1187, line: 473, baseType: !1458, size: 64, offset: 192)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1187, line: 166, flags: DIFlagFwdDecl)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1186, file: !1187, line: 476, baseType: !1461, size: 64, offset: 256)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1187, line: 476, flags: DIFlagFwdDecl)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1186, file: !1187, line: 479, baseType: !1270, size: 64, offset: 320)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1186, file: !1187, line: 484, baseType: !939, size: 64, offset: 384)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1186, file: !1187, line: 488, baseType: !939, size: 64, offset: 448)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1186, file: !1187, line: 493, baseType: !939, size: 64, offset: 512)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1186, file: !1187, line: 496, baseType: !939, size: 64, offset: 576)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1186, file: !1187, line: 501, baseType: !1469, size: 64, offset: 640)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !153, line: 2355, size: 576, elements: !1471)
!1471 = !{!1472, !1475, !1476, !1477, !1478, !1480, !1481, !1486, !1487, !1488, !1489, !1490, !1491}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1470, file: !153, line: 2356, baseType: !1473, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !153, line: 2356, flags: DIFlagFwdDecl)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1470, file: !153, line: 2357, baseType: !908, size: 64, offset: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1470, file: !153, line: 2358, baseType: !855, size: 32, offset: 128)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1470, file: !153, line: 2359, baseType: !855, size: 32, offset: 160)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1470, file: !153, line: 2360, baseType: !1479, size: 128, offset: 192)
!1479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !855, size: 128, elements: !848)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1470, file: !153, line: 2364, baseType: !855, size: 32, offset: 320)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1470, file: !153, line: 2367, baseType: !1482, size: 128, offset: 384)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !153, line: 2349, size: 128, elements: !1483)
!1483 = !{!1484, !1485}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1482, file: !153, line: 2351, baseType: !883, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1482, file: !153, line: 2352, baseType: !837, size: 64, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1470, file: !153, line: 2371, baseType: !152, size: 32, offset: 512)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1470, file: !153, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1470, file: !153, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1470, file: !153, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1470, file: !153, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1470, file: !153, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1186, file: !1187, line: 504, baseType: !1493, size: 64, offset: 704)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64)
!1494 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1187, line: 504, flags: DIFlagFwdDecl)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1186, file: !1187, line: 507, baseType: !1270, size: 64, offset: 768)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1186, file: !1187, line: 510, baseType: !855, size: 32, offset: 832)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1186, file: !1187, line: 513, baseType: !855, size: 32, offset: 864)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1186, file: !1187, line: 516, baseType: !1060, size: 32, offset: 896)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1186, file: !1187, line: 519, baseType: !1060, size: 32, offset: 928)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1186, file: !1187, line: 522, baseType: !7, size: 32, offset: 960)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1186, file: !1187, line: 523, baseType: !7, size: 32, offset: 992)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1186, file: !1187, line: 528, baseType: !908, size: 64, offset: 1024)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1186, file: !1187, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1186, file: !1187, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1186, file: !1187, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1186, file: !1187, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1186, file: !1187, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1186, file: !1187, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1186, file: !1187, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1186, file: !1187, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1186, file: !1187, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1186, file: !1187, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1186, file: !1187, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1186, file: !1187, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1186, file: !1187, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1186, file: !1187, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1186, file: !1187, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1186, file: !1187, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1181, file: !158, line: 3254, baseType: !939, size: 64, offset: 1536)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1181, file: !158, line: 3257, baseType: !939, size: 64, offset: 1600)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1181, file: !158, line: 3258, baseType: !939, size: 64, offset: 1664)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1181, file: !158, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1181, file: !158, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1181, file: !158, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1181, file: !158, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1181, file: !158, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1181, file: !158, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1181, file: !158, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1181, file: !158, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1181, file: !158, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1181, file: !158, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1181, file: !158, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1181, file: !158, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1181, file: !158, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1181, file: !158, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1181, file: !158, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1181, file: !158, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1181, file: !158, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1181, file: !158, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !941, file: !158, line: 3394, baseType: !1541, size: 1344)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !158, line: 2279, size: 1344, elements: !1542)
!1542 = !{!1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1568, !1569, !1570, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1541, file: !158, line: 2280, baseType: !977, size: 192)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1541, file: !158, line: 2281, baseType: !939, size: 64, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1541, file: !158, line: 2282, baseType: !939, size: 64, offset: 256)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1541, file: !158, line: 2283, baseType: !939, size: 64, offset: 320)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1541, file: !158, line: 2284, baseType: !939, size: 64, offset: 384)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1541, file: !158, line: 2285, baseType: !7, size: 32, offset: 448)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1541, file: !158, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1541, file: !158, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1541, file: !158, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1541, file: !158, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1541, file: !158, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1541, file: !158, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1541, file: !158, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1541, file: !158, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1541, file: !158, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1541, file: !158, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1541, file: !158, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1541, file: !158, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1541, file: !158, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1541, file: !158, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1541, file: !158, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1541, file: !158, line: 2305, baseType: !7, size: 32, offset: 512)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1541, file: !158, line: 2306, baseType: !1566, size: 32, offset: 544)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1567, line: 31, baseType: !855)
!1567 = !DIFile(filename: "./alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1541, file: !158, line: 2307, baseType: !939, size: 64, offset: 576)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1541, file: !158, line: 2308, baseType: !939, size: 64, offset: 640)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1541, file: !158, line: 2314, baseType: !1571, size: 64, offset: 704)
!1571 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !158, line: 2309, size: 64, elements: !1572)
!1572 = !{!1573, !1574, !1575}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1571, file: !158, line: 2310, baseType: !855, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1571, file: !158, line: 2311, baseType: !908, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1571, file: !158, line: 2312, baseType: !1576, size: 64)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !158, line: 2277, flags: DIFlagFwdDecl)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1541, file: !158, line: 2315, baseType: !939, size: 64, offset: 768)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1541, file: !158, line: 2316, baseType: !939, size: 64, offset: 832)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1541, file: !158, line: 2317, baseType: !939, size: 64, offset: 896)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1541, file: !158, line: 2318, baseType: !939, size: 64, offset: 960)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1541, file: !158, line: 2319, baseType: !939, size: 64, offset: 1024)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1541, file: !158, line: 2320, baseType: !939, size: 64, offset: 1088)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1541, file: !158, line: 2321, baseType: !939, size: 64, offset: 1152)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1541, file: !158, line: 2322, baseType: !939, size: 64, offset: 1216)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1541, file: !158, line: 2324, baseType: !1587, size: 64, offset: 1280)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !158, line: 2324, flags: DIFlagFwdDecl)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !941, file: !158, line: 3395, baseType: !1590, size: 320)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !158, line: 1469, size: 320, elements: !1591)
!1591 = !{!1592, !1593, !1594}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1590, file: !158, line: 1470, baseType: !977, size: 192)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1590, file: !158, line: 1471, baseType: !939, size: 64, offset: 192)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1590, file: !158, line: 1472, baseType: !939, size: 64, offset: 256)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !941, file: !158, line: 3396, baseType: !1596, size: 320)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !158, line: 1482, size: 320, elements: !1597)
!1597 = !{!1598, !1599, !1600}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1596, file: !158, line: 1483, baseType: !977, size: 192)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1596, file: !158, line: 1484, baseType: !855, size: 32, offset: 192)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1596, file: !158, line: 1485, baseType: !1332, size: 64, offset: 256)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !941, file: !158, line: 3397, baseType: !1602, size: 384)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !158, line: 1829, size: 384, elements: !1603)
!1603 = !{!1604, !1605, !1606, !1607}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1602, file: !158, line: 1830, baseType: !977, size: 192)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1602, file: !158, line: 1831, baseType: !1060, size: 32, offset: 192)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1602, file: !158, line: 1832, baseType: !939, size: 64, offset: 256)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1602, file: !158, line: 1835, baseType: !1332, size: 64, offset: 320)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !941, file: !158, line: 3398, baseType: !1609, size: 704)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !158, line: 1898, size: 704, elements: !1610)
!1610 = !{!1611, !1612, !1613, !1617, !1618, !1621}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1609, file: !158, line: 1899, baseType: !977, size: 192)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1609, file: !158, line: 1902, baseType: !939, size: 64, offset: 192)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1609, file: !158, line: 1905, baseType: !1614, size: 64, offset: 256)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !803, line: 58, baseType: !1615)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !803, line: 57, flags: DIFlagFwdDecl)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1609, file: !158, line: 1908, baseType: !7, size: 32, offset: 320)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1609, file: !158, line: 1911, baseType: !1619, size: 64, offset: 384)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !158, line: 1876, flags: DIFlagFwdDecl)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1609, file: !158, line: 1914, baseType: !1622, size: 256, offset: 448)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !158, line: 1883, size: 256, elements: !1623)
!1623 = !{!1624, !1626, !1627, !1632}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1622, file: !158, line: 1884, baseType: !1625, size: 64)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1622, file: !158, line: 1885, baseType: !1625, size: 64, offset: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1622, file: !158, line: 1891, baseType: !1628, size: 64, offset: 128)
!1628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1622, file: !158, line: 1891, size: 64, elements: !1629)
!1629 = !{!1630, !1631}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1628, file: !158, line: 1891, baseType: !1614, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1628, file: !158, line: 1891, baseType: !939, size: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1622, file: !158, line: 1892, baseType: !1633, size: 64, offset: 192)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !941, file: !158, line: 3399, baseType: !1635, size: 704)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !158, line: 2008, size: 704, elements: !1636)
!1636 = !{!1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1635, file: !158, line: 2009, baseType: !977, size: 192)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1635, file: !158, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1635, file: !158, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1635, file: !158, line: 2014, baseType: !1060, size: 32, offset: 224)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1635, file: !158, line: 2016, baseType: !939, size: 64, offset: 256)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1635, file: !158, line: 2017, baseType: !1321, size: 64, offset: 320)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1635, file: !158, line: 2019, baseType: !939, size: 64, offset: 384)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1635, file: !158, line: 2020, baseType: !939, size: 64, offset: 448)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1635, file: !158, line: 2021, baseType: !939, size: 64, offset: 512)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1635, file: !158, line: 2022, baseType: !939, size: 64, offset: 576)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1635, file: !158, line: 2023, baseType: !939, size: 64, offset: 640)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !941, file: !158, line: 3400, baseType: !1649, size: 832)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !158, line: 2430, size: 832, elements: !1650)
!1650 = !{!1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1649, file: !158, line: 2431, baseType: !977, size: 192)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1649, file: !158, line: 2433, baseType: !939, size: 64, offset: 192)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1649, file: !158, line: 2434, baseType: !939, size: 64, offset: 256)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1649, file: !158, line: 2435, baseType: !939, size: 64, offset: 320)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1649, file: !158, line: 2436, baseType: !939, size: 64, offset: 384)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1649, file: !158, line: 2437, baseType: !1321, size: 64, offset: 448)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1649, file: !158, line: 2438, baseType: !939, size: 64, offset: 512)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1649, file: !158, line: 2440, baseType: !939, size: 64, offset: 576)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1649, file: !158, line: 2441, baseType: !939, size: 64, offset: 640)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1649, file: !158, line: 2443, baseType: !1661, size: 128, offset: 704)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !158, line: 182, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !158, line: 182, size: 128, elements: !1663)
!1663 = !{!1664}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1662, file: !158, line: 182, baseType: !1326, size: 128)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !941, file: !158, line: 3401, baseType: !1666, size: 320)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !158, line: 3327, size: 320, elements: !1667)
!1667 = !{!1668, !1669, !1676}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1666, file: !158, line: 3329, baseType: !977, size: 192)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1666, file: !158, line: 3330, baseType: !1670, size: 64, offset: 192)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !158, line: 3320, size: 192, elements: !1672)
!1672 = !{!1673, !1674, !1675}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1671, file: !158, line: 3322, baseType: !1670, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1671, file: !158, line: 3323, baseType: !1670, size: 64, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1671, file: !158, line: 3324, baseType: !939, size: 64, offset: 128)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1666, file: !158, line: 3331, baseType: !1670, size: 64, offset: 256)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !941, file: !158, line: 3402, baseType: !1678, size: 256)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !158, line: 1540, size: 256, elements: !1679)
!1679 = !{!1680, !1681}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1678, file: !158, line: 1541, baseType: !977, size: 192)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1678, file: !158, line: 1542, baseType: !1682, size: 64, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !158, line: 1538, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !158, line: 1538, size: 192, elements: !1685)
!1685 = !{!1686}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1684, file: !158, line: 1538, baseType: !1687, size: 192)
!1687 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !158, line: 1537, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !158, line: 1537, size: 192, elements: !1689)
!1689 = !{!1690, !1691, !1692}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1688, file: !158, line: 1537, baseType: !7, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1688, file: !158, line: 1537, baseType: !7, size: 32, offset: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1688, file: !158, line: 1537, baseType: !1693, size: 128, offset: 64)
!1693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1694, size: 128, elements: !919)
!1694 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !158, line: 1535, baseType: !1695)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !158, line: 1532, size: 128, elements: !1696)
!1696 = !{!1697, !1698}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1695, file: !158, line: 1533, baseType: !939, size: 64)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1695, file: !158, line: 1534, baseType: !939, size: 64, offset: 64)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !941, file: !158, line: 3403, baseType: !1700, size: 512)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !158, line: 1938, size: 512, elements: !1701)
!1701 = !{!1702, !1703, !1704, !1705, !1711, !1712, !1713}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1700, file: !158, line: 1939, baseType: !977, size: 192)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1700, file: !158, line: 1940, baseType: !1060, size: 32, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1700, file: !158, line: 1941, baseType: !157, size: 32, offset: 224)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1700, file: !158, line: 1946, baseType: !1706, size: 32, offset: 256)
!1706 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !158, line: 1942, size: 32, elements: !1707)
!1707 = !{!1708, !1709, !1710}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1706, file: !158, line: 1943, baseType: !176, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1706, file: !158, line: 1944, baseType: !183, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1706, file: !158, line: 1945, baseType: !190, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1700, file: !158, line: 1950, baseType: !1384, size: 64, offset: 320)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1700, file: !158, line: 1951, baseType: !1384, size: 64, offset: 384)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1700, file: !158, line: 1953, baseType: !1332, size: 64, offset: 448)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !941, file: !158, line: 3404, baseType: !1715, size: 1664)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !158, line: 3337, size: 1664, elements: !1716)
!1716 = !{!1717, !1718}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1715, file: !158, line: 3338, baseType: !977, size: 192)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1715, file: !158, line: 3341, baseType: !1719, size: 1472, offset: 192)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1720, line: 410, size: 1472, elements: !1721)
!1720 = !DIFile(filename: "./options.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1721 = !{!1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1719, file: !1720, line: 412, baseType: !855, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1719, file: !1720, line: 413, baseType: !855, size: 32, offset: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1719, file: !1720, line: 414, baseType: !855, size: 32, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1719, file: !1720, line: 415, baseType: !855, size: 32, offset: 96)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1719, file: !1720, line: 416, baseType: !855, size: 32, offset: 128)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1719, file: !1720, line: 417, baseType: !855, size: 32, offset: 160)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1719, file: !1720, line: 418, baseType: !1052, size: 8, offset: 192)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1719, file: !1720, line: 419, baseType: !1052, size: 8, offset: 200)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1719, file: !1720, line: 420, baseType: !1731, size: 8, offset: 208)
!1731 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1719, file: !1720, line: 421, baseType: !1731, size: 8, offset: 216)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1719, file: !1720, line: 422, baseType: !1731, size: 8, offset: 224)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1719, file: !1720, line: 423, baseType: !1731, size: 8, offset: 232)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1719, file: !1720, line: 424, baseType: !1731, size: 8, offset: 240)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1719, file: !1720, line: 425, baseType: !1731, size: 8, offset: 248)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1719, file: !1720, line: 426, baseType: !1731, size: 8, offset: 256)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1719, file: !1720, line: 427, baseType: !1731, size: 8, offset: 264)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1719, file: !1720, line: 428, baseType: !1731, size: 8, offset: 272)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1719, file: !1720, line: 429, baseType: !1731, size: 8, offset: 280)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1719, file: !1720, line: 430, baseType: !1731, size: 8, offset: 288)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1719, file: !1720, line: 431, baseType: !1731, size: 8, offset: 296)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1719, file: !1720, line: 432, baseType: !1731, size: 8, offset: 304)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1719, file: !1720, line: 433, baseType: !1731, size: 8, offset: 312)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1719, file: !1720, line: 434, baseType: !1731, size: 8, offset: 320)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1719, file: !1720, line: 435, baseType: !1731, size: 8, offset: 328)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1719, file: !1720, line: 436, baseType: !1731, size: 8, offset: 336)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1719, file: !1720, line: 437, baseType: !1731, size: 8, offset: 344)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1719, file: !1720, line: 438, baseType: !1731, size: 8, offset: 352)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1719, file: !1720, line: 439, baseType: !1731, size: 8, offset: 360)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1719, file: !1720, line: 440, baseType: !1731, size: 8, offset: 368)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1719, file: !1720, line: 441, baseType: !1731, size: 8, offset: 376)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1719, file: !1720, line: 442, baseType: !1731, size: 8, offset: 384)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1719, file: !1720, line: 443, baseType: !1731, size: 8, offset: 392)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1719, file: !1720, line: 444, baseType: !1731, size: 8, offset: 400)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1719, file: !1720, line: 445, baseType: !1731, size: 8, offset: 408)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1719, file: !1720, line: 446, baseType: !1731, size: 8, offset: 416)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1719, file: !1720, line: 447, baseType: !1731, size: 8, offset: 424)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1719, file: !1720, line: 448, baseType: !1731, size: 8, offset: 432)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1719, file: !1720, line: 449, baseType: !1731, size: 8, offset: 440)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1719, file: !1720, line: 450, baseType: !1731, size: 8, offset: 448)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1719, file: !1720, line: 451, baseType: !1731, size: 8, offset: 456)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1719, file: !1720, line: 452, baseType: !1731, size: 8, offset: 464)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1719, file: !1720, line: 453, baseType: !1731, size: 8, offset: 472)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1719, file: !1720, line: 454, baseType: !1731, size: 8, offset: 480)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1719, file: !1720, line: 455, baseType: !1731, size: 8, offset: 488)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1719, file: !1720, line: 456, baseType: !1731, size: 8, offset: 496)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1719, file: !1720, line: 457, baseType: !1731, size: 8, offset: 504)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1719, file: !1720, line: 458, baseType: !1731, size: 8, offset: 512)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1719, file: !1720, line: 459, baseType: !1731, size: 8, offset: 520)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1719, file: !1720, line: 460, baseType: !1731, size: 8, offset: 528)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1719, file: !1720, line: 461, baseType: !1731, size: 8, offset: 536)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1719, file: !1720, line: 462, baseType: !1731, size: 8, offset: 544)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1719, file: !1720, line: 463, baseType: !1731, size: 8, offset: 552)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1719, file: !1720, line: 464, baseType: !1731, size: 8, offset: 560)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1719, file: !1720, line: 465, baseType: !1731, size: 8, offset: 568)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1719, file: !1720, line: 466, baseType: !1731, size: 8, offset: 576)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1719, file: !1720, line: 467, baseType: !1731, size: 8, offset: 584)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1719, file: !1720, line: 468, baseType: !1731, size: 8, offset: 592)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1719, file: !1720, line: 469, baseType: !1731, size: 8, offset: 600)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1719, file: !1720, line: 470, baseType: !1731, size: 8, offset: 608)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1719, file: !1720, line: 471, baseType: !1731, size: 8, offset: 616)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1719, file: !1720, line: 472, baseType: !1731, size: 8, offset: 624)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1719, file: !1720, line: 473, baseType: !1731, size: 8, offset: 632)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1719, file: !1720, line: 474, baseType: !1731, size: 8, offset: 640)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1719, file: !1720, line: 475, baseType: !1731, size: 8, offset: 648)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1719, file: !1720, line: 476, baseType: !1731, size: 8, offset: 656)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1719, file: !1720, line: 477, baseType: !1731, size: 8, offset: 664)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1719, file: !1720, line: 478, baseType: !1731, size: 8, offset: 672)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1719, file: !1720, line: 479, baseType: !1731, size: 8, offset: 680)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1719, file: !1720, line: 480, baseType: !1731, size: 8, offset: 688)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1719, file: !1720, line: 481, baseType: !1731, size: 8, offset: 696)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1719, file: !1720, line: 482, baseType: !1731, size: 8, offset: 704)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1719, file: !1720, line: 483, baseType: !1731, size: 8, offset: 712)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1719, file: !1720, line: 484, baseType: !1731, size: 8, offset: 720)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1719, file: !1720, line: 485, baseType: !1731, size: 8, offset: 728)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1719, file: !1720, line: 486, baseType: !1731, size: 8, offset: 736)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1719, file: !1720, line: 487, baseType: !1731, size: 8, offset: 744)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1719, file: !1720, line: 488, baseType: !1731, size: 8, offset: 752)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1719, file: !1720, line: 489, baseType: !1731, size: 8, offset: 760)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1719, file: !1720, line: 490, baseType: !1731, size: 8, offset: 768)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1719, file: !1720, line: 491, baseType: !1731, size: 8, offset: 776)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1719, file: !1720, line: 492, baseType: !1731, size: 8, offset: 784)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1719, file: !1720, line: 493, baseType: !1731, size: 8, offset: 792)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1719, file: !1720, line: 494, baseType: !1731, size: 8, offset: 800)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1719, file: !1720, line: 495, baseType: !1731, size: 8, offset: 808)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1719, file: !1720, line: 496, baseType: !1731, size: 8, offset: 816)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1719, file: !1720, line: 497, baseType: !1731, size: 8, offset: 824)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1719, file: !1720, line: 498, baseType: !1731, size: 8, offset: 832)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1719, file: !1720, line: 499, baseType: !1731, size: 8, offset: 840)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1719, file: !1720, line: 500, baseType: !1731, size: 8, offset: 848)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1719, file: !1720, line: 501, baseType: !1731, size: 8, offset: 856)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1719, file: !1720, line: 502, baseType: !1731, size: 8, offset: 864)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1719, file: !1720, line: 503, baseType: !1731, size: 8, offset: 872)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1719, file: !1720, line: 504, baseType: !1731, size: 8, offset: 880)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1719, file: !1720, line: 505, baseType: !1731, size: 8, offset: 888)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1719, file: !1720, line: 506, baseType: !1731, size: 8, offset: 896)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1719, file: !1720, line: 507, baseType: !1731, size: 8, offset: 904)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1719, file: !1720, line: 508, baseType: !1731, size: 8, offset: 912)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1719, file: !1720, line: 509, baseType: !1731, size: 8, offset: 920)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1719, file: !1720, line: 510, baseType: !1731, size: 8, offset: 928)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1719, file: !1720, line: 511, baseType: !1731, size: 8, offset: 936)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1719, file: !1720, line: 512, baseType: !1731, size: 8, offset: 944)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1719, file: !1720, line: 513, baseType: !1731, size: 8, offset: 952)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1719, file: !1720, line: 514, baseType: !1731, size: 8, offset: 960)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1719, file: !1720, line: 515, baseType: !1731, size: 8, offset: 968)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1719, file: !1720, line: 516, baseType: !1731, size: 8, offset: 976)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1719, file: !1720, line: 517, baseType: !1731, size: 8, offset: 984)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1719, file: !1720, line: 518, baseType: !1731, size: 8, offset: 992)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1719, file: !1720, line: 519, baseType: !1731, size: 8, offset: 1000)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1719, file: !1720, line: 520, baseType: !1731, size: 8, offset: 1008)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1719, file: !1720, line: 521, baseType: !1731, size: 8, offset: 1016)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1719, file: !1720, line: 522, baseType: !1731, size: 8, offset: 1024)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1719, file: !1720, line: 523, baseType: !1731, size: 8, offset: 1032)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1719, file: !1720, line: 524, baseType: !1731, size: 8, offset: 1040)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1719, file: !1720, line: 525, baseType: !1731, size: 8, offset: 1048)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1719, file: !1720, line: 526, baseType: !1731, size: 8, offset: 1056)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1719, file: !1720, line: 527, baseType: !1731, size: 8, offset: 1064)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1719, file: !1720, line: 528, baseType: !1731, size: 8, offset: 1072)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1719, file: !1720, line: 529, baseType: !1731, size: 8, offset: 1080)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1719, file: !1720, line: 530, baseType: !1731, size: 8, offset: 1088)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1719, file: !1720, line: 531, baseType: !1731, size: 8, offset: 1096)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1719, file: !1720, line: 532, baseType: !1731, size: 8, offset: 1104)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1719, file: !1720, line: 533, baseType: !1731, size: 8, offset: 1112)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1719, file: !1720, line: 534, baseType: !1731, size: 8, offset: 1120)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1719, file: !1720, line: 535, baseType: !1731, size: 8, offset: 1128)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1719, file: !1720, line: 536, baseType: !1731, size: 8, offset: 1136)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1719, file: !1720, line: 537, baseType: !1731, size: 8, offset: 1144)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1719, file: !1720, line: 538, baseType: !1731, size: 8, offset: 1152)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1719, file: !1720, line: 539, baseType: !1731, size: 8, offset: 1160)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1719, file: !1720, line: 540, baseType: !1731, size: 8, offset: 1168)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1719, file: !1720, line: 541, baseType: !1731, size: 8, offset: 1176)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1719, file: !1720, line: 542, baseType: !1731, size: 8, offset: 1184)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1719, file: !1720, line: 543, baseType: !1731, size: 8, offset: 1192)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1719, file: !1720, line: 544, baseType: !1731, size: 8, offset: 1200)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1719, file: !1720, line: 545, baseType: !1731, size: 8, offset: 1208)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1719, file: !1720, line: 546, baseType: !1731, size: 8, offset: 1216)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1719, file: !1720, line: 547, baseType: !1731, size: 8, offset: 1224)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1719, file: !1720, line: 548, baseType: !1731, size: 8, offset: 1232)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1719, file: !1720, line: 549, baseType: !1731, size: 8, offset: 1240)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1719, file: !1720, line: 550, baseType: !1731, size: 8, offset: 1248)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1719, file: !1720, line: 551, baseType: !1731, size: 8, offset: 1256)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1719, file: !1720, line: 552, baseType: !1731, size: 8, offset: 1264)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1719, file: !1720, line: 553, baseType: !1731, size: 8, offset: 1272)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1719, file: !1720, line: 554, baseType: !1731, size: 8, offset: 1280)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1719, file: !1720, line: 555, baseType: !1731, size: 8, offset: 1288)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1719, file: !1720, line: 556, baseType: !1731, size: 8, offset: 1296)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1719, file: !1720, line: 557, baseType: !1731, size: 8, offset: 1304)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1719, file: !1720, line: 558, baseType: !1731, size: 8, offset: 1312)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1719, file: !1720, line: 559, baseType: !1731, size: 8, offset: 1320)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1719, file: !1720, line: 560, baseType: !1731, size: 8, offset: 1328)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1719, file: !1720, line: 561, baseType: !1731, size: 8, offset: 1336)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1719, file: !1720, line: 562, baseType: !1731, size: 8, offset: 1344)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1719, file: !1720, line: 563, baseType: !1731, size: 8, offset: 1352)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1719, file: !1720, line: 564, baseType: !1731, size: 8, offset: 1360)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1719, file: !1720, line: 565, baseType: !1731, size: 8, offset: 1368)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1719, file: !1720, line: 566, baseType: !1731, size: 8, offset: 1376)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1719, file: !1720, line: 567, baseType: !1731, size: 8, offset: 1384)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1719, file: !1720, line: 568, baseType: !1731, size: 8, offset: 1392)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1719, file: !1720, line: 569, baseType: !1731, size: 8, offset: 1400)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1719, file: !1720, line: 570, baseType: !1731, size: 8, offset: 1408)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1719, file: !1720, line: 571, baseType: !1731, size: 8, offset: 1416)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1719, file: !1720, line: 572, baseType: !1731, size: 8, offset: 1424)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1719, file: !1720, line: 573, baseType: !1731, size: 8, offset: 1432)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1719, file: !1720, line: 574, baseType: !1731, size: 8, offset: 1440)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !941, file: !158, line: 3405, baseType: !1887, size: 384)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !158, line: 3352, size: 384, elements: !1888)
!1888 = !{!1889, !1890}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1887, file: !158, line: 3353, baseType: !977, size: 192)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1887, file: !158, line: 3356, baseType: !1891, size: 192, offset: 192)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1720, line: 578, size: 192, elements: !1892)
!1892 = !{!1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1891, file: !1720, line: 580, baseType: !855, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1891, file: !1720, line: 581, baseType: !855, size: 32, offset: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1891, file: !1720, line: 582, baseType: !855, size: 32, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1891, file: !1720, line: 583, baseType: !855, size: 32, offset: 96)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1891, file: !1720, line: 584, baseType: !1052, size: 8, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1891, file: !1720, line: 585, baseType: !1052, size: 8, offset: 136)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1891, file: !1720, line: 586, baseType: !1052, size: 8, offset: 144)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1891, file: !1720, line: 587, baseType: !1052, size: 8, offset: 152)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1891, file: !1720, line: 588, baseType: !1052, size: 8, offset: 160)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1891, file: !1720, line: 589, baseType: !1052, size: 8, offset: 168)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1891, file: !1720, line: 590, baseType: !1052, size: 8, offset: 176)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !903, file: !610, line: 178, baseType: !1358, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !903, file: !610, line: 179, baseType: !1906, size: 64)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !610, line: 150, baseType: !1908)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !610, line: 142, size: 320, elements: !1909)
!1909 = !{!1910, !1911, !1912, !1913, !1914, !1915}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1908, file: !610, line: 144, baseType: !939, size: 64)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1908, file: !610, line: 145, baseType: !883, size: 64, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1908, file: !610, line: 146, baseType: !883, size: 64, offset: 128)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1908, file: !610, line: 147, baseType: !1566, size: 32, offset: 192)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1908, file: !610, line: 148, baseType: !7, size: 32, offset: 224)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1908, file: !610, line: 149, baseType: !1052, size: 8, offset: 256)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !903, file: !610, line: 180, baseType: !1917, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !610, line: 162, baseType: !1919)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !610, line: 159, size: 128, elements: !1920)
!1920 = !{!1921, !1922}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1919, file: !610, line: 160, baseType: !939, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1919, file: !610, line: 161, baseType: !837, size: 64, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !903, file: !610, line: 181, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !610, line: 181, flags: DIFlagFwdDecl)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !898, file: !610, line: 317, baseType: !1927, size: 64)
!1927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !837, size: 64, elements: !919)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !898, file: !610, line: 318, baseType: !1929, size: 320)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !610, line: 188, size: 320, elements: !1930)
!1930 = !{!1931, !1933, !1988}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1929, file: !610, line: 190, baseType: !1932, size: 192)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !902, size: 192, elements: !1010)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1929, file: !610, line: 193, baseType: !1934, size: 64, offset: 192)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !610, line: 206, size: 320, elements: !1936)
!1936 = !{!1937, !1973, !1974, !1975, !1987}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1935, file: !610, line: 208, baseType: !1938, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !803, line: 62, baseType: !1940)
!1940 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1941, line: 538, size: 256, elements: !1942)
!1941 = !DIFile(filename: "./output.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1942 = !{!1943, !1947, !1953, !1964}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1940, file: !1941, line: 539, baseType: !1944, size: 32)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1941, line: 482, size: 32, elements: !1945)
!1945 = !{!1946}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1944, file: !1941, line: 484, baseType: !7, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1940, file: !1941, line: 540, baseType: !1948, size: 192)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1941, line: 488, size: 192, elements: !1949)
!1949 = !{!1950, !1951, !1952}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1948, file: !1941, line: 489, baseType: !1944, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1948, file: !1941, line: 492, baseType: !908, size: 64, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1948, file: !1941, line: 496, baseType: !939, size: 64, offset: 128)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1940, file: !1941, line: 541, baseType: !1954, size: 256)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1941, line: 504, size: 256, elements: !1955)
!1955 = !{!1956, !1957, !1962, !1963}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1954, file: !1941, line: 505, baseType: !1944, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1954, file: !1941, line: 509, baseType: !1958, size: 64, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1941, line: 501, baseType: !1959)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = !DISubroutineType(types: !1961)
!1961 = !{null, !1281}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1954, file: !1941, line: 510, baseType: !1281, size: 64, offset: 128)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1954, file: !1941, line: 513, baseType: !1938, size: 64, offset: 192)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1940, file: !1941, line: 542, baseType: !1965, size: 128)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1941, line: 530, size: 128, elements: !1966)
!1966 = !{!1967, !1968}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1965, file: !1941, line: 531, baseType: !1944, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1965, file: !1941, line: 534, baseType: !1969, size: 64, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1941, line: 525, baseType: !1970)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!1052, !939, !908, !820, !820}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1935, file: !610, line: 211, baseType: !7, size: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1935, file: !610, line: 214, baseType: !837, size: 64, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1935, file: !610, line: 224, baseType: !1976, size: 64, offset: 192)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !610, line: 202, baseType: !1978)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !610, line: 202, size: 128, elements: !1979)
!1979 = !{!1980}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1978, file: !610, line: 202, baseType: !1981, size: 128)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !610, line: 200, baseType: !1982)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !610, line: 200, size: 128, elements: !1983)
!1983 = !{!1984, !1985, !1986}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1982, file: !610, line: 200, baseType: !7, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1982, file: !610, line: 200, baseType: !7, size: 32, offset: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1982, file: !610, line: 200, baseType: !918, size: 64, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1935, file: !610, line: 234, baseType: !1976, size: 64, offset: 256)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1929, file: !610, line: 197, baseType: !837, size: 64, offset: 256)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !898, file: !610, line: 319, baseType: !999, size: 256)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !898, file: !610, line: 320, baseType: !1018, size: 192)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !877, file: !385, line: 366, baseType: !868, size: 64, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "insn_info", scope: !877, file: !385, line: 370, baseType: !1993, size: 64, offset: 192)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_insn_info", file: !385, line: 433, size: 384, elements: !1995)
!1995 = !{!1996, !1997, !1999, !2000, !2001, !2012}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1994, file: !385, line: 435, baseType: !883, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !1994, file: !385, line: 436, baseType: !1998, size: 64, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !1994, file: !385, line: 437, baseType: !1998, size: 64, offset: 128)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "eq_uses", scope: !1994, file: !385, line: 439, baseType: !1998, size: 64, offset: 192)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "mw_hardregs", scope: !1994, file: !385, line: 440, baseType: !2002, size: 64, offset: 256)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_mw_hardreg", file: !385, line: 339, size: 192, elements: !2005)
!2005 = !{!2006, !2007, !2008, !2009, !2010, !2011}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "mw_reg", scope: !2004, file: !385, line: 341, baseType: !883, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2004, file: !385, line: 344, baseType: !7, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2004, file: !385, line: 346, baseType: !855, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "start_regno", scope: !2004, file: !385, line: 347, baseType: !7, size: 32, offset: 96)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "end_regno", scope: !2004, file: !385, line: 348, baseType: !7, size: 32, offset: 128)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "mw_order", scope: !2004, file: !385, line: 349, baseType: !7, size: 32, offset: 160)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !1994, file: !385, line: 444, baseType: !855, size: 32, offset: 320)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "next_reg", scope: !877, file: !385, line: 374, baseType: !873, size: 64, offset: 256)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "prev_reg", scope: !877, file: !385, line: 375, baseType: !873, size: 64, offset: 320)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !877, file: !385, line: 376, baseType: !7, size: 32, offset: 384)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !877, file: !385, line: 379, baseType: !855, size: 32, offset: 416)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "ref_order", scope: !877, file: !385, line: 382, baseType: !7, size: 32, offset: 448)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "regular_ref", scope: !874, file: !385, line: 425, baseType: !2019, size: 576)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_regular_ref", file: !385, line: 398, size: 576, elements: !2020)
!2020 = !{!2021, !2022}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2019, file: !385, line: 400, baseType: !877, size: 512)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2019, file: !385, line: 405, baseType: !2023, size: 64, offset: 512)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_ref", scope: !874, file: !385, line: 426, baseType: !2025, size: 576)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_artificial_ref", file: !385, line: 388, size: 576, elements: !2026)
!2026 = !{!2027, !2028}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2025, file: !385, line: 390, baseType: !877, size: 512)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2025, file: !385, line: 394, baseType: !1357, size: 64, offset: 512)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "extract_ref", scope: !874, file: !385, line: 427, baseType: !2030, size: 704)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_extract_ref", file: !385, line: 413, size: 704, elements: !2031)
!2031 = !{!2032, !2033, !2034, !2035}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2030, file: !385, line: 415, baseType: !2019, size: 576)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2030, file: !385, line: 416, baseType: !855, size: 32, offset: 576)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2030, file: !385, line: 417, baseType: !855, size: 32, offset: 608)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2030, file: !385, line: 418, baseType: !5, size: 32, offset: 640)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !869, file: !385, line: 452, baseType: !868, size: 64, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_byte_lr_problem_data", file: !3, line: 2368, size: 1152, elements: !2039)
!2039 = !{!2040, !2041, !2042, !2043, !2045, !2046}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "invalidated_by_call", scope: !2038, file: !3, line: 2371, baseType: !802, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_regs_used", scope: !2038, file: !3, line: 2372, baseType: !802, size: 64, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "needs_expansion", scope: !2038, file: !3, line: 2376, baseType: !802, size: 64, offset: 128)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "regno_start", scope: !2038, file: !3, line: 2380, baseType: !2044, size: 64, offset: 192)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "regno_len", scope: !2038, file: !3, line: 2381, baseType: !2044, size: 64, offset: 256)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "byte_lr_bitmaps", scope: !2038, file: !3, line: 2383, baseType: !827, size: 832, offset: 320)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_live_bb_info", file: !385, line: 843, size: 256, elements: !2049)
!2049 = !{!2050, !2051, !2052, !2053}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2048, file: !385, line: 846, baseType: !802, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2048, file: !385, line: 848, baseType: !802, size: 64, offset: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2048, file: !385, line: 851, baseType: !802, size: 64, offset: 128)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2048, file: !385, line: 852, baseType: !802, size: 64, offset: 192)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_lr_bb_info", file: !385, line: 826, size: 256, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !2055, file: !385, line: 829, baseType: !802, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !2055, file: !385, line: 831, baseType: !802, size: 64, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2055, file: !385, line: 834, baseType: !802, size: 64, offset: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2055, file: !385, line: 835, baseType: !802, size: 64, offset: 192)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_rd_problem_data", file: !3, line: 195, size: 960, elements: !2063)
!2063 = !{!2064, !2065, !2066}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_invalidated_by_call", scope: !2062, file: !3, line: 198, baseType: !802, size: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "dense_invalidated_by_call", scope: !2062, file: !3, line: 200, baseType: !802, size: 64, offset: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "rd_bitmaps", scope: !2062, file: !3, line: 202, baseType: !827, size: 832, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_rd_bb_info", file: !385, line: 794, size: 320, elements: !2069)
!2069 = !{!2070, !2071, !2072, !2073, !2074}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2068, file: !385, line: 797, baseType: !802, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_kill", scope: !2068, file: !385, line: 798, baseType: !802, size: 64, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2068, file: !385, line: 799, baseType: !802, size: 64, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2068, file: !385, line: 802, baseType: !802, size: 64, offset: 192)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2068, file: !385, line: 803, baseType: !802, size: 64, offset: 256)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_lr_problem_data", file: !3, line: 732, size: 128, elements: !2077)
!2077 = !{!2078, !2080}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2076, file: !3, line: 734, baseType: !2079, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2076, file: !3, line: 735, baseType: !2079, size: 64, offset: 64)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_scan_bb_info", file: !385, line: 771, size: 128, elements: !2083)
!2083 = !{!2084, !2085}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_defs", scope: !2082, file: !385, line: 782, baseType: !1998, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_uses", scope: !2082, file: !385, line: 788, baseType: !1998, size: 64, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_live_problem_data", file: !3, line: 1356, size: 128, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2087, file: !3, line: 1358, baseType: !2079, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2087, file: !3, line: 1359, baseType: !2079, size: 64, offset: 64)
!2091 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_byte_lr_bb_info", file: !385, line: 859, size: 256, elements: !2094)
!2094 = !{!2095, !2096, !2097, !2098}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !2093, file: !385, line: 862, baseType: !802, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !2093, file: !385, line: 864, baseType: !802, size: 64, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2093, file: !385, line: 867, baseType: !802, size: 64, offset: 128)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2093, file: !385, line: 868, baseType: !802, size: 64, offset: 192)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_md_bb_info", file: !385, line: 810, size: 320, elements: !2101)
!2101 = !{!2102, !2103, !2104, !2105, !2106}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2100, file: !385, line: 813, baseType: !802, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2100, file: !385, line: 814, baseType: !802, size: 64, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2100, file: !385, line: 815, baseType: !802, size: 64, offset: 128)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2100, file: !385, line: 818, baseType: !802, size: 64, offset: 192)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2100, file: !385, line: 819, baseType: !802, size: 64, offset: 256)
!2107 = !{!0, !2108, !2110, !2112, !2268, !2270, !2272, !2274, !2276, !2278, !2280}
!2108 = !DIGlobalVariableExpression(var: !2109, expr: !DIExpression())
!2109 = distinct !DIGlobalVariable(name: "seen_in_block", scope: !2, file: !3, line: 57, type: !802, isLocal: true, isDefinition: true)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(name: "seen_in_insn", scope: !2, file: !3, line: 58, type: !802, isLocal: true, isDefinition: true)
!2112 = !DIGlobalVariableExpression(var: !2113, expr: !DIExpression())
!2113 = distinct !DIGlobalVariable(name: "problem_LR", scope: !2, file: !3, line: 1224, type: !2114, isLocal: true, isDefinition: true)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_problem", file: !385, line: 255, size: 1280, elements: !2115)
!2115 = !{!2116, !2117, !2118, !2123, !2125, !2130, !2132, !2134, !2175, !2180, !2185, !2190, !2192, !2197, !2199, !2254, !2259, !2260, !2262, !2264, !2265, !2267}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2114, file: !385, line: 258, baseType: !7, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2114, file: !385, line: 259, baseType: !384, size: 32, offset: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fun", scope: !2114, file: !385, line: 260, baseType: !2119, size: 64, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_alloc_function", file: !385, line: 197, baseType: !2120)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DISubroutineType(types: !2122)
!2122 = !{null, !802}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fun", scope: !2114, file: !385, line: 261, baseType: !2124, size: 64, offset: 128)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_reset_function", file: !385, line: 205, baseType: !2120)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "free_bb_fun", scope: !2114, file: !385, line: 262, baseType: !2126, size: 64, offset: 192)
!2126 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_free_bb_function", file: !385, line: 209, baseType: !2127)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{null, !1357, !801}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "local_compute_fun", scope: !2114, file: !385, line: 263, baseType: !2131, size: 64, offset: 256)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_local_compute_function", file: !385, line: 212, baseType: !2120)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "init_fun", scope: !2114, file: !385, line: 264, baseType: !2133, size: 64, offset: 320)
!2133 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_init_function", file: !385, line: 215, baseType: !2120)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "dataflow_fun", scope: !2114, file: !385, line: 265, baseType: !2135, size: 64, offset: 384)
!2135 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_dataflow_function", file: !385, line: 218, baseType: !2136)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{null, !2139, !802, !2174, !855}
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dataflow", file: !385, line: 289, size: 448, elements: !2141)
!2141 = !{!2142, !2144, !2145, !2146, !2168, !2169, !2170, !2171, !2172, !2173}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "problem", scope: !2140, file: !385, line: 291, baseType: !2143, size: 64)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "block_info", scope: !2140, file: !385, line: 295, baseType: !800, size: 64, offset: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "block_info_size", scope: !2140, file: !385, line: 296, baseType: !7, size: 32, offset: 128)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "block_pool", scope: !2140, file: !385, line: 299, baseType: !2147, size: 64, offset: 192)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !2148, line: 58, baseType: !2149)
!2148 = !DIFile(filename: "./alloc-pool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !2148, line: 32, size: 704, elements: !2151)
!2151 = !{!2152, !2153, !2154, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2150, file: !2148, line: 34, baseType: !908, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !2150, file: !2148, line: 38, baseType: !1295, size: 64, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !2150, file: !2148, line: 41, baseType: !2155, size: 64, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !2148, line: 30, baseType: !2156)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !2148, line: 26, size: 64, elements: !2158)
!2158 = !{!2159}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2157, file: !2148, line: 28, baseType: !2156, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !2150, file: !2148, line: 45, baseType: !843, size: 64, offset: 192)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !2150, file: !2148, line: 49, baseType: !1295, size: 64, offset: 256)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !2150, file: !2148, line: 51, baseType: !1295, size: 64, offset: 320)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !2150, file: !2148, line: 52, baseType: !1295, size: 64, offset: 384)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !2150, file: !2148, line: 53, baseType: !1295, size: 64, offset: 448)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !2150, file: !2148, line: 54, baseType: !2155, size: 64, offset: 512)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2150, file: !2148, line: 55, baseType: !1295, size: 64, offset: 576)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !2150, file: !2148, line: 56, baseType: !1295, size: 64, offset: 640)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "out_of_date_transfer_functions", scope: !2140, file: !385, line: 306, baseType: !802, size: 64, offset: 256)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "problem_data", scope: !2140, file: !385, line: 312, baseType: !801, size: 64, offset: 320)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "local_flags", scope: !2140, file: !385, line: 315, baseType: !7, size: 32, offset: 384)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "computed", scope: !2140, file: !385, line: 321, baseType: !1052, size: 8, offset: 416)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "solutions_dirty", scope: !2140, file: !385, line: 326, baseType: !1052, size: 8, offset: 424)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "optional_p", scope: !2140, file: !385, line: 331, baseType: !1052, size: 8, offset: 432)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "con_fun_0", scope: !2114, file: !385, line: 266, baseType: !2176, size: 64, offset: 448)
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_confluence_function_0", file: !385, line: 221, baseType: !2177)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{null, !1357}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "con_fun_n", scope: !2114, file: !385, line: 267, baseType: !2181, size: 64, offset: 512)
!2181 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_confluence_function_n", file: !385, line: 224, baseType: !2182)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = !DISubroutineType(types: !2184)
!2184 = !{null, !1374}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "trans_fun", scope: !2114, file: !385, line: 268, baseType: !2186, size: 64, offset: 576)
!2186 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_transfer_function", file: !385, line: 227, baseType: !2187)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = !DISubroutineType(types: !2189)
!2189 = !{!1052, !855}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "finalize_fun", scope: !2114, file: !385, line: 269, baseType: !2191, size: 64, offset: 640)
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_finalizer_function", file: !385, line: 230, baseType: !2120)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "free_fun", scope: !2114, file: !385, line: 270, baseType: !2193, size: 64, offset: 704)
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_free_function", file: !385, line: 233, baseType: !2194)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DISubroutineType(types: !2196)
!2196 = !{null}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "remove_problem_fun", scope: !2114, file: !385, line: 271, baseType: !2198, size: 64, offset: 768)
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_remove_problem_function", file: !385, line: 238, baseType: !2194)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "dump_start_fun", scope: !2114, file: !385, line: 272, baseType: !2200, size: 64, offset: 832)
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_dump_problem_function", file: !385, line: 241, baseType: !2201)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2202 = !DISubroutineType(types: !2203)
!2203 = !{null, !2204}
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2206, line: 7, baseType: !2207)
!2206 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2208, line: 49, size: 1728, elements: !2209)
!2208 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2209 = !{!2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2225, !2227, !2228, !2229, !2232, !2233, !2234, !2235, !2238, !2240, !2243, !2246, !2247, !2248, !2249, !2250}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2207, file: !2208, line: 51, baseType: !855, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2207, file: !2208, line: 54, baseType: !843, size: 64, offset: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2207, file: !2208, line: 55, baseType: !843, size: 64, offset: 128)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2207, file: !2208, line: 56, baseType: !843, size: 64, offset: 192)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2207, file: !2208, line: 57, baseType: !843, size: 64, offset: 256)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2207, file: !2208, line: 58, baseType: !843, size: 64, offset: 320)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2207, file: !2208, line: 59, baseType: !843, size: 64, offset: 384)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2207, file: !2208, line: 60, baseType: !843, size: 64, offset: 448)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2207, file: !2208, line: 61, baseType: !843, size: 64, offset: 512)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2207, file: !2208, line: 64, baseType: !843, size: 64, offset: 576)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2207, file: !2208, line: 65, baseType: !843, size: 64, offset: 640)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2207, file: !2208, line: 66, baseType: !843, size: 64, offset: 704)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2207, file: !2208, line: 68, baseType: !2223, size: 64, offset: 768)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64)
!2224 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2208, line: 36, flags: DIFlagFwdDecl)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2207, file: !2208, line: 70, baseType: !2226, size: 64, offset: 832)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2207, file: !2208, line: 72, baseType: !855, size: 32, offset: 896)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2207, file: !2208, line: 73, baseType: !855, size: 32, offset: 928)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2207, file: !2208, line: 74, baseType: !2230, size: 64, offset: 960)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2231, line: 152, baseType: !837)
!2231 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2207, file: !2208, line: 77, baseType: !2091, size: 16, offset: 1024)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2207, file: !2208, line: 78, baseType: !1731, size: 8, offset: 1040)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2207, file: !2208, line: 79, baseType: !1034, size: 8, offset: 1048)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2207, file: !2208, line: 81, baseType: !2236, size: 64, offset: 1088)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2208, line: 43, baseType: null)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2207, file: !2208, line: 89, baseType: !2239, size: 64, offset: 1152)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2231, line: 153, baseType: !837)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2207, file: !2208, line: 91, baseType: !2241, size: 64, offset: 1216)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2208, line: 37, flags: DIFlagFwdDecl)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2207, file: !2208, line: 92, baseType: !2244, size: 64, offset: 1280)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2208, line: 38, flags: DIFlagFwdDecl)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2207, file: !2208, line: 93, baseType: !2226, size: 64, offset: 1344)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2207, file: !2208, line: 94, baseType: !801, size: 64, offset: 1408)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2207, file: !2208, line: 95, baseType: !1295, size: 64, offset: 1472)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2207, file: !2208, line: 96, baseType: !855, size: 32, offset: 1536)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2207, file: !2208, line: 98, baseType: !2251, size: 160, offset: 1568)
!2251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !844, size: 160, elements: !2252)
!2252 = !{!2253}
!2253 = !DISubrange(count: 20)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "dump_top_fun", scope: !2114, file: !385, line: 273, baseType: !2255, size: 64, offset: 896)
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_dump_bb_problem_function", file: !385, line: 244, baseType: !2256)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{null, !1357, !2204}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "dump_bottom_fun", scope: !2114, file: !385, line: 274, baseType: !2255, size: 64, offset: 960)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "verify_start_fun", scope: !2114, file: !385, line: 275, baseType: !2261, size: 64, offset: 1024)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_verify_solution_start", file: !385, line: 247, baseType: !2194)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "verify_end_fun", scope: !2114, file: !385, line: 276, baseType: !2263, size: 64, offset: 1088)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_verify_solution_end", file: !385, line: 250, baseType: !2194)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "dependent_problem", scope: !2114, file: !385, line: 277, baseType: !2143, size: 64, offset: 1152)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2114, file: !385, line: 280, baseType: !2266, size: 32, offset: 1216)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !391, line: 80, baseType: !390)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "free_blocks_on_set_blocks", scope: !2114, file: !385, line: 284, baseType: !1052, size: 8, offset: 1248)
!2268 = !DIGlobalVariableExpression(var: !2269, expr: !DIExpression())
!2269 = distinct !DIGlobalVariable(name: "problem_LIVE", scope: !2, file: !3, line: 1770, type: !2114, isLocal: true, isDefinition: true)
!2270 = !DIGlobalVariableExpression(var: !2271, expr: !DIExpression())
!2271 = distinct !DIGlobalVariable(name: "df_live_scratch", scope: !2, file: !3, line: 1365, type: !802, isLocal: true, isDefinition: true)
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(name: "problem_CHAIN", scope: !2, file: !3, line: 2295, type: !2114, isLocal: true, isDefinition: true)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "problem_BYTE_LR", scope: !2, file: !3, line: 2874, type: !2114, isLocal: true, isDefinition: true)
!2276 = !DIGlobalVariableExpression(var: !2277, expr: !DIExpression())
!2277 = distinct !DIGlobalVariable(name: "problem_NOTE", scope: !2, file: !3, line: 3679, type: !2114, isLocal: true, isDefinition: true)
!2278 = !DIGlobalVariableExpression(var: !2279, expr: !DIExpression())
!2279 = distinct !DIGlobalVariable(name: "problem_MD", scope: !2, file: !3, line: 4396, type: !2114, isLocal: true, isDefinition: true)
!2280 = !DIGlobalVariableExpression(var: !2281, expr: !DIExpression())
!2281 = distinct !DIGlobalVariable(name: "df_md_scratch", scope: !2, file: !3, line: 4022, type: !802, isLocal: true, isDefinition: true)
!2282 = !{i32 7, !"Dwarf Version", i32 4}
!2283 = !{i32 2, !"Debug Info Version", i32 3}
!2284 = !{i32 1, !"wchar_size", i32 4}
!2285 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2286 = distinct !DISubprogram(name: "df_get_live_out", scope: !3, file: !3, line: 70, type: !2287, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{!802, !1357}
!2289 = !{}
!2290 = !DILocalVariable(name: "bb", arg: 1, scope: !2286, file: !3, line: 70, type: !1357)
!2291 = !DILocation(line: 70, column: 30, scope: !2286)
!2292 = !DILocation(line: 72, column: 3, scope: !2286)
!2293 = !DILocation(line: 74, column: 7, scope: !2294)
!2294 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 74, column: 7)
!2295 = !DILocation(line: 74, column: 7, scope: !2286)
!2296 = !DILocation(line: 75, column: 12, scope: !2294)
!2297 = !DILocation(line: 75, column: 5, scope: !2294)
!2298 = !DILocation(line: 77, column: 12, scope: !2294)
!2299 = !DILocation(line: 77, column: 5, scope: !2294)
!2300 = !DILocation(line: 78, column: 1, scope: !2286)
!2301 = distinct !DISubprogram(name: "df_live_get_bb_info", scope: !385, file: !385, line: 1070, type: !2302, scopeLine: 1071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2302 = !DISubroutineType(types: !2303)
!2303 = !{!2047, !7}
!2304 = !DILocalVariable(name: "index", arg: 1, scope: !2301, file: !385, line: 1070, type: !7)
!2305 = !DILocation(line: 1070, column: 35, scope: !2301)
!2306 = !DILocation(line: 1072, column: 7, scope: !2307)
!2307 = distinct !DILexicalBlock(scope: !2301, file: !385, line: 1072, column: 7)
!2308 = !DILocation(line: 1072, column: 15, scope: !2307)
!2309 = !DILocation(line: 1072, column: 24, scope: !2307)
!2310 = !DILocation(line: 1072, column: 13, scope: !2307)
!2311 = !DILocation(line: 1072, column: 7, scope: !2301)
!2312 = !DILocation(line: 1073, column: 39, scope: !2307)
!2313 = !DILocation(line: 1073, column: 48, scope: !2307)
!2314 = !DILocation(line: 1073, column: 59, scope: !2307)
!2315 = !DILocation(line: 1073, column: 12, scope: !2307)
!2316 = !DILocation(line: 1073, column: 5, scope: !2307)
!2317 = !DILocation(line: 1075, column: 5, scope: !2307)
!2318 = !DILocation(line: 1076, column: 1, scope: !2301)
!2319 = distinct !DISubprogram(name: "df_lr_get_bb_info", scope: !385, file: !385, line: 1052, type: !2320, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{!2054, !7}
!2322 = !DILocalVariable(name: "index", arg: 1, scope: !2319, file: !385, line: 1052, type: !7)
!2323 = !DILocation(line: 1052, column: 33, scope: !2319)
!2324 = !DILocation(line: 1054, column: 7, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2319, file: !385, line: 1054, column: 7)
!2326 = !DILocation(line: 1054, column: 15, scope: !2325)
!2327 = !DILocation(line: 1054, column: 22, scope: !2325)
!2328 = !DILocation(line: 1054, column: 13, scope: !2325)
!2329 = !DILocation(line: 1054, column: 7, scope: !2319)
!2330 = !DILocation(line: 1055, column: 37, scope: !2325)
!2331 = !DILocation(line: 1055, column: 44, scope: !2325)
!2332 = !DILocation(line: 1055, column: 55, scope: !2325)
!2333 = !DILocation(line: 1055, column: 12, scope: !2325)
!2334 = !DILocation(line: 1055, column: 5, scope: !2325)
!2335 = !DILocation(line: 1057, column: 5, scope: !2325)
!2336 = !DILocation(line: 1058, column: 1, scope: !2319)
!2337 = distinct !DISubprogram(name: "df_get_live_in", scope: !3, file: !3, line: 86, type: !2287, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2338 = !DILocalVariable(name: "bb", arg: 1, scope: !2337, file: !3, line: 86, type: !1357)
!2339 = !DILocation(line: 86, column: 29, scope: !2337)
!2340 = !DILocation(line: 88, column: 3, scope: !2337)
!2341 = !DILocation(line: 90, column: 7, scope: !2342)
!2342 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 90, column: 7)
!2343 = !DILocation(line: 90, column: 7, scope: !2337)
!2344 = !DILocation(line: 91, column: 12, scope: !2342)
!2345 = !DILocation(line: 91, column: 5, scope: !2342)
!2346 = !DILocation(line: 93, column: 12, scope: !2342)
!2347 = !DILocation(line: 93, column: 5, scope: !2342)
!2348 = !DILocation(line: 94, column: 1, scope: !2337)
!2349 = distinct !DISubprogram(name: "df_grow_bb_info", scope: !3, file: !3, line: 106, type: !2350, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2350 = !DISubroutineType(types: !2351)
!2351 = !{null, !2139}
!2352 = !DILocalVariable(name: "dflow", arg: 1, scope: !2349, file: !3, line: 106, type: !2139)
!2353 = !DILocation(line: 106, column: 35, scope: !2349)
!2354 = !DILocalVariable(name: "new_size", scope: !2349, file: !3, line: 108, type: !7)
!2355 = !DILocation(line: 108, column: 16, scope: !2349)
!2356 = !DILocation(line: 108, column: 27, scope: !2349)
!2357 = !DILocation(line: 108, column: 44, scope: !2349)
!2358 = !DILocation(line: 109, column: 7, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2349, file: !3, line: 109, column: 7)
!2360 = !DILocation(line: 109, column: 14, scope: !2359)
!2361 = !DILocation(line: 109, column: 32, scope: !2359)
!2362 = !DILocation(line: 109, column: 30, scope: !2359)
!2363 = !DILocation(line: 109, column: 7, scope: !2349)
!2364 = !DILocation(line: 111, column: 19, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2359, file: !3, line: 110, column: 5)
!2366 = !DILocation(line: 111, column: 28, scope: !2365)
!2367 = !DILocation(line: 111, column: 16, scope: !2365)
!2368 = !DILocation(line: 112, column: 27, scope: !2365)
!2369 = !DILocation(line: 112, column: 7, scope: !2365)
!2370 = !DILocation(line: 112, column: 14, scope: !2365)
!2371 = !DILocation(line: 112, column: 25, scope: !2365)
!2372 = !DILocation(line: 113, column: 15, scope: !2365)
!2373 = !DILocation(line: 113, column: 22, scope: !2365)
!2374 = !DILocation(line: 113, column: 35, scope: !2365)
!2375 = !DILocation(line: 113, column: 42, scope: !2365)
!2376 = !DILocation(line: 113, column: 33, scope: !2365)
!2377 = !DILocation(line: 113, column: 7, scope: !2365)
!2378 = !DILocation(line: 114, column: 9, scope: !2365)
!2379 = !DILocation(line: 114, column: 20, scope: !2365)
!2380 = !DILocation(line: 114, column: 27, scope: !2365)
!2381 = !DILocation(line: 114, column: 18, scope: !2365)
!2382 = !DILocation(line: 114, column: 8, scope: !2365)
!2383 = !DILocation(line: 114, column: 44, scope: !2365)
!2384 = !DILocation(line: 115, column: 32, scope: !2365)
!2385 = !DILocation(line: 115, column: 7, scope: !2365)
!2386 = !DILocation(line: 115, column: 14, scope: !2365)
!2387 = !DILocation(line: 115, column: 30, scope: !2365)
!2388 = !DILocation(line: 116, column: 5, scope: !2365)
!2389 = !DILocation(line: 117, column: 1, scope: !2349)
!2390 = distinct !DISubprogram(name: "df_chain_dump", scope: !3, file: !3, line: 122, type: !2391, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2391 = !DISubroutineType(types: !2392)
!2392 = !{null, !868, !2204}
!2393 = !DILocalVariable(name: "link", arg: 1, scope: !2390, file: !3, line: 122, type: !868)
!2394 = !DILocation(line: 122, column: 32, scope: !2390)
!2395 = !DILocalVariable(name: "file", arg: 2, scope: !2390, file: !3, line: 122, type: !2204)
!2396 = !DILocation(line: 122, column: 44, scope: !2390)
!2397 = !DILocation(line: 124, column: 12, scope: !2390)
!2398 = !DILocation(line: 124, column: 3, scope: !2390)
!2399 = !DILocation(line: 125, column: 3, scope: !2390)
!2400 = !DILocation(line: 125, column: 10, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2402, file: !3, line: 125, column: 3)
!2402 = distinct !DILexicalBlock(scope: !2390, file: !3, line: 125, column: 3)
!2403 = !DILocation(line: 125, column: 3, scope: !2402)
!2404 = !DILocation(line: 127, column: 16, scope: !2405)
!2405 = distinct !DILexicalBlock(scope: !2401, file: !3, line: 126, column: 5)
!2406 = !DILocation(line: 128, column: 9, scope: !2405)
!2407 = !DILocation(line: 129, column: 9, scope: !2405)
!2408 = !DILocation(line: 130, column: 9, scope: !2405)
!2409 = !DILocation(line: 131, column: 9, scope: !2405)
!2410 = !DILocation(line: 131, column: 49, scope: !2405)
!2411 = !DILocation(line: 127, column: 7, scope: !2405)
!2412 = !DILocation(line: 132, column: 5, scope: !2405)
!2413 = !DILocation(line: 125, column: 23, scope: !2401)
!2414 = !DILocation(line: 125, column: 29, scope: !2401)
!2415 = !DILocation(line: 125, column: 21, scope: !2401)
!2416 = !DILocation(line: 125, column: 3, scope: !2401)
!2417 = distinct !{!2417, !2403, !2418}
!2418 = !DILocation(line: 132, column: 5, scope: !2402)
!2419 = !DILocation(line: 133, column: 12, scope: !2390)
!2420 = !DILocation(line: 133, column: 3, scope: !2390)
!2421 = !DILocation(line: 134, column: 1, scope: !2390)
!2422 = distinct !DISubprogram(name: "df_print_bb_index", scope: !3, file: !3, line: 140, type: !2257, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2423 = !DILocalVariable(name: "bb", arg: 1, scope: !2422, file: !3, line: 140, type: !1357)
!2424 = !DILocation(line: 140, column: 32, scope: !2422)
!2425 = !DILocalVariable(name: "file", arg: 2, scope: !2422, file: !3, line: 140, type: !2204)
!2426 = !DILocation(line: 140, column: 42, scope: !2422)
!2427 = !DILocalVariable(name: "e", scope: !2422, file: !3, line: 142, type: !1374)
!2428 = !DILocation(line: 142, column: 8, scope: !2422)
!2429 = !DILocalVariable(name: "ei", scope: !2422, file: !3, line: 143, type: !2430)
!2430 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !142, line: 682, baseType: !2431)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 679, size: 128, elements: !2432)
!2432 = !{!2433, !2434}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2431, file: !142, line: 680, baseType: !7, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2431, file: !142, line: 681, baseType: !2435, size: 64, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!2436 = !DILocation(line: 143, column: 17, scope: !2422)
!2437 = !DILocation(line: 145, column: 12, scope: !2422)
!2438 = !DILocation(line: 145, column: 3, scope: !2422)
!2439 = !DILocation(line: 146, column: 5, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 146, column: 5)
!2441 = !DILocation(line: 146, column: 5, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2440, file: !3, line: 146, column: 5)
!2443 = !DILocalVariable(name: "pred", scope: !2444, file: !3, line: 148, type: !1357)
!2444 = distinct !DILexicalBlock(scope: !2442, file: !3, line: 147, column: 5)
!2445 = !DILocation(line: 148, column: 19, scope: !2444)
!2446 = !DILocation(line: 148, column: 26, scope: !2444)
!2447 = !DILocation(line: 148, column: 29, scope: !2444)
!2448 = !DILocation(line: 149, column: 16, scope: !2444)
!2449 = !DILocation(line: 149, column: 31, scope: !2444)
!2450 = !DILocation(line: 149, column: 37, scope: !2444)
!2451 = !DILocation(line: 149, column: 44, scope: !2444)
!2452 = !DILocation(line: 149, column: 47, scope: !2444)
!2453 = !DILocation(line: 149, column: 53, scope: !2444)
!2454 = !DILocation(line: 149, column: 7, scope: !2444)
!2455 = !DILocation(line: 150, column: 5, scope: !2444)
!2456 = distinct !{!2456, !2439, !2457}
!2457 = !DILocation(line: 150, column: 5, scope: !2440)
!2458 = !DILocation(line: 151, column: 12, scope: !2422)
!2459 = !DILocation(line: 151, column: 33, scope: !2422)
!2460 = !DILocation(line: 151, column: 37, scope: !2422)
!2461 = !DILocation(line: 151, column: 3, scope: !2422)
!2462 = !DILocation(line: 152, column: 3, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2422, file: !3, line: 152, column: 3)
!2464 = !DILocation(line: 152, column: 3, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2463, file: !3, line: 152, column: 3)
!2466 = !DILocalVariable(name: "succ", scope: !2467, file: !3, line: 154, type: !1357)
!2467 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 153, column: 5)
!2468 = !DILocation(line: 154, column: 19, scope: !2467)
!2469 = !DILocation(line: 154, column: 26, scope: !2467)
!2470 = !DILocation(line: 154, column: 29, scope: !2467)
!2471 = !DILocation(line: 155, column: 16, scope: !2467)
!2472 = !DILocation(line: 155, column: 31, scope: !2467)
!2473 = !DILocation(line: 155, column: 37, scope: !2467)
!2474 = !DILocation(line: 155, column: 44, scope: !2467)
!2475 = !DILocation(line: 155, column: 47, scope: !2467)
!2476 = !DILocation(line: 155, column: 53, scope: !2467)
!2477 = !DILocation(line: 155, column: 7, scope: !2467)
!2478 = !DILocation(line: 156, column: 5, scope: !2467)
!2479 = distinct !{!2479, !2462, !2480}
!2480 = !DILocation(line: 156, column: 5, scope: !2463)
!2481 = !DILocation(line: 157, column: 12, scope: !2422)
!2482 = !DILocation(line: 157, column: 3, scope: !2422)
!2483 = !DILocation(line: 158, column: 1, scope: !2422)
!2484 = distinct !DISubprogram(name: "ei_start_1", scope: !142, file: !142, line: 696, type: !2485, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{!2430, !2435}
!2487 = !DILocalVariable(name: "ev", arg: 1, scope: !2484, file: !142, line: 696, type: !2435)
!2488 = !DILocation(line: 696, column: 28, scope: !2484)
!2489 = !DILocalVariable(name: "i", scope: !2484, file: !142, line: 698, type: !2430)
!2490 = !DILocation(line: 698, column: 17, scope: !2484)
!2491 = !DILocation(line: 700, column: 5, scope: !2484)
!2492 = !DILocation(line: 700, column: 11, scope: !2484)
!2493 = !DILocation(line: 701, column: 17, scope: !2484)
!2494 = !DILocation(line: 701, column: 5, scope: !2484)
!2495 = !DILocation(line: 701, column: 15, scope: !2484)
!2496 = !DILocation(line: 703, column: 3, scope: !2484)
!2497 = distinct !DISubprogram(name: "ei_cond", scope: !142, file: !142, line: 771, type: !2498, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{!1052, !2430, !2500}
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!2501 = !DILocalVariable(name: "ei", arg: 1, scope: !2497, file: !142, line: 771, type: !2430)
!2502 = !DILocation(line: 771, column: 24, scope: !2497)
!2503 = !DILocalVariable(name: "p", arg: 2, scope: !2497, file: !142, line: 771, type: !2500)
!2504 = !DILocation(line: 771, column: 34, scope: !2497)
!2505 = !DILocation(line: 773, column: 8, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2497, file: !142, line: 773, column: 7)
!2507 = !DILocation(line: 773, column: 7, scope: !2497)
!2508 = !DILocation(line: 775, column: 12, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2506, file: !142, line: 774, column: 5)
!2510 = !DILocation(line: 775, column: 8, scope: !2509)
!2511 = !DILocation(line: 775, column: 10, scope: !2509)
!2512 = !DILocation(line: 776, column: 7, scope: !2509)
!2513 = !DILocation(line: 780, column: 8, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2506, file: !142, line: 779, column: 5)
!2515 = !DILocation(line: 780, column: 10, scope: !2514)
!2516 = !DILocation(line: 781, column: 7, scope: !2514)
!2517 = !DILocation(line: 783, column: 1, scope: !2497)
!2518 = distinct !DISubprogram(name: "ei_next", scope: !142, file: !142, line: 736, type: !2519, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2519 = !DISubroutineType(types: !2520)
!2520 = !{null, !2521}
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2522 = !DILocalVariable(name: "i", arg: 1, scope: !2518, file: !142, line: 736, type: !2521)
!2523 = !DILocation(line: 736, column: 25, scope: !2518)
!2524 = !DILocation(line: 738, column: 3, scope: !2518)
!2525 = !DILocation(line: 739, column: 3, scope: !2518)
!2526 = !DILocation(line: 739, column: 6, scope: !2518)
!2527 = !DILocation(line: 739, column: 11, scope: !2518)
!2528 = !DILocation(line: 740, column: 1, scope: !2518)
!2529 = distinct !DISubprogram(name: "df_rd_simulate_artificial_defs_at_top", scope: !3, file: !3, line: 302, type: !2530, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2530 = !DISubroutineType(types: !2531)
!2531 = !{null, !1357, !802}
!2532 = !DILocalVariable(name: "bb", arg: 1, scope: !2529, file: !3, line: 302, type: !1357)
!2533 = !DILocation(line: 302, column: 52, scope: !2529)
!2534 = !DILocalVariable(name: "local_rd", arg: 2, scope: !2529, file: !3, line: 302, type: !802)
!2535 = !DILocation(line: 302, column: 63, scope: !2529)
!2536 = !DILocalVariable(name: "bb_index", scope: !2529, file: !3, line: 304, type: !855)
!2537 = !DILocation(line: 304, column: 7, scope: !2529)
!2538 = !DILocation(line: 304, column: 18, scope: !2529)
!2539 = !DILocation(line: 304, column: 22, scope: !2529)
!2540 = !DILocalVariable(name: "def_rec", scope: !2529, file: !3, line: 305, type: !1998)
!2541 = !DILocation(line: 305, column: 11, scope: !2529)
!2542 = !DILocation(line: 306, column: 42, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2529, file: !3, line: 306, column: 3)
!2544 = !DILocation(line: 306, column: 18, scope: !2543)
!2545 = !DILocation(line: 306, column: 16, scope: !2543)
!2546 = !DILocation(line: 306, column: 8, scope: !2543)
!2547 = !DILocation(line: 306, column: 54, scope: !2548)
!2548 = distinct !DILexicalBlock(scope: !2543, file: !3, line: 306, column: 3)
!2549 = !DILocation(line: 306, column: 53, scope: !2548)
!2550 = !DILocation(line: 306, column: 3, scope: !2543)
!2551 = !DILocalVariable(name: "def", scope: !2552, file: !3, line: 308, type: !872)
!2552 = distinct !DILexicalBlock(scope: !2548, file: !3, line: 307, column: 5)
!2553 = !DILocation(line: 308, column: 14, scope: !2552)
!2554 = !DILocation(line: 308, column: 21, scope: !2552)
!2555 = !DILocation(line: 308, column: 20, scope: !2552)
!2556 = !DILocation(line: 309, column: 11, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2552, file: !3, line: 309, column: 11)
!2558 = !DILocation(line: 309, column: 30, scope: !2557)
!2559 = !DILocation(line: 309, column: 11, scope: !2552)
!2560 = !DILocalVariable(name: "dregno", scope: !2561, file: !3, line: 311, type: !7)
!2561 = distinct !DILexicalBlock(scope: !2557, file: !3, line: 310, column: 2)
!2562 = !DILocation(line: 311, column: 17, scope: !2561)
!2563 = !DILocation(line: 311, column: 26, scope: !2561)
!2564 = !DILocation(line: 312, column: 10, scope: !2565)
!2565 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 312, column: 8)
!2566 = !DILocation(line: 312, column: 29, scope: !2565)
!2567 = !DILocation(line: 312, column: 8, scope: !2561)
!2568 = !DILocation(line: 313, column: 26, scope: !2565)
!2569 = !DILocation(line: 314, column: 5, scope: !2565)
!2570 = !DILocation(line: 315, column: 5, scope: !2565)
!2571 = !DILocation(line: 313, column: 6, scope: !2565)
!2572 = !DILocation(line: 316, column: 20, scope: !2561)
!2573 = !DILocation(line: 316, column: 30, scope: !2561)
!2574 = !DILocation(line: 316, column: 4, scope: !2561)
!2575 = !DILocation(line: 317, column: 2, scope: !2561)
!2576 = !DILocation(line: 318, column: 5, scope: !2552)
!2577 = !DILocation(line: 306, column: 70, scope: !2548)
!2578 = !DILocation(line: 306, column: 3, scope: !2548)
!2579 = distinct !{!2579, !2550, !2580}
!2580 = !DILocation(line: 318, column: 5, scope: !2543)
!2581 = !DILocation(line: 319, column: 1, scope: !2529)
!2582 = distinct !DISubprogram(name: "df_get_artificial_defs", scope: !385, file: !385, line: 1090, type: !2583, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{!1998, !7}
!2585 = !DILocalVariable(name: "bb_index", arg: 1, scope: !2582, file: !385, line: 1090, type: !7)
!2586 = !DILocation(line: 1090, column: 38, scope: !2582)
!2587 = !DILocation(line: 1092, column: 31, scope: !2582)
!2588 = !DILocation(line: 1092, column: 10, scope: !2582)
!2589 = !DILocation(line: 1092, column: 42, scope: !2582)
!2590 = !DILocation(line: 1092, column: 3, scope: !2582)
!2591 = distinct !DISubprogram(name: "df_rd_simulate_one_insn", scope: !3, file: !3, line: 325, type: !2592, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{null, !1357, !883, !802}
!2594 = !DILocalVariable(name: "bb", arg: 1, scope: !2591, file: !3, line: 325, type: !1357)
!2595 = !DILocation(line: 325, column: 38, scope: !2591)
!2596 = !DILocalVariable(name: "insn", arg: 2, scope: !2591, file: !3, line: 325, type: !883)
!2597 = !DILocation(line: 325, column: 63, scope: !2591)
!2598 = !DILocalVariable(name: "local_rd", arg: 3, scope: !2591, file: !3, line: 326, type: !802)
!2599 = !DILocation(line: 326, column: 12, scope: !2591)
!2600 = !DILocalVariable(name: "uid", scope: !2591, file: !3, line: 328, type: !7)
!2601 = !DILocation(line: 328, column: 12, scope: !2591)
!2602 = !DILocation(line: 328, column: 18, scope: !2591)
!2603 = !DILocalVariable(name: "def_rec", scope: !2591, file: !3, line: 329, type: !1998)
!2604 = !DILocation(line: 329, column: 11, scope: !2591)
!2605 = !DILocation(line: 331, column: 18, scope: !2606)
!2606 = distinct !DILexicalBlock(scope: !2591, file: !3, line: 331, column: 3)
!2607 = !DILocation(line: 331, column: 16, scope: !2606)
!2608 = !DILocation(line: 331, column: 8, scope: !2606)
!2609 = !DILocation(line: 331, column: 43, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2606, file: !3, line: 331, column: 3)
!2611 = !DILocation(line: 331, column: 42, scope: !2610)
!2612 = !DILocation(line: 331, column: 3, scope: !2606)
!2613 = !DILocalVariable(name: "def", scope: !2614, file: !3, line: 333, type: !872)
!2614 = distinct !DILexicalBlock(scope: !2610, file: !3, line: 332, column: 5)
!2615 = !DILocation(line: 333, column: 14, scope: !2614)
!2616 = !DILocation(line: 333, column: 21, scope: !2614)
!2617 = !DILocation(line: 333, column: 20, scope: !2614)
!2618 = !DILocalVariable(name: "dregno", scope: !2614, file: !3, line: 334, type: !7)
!2619 = !DILocation(line: 334, column: 20, scope: !2614)
!2620 = !DILocation(line: 334, column: 29, scope: !2614)
!2621 = !DILocation(line: 335, column: 14, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2614, file: !3, line: 335, column: 11)
!2623 = !DILocation(line: 335, column: 18, scope: !2622)
!2624 = !DILocation(line: 335, column: 35, scope: !2622)
!2625 = !DILocation(line: 336, column: 11, scope: !2622)
!2626 = !DILocation(line: 336, column: 15, scope: !2622)
!2627 = !DILocation(line: 336, column: 22, scope: !2622)
!2628 = !DILocation(line: 335, column: 11, scope: !2614)
!2629 = !DILocation(line: 338, column: 17, scope: !2630)
!2630 = distinct !DILexicalBlock(scope: !2631, file: !3, line: 338, column: 15)
!2631 = distinct !DILexicalBlock(scope: !2622, file: !3, line: 337, column: 9)
!2632 = !DILocation(line: 338, column: 36, scope: !2630)
!2633 = !DILocation(line: 338, column: 15, scope: !2631)
!2634 = !DILocation(line: 339, column: 26, scope: !2630)
!2635 = !DILocation(line: 340, column: 5, scope: !2630)
!2636 = !DILocation(line: 341, column: 5, scope: !2630)
!2637 = !DILocation(line: 339, column: 6, scope: !2630)
!2638 = !DILocation(line: 342, column: 10, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2631, file: !3, line: 342, column: 8)
!2640 = !DILocation(line: 343, column: 3, scope: !2639)
!2641 = !DILocation(line: 342, column: 8, scope: !2631)
!2642 = !DILocation(line: 344, column: 22, scope: !2639)
!2643 = !DILocation(line: 344, column: 32, scope: !2639)
!2644 = !DILocation(line: 344, column: 6, scope: !2639)
!2645 = !DILocation(line: 345, column: 2, scope: !2631)
!2646 = !DILocation(line: 346, column: 5, scope: !2614)
!2647 = !DILocation(line: 331, column: 59, scope: !2610)
!2648 = !DILocation(line: 331, column: 3, scope: !2610)
!2649 = distinct !{!2649, !2612, !2650}
!2650 = !DILocation(line: 346, column: 5, scope: !2606)
!2651 = !DILocation(line: 347, column: 1, scope: !2591)
!2652 = distinct !DISubprogram(name: "df_rd_add_problem", scope: !3, file: !3, line: 715, type: !2195, scopeLine: 716, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2653 = !DILocation(line: 717, column: 3, scope: !2652)
!2654 = !DILocation(line: 718, column: 1, scope: !2652)
!2655 = distinct !DISubprogram(name: "df_lr_add_problem", scope: !3, file: !3, line: 1256, type: !2195, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2656 = !DILocation(line: 1258, column: 3, scope: !2655)
!2657 = !DILocation(line: 1261, column: 43, scope: !2655)
!2658 = !DILocation(line: 1261, column: 3, scope: !2655)
!2659 = !DILocation(line: 1261, column: 10, scope: !2655)
!2660 = !DILocation(line: 1261, column: 41, scope: !2655)
!2661 = !DILocation(line: 1262, column: 1, scope: !2655)
!2662 = distinct !DISubprogram(name: "df_lr_verify_transfer_functions", scope: !3, file: !3, line: 1269, type: !2195, scopeLine: 1270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2663 = !DILocalVariable(name: "bb", scope: !2662, file: !3, line: 1271, type: !1357)
!2664 = !DILocation(line: 1271, column: 15, scope: !2662)
!2665 = !DILocalVariable(name: "saved_def", scope: !2662, file: !3, line: 1272, type: !802)
!2666 = !DILocation(line: 1272, column: 10, scope: !2662)
!2667 = !DILocalVariable(name: "saved_use", scope: !2662, file: !3, line: 1273, type: !802)
!2668 = !DILocation(line: 1273, column: 10, scope: !2662)
!2669 = !DILocalVariable(name: "saved_adef", scope: !2662, file: !3, line: 1274, type: !802)
!2670 = !DILocation(line: 1274, column: 10, scope: !2662)
!2671 = !DILocalVariable(name: "saved_ause", scope: !2662, file: !3, line: 1275, type: !802)
!2672 = !DILocation(line: 1275, column: 10, scope: !2662)
!2673 = !DILocalVariable(name: "all_blocks", scope: !2662, file: !3, line: 1276, type: !802)
!2674 = !DILocation(line: 1276, column: 10, scope: !2662)
!2675 = !DILocation(line: 1278, column: 8, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 1278, column: 7)
!2677 = !DILocation(line: 1278, column: 7, scope: !2662)
!2678 = !DILocation(line: 1279, column: 5, scope: !2676)
!2679 = !DILocation(line: 1281, column: 15, scope: !2662)
!2680 = !DILocation(line: 1281, column: 13, scope: !2662)
!2681 = !DILocation(line: 1282, column: 15, scope: !2662)
!2682 = !DILocation(line: 1282, column: 13, scope: !2662)
!2683 = !DILocation(line: 1283, column: 16, scope: !2662)
!2684 = !DILocation(line: 1283, column: 14, scope: !2662)
!2685 = !DILocation(line: 1284, column: 16, scope: !2662)
!2686 = !DILocation(line: 1284, column: 14, scope: !2662)
!2687 = !DILocation(line: 1285, column: 16, scope: !2662)
!2688 = !DILocation(line: 1285, column: 14, scope: !2662)
!2689 = !DILocation(line: 1287, column: 3, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 1287, column: 3)
!2691 = !DILocation(line: 1287, column: 3, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2690, file: !3, line: 1287, column: 3)
!2693 = !DILocalVariable(name: "bb_info", scope: !2694, file: !3, line: 1289, type: !2054)
!2694 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 1288, column: 5)
!2695 = !DILocation(line: 1289, column: 29, scope: !2694)
!2696 = !DILocation(line: 1289, column: 58, scope: !2694)
!2697 = !DILocation(line: 1289, column: 62, scope: !2694)
!2698 = !DILocation(line: 1289, column: 39, scope: !2694)
!2699 = !DILocation(line: 1290, column: 23, scope: !2694)
!2700 = !DILocation(line: 1290, column: 35, scope: !2694)
!2701 = !DILocation(line: 1290, column: 39, scope: !2694)
!2702 = !DILocation(line: 1290, column: 7, scope: !2694)
!2703 = !DILocation(line: 1292, column: 11, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2694, file: !3, line: 1292, column: 11)
!2705 = !DILocation(line: 1292, column: 11, scope: !2694)
!2706 = !DILocation(line: 1297, column: 23, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2708, file: !3, line: 1297, column: 8)
!2708 = distinct !DILexicalBlock(scope: !2704, file: !3, line: 1293, column: 2)
!2709 = !DILocation(line: 1297, column: 30, scope: !2707)
!2710 = !DILocation(line: 1298, column: 9, scope: !2707)
!2711 = !DILocation(line: 1298, column: 13, scope: !2707)
!2712 = !DILocation(line: 1297, column: 9, scope: !2707)
!2713 = !DILocation(line: 1297, column: 8, scope: !2708)
!2714 = !DILocation(line: 1300, column: 21, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2707, file: !3, line: 1299, column: 6)
!2716 = !DILocation(line: 1300, column: 32, scope: !2715)
!2717 = !DILocation(line: 1300, column: 41, scope: !2715)
!2718 = !DILocation(line: 1300, column: 8, scope: !2715)
!2719 = !DILocation(line: 1301, column: 21, scope: !2715)
!2720 = !DILocation(line: 1301, column: 32, scope: !2715)
!2721 = !DILocation(line: 1301, column: 41, scope: !2715)
!2722 = !DILocation(line: 1301, column: 8, scope: !2715)
!2723 = !DILocation(line: 1302, column: 22, scope: !2715)
!2724 = !DILocation(line: 1302, column: 31, scope: !2715)
!2725 = !DILocation(line: 1302, column: 8, scope: !2715)
!2726 = !DILocation(line: 1303, column: 22, scope: !2715)
!2727 = !DILocation(line: 1303, column: 31, scope: !2715)
!2728 = !DILocation(line: 1303, column: 8, scope: !2715)
!2729 = !DILocation(line: 1305, column: 32, scope: !2715)
!2730 = !DILocation(line: 1305, column: 36, scope: !2715)
!2731 = !DILocation(line: 1305, column: 8, scope: !2715)
!2732 = !DILocation(line: 1306, column: 8, scope: !2715)
!2733 = !DILocation(line: 1307, column: 8, scope: !2715)
!2734 = !DILocation(line: 1308, column: 6, scope: !2715)
!2735 = !DILocation(line: 1309, column: 2, scope: !2708)
!2736 = !DILocation(line: 1315, column: 4, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2704, file: !3, line: 1311, column: 2)
!2738 = !DILocation(line: 1320, column: 7, scope: !2694)
!2739 = !DILocation(line: 1321, column: 5, scope: !2694)
!2740 = distinct !{!2740, !2689, !2741}
!2741 = !DILocation(line: 1321, column: 5, scope: !2690)
!2742 = !DILocation(line: 1324, column: 3, scope: !2662)
!2743 = !DILocation(line: 1327, column: 3, scope: !2662)
!2744 = !DILocation(line: 1328, column: 3, scope: !2662)
!2745 = !DILocation(line: 1329, column: 3, scope: !2662)
!2746 = !DILocation(line: 1330, column: 3, scope: !2662)
!2747 = !DILocation(line: 1331, column: 3, scope: !2662)
!2748 = !DILocation(line: 1332, column: 1, scope: !2662)
!2749 = distinct !DISubprogram(name: "df_lr_bb_local_compute", scope: !3, file: !3, line: 828, type: !2750, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2750 = !DISubroutineType(types: !2751)
!2751 = !{null, !7}
!2752 = !DILocalVariable(name: "bb_index", arg: 1, scope: !2749, file: !3, line: 828, type: !7)
!2753 = !DILocation(line: 828, column: 38, scope: !2749)
!2754 = !DILocalVariable(name: "bb", scope: !2749, file: !3, line: 830, type: !1357)
!2755 = !DILocation(line: 830, column: 15, scope: !2749)
!2756 = !DILocation(line: 830, column: 20, scope: !2749)
!2757 = !DILocalVariable(name: "bb_info", scope: !2749, file: !3, line: 831, type: !2054)
!2758 = !DILocation(line: 831, column: 25, scope: !2749)
!2759 = !DILocation(line: 831, column: 54, scope: !2749)
!2760 = !DILocation(line: 831, column: 35, scope: !2749)
!2761 = !DILocalVariable(name: "insn", scope: !2749, file: !3, line: 832, type: !883)
!2762 = !DILocation(line: 832, column: 7, scope: !2749)
!2763 = !DILocalVariable(name: "def_rec", scope: !2749, file: !3, line: 833, type: !1998)
!2764 = !DILocation(line: 833, column: 11, scope: !2749)
!2765 = !DILocalVariable(name: "use_rec", scope: !2749, file: !3, line: 834, type: !1998)
!2766 = !DILocation(line: 834, column: 11, scope: !2749)
!2767 = !DILocation(line: 837, column: 42, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 837, column: 3)
!2769 = !DILocation(line: 837, column: 18, scope: !2768)
!2770 = !DILocation(line: 837, column: 16, scope: !2768)
!2771 = !DILocation(line: 837, column: 8, scope: !2768)
!2772 = !DILocation(line: 837, column: 54, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2768, file: !3, line: 837, column: 3)
!2774 = !DILocation(line: 837, column: 53, scope: !2773)
!2775 = !DILocation(line: 837, column: 3, scope: !2768)
!2776 = !DILocalVariable(name: "def", scope: !2777, file: !3, line: 839, type: !872)
!2777 = distinct !DILexicalBlock(scope: !2773, file: !3, line: 838, column: 5)
!2778 = !DILocation(line: 839, column: 14, scope: !2777)
!2779 = !DILocation(line: 839, column: 21, scope: !2777)
!2780 = !DILocation(line: 839, column: 20, scope: !2777)
!2781 = !DILocation(line: 840, column: 12, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 840, column: 11)
!2783 = !DILocation(line: 840, column: 31, scope: !2782)
!2784 = !DILocation(line: 840, column: 48, scope: !2782)
!2785 = !DILocation(line: 840, column: 11, scope: !2777)
!2786 = !DILocalVariable(name: "dregno", scope: !2787, file: !3, line: 842, type: !7)
!2787 = distinct !DILexicalBlock(scope: !2782, file: !3, line: 841, column: 2)
!2788 = !DILocation(line: 842, column: 17, scope: !2787)
!2789 = !DILocation(line: 842, column: 26, scope: !2787)
!2790 = !DILocation(line: 843, column: 20, scope: !2787)
!2791 = !DILocation(line: 843, column: 29, scope: !2787)
!2792 = !DILocation(line: 843, column: 34, scope: !2787)
!2793 = !DILocation(line: 843, column: 4, scope: !2787)
!2794 = !DILocation(line: 844, column: 22, scope: !2787)
!2795 = !DILocation(line: 844, column: 31, scope: !2787)
!2796 = !DILocation(line: 844, column: 36, scope: !2787)
!2797 = !DILocation(line: 844, column: 4, scope: !2787)
!2798 = !DILocation(line: 845, column: 2, scope: !2787)
!2799 = !DILocation(line: 846, column: 5, scope: !2777)
!2800 = !DILocation(line: 837, column: 70, scope: !2773)
!2801 = !DILocation(line: 837, column: 3, scope: !2773)
!2802 = distinct !{!2802, !2775, !2803}
!2803 = !DILocation(line: 846, column: 5, scope: !2768)
!2804 = !DILocation(line: 849, column: 42, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 849, column: 3)
!2806 = !DILocation(line: 849, column: 18, scope: !2805)
!2807 = !DILocation(line: 849, column: 16, scope: !2805)
!2808 = !DILocation(line: 849, column: 8, scope: !2805)
!2809 = !DILocation(line: 849, column: 54, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 849, column: 3)
!2811 = !DILocation(line: 849, column: 53, scope: !2810)
!2812 = !DILocation(line: 849, column: 3, scope: !2805)
!2813 = !DILocalVariable(name: "use", scope: !2814, file: !3, line: 851, type: !872)
!2814 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 850, column: 5)
!2815 = !DILocation(line: 851, column: 14, scope: !2814)
!2816 = !DILocation(line: 851, column: 21, scope: !2814)
!2817 = !DILocation(line: 851, column: 20, scope: !2814)
!2818 = !DILocation(line: 853, column: 12, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2814, file: !3, line: 853, column: 11)
!2820 = !DILocation(line: 853, column: 31, scope: !2819)
!2821 = !DILocation(line: 853, column: 48, scope: !2819)
!2822 = !DILocation(line: 853, column: 11, scope: !2814)
!2823 = !DILocation(line: 854, column: 18, scope: !2819)
!2824 = !DILocation(line: 854, column: 27, scope: !2819)
!2825 = !DILocation(line: 854, column: 32, scope: !2819)
!2826 = !DILocation(line: 854, column: 2, scope: !2819)
!2827 = !DILocation(line: 855, column: 5, scope: !2814)
!2828 = !DILocation(line: 849, column: 70, scope: !2810)
!2829 = !DILocation(line: 849, column: 3, scope: !2810)
!2830 = distinct !{!2830, !2812, !2831}
!2831 = !DILocation(line: 855, column: 5, scope: !2805)
!2832 = !DILocation(line: 857, column: 3, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 857, column: 3)
!2834 = !DILocation(line: 857, column: 3, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2833, file: !3, line: 857, column: 3)
!2836 = !DILocation(line: 0, scope: !2835)
!2837 = !DILocalVariable(name: "uid", scope: !2838, file: !3, line: 859, type: !7)
!2838 = distinct !DILexicalBlock(scope: !2835, file: !3, line: 858, column: 5)
!2839 = !DILocation(line: 859, column: 20, scope: !2838)
!2840 = !DILocation(line: 859, column: 26, scope: !2838)
!2841 = !DILocation(line: 861, column: 12, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2838, file: !3, line: 861, column: 11)
!2843 = !DILocation(line: 861, column: 11, scope: !2838)
!2844 = !DILocation(line: 862, column: 2, scope: !2842)
!2845 = !DILocation(line: 864, column: 22, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2838, file: !3, line: 864, column: 7)
!2847 = !DILocation(line: 864, column: 20, scope: !2846)
!2848 = !DILocation(line: 864, column: 12, scope: !2846)
!2849 = !DILocation(line: 864, column: 47, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2846, file: !3, line: 864, column: 7)
!2851 = !DILocation(line: 864, column: 46, scope: !2850)
!2852 = !DILocation(line: 864, column: 7, scope: !2846)
!2853 = !DILocalVariable(name: "def", scope: !2854, file: !3, line: 866, type: !872)
!2854 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 865, column: 2)
!2855 = !DILocation(line: 866, column: 11, scope: !2854)
!2856 = !DILocation(line: 866, column: 18, scope: !2854)
!2857 = !DILocation(line: 866, column: 17, scope: !2854)
!2858 = !DILocation(line: 869, column: 10, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2854, file: !3, line: 869, column: 8)
!2860 = !DILocation(line: 869, column: 29, scope: !2859)
!2861 = !DILocation(line: 869, column: 8, scope: !2854)
!2862 = !DILocalVariable(name: "dregno", scope: !2863, file: !3, line: 871, type: !7)
!2863 = distinct !DILexicalBlock(scope: !2859, file: !3, line: 870, column: 6)
!2864 = !DILocation(line: 871, column: 21, scope: !2863)
!2865 = !DILocation(line: 871, column: 30, scope: !2863)
!2866 = !DILocation(line: 872, column: 24, scope: !2863)
!2867 = !DILocation(line: 872, column: 33, scope: !2863)
!2868 = !DILocation(line: 872, column: 38, scope: !2863)
!2869 = !DILocation(line: 872, column: 8, scope: !2863)
!2870 = !DILocation(line: 873, column: 26, scope: !2863)
!2871 = !DILocation(line: 873, column: 35, scope: !2863)
!2872 = !DILocation(line: 873, column: 40, scope: !2863)
!2873 = !DILocation(line: 873, column: 8, scope: !2863)
!2874 = !DILocation(line: 874, column: 6, scope: !2863)
!2875 = !DILocation(line: 875, column: 2, scope: !2854)
!2876 = !DILocation(line: 864, column: 63, scope: !2850)
!2877 = !DILocation(line: 864, column: 7, scope: !2850)
!2878 = distinct !{!2878, !2852, !2879}
!2879 = !DILocation(line: 875, column: 2, scope: !2846)
!2880 = !DILocation(line: 877, column: 22, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2838, file: !3, line: 877, column: 7)
!2882 = !DILocation(line: 877, column: 20, scope: !2881)
!2883 = !DILocation(line: 877, column: 12, scope: !2881)
!2884 = !DILocation(line: 877, column: 47, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2881, file: !3, line: 877, column: 7)
!2886 = !DILocation(line: 877, column: 46, scope: !2885)
!2887 = !DILocation(line: 877, column: 7, scope: !2881)
!2888 = !DILocalVariable(name: "use", scope: !2889, file: !3, line: 879, type: !872)
!2889 = distinct !DILexicalBlock(scope: !2885, file: !3, line: 878, column: 2)
!2890 = !DILocation(line: 879, column: 11, scope: !2889)
!2891 = !DILocation(line: 879, column: 18, scope: !2889)
!2892 = !DILocation(line: 879, column: 17, scope: !2889)
!2893 = !DILocation(line: 881, column: 20, scope: !2889)
!2894 = !DILocation(line: 881, column: 29, scope: !2889)
!2895 = !DILocation(line: 881, column: 34, scope: !2889)
!2896 = !DILocation(line: 881, column: 4, scope: !2889)
!2897 = !DILocation(line: 882, column: 2, scope: !2889)
!2898 = !DILocation(line: 877, column: 63, scope: !2885)
!2899 = !DILocation(line: 877, column: 7, scope: !2885)
!2900 = distinct !{!2900, !2887, !2901}
!2901 = !DILocation(line: 882, column: 2, scope: !2881)
!2902 = !DILocation(line: 883, column: 5, scope: !2838)
!2903 = distinct !{!2903, !2832, !2904}
!2904 = !DILocation(line: 883, column: 5, scope: !2833)
!2905 = !DILocation(line: 888, column: 42, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 888, column: 3)
!2907 = !DILocation(line: 888, column: 18, scope: !2906)
!2908 = !DILocation(line: 888, column: 16, scope: !2906)
!2909 = !DILocation(line: 888, column: 8, scope: !2906)
!2910 = !DILocation(line: 888, column: 54, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 888, column: 3)
!2912 = !DILocation(line: 888, column: 53, scope: !2911)
!2913 = !DILocation(line: 888, column: 3, scope: !2906)
!2914 = !DILocalVariable(name: "def", scope: !2915, file: !3, line: 890, type: !872)
!2915 = distinct !DILexicalBlock(scope: !2911, file: !3, line: 889, column: 5)
!2916 = !DILocation(line: 890, column: 14, scope: !2915)
!2917 = !DILocation(line: 890, column: 21, scope: !2915)
!2918 = !DILocation(line: 890, column: 20, scope: !2915)
!2919 = !DILocation(line: 891, column: 11, scope: !2920)
!2920 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 891, column: 11)
!2921 = !DILocation(line: 891, column: 30, scope: !2920)
!2922 = !DILocation(line: 891, column: 11, scope: !2915)
!2923 = !DILocalVariable(name: "dregno", scope: !2924, file: !3, line: 893, type: !7)
!2924 = distinct !DILexicalBlock(scope: !2920, file: !3, line: 892, column: 2)
!2925 = !DILocation(line: 893, column: 17, scope: !2924)
!2926 = !DILocation(line: 893, column: 26, scope: !2924)
!2927 = !DILocation(line: 894, column: 20, scope: !2924)
!2928 = !DILocation(line: 894, column: 29, scope: !2924)
!2929 = !DILocation(line: 894, column: 34, scope: !2924)
!2930 = !DILocation(line: 894, column: 4, scope: !2924)
!2931 = !DILocation(line: 895, column: 22, scope: !2924)
!2932 = !DILocation(line: 895, column: 31, scope: !2924)
!2933 = !DILocation(line: 895, column: 36, scope: !2924)
!2934 = !DILocation(line: 895, column: 4, scope: !2924)
!2935 = !DILocation(line: 896, column: 2, scope: !2924)
!2936 = !DILocation(line: 897, column: 5, scope: !2915)
!2937 = !DILocation(line: 888, column: 70, scope: !2911)
!2938 = !DILocation(line: 888, column: 3, scope: !2911)
!2939 = distinct !{!2939, !2913, !2940}
!2940 = !DILocation(line: 897, column: 5, scope: !2906)
!2941 = !DILocation(line: 914, column: 8, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 914, column: 7)
!2943 = !DILocation(line: 914, column: 7, scope: !2749)
!2944 = !DILocation(line: 915, column: 25, scope: !2942)
!2945 = !DILocation(line: 915, column: 5, scope: !2942)
!2946 = !DILocation(line: 916, column: 1, scope: !2749)
!2947 = distinct !DISubprogram(name: "df_scan_get_bb_info", scope: !385, file: !385, line: 1034, type: !2948, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2948 = !DISubroutineType(types: !2949)
!2949 = !{!2081, !7}
!2950 = !DILocalVariable(name: "index", arg: 1, scope: !2947, file: !385, line: 1034, type: !7)
!2951 = !DILocation(line: 1034, column: 35, scope: !2947)
!2952 = !DILocation(line: 1036, column: 7, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2947, file: !385, line: 1036, column: 7)
!2954 = !DILocation(line: 1036, column: 15, scope: !2953)
!2955 = !DILocation(line: 1036, column: 24, scope: !2953)
!2956 = !DILocation(line: 1036, column: 13, scope: !2953)
!2957 = !DILocation(line: 1036, column: 7, scope: !2947)
!2958 = !DILocation(line: 1037, column: 39, scope: !2953)
!2959 = !DILocation(line: 1037, column: 48, scope: !2953)
!2960 = !DILocation(line: 1037, column: 59, scope: !2953)
!2961 = !DILocation(line: 1037, column: 12, scope: !2953)
!2962 = !DILocation(line: 1037, column: 5, scope: !2953)
!2963 = !DILocation(line: 1039, column: 5, scope: !2953)
!2964 = !DILocation(line: 1040, column: 1, scope: !2947)
!2965 = distinct !DISubprogram(name: "df_live_add_problem", scope: !3, file: !3, line: 1802, type: !2195, scopeLine: 1803, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2966 = !DILocation(line: 1804, column: 3, scope: !2965)
!2967 = !DILocation(line: 1807, column: 45, scope: !2965)
!2968 = !DILocation(line: 1807, column: 3, scope: !2965)
!2969 = !DILocation(line: 1807, column: 12, scope: !2965)
!2970 = !DILocation(line: 1807, column: 43, scope: !2965)
!2971 = !DILocation(line: 1808, column: 1, scope: !2965)
!2972 = distinct !DISubprogram(name: "df_live_set_all_dirty", scope: !3, file: !3, line: 1815, type: !2195, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2973 = !DILocalVariable(name: "bb", scope: !2972, file: !3, line: 1817, type: !1357)
!2974 = !DILocation(line: 1817, column: 15, scope: !2972)
!2975 = !DILocation(line: 1818, column: 3, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 1818, column: 3)
!2977 = !DILocation(line: 1818, column: 3, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 1818, column: 3)
!2979 = !DILocation(line: 1819, column: 21, scope: !2978)
!2980 = !DILocation(line: 1819, column: 30, scope: !2978)
!2981 = !DILocation(line: 1820, column: 7, scope: !2978)
!2982 = !DILocation(line: 1820, column: 11, scope: !2978)
!2983 = !DILocation(line: 1819, column: 5, scope: !2978)
!2984 = distinct !{!2984, !2975, !2985}
!2985 = !DILocation(line: 1820, column: 16, scope: !2976)
!2986 = !DILocation(line: 1821, column: 1, scope: !2972)
!2987 = distinct !DISubprogram(name: "df_live_verify_transfer_functions", scope: !3, file: !3, line: 1828, type: !2195, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!2988 = !DILocalVariable(name: "bb", scope: !2987, file: !3, line: 1830, type: !1357)
!2989 = !DILocation(line: 1830, column: 15, scope: !2987)
!2990 = !DILocalVariable(name: "saved_gen", scope: !2987, file: !3, line: 1831, type: !802)
!2991 = !DILocation(line: 1831, column: 10, scope: !2987)
!2992 = !DILocalVariable(name: "saved_kill", scope: !2987, file: !3, line: 1832, type: !802)
!2993 = !DILocation(line: 1832, column: 10, scope: !2987)
!2994 = !DILocalVariable(name: "all_blocks", scope: !2987, file: !3, line: 1833, type: !802)
!2995 = !DILocation(line: 1833, column: 10, scope: !2987)
!2996 = !DILocation(line: 1835, column: 8, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 1835, column: 7)
!2998 = !DILocation(line: 1835, column: 7, scope: !2987)
!2999 = !DILocation(line: 1836, column: 5, scope: !2997)
!3000 = !DILocation(line: 1838, column: 15, scope: !2987)
!3001 = !DILocation(line: 1838, column: 13, scope: !2987)
!3002 = !DILocation(line: 1839, column: 16, scope: !2987)
!3003 = !DILocation(line: 1839, column: 14, scope: !2987)
!3004 = !DILocation(line: 1840, column: 16, scope: !2987)
!3005 = !DILocation(line: 1840, column: 14, scope: !2987)
!3006 = !DILocation(line: 1842, column: 3, scope: !2987)
!3007 = !DILocation(line: 1844, column: 3, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 1844, column: 3)
!3009 = !DILocation(line: 1844, column: 3, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 1844, column: 3)
!3011 = !DILocalVariable(name: "bb_info", scope: !3012, file: !3, line: 1846, type: !2047)
!3012 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 1845, column: 5)
!3013 = !DILocation(line: 1846, column: 31, scope: !3012)
!3014 = !DILocation(line: 1846, column: 62, scope: !3012)
!3015 = !DILocation(line: 1846, column: 66, scope: !3012)
!3016 = !DILocation(line: 1846, column: 41, scope: !3012)
!3017 = !DILocation(line: 1847, column: 23, scope: !3012)
!3018 = !DILocation(line: 1847, column: 35, scope: !3012)
!3019 = !DILocation(line: 1847, column: 39, scope: !3012)
!3020 = !DILocation(line: 1847, column: 7, scope: !3012)
!3021 = !DILocation(line: 1849, column: 11, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 1849, column: 11)
!3023 = !DILocation(line: 1849, column: 11, scope: !3012)
!3024 = !DILocation(line: 1854, column: 23, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3026, file: !3, line: 1854, column: 8)
!3026 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 1850, column: 2)
!3027 = !DILocation(line: 1854, column: 32, scope: !3025)
!3028 = !DILocation(line: 1855, column: 9, scope: !3025)
!3029 = !DILocation(line: 1855, column: 13, scope: !3025)
!3030 = !DILocation(line: 1854, column: 9, scope: !3025)
!3031 = !DILocation(line: 1854, column: 8, scope: !3026)
!3032 = !DILocation(line: 1857, column: 21, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 1856, column: 6)
!3034 = !DILocation(line: 1857, column: 32, scope: !3033)
!3035 = !DILocation(line: 1857, column: 41, scope: !3033)
!3036 = !DILocation(line: 1857, column: 8, scope: !3033)
!3037 = !DILocation(line: 1858, column: 21, scope: !3033)
!3038 = !DILocation(line: 1858, column: 33, scope: !3033)
!3039 = !DILocation(line: 1858, column: 42, scope: !3033)
!3040 = !DILocation(line: 1858, column: 8, scope: !3033)
!3041 = !DILocation(line: 1859, column: 22, scope: !3033)
!3042 = !DILocation(line: 1859, column: 31, scope: !3033)
!3043 = !DILocation(line: 1859, column: 8, scope: !3033)
!3044 = !DILocation(line: 1860, column: 22, scope: !3033)
!3045 = !DILocation(line: 1860, column: 31, scope: !3033)
!3046 = !DILocation(line: 1860, column: 8, scope: !3033)
!3047 = !DILocation(line: 1862, column: 34, scope: !3033)
!3048 = !DILocation(line: 1862, column: 38, scope: !3033)
!3049 = !DILocation(line: 1862, column: 8, scope: !3033)
!3050 = !DILocation(line: 1863, column: 8, scope: !3033)
!3051 = !DILocation(line: 1864, column: 8, scope: !3033)
!3052 = !DILocation(line: 1865, column: 6, scope: !3033)
!3053 = !DILocation(line: 1866, column: 2, scope: !3026)
!3054 = !DILocation(line: 1872, column: 4, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 1868, column: 2)
!3056 = !DILocation(line: 1877, column: 7, scope: !3012)
!3057 = !DILocation(line: 1878, column: 5, scope: !3012)
!3058 = distinct !{!3058, !3007, !3059}
!3059 = !DILocation(line: 1878, column: 5, scope: !3008)
!3060 = !DILocation(line: 1881, column: 3, scope: !2987)
!3061 = !DILocation(line: 1883, column: 3, scope: !2987)
!3062 = !DILocation(line: 1884, column: 3, scope: !2987)
!3063 = !DILocation(line: 1885, column: 3, scope: !2987)
!3064 = !DILocation(line: 1886, column: 1, scope: !2987)
!3065 = distinct !DISubprogram(name: "df_live_bb_local_compute", scope: !3, file: !3, line: 1457, type: !2750, scopeLine: 1458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3066 = !DILocalVariable(name: "bb_index", arg: 1, scope: !3065, file: !3, line: 1457, type: !7)
!3067 = !DILocation(line: 1457, column: 40, scope: !3065)
!3068 = !DILocalVariable(name: "bb", scope: !3065, file: !3, line: 1459, type: !1357)
!3069 = !DILocation(line: 1459, column: 15, scope: !3065)
!3070 = !DILocation(line: 1459, column: 20, scope: !3065)
!3071 = !DILocalVariable(name: "bb_info", scope: !3065, file: !3, line: 1460, type: !2047)
!3072 = !DILocation(line: 1460, column: 27, scope: !3065)
!3073 = !DILocation(line: 1460, column: 58, scope: !3065)
!3074 = !DILocation(line: 1460, column: 37, scope: !3065)
!3075 = !DILocalVariable(name: "insn", scope: !3065, file: !3, line: 1461, type: !883)
!3076 = !DILocation(line: 1461, column: 7, scope: !3065)
!3077 = !DILocalVariable(name: "def_rec", scope: !3065, file: !3, line: 1462, type: !1998)
!3078 = !DILocation(line: 1462, column: 11, scope: !3065)
!3079 = !DILocalVariable(name: "luid", scope: !3065, file: !3, line: 1463, type: !855)
!3080 = !DILocation(line: 1463, column: 7, scope: !3065)
!3081 = !DILocation(line: 1465, column: 3, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 1465, column: 3)
!3083 = !DILocation(line: 1465, column: 3, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3082, file: !3, line: 1465, column: 3)
!3085 = !DILocation(line: 0, scope: !3084)
!3086 = !DILocalVariable(name: "uid", scope: !3087, file: !3, line: 1467, type: !7)
!3087 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 1466, column: 5)
!3088 = !DILocation(line: 1467, column: 20, scope: !3087)
!3089 = !DILocation(line: 1467, column: 26, scope: !3087)
!3090 = !DILocalVariable(name: "insn_info", scope: !3087, file: !3, line: 1468, type: !1993)
!3091 = !DILocation(line: 1468, column: 28, scope: !3087)
!3092 = !DILocation(line: 1468, column: 40, scope: !3087)
!3093 = !DILocation(line: 1472, column: 12, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 1472, column: 11)
!3095 = !DILocation(line: 1472, column: 11, scope: !3087)
!3096 = !DILocation(line: 1474, column: 4, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3094, file: !3, line: 1473, column: 2)
!3098 = !DILocation(line: 1475, column: 44, scope: !3097)
!3099 = !DILocation(line: 1475, column: 16, scope: !3097)
!3100 = !DILocation(line: 1475, column: 14, scope: !3097)
!3101 = !DILocation(line: 1476, column: 2, scope: !3097)
!3102 = !DILocation(line: 1478, column: 39, scope: !3087)
!3103 = !DILocation(line: 1478, column: 7, scope: !3087)
!3104 = !DILocation(line: 1478, column: 37, scope: !3087)
!3105 = !DILocation(line: 1479, column: 12, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 1479, column: 11)
!3107 = !DILocation(line: 1479, column: 11, scope: !3087)
!3108 = !DILocation(line: 1480, column: 2, scope: !3106)
!3109 = !DILocation(line: 1482, column: 11, scope: !3087)
!3110 = !DILocation(line: 1483, column: 22, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 1483, column: 7)
!3112 = !DILocation(line: 1483, column: 20, scope: !3111)
!3113 = !DILocation(line: 1483, column: 12, scope: !3111)
!3114 = !DILocation(line: 1483, column: 54, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3111, file: !3, line: 1483, column: 7)
!3116 = !DILocation(line: 1483, column: 53, scope: !3115)
!3117 = !DILocation(line: 1483, column: 7, scope: !3111)
!3118 = !DILocalVariable(name: "def", scope: !3119, file: !3, line: 1485, type: !872)
!3119 = distinct !DILexicalBlock(scope: !3115, file: !3, line: 1484, column: 2)
!3120 = !DILocation(line: 1485, column: 11, scope: !3119)
!3121 = !DILocation(line: 1485, column: 18, scope: !3119)
!3122 = !DILocation(line: 1485, column: 17, scope: !3119)
!3123 = !DILocalVariable(name: "regno", scope: !3119, file: !3, line: 1486, type: !7)
!3124 = !DILocation(line: 1486, column: 17, scope: !3119)
!3125 = !DILocation(line: 1486, column: 25, scope: !3119)
!3126 = !DILocation(line: 1488, column: 8, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 1488, column: 8)
!3128 = !DILocation(line: 1488, column: 8, scope: !3119)
!3129 = !DILocation(line: 1492, column: 22, scope: !3127)
!3130 = !DILocation(line: 1492, column: 31, scope: !3127)
!3131 = !DILocation(line: 1492, column: 36, scope: !3127)
!3132 = !DILocation(line: 1492, column: 6, scope: !3127)
!3133 = !DILocation(line: 1493, column: 13, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 1493, column: 13)
!3135 = !DILocation(line: 1493, column: 13, scope: !3127)
!3136 = !DILocation(line: 1496, column: 22, scope: !3134)
!3137 = !DILocation(line: 1496, column: 31, scope: !3134)
!3138 = !DILocation(line: 1496, column: 37, scope: !3134)
!3139 = !DILocation(line: 1496, column: 6, scope: !3134)
!3140 = !DILocation(line: 1497, column: 15, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 1497, column: 13)
!3142 = !DILocation(line: 1497, column: 13, scope: !3134)
!3143 = !DILocation(line: 1498, column: 22, scope: !3141)
!3144 = !DILocation(line: 1498, column: 31, scope: !3141)
!3145 = !DILocation(line: 1498, column: 36, scope: !3141)
!3146 = !DILocation(line: 1498, column: 6, scope: !3141)
!3147 = !DILocation(line: 1499, column: 2, scope: !3119)
!3148 = !DILocation(line: 1483, column: 70, scope: !3115)
!3149 = !DILocation(line: 1483, column: 7, scope: !3115)
!3150 = distinct !{!3150, !3117, !3151}
!3151 = !DILocation(line: 1499, column: 2, scope: !3111)
!3152 = !DILocation(line: 1500, column: 5, scope: !3087)
!3153 = distinct !{!3153, !3081, !3154}
!3154 = !DILocation(line: 1500, column: 5, scope: !3082)
!3155 = !DILocation(line: 1502, column: 42, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 1502, column: 3)
!3157 = !DILocation(line: 1502, column: 18, scope: !3156)
!3158 = !DILocation(line: 1502, column: 16, scope: !3156)
!3159 = !DILocation(line: 1502, column: 8, scope: !3156)
!3160 = !DILocation(line: 1502, column: 54, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 1502, column: 3)
!3162 = !DILocation(line: 1502, column: 53, scope: !3161)
!3163 = !DILocation(line: 1502, column: 3, scope: !3156)
!3164 = !DILocalVariable(name: "def", scope: !3165, file: !3, line: 1504, type: !872)
!3165 = distinct !DILexicalBlock(scope: !3161, file: !3, line: 1503, column: 5)
!3166 = !DILocation(line: 1504, column: 14, scope: !3165)
!3167 = !DILocation(line: 1504, column: 21, scope: !3165)
!3168 = !DILocation(line: 1504, column: 20, scope: !3165)
!3169 = !DILocation(line: 1505, column: 23, scope: !3165)
!3170 = !DILocation(line: 1505, column: 32, scope: !3165)
!3171 = !DILocation(line: 1505, column: 37, scope: !3165)
!3172 = !DILocation(line: 1505, column: 7, scope: !3165)
!3173 = !DILocation(line: 1506, column: 5, scope: !3165)
!3174 = !DILocation(line: 1502, column: 70, scope: !3161)
!3175 = !DILocation(line: 1502, column: 3, scope: !3161)
!3176 = distinct !{!3176, !3163, !3177}
!3177 = !DILocation(line: 1506, column: 5, scope: !3156)
!3178 = !DILocation(line: 1507, column: 1, scope: !3065)
!3179 = distinct !DISubprogram(name: "df_chain_create", scope: !3, file: !3, line: 1904, type: !3180, scopeLine: 1905, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{!868, !872, !872}
!3182 = !DILocalVariable(name: "src", arg: 1, scope: !3179, file: !3, line: 1904, type: !872)
!3183 = !DILocation(line: 1904, column: 25, scope: !3179)
!3184 = !DILocalVariable(name: "dst", arg: 2, scope: !3179, file: !3, line: 1904, type: !872)
!3185 = !DILocation(line: 1904, column: 37, scope: !3179)
!3186 = !DILocalVariable(name: "head", scope: !3179, file: !3, line: 1906, type: !868)
!3187 = !DILocation(line: 1906, column: 19, scope: !3179)
!3188 = !DILocation(line: 1906, column: 26, scope: !3179)
!3189 = !DILocalVariable(name: "link", scope: !3179, file: !3, line: 1907, type: !868)
!3190 = !DILocation(line: 1907, column: 19, scope: !3179)
!3191 = !DILocation(line: 1907, column: 57, scope: !3179)
!3192 = !DILocation(line: 1907, column: 67, scope: !3179)
!3193 = !DILocation(line: 1907, column: 45, scope: !3179)
!3194 = !DILocation(line: 1907, column: 26, scope: !3179)
!3195 = !DILocation(line: 1909, column: 24, scope: !3179)
!3196 = !DILocation(line: 1909, column: 3, scope: !3179)
!3197 = !DILocation(line: 1909, column: 22, scope: !3179)
!3198 = !DILocation(line: 1910, column: 16, scope: !3179)
!3199 = !DILocation(line: 1910, column: 3, scope: !3179)
!3200 = !DILocation(line: 1910, column: 9, scope: !3179)
!3201 = !DILocation(line: 1910, column: 14, scope: !3179)
!3202 = !DILocation(line: 1911, column: 15, scope: !3179)
!3203 = !DILocation(line: 1911, column: 3, scope: !3179)
!3204 = !DILocation(line: 1911, column: 9, scope: !3179)
!3205 = !DILocation(line: 1911, column: 13, scope: !3179)
!3206 = !DILocation(line: 1912, column: 10, scope: !3179)
!3207 = !DILocation(line: 1912, column: 3, scope: !3179)
!3208 = distinct !DISubprogram(name: "df_chain_unlink", scope: !3, file: !3, line: 1944, type: !3209, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{null, !872}
!3211 = !DILocalVariable(name: "ref", arg: 1, scope: !3208, file: !3, line: 1944, type: !872)
!3212 = !DILocation(line: 1944, column: 25, scope: !3208)
!3213 = !DILocalVariable(name: "chain", scope: !3208, file: !3, line: 1946, type: !868)
!3214 = !DILocation(line: 1946, column: 19, scope: !3208)
!3215 = !DILocation(line: 1946, column: 27, scope: !3208)
!3216 = !DILocation(line: 1947, column: 3, scope: !3208)
!3217 = !DILocation(line: 1947, column: 10, scope: !3208)
!3218 = !DILocalVariable(name: "next", scope: !3219, file: !3, line: 1949, type: !868)
!3219 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 1948, column: 5)
!3220 = !DILocation(line: 1949, column: 23, scope: !3219)
!3221 = !DILocation(line: 1949, column: 30, scope: !3219)
!3222 = !DILocation(line: 1949, column: 37, scope: !3219)
!3223 = !DILocation(line: 1951, column: 26, scope: !3219)
!3224 = !DILocation(line: 1951, column: 33, scope: !3219)
!3225 = !DILocation(line: 1951, column: 38, scope: !3219)
!3226 = !DILocation(line: 1951, column: 7, scope: !3219)
!3227 = !DILocation(line: 1952, column: 18, scope: !3219)
!3228 = !DILocation(line: 1952, column: 28, scope: !3219)
!3229 = !DILocation(line: 1952, column: 40, scope: !3219)
!3230 = !DILocation(line: 1952, column: 7, scope: !3219)
!3231 = !DILocation(line: 1953, column: 15, scope: !3219)
!3232 = !DILocation(line: 1953, column: 13, scope: !3219)
!3233 = distinct !{!3233, !3216, !3234}
!3234 = !DILocation(line: 1954, column: 5, scope: !3208)
!3235 = !DILocation(line: 1955, column: 3, scope: !3208)
!3236 = !DILocation(line: 1955, column: 22, scope: !3208)
!3237 = !DILocation(line: 1956, column: 1, scope: !3208)
!3238 = distinct !DISubprogram(name: "df_chain_unlink_1", scope: !3, file: !3, line: 1919, type: !3239, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3239 = !DISubroutineType(types: !3240)
!3240 = !{null, !872, !872}
!3241 = !DILocalVariable(name: "ref", arg: 1, scope: !3238, file: !3, line: 1919, type: !872)
!3242 = !DILocation(line: 1919, column: 27, scope: !3238)
!3243 = !DILocalVariable(name: "target", arg: 2, scope: !3238, file: !3, line: 1919, type: !872)
!3244 = !DILocation(line: 1919, column: 39, scope: !3238)
!3245 = !DILocalVariable(name: "chain", scope: !3238, file: !3, line: 1921, type: !868)
!3246 = !DILocation(line: 1921, column: 19, scope: !3238)
!3247 = !DILocation(line: 1921, column: 27, scope: !3238)
!3248 = !DILocalVariable(name: "prev", scope: !3238, file: !3, line: 1922, type: !868)
!3249 = !DILocation(line: 1922, column: 19, scope: !3238)
!3250 = !DILocation(line: 1924, column: 3, scope: !3238)
!3251 = !DILocation(line: 1924, column: 10, scope: !3238)
!3252 = !DILocation(line: 1926, column: 11, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 1926, column: 11)
!3254 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 1925, column: 5)
!3255 = !DILocation(line: 1926, column: 18, scope: !3253)
!3256 = !DILocation(line: 1926, column: 25, scope: !3253)
!3257 = !DILocation(line: 1926, column: 22, scope: !3253)
!3258 = !DILocation(line: 1926, column: 11, scope: !3254)
!3259 = !DILocation(line: 1928, column: 8, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 1928, column: 8)
!3261 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 1927, column: 2)
!3262 = !DILocation(line: 1928, column: 8, scope: !3261)
!3263 = !DILocation(line: 1929, column: 19, scope: !3260)
!3264 = !DILocation(line: 1929, column: 26, scope: !3260)
!3265 = !DILocation(line: 1929, column: 6, scope: !3260)
!3266 = !DILocation(line: 1929, column: 12, scope: !3260)
!3267 = !DILocation(line: 1929, column: 17, scope: !3260)
!3268 = !DILocation(line: 1931, column: 27, scope: !3260)
!3269 = !DILocation(line: 1931, column: 34, scope: !3260)
!3270 = !DILocation(line: 1931, column: 6, scope: !3260)
!3271 = !DILocation(line: 1931, column: 25, scope: !3260)
!3272 = !DILocation(line: 1932, column: 15, scope: !3261)
!3273 = !DILocation(line: 1932, column: 25, scope: !3261)
!3274 = !DILocation(line: 1932, column: 37, scope: !3261)
!3275 = !DILocation(line: 1932, column: 4, scope: !3261)
!3276 = !DILocation(line: 1933, column: 4, scope: !3261)
!3277 = !DILocation(line: 1935, column: 14, scope: !3254)
!3278 = !DILocation(line: 1935, column: 12, scope: !3254)
!3279 = !DILocation(line: 1936, column: 15, scope: !3254)
!3280 = !DILocation(line: 1936, column: 22, scope: !3254)
!3281 = !DILocation(line: 1936, column: 13, scope: !3254)
!3282 = distinct !{!3282, !3250, !3283}
!3283 = !DILocation(line: 1937, column: 5, scope: !3238)
!3284 = !DILocation(line: 1938, column: 1, scope: !3238)
!3285 = distinct !DISubprogram(name: "df_chain_copy", scope: !3, file: !3, line: 1963, type: !3286, scopeLine: 1965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{null, !872, !868}
!3288 = !DILocalVariable(name: "to_ref", arg: 1, scope: !3285, file: !3, line: 1963, type: !872)
!3289 = !DILocation(line: 1963, column: 23, scope: !3285)
!3290 = !DILocalVariable(name: "from_ref", arg: 2, scope: !3285, file: !3, line: 1964, type: !868)
!3291 = !DILocation(line: 1964, column: 25, scope: !3285)
!3292 = !DILocation(line: 1966, column: 3, scope: !3285)
!3293 = !DILocation(line: 1966, column: 10, scope: !3285)
!3294 = !DILocation(line: 1968, column: 24, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3285, file: !3, line: 1967, column: 5)
!3296 = !DILocation(line: 1968, column: 32, scope: !3295)
!3297 = !DILocation(line: 1968, column: 42, scope: !3295)
!3298 = !DILocation(line: 1968, column: 7, scope: !3295)
!3299 = !DILocation(line: 1969, column: 18, scope: !3295)
!3300 = !DILocation(line: 1969, column: 28, scope: !3295)
!3301 = !DILocation(line: 1969, column: 16, scope: !3295)
!3302 = distinct !{!3302, !3292, !3303}
!3303 = !DILocation(line: 1970, column: 5, scope: !3285)
!3304 = !DILocation(line: 1971, column: 1, scope: !3285)
!3305 = distinct !DISubprogram(name: "df_chain_add_problem", scope: !3, file: !3, line: 2327, type: !2750, scopeLine: 2328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3306 = !DILocalVariable(name: "chain_flags", arg: 1, scope: !3305, file: !3, line: 2327, type: !7)
!3307 = !DILocation(line: 2327, column: 36, scope: !3305)
!3308 = !DILocation(line: 2329, column: 3, scope: !3305)
!3309 = !DILocation(line: 2330, column: 27, scope: !3305)
!3310 = !DILocation(line: 2330, column: 3, scope: !3305)
!3311 = !DILocation(line: 2330, column: 13, scope: !3305)
!3312 = !DILocation(line: 2330, column: 25, scope: !3305)
!3313 = !DILocation(line: 2331, column: 46, scope: !3305)
!3314 = !DILocation(line: 2331, column: 3, scope: !3305)
!3315 = !DILocation(line: 2331, column: 13, scope: !3305)
!3316 = !DILocation(line: 2331, column: 44, scope: !3305)
!3317 = !DILocation(line: 2332, column: 1, scope: !3305)
!3318 = distinct !DISubprogram(name: "df_byte_lr_get_regno_start", scope: !3, file: !3, line: 2390, type: !3319, scopeLine: 2391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3319 = !DISubroutineType(types: !3320)
!3320 = !{!855, !7}
!3321 = !DILocalVariable(name: "regno", arg: 1, scope: !3318, file: !3, line: 2390, type: !7)
!3322 = !DILocation(line: 2390, column: 42, scope: !3318)
!3323 = !DILocalVariable(name: "problem_data", scope: !3318, file: !3, line: 2392, type: !2037)
!3324 = !DILocation(line: 2392, column: 35, scope: !3318)
!3325 = !DILocation(line: 2393, column: 41, scope: !3318)
!3326 = !DILocation(line: 2393, column: 53, scope: !3318)
!3327 = !DILocation(line: 2393, column: 7, scope: !3318)
!3328 = !DILocation(line: 2394, column: 10, scope: !3318)
!3329 = !DILocation(line: 2394, column: 24, scope: !3318)
!3330 = !DILocation(line: 2394, column: 36, scope: !3318)
!3331 = !DILocation(line: 2394, column: 3, scope: !3318)
!3332 = distinct !DISubprogram(name: "df_byte_lr_get_regno_len", scope: !3, file: !3, line: 2401, type: !3319, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3333 = !DILocalVariable(name: "regno", arg: 1, scope: !3332, file: !3, line: 2401, type: !7)
!3334 = !DILocation(line: 2401, column: 40, scope: !3332)
!3335 = !DILocalVariable(name: "problem_data", scope: !3332, file: !3, line: 2403, type: !2037)
!3336 = !DILocation(line: 2403, column: 35, scope: !3332)
!3337 = !DILocation(line: 2404, column: 41, scope: !3332)
!3338 = !DILocation(line: 2404, column: 53, scope: !3332)
!3339 = !DILocation(line: 2404, column: 7, scope: !3332)
!3340 = !DILocation(line: 2405, column: 10, scope: !3332)
!3341 = !DILocation(line: 2405, column: 24, scope: !3332)
!3342 = !DILocation(line: 2405, column: 34, scope: !3332)
!3343 = !DILocation(line: 2405, column: 3, scope: !3332)
!3344 = distinct !DISubprogram(name: "df_byte_lr_add_problem", scope: !3, file: !3, line: 2906, type: !2195, scopeLine: 2907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3345 = !DILocation(line: 2908, column: 3, scope: !3344)
!3346 = !DILocation(line: 2911, column: 48, scope: !3344)
!3347 = !DILocation(line: 2911, column: 3, scope: !3344)
!3348 = !DILocation(line: 2911, column: 15, scope: !3344)
!3349 = !DILocation(line: 2911, column: 46, scope: !3344)
!3350 = !DILocation(line: 2912, column: 1, scope: !3344)
!3351 = distinct !DISubprogram(name: "df_byte_lr_simulate_defs", scope: !3, file: !3, line: 2918, type: !3352, scopeLine: 2919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{null, !883, !802}
!3354 = !DILocalVariable(name: "insn", arg: 1, scope: !3351, file: !3, line: 2918, type: !883)
!3355 = !DILocation(line: 2918, column: 31, scope: !3351)
!3356 = !DILocalVariable(name: "live", arg: 2, scope: !3351, file: !3, line: 2918, type: !802)
!3357 = !DILocation(line: 2918, column: 44, scope: !3351)
!3358 = !DILocalVariable(name: "problem_data", scope: !3351, file: !3, line: 2920, type: !2037)
!3359 = !DILocation(line: 2920, column: 35, scope: !3351)
!3360 = !DILocation(line: 2921, column: 41, scope: !3351)
!3361 = !DILocation(line: 2921, column: 53, scope: !3351)
!3362 = !DILocation(line: 2921, column: 7, scope: !3351)
!3363 = !DILocalVariable(name: "def_rec", scope: !3351, file: !3, line: 2922, type: !1998)
!3364 = !DILocation(line: 2922, column: 11, scope: !3351)
!3365 = !DILocalVariable(name: "uid", scope: !3351, file: !3, line: 2923, type: !7)
!3366 = !DILocation(line: 2923, column: 16, scope: !3351)
!3367 = !DILocation(line: 2923, column: 22, scope: !3351)
!3368 = !DILocation(line: 2925, column: 18, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 2925, column: 3)
!3370 = !DILocation(line: 2925, column: 16, scope: !3369)
!3371 = !DILocation(line: 2925, column: 8, scope: !3369)
!3372 = !DILocation(line: 2925, column: 43, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 2925, column: 3)
!3374 = !DILocation(line: 2925, column: 42, scope: !3373)
!3375 = !DILocation(line: 2925, column: 3, scope: !3369)
!3376 = !DILocalVariable(name: "def", scope: !3377, file: !3, line: 2927, type: !872)
!3377 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 2926, column: 5)
!3378 = !DILocation(line: 2927, column: 14, scope: !3377)
!3379 = !DILocation(line: 2927, column: 21, scope: !3377)
!3380 = !DILocation(line: 2927, column: 20, scope: !3377)
!3381 = !DILocation(line: 2931, column: 13, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3377, file: !3, line: 2931, column: 11)
!3383 = !DILocation(line: 2931, column: 32, scope: !3382)
!3384 = !DILocation(line: 2931, column: 11, scope: !3377)
!3385 = !DILocalVariable(name: "dregno", scope: !3386, file: !3, line: 2933, type: !7)
!3386 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 2932, column: 2)
!3387 = !DILocation(line: 2933, column: 17, scope: !3386)
!3388 = !DILocation(line: 2933, column: 26, scope: !3386)
!3389 = !DILocalVariable(name: "start", scope: !3386, file: !3, line: 2934, type: !7)
!3390 = !DILocation(line: 2934, column: 17, scope: !3386)
!3391 = !DILocation(line: 2934, column: 25, scope: !3386)
!3392 = !DILocation(line: 2934, column: 39, scope: !3386)
!3393 = !DILocation(line: 2934, column: 51, scope: !3386)
!3394 = !DILocalVariable(name: "len", scope: !3386, file: !3, line: 2935, type: !7)
!3395 = !DILocation(line: 2935, column: 17, scope: !3386)
!3396 = !DILocation(line: 2935, column: 23, scope: !3386)
!3397 = !DILocation(line: 2935, column: 37, scope: !3386)
!3398 = !DILocation(line: 2935, column: 47, scope: !3386)
!3399 = !DILocalVariable(name: "sb", scope: !3386, file: !3, line: 2936, type: !7)
!3400 = !DILocation(line: 2936, column: 17, scope: !3386)
!3401 = !DILocalVariable(name: "lb", scope: !3386, file: !3, line: 2937, type: !7)
!3402 = !DILocation(line: 2937, column: 17, scope: !3386)
!3403 = !DILocation(line: 2938, column: 36, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 2938, column: 8)
!3405 = !DILocation(line: 2938, column: 9, scope: !3404)
!3406 = !DILocation(line: 2938, column: 8, scope: !3386)
!3407 = !DILocation(line: 2940, column: 17, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 2939, column: 6)
!3409 = !DILocation(line: 2940, column: 14, scope: !3408)
!3410 = !DILocation(line: 2941, column: 14, scope: !3408)
!3411 = !DILocation(line: 2941, column: 19, scope: !3408)
!3412 = !DILocation(line: 2941, column: 17, scope: !3408)
!3413 = !DILocation(line: 2941, column: 12, scope: !3408)
!3414 = !DILocation(line: 2942, column: 6, scope: !3408)
!3415 = !DILocation(line: 2944, column: 8, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 2944, column: 8)
!3417 = !DILocation(line: 2944, column: 8, scope: !3386)
!3418 = !DILocation(line: 2945, column: 26, scope: !3416)
!3419 = !DILocation(line: 2945, column: 32, scope: !3416)
!3420 = !DILocation(line: 2945, column: 39, scope: !3416)
!3421 = !DILocation(line: 2945, column: 6, scope: !3416)
!3422 = !DILocation(line: 2946, column: 2, scope: !3386)
!3423 = !DILocation(line: 2947, column: 5, scope: !3377)
!3424 = !DILocation(line: 2925, column: 59, scope: !3373)
!3425 = !DILocation(line: 2925, column: 3, scope: !3373)
!3426 = distinct !{!3426, !3375, !3427}
!3427 = !DILocation(line: 2947, column: 5, scope: !3369)
!3428 = !DILocation(line: 2948, column: 1, scope: !3351)
!3429 = distinct !DISubprogram(name: "df_byte_lr_simulate_uses", scope: !3, file: !3, line: 2954, type: !3352, scopeLine: 2955, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3430 = !DILocalVariable(name: "insn", arg: 1, scope: !3429, file: !3, line: 2954, type: !883)
!3431 = !DILocation(line: 2954, column: 31, scope: !3429)
!3432 = !DILocalVariable(name: "live", arg: 2, scope: !3429, file: !3, line: 2954, type: !802)
!3433 = !DILocation(line: 2954, column: 44, scope: !3429)
!3434 = !DILocalVariable(name: "problem_data", scope: !3429, file: !3, line: 2956, type: !2037)
!3435 = !DILocation(line: 2956, column: 35, scope: !3429)
!3436 = !DILocation(line: 2957, column: 41, scope: !3429)
!3437 = !DILocation(line: 2957, column: 53, scope: !3429)
!3438 = !DILocation(line: 2957, column: 7, scope: !3429)
!3439 = !DILocalVariable(name: "use_rec", scope: !3429, file: !3, line: 2958, type: !1998)
!3440 = !DILocation(line: 2958, column: 11, scope: !3429)
!3441 = !DILocalVariable(name: "uid", scope: !3429, file: !3, line: 2959, type: !7)
!3442 = !DILocation(line: 2959, column: 16, scope: !3429)
!3443 = !DILocation(line: 2959, column: 22, scope: !3429)
!3444 = !DILocation(line: 2961, column: 18, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 2961, column: 3)
!3446 = !DILocation(line: 2961, column: 16, scope: !3445)
!3447 = !DILocation(line: 2961, column: 8, scope: !3445)
!3448 = !DILocation(line: 2961, column: 43, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 2961, column: 3)
!3450 = !DILocation(line: 2961, column: 42, scope: !3449)
!3451 = !DILocation(line: 2961, column: 3, scope: !3445)
!3452 = !DILocalVariable(name: "use", scope: !3453, file: !3, line: 2963, type: !872)
!3453 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 2962, column: 5)
!3454 = !DILocation(line: 2963, column: 14, scope: !3453)
!3455 = !DILocation(line: 2963, column: 21, scope: !3453)
!3456 = !DILocation(line: 2963, column: 20, scope: !3453)
!3457 = !DILocalVariable(name: "uregno", scope: !3453, file: !3, line: 2964, type: !7)
!3458 = !DILocation(line: 2964, column: 20, scope: !3453)
!3459 = !DILocation(line: 2964, column: 29, scope: !3453)
!3460 = !DILocalVariable(name: "start", scope: !3453, file: !3, line: 2965, type: !7)
!3461 = !DILocation(line: 2965, column: 20, scope: !3453)
!3462 = !DILocation(line: 2965, column: 28, scope: !3453)
!3463 = !DILocation(line: 2965, column: 42, scope: !3453)
!3464 = !DILocation(line: 2965, column: 54, scope: !3453)
!3465 = !DILocalVariable(name: "len", scope: !3453, file: !3, line: 2966, type: !7)
!3466 = !DILocation(line: 2966, column: 20, scope: !3453)
!3467 = !DILocation(line: 2966, column: 26, scope: !3453)
!3468 = !DILocation(line: 2966, column: 40, scope: !3453)
!3469 = !DILocation(line: 2966, column: 50, scope: !3453)
!3470 = !DILocalVariable(name: "sb", scope: !3453, file: !3, line: 2967, type: !7)
!3471 = !DILocation(line: 2967, column: 20, scope: !3453)
!3472 = !DILocalVariable(name: "lb", scope: !3453, file: !3, line: 2968, type: !7)
!3473 = !DILocation(line: 2968, column: 20, scope: !3453)
!3474 = !DILocation(line: 2970, column: 39, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3453, file: !3, line: 2970, column: 11)
!3476 = !DILocation(line: 2970, column: 12, scope: !3475)
!3477 = !DILocation(line: 2970, column: 11, scope: !3453)
!3478 = !DILocation(line: 2972, column: 13, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 2971, column: 2)
!3480 = !DILocation(line: 2972, column: 10, scope: !3479)
!3481 = !DILocation(line: 2973, column: 10, scope: !3479)
!3482 = !DILocation(line: 2973, column: 15, scope: !3479)
!3483 = !DILocation(line: 2973, column: 13, scope: !3479)
!3484 = !DILocation(line: 2973, column: 8, scope: !3479)
!3485 = !DILocation(line: 2974, column: 2, scope: !3479)
!3486 = !DILocation(line: 2977, column: 11, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3453, file: !3, line: 2977, column: 11)
!3488 = !DILocation(line: 2977, column: 11, scope: !3453)
!3489 = !DILocation(line: 2978, column: 20, scope: !3487)
!3490 = !DILocation(line: 2978, column: 26, scope: !3487)
!3491 = !DILocation(line: 2978, column: 33, scope: !3487)
!3492 = !DILocation(line: 2978, column: 2, scope: !3487)
!3493 = !DILocation(line: 2979, column: 5, scope: !3453)
!3494 = !DILocation(line: 2961, column: 59, scope: !3449)
!3495 = !DILocation(line: 2961, column: 3, scope: !3449)
!3496 = distinct !{!3496, !3451, !3497}
!3497 = !DILocation(line: 2979, column: 5, scope: !3445)
!3498 = !DILocation(line: 2980, column: 1, scope: !3429)
!3499 = distinct !DISubprogram(name: "df_byte_lr_simulate_artificial_refs_at_top", scope: !3, file: !3, line: 2987, type: !2530, scopeLine: 2988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3500 = !DILocalVariable(name: "bb", arg: 1, scope: !3499, file: !3, line: 2987, type: !1357)
!3501 = !DILocation(line: 2987, column: 57, scope: !3499)
!3502 = !DILocalVariable(name: "live", arg: 2, scope: !3499, file: !3, line: 2987, type: !802)
!3503 = !DILocation(line: 2987, column: 68, scope: !3499)
!3504 = !DILocalVariable(name: "problem_data", scope: !3499, file: !3, line: 2989, type: !2037)
!3505 = !DILocation(line: 2989, column: 35, scope: !3499)
!3506 = !DILocation(line: 2990, column: 41, scope: !3499)
!3507 = !DILocation(line: 2990, column: 53, scope: !3499)
!3508 = !DILocation(line: 2990, column: 7, scope: !3499)
!3509 = !DILocalVariable(name: "def_rec", scope: !3499, file: !3, line: 2991, type: !1998)
!3510 = !DILocation(line: 2991, column: 11, scope: !3499)
!3511 = !DILocalVariable(name: "bb_index", scope: !3499, file: !3, line: 2995, type: !855)
!3512 = !DILocation(line: 2995, column: 7, scope: !3499)
!3513 = !DILocation(line: 2995, column: 18, scope: !3499)
!3514 = !DILocation(line: 2995, column: 22, scope: !3499)
!3515 = !DILocation(line: 3011, column: 42, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3499, file: !3, line: 3011, column: 3)
!3517 = !DILocation(line: 3011, column: 18, scope: !3516)
!3518 = !DILocation(line: 3011, column: 16, scope: !3516)
!3519 = !DILocation(line: 3011, column: 8, scope: !3516)
!3520 = !DILocation(line: 3011, column: 54, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 3011, column: 3)
!3522 = !DILocation(line: 3011, column: 53, scope: !3521)
!3523 = !DILocation(line: 3011, column: 3, scope: !3516)
!3524 = !DILocalVariable(name: "def", scope: !3525, file: !3, line: 3013, type: !872)
!3525 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 3012, column: 5)
!3526 = !DILocation(line: 3013, column: 14, scope: !3525)
!3527 = !DILocation(line: 3013, column: 21, scope: !3525)
!3528 = !DILocation(line: 3013, column: 20, scope: !3525)
!3529 = !DILocation(line: 3014, column: 11, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3525, file: !3, line: 3014, column: 11)
!3531 = !DILocation(line: 3014, column: 30, scope: !3530)
!3532 = !DILocation(line: 3014, column: 11, scope: !3525)
!3533 = !DILocalVariable(name: "dregno", scope: !3534, file: !3, line: 3016, type: !7)
!3534 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 3015, column: 2)
!3535 = !DILocation(line: 3016, column: 17, scope: !3534)
!3536 = !DILocation(line: 3016, column: 26, scope: !3534)
!3537 = !DILocalVariable(name: "start", scope: !3534, file: !3, line: 3017, type: !7)
!3538 = !DILocation(line: 3017, column: 17, scope: !3534)
!3539 = !DILocation(line: 3017, column: 25, scope: !3534)
!3540 = !DILocation(line: 3017, column: 39, scope: !3534)
!3541 = !DILocation(line: 3017, column: 51, scope: !3534)
!3542 = !DILocalVariable(name: "len", scope: !3534, file: !3, line: 3018, type: !7)
!3543 = !DILocation(line: 3018, column: 17, scope: !3534)
!3544 = !DILocation(line: 3018, column: 23, scope: !3534)
!3545 = !DILocation(line: 3018, column: 37, scope: !3534)
!3546 = !DILocation(line: 3018, column: 47, scope: !3534)
!3547 = !DILocation(line: 3019, column: 24, scope: !3534)
!3548 = !DILocation(line: 3019, column: 30, scope: !3534)
!3549 = !DILocation(line: 3019, column: 37, scope: !3534)
!3550 = !DILocation(line: 3019, column: 4, scope: !3534)
!3551 = !DILocation(line: 3020, column: 2, scope: !3534)
!3552 = !DILocation(line: 3021, column: 5, scope: !3525)
!3553 = !DILocation(line: 3011, column: 70, scope: !3521)
!3554 = !DILocation(line: 3011, column: 3, scope: !3521)
!3555 = distinct !{!3555, !3523, !3556}
!3556 = !DILocation(line: 3021, column: 5, scope: !3516)
!3557 = !DILocation(line: 3022, column: 1, scope: !3499)
!3558 = distinct !DISubprogram(name: "df_byte_lr_simulate_artificial_refs_at_end", scope: !3, file: !3, line: 3029, type: !2530, scopeLine: 3030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3559 = !DILocalVariable(name: "bb", arg: 1, scope: !3558, file: !3, line: 3029, type: !1357)
!3560 = !DILocation(line: 3029, column: 57, scope: !3558)
!3561 = !DILocalVariable(name: "live", arg: 2, scope: !3558, file: !3, line: 3029, type: !802)
!3562 = !DILocation(line: 3029, column: 68, scope: !3558)
!3563 = !DILocalVariable(name: "problem_data", scope: !3558, file: !3, line: 3031, type: !2037)
!3564 = !DILocation(line: 3031, column: 35, scope: !3558)
!3565 = !DILocation(line: 3032, column: 41, scope: !3558)
!3566 = !DILocation(line: 3032, column: 53, scope: !3558)
!3567 = !DILocation(line: 3032, column: 7, scope: !3558)
!3568 = !DILocalVariable(name: "def_rec", scope: !3558, file: !3, line: 3033, type: !1998)
!3569 = !DILocation(line: 3033, column: 11, scope: !3558)
!3570 = !DILocalVariable(name: "use_rec", scope: !3558, file: !3, line: 3034, type: !1998)
!3571 = !DILocation(line: 3034, column: 11, scope: !3558)
!3572 = !DILocalVariable(name: "bb_index", scope: !3558, file: !3, line: 3035, type: !855)
!3573 = !DILocation(line: 3035, column: 7, scope: !3558)
!3574 = !DILocation(line: 3035, column: 18, scope: !3558)
!3575 = !DILocation(line: 3035, column: 22, scope: !3558)
!3576 = !DILocation(line: 3037, column: 42, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 3037, column: 3)
!3578 = !DILocation(line: 3037, column: 18, scope: !3577)
!3579 = !DILocation(line: 3037, column: 16, scope: !3577)
!3580 = !DILocation(line: 3037, column: 8, scope: !3577)
!3581 = !DILocation(line: 3037, column: 54, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 3037, column: 3)
!3583 = !DILocation(line: 3037, column: 53, scope: !3582)
!3584 = !DILocation(line: 3037, column: 3, scope: !3577)
!3585 = !DILocalVariable(name: "def", scope: !3586, file: !3, line: 3039, type: !872)
!3586 = distinct !DILexicalBlock(scope: !3582, file: !3, line: 3038, column: 5)
!3587 = !DILocation(line: 3039, column: 14, scope: !3586)
!3588 = !DILocation(line: 3039, column: 21, scope: !3586)
!3589 = !DILocation(line: 3039, column: 20, scope: !3586)
!3590 = !DILocation(line: 3040, column: 12, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3586, file: !3, line: 3040, column: 11)
!3592 = !DILocation(line: 3040, column: 31, scope: !3591)
!3593 = !DILocation(line: 3040, column: 48, scope: !3591)
!3594 = !DILocation(line: 3040, column: 11, scope: !3586)
!3595 = !DILocalVariable(name: "dregno", scope: !3596, file: !3, line: 3042, type: !7)
!3596 = distinct !DILexicalBlock(scope: !3591, file: !3, line: 3041, column: 2)
!3597 = !DILocation(line: 3042, column: 17, scope: !3596)
!3598 = !DILocation(line: 3042, column: 26, scope: !3596)
!3599 = !DILocalVariable(name: "start", scope: !3596, file: !3, line: 3043, type: !7)
!3600 = !DILocation(line: 3043, column: 17, scope: !3596)
!3601 = !DILocation(line: 3043, column: 25, scope: !3596)
!3602 = !DILocation(line: 3043, column: 39, scope: !3596)
!3603 = !DILocation(line: 3043, column: 51, scope: !3596)
!3604 = !DILocalVariable(name: "len", scope: !3596, file: !3, line: 3044, type: !7)
!3605 = !DILocation(line: 3044, column: 17, scope: !3596)
!3606 = !DILocation(line: 3044, column: 23, scope: !3596)
!3607 = !DILocation(line: 3044, column: 37, scope: !3596)
!3608 = !DILocation(line: 3044, column: 47, scope: !3596)
!3609 = !DILocation(line: 3045, column: 24, scope: !3596)
!3610 = !DILocation(line: 3045, column: 30, scope: !3596)
!3611 = !DILocation(line: 3045, column: 37, scope: !3596)
!3612 = !DILocation(line: 3045, column: 4, scope: !3596)
!3613 = !DILocation(line: 3046, column: 2, scope: !3596)
!3614 = !DILocation(line: 3047, column: 5, scope: !3586)
!3615 = !DILocation(line: 3037, column: 70, scope: !3582)
!3616 = !DILocation(line: 3037, column: 3, scope: !3582)
!3617 = distinct !{!3617, !3584, !3618}
!3618 = !DILocation(line: 3047, column: 5, scope: !3577)
!3619 = !DILocation(line: 3049, column: 42, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 3049, column: 3)
!3621 = !DILocation(line: 3049, column: 18, scope: !3620)
!3622 = !DILocation(line: 3049, column: 16, scope: !3620)
!3623 = !DILocation(line: 3049, column: 8, scope: !3620)
!3624 = !DILocation(line: 3049, column: 54, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 3049, column: 3)
!3626 = !DILocation(line: 3049, column: 53, scope: !3625)
!3627 = !DILocation(line: 3049, column: 3, scope: !3620)
!3628 = !DILocalVariable(name: "use", scope: !3629, file: !3, line: 3051, type: !872)
!3629 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 3050, column: 5)
!3630 = !DILocation(line: 3051, column: 14, scope: !3629)
!3631 = !DILocation(line: 3051, column: 21, scope: !3629)
!3632 = !DILocation(line: 3051, column: 20, scope: !3629)
!3633 = !DILocation(line: 3052, column: 12, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 3052, column: 11)
!3635 = !DILocation(line: 3052, column: 31, scope: !3634)
!3636 = !DILocation(line: 3052, column: 48, scope: !3634)
!3637 = !DILocation(line: 3052, column: 11, scope: !3629)
!3638 = !DILocalVariable(name: "uregno", scope: !3639, file: !3, line: 3054, type: !7)
!3639 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 3053, column: 2)
!3640 = !DILocation(line: 3054, column: 17, scope: !3639)
!3641 = !DILocation(line: 3054, column: 26, scope: !3639)
!3642 = !DILocalVariable(name: "start", scope: !3639, file: !3, line: 3055, type: !7)
!3643 = !DILocation(line: 3055, column: 17, scope: !3639)
!3644 = !DILocation(line: 3055, column: 25, scope: !3639)
!3645 = !DILocation(line: 3055, column: 39, scope: !3639)
!3646 = !DILocation(line: 3055, column: 51, scope: !3639)
!3647 = !DILocalVariable(name: "len", scope: !3639, file: !3, line: 3056, type: !7)
!3648 = !DILocation(line: 3056, column: 17, scope: !3639)
!3649 = !DILocation(line: 3056, column: 23, scope: !3639)
!3650 = !DILocation(line: 3056, column: 37, scope: !3639)
!3651 = !DILocation(line: 3056, column: 47, scope: !3639)
!3652 = !DILocation(line: 3057, column: 22, scope: !3639)
!3653 = !DILocation(line: 3057, column: 28, scope: !3639)
!3654 = !DILocation(line: 3057, column: 35, scope: !3639)
!3655 = !DILocation(line: 3057, column: 4, scope: !3639)
!3656 = !DILocation(line: 3058, column: 2, scope: !3639)
!3657 = !DILocation(line: 3059, column: 5, scope: !3629)
!3658 = !DILocation(line: 3049, column: 70, scope: !3625)
!3659 = !DILocation(line: 3049, column: 3, scope: !3625)
!3660 = distinct !{!3660, !3627, !3661}
!3661 = !DILocation(line: 3059, column: 5, scope: !3620)
!3662 = !DILocation(line: 3060, column: 1, scope: !3558)
!3663 = distinct !DISubprogram(name: "df_get_artificial_uses", scope: !385, file: !385, line: 1099, type: !2583, scopeLine: 1100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3664 = !DILocalVariable(name: "bb_index", arg: 1, scope: !3663, file: !385, line: 1099, type: !7)
!3665 = !DILocation(line: 1099, column: 38, scope: !3663)
!3666 = !DILocation(line: 1101, column: 31, scope: !3663)
!3667 = !DILocation(line: 1101, column: 10, scope: !3663)
!3668 = !DILocation(line: 1101, column: 42, scope: !3663)
!3669 = !DILocation(line: 1101, column: 3, scope: !3663)
!3670 = distinct !DISubprogram(name: "df_note_add_problem", scope: !3, file: !3, line: 3711, type: !2195, scopeLine: 3712, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3671 = !DILocation(line: 3713, column: 3, scope: !3670)
!3672 = !DILocation(line: 3714, column: 1, scope: !3670)
!3673 = distinct !DISubprogram(name: "df_simulate_find_defs", scope: !3, file: !3, line: 3740, type: !3352, scopeLine: 3741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3674 = !DILocalVariable(name: "insn", arg: 1, scope: !3673, file: !3, line: 3740, type: !883)
!3675 = !DILocation(line: 3740, column: 28, scope: !3673)
!3676 = !DILocalVariable(name: "defs", arg: 2, scope: !3673, file: !3, line: 3740, type: !802)
!3677 = !DILocation(line: 3740, column: 41, scope: !3673)
!3678 = !DILocalVariable(name: "def_rec", scope: !3673, file: !3, line: 3742, type: !1998)
!3679 = !DILocation(line: 3742, column: 11, scope: !3673)
!3680 = !DILocalVariable(name: "uid", scope: !3673, file: !3, line: 3743, type: !7)
!3681 = !DILocation(line: 3743, column: 16, scope: !3673)
!3682 = !DILocation(line: 3743, column: 22, scope: !3673)
!3683 = !DILocation(line: 3745, column: 18, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 3745, column: 3)
!3685 = !DILocation(line: 3745, column: 16, scope: !3684)
!3686 = !DILocation(line: 3745, column: 8, scope: !3684)
!3687 = !DILocation(line: 3745, column: 43, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3684, file: !3, line: 3745, column: 3)
!3689 = !DILocation(line: 3745, column: 42, scope: !3688)
!3690 = !DILocation(line: 3745, column: 3, scope: !3684)
!3691 = !DILocalVariable(name: "def", scope: !3692, file: !3, line: 3747, type: !872)
!3692 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 3746, column: 5)
!3693 = !DILocation(line: 3747, column: 14, scope: !3692)
!3694 = !DILocation(line: 3747, column: 21, scope: !3692)
!3695 = !DILocation(line: 3747, column: 20, scope: !3692)
!3696 = !DILocation(line: 3750, column: 13, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 3750, column: 11)
!3698 = !DILocation(line: 3750, column: 32, scope: !3697)
!3699 = !DILocation(line: 3750, column: 11, scope: !3692)
!3700 = !DILocation(line: 3751, column: 18, scope: !3697)
!3701 = !DILocation(line: 3751, column: 24, scope: !3697)
!3702 = !DILocation(line: 3751, column: 2, scope: !3697)
!3703 = !DILocation(line: 3752, column: 5, scope: !3692)
!3704 = !DILocation(line: 3745, column: 59, scope: !3688)
!3705 = !DILocation(line: 3745, column: 3, scope: !3688)
!3706 = distinct !{!3706, !3690, !3707}
!3707 = !DILocation(line: 3752, column: 5, scope: !3684)
!3708 = !DILocation(line: 3753, column: 1, scope: !3673)
!3709 = distinct !DISubprogram(name: "df_simulate_defs", scope: !3, file: !3, line: 3759, type: !3352, scopeLine: 3760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3710 = !DILocalVariable(name: "insn", arg: 1, scope: !3709, file: !3, line: 3759, type: !883)
!3711 = !DILocation(line: 3759, column: 23, scope: !3709)
!3712 = !DILocalVariable(name: "live", arg: 2, scope: !3709, file: !3, line: 3759, type: !802)
!3713 = !DILocation(line: 3759, column: 36, scope: !3709)
!3714 = !DILocalVariable(name: "def_rec", scope: !3709, file: !3, line: 3761, type: !1998)
!3715 = !DILocation(line: 3761, column: 11, scope: !3709)
!3716 = !DILocalVariable(name: "uid", scope: !3709, file: !3, line: 3762, type: !7)
!3717 = !DILocation(line: 3762, column: 16, scope: !3709)
!3718 = !DILocation(line: 3762, column: 22, scope: !3709)
!3719 = !DILocation(line: 3764, column: 18, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 3764, column: 3)
!3721 = !DILocation(line: 3764, column: 16, scope: !3720)
!3722 = !DILocation(line: 3764, column: 8, scope: !3720)
!3723 = !DILocation(line: 3764, column: 43, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3720, file: !3, line: 3764, column: 3)
!3725 = !DILocation(line: 3764, column: 42, scope: !3724)
!3726 = !DILocation(line: 3764, column: 3, scope: !3720)
!3727 = !DILocalVariable(name: "def", scope: !3728, file: !3, line: 3766, type: !872)
!3728 = distinct !DILexicalBlock(scope: !3724, file: !3, line: 3765, column: 5)
!3729 = !DILocation(line: 3766, column: 14, scope: !3728)
!3730 = !DILocation(line: 3766, column: 21, scope: !3728)
!3731 = !DILocation(line: 3766, column: 20, scope: !3728)
!3732 = !DILocalVariable(name: "dregno", scope: !3728, file: !3, line: 3767, type: !7)
!3733 = !DILocation(line: 3767, column: 20, scope: !3728)
!3734 = !DILocation(line: 3767, column: 29, scope: !3728)
!3735 = !DILocation(line: 3771, column: 13, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 3771, column: 11)
!3737 = !DILocation(line: 3771, column: 32, scope: !3736)
!3738 = !DILocation(line: 3771, column: 11, scope: !3728)
!3739 = !DILocation(line: 3772, column: 20, scope: !3736)
!3740 = !DILocation(line: 3772, column: 26, scope: !3736)
!3741 = !DILocation(line: 3772, column: 2, scope: !3736)
!3742 = !DILocation(line: 3773, column: 5, scope: !3728)
!3743 = !DILocation(line: 3764, column: 59, scope: !3724)
!3744 = !DILocation(line: 3764, column: 3, scope: !3724)
!3745 = distinct !{!3745, !3726, !3746}
!3746 = !DILocation(line: 3773, column: 5, scope: !3720)
!3747 = !DILocation(line: 3774, column: 1, scope: !3709)
!3748 = distinct !DISubprogram(name: "df_simulate_uses", scope: !3, file: !3, line: 3780, type: !3352, scopeLine: 3781, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3749 = !DILocalVariable(name: "insn", arg: 1, scope: !3748, file: !3, line: 3780, type: !883)
!3750 = !DILocation(line: 3780, column: 23, scope: !3748)
!3751 = !DILocalVariable(name: "live", arg: 2, scope: !3748, file: !3, line: 3780, type: !802)
!3752 = !DILocation(line: 3780, column: 36, scope: !3748)
!3753 = !DILocalVariable(name: "use_rec", scope: !3748, file: !3, line: 3782, type: !1998)
!3754 = !DILocation(line: 3782, column: 11, scope: !3748)
!3755 = !DILocalVariable(name: "uid", scope: !3748, file: !3, line: 3783, type: !7)
!3756 = !DILocation(line: 3783, column: 16, scope: !3748)
!3757 = !DILocation(line: 3783, column: 22, scope: !3748)
!3758 = !DILocation(line: 3785, column: 7, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3748, file: !3, line: 3785, column: 7)
!3760 = !DILocation(line: 3785, column: 7, scope: !3748)
!3761 = !DILocation(line: 3786, column: 5, scope: !3759)
!3762 = !DILocation(line: 3788, column: 18, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3748, file: !3, line: 3788, column: 3)
!3764 = !DILocation(line: 3788, column: 16, scope: !3763)
!3765 = !DILocation(line: 3788, column: 8, scope: !3763)
!3766 = !DILocation(line: 3788, column: 43, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 3788, column: 3)
!3768 = !DILocation(line: 3788, column: 42, scope: !3767)
!3769 = !DILocation(line: 3788, column: 3, scope: !3763)
!3770 = !DILocalVariable(name: "use", scope: !3771, file: !3, line: 3790, type: !872)
!3771 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 3789, column: 5)
!3772 = !DILocation(line: 3790, column: 14, scope: !3771)
!3773 = !DILocation(line: 3790, column: 21, scope: !3771)
!3774 = !DILocation(line: 3790, column: 20, scope: !3771)
!3775 = !DILocation(line: 3792, column: 23, scope: !3771)
!3776 = !DILocation(line: 3792, column: 29, scope: !3771)
!3777 = !DILocation(line: 3792, column: 7, scope: !3771)
!3778 = !DILocation(line: 3793, column: 5, scope: !3771)
!3779 = !DILocation(line: 3788, column: 59, scope: !3767)
!3780 = !DILocation(line: 3788, column: 3, scope: !3767)
!3781 = distinct !{!3781, !3769, !3782}
!3782 = !DILocation(line: 3793, column: 5, scope: !3763)
!3783 = !DILocation(line: 3794, column: 1, scope: !3748)
!3784 = distinct !DISubprogram(name: "df_simulate_initialize_backwards", scope: !3, file: !3, line: 3827, type: !2530, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3785 = !DILocalVariable(name: "bb", arg: 1, scope: !3784, file: !3, line: 3827, type: !1357)
!3786 = !DILocation(line: 3827, column: 47, scope: !3784)
!3787 = !DILocalVariable(name: "live", arg: 2, scope: !3784, file: !3, line: 3827, type: !802)
!3788 = !DILocation(line: 3827, column: 58, scope: !3784)
!3789 = !DILocalVariable(name: "def_rec", scope: !3784, file: !3, line: 3829, type: !1998)
!3790 = !DILocation(line: 3829, column: 11, scope: !3784)
!3791 = !DILocalVariable(name: "use_rec", scope: !3784, file: !3, line: 3830, type: !1998)
!3792 = !DILocation(line: 3830, column: 11, scope: !3784)
!3793 = !DILocalVariable(name: "bb_index", scope: !3784, file: !3, line: 3831, type: !855)
!3794 = !DILocation(line: 3831, column: 7, scope: !3784)
!3795 = !DILocation(line: 3831, column: 18, scope: !3784)
!3796 = !DILocation(line: 3831, column: 22, scope: !3784)
!3797 = !DILocation(line: 3833, column: 42, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 3833, column: 3)
!3799 = !DILocation(line: 3833, column: 18, scope: !3798)
!3800 = !DILocation(line: 3833, column: 16, scope: !3798)
!3801 = !DILocation(line: 3833, column: 8, scope: !3798)
!3802 = !DILocation(line: 3833, column: 54, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 3833, column: 3)
!3804 = !DILocation(line: 3833, column: 53, scope: !3803)
!3805 = !DILocation(line: 3833, column: 3, scope: !3798)
!3806 = !DILocalVariable(name: "def", scope: !3807, file: !3, line: 3835, type: !872)
!3807 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 3834, column: 5)
!3808 = !DILocation(line: 3835, column: 14, scope: !3807)
!3809 = !DILocation(line: 3835, column: 21, scope: !3807)
!3810 = !DILocation(line: 3835, column: 20, scope: !3807)
!3811 = !DILocation(line: 3836, column: 12, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 3836, column: 11)
!3813 = !DILocation(line: 3836, column: 31, scope: !3812)
!3814 = !DILocation(line: 3836, column: 48, scope: !3812)
!3815 = !DILocation(line: 3836, column: 11, scope: !3807)
!3816 = !DILocation(line: 3837, column: 20, scope: !3812)
!3817 = !DILocation(line: 3837, column: 26, scope: !3812)
!3818 = !DILocation(line: 3837, column: 2, scope: !3812)
!3819 = !DILocation(line: 3838, column: 5, scope: !3807)
!3820 = !DILocation(line: 3833, column: 70, scope: !3803)
!3821 = !DILocation(line: 3833, column: 3, scope: !3803)
!3822 = distinct !{!3822, !3805, !3823}
!3823 = !DILocation(line: 3838, column: 5, scope: !3798)
!3824 = !DILocation(line: 3840, column: 42, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 3840, column: 3)
!3826 = !DILocation(line: 3840, column: 18, scope: !3825)
!3827 = !DILocation(line: 3840, column: 16, scope: !3825)
!3828 = !DILocation(line: 3840, column: 8, scope: !3825)
!3829 = !DILocation(line: 3840, column: 54, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 3840, column: 3)
!3831 = !DILocation(line: 3840, column: 53, scope: !3830)
!3832 = !DILocation(line: 3840, column: 3, scope: !3825)
!3833 = !DILocalVariable(name: "use", scope: !3834, file: !3, line: 3842, type: !872)
!3834 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 3841, column: 5)
!3835 = !DILocation(line: 3842, column: 14, scope: !3834)
!3836 = !DILocation(line: 3842, column: 21, scope: !3834)
!3837 = !DILocation(line: 3842, column: 20, scope: !3834)
!3838 = !DILocation(line: 3843, column: 12, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 3843, column: 11)
!3840 = !DILocation(line: 3843, column: 31, scope: !3839)
!3841 = !DILocation(line: 3843, column: 48, scope: !3839)
!3842 = !DILocation(line: 3843, column: 11, scope: !3834)
!3843 = !DILocation(line: 3844, column: 18, scope: !3839)
!3844 = !DILocation(line: 3844, column: 24, scope: !3839)
!3845 = !DILocation(line: 3844, column: 2, scope: !3839)
!3846 = !DILocation(line: 3845, column: 5, scope: !3834)
!3847 = !DILocation(line: 3840, column: 70, scope: !3830)
!3848 = !DILocation(line: 3840, column: 3, scope: !3830)
!3849 = distinct !{!3849, !3832, !3850}
!3850 = !DILocation(line: 3845, column: 5, scope: !3825)
!3851 = !DILocation(line: 3846, column: 1, scope: !3784)
!3852 = distinct !DISubprogram(name: "df_simulate_one_insn_backwards", scope: !3, file: !3, line: 3852, type: !2592, scopeLine: 3853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3853 = !DILocalVariable(name: "bb", arg: 1, scope: !3852, file: !3, line: 3852, type: !1357)
!3854 = !DILocation(line: 3852, column: 45, scope: !3852)
!3855 = !DILocalVariable(name: "insn", arg: 2, scope: !3852, file: !3, line: 3852, type: !883)
!3856 = !DILocation(line: 3852, column: 53, scope: !3852)
!3857 = !DILocalVariable(name: "live", arg: 3, scope: !3852, file: !3, line: 3852, type: !802)
!3858 = !DILocation(line: 3852, column: 66, scope: !3852)
!3859 = !DILocation(line: 3854, column: 8, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 3854, column: 7)
!3861 = !DILocation(line: 3854, column: 7, scope: !3852)
!3862 = !DILocation(line: 3855, column: 5, scope: !3860)
!3863 = !DILocation(line: 3857, column: 21, scope: !3852)
!3864 = !DILocation(line: 3857, column: 27, scope: !3852)
!3865 = !DILocation(line: 3857, column: 3, scope: !3852)
!3866 = !DILocation(line: 3858, column: 21, scope: !3852)
!3867 = !DILocation(line: 3858, column: 27, scope: !3852)
!3868 = !DILocation(line: 3858, column: 3, scope: !3852)
!3869 = !DILocation(line: 3859, column: 27, scope: !3852)
!3870 = !DILocation(line: 3859, column: 31, scope: !3852)
!3871 = !DILocation(line: 3859, column: 3, scope: !3852)
!3872 = !DILocation(line: 3860, column: 1, scope: !3852)
!3873 = distinct !DISubprogram(name: "df_simulate_fixup_sets", scope: !3, file: !3, line: 3800, type: !2530, scopeLine: 3801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3874 = !DILocalVariable(name: "bb", arg: 1, scope: !3873, file: !3, line: 3800, type: !1357)
!3875 = !DILocation(line: 3800, column: 37, scope: !3873)
!3876 = !DILocalVariable(name: "live", arg: 2, scope: !3873, file: !3, line: 3800, type: !802)
!3877 = !DILocation(line: 3800, column: 48, scope: !3873)
!3878 = !DILocation(line: 3804, column: 23, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3873, file: !3, line: 3804, column: 7)
!3880 = !DILocation(line: 3804, column: 7, scope: !3879)
!3881 = !DILocation(line: 3804, column: 7, scope: !3873)
!3882 = !DILocation(line: 3805, column: 22, scope: !3879)
!3883 = !DILocation(line: 3805, column: 28, scope: !3879)
!3884 = !DILocation(line: 3805, column: 32, scope: !3879)
!3885 = !DILocation(line: 3805, column: 5, scope: !3879)
!3886 = !DILocation(line: 3807, column: 22, scope: !3879)
!3887 = !DILocation(line: 3807, column: 28, scope: !3879)
!3888 = !DILocation(line: 3807, column: 32, scope: !3879)
!3889 = !DILocation(line: 3807, column: 5, scope: !3879)
!3890 = !DILocation(line: 3808, column: 1, scope: !3873)
!3891 = distinct !DISubprogram(name: "df_simulate_finalize_backwards", scope: !3, file: !3, line: 3867, type: !2530, scopeLine: 3868, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3892 = !DILocalVariable(name: "bb", arg: 1, scope: !3891, file: !3, line: 3867, type: !1357)
!3893 = !DILocation(line: 3867, column: 45, scope: !3891)
!3894 = !DILocalVariable(name: "live", arg: 2, scope: !3891, file: !3, line: 3867, type: !802)
!3895 = !DILocation(line: 3867, column: 56, scope: !3891)
!3896 = !DILocalVariable(name: "def_rec", scope: !3891, file: !3, line: 3869, type: !1998)
!3897 = !DILocation(line: 3869, column: 11, scope: !3891)
!3898 = !DILocalVariable(name: "bb_index", scope: !3891, file: !3, line: 3873, type: !855)
!3899 = !DILocation(line: 3873, column: 7, scope: !3891)
!3900 = !DILocation(line: 3873, column: 18, scope: !3891)
!3901 = !DILocation(line: 3873, column: 22, scope: !3891)
!3902 = !DILocation(line: 3875, column: 42, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 3875, column: 3)
!3904 = !DILocation(line: 3875, column: 18, scope: !3903)
!3905 = !DILocation(line: 3875, column: 16, scope: !3903)
!3906 = !DILocation(line: 3875, column: 8, scope: !3903)
!3907 = !DILocation(line: 3875, column: 54, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3903, file: !3, line: 3875, column: 3)
!3909 = !DILocation(line: 3875, column: 53, scope: !3908)
!3910 = !DILocation(line: 3875, column: 3, scope: !3903)
!3911 = !DILocalVariable(name: "def", scope: !3912, file: !3, line: 3877, type: !872)
!3912 = distinct !DILexicalBlock(scope: !3908, file: !3, line: 3876, column: 5)
!3913 = !DILocation(line: 3877, column: 14, scope: !3912)
!3914 = !DILocation(line: 3877, column: 21, scope: !3912)
!3915 = !DILocation(line: 3877, column: 20, scope: !3912)
!3916 = !DILocation(line: 3878, column: 11, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 3878, column: 11)
!3918 = !DILocation(line: 3878, column: 30, scope: !3917)
!3919 = !DILocation(line: 3878, column: 11, scope: !3912)
!3920 = !DILocation(line: 3879, column: 20, scope: !3917)
!3921 = !DILocation(line: 3879, column: 26, scope: !3917)
!3922 = !DILocation(line: 3879, column: 2, scope: !3917)
!3923 = !DILocation(line: 3880, column: 5, scope: !3912)
!3924 = !DILocation(line: 3875, column: 70, scope: !3908)
!3925 = !DILocation(line: 3875, column: 3, scope: !3908)
!3926 = distinct !{!3926, !3910, !3927}
!3927 = !DILocation(line: 3880, column: 5, scope: !3903)
!3928 = !DILocation(line: 3890, column: 1, scope: !3891)
!3929 = distinct !DISubprogram(name: "df_simulate_initialize_forwards", scope: !3, file: !3, line: 3912, type: !2530, scopeLine: 3913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3930 = !DILocalVariable(name: "bb", arg: 1, scope: !3929, file: !3, line: 3912, type: !1357)
!3931 = !DILocation(line: 3912, column: 46, scope: !3929)
!3932 = !DILocalVariable(name: "live", arg: 2, scope: !3929, file: !3, line: 3912, type: !802)
!3933 = !DILocation(line: 3912, column: 57, scope: !3929)
!3934 = !DILocalVariable(name: "def_rec", scope: !3929, file: !3, line: 3914, type: !1998)
!3935 = !DILocation(line: 3914, column: 11, scope: !3929)
!3936 = !DILocalVariable(name: "bb_index", scope: !3929, file: !3, line: 3915, type: !855)
!3937 = !DILocation(line: 3915, column: 7, scope: !3929)
!3938 = !DILocation(line: 3915, column: 18, scope: !3929)
!3939 = !DILocation(line: 3915, column: 22, scope: !3929)
!3940 = !DILocation(line: 3917, column: 42, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3929, file: !3, line: 3917, column: 3)
!3942 = !DILocation(line: 3917, column: 18, scope: !3941)
!3943 = !DILocation(line: 3917, column: 16, scope: !3941)
!3944 = !DILocation(line: 3917, column: 8, scope: !3941)
!3945 = !DILocation(line: 3917, column: 54, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 3917, column: 3)
!3947 = !DILocation(line: 3917, column: 53, scope: !3946)
!3948 = !DILocation(line: 3917, column: 3, scope: !3941)
!3949 = !DILocalVariable(name: "def", scope: !3950, file: !3, line: 3919, type: !872)
!3950 = distinct !DILexicalBlock(scope: !3946, file: !3, line: 3918, column: 5)
!3951 = !DILocation(line: 3919, column: 14, scope: !3950)
!3952 = !DILocation(line: 3919, column: 21, scope: !3950)
!3953 = !DILocation(line: 3919, column: 20, scope: !3950)
!3954 = !DILocation(line: 3920, column: 11, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 3920, column: 11)
!3956 = !DILocation(line: 3920, column: 30, scope: !3955)
!3957 = !DILocation(line: 3920, column: 11, scope: !3950)
!3958 = !DILocation(line: 3921, column: 20, scope: !3955)
!3959 = !DILocation(line: 3921, column: 26, scope: !3955)
!3960 = !DILocation(line: 3921, column: 2, scope: !3955)
!3961 = !DILocation(line: 3922, column: 5, scope: !3950)
!3962 = !DILocation(line: 3917, column: 70, scope: !3946)
!3963 = !DILocation(line: 3917, column: 3, scope: !3946)
!3964 = distinct !{!3964, !3948, !3965}
!3965 = !DILocation(line: 3922, column: 5, scope: !3941)
!3966 = !DILocation(line: 3923, column: 1, scope: !3929)
!3967 = distinct !DISubprogram(name: "df_simulate_one_insn_forwards", scope: !3, file: !3, line: 3928, type: !2592, scopeLine: 3929, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!3968 = !DILocalVariable(name: "bb", arg: 1, scope: !3967, file: !3, line: 3928, type: !1357)
!3969 = !DILocation(line: 3928, column: 44, scope: !3967)
!3970 = !DILocalVariable(name: "insn", arg: 2, scope: !3967, file: !3, line: 3928, type: !883)
!3971 = !DILocation(line: 3928, column: 52, scope: !3967)
!3972 = !DILocalVariable(name: "live", arg: 3, scope: !3967, file: !3, line: 3928, type: !802)
!3973 = !DILocation(line: 3928, column: 65, scope: !3967)
!3974 = !DILocalVariable(name: "link", scope: !3967, file: !3, line: 3930, type: !883)
!3975 = !DILocation(line: 3930, column: 7, scope: !3967)
!3976 = !DILocation(line: 3931, column: 9, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 3931, column: 7)
!3978 = !DILocation(line: 3931, column: 7, scope: !3967)
!3979 = !DILocation(line: 3932, column: 5, scope: !3977)
!3980 = !DILocation(line: 3935, column: 3, scope: !3967)
!3981 = !DILocation(line: 3942, column: 26, scope: !3967)
!3982 = !DILocation(line: 3942, column: 32, scope: !3967)
!3983 = !DILocation(line: 3942, column: 3, scope: !3967)
!3984 = !DILocation(line: 3945, column: 15, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 3945, column: 3)
!3986 = !DILocation(line: 3945, column: 13, scope: !3985)
!3987 = !DILocation(line: 3945, column: 8, scope: !3985)
!3988 = !DILocation(line: 3945, column: 33, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 3945, column: 3)
!3990 = !DILocation(line: 3945, column: 3, scope: !3985)
!3991 = !DILocation(line: 3947, column: 15, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3989, file: !3, line: 3946, column: 5)
!3993 = !DILocation(line: 3947, column: 7, scope: !3992)
!3994 = !DILocalVariable(name: "reg", scope: !3995, file: !3, line: 3952, type: !883)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 3951, column: 4)
!3996 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 3948, column: 2)
!3997 = !DILocation(line: 3952, column: 10, scope: !3995)
!3998 = !DILocation(line: 3952, column: 16, scope: !3995)
!3999 = !DILocalVariable(name: "regno", scope: !3995, file: !3, line: 3953, type: !855)
!4000 = !DILocation(line: 3953, column: 10, scope: !3995)
!4001 = !DILocation(line: 3953, column: 18, scope: !3995)
!4002 = !DILocation(line: 3954, column: 10, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 3954, column: 10)
!4004 = !DILocation(line: 3954, column: 16, scope: !4003)
!4005 = !DILocation(line: 3954, column: 10, scope: !3995)
!4006 = !DILocalVariable(name: "n", scope: !4007, file: !3, line: 3956, type: !855)
!4007 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 3955, column: 8)
!4008 = !DILocation(line: 3956, column: 7, scope: !4007)
!4009 = !DILocation(line: 3956, column: 28, scope: !4007)
!4010 = !DILocation(line: 3956, column: 11, scope: !4007)
!4011 = !DILocation(line: 3956, column: 35, scope: !4007)
!4012 = !DILocation(line: 3957, column: 3, scope: !4007)
!4013 = !DILocation(line: 3957, column: 10, scope: !4007)
!4014 = !DILocation(line: 3957, column: 14, scope: !4007)
!4015 = !DILocation(line: 3958, column: 23, scope: !4007)
!4016 = !DILocation(line: 3958, column: 29, scope: !4007)
!4017 = !DILocation(line: 3958, column: 37, scope: !4007)
!4018 = !DILocation(line: 3958, column: 35, scope: !4007)
!4019 = !DILocation(line: 3958, column: 5, scope: !4007)
!4020 = distinct !{!4020, !4012, !4021}
!4021 = !DILocation(line: 3958, column: 38, scope: !4007)
!4022 = !DILocation(line: 3959, column: 8, scope: !4007)
!4023 = !DILocation(line: 3961, column: 26, scope: !4003)
!4024 = !DILocation(line: 3961, column: 32, scope: !4003)
!4025 = !DILocation(line: 3961, column: 8, scope: !4003)
!4026 = !DILocation(line: 3963, column: 4, scope: !3996)
!4027 = !DILocation(line: 3965, column: 4, scope: !3996)
!4028 = !DILocation(line: 3967, column: 5, scope: !3992)
!4029 = !DILocation(line: 3945, column: 46, scope: !3989)
!4030 = !DILocation(line: 3945, column: 44, scope: !3989)
!4031 = !DILocation(line: 3945, column: 3, scope: !3989)
!4032 = distinct !{!4032, !3990, !4033}
!4033 = !DILocation(line: 3967, column: 5, scope: !3985)
!4034 = !DILocation(line: 3968, column: 27, scope: !3967)
!4035 = !DILocation(line: 3968, column: 31, scope: !3967)
!4036 = !DILocation(line: 3968, column: 3, scope: !3967)
!4037 = !DILocation(line: 3969, column: 1, scope: !3967)
!4038 = distinct !DISubprogram(name: "rhs_regno", scope: !610, file: !610, line: 1051, type: !4039, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!7, !4041}
!4041 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !803, line: 51, baseType: !4042)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !885)
!4044 = !DILocalVariable(name: "x", arg: 1, scope: !4038, file: !610, line: 1051, type: !4041)
!4045 = !DILocation(line: 1051, column: 22, scope: !4038)
!4046 = !DILocation(line: 1053, column: 10, scope: !4038)
!4047 = !DILocation(line: 1053, column: 3, scope: !4038)
!4048 = distinct !DISubprogram(name: "df_md_simulate_artificial_defs_at_top", scope: !3, file: !3, line: 4099, type: !2530, scopeLine: 4100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4049 = !DILocalVariable(name: "bb", arg: 1, scope: !4048, file: !3, line: 4099, type: !1357)
!4050 = !DILocation(line: 4099, column: 52, scope: !4048)
!4051 = !DILocalVariable(name: "local_md", arg: 2, scope: !4048, file: !3, line: 4099, type: !802)
!4052 = !DILocation(line: 4099, column: 63, scope: !4048)
!4053 = !DILocalVariable(name: "bb_index", scope: !4048, file: !3, line: 4101, type: !855)
!4054 = !DILocation(line: 4101, column: 7, scope: !4048)
!4055 = !DILocation(line: 4101, column: 18, scope: !4048)
!4056 = !DILocation(line: 4101, column: 22, scope: !4048)
!4057 = !DILocalVariable(name: "def_rec", scope: !4048, file: !3, line: 4102, type: !1998)
!4058 = !DILocation(line: 4102, column: 11, scope: !4048)
!4059 = !DILocation(line: 4103, column: 42, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4048, file: !3, line: 4103, column: 3)
!4061 = !DILocation(line: 4103, column: 18, scope: !4060)
!4062 = !DILocation(line: 4103, column: 16, scope: !4060)
!4063 = !DILocation(line: 4103, column: 8, scope: !4060)
!4064 = !DILocation(line: 4103, column: 54, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 4103, column: 3)
!4066 = !DILocation(line: 4103, column: 53, scope: !4065)
!4067 = !DILocation(line: 4103, column: 3, scope: !4060)
!4068 = !DILocalVariable(name: "def", scope: !4069, file: !3, line: 4105, type: !872)
!4069 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 4104, column: 5)
!4070 = !DILocation(line: 4105, column: 14, scope: !4069)
!4071 = !DILocation(line: 4105, column: 21, scope: !4069)
!4072 = !DILocation(line: 4105, column: 20, scope: !4069)
!4073 = !DILocation(line: 4106, column: 11, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 4106, column: 11)
!4075 = !DILocation(line: 4106, column: 30, scope: !4074)
!4076 = !DILocation(line: 4106, column: 11, scope: !4069)
!4077 = !DILocalVariable(name: "dregno", scope: !4078, file: !3, line: 4108, type: !7)
!4078 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 4107, column: 2)
!4079 = !DILocation(line: 4108, column: 17, scope: !4078)
!4080 = !DILocation(line: 4108, column: 26, scope: !4078)
!4081 = !DILocation(line: 4109, column: 8, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4078, file: !3, line: 4109, column: 8)
!4083 = !DILocation(line: 4110, column: 8, scope: !4082)
!4084 = !DILocation(line: 4109, column: 8, scope: !4078)
!4085 = !DILocation(line: 4111, column: 22, scope: !4082)
!4086 = !DILocation(line: 4111, column: 32, scope: !4082)
!4087 = !DILocation(line: 4111, column: 6, scope: !4082)
!4088 = !DILocation(line: 4113, column: 24, scope: !4082)
!4089 = !DILocation(line: 4113, column: 34, scope: !4082)
!4090 = !DILocation(line: 4113, column: 6, scope: !4082)
!4091 = !DILocation(line: 4114, column: 2, scope: !4078)
!4092 = !DILocation(line: 4115, column: 5, scope: !4069)
!4093 = !DILocation(line: 4103, column: 70, scope: !4065)
!4094 = !DILocation(line: 4103, column: 3, scope: !4065)
!4095 = distinct !{!4095, !4067, !4096}
!4096 = !DILocation(line: 4115, column: 5, scope: !4060)
!4097 = !DILocation(line: 4116, column: 1, scope: !4048)
!4098 = distinct !DISubprogram(name: "df_md_simulate_one_insn", scope: !3, file: !3, line: 4123, type: !2592, scopeLine: 4125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4099 = !DILocalVariable(name: "bb", arg: 1, scope: !4098, file: !3, line: 4123, type: !1357)
!4100 = !DILocation(line: 4123, column: 38, scope: !4098)
!4101 = !DILocalVariable(name: "insn", arg: 2, scope: !4098, file: !3, line: 4123, type: !883)
!4102 = !DILocation(line: 4123, column: 63, scope: !4098)
!4103 = !DILocalVariable(name: "local_md", arg: 3, scope: !4098, file: !3, line: 4124, type: !802)
!4104 = !DILocation(line: 4124, column: 32, scope: !4098)
!4105 = !DILocalVariable(name: "uid", scope: !4098, file: !3, line: 4126, type: !7)
!4106 = !DILocation(line: 4126, column: 12, scope: !4098)
!4107 = !DILocation(line: 4126, column: 18, scope: !4098)
!4108 = !DILocalVariable(name: "def_rec", scope: !4098, file: !3, line: 4127, type: !1998)
!4109 = !DILocation(line: 4127, column: 11, scope: !4098)
!4110 = !DILocation(line: 4129, column: 18, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 4129, column: 3)
!4112 = !DILocation(line: 4129, column: 16, scope: !4111)
!4113 = !DILocation(line: 4129, column: 8, scope: !4111)
!4114 = !DILocation(line: 4129, column: 43, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 4129, column: 3)
!4116 = !DILocation(line: 4129, column: 42, scope: !4115)
!4117 = !DILocation(line: 4129, column: 3, scope: !4111)
!4118 = !DILocalVariable(name: "def", scope: !4119, file: !3, line: 4131, type: !872)
!4119 = distinct !DILexicalBlock(scope: !4115, file: !3, line: 4130, column: 5)
!4120 = !DILocation(line: 4131, column: 14, scope: !4119)
!4121 = !DILocation(line: 4131, column: 21, scope: !4119)
!4122 = !DILocation(line: 4131, column: 20, scope: !4119)
!4123 = !DILocalVariable(name: "dregno", scope: !4119, file: !3, line: 4132, type: !7)
!4124 = !DILocation(line: 4132, column: 20, scope: !4119)
!4125 = !DILocation(line: 4132, column: 29, scope: !4119)
!4126 = !DILocation(line: 4133, column: 14, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 4133, column: 11)
!4128 = !DILocation(line: 4133, column: 18, scope: !4127)
!4129 = !DILocation(line: 4133, column: 35, scope: !4127)
!4130 = !DILocation(line: 4134, column: 11, scope: !4127)
!4131 = !DILocation(line: 4134, column: 15, scope: !4127)
!4132 = !DILocation(line: 4134, column: 22, scope: !4127)
!4133 = !DILocation(line: 4133, column: 11, scope: !4119)
!4134 = !DILocation(line: 4136, column: 15, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 4136, column: 15)
!4136 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 4135, column: 9)
!4137 = !DILocation(line: 4137, column: 8, scope: !4135)
!4138 = !DILocation(line: 4136, column: 15, scope: !4136)
!4139 = !DILocation(line: 4138, column: 28, scope: !4135)
!4140 = !DILocation(line: 4138, column: 38, scope: !4135)
!4141 = !DILocation(line: 4138, column: 12, scope: !4135)
!4142 = !DILocation(line: 4140, column: 30, scope: !4135)
!4143 = !DILocation(line: 4140, column: 40, scope: !4135)
!4144 = !DILocation(line: 4140, column: 12, scope: !4135)
!4145 = !DILocation(line: 4141, column: 9, scope: !4136)
!4146 = !DILocation(line: 4142, column: 5, scope: !4119)
!4147 = !DILocation(line: 4129, column: 59, scope: !4115)
!4148 = !DILocation(line: 4129, column: 3, scope: !4115)
!4149 = distinct !{!4149, !4117, !4150}
!4150 = !DILocation(line: 4142, column: 5, scope: !4111)
!4151 = !DILocation(line: 4143, column: 1, scope: !4098)
!4152 = distinct !DISubprogram(name: "df_md_add_problem", scope: !3, file: !3, line: 4426, type: !2195, scopeLine: 4427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4153 = !DILocation(line: 4428, column: 3, scope: !4152)
!4154 = !DILocation(line: 4429, column: 1, scope: !4152)
!4155 = distinct !DISubprogram(name: "ei_end_p", scope: !142, file: !142, line: 721, type: !4156, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!1052, !2430}
!4158 = !DILocalVariable(name: "i", arg: 1, scope: !4155, file: !142, line: 721, type: !2430)
!4159 = !DILocation(line: 721, column: 25, scope: !4155)
!4160 = !DILocation(line: 723, column: 13, scope: !4155)
!4161 = !DILocation(line: 723, column: 22, scope: !4155)
!4162 = !DILocation(line: 723, column: 19, scope: !4155)
!4163 = !DILocation(line: 723, column: 10, scope: !4155)
!4164 = !DILocation(line: 723, column: 3, scope: !4155)
!4165 = distinct !DISubprogram(name: "ei_edge", scope: !142, file: !142, line: 752, type: !4166, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4166 = !DISubroutineType(types: !4167)
!4167 = !{!1374, !2430}
!4168 = !DILocalVariable(name: "i", arg: 1, scope: !4165, file: !142, line: 752, type: !2430)
!4169 = !DILocation(line: 752, column: 24, scope: !4165)
!4170 = !DILocation(line: 754, column: 10, scope: !4165)
!4171 = !DILocation(line: 754, column: 3, scope: !4165)
!4172 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !142, file: !142, line: 150, type: !4173, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{!7, !4175}
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1367)
!4177 = !DILocalVariable(name: "vec_", arg: 1, scope: !4172, file: !142, line: 150, type: !4175)
!4178 = !DILocation(line: 150, column: 1, scope: !4172)
!4179 = distinct !DISubprogram(name: "ei_container", scope: !142, file: !142, line: 685, type: !4180, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!1362, !2430}
!4182 = !DILocalVariable(name: "i", arg: 1, scope: !4179, file: !142, line: 685, type: !2430)
!4183 = !DILocation(line: 685, column: 29, scope: !4179)
!4184 = !DILocation(line: 687, column: 3, scope: !4179)
!4185 = !DILocation(line: 688, column: 13, scope: !4179)
!4186 = !DILocation(line: 688, column: 10, scope: !4179)
!4187 = !DILocation(line: 688, column: 3, scope: !4179)
!4188 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !142, file: !142, line: 150, type: !4189, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!1374, !4175, !7}
!4191 = !DILocalVariable(name: "vec_", arg: 1, scope: !4188, file: !142, line: 150, type: !4175)
!4192 = !DILocation(line: 150, column: 1, scope: !4188)
!4193 = !DILocalVariable(name: "ix_", arg: 2, scope: !4188, file: !142, line: 150, type: !7)
!4194 = !DILocation(line: 0, scope: !4188)
!4195 = distinct !DISubprogram(name: "df_rd_alloc", scope: !3, file: !3, line: 240, type: !2121, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4196 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !4195, file: !3, line: 240, type: !802)
!4197 = !DILocation(line: 240, column: 21, scope: !4195)
!4198 = !DILocalVariable(name: "bb_index", scope: !4195, file: !3, line: 242, type: !7)
!4199 = !DILocation(line: 242, column: 16, scope: !4195)
!4200 = !DILocalVariable(name: "bi", scope: !4195, file: !3, line: 243, type: !4201)
!4201 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !806, line: 218, baseType: !4202)
!4202 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !806, line: 203, size: 256, elements: !4203)
!4203 = !{!4204, !4205, !4206, !4207}
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !4202, file: !806, line: 206, baseType: !809, size: 64)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !4202, file: !806, line: 209, baseType: !809, size: 64, offset: 64)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !4202, file: !806, line: 212, baseType: !7, size: 32, offset: 128)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !4202, file: !806, line: 217, baseType: !819, size: 64, offset: 192)
!4208 = !DILocation(line: 243, column: 19, scope: !4195)
!4209 = !DILocalVariable(name: "problem_data", scope: !4195, file: !3, line: 244, type: !2061)
!4210 = !DILocation(line: 244, column: 30, scope: !4195)
!4211 = !DILocation(line: 246, column: 8, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 246, column: 7)
!4213 = !DILocation(line: 246, column: 15, scope: !4212)
!4214 = !DILocation(line: 246, column: 7, scope: !4195)
!4215 = !DILocation(line: 247, column: 25, scope: !4212)
!4216 = !DILocation(line: 247, column: 5, scope: !4212)
!4217 = !DILocation(line: 247, column: 12, scope: !4212)
!4218 = !DILocation(line: 247, column: 23, scope: !4212)
!4219 = !DILocation(line: 250, column: 7, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 250, column: 7)
!4221 = !DILocation(line: 250, column: 14, scope: !4220)
!4222 = !DILocation(line: 250, column: 7, scope: !4195)
!4223 = !DILocation(line: 252, column: 52, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 251, column: 5)
!4225 = !DILocation(line: 252, column: 59, scope: !4224)
!4226 = !DILocation(line: 252, column: 22, scope: !4224)
!4227 = !DILocation(line: 252, column: 20, scope: !4224)
!4228 = !DILocation(line: 253, column: 21, scope: !4224)
!4229 = !DILocation(line: 253, column: 35, scope: !4224)
!4230 = !DILocation(line: 253, column: 7, scope: !4224)
!4231 = !DILocation(line: 254, column: 21, scope: !4224)
!4232 = !DILocation(line: 254, column: 35, scope: !4224)
!4233 = !DILocation(line: 254, column: 7, scope: !4224)
!4234 = !DILocation(line: 255, column: 5, scope: !4224)
!4235 = !DILocation(line: 258, column: 22, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 257, column: 5)
!4237 = !DILocation(line: 258, column: 20, scope: !4236)
!4238 = !DILocation(line: 259, column: 29, scope: !4236)
!4239 = !DILocation(line: 259, column: 7, scope: !4236)
!4240 = !DILocation(line: 259, column: 14, scope: !4236)
!4241 = !DILocation(line: 259, column: 27, scope: !4236)
!4242 = !DILocation(line: 261, column: 35, scope: !4236)
!4243 = !DILocation(line: 261, column: 49, scope: !4236)
!4244 = !DILocation(line: 261, column: 7, scope: !4236)
!4245 = !DILocation(line: 263, column: 4, scope: !4236)
!4246 = !DILocation(line: 262, column: 7, scope: !4236)
!4247 = !DILocation(line: 262, column: 21, scope: !4236)
!4248 = !DILocation(line: 263, column: 2, scope: !4236)
!4249 = !DILocation(line: 265, column: 4, scope: !4236)
!4250 = !DILocation(line: 264, column: 7, scope: !4236)
!4251 = !DILocation(line: 264, column: 21, scope: !4236)
!4252 = !DILocation(line: 265, column: 2, scope: !4236)
!4253 = !DILocation(line: 268, column: 20, scope: !4195)
!4254 = !DILocation(line: 268, column: 3, scope: !4195)
!4255 = !DILocation(line: 274, column: 3, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 274, column: 3)
!4257 = !DILocation(line: 274, column: 3, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 274, column: 3)
!4259 = !DILocalVariable(name: "bb_info", scope: !4260, file: !3, line: 276, type: !2067)
!4260 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 275, column: 5)
!4261 = !DILocation(line: 276, column: 29, scope: !4260)
!4262 = !DILocation(line: 276, column: 58, scope: !4260)
!4263 = !DILocation(line: 276, column: 39, scope: !4260)
!4264 = !DILocation(line: 277, column: 11, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 277, column: 11)
!4266 = !DILocation(line: 277, column: 11, scope: !4260)
!4267 = !DILocation(line: 279, column: 18, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 278, column: 2)
!4269 = !DILocation(line: 279, column: 27, scope: !4268)
!4270 = !DILocation(line: 279, column: 4, scope: !4268)
!4271 = !DILocation(line: 280, column: 18, scope: !4268)
!4272 = !DILocation(line: 280, column: 27, scope: !4268)
!4273 = !DILocation(line: 280, column: 4, scope: !4268)
!4274 = !DILocation(line: 281, column: 18, scope: !4268)
!4275 = !DILocation(line: 281, column: 27, scope: !4268)
!4276 = !DILocation(line: 281, column: 4, scope: !4268)
!4277 = !DILocation(line: 282, column: 2, scope: !4268)
!4278 = !DILocation(line: 285, column: 51, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4265, file: !3, line: 284, column: 2)
!4280 = !DILocation(line: 285, column: 58, scope: !4279)
!4281 = !DILocation(line: 285, column: 39, scope: !4279)
!4282 = !DILocation(line: 285, column: 14, scope: !4279)
!4283 = !DILocation(line: 285, column: 12, scope: !4279)
!4284 = !DILocation(line: 286, column: 23, scope: !4279)
!4285 = !DILocation(line: 286, column: 33, scope: !4279)
!4286 = !DILocation(line: 286, column: 4, scope: !4279)
!4287 = !DILocation(line: 287, column: 20, scope: !4279)
!4288 = !DILocation(line: 287, column: 4, scope: !4279)
!4289 = !DILocation(line: 287, column: 13, scope: !4279)
!4290 = !DILocation(line: 287, column: 18, scope: !4279)
!4291 = !DILocation(line: 288, column: 27, scope: !4279)
!4292 = !DILocation(line: 288, column: 4, scope: !4279)
!4293 = !DILocation(line: 288, column: 13, scope: !4279)
!4294 = !DILocation(line: 288, column: 25, scope: !4279)
!4295 = !DILocation(line: 289, column: 19, scope: !4279)
!4296 = !DILocation(line: 289, column: 4, scope: !4279)
!4297 = !DILocation(line: 289, column: 13, scope: !4279)
!4298 = !DILocation(line: 289, column: 17, scope: !4279)
!4299 = !DILocation(line: 290, column: 18, scope: !4279)
!4300 = !DILocation(line: 290, column: 4, scope: !4279)
!4301 = !DILocation(line: 290, column: 13, scope: !4279)
!4302 = !DILocation(line: 290, column: 16, scope: !4279)
!4303 = !DILocation(line: 291, column: 19, scope: !4279)
!4304 = !DILocation(line: 291, column: 4, scope: !4279)
!4305 = !DILocation(line: 291, column: 13, scope: !4279)
!4306 = !DILocation(line: 291, column: 17, scope: !4279)
!4307 = !DILocation(line: 293, column: 5, scope: !4260)
!4308 = distinct !{!4308, !4255, !4309}
!4309 = !DILocation(line: 293, column: 5, scope: !4256)
!4310 = !DILocation(line: 294, column: 3, scope: !4195)
!4311 = !DILocation(line: 294, column: 10, scope: !4195)
!4312 = !DILocation(line: 294, column: 21, scope: !4195)
!4313 = !DILocation(line: 295, column: 1, scope: !4195)
!4314 = distinct !DISubprogram(name: "df_rd_free_bb_info", scope: !3, file: !3, line: 220, type: !2128, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4315 = !DILocalVariable(name: "bb", arg: 1, scope: !4314, file: !3, line: 220, type: !1357)
!4316 = !DILocation(line: 220, column: 33, scope: !4314)
!4317 = !DILocalVariable(name: "vbb_info", arg: 2, scope: !4314, file: !3, line: 221, type: !801)
!4318 = !DILocation(line: 221, column: 13, scope: !4314)
!4319 = !DILocalVariable(name: "bb_info", scope: !4314, file: !3, line: 223, type: !2067)
!4320 = !DILocation(line: 223, column: 25, scope: !4314)
!4321 = !DILocation(line: 223, column: 60, scope: !4314)
!4322 = !DILocation(line: 223, column: 35, scope: !4314)
!4323 = !DILocation(line: 224, column: 7, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 224, column: 7)
!4325 = !DILocation(line: 224, column: 7, scope: !4314)
!4326 = !DILocation(line: 226, column: 7, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4324, file: !3, line: 225, column: 5)
!4328 = !DILocation(line: 227, column: 7, scope: !4327)
!4329 = !DILocation(line: 228, column: 7, scope: !4327)
!4330 = !DILocation(line: 229, column: 7, scope: !4327)
!4331 = !DILocation(line: 230, column: 7, scope: !4327)
!4332 = !DILocation(line: 231, column: 18, scope: !4327)
!4333 = !DILocation(line: 231, column: 25, scope: !4327)
!4334 = !DILocation(line: 231, column: 37, scope: !4327)
!4335 = !DILocation(line: 231, column: 7, scope: !4327)
!4336 = !DILocation(line: 232, column: 5, scope: !4327)
!4337 = !DILocation(line: 233, column: 1, scope: !4314)
!4338 = distinct !DISubprogram(name: "df_rd_local_compute", scope: !3, file: !3, line: 459, type: !2121, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4339 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !4338, file: !3, line: 459, type: !802)
!4340 = !DILocation(line: 459, column: 29, scope: !4338)
!4341 = !DILocalVariable(name: "bb_index", scope: !4338, file: !3, line: 461, type: !7)
!4342 = !DILocation(line: 461, column: 16, scope: !4338)
!4343 = !DILocalVariable(name: "bi", scope: !4338, file: !3, line: 462, type: !4201)
!4344 = !DILocation(line: 462, column: 19, scope: !4338)
!4345 = !DILocalVariable(name: "regno", scope: !4338, file: !3, line: 463, type: !7)
!4346 = !DILocation(line: 463, column: 16, scope: !4338)
!4347 = !DILocalVariable(name: "problem_data", scope: !4338, file: !3, line: 464, type: !2061)
!4348 = !DILocation(line: 464, column: 30, scope: !4338)
!4349 = !DILocation(line: 465, column: 37, scope: !4338)
!4350 = !DILocation(line: 465, column: 44, scope: !4338)
!4351 = !DILocation(line: 465, column: 7, scope: !4338)
!4352 = !DILocalVariable(name: "sparse_invalidated", scope: !4338, file: !3, line: 466, type: !802)
!4353 = !DILocation(line: 466, column: 10, scope: !4338)
!4354 = !DILocation(line: 466, column: 31, scope: !4338)
!4355 = !DILocation(line: 466, column: 45, scope: !4338)
!4356 = !DILocalVariable(name: "dense_invalidated", scope: !4338, file: !3, line: 467, type: !802)
!4357 = !DILocation(line: 467, column: 10, scope: !4338)
!4358 = !DILocation(line: 467, column: 30, scope: !4338)
!4359 = !DILocation(line: 467, column: 44, scope: !4338)
!4360 = !DILocation(line: 469, column: 19, scope: !4338)
!4361 = !DILocation(line: 469, column: 17, scope: !4338)
!4362 = !DILocation(line: 470, column: 18, scope: !4338)
!4363 = !DILocation(line: 470, column: 16, scope: !4338)
!4364 = !DILocation(line: 472, column: 3, scope: !4338)
!4365 = !DILocation(line: 474, column: 3, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 474, column: 3)
!4367 = !DILocation(line: 474, column: 3, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 474, column: 3)
!4369 = !DILocation(line: 476, column: 31, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 475, column: 5)
!4371 = !DILocation(line: 476, column: 7, scope: !4370)
!4372 = !DILocation(line: 477, column: 5, scope: !4370)
!4373 = distinct !{!4373, !4365, !4374}
!4374 = !DILocation(line: 477, column: 5, scope: !4366)
!4375 = !DILocation(line: 480, column: 3, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 480, column: 3)
!4377 = !DILocation(line: 480, column: 3, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 480, column: 3)
!4379 = !DILocation(line: 482, column: 11, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 482, column: 11)
!4381 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 481, column: 5)
!4382 = !DILocation(line: 482, column: 33, scope: !4380)
!4383 = !DILocation(line: 482, column: 11, scope: !4381)
!4384 = !DILocation(line: 483, column: 18, scope: !4380)
!4385 = !DILocation(line: 483, column: 38, scope: !4380)
!4386 = !DILocation(line: 483, column: 2, scope: !4380)
!4387 = !DILocation(line: 485, column: 20, scope: !4380)
!4388 = !DILocation(line: 486, column: 6, scope: !4380)
!4389 = !DILocation(line: 487, column: 6, scope: !4380)
!4390 = !DILocation(line: 485, column: 2, scope: !4380)
!4391 = !DILocation(line: 488, column: 5, scope: !4381)
!4392 = distinct !{!4392, !4375, !4393}
!4393 = !DILocation(line: 488, column: 5, scope: !4376)
!4394 = !DILocation(line: 490, column: 3, scope: !4338)
!4395 = !DILocation(line: 491, column: 3, scope: !4338)
!4396 = !DILocation(line: 492, column: 1, scope: !4338)
!4397 = distinct !DISubprogram(name: "df_rd_init_solution", scope: !3, file: !3, line: 498, type: !2121, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4398 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !4397, file: !3, line: 498, type: !802)
!4399 = !DILocation(line: 498, column: 29, scope: !4397)
!4400 = !DILocalVariable(name: "bb_index", scope: !4397, file: !3, line: 500, type: !7)
!4401 = !DILocation(line: 500, column: 16, scope: !4397)
!4402 = !DILocalVariable(name: "bi", scope: !4397, file: !3, line: 501, type: !4201)
!4403 = !DILocation(line: 501, column: 19, scope: !4397)
!4404 = !DILocation(line: 503, column: 3, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 503, column: 3)
!4406 = !DILocation(line: 503, column: 3, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 503, column: 3)
!4408 = !DILocalVariable(name: "bb_info", scope: !4409, file: !3, line: 505, type: !2067)
!4409 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 504, column: 5)
!4410 = !DILocation(line: 505, column: 29, scope: !4409)
!4411 = !DILocation(line: 505, column: 58, scope: !4409)
!4412 = !DILocation(line: 505, column: 39, scope: !4409)
!4413 = !DILocation(line: 507, column: 20, scope: !4409)
!4414 = !DILocation(line: 507, column: 29, scope: !4409)
!4415 = !DILocation(line: 507, column: 34, scope: !4409)
!4416 = !DILocation(line: 507, column: 43, scope: !4409)
!4417 = !DILocation(line: 507, column: 7, scope: !4409)
!4418 = !DILocation(line: 508, column: 21, scope: !4409)
!4419 = !DILocation(line: 508, column: 30, scope: !4409)
!4420 = !DILocation(line: 508, column: 7, scope: !4409)
!4421 = !DILocation(line: 509, column: 5, scope: !4409)
!4422 = distinct !{!4422, !4404, !4423}
!4423 = !DILocation(line: 509, column: 5, scope: !4405)
!4424 = !DILocation(line: 510, column: 1, scope: !4397)
!4425 = distinct !DISubprogram(name: "df_rd_confluence_n", scope: !3, file: !3, line: 515, type: !2183, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4426 = !DILocalVariable(name: "e", arg: 1, scope: !4425, file: !3, line: 515, type: !1374)
!4427 = !DILocation(line: 515, column: 26, scope: !4425)
!4428 = !DILocalVariable(name: "op1", scope: !4425, file: !3, line: 517, type: !802)
!4429 = !DILocation(line: 517, column: 10, scope: !4425)
!4430 = !DILocation(line: 517, column: 35, scope: !4425)
!4431 = !DILocation(line: 517, column: 38, scope: !4425)
!4432 = !DILocation(line: 517, column: 44, scope: !4425)
!4433 = !DILocation(line: 517, column: 16, scope: !4425)
!4434 = !DILocation(line: 517, column: 52, scope: !4425)
!4435 = !DILocalVariable(name: "op2", scope: !4425, file: !3, line: 518, type: !802)
!4436 = !DILocation(line: 518, column: 10, scope: !4425)
!4437 = !DILocation(line: 518, column: 35, scope: !4425)
!4438 = !DILocation(line: 518, column: 38, scope: !4425)
!4439 = !DILocation(line: 518, column: 43, scope: !4425)
!4440 = !DILocation(line: 518, column: 16, scope: !4425)
!4441 = !DILocation(line: 518, column: 51, scope: !4425)
!4442 = !DILocation(line: 520, column: 7, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 520, column: 7)
!4444 = !DILocation(line: 520, column: 10, scope: !4443)
!4445 = !DILocation(line: 520, column: 16, scope: !4443)
!4446 = !DILocation(line: 520, column: 7, scope: !4425)
!4447 = !DILocation(line: 521, column: 5, scope: !4443)
!4448 = !DILocation(line: 523, column: 7, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 523, column: 7)
!4450 = !DILocation(line: 523, column: 10, scope: !4449)
!4451 = !DILocation(line: 523, column: 16, scope: !4449)
!4452 = !DILocation(line: 523, column: 7, scope: !4425)
!4453 = !DILocalVariable(name: "problem_data", scope: !4454, file: !3, line: 525, type: !2061)
!4454 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 524, column: 5)
!4455 = !DILocation(line: 525, column: 34, scope: !4454)
!4456 = !DILocation(line: 526, column: 34, scope: !4454)
!4457 = !DILocation(line: 526, column: 41, scope: !4454)
!4458 = !DILocation(line: 526, column: 4, scope: !4454)
!4459 = !DILocalVariable(name: "sparse_invalidated", scope: !4454, file: !3, line: 527, type: !802)
!4460 = !DILocation(line: 527, column: 14, scope: !4454)
!4461 = !DILocation(line: 527, column: 35, scope: !4454)
!4462 = !DILocation(line: 527, column: 49, scope: !4454)
!4463 = !DILocalVariable(name: "dense_invalidated", scope: !4454, file: !3, line: 528, type: !802)
!4464 = !DILocation(line: 528, column: 14, scope: !4454)
!4465 = !DILocation(line: 528, column: 34, scope: !4454)
!4466 = !DILocation(line: 528, column: 48, scope: !4454)
!4467 = !DILocalVariable(name: "bi", scope: !4454, file: !3, line: 529, type: !4201)
!4468 = !DILocation(line: 529, column: 23, scope: !4454)
!4469 = !DILocalVariable(name: "regno", scope: !4454, file: !3, line: 530, type: !7)
!4470 = !DILocation(line: 530, column: 20, scope: !4454)
!4471 = !DILocalVariable(name: "tmp", scope: !4454, file: !3, line: 531, type: !802)
!4472 = !DILocation(line: 531, column: 14, scope: !4454)
!4473 = !DILocation(line: 531, column: 20, scope: !4454)
!4474 = !DILocation(line: 533, column: 20, scope: !4454)
!4475 = !DILocation(line: 533, column: 25, scope: !4454)
!4476 = !DILocation(line: 533, column: 7, scope: !4454)
!4477 = !DILocation(line: 534, column: 30, scope: !4454)
!4478 = !DILocation(line: 534, column: 35, scope: !4454)
!4479 = !DILocation(line: 534, column: 7, scope: !4454)
!4480 = !DILocation(line: 536, column: 7, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 536, column: 7)
!4482 = !DILocation(line: 536, column: 7, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4481, file: !3, line: 536, column: 7)
!4484 = !DILocation(line: 538, column: 25, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 537, column: 3)
!4486 = !DILocation(line: 539, column: 11, scope: !4485)
!4487 = !DILocation(line: 540, column: 11, scope: !4485)
!4488 = !DILocation(line: 538, column: 5, scope: !4485)
!4489 = !DILocation(line: 541, column: 2, scope: !4485)
!4490 = distinct !{!4490, !4480, !4491}
!4491 = !DILocation(line: 541, column: 2, scope: !4481)
!4492 = !DILocation(line: 542, column: 24, scope: !4454)
!4493 = !DILocation(line: 542, column: 29, scope: !4454)
!4494 = !DILocation(line: 542, column: 7, scope: !4454)
!4495 = !DILocation(line: 543, column: 7, scope: !4454)
!4496 = !DILocation(line: 544, column: 5, scope: !4454)
!4497 = !DILocation(line: 546, column: 22, scope: !4449)
!4498 = !DILocation(line: 546, column: 27, scope: !4449)
!4499 = !DILocation(line: 546, column: 5, scope: !4449)
!4500 = !DILocation(line: 547, column: 1, scope: !4425)
!4501 = distinct !DISubprogram(name: "df_rd_transfer_function", scope: !3, file: !3, line: 553, type: !2188, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4502 = !DILocalVariable(name: "bb_index", arg: 1, scope: !4501, file: !3, line: 553, type: !855)
!4503 = !DILocation(line: 553, column: 30, scope: !4501)
!4504 = !DILocalVariable(name: "bb_info", scope: !4501, file: !3, line: 555, type: !2067)
!4505 = !DILocation(line: 555, column: 25, scope: !4501)
!4506 = !DILocation(line: 555, column: 54, scope: !4501)
!4507 = !DILocation(line: 555, column: 35, scope: !4501)
!4508 = !DILocalVariable(name: "regno", scope: !4501, file: !3, line: 556, type: !7)
!4509 = !DILocation(line: 556, column: 16, scope: !4501)
!4510 = !DILocalVariable(name: "bi", scope: !4501, file: !3, line: 557, type: !4201)
!4511 = !DILocation(line: 557, column: 19, scope: !4501)
!4512 = !DILocalVariable(name: "in", scope: !4501, file: !3, line: 558, type: !802)
!4513 = !DILocation(line: 558, column: 10, scope: !4501)
!4514 = !DILocation(line: 558, column: 15, scope: !4501)
!4515 = !DILocation(line: 558, column: 24, scope: !4501)
!4516 = !DILocalVariable(name: "out", scope: !4501, file: !3, line: 559, type: !802)
!4517 = !DILocation(line: 559, column: 10, scope: !4501)
!4518 = !DILocation(line: 559, column: 16, scope: !4501)
!4519 = !DILocation(line: 559, column: 25, scope: !4501)
!4520 = !DILocalVariable(name: "gen", scope: !4501, file: !3, line: 560, type: !802)
!4521 = !DILocation(line: 560, column: 10, scope: !4501)
!4522 = !DILocation(line: 560, column: 16, scope: !4501)
!4523 = !DILocation(line: 560, column: 25, scope: !4501)
!4524 = !DILocalVariable(name: "kill", scope: !4501, file: !3, line: 561, type: !802)
!4525 = !DILocation(line: 561, column: 10, scope: !4501)
!4526 = !DILocation(line: 561, column: 17, scope: !4501)
!4527 = !DILocation(line: 561, column: 26, scope: !4501)
!4528 = !DILocalVariable(name: "sparse_kill", scope: !4501, file: !3, line: 562, type: !802)
!4529 = !DILocation(line: 562, column: 10, scope: !4501)
!4530 = !DILocation(line: 562, column: 24, scope: !4501)
!4531 = !DILocation(line: 562, column: 33, scope: !4501)
!4532 = !DILocation(line: 564, column: 7, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4501, file: !3, line: 564, column: 7)
!4534 = !DILocation(line: 564, column: 7, scope: !4501)
!4535 = !DILocation(line: 565, column: 35, scope: !4533)
!4536 = !DILocation(line: 565, column: 40, scope: !4533)
!4537 = !DILocation(line: 565, column: 45, scope: !4533)
!4538 = !DILocation(line: 565, column: 49, scope: !4533)
!4539 = !DILocation(line: 565, column: 13, scope: !4533)
!4540 = !DILocation(line: 565, column: 5, scope: !4533)
!4541 = !DILocalVariable(name: "problem_data", scope: !4542, file: !3, line: 568, type: !2061)
!4542 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 567, column: 5)
!4543 = !DILocation(line: 568, column: 34, scope: !4542)
!4544 = !DILocalVariable(name: "changed", scope: !4542, file: !3, line: 569, type: !1052)
!4545 = !DILocation(line: 569, column: 12, scope: !4542)
!4546 = !DILocalVariable(name: "tmp", scope: !4542, file: !3, line: 570, type: !802)
!4547 = !DILocation(line: 570, column: 14, scope: !4542)
!4548 = !DILocation(line: 574, column: 52, scope: !4542)
!4549 = !DILocation(line: 574, column: 59, scope: !4542)
!4550 = !DILocation(line: 574, column: 22, scope: !4542)
!4551 = !DILocation(line: 574, column: 20, scope: !4542)
!4552 = !DILocation(line: 575, column: 13, scope: !4542)
!4553 = !DILocation(line: 575, column: 11, scope: !4542)
!4554 = !DILocation(line: 577, column: 20, scope: !4542)
!4555 = !DILocation(line: 577, column: 25, scope: !4542)
!4556 = !DILocation(line: 577, column: 7, scope: !4542)
!4557 = !DILocation(line: 578, column: 7, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 578, column: 7)
!4559 = !DILocation(line: 578, column: 7, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4558, file: !3, line: 578, column: 7)
!4561 = !DILocation(line: 580, column: 24, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 579, column: 2)
!4563 = !DILocation(line: 581, column: 10, scope: !4562)
!4564 = !DILocation(line: 582, column: 10, scope: !4562)
!4565 = !DILocation(line: 580, column: 4, scope: !4562)
!4566 = !DILocation(line: 583, column: 2, scope: !4562)
!4567 = distinct !{!4567, !4557, !4568}
!4568 = !DILocation(line: 583, column: 2, scope: !4558)
!4569 = !DILocation(line: 584, column: 30, scope: !4542)
!4570 = !DILocation(line: 584, column: 35, scope: !4542)
!4571 = !DILocation(line: 584, column: 7, scope: !4542)
!4572 = !DILocation(line: 585, column: 24, scope: !4542)
!4573 = !DILocation(line: 585, column: 29, scope: !4542)
!4574 = !DILocation(line: 585, column: 7, scope: !4542)
!4575 = !DILocation(line: 586, column: 34, scope: !4542)
!4576 = !DILocation(line: 586, column: 39, scope: !4542)
!4577 = !DILocation(line: 586, column: 18, scope: !4542)
!4578 = !DILocation(line: 586, column: 17, scope: !4542)
!4579 = !DILocation(line: 586, column: 15, scope: !4542)
!4580 = !DILocation(line: 587, column: 11, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 587, column: 11)
!4582 = !DILocation(line: 587, column: 11, scope: !4542)
!4583 = !DILocation(line: 589, column: 4, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 588, column: 2)
!4585 = !DILocation(line: 590, column: 19, scope: !4584)
!4586 = !DILocation(line: 590, column: 4, scope: !4584)
!4587 = !DILocation(line: 590, column: 13, scope: !4584)
!4588 = !DILocation(line: 590, column: 17, scope: !4584)
!4589 = !DILocation(line: 591, column: 2, scope: !4584)
!4590 = !DILocation(line: 593, column: 4, scope: !4581)
!4591 = !DILocation(line: 594, column: 14, scope: !4542)
!4592 = !DILocation(line: 594, column: 7, scope: !4542)
!4593 = !DILocation(line: 596, column: 1, scope: !4501)
!4594 = distinct !DISubprogram(name: "df_rd_free", scope: !3, file: !3, line: 602, type: !2195, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4595 = !DILocalVariable(name: "problem_data", scope: !4594, file: !3, line: 604, type: !2061)
!4596 = !DILocation(line: 604, column: 30, scope: !4594)
!4597 = !DILocation(line: 605, column: 37, scope: !4594)
!4598 = !DILocation(line: 605, column: 44, scope: !4594)
!4599 = !DILocation(line: 605, column: 7, scope: !4594)
!4600 = !DILocation(line: 607, column: 7, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 607, column: 7)
!4602 = !DILocation(line: 607, column: 7, scope: !4594)
!4603 = !DILocation(line: 609, column: 24, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 608, column: 5)
!4605 = !DILocation(line: 609, column: 31, scope: !4604)
!4606 = !DILocation(line: 609, column: 7, scope: !4604)
!4607 = !DILocation(line: 610, column: 32, scope: !4604)
!4608 = !DILocation(line: 610, column: 46, scope: !4604)
!4609 = !DILocation(line: 610, column: 7, scope: !4604)
!4610 = !DILocation(line: 612, column: 7, scope: !4604)
!4611 = !DILocation(line: 612, column: 14, scope: !4604)
!4612 = !DILocation(line: 612, column: 30, scope: !4604)
!4613 = !DILocation(line: 613, column: 13, scope: !4604)
!4614 = !DILocation(line: 613, column: 20, scope: !4604)
!4615 = !DILocation(line: 613, column: 7, scope: !4604)
!4616 = !DILocation(line: 614, column: 13, scope: !4604)
!4617 = !DILocation(line: 614, column: 20, scope: !4604)
!4618 = !DILocation(line: 614, column: 7, scope: !4604)
!4619 = !DILocation(line: 615, column: 5, scope: !4604)
!4620 = !DILocation(line: 616, column: 9, scope: !4594)
!4621 = !DILocation(line: 616, column: 3, scope: !4594)
!4622 = !DILocation(line: 617, column: 1, scope: !4594)
!4623 = distinct !DISubprogram(name: "df_rd_start_dump", scope: !3, file: !3, line: 623, type: !2202, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4624 = !DILocalVariable(name: "file", arg: 1, scope: !4623, file: !3, line: 623, type: !2204)
!4625 = !DILocation(line: 623, column: 25, scope: !4623)
!4626 = !DILocalVariable(name: "problem_data", scope: !4623, file: !3, line: 625, type: !2061)
!4627 = !DILocation(line: 625, column: 30, scope: !4623)
!4628 = !DILocation(line: 626, column: 37, scope: !4623)
!4629 = !DILocation(line: 626, column: 44, scope: !4623)
!4630 = !DILocation(line: 626, column: 7, scope: !4623)
!4631 = !DILocalVariable(name: "m", scope: !4623, file: !3, line: 627, type: !7)
!4632 = !DILocation(line: 627, column: 16, scope: !4623)
!4633 = !DILocation(line: 627, column: 20, scope: !4623)
!4634 = !DILocalVariable(name: "regno", scope: !4623, file: !3, line: 628, type: !7)
!4635 = !DILocation(line: 628, column: 16, scope: !4623)
!4636 = !DILocation(line: 630, column: 8, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 630, column: 7)
!4638 = !DILocation(line: 630, column: 15, scope: !4637)
!4639 = !DILocation(line: 630, column: 7, scope: !4623)
!4640 = !DILocation(line: 631, column: 5, scope: !4637)
!4641 = !DILocation(line: 633, column: 12, scope: !4623)
!4642 = !DILocation(line: 633, column: 3, scope: !4623)
!4643 = !DILocation(line: 635, column: 12, scope: !4623)
!4644 = !DILocation(line: 635, column: 3, scope: !4623)
!4645 = !DILocation(line: 636, column: 3, scope: !4623)
!4646 = !DILocation(line: 637, column: 12, scope: !4623)
!4647 = !DILocation(line: 637, column: 3, scope: !4623)
!4648 = !DILocation(line: 638, column: 3, scope: !4623)
!4649 = !DILocation(line: 640, column: 14, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 640, column: 3)
!4651 = !DILocation(line: 640, column: 8, scope: !4650)
!4652 = !DILocation(line: 640, column: 19, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 640, column: 3)
!4654 = !DILocation(line: 640, column: 27, scope: !4653)
!4655 = !DILocation(line: 640, column: 25, scope: !4653)
!4656 = !DILocation(line: 640, column: 3, scope: !4650)
!4657 = !DILocation(line: 641, column: 9, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 641, column: 9)
!4659 = !DILocation(line: 641, column: 9, scope: !4653)
!4660 = !DILocation(line: 642, column: 16, scope: !4658)
!4661 = !DILocation(line: 642, column: 36, scope: !4658)
!4662 = !DILocation(line: 643, column: 9, scope: !4658)
!4663 = !DILocation(line: 644, column: 9, scope: !4658)
!4664 = !DILocation(line: 642, column: 7, scope: !4658)
!4665 = !DILocation(line: 640, column: 35, scope: !4653)
!4666 = !DILocation(line: 640, column: 3, scope: !4653)
!4667 = distinct !{!4667, !4656, !4668}
!4668 = !DILocation(line: 644, column: 30, scope: !4650)
!4669 = !DILocation(line: 645, column: 12, scope: !4623)
!4670 = !DILocation(line: 645, column: 3, scope: !4623)
!4671 = !DILocation(line: 647, column: 1, scope: !4623)
!4672 = distinct !DISubprogram(name: "df_rd_top_dump", scope: !3, file: !3, line: 653, type: !2257, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4673 = !DILocalVariable(name: "bb", arg: 1, scope: !4672, file: !3, line: 653, type: !1357)
!4674 = !DILocation(line: 653, column: 29, scope: !4672)
!4675 = !DILocalVariable(name: "file", arg: 2, scope: !4672, file: !3, line: 653, type: !2204)
!4676 = !DILocation(line: 653, column: 39, scope: !4672)
!4677 = !DILocalVariable(name: "bb_info", scope: !4672, file: !3, line: 655, type: !2067)
!4678 = !DILocation(line: 655, column: 25, scope: !4672)
!4679 = !DILocation(line: 655, column: 54, scope: !4672)
!4680 = !DILocation(line: 655, column: 58, scope: !4672)
!4681 = !DILocation(line: 655, column: 35, scope: !4672)
!4682 = !DILocation(line: 656, column: 8, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 656, column: 7)
!4684 = !DILocation(line: 656, column: 16, scope: !4683)
!4685 = !DILocation(line: 656, column: 20, scope: !4683)
!4686 = !DILocation(line: 656, column: 29, scope: !4683)
!4687 = !DILocation(line: 656, column: 7, scope: !4672)
!4688 = !DILocation(line: 657, column: 5, scope: !4683)
!4689 = !DILocation(line: 659, column: 12, scope: !4672)
!4690 = !DILocation(line: 659, column: 66, scope: !4672)
!4691 = !DILocation(line: 659, column: 75, scope: !4672)
!4692 = !DILocation(line: 659, column: 47, scope: !4672)
!4693 = !DILocation(line: 659, column: 41, scope: !4672)
!4694 = !DILocation(line: 659, column: 3, scope: !4672)
!4695 = !DILocation(line: 660, column: 3, scope: !4672)
!4696 = !DILocation(line: 661, column: 12, scope: !4672)
!4697 = !DILocation(line: 661, column: 66, scope: !4672)
!4698 = !DILocation(line: 661, column: 75, scope: !4672)
!4699 = !DILocation(line: 661, column: 47, scope: !4672)
!4700 = !DILocation(line: 661, column: 41, scope: !4672)
!4701 = !DILocation(line: 661, column: 3, scope: !4672)
!4702 = !DILocation(line: 662, column: 3, scope: !4672)
!4703 = !DILocation(line: 663, column: 12, scope: !4672)
!4704 = !DILocation(line: 663, column: 66, scope: !4672)
!4705 = !DILocation(line: 663, column: 75, scope: !4672)
!4706 = !DILocation(line: 663, column: 47, scope: !4672)
!4707 = !DILocation(line: 663, column: 41, scope: !4672)
!4708 = !DILocation(line: 663, column: 3, scope: !4672)
!4709 = !DILocation(line: 664, column: 3, scope: !4672)
!4710 = !DILocation(line: 665, column: 1, scope: !4672)
!4711 = distinct !DISubprogram(name: "df_rd_bottom_dump", scope: !3, file: !3, line: 671, type: !2257, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4712 = !DILocalVariable(name: "bb", arg: 1, scope: !4711, file: !3, line: 671, type: !1357)
!4713 = !DILocation(line: 671, column: 32, scope: !4711)
!4714 = !DILocalVariable(name: "file", arg: 2, scope: !4711, file: !3, line: 671, type: !2204)
!4715 = !DILocation(line: 671, column: 42, scope: !4711)
!4716 = !DILocalVariable(name: "bb_info", scope: !4711, file: !3, line: 673, type: !2067)
!4717 = !DILocation(line: 673, column: 25, scope: !4711)
!4718 = !DILocation(line: 673, column: 54, scope: !4711)
!4719 = !DILocation(line: 673, column: 58, scope: !4711)
!4720 = !DILocation(line: 673, column: 35, scope: !4711)
!4721 = !DILocation(line: 674, column: 8, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 674, column: 7)
!4723 = !DILocation(line: 674, column: 16, scope: !4722)
!4724 = !DILocation(line: 674, column: 20, scope: !4722)
!4725 = !DILocation(line: 674, column: 29, scope: !4722)
!4726 = !DILocation(line: 674, column: 7, scope: !4711)
!4727 = !DILocation(line: 675, column: 5, scope: !4722)
!4728 = !DILocation(line: 677, column: 12, scope: !4711)
!4729 = !DILocation(line: 677, column: 66, scope: !4711)
!4730 = !DILocation(line: 677, column: 75, scope: !4711)
!4731 = !DILocation(line: 677, column: 47, scope: !4711)
!4732 = !DILocation(line: 677, column: 41, scope: !4711)
!4733 = !DILocation(line: 677, column: 3, scope: !4711)
!4734 = !DILocation(line: 678, column: 3, scope: !4711)
!4735 = !DILocation(line: 679, column: 1, scope: !4711)
!4736 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !806, file: !806, line: 224, type: !4737, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4737 = !DISubroutineType(types: !4738)
!4738 = !{null, !4739, !4740, !7, !2044}
!4739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4740 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !803, line: 48, baseType: !4741)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !805)
!4743 = !DILocalVariable(name: "bi", arg: 1, scope: !4736, file: !806, line: 224, type: !4739)
!4744 = !DILocation(line: 224, column: 37, scope: !4736)
!4745 = !DILocalVariable(name: "map", arg: 2, scope: !4736, file: !806, line: 224, type: !4740)
!4746 = !DILocation(line: 224, column: 54, scope: !4736)
!4747 = !DILocalVariable(name: "start_bit", arg: 3, scope: !4736, file: !806, line: 225, type: !7)
!4748 = !DILocation(line: 225, column: 15, scope: !4736)
!4749 = !DILocalVariable(name: "bit_no", arg: 4, scope: !4736, file: !806, line: 225, type: !2044)
!4750 = !DILocation(line: 225, column: 36, scope: !4736)
!4751 = !DILocation(line: 227, column: 14, scope: !4736)
!4752 = !DILocation(line: 227, column: 19, scope: !4736)
!4753 = !DILocation(line: 227, column: 3, scope: !4736)
!4754 = !DILocation(line: 227, column: 7, scope: !4736)
!4755 = !DILocation(line: 227, column: 12, scope: !4736)
!4756 = !DILocation(line: 228, column: 3, scope: !4736)
!4757 = !DILocation(line: 228, column: 7, scope: !4736)
!4758 = !DILocation(line: 228, column: 12, scope: !4736)
!4759 = !DILocation(line: 231, column: 3, scope: !4736)
!4760 = !DILocation(line: 233, column: 12, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !806, line: 233, column: 11)
!4762 = distinct !DILexicalBlock(scope: !4736, file: !806, line: 232, column: 5)
!4763 = !DILocation(line: 233, column: 16, scope: !4761)
!4764 = !DILocation(line: 233, column: 11, scope: !4762)
!4765 = !DILocation(line: 235, column: 4, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4761, file: !806, line: 234, column: 2)
!4767 = !DILocation(line: 235, column: 8, scope: !4766)
!4768 = !DILocation(line: 235, column: 13, scope: !4766)
!4769 = !DILocation(line: 236, column: 4, scope: !4766)
!4770 = !DILocation(line: 239, column: 11, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4762, file: !806, line: 239, column: 11)
!4772 = !DILocation(line: 239, column: 15, scope: !4771)
!4773 = !DILocation(line: 239, column: 21, scope: !4771)
!4774 = !DILocation(line: 239, column: 29, scope: !4771)
!4775 = !DILocation(line: 239, column: 39, scope: !4771)
!4776 = !DILocation(line: 239, column: 26, scope: !4771)
!4777 = !DILocation(line: 239, column: 11, scope: !4762)
!4778 = !DILocation(line: 240, column: 2, scope: !4771)
!4779 = !DILocation(line: 241, column: 18, scope: !4762)
!4780 = !DILocation(line: 241, column: 22, scope: !4762)
!4781 = !DILocation(line: 241, column: 28, scope: !4762)
!4782 = !DILocation(line: 241, column: 7, scope: !4762)
!4783 = !DILocation(line: 241, column: 11, scope: !4762)
!4784 = !DILocation(line: 241, column: 16, scope: !4762)
!4785 = distinct !{!4785, !4759, !4786}
!4786 = !DILocation(line: 242, column: 5, scope: !4736)
!4787 = !DILocation(line: 245, column: 7, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4736, file: !806, line: 245, column: 7)
!4789 = !DILocation(line: 245, column: 11, scope: !4788)
!4790 = !DILocation(line: 245, column: 17, scope: !4788)
!4791 = !DILocation(line: 245, column: 25, scope: !4788)
!4792 = !DILocation(line: 245, column: 35, scope: !4788)
!4793 = !DILocation(line: 245, column: 22, scope: !4788)
!4794 = !DILocation(line: 245, column: 7, scope: !4736)
!4795 = !DILocation(line: 246, column: 17, scope: !4788)
!4796 = !DILocation(line: 246, column: 21, scope: !4788)
!4797 = !DILocation(line: 246, column: 27, scope: !4788)
!4798 = !DILocation(line: 246, column: 32, scope: !4788)
!4799 = !DILocation(line: 246, column: 15, scope: !4788)
!4800 = !DILocation(line: 246, column: 5, scope: !4788)
!4801 = !DILocation(line: 249, column: 17, scope: !4736)
!4802 = !DILocation(line: 249, column: 27, scope: !4736)
!4803 = !DILocation(line: 249, column: 46, scope: !4736)
!4804 = !DILocation(line: 249, column: 3, scope: !4736)
!4805 = !DILocation(line: 249, column: 7, scope: !4736)
!4806 = !DILocation(line: 249, column: 15, scope: !4736)
!4807 = !DILocation(line: 250, column: 14, scope: !4736)
!4808 = !DILocation(line: 250, column: 18, scope: !4736)
!4809 = !DILocation(line: 250, column: 24, scope: !4736)
!4810 = !DILocation(line: 250, column: 29, scope: !4736)
!4811 = !DILocation(line: 250, column: 33, scope: !4736)
!4812 = !DILocation(line: 250, column: 3, scope: !4736)
!4813 = !DILocation(line: 250, column: 7, scope: !4736)
!4814 = !DILocation(line: 250, column: 12, scope: !4736)
!4815 = !DILocation(line: 251, column: 16, scope: !4736)
!4816 = !DILocation(line: 251, column: 26, scope: !4736)
!4817 = !DILocation(line: 251, column: 3, scope: !4736)
!4818 = !DILocation(line: 251, column: 7, scope: !4736)
!4819 = !DILocation(line: 251, column: 12, scope: !4736)
!4820 = !DILocation(line: 257, column: 17, scope: !4736)
!4821 = !DILocation(line: 257, column: 21, scope: !4736)
!4822 = !DILocation(line: 257, column: 16, scope: !4736)
!4823 = !DILocation(line: 257, column: 13, scope: !4736)
!4824 = !DILocation(line: 259, column: 13, scope: !4736)
!4825 = !DILocation(line: 259, column: 4, scope: !4736)
!4826 = !DILocation(line: 259, column: 11, scope: !4736)
!4827 = !DILocation(line: 260, column: 1, scope: !4736)
!4828 = distinct !DISubprogram(name: "bmp_iter_set", scope: !806, file: !806, line: 393, type: !4829, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4829 = !DISubroutineType(types: !4830)
!4830 = !{!1052, !4739, !2044}
!4831 = !DILocalVariable(name: "bi", arg: 1, scope: !4828, file: !806, line: 393, type: !4739)
!4832 = !DILocation(line: 393, column: 32, scope: !4828)
!4833 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4828, file: !806, line: 393, type: !2044)
!4834 = !DILocation(line: 393, column: 46, scope: !4828)
!4835 = !DILocation(line: 396, column: 7, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4828, file: !806, line: 396, column: 7)
!4837 = !DILocation(line: 396, column: 11, scope: !4836)
!4838 = !DILocation(line: 396, column: 7, scope: !4828)
!4839 = !DILocation(line: 397, column: 5, scope: !4836)
!4840 = !DILabel(scope: !4841, name: "next_bit", file: !806, line: 398)
!4841 = distinct !DILexicalBlock(scope: !4836, file: !806, line: 397, column: 5)
!4842 = !DILocation(line: 398, column: 5, scope: !4841)
!4843 = !DILocation(line: 399, column: 7, scope: !4841)
!4844 = !DILocation(line: 399, column: 16, scope: !4841)
!4845 = !DILocation(line: 399, column: 20, scope: !4841)
!4846 = !DILocation(line: 399, column: 25, scope: !4841)
!4847 = !DILocation(line: 399, column: 14, scope: !4841)
!4848 = !DILocation(line: 401, column: 4, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4841, file: !806, line: 400, column: 2)
!4850 = !DILocation(line: 401, column: 8, scope: !4849)
!4851 = !DILocation(line: 401, column: 13, scope: !4849)
!4852 = !DILocation(line: 402, column: 5, scope: !4849)
!4853 = !DILocation(line: 402, column: 12, scope: !4849)
!4854 = distinct !{!4854, !4843, !4855}
!4855 = !DILocation(line: 403, column: 2, scope: !4841)
!4856 = !DILocation(line: 404, column: 7, scope: !4841)
!4857 = !DILocation(line: 410, column: 16, scope: !4828)
!4858 = !DILocation(line: 410, column: 15, scope: !4828)
!4859 = !DILocation(line: 410, column: 23, scope: !4828)
!4860 = !DILocation(line: 410, column: 42, scope: !4828)
!4861 = !DILocation(line: 411, column: 7, scope: !4828)
!4862 = !DILocation(line: 411, column: 26, scope: !4828)
!4863 = !DILocation(line: 410, column: 4, scope: !4828)
!4864 = !DILocation(line: 410, column: 11, scope: !4828)
!4865 = !DILocation(line: 412, column: 3, scope: !4828)
!4866 = !DILocation(line: 412, column: 7, scope: !4828)
!4867 = !DILocation(line: 412, column: 14, scope: !4828)
!4868 = !DILocation(line: 414, column: 3, scope: !4828)
!4869 = !DILocation(line: 417, column: 7, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4828, file: !806, line: 415, column: 5)
!4871 = !DILocation(line: 417, column: 14, scope: !4870)
!4872 = !DILocation(line: 417, column: 18, scope: !4870)
!4873 = !DILocation(line: 417, column: 26, scope: !4870)
!4874 = !DILocation(line: 419, column: 15, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4870, file: !806, line: 418, column: 2)
!4876 = !DILocation(line: 419, column: 19, scope: !4875)
!4877 = !DILocation(line: 419, column: 25, scope: !4875)
!4878 = !DILocation(line: 419, column: 30, scope: !4875)
!4879 = !DILocation(line: 419, column: 34, scope: !4875)
!4880 = !DILocation(line: 419, column: 4, scope: !4875)
!4881 = !DILocation(line: 419, column: 8, scope: !4875)
!4882 = !DILocation(line: 419, column: 13, scope: !4875)
!4883 = !DILocation(line: 420, column: 8, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4875, file: !806, line: 420, column: 8)
!4885 = !DILocation(line: 420, column: 12, scope: !4884)
!4886 = !DILocation(line: 420, column: 8, scope: !4875)
!4887 = !DILocation(line: 421, column: 6, scope: !4884)
!4888 = !DILocation(line: 422, column: 5, scope: !4875)
!4889 = !DILocation(line: 422, column: 12, scope: !4875)
!4890 = !DILocation(line: 423, column: 4, scope: !4875)
!4891 = !DILocation(line: 423, column: 8, scope: !4875)
!4892 = !DILocation(line: 423, column: 15, scope: !4875)
!4893 = distinct !{!4893, !4869, !4894}
!4894 = !DILocation(line: 424, column: 2, scope: !4870)
!4895 = !DILocation(line: 427, column: 18, scope: !4870)
!4896 = !DILocation(line: 427, column: 22, scope: !4870)
!4897 = !DILocation(line: 427, column: 28, scope: !4870)
!4898 = !DILocation(line: 427, column: 7, scope: !4870)
!4899 = !DILocation(line: 427, column: 11, scope: !4870)
!4900 = !DILocation(line: 427, column: 16, scope: !4870)
!4901 = !DILocation(line: 428, column: 12, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4870, file: !806, line: 428, column: 11)
!4903 = !DILocation(line: 428, column: 16, scope: !4902)
!4904 = !DILocation(line: 428, column: 11, scope: !4870)
!4905 = !DILocation(line: 429, column: 2, scope: !4902)
!4906 = !DILocation(line: 430, column: 17, scope: !4870)
!4907 = !DILocation(line: 430, column: 21, scope: !4870)
!4908 = !DILocation(line: 430, column: 27, scope: !4870)
!4909 = !DILocation(line: 430, column: 32, scope: !4870)
!4910 = !DILocation(line: 430, column: 8, scope: !4870)
!4911 = !DILocation(line: 430, column: 15, scope: !4870)
!4912 = !DILocation(line: 431, column: 7, scope: !4870)
!4913 = !DILocation(line: 431, column: 11, scope: !4870)
!4914 = !DILocation(line: 431, column: 19, scope: !4870)
!4915 = distinct !{!4915, !4868, !4916}
!4916 = !DILocation(line: 432, column: 5, scope: !4828)
!4917 = !DILocation(line: 433, column: 1, scope: !4828)
!4918 = distinct !DISubprogram(name: "df_rd_get_bb_info", scope: !385, file: !385, line: 1043, type: !4919, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4919 = !DISubroutineType(types: !4920)
!4920 = !{!2067, !7}
!4921 = !DILocalVariable(name: "index", arg: 1, scope: !4918, file: !385, line: 1043, type: !7)
!4922 = !DILocation(line: 1043, column: 33, scope: !4918)
!4923 = !DILocation(line: 1045, column: 7, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4918, file: !385, line: 1045, column: 7)
!4925 = !DILocation(line: 1045, column: 15, scope: !4924)
!4926 = !DILocation(line: 1045, column: 22, scope: !4924)
!4927 = !DILocation(line: 1045, column: 13, scope: !4924)
!4928 = !DILocation(line: 1045, column: 7, scope: !4918)
!4929 = !DILocation(line: 1046, column: 37, scope: !4924)
!4930 = !DILocation(line: 1046, column: 44, scope: !4924)
!4931 = !DILocation(line: 1046, column: 55, scope: !4924)
!4932 = !DILocation(line: 1046, column: 12, scope: !4924)
!4933 = !DILocation(line: 1046, column: 5, scope: !4924)
!4934 = !DILocation(line: 1048, column: 5, scope: !4924)
!4935 = !DILocation(line: 1049, column: 1, scope: !4918)
!4936 = distinct !DISubprogram(name: "df_rd_set_bb_info", scope: !3, file: !3, line: 208, type: !4937, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{null, !7, !2067}
!4939 = !DILocalVariable(name: "index", arg: 1, scope: !4936, file: !3, line: 208, type: !7)
!4940 = !DILocation(line: 208, column: 33, scope: !4936)
!4941 = !DILocalVariable(name: "bb_info", arg: 2, scope: !4936, file: !3, line: 209, type: !2067)
!4942 = !DILocation(line: 209, column: 28, scope: !4936)
!4943 = !DILocation(line: 211, column: 3, scope: !4936)
!4944 = !DILocation(line: 212, column: 3, scope: !4936)
!4945 = !DILocation(line: 213, column: 30, scope: !4936)
!4946 = !DILocation(line: 213, column: 3, scope: !4936)
!4947 = !DILocation(line: 213, column: 10, scope: !4936)
!4948 = !DILocation(line: 213, column: 21, scope: !4936)
!4949 = !DILocation(line: 213, column: 28, scope: !4936)
!4950 = !DILocation(line: 214, column: 1, scope: !4936)
!4951 = distinct !DISubprogram(name: "bmp_iter_next", scope: !806, file: !806, line: 382, type: !4952, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{null, !4739, !2044}
!4954 = !DILocalVariable(name: "bi", arg: 1, scope: !4951, file: !806, line: 382, type: !4739)
!4955 = !DILocation(line: 382, column: 33, scope: !4951)
!4956 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4951, file: !806, line: 382, type: !2044)
!4957 = !DILocation(line: 382, column: 47, scope: !4951)
!4958 = !DILocation(line: 384, column: 3, scope: !4951)
!4959 = !DILocation(line: 384, column: 7, scope: !4951)
!4960 = !DILocation(line: 384, column: 12, scope: !4951)
!4961 = !DILocation(line: 385, column: 4, scope: !4951)
!4962 = !DILocation(line: 385, column: 11, scope: !4951)
!4963 = !DILocation(line: 386, column: 1, scope: !4951)
!4964 = distinct !DISubprogram(name: "df_rd_bb_local_compute", scope: !3, file: !3, line: 411, type: !2750, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!4965 = !DILocalVariable(name: "bb_index", arg: 1, scope: !4964, file: !3, line: 411, type: !7)
!4966 = !DILocation(line: 411, column: 38, scope: !4964)
!4967 = !DILocalVariable(name: "bb", scope: !4964, file: !3, line: 413, type: !1357)
!4968 = !DILocation(line: 413, column: 15, scope: !4964)
!4969 = !DILocation(line: 413, column: 20, scope: !4964)
!4970 = !DILocalVariable(name: "bb_info", scope: !4964, file: !3, line: 414, type: !2067)
!4971 = !DILocation(line: 414, column: 25, scope: !4964)
!4972 = !DILocation(line: 414, column: 54, scope: !4964)
!4973 = !DILocation(line: 414, column: 35, scope: !4964)
!4974 = !DILocalVariable(name: "insn", scope: !4964, file: !3, line: 415, type: !883)
!4975 = !DILocation(line: 415, column: 7, scope: !4964)
!4976 = !DILocation(line: 417, column: 17, scope: !4964)
!4977 = !DILocation(line: 417, column: 3, scope: !4964)
!4978 = !DILocation(line: 418, column: 17, scope: !4964)
!4979 = !DILocation(line: 418, column: 3, scope: !4964)
!4980 = !DILocation(line: 421, column: 9, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 421, column: 7)
!4982 = !DILocation(line: 421, column: 13, scope: !4981)
!4983 = !DILocation(line: 421, column: 30, scope: !4981)
!4984 = !DILocation(line: 421, column: 7, scope: !4964)
!4985 = !DILocation(line: 422, column: 41, scope: !4981)
!4986 = !DILocation(line: 423, column: 30, scope: !4981)
!4987 = !DILocation(line: 423, column: 6, scope: !4981)
!4988 = !DILocation(line: 422, column: 5, scope: !4981)
!4989 = !DILocation(line: 426, column: 3, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 426, column: 3)
!4991 = !DILocation(line: 426, column: 3, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 426, column: 3)
!4993 = !DILocation(line: 0, scope: !4992)
!4994 = !DILocalVariable(name: "uid", scope: !4995, file: !3, line: 428, type: !7)
!4995 = distinct !DILexicalBlock(scope: !4992, file: !3, line: 427, column: 5)
!4996 = !DILocation(line: 428, column: 20, scope: !4995)
!4997 = !DILocation(line: 428, column: 26, scope: !4995)
!4998 = !DILocation(line: 430, column: 12, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 430, column: 11)
!5000 = !DILocation(line: 430, column: 11, scope: !4995)
!5001 = !DILocation(line: 431, column: 2, scope: !4999)
!5002 = !DILocation(line: 433, column: 43, scope: !4995)
!5003 = !DILocation(line: 434, column: 8, scope: !4995)
!5004 = !DILocation(line: 433, column: 7, scope: !4995)
!5005 = !DILocation(line: 442, column: 24, scope: !4995)
!5006 = !DILocation(line: 442, column: 39, scope: !4995)
!5007 = !DILocation(line: 442, column: 7, scope: !4995)
!5008 = !DILocation(line: 443, column: 21, scope: !4995)
!5009 = !DILocation(line: 443, column: 7, scope: !4995)
!5010 = !DILocation(line: 444, column: 5, scope: !4995)
!5011 = distinct !{!5011, !4989, !5012}
!5012 = !DILocation(line: 444, column: 5, scope: !4990)
!5013 = !DILocation(line: 449, column: 9, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 449, column: 7)
!5015 = !DILocation(line: 449, column: 13, scope: !5014)
!5016 = !DILocation(line: 449, column: 30, scope: !5014)
!5017 = !DILocation(line: 449, column: 7, scope: !4964)
!5018 = !DILocation(line: 450, column: 41, scope: !5014)
!5019 = !DILocation(line: 451, column: 30, scope: !5014)
!5020 = !DILocation(line: 451, column: 6, scope: !5014)
!5021 = !DILocation(line: 450, column: 5, scope: !5014)
!5022 = !DILocation(line: 453, column: 1, scope: !4964)
!5023 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !142, file: !142, line: 281, type: !5024, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5024 = !DISubroutineType(types: !5025)
!5025 = !{!1357, !5026, !7}
!5026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5027, size: 64)
!5027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1438)
!5028 = !DILocalVariable(name: "vec_", arg: 1, scope: !5023, file: !142, line: 281, type: !5026)
!5029 = !DILocation(line: 281, column: 1, scope: !5023)
!5030 = !DILocalVariable(name: "ix_", arg: 2, scope: !5023, file: !142, line: 281, type: !7)
!5031 = !DILocation(line: 0, scope: !5023)
!5032 = distinct !DISubprogram(name: "df_rd_bb_local_compute_process_def", scope: !3, file: !3, line: 355, type: !5033, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{null, !2067, !1998, !855}
!5035 = !DILocalVariable(name: "bb_info", arg: 1, scope: !5032, file: !3, line: 355, type: !2067)
!5036 = !DILocation(line: 355, column: 59, scope: !5032)
!5037 = !DILocalVariable(name: "def_rec", arg: 2, scope: !5032, file: !3, line: 356, type: !1998)
!5038 = !DILocation(line: 356, column: 17, scope: !5032)
!5039 = !DILocalVariable(name: "top_flag", arg: 3, scope: !5032, file: !3, line: 357, type: !855)
!5040 = !DILocation(line: 357, column: 13, scope: !5032)
!5041 = !DILocation(line: 359, column: 3, scope: !5032)
!5042 = !DILocation(line: 359, column: 11, scope: !5032)
!5043 = !DILocation(line: 359, column: 10, scope: !5032)
!5044 = !DILocalVariable(name: "def", scope: !5045, file: !3, line: 361, type: !872)
!5045 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 360, column: 5)
!5046 = !DILocation(line: 361, column: 14, scope: !5045)
!5047 = !DILocation(line: 361, column: 21, scope: !5045)
!5048 = !DILocation(line: 361, column: 20, scope: !5045)
!5049 = !DILocation(line: 362, column: 11, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 362, column: 11)
!5051 = !DILocation(line: 362, column: 24, scope: !5050)
!5052 = !DILocation(line: 362, column: 43, scope: !5050)
!5053 = !DILocation(line: 362, column: 20, scope: !5050)
!5054 = !DILocation(line: 362, column: 11, scope: !5045)
!5055 = !DILocalVariable(name: "regno", scope: !5056, file: !3, line: 364, type: !7)
!5056 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 363, column: 2)
!5057 = !DILocation(line: 364, column: 17, scope: !5056)
!5058 = !DILocation(line: 364, column: 25, scope: !5056)
!5059 = !DILocalVariable(name: "begin", scope: !5056, file: !3, line: 365, type: !7)
!5060 = !DILocation(line: 365, column: 17, scope: !5056)
!5061 = !DILocation(line: 365, column: 25, scope: !5056)
!5062 = !DILocalVariable(name: "n_defs", scope: !5056, file: !3, line: 366, type: !7)
!5063 = !DILocation(line: 366, column: 17, scope: !5056)
!5064 = !DILocation(line: 366, column: 26, scope: !5056)
!5065 = !DILocation(line: 368, column: 11, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 368, column: 8)
!5067 = !DILocation(line: 368, column: 15, scope: !5066)
!5068 = !DILocation(line: 368, column: 32, scope: !5066)
!5069 = !DILocation(line: 369, column: 8, scope: !5066)
!5070 = !DILocation(line: 369, column: 12, scope: !5066)
!5071 = !DILocation(line: 369, column: 18, scope: !5066)
!5072 = !DILocation(line: 368, column: 8, scope: !5056)
!5073 = !DILocation(line: 373, column: 27, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 373, column: 12)
!5075 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 370, column: 6)
!5076 = !DILocation(line: 373, column: 42, scope: !5074)
!5077 = !DILocation(line: 373, column: 13, scope: !5074)
!5078 = !DILocation(line: 373, column: 12, scope: !5075)
!5079 = !DILocation(line: 377, column: 25, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 377, column: 9)
!5081 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 374, column: 3)
!5082 = !DILocation(line: 377, column: 39, scope: !5080)
!5083 = !DILocation(line: 377, column: 11, scope: !5080)
!5084 = !DILocation(line: 380, column: 9, scope: !5080)
!5085 = !DILocation(line: 380, column: 15, scope: !5080)
!5086 = !DILocation(line: 380, column: 34, scope: !5080)
!5087 = !DILocation(line: 377, column: 9, scope: !5081)
!5088 = !DILocation(line: 383, column: 13, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 383, column: 13)
!5090 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 382, column: 7)
!5091 = !DILocation(line: 383, column: 20, scope: !5089)
!5092 = !DILocation(line: 383, column: 13, scope: !5090)
!5093 = !DILocation(line: 385, column: 22, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 384, column: 4)
!5095 = !DILocation(line: 385, column: 31, scope: !5094)
!5096 = !DILocation(line: 385, column: 44, scope: !5094)
!5097 = !DILocation(line: 385, column: 6, scope: !5094)
!5098 = !DILocation(line: 386, column: 25, scope: !5094)
!5099 = !DILocation(line: 386, column: 34, scope: !5094)
!5100 = !DILocation(line: 386, column: 39, scope: !5094)
!5101 = !DILocation(line: 386, column: 46, scope: !5094)
!5102 = !DILocation(line: 386, column: 6, scope: !5094)
!5103 = !DILocation(line: 387, column: 4, scope: !5094)
!5104 = !DILocation(line: 390, column: 24, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 389, column: 4)
!5106 = !DILocation(line: 390, column: 33, scope: !5105)
!5107 = !DILocation(line: 390, column: 39, scope: !5105)
!5108 = !DILocation(line: 390, column: 46, scope: !5105)
!5109 = !DILocation(line: 390, column: 6, scope: !5105)
!5110 = !DILocation(line: 391, column: 26, scope: !5105)
!5111 = !DILocation(line: 391, column: 35, scope: !5105)
!5112 = !DILocation(line: 391, column: 40, scope: !5105)
!5113 = !DILocation(line: 391, column: 47, scope: !5105)
!5114 = !DILocation(line: 391, column: 6, scope: !5105)
!5115 = !DILocation(line: 393, column: 7, scope: !5090)
!5116 = !DILocation(line: 395, column: 21, scope: !5081)
!5117 = !DILocation(line: 395, column: 35, scope: !5081)
!5118 = !DILocation(line: 395, column: 5, scope: !5081)
!5119 = !DILocation(line: 398, column: 11, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 398, column: 9)
!5121 = !DILocation(line: 399, column: 4, scope: !5120)
!5122 = !DILocation(line: 398, column: 9, scope: !5081)
!5123 = !DILocation(line: 400, column: 23, scope: !5120)
!5124 = !DILocation(line: 400, column: 32, scope: !5120)
!5125 = !DILocation(line: 400, column: 37, scope: !5120)
!5126 = !DILocation(line: 400, column: 7, scope: !5120)
!5127 = !DILocation(line: 401, column: 3, scope: !5081)
!5128 = !DILocation(line: 402, column: 6, scope: !5075)
!5129 = !DILocation(line: 403, column: 2, scope: !5056)
!5130 = !DILocation(line: 404, column: 14, scope: !5045)
!5131 = distinct !{!5131, !5041, !5132}
!5132 = !DILocation(line: 405, column: 5, scope: !5032)
!5133 = !DILocation(line: 406, column: 1, scope: !5032)
!5134 = distinct !DISubprogram(name: "df_lr_alloc", scope: !3, file: !3, line: 773, type: !2121, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5135 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5134, file: !3, line: 773, type: !802)
!5136 = !DILocation(line: 773, column: 21, scope: !5134)
!5137 = !DILocalVariable(name: "bb_index", scope: !5134, file: !3, line: 775, type: !7)
!5138 = !DILocation(line: 775, column: 16, scope: !5134)
!5139 = !DILocalVariable(name: "bi", scope: !5134, file: !3, line: 776, type: !4201)
!5140 = !DILocation(line: 776, column: 19, scope: !5134)
!5141 = !DILocation(line: 778, column: 8, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 778, column: 7)
!5143 = !DILocation(line: 778, column: 15, scope: !5142)
!5144 = !DILocation(line: 778, column: 7, scope: !5134)
!5145 = !DILocation(line: 779, column: 25, scope: !5142)
!5146 = !DILocation(line: 779, column: 5, scope: !5142)
!5147 = !DILocation(line: 779, column: 12, scope: !5142)
!5148 = !DILocation(line: 779, column: 23, scope: !5142)
!5149 = !DILocation(line: 782, column: 20, scope: !5134)
!5150 = !DILocation(line: 782, column: 3, scope: !5134)
!5151 = !DILocation(line: 784, column: 3, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 784, column: 3)
!5153 = !DILocation(line: 784, column: 3, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 784, column: 3)
!5155 = !DILocalVariable(name: "bb_info", scope: !5156, file: !3, line: 786, type: !2054)
!5156 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 785, column: 5)
!5157 = !DILocation(line: 786, column: 29, scope: !5156)
!5158 = !DILocation(line: 786, column: 58, scope: !5156)
!5159 = !DILocation(line: 786, column: 39, scope: !5156)
!5160 = !DILocation(line: 787, column: 11, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 787, column: 11)
!5162 = !DILocation(line: 787, column: 11, scope: !5156)
!5163 = !DILocation(line: 789, column: 18, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 788, column: 2)
!5165 = !DILocation(line: 789, column: 27, scope: !5164)
!5166 = !DILocation(line: 789, column: 4, scope: !5164)
!5167 = !DILocation(line: 790, column: 18, scope: !5164)
!5168 = !DILocation(line: 790, column: 27, scope: !5164)
!5169 = !DILocation(line: 790, column: 4, scope: !5164)
!5170 = !DILocation(line: 791, column: 2, scope: !5164)
!5171 = !DILocation(line: 794, column: 51, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 793, column: 2)
!5173 = !DILocation(line: 794, column: 58, scope: !5172)
!5174 = !DILocation(line: 794, column: 39, scope: !5172)
!5175 = !DILocation(line: 794, column: 14, scope: !5172)
!5176 = !DILocation(line: 794, column: 12, scope: !5172)
!5177 = !DILocation(line: 795, column: 23, scope: !5172)
!5178 = !DILocation(line: 795, column: 33, scope: !5172)
!5179 = !DILocation(line: 795, column: 4, scope: !5172)
!5180 = !DILocation(line: 796, column: 19, scope: !5172)
!5181 = !DILocation(line: 796, column: 4, scope: !5172)
!5182 = !DILocation(line: 796, column: 13, scope: !5172)
!5183 = !DILocation(line: 796, column: 17, scope: !5172)
!5184 = !DILocation(line: 797, column: 19, scope: !5172)
!5185 = !DILocation(line: 797, column: 4, scope: !5172)
!5186 = !DILocation(line: 797, column: 13, scope: !5172)
!5187 = !DILocation(line: 797, column: 17, scope: !5172)
!5188 = !DILocation(line: 798, column: 18, scope: !5172)
!5189 = !DILocation(line: 798, column: 4, scope: !5172)
!5190 = !DILocation(line: 798, column: 13, scope: !5172)
!5191 = !DILocation(line: 798, column: 16, scope: !5172)
!5192 = !DILocation(line: 799, column: 19, scope: !5172)
!5193 = !DILocation(line: 799, column: 4, scope: !5172)
!5194 = !DILocation(line: 799, column: 13, scope: !5172)
!5195 = !DILocation(line: 799, column: 17, scope: !5172)
!5196 = !DILocation(line: 801, column: 5, scope: !5156)
!5197 = distinct !{!5197, !5151, !5198}
!5198 = !DILocation(line: 801, column: 5, scope: !5152)
!5199 = !DILocation(line: 803, column: 3, scope: !5134)
!5200 = !DILocation(line: 803, column: 10, scope: !5134)
!5201 = !DILocation(line: 803, column: 21, scope: !5134)
!5202 = !DILocation(line: 804, column: 1, scope: !5134)
!5203 = distinct !DISubprogram(name: "df_lr_reset", scope: !3, file: !3, line: 810, type: !2121, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5204 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5203, file: !3, line: 810, type: !802)
!5205 = !DILocation(line: 810, column: 21, scope: !5203)
!5206 = !DILocalVariable(name: "bb_index", scope: !5203, file: !3, line: 812, type: !7)
!5207 = !DILocation(line: 812, column: 16, scope: !5203)
!5208 = !DILocalVariable(name: "bi", scope: !5203, file: !3, line: 813, type: !4201)
!5209 = !DILocation(line: 813, column: 19, scope: !5203)
!5210 = !DILocation(line: 815, column: 3, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 815, column: 3)
!5212 = !DILocation(line: 815, column: 3, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5211, file: !3, line: 815, column: 3)
!5214 = !DILocalVariable(name: "bb_info", scope: !5215, file: !3, line: 817, type: !2054)
!5215 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 816, column: 5)
!5216 = !DILocation(line: 817, column: 29, scope: !5215)
!5217 = !DILocation(line: 817, column: 58, scope: !5215)
!5218 = !DILocation(line: 817, column: 39, scope: !5215)
!5219 = !DILocation(line: 818, column: 7, scope: !5215)
!5220 = !DILocation(line: 819, column: 21, scope: !5215)
!5221 = !DILocation(line: 819, column: 30, scope: !5215)
!5222 = !DILocation(line: 819, column: 7, scope: !5215)
!5223 = !DILocation(line: 820, column: 21, scope: !5215)
!5224 = !DILocation(line: 820, column: 30, scope: !5215)
!5225 = !DILocation(line: 820, column: 7, scope: !5215)
!5226 = !DILocation(line: 821, column: 5, scope: !5215)
!5227 = distinct !{!5227, !5210, !5228}
!5228 = !DILocation(line: 821, column: 5, scope: !5211)
!5229 = !DILocation(line: 822, column: 1, scope: !5203)
!5230 = distinct !DISubprogram(name: "df_lr_free_bb_info", scope: !3, file: !3, line: 754, type: !2128, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5231 = !DILocalVariable(name: "bb", arg: 1, scope: !5230, file: !3, line: 754, type: !1357)
!5232 = !DILocation(line: 754, column: 33, scope: !5230)
!5233 = !DILocalVariable(name: "vbb_info", arg: 2, scope: !5230, file: !3, line: 755, type: !801)
!5234 = !DILocation(line: 755, column: 13, scope: !5230)
!5235 = !DILocalVariable(name: "bb_info", scope: !5230, file: !3, line: 757, type: !2054)
!5236 = !DILocation(line: 757, column: 25, scope: !5230)
!5237 = !DILocation(line: 757, column: 60, scope: !5230)
!5238 = !DILocation(line: 757, column: 35, scope: !5230)
!5239 = !DILocation(line: 758, column: 7, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 758, column: 7)
!5241 = !DILocation(line: 758, column: 7, scope: !5230)
!5242 = !DILocation(line: 760, column: 7, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 759, column: 5)
!5244 = !DILocation(line: 761, column: 7, scope: !5243)
!5245 = !DILocation(line: 762, column: 7, scope: !5243)
!5246 = !DILocation(line: 763, column: 7, scope: !5243)
!5247 = !DILocation(line: 764, column: 18, scope: !5243)
!5248 = !DILocation(line: 764, column: 25, scope: !5243)
!5249 = !DILocation(line: 764, column: 37, scope: !5243)
!5250 = !DILocation(line: 764, column: 7, scope: !5243)
!5251 = !DILocation(line: 765, column: 5, scope: !5243)
!5252 = !DILocation(line: 766, column: 1, scope: !5230)
!5253 = distinct !DISubprogram(name: "df_lr_local_compute", scope: !3, file: !3, line: 922, type: !2121, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5254 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5253, file: !3, line: 922, type: !802)
!5255 = !DILocation(line: 922, column: 29, scope: !5253)
!5256 = !DILocalVariable(name: "bb_index", scope: !5253, file: !3, line: 924, type: !7)
!5257 = !DILocation(line: 924, column: 16, scope: !5253)
!5258 = !DILocalVariable(name: "bi", scope: !5253, file: !3, line: 925, type: !4201)
!5259 = !DILocation(line: 925, column: 19, scope: !5253)
!5260 = !DILocation(line: 927, column: 17, scope: !5253)
!5261 = !DILocation(line: 927, column: 21, scope: !5253)
!5262 = !DILocation(line: 927, column: 3, scope: !5253)
!5263 = !DILocation(line: 930, column: 19, scope: !5253)
!5264 = !DILocation(line: 930, column: 23, scope: !5253)
!5265 = !DILocation(line: 930, column: 3, scope: !5253)
!5266 = !DILocation(line: 935, column: 8, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 935, column: 7)
!5268 = !DILocation(line: 935, column: 7, scope: !5253)
!5269 = !DILocation(line: 939, column: 23, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 936, column: 5)
!5271 = !DILocation(line: 939, column: 27, scope: !5270)
!5272 = !DILocation(line: 939, column: 7, scope: !5270)
!5273 = !DILocation(line: 944, column: 11, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 944, column: 11)
!5275 = !DILocation(line: 944, column: 11, scope: !5270)
!5276 = !DILocation(line: 945, column: 18, scope: !5274)
!5277 = !DILocation(line: 945, column: 22, scope: !5274)
!5278 = !DILocation(line: 945, column: 2, scope: !5274)
!5279 = !DILocation(line: 950, column: 22, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 950, column: 11)
!5281 = !DILocation(line: 950, column: 46, scope: !5280)
!5282 = !DILocation(line: 951, column: 4, scope: !5280)
!5283 = !DILocation(line: 951, column: 18, scope: !5280)
!5284 = !DILocation(line: 951, column: 7, scope: !5280)
!5285 = !DILocation(line: 950, column: 11, scope: !5270)
!5286 = !DILocation(line: 952, column: 18, scope: !5280)
!5287 = !DILocation(line: 952, column: 22, scope: !5280)
!5288 = !DILocation(line: 952, column: 42, scope: !5280)
!5289 = !DILocation(line: 952, column: 2, scope: !5280)
!5290 = !DILocation(line: 953, column: 5, scope: !5270)
!5291 = !DILocation(line: 955, column: 3, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 955, column: 3)
!5293 = !DILocation(line: 955, column: 3, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 955, column: 3)
!5295 = !DILocation(line: 957, column: 11, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 957, column: 11)
!5297 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 956, column: 5)
!5298 = !DILocation(line: 957, column: 20, scope: !5296)
!5299 = !DILocation(line: 957, column: 11, scope: !5297)
!5300 = !DILocalVariable(name: "bb_info", scope: !5301, file: !3, line: 961, type: !2054)
!5301 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 958, column: 2)
!5302 = !DILocation(line: 961, column: 26, scope: !5301)
!5303 = !DILocation(line: 961, column: 36, scope: !5301)
!5304 = !DILocation(line: 962, column: 17, scope: !5301)
!5305 = !DILocation(line: 962, column: 26, scope: !5301)
!5306 = !DILocation(line: 962, column: 31, scope: !5301)
!5307 = !DILocation(line: 962, column: 35, scope: !5301)
!5308 = !DILocation(line: 962, column: 4, scope: !5301)
!5309 = !DILocation(line: 963, column: 2, scope: !5301)
!5310 = !DILocation(line: 965, column: 26, scope: !5296)
!5311 = !DILocation(line: 965, column: 2, scope: !5296)
!5312 = !DILocation(line: 966, column: 5, scope: !5297)
!5313 = distinct !{!5313, !5291, !5314}
!5314 = !DILocation(line: 966, column: 5, scope: !5292)
!5315 = !DILocation(line: 968, column: 17, scope: !5253)
!5316 = !DILocation(line: 968, column: 24, scope: !5253)
!5317 = !DILocation(line: 968, column: 3, scope: !5253)
!5318 = !DILocation(line: 969, column: 1, scope: !5253)
!5319 = distinct !DISubprogram(name: "df_lr_init", scope: !3, file: !3, line: 975, type: !2121, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5320 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5319, file: !3, line: 975, type: !802)
!5321 = !DILocation(line: 975, column: 20, scope: !5319)
!5322 = !DILocalVariable(name: "bb_index", scope: !5319, file: !3, line: 977, type: !7)
!5323 = !DILocation(line: 977, column: 16, scope: !5319)
!5324 = !DILocalVariable(name: "bi", scope: !5319, file: !3, line: 978, type: !4201)
!5325 = !DILocation(line: 978, column: 19, scope: !5319)
!5326 = !DILocation(line: 980, column: 3, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 980, column: 3)
!5328 = !DILocation(line: 980, column: 3, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 980, column: 3)
!5330 = !DILocalVariable(name: "bb_info", scope: !5331, file: !3, line: 982, type: !2054)
!5331 = distinct !DILexicalBlock(scope: !5329, file: !3, line: 981, column: 5)
!5332 = !DILocation(line: 982, column: 29, scope: !5331)
!5333 = !DILocation(line: 982, column: 58, scope: !5331)
!5334 = !DILocation(line: 982, column: 39, scope: !5331)
!5335 = !DILocation(line: 983, column: 20, scope: !5331)
!5336 = !DILocation(line: 983, column: 29, scope: !5331)
!5337 = !DILocation(line: 983, column: 33, scope: !5331)
!5338 = !DILocation(line: 983, column: 42, scope: !5331)
!5339 = !DILocation(line: 983, column: 7, scope: !5331)
!5340 = !DILocation(line: 984, column: 21, scope: !5331)
!5341 = !DILocation(line: 984, column: 30, scope: !5331)
!5342 = !DILocation(line: 984, column: 7, scope: !5331)
!5343 = !DILocation(line: 985, column: 5, scope: !5331)
!5344 = distinct !{!5344, !5326, !5345}
!5345 = !DILocation(line: 985, column: 5, scope: !5327)
!5346 = !DILocation(line: 986, column: 1, scope: !5319)
!5347 = distinct !DISubprogram(name: "df_lr_confluence_0", scope: !3, file: !3, line: 993, type: !2178, scopeLine: 994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5348 = !DILocalVariable(name: "bb", arg: 1, scope: !5347, file: !3, line: 993, type: !1357)
!5349 = !DILocation(line: 993, column: 33, scope: !5347)
!5350 = !DILocalVariable(name: "op1", scope: !5347, file: !3, line: 995, type: !802)
!5351 = !DILocation(line: 995, column: 10, scope: !5347)
!5352 = !DILocation(line: 995, column: 35, scope: !5347)
!5353 = !DILocation(line: 995, column: 39, scope: !5347)
!5354 = !DILocation(line: 995, column: 16, scope: !5347)
!5355 = !DILocation(line: 995, column: 47, scope: !5347)
!5356 = !DILocation(line: 996, column: 7, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 996, column: 7)
!5358 = !DILocation(line: 996, column: 13, scope: !5357)
!5359 = !DILocation(line: 996, column: 10, scope: !5357)
!5360 = !DILocation(line: 996, column: 7, scope: !5347)
!5361 = !DILocation(line: 997, column: 18, scope: !5357)
!5362 = !DILocation(line: 997, column: 23, scope: !5357)
!5363 = !DILocation(line: 997, column: 27, scope: !5357)
!5364 = !DILocation(line: 997, column: 5, scope: !5357)
!5365 = !DILocation(line: 998, column: 1, scope: !5347)
!5366 = distinct !DISubprogram(name: "df_lr_confluence_n", scope: !3, file: !3, line: 1004, type: !2183, scopeLine: 1005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5367 = !DILocalVariable(name: "e", arg: 1, scope: !5366, file: !3, line: 1004, type: !1374)
!5368 = !DILocation(line: 1004, column: 26, scope: !5366)
!5369 = !DILocalVariable(name: "op1", scope: !5366, file: !3, line: 1006, type: !802)
!5370 = !DILocation(line: 1006, column: 10, scope: !5366)
!5371 = !DILocation(line: 1006, column: 35, scope: !5366)
!5372 = !DILocation(line: 1006, column: 38, scope: !5366)
!5373 = !DILocation(line: 1006, column: 43, scope: !5366)
!5374 = !DILocation(line: 1006, column: 16, scope: !5366)
!5375 = !DILocation(line: 1006, column: 51, scope: !5366)
!5376 = !DILocalVariable(name: "op2", scope: !5366, file: !3, line: 1007, type: !802)
!5377 = !DILocation(line: 1007, column: 10, scope: !5366)
!5378 = !DILocation(line: 1007, column: 35, scope: !5366)
!5379 = !DILocation(line: 1007, column: 38, scope: !5366)
!5380 = !DILocation(line: 1007, column: 44, scope: !5366)
!5381 = !DILocation(line: 1007, column: 16, scope: !5366)
!5382 = !DILocation(line: 1007, column: 52, scope: !5366)
!5383 = !DILocation(line: 1012, column: 7, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 1012, column: 7)
!5385 = !DILocation(line: 1012, column: 10, scope: !5384)
!5386 = !DILocation(line: 1012, column: 16, scope: !5384)
!5387 = !DILocation(line: 1012, column: 7, scope: !5366)
!5388 = !DILocation(line: 1013, column: 32, scope: !5384)
!5389 = !DILocation(line: 1013, column: 37, scope: !5384)
!5390 = !DILocation(line: 1013, column: 42, scope: !5384)
!5391 = !DILocation(line: 1013, column: 5, scope: !5384)
!5392 = !DILocation(line: 1015, column: 22, scope: !5384)
!5393 = !DILocation(line: 1015, column: 27, scope: !5384)
!5394 = !DILocation(line: 1015, column: 5, scope: !5384)
!5395 = !DILocation(line: 1017, column: 20, scope: !5366)
!5396 = !DILocation(line: 1017, column: 25, scope: !5366)
!5397 = !DILocation(line: 1017, column: 29, scope: !5366)
!5398 = !DILocation(line: 1017, column: 3, scope: !5366)
!5399 = !DILocation(line: 1018, column: 1, scope: !5366)
!5400 = distinct !DISubprogram(name: "df_lr_transfer_function", scope: !3, file: !3, line: 1024, type: !2188, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5401 = !DILocalVariable(name: "bb_index", arg: 1, scope: !5400, file: !3, line: 1024, type: !855)
!5402 = !DILocation(line: 1024, column: 30, scope: !5400)
!5403 = !DILocalVariable(name: "bb_info", scope: !5400, file: !3, line: 1026, type: !2054)
!5404 = !DILocation(line: 1026, column: 25, scope: !5400)
!5405 = !DILocation(line: 1026, column: 54, scope: !5400)
!5406 = !DILocation(line: 1026, column: 35, scope: !5400)
!5407 = !DILocalVariable(name: "in", scope: !5400, file: !3, line: 1027, type: !802)
!5408 = !DILocation(line: 1027, column: 10, scope: !5400)
!5409 = !DILocation(line: 1027, column: 15, scope: !5400)
!5410 = !DILocation(line: 1027, column: 24, scope: !5400)
!5411 = !DILocalVariable(name: "out", scope: !5400, file: !3, line: 1028, type: !802)
!5412 = !DILocation(line: 1028, column: 10, scope: !5400)
!5413 = !DILocation(line: 1028, column: 16, scope: !5400)
!5414 = !DILocation(line: 1028, column: 25, scope: !5400)
!5415 = !DILocalVariable(name: "use", scope: !5400, file: !3, line: 1029, type: !802)
!5416 = !DILocation(line: 1029, column: 10, scope: !5400)
!5417 = !DILocation(line: 1029, column: 16, scope: !5400)
!5418 = !DILocation(line: 1029, column: 25, scope: !5400)
!5419 = !DILocalVariable(name: "def", scope: !5400, file: !3, line: 1030, type: !802)
!5420 = !DILocation(line: 1030, column: 10, scope: !5400)
!5421 = !DILocation(line: 1030, column: 16, scope: !5400)
!5422 = !DILocation(line: 1030, column: 25, scope: !5400)
!5423 = !DILocation(line: 1032, column: 32, scope: !5400)
!5424 = !DILocation(line: 1032, column: 36, scope: !5400)
!5425 = !DILocation(line: 1032, column: 41, scope: !5400)
!5426 = !DILocation(line: 1032, column: 46, scope: !5400)
!5427 = !DILocation(line: 1032, column: 10, scope: !5400)
!5428 = !DILocation(line: 1032, column: 3, scope: !5400)
!5429 = distinct !DISubprogram(name: "df_lr_finalize", scope: !3, file: !3, line: 1039, type: !2121, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5430 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5429, file: !3, line: 1039, type: !802)
!5431 = !DILocation(line: 1039, column: 24, scope: !5429)
!5432 = !DILocation(line: 1041, column: 3, scope: !5429)
!5433 = !DILocation(line: 1041, column: 10, scope: !5429)
!5434 = !DILocation(line: 1041, column: 26, scope: !5429)
!5435 = !DILocation(line: 1042, column: 7, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 1042, column: 7)
!5437 = !DILocation(line: 1042, column: 11, scope: !5436)
!5438 = !DILocation(line: 1042, column: 28, scope: !5436)
!5439 = !DILocation(line: 1042, column: 7, scope: !5429)
!5440 = !DILocation(line: 1044, column: 7, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 1043, column: 5)
!5442 = !DILocation(line: 1057, column: 11, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 1057, column: 11)
!5444 = !DILocation(line: 1057, column: 18, scope: !5443)
!5445 = !DILocation(line: 1057, column: 11, scope: !5441)
!5446 = !DILocation(line: 1059, column: 4, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 1058, column: 2)
!5448 = !DILocation(line: 1060, column: 17, scope: !5447)
!5449 = !DILocation(line: 1060, column: 4, scope: !5447)
!5450 = !DILocation(line: 1061, column: 25, scope: !5447)
!5451 = !DILocation(line: 1061, column: 4, scope: !5447)
!5452 = !DILocation(line: 1062, column: 26, scope: !5447)
!5453 = !DILocation(line: 1062, column: 33, scope: !5447)
!5454 = !DILocation(line: 1062, column: 45, scope: !5447)
!5455 = !DILocation(line: 1062, column: 49, scope: !5447)
!5456 = !DILocation(line: 1062, column: 60, scope: !5447)
!5457 = !DILocation(line: 1062, column: 64, scope: !5447)
!5458 = !DILocation(line: 1062, column: 4, scope: !5447)
!5459 = !DILocation(line: 1063, column: 20, scope: !5447)
!5460 = !DILocation(line: 1063, column: 4, scope: !5447)
!5461 = !DILocation(line: 1064, column: 4, scope: !5447)
!5462 = !DILocation(line: 1065, column: 2, scope: !5447)
!5463 = !DILocation(line: 1066, column: 5, scope: !5441)
!5464 = !DILocation(line: 1067, column: 1, scope: !5429)
!5465 = distinct !DISubprogram(name: "df_lr_free", scope: !3, file: !3, line: 1073, type: !2195, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5466 = !DILocation(line: 1075, column: 7, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5465, file: !3, line: 1075, column: 7)
!5468 = !DILocation(line: 1075, column: 14, scope: !5467)
!5469 = !DILocation(line: 1075, column: 7, scope: !5465)
!5470 = !DILocalVariable(name: "i", scope: !5471, file: !3, line: 1077, type: !7)
!5471 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 1076, column: 5)
!5472 = !DILocation(line: 1077, column: 20, scope: !5471)
!5473 = !DILocation(line: 1078, column: 14, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 1078, column: 7)
!5475 = !DILocation(line: 1078, column: 12, scope: !5474)
!5476 = !DILocation(line: 1078, column: 19, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 1078, column: 7)
!5478 = !DILocation(line: 1078, column: 23, scope: !5477)
!5479 = !DILocation(line: 1078, column: 30, scope: !5477)
!5480 = !DILocation(line: 1078, column: 21, scope: !5477)
!5481 = !DILocation(line: 1078, column: 7, scope: !5474)
!5482 = !DILocalVariable(name: "bb_info", scope: !5483, file: !3, line: 1080, type: !2054)
!5483 = distinct !DILexicalBlock(scope: !5477, file: !3, line: 1079, column: 2)
!5484 = !DILocation(line: 1080, column: 26, scope: !5483)
!5485 = !DILocation(line: 1080, column: 55, scope: !5483)
!5486 = !DILocation(line: 1080, column: 36, scope: !5483)
!5487 = !DILocation(line: 1081, column: 8, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 1081, column: 8)
!5489 = !DILocation(line: 1081, column: 8, scope: !5483)
!5490 = !DILocation(line: 1083, column: 8, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 1082, column: 6)
!5492 = !DILocation(line: 1084, column: 8, scope: !5491)
!5493 = !DILocation(line: 1085, column: 8, scope: !5491)
!5494 = !DILocation(line: 1086, column: 8, scope: !5491)
!5495 = !DILocation(line: 1087, column: 6, scope: !5491)
!5496 = !DILocation(line: 1088, column: 2, scope: !5483)
!5497 = !DILocation(line: 1078, column: 48, scope: !5477)
!5498 = !DILocation(line: 1078, column: 7, scope: !5477)
!5499 = distinct !{!5499, !5481, !5500}
!5500 = !DILocation(line: 1088, column: 2, scope: !5474)
!5501 = !DILocation(line: 1089, column: 24, scope: !5471)
!5502 = !DILocation(line: 1089, column: 31, scope: !5471)
!5503 = !DILocation(line: 1089, column: 7, scope: !5471)
!5504 = !DILocation(line: 1091, column: 7, scope: !5471)
!5505 = !DILocation(line: 1091, column: 14, scope: !5471)
!5506 = !DILocation(line: 1091, column: 30, scope: !5471)
!5507 = !DILocation(line: 1092, column: 13, scope: !5471)
!5508 = !DILocation(line: 1092, column: 20, scope: !5471)
!5509 = !DILocation(line: 1092, column: 7, scope: !5471)
!5510 = !DILocation(line: 1093, column: 5, scope: !5471)
!5511 = !DILocation(line: 1095, column: 3, scope: !5465)
!5512 = !DILocation(line: 1096, column: 9, scope: !5465)
!5513 = !DILocation(line: 1096, column: 3, scope: !5465)
!5514 = !DILocation(line: 1097, column: 1, scope: !5465)
!5515 = distinct !DISubprogram(name: "df_lr_top_dump", scope: !3, file: !3, line: 1103, type: !2257, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5516 = !DILocalVariable(name: "bb", arg: 1, scope: !5515, file: !3, line: 1103, type: !1357)
!5517 = !DILocation(line: 1103, column: 29, scope: !5515)
!5518 = !DILocalVariable(name: "file", arg: 2, scope: !5515, file: !3, line: 1103, type: !2204)
!5519 = !DILocation(line: 1103, column: 39, scope: !5515)
!5520 = !DILocalVariable(name: "bb_info", scope: !5515, file: !3, line: 1105, type: !2054)
!5521 = !DILocation(line: 1105, column: 25, scope: !5515)
!5522 = !DILocation(line: 1105, column: 54, scope: !5515)
!5523 = !DILocation(line: 1105, column: 58, scope: !5515)
!5524 = !DILocation(line: 1105, column: 35, scope: !5515)
!5525 = !DILocalVariable(name: "problem_data", scope: !5515, file: !3, line: 1106, type: !2075)
!5526 = !DILocation(line: 1106, column: 30, scope: !5515)
!5527 = !DILocation(line: 1107, column: 8, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 1107, column: 7)
!5529 = !DILocation(line: 1107, column: 16, scope: !5528)
!5530 = !DILocation(line: 1107, column: 20, scope: !5528)
!5531 = !DILocation(line: 1107, column: 29, scope: !5528)
!5532 = !DILocation(line: 1107, column: 7, scope: !5515)
!5533 = !DILocation(line: 1108, column: 5, scope: !5528)
!5534 = !DILocation(line: 1110, column: 12, scope: !5515)
!5535 = !DILocation(line: 1110, column: 3, scope: !5515)
!5536 = !DILocation(line: 1111, column: 20, scope: !5515)
!5537 = !DILocation(line: 1111, column: 26, scope: !5515)
!5538 = !DILocation(line: 1111, column: 35, scope: !5515)
!5539 = !DILocation(line: 1111, column: 3, scope: !5515)
!5540 = !DILocation(line: 1112, column: 7, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 1112, column: 7)
!5542 = !DILocation(line: 1112, column: 14, scope: !5541)
!5543 = !DILocation(line: 1112, column: 7, scope: !5515)
!5544 = !DILocation(line: 1114, column: 51, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5541, file: !3, line: 1113, column: 5)
!5546 = !DILocation(line: 1114, column: 58, scope: !5545)
!5547 = !DILocation(line: 1114, column: 22, scope: !5545)
!5548 = !DILocation(line: 1114, column: 20, scope: !5545)
!5549 = !DILocation(line: 1115, column: 16, scope: !5545)
!5550 = !DILocation(line: 1115, column: 7, scope: !5545)
!5551 = !DILocation(line: 1116, column: 24, scope: !5545)
!5552 = !DILocation(line: 1116, column: 30, scope: !5545)
!5553 = !DILocation(line: 1116, column: 44, scope: !5545)
!5554 = !DILocation(line: 1116, column: 47, scope: !5545)
!5555 = !DILocation(line: 1116, column: 51, scope: !5545)
!5556 = !DILocation(line: 1116, column: 7, scope: !5545)
!5557 = !DILocation(line: 1117, column: 5, scope: !5545)
!5558 = !DILocation(line: 1118, column: 12, scope: !5515)
!5559 = !DILocation(line: 1118, column: 3, scope: !5515)
!5560 = !DILocation(line: 1119, column: 20, scope: !5515)
!5561 = !DILocation(line: 1119, column: 26, scope: !5515)
!5562 = !DILocation(line: 1119, column: 35, scope: !5515)
!5563 = !DILocation(line: 1119, column: 3, scope: !5515)
!5564 = !DILocation(line: 1120, column: 12, scope: !5515)
!5565 = !DILocation(line: 1120, column: 3, scope: !5515)
!5566 = !DILocation(line: 1121, column: 20, scope: !5515)
!5567 = !DILocation(line: 1121, column: 26, scope: !5515)
!5568 = !DILocation(line: 1121, column: 35, scope: !5515)
!5569 = !DILocation(line: 1121, column: 3, scope: !5515)
!5570 = !DILocation(line: 1122, column: 1, scope: !5515)
!5571 = distinct !DISubprogram(name: "df_lr_bottom_dump", scope: !3, file: !3, line: 1128, type: !2257, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5572 = !DILocalVariable(name: "bb", arg: 1, scope: !5571, file: !3, line: 1128, type: !1357)
!5573 = !DILocation(line: 1128, column: 32, scope: !5571)
!5574 = !DILocalVariable(name: "file", arg: 2, scope: !5571, file: !3, line: 1128, type: !2204)
!5575 = !DILocation(line: 1128, column: 42, scope: !5571)
!5576 = !DILocalVariable(name: "bb_info", scope: !5571, file: !3, line: 1130, type: !2054)
!5577 = !DILocation(line: 1130, column: 25, scope: !5571)
!5578 = !DILocation(line: 1130, column: 54, scope: !5571)
!5579 = !DILocation(line: 1130, column: 58, scope: !5571)
!5580 = !DILocation(line: 1130, column: 35, scope: !5571)
!5581 = !DILocalVariable(name: "problem_data", scope: !5571, file: !3, line: 1131, type: !2075)
!5582 = !DILocation(line: 1131, column: 30, scope: !5571)
!5583 = !DILocation(line: 1132, column: 8, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 1132, column: 7)
!5585 = !DILocation(line: 1132, column: 16, scope: !5584)
!5586 = !DILocation(line: 1132, column: 20, scope: !5584)
!5587 = !DILocation(line: 1132, column: 29, scope: !5584)
!5588 = !DILocation(line: 1132, column: 7, scope: !5571)
!5589 = !DILocation(line: 1133, column: 5, scope: !5584)
!5590 = !DILocation(line: 1135, column: 12, scope: !5571)
!5591 = !DILocation(line: 1135, column: 3, scope: !5571)
!5592 = !DILocation(line: 1136, column: 20, scope: !5571)
!5593 = !DILocation(line: 1136, column: 26, scope: !5571)
!5594 = !DILocation(line: 1136, column: 35, scope: !5571)
!5595 = !DILocation(line: 1136, column: 3, scope: !5571)
!5596 = !DILocation(line: 1137, column: 7, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 1137, column: 7)
!5598 = !DILocation(line: 1137, column: 14, scope: !5597)
!5599 = !DILocation(line: 1137, column: 7, scope: !5571)
!5600 = !DILocation(line: 1139, column: 51, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 1138, column: 5)
!5602 = !DILocation(line: 1139, column: 58, scope: !5601)
!5603 = !DILocation(line: 1139, column: 22, scope: !5601)
!5604 = !DILocation(line: 1139, column: 20, scope: !5601)
!5605 = !DILocation(line: 1140, column: 16, scope: !5601)
!5606 = !DILocation(line: 1140, column: 7, scope: !5601)
!5607 = !DILocation(line: 1141, column: 24, scope: !5601)
!5608 = !DILocation(line: 1141, column: 30, scope: !5601)
!5609 = !DILocation(line: 1141, column: 44, scope: !5601)
!5610 = !DILocation(line: 1141, column: 48, scope: !5601)
!5611 = !DILocation(line: 1141, column: 52, scope: !5601)
!5612 = !DILocation(line: 1141, column: 7, scope: !5601)
!5613 = !DILocation(line: 1142, column: 5, scope: !5601)
!5614 = !DILocation(line: 1143, column: 1, scope: !5571)
!5615 = distinct !DISubprogram(name: "df_lr_verify_solution_start", scope: !3, file: !3, line: 1150, type: !2195, scopeLine: 1151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5616 = !DILocalVariable(name: "bb", scope: !5615, file: !3, line: 1152, type: !1357)
!5617 = !DILocation(line: 1152, column: 15, scope: !5615)
!5618 = !DILocalVariable(name: "problem_data", scope: !5615, file: !3, line: 1153, type: !2075)
!5619 = !DILocation(line: 1153, column: 30, scope: !5615)
!5620 = !DILocation(line: 1154, column: 7, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 1154, column: 7)
!5622 = !DILocation(line: 1154, column: 14, scope: !5621)
!5623 = !DILocation(line: 1154, column: 7, scope: !5615)
!5624 = !DILocation(line: 1156, column: 7, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 1155, column: 5)
!5626 = !DILocation(line: 1156, column: 14, scope: !5625)
!5627 = !DILocation(line: 1156, column: 27, scope: !5625)
!5628 = !DILocation(line: 1157, column: 7, scope: !5625)
!5629 = !DILocation(line: 1161, column: 3, scope: !5615)
!5630 = !DILocation(line: 1161, column: 10, scope: !5615)
!5631 = !DILocation(line: 1161, column: 26, scope: !5615)
!5632 = !DILocation(line: 1163, column: 18, scope: !5615)
!5633 = !DILocation(line: 1163, column: 16, scope: !5615)
!5634 = !DILocation(line: 1164, column: 25, scope: !5615)
!5635 = !DILocation(line: 1164, column: 3, scope: !5615)
!5636 = !DILocation(line: 1164, column: 10, scope: !5615)
!5637 = !DILocation(line: 1164, column: 23, scope: !5615)
!5638 = !DILocation(line: 1165, column: 22, scope: !5615)
!5639 = !DILocation(line: 1165, column: 3, scope: !5615)
!5640 = !DILocation(line: 1165, column: 17, scope: !5615)
!5641 = !DILocation(line: 1165, column: 20, scope: !5615)
!5642 = !DILocation(line: 1166, column: 23, scope: !5615)
!5643 = !DILocation(line: 1166, column: 3, scope: !5615)
!5644 = !DILocation(line: 1166, column: 17, scope: !5615)
!5645 = !DILocation(line: 1166, column: 21, scope: !5615)
!5646 = !DILocation(line: 1168, column: 3, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 1168, column: 3)
!5648 = !DILocation(line: 1168, column: 3, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 1168, column: 3)
!5650 = !DILocation(line: 1170, column: 37, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 1169, column: 5)
!5652 = !DILocation(line: 1170, column: 7, scope: !5651)
!5653 = !DILocation(line: 1170, column: 21, scope: !5651)
!5654 = !DILocation(line: 1170, column: 24, scope: !5651)
!5655 = !DILocation(line: 1170, column: 28, scope: !5651)
!5656 = !DILocation(line: 1170, column: 35, scope: !5651)
!5657 = !DILocation(line: 1171, column: 38, scope: !5651)
!5658 = !DILocation(line: 1171, column: 7, scope: !5651)
!5659 = !DILocation(line: 1171, column: 21, scope: !5651)
!5660 = !DILocation(line: 1171, column: 25, scope: !5651)
!5661 = !DILocation(line: 1171, column: 29, scope: !5651)
!5662 = !DILocation(line: 1171, column: 36, scope: !5651)
!5663 = !DILocation(line: 1172, column: 20, scope: !5651)
!5664 = !DILocation(line: 1172, column: 34, scope: !5651)
!5665 = !DILocation(line: 1172, column: 37, scope: !5651)
!5666 = !DILocation(line: 1172, column: 41, scope: !5651)
!5667 = !DILocation(line: 1172, column: 49, scope: !5651)
!5668 = !DILocation(line: 1172, column: 7, scope: !5651)
!5669 = !DILocation(line: 1173, column: 20, scope: !5651)
!5670 = !DILocation(line: 1173, column: 34, scope: !5651)
!5671 = !DILocation(line: 1173, column: 38, scope: !5651)
!5672 = !DILocation(line: 1173, column: 42, scope: !5651)
!5673 = !DILocation(line: 1173, column: 50, scope: !5651)
!5674 = !DILocation(line: 1173, column: 7, scope: !5651)
!5675 = !DILocation(line: 1174, column: 5, scope: !5651)
!5676 = distinct !{!5676, !5646, !5677}
!5677 = !DILocation(line: 1174, column: 5, scope: !5647)
!5678 = !DILocation(line: 1175, column: 1, scope: !5615)
!5679 = distinct !DISubprogram(name: "df_lr_verify_solution_end", scope: !3, file: !3, line: 1182, type: !2195, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5680 = !DILocalVariable(name: "problem_data", scope: !5679, file: !3, line: 1184, type: !2075)
!5681 = !DILocation(line: 1184, column: 30, scope: !5679)
!5682 = !DILocalVariable(name: "bb", scope: !5679, file: !3, line: 1185, type: !1357)
!5683 = !DILocation(line: 1185, column: 15, scope: !5679)
!5684 = !DILocation(line: 1187, column: 7, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 1187, column: 7)
!5686 = !DILocation(line: 1187, column: 14, scope: !5685)
!5687 = !DILocation(line: 1187, column: 27, scope: !5685)
!5688 = !DILocation(line: 1187, column: 7, scope: !5679)
!5689 = !DILocation(line: 1188, column: 5, scope: !5685)
!5690 = !DILocation(line: 1190, column: 47, scope: !5679)
!5691 = !DILocation(line: 1190, column: 54, scope: !5679)
!5692 = !DILocation(line: 1190, column: 18, scope: !5679)
!5693 = !DILocation(line: 1190, column: 16, scope: !5679)
!5694 = !DILocation(line: 1192, column: 7, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 1192, column: 7)
!5696 = !DILocation(line: 1192, column: 14, scope: !5695)
!5697 = !DILocation(line: 1192, column: 7, scope: !5679)
!5698 = !DILocation(line: 1195, column: 5, scope: !5695)
!5699 = !DILocation(line: 1195, column: 12, scope: !5695)
!5700 = !DILocation(line: 1195, column: 28, scope: !5695)
!5701 = !DILocation(line: 1197, column: 5, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5695, file: !3, line: 1197, column: 5)
!5703 = !DILocation(line: 1197, column: 5, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 1197, column: 5)
!5705 = !DILocation(line: 1199, column: 24, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 1199, column: 6)
!5707 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1198, column: 7)
!5708 = !DILocation(line: 1199, column: 38, scope: !5706)
!5709 = !DILocation(line: 1199, column: 41, scope: !5706)
!5710 = !DILocation(line: 1199, column: 45, scope: !5706)
!5711 = !DILocation(line: 1199, column: 53, scope: !5706)
!5712 = !DILocation(line: 1199, column: 8, scope: !5706)
!5713 = !DILocation(line: 1200, column: 6, scope: !5706)
!5714 = !DILocation(line: 1200, column: 27, scope: !5706)
!5715 = !DILocation(line: 1200, column: 41, scope: !5706)
!5716 = !DILocation(line: 1200, column: 45, scope: !5706)
!5717 = !DILocation(line: 1200, column: 49, scope: !5706)
!5718 = !DILocation(line: 1200, column: 57, scope: !5706)
!5719 = !DILocation(line: 1200, column: 11, scope: !5706)
!5720 = !DILocation(line: 1199, column: 6, scope: !5707)
!5721 = !DILocation(line: 1203, column: 6, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1201, column: 4)
!5723 = !DILocation(line: 1204, column: 4, scope: !5722)
!5724 = !DILocation(line: 1205, column: 7, scope: !5707)
!5725 = distinct !{!5725, !5701, !5726}
!5726 = !DILocation(line: 1205, column: 7, scope: !5702)
!5727 = !DILocation(line: 1209, column: 3, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 1209, column: 3)
!5729 = !DILocation(line: 1209, column: 3, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 1209, column: 3)
!5731 = !DILocation(line: 1211, column: 7, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 1210, column: 5)
!5733 = !DILocation(line: 1212, column: 7, scope: !5732)
!5734 = !DILocation(line: 1213, column: 5, scope: !5732)
!5735 = distinct !{!5735, !5727, !5736}
!5736 = !DILocation(line: 1213, column: 5, scope: !5728)
!5737 = !DILocation(line: 1215, column: 9, scope: !5679)
!5738 = !DILocation(line: 1215, column: 23, scope: !5679)
!5739 = !DILocation(line: 1215, column: 3, scope: !5679)
!5740 = !DILocation(line: 1216, column: 9, scope: !5679)
!5741 = !DILocation(line: 1216, column: 23, scope: !5679)
!5742 = !DILocation(line: 1216, column: 3, scope: !5679)
!5743 = !DILocation(line: 1217, column: 9, scope: !5679)
!5744 = !DILocation(line: 1217, column: 3, scope: !5679)
!5745 = !DILocation(line: 1218, column: 3, scope: !5679)
!5746 = !DILocation(line: 1218, column: 10, scope: !5679)
!5747 = !DILocation(line: 1218, column: 23, scope: !5679)
!5748 = !DILocation(line: 1219, column: 1, scope: !5679)
!5749 = distinct !DISubprogram(name: "df_lr_set_bb_info", scope: !3, file: !3, line: 742, type: !5750, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{null, !7, !2054}
!5752 = !DILocalVariable(name: "index", arg: 1, scope: !5749, file: !3, line: 742, type: !7)
!5753 = !DILocation(line: 742, column: 33, scope: !5749)
!5754 = !DILocalVariable(name: "bb_info", arg: 2, scope: !5749, file: !3, line: 743, type: !2054)
!5755 = !DILocation(line: 743, column: 28, scope: !5749)
!5756 = !DILocation(line: 745, column: 3, scope: !5749)
!5757 = !DILocation(line: 746, column: 3, scope: !5749)
!5758 = !DILocation(line: 747, column: 30, scope: !5749)
!5759 = !DILocation(line: 747, column: 3, scope: !5749)
!5760 = !DILocation(line: 747, column: 10, scope: !5749)
!5761 = !DILocation(line: 747, column: 21, scope: !5749)
!5762 = !DILocation(line: 747, column: 28, scope: !5749)
!5763 = !DILocation(line: 748, column: 1, scope: !5749)
!5764 = distinct !DISubprogram(name: "df_live_alloc", scope: !3, file: !3, line: 1401, type: !2121, scopeLine: 1402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5765 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5764, file: !3, line: 1401, type: !802)
!5766 = !DILocation(line: 1401, column: 23, scope: !5764)
!5767 = !DILocalVariable(name: "bb_index", scope: !5764, file: !3, line: 1403, type: !7)
!5768 = !DILocation(line: 1403, column: 16, scope: !5764)
!5769 = !DILocalVariable(name: "bi", scope: !5764, file: !3, line: 1404, type: !4201)
!5770 = !DILocation(line: 1404, column: 19, scope: !5764)
!5771 = !DILocation(line: 1406, column: 8, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 1406, column: 7)
!5773 = !DILocation(line: 1406, column: 17, scope: !5772)
!5774 = !DILocation(line: 1406, column: 7, scope: !5764)
!5775 = !DILocation(line: 1407, column: 27, scope: !5772)
!5776 = !DILocation(line: 1407, column: 5, scope: !5772)
!5777 = !DILocation(line: 1407, column: 14, scope: !5772)
!5778 = !DILocation(line: 1407, column: 25, scope: !5772)
!5779 = !DILocation(line: 1409, column: 8, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 1409, column: 7)
!5781 = !DILocation(line: 1409, column: 7, scope: !5764)
!5782 = !DILocation(line: 1410, column: 23, scope: !5780)
!5783 = !DILocation(line: 1410, column: 21, scope: !5780)
!5784 = !DILocation(line: 1410, column: 5, scope: !5780)
!5785 = !DILocation(line: 1412, column: 20, scope: !5764)
!5786 = !DILocation(line: 1412, column: 3, scope: !5764)
!5787 = !DILocation(line: 1414, column: 3, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 1414, column: 3)
!5789 = !DILocation(line: 1414, column: 3, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 1414, column: 3)
!5791 = !DILocalVariable(name: "bb_info", scope: !5792, file: !3, line: 1416, type: !2047)
!5792 = distinct !DILexicalBlock(scope: !5790, file: !3, line: 1415, column: 5)
!5793 = !DILocation(line: 1416, column: 31, scope: !5792)
!5794 = !DILocation(line: 1416, column: 62, scope: !5792)
!5795 = !DILocation(line: 1416, column: 41, scope: !5792)
!5796 = !DILocation(line: 1417, column: 11, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1417, column: 11)
!5798 = !DILocation(line: 1417, column: 11, scope: !5792)
!5799 = !DILocation(line: 1419, column: 18, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 1418, column: 2)
!5801 = !DILocation(line: 1419, column: 27, scope: !5800)
!5802 = !DILocation(line: 1419, column: 4, scope: !5800)
!5803 = !DILocation(line: 1420, column: 18, scope: !5800)
!5804 = !DILocation(line: 1420, column: 27, scope: !5800)
!5805 = !DILocation(line: 1420, column: 4, scope: !5800)
!5806 = !DILocation(line: 1421, column: 2, scope: !5800)
!5807 = !DILocation(line: 1424, column: 53, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 1423, column: 2)
!5809 = !DILocation(line: 1424, column: 62, scope: !5808)
!5810 = !DILocation(line: 1424, column: 41, scope: !5808)
!5811 = !DILocation(line: 1424, column: 14, scope: !5808)
!5812 = !DILocation(line: 1424, column: 12, scope: !5808)
!5813 = !DILocation(line: 1425, column: 25, scope: !5808)
!5814 = !DILocation(line: 1425, column: 35, scope: !5808)
!5815 = !DILocation(line: 1425, column: 4, scope: !5808)
!5816 = !DILocation(line: 1426, column: 20, scope: !5808)
!5817 = !DILocation(line: 1426, column: 4, scope: !5808)
!5818 = !DILocation(line: 1426, column: 13, scope: !5808)
!5819 = !DILocation(line: 1426, column: 18, scope: !5808)
!5820 = !DILocation(line: 1427, column: 19, scope: !5808)
!5821 = !DILocation(line: 1427, column: 4, scope: !5808)
!5822 = !DILocation(line: 1427, column: 13, scope: !5808)
!5823 = !DILocation(line: 1427, column: 17, scope: !5808)
!5824 = !DILocation(line: 1428, column: 18, scope: !5808)
!5825 = !DILocation(line: 1428, column: 4, scope: !5808)
!5826 = !DILocation(line: 1428, column: 13, scope: !5808)
!5827 = !DILocation(line: 1428, column: 16, scope: !5808)
!5828 = !DILocation(line: 1429, column: 19, scope: !5808)
!5829 = !DILocation(line: 1429, column: 4, scope: !5808)
!5830 = !DILocation(line: 1429, column: 13, scope: !5808)
!5831 = !DILocation(line: 1429, column: 17, scope: !5808)
!5832 = !DILocation(line: 1431, column: 5, scope: !5792)
!5833 = distinct !{!5833, !5787, !5834}
!5834 = !DILocation(line: 1431, column: 5, scope: !5788)
!5835 = !DILocation(line: 1432, column: 26, scope: !5764)
!5836 = !DILocation(line: 1432, column: 35, scope: !5764)
!5837 = !DILocation(line: 1432, column: 25, scope: !5764)
!5838 = !DILocation(line: 1432, column: 3, scope: !5764)
!5839 = !DILocation(line: 1432, column: 12, scope: !5764)
!5840 = !DILocation(line: 1432, column: 23, scope: !5764)
!5841 = !DILocation(line: 1433, column: 1, scope: !5764)
!5842 = distinct !DISubprogram(name: "df_live_reset", scope: !3, file: !3, line: 1439, type: !2121, scopeLine: 1440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5843 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5842, file: !3, line: 1439, type: !802)
!5844 = !DILocation(line: 1439, column: 23, scope: !5842)
!5845 = !DILocalVariable(name: "bb_index", scope: !5842, file: !3, line: 1441, type: !7)
!5846 = !DILocation(line: 1441, column: 16, scope: !5842)
!5847 = !DILocalVariable(name: "bi", scope: !5842, file: !3, line: 1442, type: !4201)
!5848 = !DILocation(line: 1442, column: 19, scope: !5842)
!5849 = !DILocation(line: 1444, column: 3, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1444, column: 3)
!5851 = !DILocation(line: 1444, column: 3, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 1444, column: 3)
!5853 = !DILocalVariable(name: "bb_info", scope: !5854, file: !3, line: 1446, type: !2047)
!5854 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 1445, column: 5)
!5855 = !DILocation(line: 1446, column: 31, scope: !5854)
!5856 = !DILocation(line: 1446, column: 62, scope: !5854)
!5857 = !DILocation(line: 1446, column: 41, scope: !5854)
!5858 = !DILocation(line: 1447, column: 7, scope: !5854)
!5859 = !DILocation(line: 1448, column: 21, scope: !5854)
!5860 = !DILocation(line: 1448, column: 30, scope: !5854)
!5861 = !DILocation(line: 1448, column: 7, scope: !5854)
!5862 = !DILocation(line: 1449, column: 21, scope: !5854)
!5863 = !DILocation(line: 1449, column: 30, scope: !5854)
!5864 = !DILocation(line: 1449, column: 7, scope: !5854)
!5865 = !DILocation(line: 1450, column: 5, scope: !5854)
!5866 = distinct !{!5866, !5849, !5867}
!5867 = !DILocation(line: 1450, column: 5, scope: !5850)
!5868 = !DILocation(line: 1451, column: 1, scope: !5842)
!5869 = distinct !DISubprogram(name: "df_live_free_bb_info", scope: !3, file: !3, line: 1382, type: !2128, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5870 = !DILocalVariable(name: "bb", arg: 1, scope: !5869, file: !3, line: 1382, type: !1357)
!5871 = !DILocation(line: 1382, column: 35, scope: !5869)
!5872 = !DILocalVariable(name: "vbb_info", arg: 2, scope: !5869, file: !3, line: 1383, type: !801)
!5873 = !DILocation(line: 1383, column: 13, scope: !5869)
!5874 = !DILocalVariable(name: "bb_info", scope: !5869, file: !3, line: 1385, type: !2047)
!5875 = !DILocation(line: 1385, column: 27, scope: !5869)
!5876 = !DILocation(line: 1385, column: 64, scope: !5869)
!5877 = !DILocation(line: 1385, column: 37, scope: !5869)
!5878 = !DILocation(line: 1386, column: 7, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 1386, column: 7)
!5880 = !DILocation(line: 1386, column: 7, scope: !5869)
!5881 = !DILocation(line: 1388, column: 7, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5879, file: !3, line: 1387, column: 5)
!5883 = !DILocation(line: 1389, column: 7, scope: !5882)
!5884 = !DILocation(line: 1390, column: 7, scope: !5882)
!5885 = !DILocation(line: 1391, column: 7, scope: !5882)
!5886 = !DILocation(line: 1392, column: 18, scope: !5882)
!5887 = !DILocation(line: 1392, column: 27, scope: !5882)
!5888 = !DILocation(line: 1392, column: 39, scope: !5882)
!5889 = !DILocation(line: 1392, column: 7, scope: !5882)
!5890 = !DILocation(line: 1393, column: 5, scope: !5882)
!5891 = !DILocation(line: 1394, column: 1, scope: !5869)
!5892 = distinct !DISubprogram(name: "df_live_local_compute", scope: !3, file: !3, line: 1513, type: !2121, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5893 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5892, file: !3, line: 1513, type: !802)
!5894 = !DILocation(line: 1513, column: 31, scope: !5892)
!5895 = !DILocalVariable(name: "bb_index", scope: !5892, file: !3, line: 1515, type: !7)
!5896 = !DILocation(line: 1515, column: 16, scope: !5892)
!5897 = !DILocalVariable(name: "bi", scope: !5892, file: !3, line: 1516, type: !4201)
!5898 = !DILocation(line: 1516, column: 19, scope: !5892)
!5899 = !DILocation(line: 1518, column: 3, scope: !5892)
!5900 = !DILocation(line: 1520, column: 3, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1520, column: 3)
!5902 = !DILocation(line: 1520, column: 3, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 1520, column: 3)
!5904 = !DILocation(line: 1523, column: 33, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 1522, column: 5)
!5906 = !DILocation(line: 1523, column: 7, scope: !5905)
!5907 = !DILocation(line: 1524, column: 5, scope: !5905)
!5908 = distinct !{!5908, !5900, !5909}
!5909 = !DILocation(line: 1524, column: 5, scope: !5901)
!5910 = !DILocation(line: 1526, column: 17, scope: !5892)
!5911 = !DILocation(line: 1526, column: 26, scope: !5892)
!5912 = !DILocation(line: 1526, column: 3, scope: !5892)
!5913 = !DILocation(line: 1527, column: 1, scope: !5892)
!5914 = distinct !DISubprogram(name: "df_live_init", scope: !3, file: !3, line: 1533, type: !2121, scopeLine: 1534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5915 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5914, file: !3, line: 1533, type: !802)
!5916 = !DILocation(line: 1533, column: 22, scope: !5914)
!5917 = !DILocalVariable(name: "bb_index", scope: !5914, file: !3, line: 1535, type: !7)
!5918 = !DILocation(line: 1535, column: 16, scope: !5914)
!5919 = !DILocalVariable(name: "bi", scope: !5914, file: !3, line: 1536, type: !4201)
!5920 = !DILocation(line: 1536, column: 19, scope: !5914)
!5921 = !DILocation(line: 1538, column: 3, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 1538, column: 3)
!5923 = !DILocation(line: 1538, column: 3, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 1538, column: 3)
!5925 = !DILocalVariable(name: "bb_info", scope: !5926, file: !3, line: 1540, type: !2047)
!5926 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 1539, column: 5)
!5927 = !DILocation(line: 1540, column: 31, scope: !5926)
!5928 = !DILocation(line: 1540, column: 62, scope: !5926)
!5929 = !DILocation(line: 1540, column: 41, scope: !5926)
!5930 = !DILocalVariable(name: "bb_lr_info", scope: !5926, file: !3, line: 1541, type: !2054)
!5931 = !DILocation(line: 1541, column: 29, scope: !5926)
!5932 = !DILocation(line: 1541, column: 61, scope: !5926)
!5933 = !DILocation(line: 1541, column: 42, scope: !5926)
!5934 = !DILocation(line: 1545, column: 19, scope: !5926)
!5935 = !DILocation(line: 1545, column: 28, scope: !5926)
!5936 = !DILocation(line: 1545, column: 33, scope: !5926)
!5937 = !DILocation(line: 1545, column: 42, scope: !5926)
!5938 = !DILocation(line: 1545, column: 47, scope: !5926)
!5939 = !DILocation(line: 1545, column: 59, scope: !5926)
!5940 = !DILocation(line: 1545, column: 7, scope: !5926)
!5941 = !DILocation(line: 1546, column: 21, scope: !5926)
!5942 = !DILocation(line: 1546, column: 30, scope: !5926)
!5943 = !DILocation(line: 1546, column: 7, scope: !5926)
!5944 = !DILocation(line: 1547, column: 5, scope: !5926)
!5945 = distinct !{!5945, !5921, !5946}
!5946 = !DILocation(line: 1547, column: 5, scope: !5922)
!5947 = !DILocation(line: 1548, column: 1, scope: !5914)
!5948 = distinct !DISubprogram(name: "df_live_confluence_n", scope: !3, file: !3, line: 1553, type: !2183, scopeLine: 1554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5949 = !DILocalVariable(name: "e", arg: 1, scope: !5948, file: !3, line: 1553, type: !1374)
!5950 = !DILocation(line: 1553, column: 28, scope: !5948)
!5951 = !DILocalVariable(name: "op1", scope: !5948, file: !3, line: 1555, type: !802)
!5952 = !DILocation(line: 1555, column: 10, scope: !5948)
!5953 = !DILocation(line: 1555, column: 37, scope: !5948)
!5954 = !DILocation(line: 1555, column: 40, scope: !5948)
!5955 = !DILocation(line: 1555, column: 46, scope: !5948)
!5956 = !DILocation(line: 1555, column: 16, scope: !5948)
!5957 = !DILocation(line: 1555, column: 54, scope: !5948)
!5958 = !DILocalVariable(name: "op2", scope: !5948, file: !3, line: 1556, type: !802)
!5959 = !DILocation(line: 1556, column: 10, scope: !5948)
!5960 = !DILocation(line: 1556, column: 37, scope: !5948)
!5961 = !DILocation(line: 1556, column: 40, scope: !5948)
!5962 = !DILocation(line: 1556, column: 45, scope: !5948)
!5963 = !DILocation(line: 1556, column: 16, scope: !5948)
!5964 = !DILocation(line: 1556, column: 53, scope: !5948)
!5965 = !DILocation(line: 1558, column: 7, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 1558, column: 7)
!5967 = !DILocation(line: 1558, column: 10, scope: !5966)
!5968 = !DILocation(line: 1558, column: 16, scope: !5966)
!5969 = !DILocation(line: 1558, column: 7, scope: !5948)
!5970 = !DILocation(line: 1559, column: 5, scope: !5966)
!5971 = !DILocation(line: 1561, column: 20, scope: !5948)
!5972 = !DILocation(line: 1561, column: 25, scope: !5948)
!5973 = !DILocation(line: 1561, column: 3, scope: !5948)
!5974 = !DILocation(line: 1562, column: 1, scope: !5948)
!5975 = distinct !DISubprogram(name: "df_live_transfer_function", scope: !3, file: !3, line: 1568, type: !2188, scopeLine: 1569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!5976 = !DILocalVariable(name: "bb_index", arg: 1, scope: !5975, file: !3, line: 1568, type: !855)
!5977 = !DILocation(line: 1568, column: 32, scope: !5975)
!5978 = !DILocalVariable(name: "bb_info", scope: !5975, file: !3, line: 1570, type: !2047)
!5979 = !DILocation(line: 1570, column: 27, scope: !5975)
!5980 = !DILocation(line: 1570, column: 58, scope: !5975)
!5981 = !DILocation(line: 1570, column: 37, scope: !5975)
!5982 = !DILocalVariable(name: "bb_lr_info", scope: !5975, file: !3, line: 1571, type: !2054)
!5983 = !DILocation(line: 1571, column: 25, scope: !5975)
!5984 = !DILocation(line: 1571, column: 57, scope: !5975)
!5985 = !DILocation(line: 1571, column: 38, scope: !5975)
!5986 = !DILocalVariable(name: "in", scope: !5975, file: !3, line: 1572, type: !802)
!5987 = !DILocation(line: 1572, column: 10, scope: !5975)
!5988 = !DILocation(line: 1572, column: 15, scope: !5975)
!5989 = !DILocation(line: 1572, column: 24, scope: !5975)
!5990 = !DILocalVariable(name: "out", scope: !5975, file: !3, line: 1573, type: !802)
!5991 = !DILocation(line: 1573, column: 10, scope: !5975)
!5992 = !DILocation(line: 1573, column: 16, scope: !5975)
!5993 = !DILocation(line: 1573, column: 25, scope: !5975)
!5994 = !DILocalVariable(name: "gen", scope: !5975, file: !3, line: 1574, type: !802)
!5995 = !DILocation(line: 1574, column: 10, scope: !5975)
!5996 = !DILocation(line: 1574, column: 16, scope: !5975)
!5997 = !DILocation(line: 1574, column: 25, scope: !5975)
!5998 = !DILocalVariable(name: "kill", scope: !5975, file: !3, line: 1575, type: !802)
!5999 = !DILocation(line: 1575, column: 10, scope: !5975)
!6000 = !DILocation(line: 1575, column: 17, scope: !5975)
!6001 = !DILocation(line: 1575, column: 26, scope: !5975)
!6002 = !DILocation(line: 1580, column: 15, scope: !5975)
!6003 = !DILocation(line: 1580, column: 32, scope: !5975)
!6004 = !DILocation(line: 1580, column: 37, scope: !5975)
!6005 = !DILocation(line: 1580, column: 49, scope: !5975)
!6006 = !DILocation(line: 1580, column: 3, scope: !5975)
!6007 = !DILocation(line: 1583, column: 20, scope: !5975)
!6008 = !DILocation(line: 1583, column: 24, scope: !5975)
!6009 = !DILocation(line: 1583, column: 36, scope: !5975)
!6010 = !DILocation(line: 1583, column: 3, scope: !5975)
!6011 = !DILocation(line: 1585, column: 32, scope: !5975)
!6012 = !DILocation(line: 1585, column: 37, scope: !5975)
!6013 = !DILocation(line: 1585, column: 54, scope: !5975)
!6014 = !DILocation(line: 1585, column: 58, scope: !5975)
!6015 = !DILocation(line: 1585, column: 10, scope: !5975)
!6016 = !DILocation(line: 1585, column: 3, scope: !5975)
!6017 = distinct !DISubprogram(name: "df_live_finalize", scope: !3, file: !3, line: 1592, type: !2121, scopeLine: 1593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6018 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !6017, file: !3, line: 1592, type: !802)
!6019 = !DILocation(line: 1592, column: 26, scope: !6017)
!6020 = !DILocation(line: 1595, column: 7, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 1595, column: 7)
!6022 = !DILocation(line: 1595, column: 16, scope: !6021)
!6023 = !DILocation(line: 1595, column: 7, scope: !6017)
!6024 = !DILocalVariable(name: "bi", scope: !6025, file: !3, line: 1597, type: !4201)
!6025 = distinct !DILexicalBlock(scope: !6021, file: !3, line: 1596, column: 5)
!6026 = !DILocation(line: 1597, column: 23, scope: !6025)
!6027 = !DILocalVariable(name: "bb_index", scope: !6025, file: !3, line: 1598, type: !7)
!6028 = !DILocation(line: 1598, column: 20, scope: !6025)
!6029 = !DILocation(line: 1600, column: 7, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 1600, column: 7)
!6031 = !DILocation(line: 1600, column: 7, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 1600, column: 7)
!6033 = !DILocalVariable(name: "bb_lr_info", scope: !6034, file: !3, line: 1602, type: !2054)
!6034 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 1601, column: 2)
!6035 = !DILocation(line: 1602, column: 26, scope: !6034)
!6036 = !DILocation(line: 1602, column: 58, scope: !6034)
!6037 = !DILocation(line: 1602, column: 39, scope: !6034)
!6038 = !DILocalVariable(name: "bb_live_info", scope: !6034, file: !3, line: 1603, type: !2047)
!6039 = !DILocation(line: 1603, column: 28, scope: !6034)
!6040 = !DILocation(line: 1603, column: 64, scope: !6034)
!6041 = !DILocation(line: 1603, column: 43, scope: !6034)
!6042 = !DILocation(line: 1607, column: 21, scope: !6034)
!6043 = !DILocation(line: 1607, column: 35, scope: !6034)
!6044 = !DILocation(line: 1607, column: 39, scope: !6034)
!6045 = !DILocation(line: 1607, column: 51, scope: !6034)
!6046 = !DILocation(line: 1607, column: 4, scope: !6034)
!6047 = !DILocation(line: 1608, column: 21, scope: !6034)
!6048 = !DILocation(line: 1608, column: 35, scope: !6034)
!6049 = !DILocation(line: 1608, column: 40, scope: !6034)
!6050 = !DILocation(line: 1608, column: 52, scope: !6034)
!6051 = !DILocation(line: 1608, column: 4, scope: !6034)
!6052 = !DILocation(line: 1609, column: 2, scope: !6034)
!6053 = distinct !{!6053, !6029, !6054}
!6054 = !DILocation(line: 1609, column: 2, scope: !6030)
!6055 = !DILocation(line: 1611, column: 7, scope: !6025)
!6056 = !DILocation(line: 1611, column: 16, scope: !6025)
!6057 = !DILocation(line: 1611, column: 32, scope: !6025)
!6058 = !DILocation(line: 1612, column: 5, scope: !6025)
!6059 = !DILocation(line: 1613, column: 1, scope: !6017)
!6060 = distinct !DISubprogram(name: "df_live_free", scope: !3, file: !3, line: 1619, type: !2195, scopeLine: 1620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6061 = !DILocation(line: 1621, column: 7, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 1621, column: 7)
!6063 = !DILocation(line: 1621, column: 16, scope: !6062)
!6064 = !DILocation(line: 1621, column: 7, scope: !6060)
!6065 = !DILocalVariable(name: "i", scope: !6066, file: !3, line: 1623, type: !7)
!6066 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 1622, column: 5)
!6067 = !DILocation(line: 1623, column: 20, scope: !6066)
!6068 = !DILocation(line: 1625, column: 14, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 1625, column: 7)
!6070 = !DILocation(line: 1625, column: 12, scope: !6069)
!6071 = !DILocation(line: 1625, column: 19, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 1625, column: 7)
!6073 = !DILocation(line: 1625, column: 23, scope: !6072)
!6074 = !DILocation(line: 1625, column: 32, scope: !6072)
!6075 = !DILocation(line: 1625, column: 21, scope: !6072)
!6076 = !DILocation(line: 1625, column: 7, scope: !6069)
!6077 = !DILocalVariable(name: "bb_info", scope: !6078, file: !3, line: 1627, type: !2047)
!6078 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 1626, column: 2)
!6079 = !DILocation(line: 1627, column: 28, scope: !6078)
!6080 = !DILocation(line: 1627, column: 59, scope: !6078)
!6081 = !DILocation(line: 1627, column: 38, scope: !6078)
!6082 = !DILocation(line: 1628, column: 8, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 1628, column: 8)
!6084 = !DILocation(line: 1628, column: 8, scope: !6078)
!6085 = !DILocation(line: 1630, column: 8, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 1629, column: 6)
!6087 = !DILocation(line: 1631, column: 8, scope: !6086)
!6088 = !DILocation(line: 1632, column: 8, scope: !6086)
!6089 = !DILocation(line: 1633, column: 8, scope: !6086)
!6090 = !DILocation(line: 1634, column: 6, scope: !6086)
!6091 = !DILocation(line: 1635, column: 2, scope: !6078)
!6092 = !DILocation(line: 1625, column: 50, scope: !6072)
!6093 = !DILocation(line: 1625, column: 7, scope: !6072)
!6094 = distinct !{!6094, !6076, !6095}
!6095 = !DILocation(line: 1635, column: 2, scope: !6069)
!6096 = !DILocation(line: 1637, column: 24, scope: !6066)
!6097 = !DILocation(line: 1637, column: 33, scope: !6066)
!6098 = !DILocation(line: 1637, column: 7, scope: !6066)
!6099 = !DILocation(line: 1638, column: 7, scope: !6066)
!6100 = !DILocation(line: 1638, column: 16, scope: !6066)
!6101 = !DILocation(line: 1638, column: 32, scope: !6066)
!6102 = !DILocation(line: 1639, column: 13, scope: !6066)
!6103 = !DILocation(line: 1639, column: 22, scope: !6066)
!6104 = !DILocation(line: 1639, column: 7, scope: !6066)
!6105 = !DILocation(line: 1641, column: 11, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 1641, column: 11)
!6107 = !DILocation(line: 1641, column: 11, scope: !6066)
!6108 = !DILocation(line: 1642, column: 2, scope: !6106)
!6109 = !DILocation(line: 1643, column: 5, scope: !6066)
!6110 = !DILocation(line: 1644, column: 3, scope: !6060)
!6111 = !DILocation(line: 1645, column: 9, scope: !6060)
!6112 = !DILocation(line: 1645, column: 3, scope: !6060)
!6113 = !DILocation(line: 1646, column: 1, scope: !6060)
!6114 = distinct !DISubprogram(name: "df_live_top_dump", scope: !3, file: !3, line: 1652, type: !2257, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6115 = !DILocalVariable(name: "bb", arg: 1, scope: !6114, file: !3, line: 1652, type: !1357)
!6116 = !DILocation(line: 1652, column: 31, scope: !6114)
!6117 = !DILocalVariable(name: "file", arg: 2, scope: !6114, file: !3, line: 1652, type: !2204)
!6118 = !DILocation(line: 1652, column: 41, scope: !6114)
!6119 = !DILocalVariable(name: "bb_info", scope: !6114, file: !3, line: 1654, type: !2047)
!6120 = !DILocation(line: 1654, column: 27, scope: !6114)
!6121 = !DILocation(line: 1654, column: 58, scope: !6114)
!6122 = !DILocation(line: 1654, column: 62, scope: !6114)
!6123 = !DILocation(line: 1654, column: 37, scope: !6114)
!6124 = !DILocalVariable(name: "problem_data", scope: !6114, file: !3, line: 1655, type: !2086)
!6125 = !DILocation(line: 1655, column: 32, scope: !6114)
!6126 = !DILocation(line: 1657, column: 8, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 1657, column: 7)
!6128 = !DILocation(line: 1657, column: 16, scope: !6127)
!6129 = !DILocation(line: 1657, column: 20, scope: !6127)
!6130 = !DILocation(line: 1657, column: 29, scope: !6127)
!6131 = !DILocation(line: 1657, column: 7, scope: !6114)
!6132 = !DILocation(line: 1658, column: 5, scope: !6127)
!6133 = !DILocation(line: 1660, column: 12, scope: !6114)
!6134 = !DILocation(line: 1660, column: 3, scope: !6114)
!6135 = !DILocation(line: 1661, column: 20, scope: !6114)
!6136 = !DILocation(line: 1661, column: 26, scope: !6114)
!6137 = !DILocation(line: 1661, column: 35, scope: !6114)
!6138 = !DILocation(line: 1661, column: 3, scope: !6114)
!6139 = !DILocation(line: 1662, column: 7, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 1662, column: 7)
!6141 = !DILocation(line: 1662, column: 16, scope: !6140)
!6142 = !DILocation(line: 1662, column: 7, scope: !6114)
!6143 = !DILocation(line: 1664, column: 53, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 1663, column: 5)
!6145 = !DILocation(line: 1664, column: 62, scope: !6144)
!6146 = !DILocation(line: 1664, column: 22, scope: !6144)
!6147 = !DILocation(line: 1664, column: 20, scope: !6144)
!6148 = !DILocation(line: 1665, column: 16, scope: !6144)
!6149 = !DILocation(line: 1665, column: 7, scope: !6144)
!6150 = !DILocation(line: 1666, column: 24, scope: !6144)
!6151 = !DILocation(line: 1666, column: 30, scope: !6144)
!6152 = !DILocation(line: 1666, column: 44, scope: !6144)
!6153 = !DILocation(line: 1666, column: 47, scope: !6144)
!6154 = !DILocation(line: 1666, column: 51, scope: !6144)
!6155 = !DILocation(line: 1666, column: 7, scope: !6144)
!6156 = !DILocation(line: 1667, column: 5, scope: !6144)
!6157 = !DILocation(line: 1668, column: 12, scope: !6114)
!6158 = !DILocation(line: 1668, column: 3, scope: !6114)
!6159 = !DILocation(line: 1669, column: 20, scope: !6114)
!6160 = !DILocation(line: 1669, column: 26, scope: !6114)
!6161 = !DILocation(line: 1669, column: 35, scope: !6114)
!6162 = !DILocation(line: 1669, column: 3, scope: !6114)
!6163 = !DILocation(line: 1670, column: 12, scope: !6114)
!6164 = !DILocation(line: 1670, column: 3, scope: !6114)
!6165 = !DILocation(line: 1671, column: 20, scope: !6114)
!6166 = !DILocation(line: 1671, column: 26, scope: !6114)
!6167 = !DILocation(line: 1671, column: 35, scope: !6114)
!6168 = !DILocation(line: 1671, column: 3, scope: !6114)
!6169 = !DILocation(line: 1672, column: 1, scope: !6114)
!6170 = distinct !DISubprogram(name: "df_live_bottom_dump", scope: !3, file: !3, line: 1678, type: !2257, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6171 = !DILocalVariable(name: "bb", arg: 1, scope: !6170, file: !3, line: 1678, type: !1357)
!6172 = !DILocation(line: 1678, column: 34, scope: !6170)
!6173 = !DILocalVariable(name: "file", arg: 2, scope: !6170, file: !3, line: 1678, type: !2204)
!6174 = !DILocation(line: 1678, column: 44, scope: !6170)
!6175 = !DILocalVariable(name: "bb_info", scope: !6170, file: !3, line: 1680, type: !2047)
!6176 = !DILocation(line: 1680, column: 27, scope: !6170)
!6177 = !DILocation(line: 1680, column: 58, scope: !6170)
!6178 = !DILocation(line: 1680, column: 62, scope: !6170)
!6179 = !DILocation(line: 1680, column: 37, scope: !6170)
!6180 = !DILocalVariable(name: "problem_data", scope: !6170, file: !3, line: 1681, type: !2086)
!6181 = !DILocation(line: 1681, column: 32, scope: !6170)
!6182 = !DILocation(line: 1683, column: 8, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 1683, column: 7)
!6184 = !DILocation(line: 1683, column: 16, scope: !6183)
!6185 = !DILocation(line: 1683, column: 20, scope: !6183)
!6186 = !DILocation(line: 1683, column: 29, scope: !6183)
!6187 = !DILocation(line: 1683, column: 7, scope: !6170)
!6188 = !DILocation(line: 1684, column: 5, scope: !6183)
!6189 = !DILocation(line: 1686, column: 12, scope: !6170)
!6190 = !DILocation(line: 1686, column: 3, scope: !6170)
!6191 = !DILocation(line: 1687, column: 20, scope: !6170)
!6192 = !DILocation(line: 1687, column: 26, scope: !6170)
!6193 = !DILocation(line: 1687, column: 35, scope: !6170)
!6194 = !DILocation(line: 1687, column: 3, scope: !6170)
!6195 = !DILocation(line: 1688, column: 7, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 1688, column: 7)
!6197 = !DILocation(line: 1688, column: 16, scope: !6196)
!6198 = !DILocation(line: 1688, column: 7, scope: !6170)
!6199 = !DILocation(line: 1690, column: 53, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 1689, column: 5)
!6201 = !DILocation(line: 1690, column: 62, scope: !6200)
!6202 = !DILocation(line: 1690, column: 22, scope: !6200)
!6203 = !DILocation(line: 1690, column: 20, scope: !6200)
!6204 = !DILocation(line: 1691, column: 16, scope: !6200)
!6205 = !DILocation(line: 1691, column: 7, scope: !6200)
!6206 = !DILocation(line: 1692, column: 24, scope: !6200)
!6207 = !DILocation(line: 1692, column: 30, scope: !6200)
!6208 = !DILocation(line: 1692, column: 44, scope: !6200)
!6209 = !DILocation(line: 1692, column: 48, scope: !6200)
!6210 = !DILocation(line: 1692, column: 52, scope: !6200)
!6211 = !DILocation(line: 1692, column: 7, scope: !6200)
!6212 = !DILocation(line: 1693, column: 5, scope: !6200)
!6213 = !DILocation(line: 1694, column: 1, scope: !6170)
!6214 = distinct !DISubprogram(name: "df_live_verify_solution_start", scope: !3, file: !3, line: 1701, type: !2195, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6215 = !DILocalVariable(name: "bb", scope: !6214, file: !3, line: 1703, type: !1357)
!6216 = !DILocation(line: 1703, column: 15, scope: !6214)
!6217 = !DILocalVariable(name: "problem_data", scope: !6214, file: !3, line: 1704, type: !2086)
!6218 = !DILocation(line: 1704, column: 32, scope: !6214)
!6219 = !DILocation(line: 1705, column: 7, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 1705, column: 7)
!6221 = !DILocation(line: 1705, column: 16, scope: !6220)
!6222 = !DILocation(line: 1705, column: 7, scope: !6214)
!6223 = !DILocation(line: 1707, column: 7, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 1706, column: 5)
!6225 = !DILocation(line: 1707, column: 16, scope: !6224)
!6226 = !DILocation(line: 1707, column: 29, scope: !6224)
!6227 = !DILocation(line: 1708, column: 7, scope: !6224)
!6228 = !DILocation(line: 1712, column: 3, scope: !6214)
!6229 = !DILocation(line: 1712, column: 12, scope: !6214)
!6230 = !DILocation(line: 1712, column: 28, scope: !6214)
!6231 = !DILocation(line: 1714, column: 18, scope: !6214)
!6232 = !DILocation(line: 1714, column: 16, scope: !6214)
!6233 = !DILocation(line: 1715, column: 27, scope: !6214)
!6234 = !DILocation(line: 1715, column: 3, scope: !6214)
!6235 = !DILocation(line: 1715, column: 12, scope: !6214)
!6236 = !DILocation(line: 1715, column: 25, scope: !6214)
!6237 = !DILocation(line: 1716, column: 22, scope: !6214)
!6238 = !DILocation(line: 1716, column: 3, scope: !6214)
!6239 = !DILocation(line: 1716, column: 17, scope: !6214)
!6240 = !DILocation(line: 1716, column: 20, scope: !6214)
!6241 = !DILocation(line: 1717, column: 23, scope: !6214)
!6242 = !DILocation(line: 1717, column: 3, scope: !6214)
!6243 = !DILocation(line: 1717, column: 17, scope: !6214)
!6244 = !DILocation(line: 1717, column: 21, scope: !6214)
!6245 = !DILocation(line: 1719, column: 3, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 1719, column: 3)
!6247 = !DILocation(line: 1719, column: 3, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 1719, column: 3)
!6249 = !DILocation(line: 1721, column: 37, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6248, file: !3, line: 1720, column: 5)
!6251 = !DILocation(line: 1721, column: 7, scope: !6250)
!6252 = !DILocation(line: 1721, column: 21, scope: !6250)
!6253 = !DILocation(line: 1721, column: 24, scope: !6250)
!6254 = !DILocation(line: 1721, column: 28, scope: !6250)
!6255 = !DILocation(line: 1721, column: 35, scope: !6250)
!6256 = !DILocation(line: 1722, column: 38, scope: !6250)
!6257 = !DILocation(line: 1722, column: 7, scope: !6250)
!6258 = !DILocation(line: 1722, column: 21, scope: !6250)
!6259 = !DILocation(line: 1722, column: 25, scope: !6250)
!6260 = !DILocation(line: 1722, column: 29, scope: !6250)
!6261 = !DILocation(line: 1722, column: 36, scope: !6250)
!6262 = !DILocation(line: 1723, column: 20, scope: !6250)
!6263 = !DILocation(line: 1723, column: 34, scope: !6250)
!6264 = !DILocation(line: 1723, column: 37, scope: !6250)
!6265 = !DILocation(line: 1723, column: 41, scope: !6250)
!6266 = !DILocation(line: 1723, column: 49, scope: !6250)
!6267 = !DILocation(line: 1723, column: 7, scope: !6250)
!6268 = !DILocation(line: 1724, column: 20, scope: !6250)
!6269 = !DILocation(line: 1724, column: 34, scope: !6250)
!6270 = !DILocation(line: 1724, column: 38, scope: !6250)
!6271 = !DILocation(line: 1724, column: 42, scope: !6250)
!6272 = !DILocation(line: 1724, column: 50, scope: !6250)
!6273 = !DILocation(line: 1724, column: 7, scope: !6250)
!6274 = !DILocation(line: 1725, column: 5, scope: !6250)
!6275 = distinct !{!6275, !6245, !6276}
!6276 = !DILocation(line: 1725, column: 5, scope: !6246)
!6277 = !DILocation(line: 1726, column: 1, scope: !6214)
!6278 = distinct !DISubprogram(name: "df_live_verify_solution_end", scope: !3, file: !3, line: 1733, type: !2195, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6279 = !DILocalVariable(name: "problem_data", scope: !6278, file: !3, line: 1735, type: !2086)
!6280 = !DILocation(line: 1735, column: 32, scope: !6278)
!6281 = !DILocalVariable(name: "bb", scope: !6278, file: !3, line: 1736, type: !1357)
!6282 = !DILocation(line: 1736, column: 15, scope: !6278)
!6283 = !DILocation(line: 1738, column: 7, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 1738, column: 7)
!6285 = !DILocation(line: 1738, column: 16, scope: !6284)
!6286 = !DILocation(line: 1738, column: 29, scope: !6284)
!6287 = !DILocation(line: 1738, column: 7, scope: !6278)
!6288 = !DILocation(line: 1739, column: 5, scope: !6284)
!6289 = !DILocation(line: 1741, column: 49, scope: !6278)
!6290 = !DILocation(line: 1741, column: 58, scope: !6278)
!6291 = !DILocation(line: 1741, column: 18, scope: !6278)
!6292 = !DILocation(line: 1741, column: 16, scope: !6278)
!6293 = !DILocation(line: 1743, column: 3, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 1743, column: 3)
!6295 = !DILocation(line: 1743, column: 3, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 1743, column: 3)
!6297 = !DILocation(line: 1745, column: 29, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 1745, column: 11)
!6299 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 1744, column: 5)
!6300 = !DILocation(line: 1745, column: 43, scope: !6298)
!6301 = !DILocation(line: 1745, column: 46, scope: !6298)
!6302 = !DILocation(line: 1745, column: 50, scope: !6298)
!6303 = !DILocation(line: 1745, column: 58, scope: !6298)
!6304 = !DILocation(line: 1745, column: 13, scope: !6298)
!6305 = !DILocation(line: 1746, column: 4, scope: !6298)
!6306 = !DILocation(line: 1746, column: 25, scope: !6298)
!6307 = !DILocation(line: 1746, column: 39, scope: !6298)
!6308 = !DILocation(line: 1746, column: 43, scope: !6298)
!6309 = !DILocation(line: 1746, column: 47, scope: !6298)
!6310 = !DILocation(line: 1746, column: 55, scope: !6298)
!6311 = !DILocation(line: 1746, column: 9, scope: !6298)
!6312 = !DILocation(line: 1745, column: 11, scope: !6299)
!6313 = !DILocation(line: 1749, column: 4, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1747, column: 2)
!6315 = !DILocation(line: 1750, column: 2, scope: !6314)
!6316 = !DILocation(line: 1751, column: 5, scope: !6299)
!6317 = distinct !{!6317, !6293, !6318}
!6318 = !DILocation(line: 1751, column: 5, scope: !6294)
!6319 = !DILocation(line: 1755, column: 3, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6278, file: !3, line: 1755, column: 3)
!6321 = !DILocation(line: 1755, column: 3, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 1755, column: 3)
!6323 = !DILocation(line: 1757, column: 7, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 1756, column: 5)
!6325 = !DILocation(line: 1758, column: 7, scope: !6324)
!6326 = !DILocation(line: 1759, column: 5, scope: !6324)
!6327 = distinct !{!6327, !6319, !6328}
!6328 = !DILocation(line: 1759, column: 5, scope: !6320)
!6329 = !DILocation(line: 1761, column: 9, scope: !6278)
!6330 = !DILocation(line: 1761, column: 23, scope: !6278)
!6331 = !DILocation(line: 1761, column: 3, scope: !6278)
!6332 = !DILocation(line: 1762, column: 9, scope: !6278)
!6333 = !DILocation(line: 1762, column: 23, scope: !6278)
!6334 = !DILocation(line: 1762, column: 3, scope: !6278)
!6335 = !DILocation(line: 1763, column: 9, scope: !6278)
!6336 = !DILocation(line: 1763, column: 3, scope: !6278)
!6337 = !DILocation(line: 1764, column: 3, scope: !6278)
!6338 = !DILocation(line: 1764, column: 12, scope: !6278)
!6339 = !DILocation(line: 1764, column: 25, scope: !6278)
!6340 = !DILocation(line: 1765, column: 1, scope: !6278)
!6341 = distinct !DISubprogram(name: "df_live_set_bb_info", scope: !3, file: !3, line: 1370, type: !6342, scopeLine: 1372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6342 = !DISubroutineType(types: !6343)
!6343 = !{null, !7, !2047}
!6344 = !DILocalVariable(name: "index", arg: 1, scope: !6341, file: !3, line: 1370, type: !7)
!6345 = !DILocation(line: 1370, column: 35, scope: !6341)
!6346 = !DILocalVariable(name: "bb_info", arg: 2, scope: !6341, file: !3, line: 1371, type: !2047)
!6347 = !DILocation(line: 1371, column: 30, scope: !6341)
!6348 = !DILocation(line: 1373, column: 3, scope: !6341)
!6349 = !DILocation(line: 1374, column: 3, scope: !6341)
!6350 = !DILocation(line: 1375, column: 32, scope: !6341)
!6351 = !DILocation(line: 1375, column: 3, scope: !6341)
!6352 = !DILocation(line: 1375, column: 12, scope: !6341)
!6353 = !DILocation(line: 1375, column: 23, scope: !6341)
!6354 = !DILocation(line: 1375, column: 30, scope: !6341)
!6355 = !DILocation(line: 1376, column: 1, scope: !6341)
!6356 = distinct !DISubprogram(name: "df_chain_alloc", scope: !3, file: !3, line: 2039, type: !2121, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6357 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !6356, file: !3, line: 2039, type: !802)
!6358 = !DILocation(line: 2039, column: 24, scope: !6356)
!6359 = !DILocation(line: 2041, column: 3, scope: !6356)
!6360 = !DILocation(line: 2042, column: 26, scope: !6356)
!6361 = !DILocation(line: 2042, column: 3, scope: !6356)
!6362 = !DILocation(line: 2042, column: 13, scope: !6356)
!6363 = !DILocation(line: 2042, column: 24, scope: !6356)
!6364 = !DILocation(line: 2044, column: 3, scope: !6356)
!6365 = !DILocation(line: 2044, column: 13, scope: !6356)
!6366 = !DILocation(line: 2044, column: 24, scope: !6356)
!6367 = !DILocation(line: 2045, column: 1, scope: !6356)
!6368 = distinct !DISubprogram(name: "df_chain_reset", scope: !3, file: !3, line: 2051, type: !2121, scopeLine: 2052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6369 = !DILocalVariable(name: "blocks_to_clear", arg: 1, scope: !6368, file: !3, line: 2051, type: !802)
!6370 = !DILocation(line: 2051, column: 24, scope: !6368)
!6371 = !DILocation(line: 2053, column: 3, scope: !6368)
!6372 = !DILocation(line: 2054, column: 1, scope: !6368)
!6373 = distinct !DISubprogram(name: "df_chain_finalize", scope: !3, file: !3, line: 2163, type: !2121, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6374 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !6373, file: !3, line: 2163, type: !802)
!6375 = !DILocation(line: 2163, column: 27, scope: !6373)
!6376 = !DILocalVariable(name: "bb_index", scope: !6373, file: !3, line: 2165, type: !7)
!6377 = !DILocation(line: 2165, column: 16, scope: !6373)
!6378 = !DILocalVariable(name: "bi", scope: !6373, file: !3, line: 2166, type: !4201)
!6379 = !DILocation(line: 2166, column: 19, scope: !6373)
!6380 = !DILocation(line: 2168, column: 3, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 2168, column: 3)
!6382 = !DILocation(line: 2168, column: 3, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 2168, column: 3)
!6384 = !DILocation(line: 2170, column: 27, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 2169, column: 5)
!6386 = !DILocation(line: 2170, column: 7, scope: !6385)
!6387 = !DILocation(line: 2171, column: 5, scope: !6385)
!6388 = distinct !{!6388, !6380, !6389}
!6389 = !DILocation(line: 2171, column: 5, scope: !6381)
!6390 = !DILocation(line: 2172, column: 1, scope: !6373)
!6391 = distinct !DISubprogram(name: "df_chain_free", scope: !3, file: !3, line: 2178, type: !2195, scopeLine: 2179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6392 = !DILocation(line: 2180, column: 20, scope: !6391)
!6393 = !DILocation(line: 2180, column: 30, scope: !6391)
!6394 = !DILocation(line: 2180, column: 3, scope: !6391)
!6395 = !DILocation(line: 2181, column: 3, scope: !6391)
!6396 = !DILocation(line: 2182, column: 9, scope: !6391)
!6397 = !DILocation(line: 2182, column: 3, scope: !6391)
!6398 = !DILocation(line: 2183, column: 1, scope: !6391)
!6399 = distinct !DISubprogram(name: "df_chain_fully_remove_problem", scope: !3, file: !3, line: 2028, type: !2195, scopeLine: 2029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6400 = !DILocation(line: 2030, column: 3, scope: !6399)
!6401 = !DILocation(line: 2031, column: 3, scope: !6399)
!6402 = !DILocation(line: 2032, column: 9, scope: !6399)
!6403 = !DILocation(line: 2032, column: 3, scope: !6399)
!6404 = !DILocation(line: 2033, column: 1, scope: !6399)
!6405 = distinct !DISubprogram(name: "df_chain_top_dump", scope: !3, file: !3, line: 2189, type: !2257, scopeLine: 2190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6406 = !DILocalVariable(name: "bb", arg: 1, scope: !6405, file: !3, line: 2189, type: !1357)
!6407 = !DILocation(line: 2189, column: 32, scope: !6405)
!6408 = !DILocalVariable(name: "file", arg: 2, scope: !6405, file: !3, line: 2189, type: !2204)
!6409 = !DILocation(line: 2189, column: 42, scope: !6405)
!6410 = !DILocation(line: 2191, column: 7, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 2191, column: 7)
!6412 = !DILocation(line: 2191, column: 7, scope: !6405)
!6413 = !DILocalVariable(name: "insn", scope: !6414, file: !3, line: 2193, type: !883)
!6414 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2192, column: 5)
!6415 = !DILocation(line: 2193, column: 11, scope: !6414)
!6416 = !DILocalVariable(name: "def_rec", scope: !6414, file: !3, line: 2194, type: !1998)
!6417 = !DILocation(line: 2194, column: 15, scope: !6414)
!6418 = !DILocation(line: 2194, column: 49, scope: !6414)
!6419 = !DILocation(line: 2194, column: 53, scope: !6414)
!6420 = !DILocation(line: 2194, column: 25, scope: !6414)
!6421 = !DILocation(line: 2195, column: 12, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 2195, column: 11)
!6423 = !DILocation(line: 2195, column: 11, scope: !6422)
!6424 = !DILocation(line: 2195, column: 11, scope: !6414)
!6425 = !DILocation(line: 2198, column: 13, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 2196, column: 2)
!6427 = !DILocation(line: 2198, column: 4, scope: !6426)
!6428 = !DILocation(line: 2199, column: 4, scope: !6426)
!6429 = !DILocation(line: 2199, column: 12, scope: !6426)
!6430 = !DILocation(line: 2199, column: 11, scope: !6426)
!6431 = !DILocalVariable(name: "def", scope: !6432, file: !3, line: 2201, type: !872)
!6432 = distinct !DILexicalBlock(scope: !6426, file: !3, line: 2200, column: 6)
!6433 = !DILocation(line: 2201, column: 15, scope: !6432)
!6434 = !DILocation(line: 2201, column: 22, scope: !6432)
!6435 = !DILocation(line: 2201, column: 21, scope: !6432)
!6436 = !DILocation(line: 2202, column: 17, scope: !6432)
!6437 = !DILocation(line: 2202, column: 39, scope: !6432)
!6438 = !DILocation(line: 2202, column: 8, scope: !6432)
!6439 = !DILocation(line: 2203, column: 23, scope: !6432)
!6440 = !DILocation(line: 2203, column: 43, scope: !6432)
!6441 = !DILocation(line: 2203, column: 8, scope: !6432)
!6442 = !DILocation(line: 2204, column: 17, scope: !6432)
!6443 = !DILocation(line: 2204, column: 8, scope: !6432)
!6444 = !DILocation(line: 2205, column: 15, scope: !6432)
!6445 = distinct !{!6445, !6428, !6446}
!6446 = !DILocation(line: 2206, column: 6, scope: !6426)
!6447 = !DILocation(line: 2207, column: 2, scope: !6426)
!6448 = !DILocation(line: 2209, column: 7, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 2209, column: 7)
!6450 = !DILocation(line: 2209, column: 7, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 2209, column: 7)
!6452 = !DILocation(line: 0, scope: !6451)
!6453 = !DILocation(line: 2211, column: 8, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 2211, column: 8)
!6455 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 2210, column: 2)
!6456 = !DILocation(line: 2211, column: 8, scope: !6455)
!6457 = !DILocalVariable(name: "insn_info", scope: !6458, file: !3, line: 2213, type: !1993)
!6458 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 2212, column: 6)
!6459 = !DILocation(line: 2213, column: 29, scope: !6458)
!6460 = !DILocation(line: 2213, column: 41, scope: !6458)
!6461 = !DILocation(line: 2214, column: 18, scope: !6458)
!6462 = !DILocation(line: 2214, column: 16, scope: !6458)
!6463 = !DILocation(line: 2215, column: 13, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 2215, column: 12)
!6465 = !DILocation(line: 2215, column: 12, scope: !6464)
!6466 = !DILocation(line: 2215, column: 12, scope: !6458)
!6467 = !DILocation(line: 2217, column: 14, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 2216, column: 3)
!6469 = !DILocation(line: 2218, column: 7, scope: !6468)
!6470 = !DILocation(line: 2218, column: 38, scope: !6468)
!6471 = !DILocation(line: 2217, column: 5, scope: !6468)
!6472 = !DILocation(line: 2220, column: 5, scope: !6468)
!6473 = !DILocation(line: 2220, column: 13, scope: !6468)
!6474 = !DILocation(line: 2220, column: 12, scope: !6468)
!6475 = !DILocalVariable(name: "def", scope: !6476, file: !3, line: 2222, type: !872)
!6476 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2221, column: 7)
!6477 = !DILocation(line: 2222, column: 16, scope: !6476)
!6478 = !DILocation(line: 2222, column: 23, scope: !6476)
!6479 = !DILocation(line: 2222, column: 22, scope: !6476)
!6480 = !DILocation(line: 2223, column: 18, scope: !6476)
!6481 = !DILocation(line: 2223, column: 43, scope: !6476)
!6482 = !DILocation(line: 2223, column: 9, scope: !6476)
!6483 = !DILocation(line: 2224, column: 13, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 2224, column: 13)
!6485 = !DILocation(line: 2224, column: 32, scope: !6484)
!6486 = !DILocation(line: 2224, column: 13, scope: !6476)
!6487 = !DILocation(line: 2225, column: 13, scope: !6484)
!6488 = !DILocation(line: 2225, column: 4, scope: !6484)
!6489 = !DILocation(line: 2226, column: 24, scope: !6476)
!6490 = !DILocation(line: 2226, column: 44, scope: !6476)
!6491 = !DILocation(line: 2226, column: 9, scope: !6476)
!6492 = !DILocation(line: 2227, column: 18, scope: !6476)
!6493 = !DILocation(line: 2227, column: 9, scope: !6476)
!6494 = !DILocation(line: 2228, column: 16, scope: !6476)
!6495 = distinct !{!6495, !6472, !6496}
!6496 = !DILocation(line: 2229, column: 7, scope: !6468)
!6497 = !DILocation(line: 2230, column: 3, scope: !6468)
!6498 = !DILocation(line: 2231, column: 6, scope: !6458)
!6499 = !DILocation(line: 2232, column: 2, scope: !6455)
!6500 = distinct !{!6500, !6448, !6501}
!6501 = !DILocation(line: 2232, column: 2, scope: !6449)
!6502 = !DILocation(line: 2233, column: 5, scope: !6414)
!6503 = !DILocation(line: 2234, column: 1, scope: !6405)
!6504 = distinct !DISubprogram(name: "df_chain_bottom_dump", scope: !3, file: !3, line: 2238, type: !2257, scopeLine: 2239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6505 = !DILocalVariable(name: "bb", arg: 1, scope: !6504, file: !3, line: 2238, type: !1357)
!6506 = !DILocation(line: 2238, column: 35, scope: !6504)
!6507 = !DILocalVariable(name: "file", arg: 2, scope: !6504, file: !3, line: 2238, type: !2204)
!6508 = !DILocation(line: 2238, column: 45, scope: !6504)
!6509 = !DILocation(line: 2240, column: 7, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 2240, column: 7)
!6511 = !DILocation(line: 2240, column: 7, scope: !6504)
!6512 = !DILocalVariable(name: "insn", scope: !6513, file: !3, line: 2242, type: !883)
!6513 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 2241, column: 5)
!6514 = !DILocation(line: 2242, column: 11, scope: !6513)
!6515 = !DILocalVariable(name: "use_rec", scope: !6513, file: !3, line: 2243, type: !1998)
!6516 = !DILocation(line: 2243, column: 15, scope: !6513)
!6517 = !DILocation(line: 2243, column: 49, scope: !6513)
!6518 = !DILocation(line: 2243, column: 53, scope: !6513)
!6519 = !DILocation(line: 2243, column: 25, scope: !6513)
!6520 = !DILocation(line: 2245, column: 12, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 2245, column: 11)
!6522 = !DILocation(line: 2245, column: 11, scope: !6521)
!6523 = !DILocation(line: 2245, column: 11, scope: !6513)
!6524 = !DILocation(line: 2247, column: 13, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2246, column: 2)
!6526 = !DILocation(line: 2247, column: 4, scope: !6525)
!6527 = !DILocation(line: 2248, column: 4, scope: !6525)
!6528 = !DILocation(line: 2248, column: 12, scope: !6525)
!6529 = !DILocation(line: 2248, column: 11, scope: !6525)
!6530 = !DILocalVariable(name: "use", scope: !6531, file: !3, line: 2250, type: !872)
!6531 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 2249, column: 6)
!6532 = !DILocation(line: 2250, column: 15, scope: !6531)
!6533 = !DILocation(line: 2250, column: 22, scope: !6531)
!6534 = !DILocation(line: 2250, column: 21, scope: !6531)
!6535 = !DILocation(line: 2251, column: 17, scope: !6531)
!6536 = !DILocation(line: 2251, column: 39, scope: !6531)
!6537 = !DILocation(line: 2251, column: 8, scope: !6531)
!6538 = !DILocation(line: 2252, column: 23, scope: !6531)
!6539 = !DILocation(line: 2252, column: 43, scope: !6531)
!6540 = !DILocation(line: 2252, column: 8, scope: !6531)
!6541 = !DILocation(line: 2253, column: 17, scope: !6531)
!6542 = !DILocation(line: 2253, column: 8, scope: !6531)
!6543 = !DILocation(line: 2254, column: 15, scope: !6531)
!6544 = distinct !{!6544, !6527, !6545}
!6545 = !DILocation(line: 2255, column: 6, scope: !6525)
!6546 = !DILocation(line: 2256, column: 2, scope: !6525)
!6547 = !DILocation(line: 2258, column: 7, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 2258, column: 7)
!6549 = !DILocation(line: 2258, column: 7, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 2258, column: 7)
!6551 = !DILocation(line: 0, scope: !6550)
!6552 = !DILocation(line: 2260, column: 8, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 2260, column: 8)
!6554 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 2259, column: 2)
!6555 = !DILocation(line: 2260, column: 8, scope: !6554)
!6556 = !DILocalVariable(name: "insn_info", scope: !6557, file: !3, line: 2262, type: !1993)
!6557 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 2261, column: 6)
!6558 = !DILocation(line: 2262, column: 29, scope: !6557)
!6559 = !DILocation(line: 2262, column: 41, scope: !6557)
!6560 = !DILocalVariable(name: "eq_use_rec", scope: !6557, file: !3, line: 2263, type: !1998)
!6561 = !DILocation(line: 2263, column: 16, scope: !6557)
!6562 = !DILocation(line: 2263, column: 29, scope: !6557)
!6563 = !DILocation(line: 2264, column: 18, scope: !6557)
!6564 = !DILocation(line: 2264, column: 16, scope: !6557)
!6565 = !DILocation(line: 2265, column: 13, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 2265, column: 12)
!6567 = !DILocation(line: 2265, column: 12, scope: !6566)
!6568 = !DILocation(line: 2265, column: 21, scope: !6566)
!6569 = !DILocation(line: 2265, column: 25, scope: !6566)
!6570 = !DILocation(line: 2265, column: 24, scope: !6566)
!6571 = !DILocation(line: 2265, column: 12, scope: !6557)
!6572 = !DILocation(line: 2267, column: 14, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 2266, column: 3)
!6574 = !DILocation(line: 2268, column: 7, scope: !6573)
!6575 = !DILocation(line: 2268, column: 38, scope: !6573)
!6576 = !DILocation(line: 2267, column: 5, scope: !6573)
!6577 = !DILocation(line: 2270, column: 5, scope: !6573)
!6578 = !DILocation(line: 2270, column: 13, scope: !6573)
!6579 = !DILocation(line: 2270, column: 12, scope: !6573)
!6580 = !DILocalVariable(name: "use", scope: !6581, file: !3, line: 2272, type: !872)
!6581 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 2271, column: 7)
!6582 = !DILocation(line: 2272, column: 16, scope: !6581)
!6583 = !DILocation(line: 2272, column: 23, scope: !6581)
!6584 = !DILocation(line: 2272, column: 22, scope: !6581)
!6585 = !DILocation(line: 2273, column: 18, scope: !6581)
!6586 = !DILocation(line: 2273, column: 43, scope: !6581)
!6587 = !DILocation(line: 2273, column: 9, scope: !6581)
!6588 = !DILocation(line: 2274, column: 13, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 2274, column: 13)
!6590 = !DILocation(line: 2274, column: 32, scope: !6589)
!6591 = !DILocation(line: 2274, column: 13, scope: !6581)
!6592 = !DILocation(line: 2275, column: 13, scope: !6589)
!6593 = !DILocation(line: 2275, column: 4, scope: !6589)
!6594 = !DILocation(line: 2276, column: 24, scope: !6581)
!6595 = !DILocation(line: 2276, column: 44, scope: !6581)
!6596 = !DILocation(line: 2276, column: 9, scope: !6581)
!6597 = !DILocation(line: 2277, column: 18, scope: !6581)
!6598 = !DILocation(line: 2277, column: 9, scope: !6581)
!6599 = !DILocation(line: 2278, column: 16, scope: !6581)
!6600 = distinct !{!6600, !6577, !6601}
!6601 = !DILocation(line: 2279, column: 7, scope: !6573)
!6602 = !DILocation(line: 2280, column: 5, scope: !6573)
!6603 = !DILocation(line: 2280, column: 13, scope: !6573)
!6604 = !DILocation(line: 2280, column: 12, scope: !6573)
!6605 = !DILocalVariable(name: "use", scope: !6606, file: !3, line: 2282, type: !872)
!6606 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 2281, column: 7)
!6607 = !DILocation(line: 2282, column: 16, scope: !6606)
!6608 = !DILocation(line: 2282, column: 23, scope: !6606)
!6609 = !DILocation(line: 2282, column: 22, scope: !6606)
!6610 = !DILocation(line: 2283, column: 18, scope: !6606)
!6611 = !DILocation(line: 2283, column: 48, scope: !6606)
!6612 = !DILocation(line: 2283, column: 9, scope: !6606)
!6613 = !DILocation(line: 2284, column: 24, scope: !6606)
!6614 = !DILocation(line: 2284, column: 44, scope: !6606)
!6615 = !DILocation(line: 2284, column: 9, scope: !6606)
!6616 = !DILocation(line: 2285, column: 18, scope: !6606)
!6617 = !DILocation(line: 2285, column: 9, scope: !6606)
!6618 = !DILocation(line: 2286, column: 19, scope: !6606)
!6619 = distinct !{!6619, !6602, !6620}
!6620 = !DILocation(line: 2287, column: 7, scope: !6573)
!6621 = !DILocation(line: 2288, column: 3, scope: !6573)
!6622 = !DILocation(line: 2289, column: 6, scope: !6557)
!6623 = !DILocation(line: 2290, column: 2, scope: !6554)
!6624 = distinct !{!6624, !6547, !6625}
!6625 = !DILocation(line: 2290, column: 2, scope: !6548)
!6626 = !DILocation(line: 2291, column: 5, scope: !6513)
!6627 = !DILocation(line: 2292, column: 1, scope: !6504)
!6628 = distinct !DISubprogram(name: "df_chain_remove_problem", scope: !3, file: !3, line: 1977, type: !2195, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6629 = !DILocalVariable(name: "bi", scope: !6628, file: !3, line: 1979, type: !4201)
!6630 = !DILocation(line: 1979, column: 19, scope: !6628)
!6631 = !DILocalVariable(name: "bb_index", scope: !6628, file: !3, line: 1980, type: !7)
!6632 = !DILocation(line: 1980, column: 16, scope: !6628)
!6633 = !DILocation(line: 1983, column: 7, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 1983, column: 7)
!6635 = !DILocation(line: 1983, column: 17, scope: !6634)
!6636 = !DILocation(line: 1983, column: 7, scope: !6628)
!6637 = !DILocation(line: 1984, column: 22, scope: !6634)
!6638 = !DILocation(line: 1984, column: 32, scope: !6634)
!6639 = !DILocation(line: 1984, column: 5, scope: !6634)
!6640 = !DILocation(line: 1986, column: 3, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 1986, column: 3)
!6642 = !DILocation(line: 1986, column: 3, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 1986, column: 3)
!6644 = !DILocalVariable(name: "insn", scope: !6645, file: !3, line: 1988, type: !883)
!6645 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 1987, column: 5)
!6646 = !DILocation(line: 1988, column: 11, scope: !6645)
!6647 = !DILocalVariable(name: "def_rec", scope: !6645, file: !3, line: 1989, type: !1998)
!6648 = !DILocation(line: 1989, column: 15, scope: !6645)
!6649 = !DILocalVariable(name: "use_rec", scope: !6645, file: !3, line: 1990, type: !1998)
!6650 = !DILocation(line: 1990, column: 15, scope: !6645)
!6651 = !DILocalVariable(name: "bb", scope: !6645, file: !3, line: 1991, type: !1357)
!6652 = !DILocation(line: 1991, column: 19, scope: !6645)
!6653 = !DILocation(line: 1991, column: 24, scope: !6645)
!6654 = !DILocation(line: 1993, column: 11, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 1993, column: 11)
!6656 = !DILocation(line: 1993, column: 11, scope: !6645)
!6657 = !DILocation(line: 1994, column: 41, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 1994, column: 2)
!6659 = !DILocation(line: 1994, column: 45, scope: !6658)
!6660 = !DILocation(line: 1994, column: 17, scope: !6658)
!6661 = !DILocation(line: 1994, column: 15, scope: !6658)
!6662 = !DILocation(line: 1994, column: 7, scope: !6658)
!6663 = !DILocation(line: 1994, column: 54, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 1994, column: 2)
!6665 = !DILocation(line: 1994, column: 53, scope: !6664)
!6666 = !DILocation(line: 1994, column: 2, scope: !6658)
!6667 = !DILocation(line: 1995, column: 4, scope: !6664)
!6668 = !DILocation(line: 1995, column: 28, scope: !6664)
!6669 = !DILocation(line: 1994, column: 70, scope: !6664)
!6670 = !DILocation(line: 1994, column: 2, scope: !6664)
!6671 = distinct !{!6671, !6666, !6672}
!6672 = !DILocation(line: 1995, column: 30, scope: !6658)
!6673 = !DILocation(line: 1996, column: 11, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 1996, column: 11)
!6675 = !DILocation(line: 1996, column: 11, scope: !6645)
!6676 = !DILocation(line: 1997, column: 41, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 1997, column: 2)
!6678 = !DILocation(line: 1997, column: 45, scope: !6677)
!6679 = !DILocation(line: 1997, column: 17, scope: !6677)
!6680 = !DILocation(line: 1997, column: 15, scope: !6677)
!6681 = !DILocation(line: 1997, column: 7, scope: !6677)
!6682 = !DILocation(line: 1997, column: 54, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 1997, column: 2)
!6684 = !DILocation(line: 1997, column: 53, scope: !6683)
!6685 = !DILocation(line: 1997, column: 2, scope: !6677)
!6686 = !DILocation(line: 1998, column: 4, scope: !6683)
!6687 = !DILocation(line: 1998, column: 28, scope: !6683)
!6688 = !DILocation(line: 1997, column: 70, scope: !6683)
!6689 = !DILocation(line: 1997, column: 2, scope: !6683)
!6690 = distinct !{!6690, !6685, !6691}
!6691 = !DILocation(line: 1998, column: 30, scope: !6677)
!6692 = !DILocation(line: 2000, column: 7, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 2000, column: 7)
!6694 = !DILocation(line: 2000, column: 7, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 2000, column: 7)
!6696 = !DILocation(line: 0, scope: !6695)
!6697 = !DILocalVariable(name: "uid", scope: !6698, file: !3, line: 2002, type: !7)
!6698 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 2001, column: 2)
!6699 = !DILocation(line: 2002, column: 17, scope: !6698)
!6700 = !DILocation(line: 2002, column: 23, scope: !6698)
!6701 = !DILocation(line: 2004, column: 8, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 2004, column: 8)
!6703 = !DILocation(line: 2004, column: 8, scope: !6698)
!6704 = !DILocation(line: 2006, column: 12, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 2006, column: 12)
!6706 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 2005, column: 6)
!6707 = !DILocation(line: 2006, column: 12, scope: !6706)
!6708 = !DILocation(line: 2007, column: 18, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 2007, column: 3)
!6710 = !DILocation(line: 2007, column: 16, scope: !6709)
!6711 = !DILocation(line: 2007, column: 8, scope: !6709)
!6712 = !DILocation(line: 2007, column: 43, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 2007, column: 3)
!6714 = !DILocation(line: 2007, column: 42, scope: !6713)
!6715 = !DILocation(line: 2007, column: 3, scope: !6709)
!6716 = !DILocation(line: 2008, column: 5, scope: !6713)
!6717 = !DILocation(line: 2008, column: 29, scope: !6713)
!6718 = !DILocation(line: 2007, column: 59, scope: !6713)
!6719 = !DILocation(line: 2007, column: 3, scope: !6713)
!6720 = distinct !{!6720, !6715, !6721}
!6721 = !DILocation(line: 2008, column: 31, scope: !6709)
!6722 = !DILocation(line: 2009, column: 12, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 2009, column: 12)
!6724 = !DILocation(line: 2009, column: 12, scope: !6706)
!6725 = !DILocation(line: 2011, column: 20, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 2011, column: 5)
!6727 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 2010, column: 3)
!6728 = !DILocation(line: 2011, column: 18, scope: !6726)
!6729 = !DILocation(line: 2011, column: 10, scope: !6726)
!6730 = !DILocation(line: 2011, column: 45, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 2011, column: 5)
!6732 = !DILocation(line: 2011, column: 44, scope: !6731)
!6733 = !DILocation(line: 2011, column: 5, scope: !6726)
!6734 = !DILocation(line: 2012, column: 7, scope: !6731)
!6735 = !DILocation(line: 2012, column: 31, scope: !6731)
!6736 = !DILocation(line: 2011, column: 61, scope: !6731)
!6737 = !DILocation(line: 2011, column: 5, scope: !6731)
!6738 = distinct !{!6738, !6733, !6739}
!6739 = !DILocation(line: 2012, column: 33, scope: !6726)
!6740 = !DILocation(line: 2013, column: 20, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 2013, column: 5)
!6742 = !DILocation(line: 2013, column: 18, scope: !6741)
!6743 = !DILocation(line: 2013, column: 10, scope: !6741)
!6744 = !DILocation(line: 2013, column: 48, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 2013, column: 5)
!6746 = !DILocation(line: 2013, column: 47, scope: !6745)
!6747 = !DILocation(line: 2013, column: 5, scope: !6741)
!6748 = !DILocation(line: 2014, column: 7, scope: !6745)
!6749 = !DILocation(line: 2014, column: 31, scope: !6745)
!6750 = !DILocation(line: 2013, column: 64, scope: !6745)
!6751 = !DILocation(line: 2013, column: 5, scope: !6745)
!6752 = distinct !{!6752, !6747, !6753}
!6753 = !DILocation(line: 2014, column: 33, scope: !6741)
!6754 = !DILocation(line: 2015, column: 3, scope: !6727)
!6755 = !DILocation(line: 2016, column: 6, scope: !6706)
!6756 = !DILocation(line: 2017, column: 2, scope: !6698)
!6757 = distinct !{!6757, !6692, !6758}
!6758 = !DILocation(line: 2017, column: 2, scope: !6693)
!6759 = !DILocation(line: 2018, column: 5, scope: !6645)
!6760 = distinct !{!6760, !6640, !6761}
!6761 = !DILocation(line: 2018, column: 5, scope: !6641)
!6762 = !DILocation(line: 2020, column: 17, scope: !6628)
!6763 = !DILocation(line: 2020, column: 27, scope: !6628)
!6764 = !DILocation(line: 2020, column: 3, scope: !6628)
!6765 = !DILocation(line: 2021, column: 3, scope: !6628)
!6766 = !DILocation(line: 2021, column: 13, scope: !6628)
!6767 = !DILocation(line: 2021, column: 24, scope: !6628)
!6768 = !DILocation(line: 2022, column: 1, scope: !6628)
!6769 = distinct !DISubprogram(name: "df_chain_create_bb", scope: !3, file: !3, line: 2107, type: !2750, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6770 = !DILocalVariable(name: "bb_index", arg: 1, scope: !6769, file: !3, line: 2107, type: !7)
!6771 = !DILocation(line: 2107, column: 34, scope: !6769)
!6772 = !DILocalVariable(name: "bb", scope: !6769, file: !3, line: 2109, type: !1357)
!6773 = !DILocation(line: 2109, column: 15, scope: !6769)
!6774 = !DILocation(line: 2109, column: 20, scope: !6769)
!6775 = !DILocalVariable(name: "bb_info", scope: !6769, file: !3, line: 2110, type: !2067)
!6776 = !DILocation(line: 2110, column: 25, scope: !6769)
!6777 = !DILocation(line: 2110, column: 54, scope: !6769)
!6778 = !DILocation(line: 2110, column: 35, scope: !6769)
!6779 = !DILocalVariable(name: "insn", scope: !6769, file: !3, line: 2111, type: !883)
!6780 = !DILocation(line: 2111, column: 7, scope: !6769)
!6781 = !DILocalVariable(name: "cpy", scope: !6769, file: !3, line: 2112, type: !802)
!6782 = !DILocation(line: 2112, column: 10, scope: !6769)
!6783 = !DILocation(line: 2112, column: 16, scope: !6769)
!6784 = !DILocation(line: 2114, column: 16, scope: !6769)
!6785 = !DILocation(line: 2114, column: 21, scope: !6769)
!6786 = !DILocation(line: 2114, column: 30, scope: !6769)
!6787 = !DILocation(line: 2114, column: 3, scope: !6769)
!6788 = !DILocation(line: 2115, column: 19, scope: !6769)
!6789 = !DILocation(line: 2115, column: 29, scope: !6769)
!6790 = !DILocation(line: 2115, column: 61, scope: !6769)
!6791 = !DILocation(line: 2115, column: 3, scope: !6769)
!6792 = !DILocation(line: 2131, column: 42, scope: !6769)
!6793 = !DILocation(line: 2131, column: 46, scope: !6769)
!6794 = !DILocation(line: 2131, column: 3, scope: !6769)
!6795 = !DILocation(line: 2134, column: 3, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 2134, column: 3)
!6797 = !DILocation(line: 2134, column: 3, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 2134, column: 3)
!6799 = !DILocation(line: 0, scope: !6798)
!6800 = !DILocation(line: 2135, column: 9, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 2135, column: 9)
!6802 = !DILocation(line: 2135, column: 9, scope: !6798)
!6803 = !DILocalVariable(name: "uid", scope: !6804, file: !3, line: 2137, type: !7)
!6804 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 2136, column: 7)
!6805 = !DILocation(line: 2137, column: 22, scope: !6804)
!6806 = !DILocation(line: 2137, column: 28, scope: !6804)
!6807 = !DILocation(line: 2141, column: 41, scope: !6804)
!6808 = !DILocation(line: 2141, column: 46, scope: !6804)
!6809 = !DILocation(line: 2141, column: 9, scope: !6804)
!6810 = !DILocation(line: 2142, column: 13, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 2142, column: 13)
!6812 = !DILocation(line: 2142, column: 17, scope: !6811)
!6813 = !DILocation(line: 2142, column: 34, scope: !6811)
!6814 = !DILocation(line: 2142, column: 13, scope: !6804)
!6815 = !DILocation(line: 2143, column: 36, scope: !6811)
!6816 = !DILocation(line: 2143, column: 41, scope: !6811)
!6817 = !DILocation(line: 2143, column: 4, scope: !6811)
!6818 = !DILocation(line: 2146, column: 34, scope: !6804)
!6819 = !DILocation(line: 2146, column: 38, scope: !6804)
!6820 = !DILocation(line: 2146, column: 44, scope: !6804)
!6821 = !DILocation(line: 2146, column: 9, scope: !6804)
!6822 = !DILocation(line: 2147, column: 7, scope: !6804)
!6823 = distinct !{!6823, !6795, !6824}
!6824 = !DILocation(line: 2147, column: 7, scope: !6796)
!6825 = !DILocation(line: 2151, column: 9, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 2151, column: 7)
!6827 = !DILocation(line: 2151, column: 13, scope: !6826)
!6828 = !DILocation(line: 2151, column: 30, scope: !6826)
!6829 = !DILocation(line: 2151, column: 7, scope: !6769)
!6830 = !DILocation(line: 2152, column: 37, scope: !6826)
!6831 = !DILocation(line: 2153, column: 33, scope: !6826)
!6832 = !DILocation(line: 2153, column: 37, scope: !6826)
!6833 = !DILocation(line: 2153, column: 9, scope: !6826)
!6834 = !DILocation(line: 2152, column: 5, scope: !6826)
!6835 = !DILocation(line: 2156, column: 3, scope: !6769)
!6836 = !DILocation(line: 2157, column: 1, scope: !6769)
!6837 = distinct !DISubprogram(name: "df_chain_create_bb_process_use", scope: !3, file: !3, line: 2060, type: !6838, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6838 = !DISubroutineType(types: !6839)
!6839 = !{null, !802, !1998, !855}
!6840 = !DILocalVariable(name: "local_rd", arg: 1, scope: !6837, file: !3, line: 2060, type: !802)
!6841 = !DILocation(line: 2060, column: 40, scope: !6837)
!6842 = !DILocalVariable(name: "use_rec", arg: 2, scope: !6837, file: !3, line: 2061, type: !1998)
!6843 = !DILocation(line: 2061, column: 13, scope: !6837)
!6844 = !DILocalVariable(name: "top_flag", arg: 3, scope: !6837, file: !3, line: 2062, type: !855)
!6845 = !DILocation(line: 2062, column: 9, scope: !6837)
!6846 = !DILocalVariable(name: "bi", scope: !6837, file: !3, line: 2064, type: !4201)
!6847 = !DILocation(line: 2064, column: 19, scope: !6837)
!6848 = !DILocalVariable(name: "def_index", scope: !6837, file: !3, line: 2065, type: !7)
!6849 = !DILocation(line: 2065, column: 16, scope: !6837)
!6850 = !DILocation(line: 2067, column: 3, scope: !6837)
!6851 = !DILocation(line: 2067, column: 11, scope: !6837)
!6852 = !DILocation(line: 2067, column: 10, scope: !6837)
!6853 = !DILocalVariable(name: "use", scope: !6854, file: !3, line: 2069, type: !872)
!6854 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 2068, column: 5)
!6855 = !DILocation(line: 2069, column: 14, scope: !6854)
!6856 = !DILocation(line: 2069, column: 21, scope: !6854)
!6857 = !DILocation(line: 2069, column: 20, scope: !6854)
!6858 = !DILocalVariable(name: "uregno", scope: !6854, file: !3, line: 2070, type: !7)
!6859 = !DILocation(line: 2070, column: 20, scope: !6854)
!6860 = !DILocation(line: 2070, column: 29, scope: !6854)
!6861 = !DILocation(line: 2071, column: 14, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 2071, column: 11)
!6863 = !DILocation(line: 2071, column: 18, scope: !6862)
!6864 = !DILocation(line: 2071, column: 35, scope: !6862)
!6865 = !DILocation(line: 2072, column: 4, scope: !6862)
!6866 = !DILocation(line: 2072, column: 8, scope: !6862)
!6867 = !DILocation(line: 2072, column: 15, scope: !6862)
!6868 = !DILocation(line: 2071, column: 11, scope: !6854)
!6869 = !DILocalVariable(name: "count", scope: !6870, file: !3, line: 2075, type: !855)
!6870 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 2073, column: 2)
!6871 = !DILocation(line: 2075, column: 8, scope: !6870)
!6872 = !DILocation(line: 2075, column: 16, scope: !6870)
!6873 = !DILocation(line: 2076, column: 8, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 2076, column: 8)
!6875 = !DILocation(line: 2076, column: 8, scope: !6870)
!6876 = !DILocation(line: 2078, column: 12, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 2078, column: 12)
!6878 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 2077, column: 6)
!6879 = !DILocation(line: 2078, column: 25, scope: !6877)
!6880 = !DILocation(line: 2078, column: 44, scope: !6877)
!6881 = !DILocation(line: 2078, column: 21, scope: !6877)
!6882 = !DILocation(line: 2078, column: 12, scope: !6878)
!6883 = !DILocalVariable(name: "first_index", scope: !6884, file: !3, line: 2080, type: !7)
!6884 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 2079, column: 3)
!6885 = !DILocation(line: 2080, column: 18, scope: !6884)
!6886 = !DILocation(line: 2080, column: 32, scope: !6884)
!6887 = !DILocalVariable(name: "last_index", scope: !6884, file: !3, line: 2081, type: !7)
!6888 = !DILocation(line: 2081, column: 18, scope: !6884)
!6889 = !DILocation(line: 2081, column: 31, scope: !6884)
!6890 = !DILocation(line: 2081, column: 45, scope: !6884)
!6891 = !DILocation(line: 2081, column: 43, scope: !6884)
!6892 = !DILocation(line: 2081, column: 51, scope: !6884)
!6893 = !DILocation(line: 2083, column: 5, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 2083, column: 5)
!6895 = !DILocation(line: 2083, column: 5, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 2083, column: 5)
!6897 = !DILocalVariable(name: "def", scope: !6898, file: !3, line: 2085, type: !872)
!6898 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 2084, column: 7)
!6899 = !DILocation(line: 2085, column: 16, scope: !6898)
!6900 = !DILocation(line: 2086, column: 13, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 2086, column: 13)
!6902 = !DILocation(line: 2086, column: 25, scope: !6901)
!6903 = !DILocation(line: 2086, column: 23, scope: !6901)
!6904 = !DILocation(line: 2086, column: 13, scope: !6898)
!6905 = !DILocation(line: 2087, column: 4, scope: !6901)
!6906 = !DILocation(line: 2089, column: 15, scope: !6898)
!6907 = !DILocation(line: 2089, column: 13, scope: !6898)
!6908 = !DILocation(line: 2090, column: 13, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 2090, column: 13)
!6910 = !DILocation(line: 2090, column: 13, scope: !6898)
!6911 = !DILocation(line: 2091, column: 21, scope: !6909)
!6912 = !DILocation(line: 2091, column: 26, scope: !6909)
!6913 = !DILocation(line: 2091, column: 4, scope: !6909)
!6914 = !DILocation(line: 2092, column: 13, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 2092, column: 13)
!6916 = !DILocation(line: 2092, column: 13, scope: !6898)
!6917 = !DILocation(line: 2093, column: 21, scope: !6915)
!6918 = !DILocation(line: 2093, column: 26, scope: !6915)
!6919 = !DILocation(line: 2093, column: 4, scope: !6915)
!6920 = !DILocation(line: 2094, column: 7, scope: !6898)
!6921 = distinct !{!6921, !6893, !6922}
!6922 = !DILocation(line: 2094, column: 7, scope: !6894)
!6923 = !DILocation(line: 2095, column: 3, scope: !6884)
!6924 = !DILocation(line: 2096, column: 6, scope: !6878)
!6925 = !DILocation(line: 2097, column: 2, scope: !6870)
!6926 = !DILocation(line: 2099, column: 14, scope: !6854)
!6927 = distinct !{!6927, !6850, !6928}
!6928 = !DILocation(line: 2100, column: 5, scope: !6837)
!6929 = !DILocation(line: 2101, column: 1, scope: !6837)
!6930 = distinct !DISubprogram(name: "df_byte_lr_alloc", scope: !3, file: !3, line: 2484, type: !2121, scopeLine: 2485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!6931 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !6930, file: !3, line: 2484, type: !802)
!6932 = !DILocation(line: 2484, column: 26, scope: !6930)
!6933 = !DILocalVariable(name: "bb_index", scope: !6930, file: !3, line: 2486, type: !7)
!6934 = !DILocation(line: 2486, column: 16, scope: !6930)
!6935 = !DILocalVariable(name: "bi", scope: !6930, file: !3, line: 2487, type: !4201)
!6936 = !DILocation(line: 2487, column: 19, scope: !6930)
!6937 = !DILocalVariable(name: "bb", scope: !6930, file: !3, line: 2488, type: !1357)
!6938 = !DILocation(line: 2488, column: 15, scope: !6930)
!6939 = !DILocalVariable(name: "regno", scope: !6930, file: !3, line: 2489, type: !7)
!6940 = !DILocation(line: 2489, column: 16, scope: !6930)
!6941 = !DILocalVariable(name: "index", scope: !6930, file: !3, line: 2490, type: !7)
!6942 = !DILocation(line: 2490, column: 16, scope: !6930)
!6943 = !DILocalVariable(name: "max_reg", scope: !6930, file: !3, line: 2491, type: !7)
!6944 = !DILocation(line: 2491, column: 16, scope: !6930)
!6945 = !DILocation(line: 2491, column: 26, scope: !6930)
!6946 = !DILocalVariable(name: "problem_data", scope: !6930, file: !3, line: 2492, type: !2037)
!6947 = !DILocation(line: 2492, column: 35, scope: !6930)
!6948 = !DILocation(line: 2493, column: 7, scope: !6930)
!6949 = !DILocation(line: 2495, column: 30, scope: !6930)
!6950 = !DILocation(line: 2495, column: 3, scope: !6930)
!6951 = !DILocation(line: 2495, column: 15, scope: !6930)
!6952 = !DILocation(line: 2495, column: 28, scope: !6930)
!6953 = !DILocation(line: 2497, column: 8, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 2497, column: 7)
!6955 = !DILocation(line: 2497, column: 20, scope: !6954)
!6956 = !DILocation(line: 2497, column: 7, scope: !6930)
!6957 = !DILocation(line: 2498, column: 30, scope: !6954)
!6958 = !DILocation(line: 2498, column: 5, scope: !6954)
!6959 = !DILocation(line: 2498, column: 17, scope: !6954)
!6960 = !DILocation(line: 2498, column: 28, scope: !6954)
!6961 = !DILocation(line: 2501, column: 20, scope: !6930)
!6962 = !DILocation(line: 2501, column: 3, scope: !6930)
!6963 = !DILocation(line: 2509, column: 31, scope: !6930)
!6964 = !DILocation(line: 2509, column: 45, scope: !6930)
!6965 = !DILocation(line: 2509, column: 3, scope: !6930)
!6966 = !DILocation(line: 2510, column: 31, scope: !6930)
!6967 = !DILocation(line: 2510, column: 3, scope: !6930)
!6968 = !DILocation(line: 2510, column: 17, scope: !6930)
!6969 = !DILocation(line: 2510, column: 29, scope: !6930)
!6970 = !DILocation(line: 2511, column: 29, scope: !6930)
!6971 = !DILocation(line: 2511, column: 3, scope: !6930)
!6972 = !DILocation(line: 2511, column: 17, scope: !6930)
!6973 = !DILocation(line: 2511, column: 27, scope: !6930)
!6974 = !DILocation(line: 2512, column: 38, scope: !6930)
!6975 = !DILocation(line: 2512, column: 3, scope: !6930)
!6976 = !DILocation(line: 2512, column: 17, scope: !6930)
!6977 = !DILocation(line: 2512, column: 36, scope: !6930)
!6978 = !DILocation(line: 2513, column: 39, scope: !6930)
!6979 = !DILocation(line: 2513, column: 3, scope: !6930)
!6980 = !DILocation(line: 2513, column: 17, scope: !6930)
!6981 = !DILocation(line: 2513, column: 37, scope: !6930)
!6982 = !DILocation(line: 2514, column: 35, scope: !6930)
!6983 = !DILocation(line: 2514, column: 3, scope: !6930)
!6984 = !DILocation(line: 2514, column: 17, scope: !6930)
!6985 = !DILocation(line: 2514, column: 33, scope: !6930)
!6986 = !DILocation(line: 2518, column: 3, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 2518, column: 3)
!6988 = !DILocation(line: 2518, column: 3, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6987, file: !3, line: 2518, column: 3)
!6990 = !DILocalVariable(name: "insn", scope: !6991, file: !3, line: 2520, type: !883)
!6991 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 2519, column: 5)
!6992 = !DILocation(line: 2520, column: 11, scope: !6991)
!6993 = !DILocation(line: 2521, column: 7, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6991, file: !3, line: 2521, column: 7)
!6995 = !DILocation(line: 2521, column: 7, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 2521, column: 7)
!6997 = !DILocation(line: 0, scope: !6996)
!6998 = !DILocation(line: 2523, column: 8, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !3, line: 2523, column: 8)
!7000 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 2522, column: 2)
!7001 = !DILocation(line: 2523, column: 8, scope: !7000)
!7002 = !DILocalVariable(name: "insn_info", scope: !7003, file: !3, line: 2525, type: !1993)
!7003 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 2524, column: 6)
!7004 = !DILocation(line: 2525, column: 29, scope: !7003)
!7005 = !DILocation(line: 2525, column: 41, scope: !7003)
!7006 = !DILocation(line: 2526, column: 31, scope: !7003)
!7007 = !DILocation(line: 2526, column: 8, scope: !7003)
!7008 = !DILocation(line: 2527, column: 31, scope: !7003)
!7009 = !DILocation(line: 2527, column: 8, scope: !7003)
!7010 = !DILocation(line: 2528, column: 6, scope: !7003)
!7011 = !DILocation(line: 2529, column: 2, scope: !7000)
!7012 = distinct !{!7012, !6993, !7013}
!7013 = !DILocation(line: 2529, column: 2, scope: !6994)
!7014 = !DILocation(line: 2530, column: 23, scope: !6991)
!7015 = !DILocation(line: 2530, column: 35, scope: !6991)
!7016 = !DILocation(line: 2530, column: 67, scope: !6991)
!7017 = !DILocation(line: 2530, column: 71, scope: !6991)
!7018 = !DILocation(line: 2530, column: 7, scope: !6991)
!7019 = !DILocation(line: 2531, column: 5, scope: !6991)
!7020 = distinct !{!7020, !6986, !7021}
!7021 = !DILocation(line: 2531, column: 5, scope: !6987)
!7022 = !DILocation(line: 2533, column: 19, scope: !6930)
!7023 = !DILocation(line: 2533, column: 31, scope: !6930)
!7024 = !DILocation(line: 2533, column: 3, scope: !6930)
!7025 = !DILocation(line: 2534, column: 19, scope: !6930)
!7026 = !DILocation(line: 2534, column: 31, scope: !6930)
!7027 = !DILocation(line: 2534, column: 3, scope: !6930)
!7028 = !DILocation(line: 2537, column: 14, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 2537, column: 3)
!7030 = !DILocation(line: 2537, column: 8, scope: !7029)
!7031 = !DILocation(line: 2537, column: 19, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 2537, column: 3)
!7033 = !DILocation(line: 2537, column: 27, scope: !7032)
!7034 = !DILocation(line: 2537, column: 25, scope: !7032)
!7035 = !DILocation(line: 2537, column: 3, scope: !7029)
!7036 = !DILocalVariable(name: "len", scope: !7037, file: !3, line: 2539, type: !855)
!7037 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 2538, column: 5)
!7038 = !DILocation(line: 2539, column: 11, scope: !7037)
!7039 = !DILocation(line: 2540, column: 42, scope: !7037)
!7040 = !DILocation(line: 2540, column: 7, scope: !7037)
!7041 = !DILocation(line: 2540, column: 21, scope: !7037)
!7042 = !DILocation(line: 2540, column: 33, scope: !7037)
!7043 = !DILocation(line: 2540, column: 40, scope: !7037)
!7044 = !DILocation(line: 2541, column: 25, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2541, column: 11)
!7046 = !DILocation(line: 2541, column: 39, scope: !7045)
!7047 = !DILocation(line: 2541, column: 56, scope: !7045)
!7048 = !DILocation(line: 2541, column: 11, scope: !7045)
!7049 = !DILocation(line: 2541, column: 11, scope: !7037)
!7050 = !DILocation(line: 2542, column: 8, scope: !7045)
!7051 = !DILocation(line: 2542, column: 6, scope: !7045)
!7052 = !DILocation(line: 2542, column: 2, scope: !7045)
!7053 = !DILocation(line: 2544, column: 6, scope: !7045)
!7054 = !DILocation(line: 2546, column: 40, scope: !7037)
!7055 = !DILocation(line: 2546, column: 7, scope: !7037)
!7056 = !DILocation(line: 2546, column: 21, scope: !7037)
!7057 = !DILocation(line: 2546, column: 31, scope: !7037)
!7058 = !DILocation(line: 2546, column: 38, scope: !7037)
!7059 = !DILocation(line: 2547, column: 16, scope: !7037)
!7060 = !DILocation(line: 2547, column: 13, scope: !7037)
!7061 = !DILocation(line: 2548, column: 5, scope: !7037)
!7062 = !DILocation(line: 2537, column: 41, scope: !7032)
!7063 = !DILocation(line: 2537, column: 3, scope: !7032)
!7064 = distinct !{!7064, !7035, !7065}
!7065 = !DILocation(line: 2548, column: 5, scope: !7029)
!7066 = !DILocation(line: 2550, column: 29, scope: !6930)
!7067 = !DILocation(line: 2550, column: 43, scope: !6930)
!7068 = !DILocation(line: 2551, column: 8, scope: !6930)
!7069 = !DILocation(line: 2551, column: 12, scope: !6930)
!7070 = !DILocation(line: 2550, column: 3, scope: !6930)
!7071 = !DILocation(line: 2552, column: 29, scope: !6930)
!7072 = !DILocation(line: 2552, column: 43, scope: !6930)
!7073 = !DILocation(line: 2553, column: 8, scope: !6930)
!7074 = !DILocation(line: 2552, column: 3, scope: !6930)
!7075 = !DILocation(line: 2555, column: 3, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 2555, column: 3)
!7077 = !DILocation(line: 2555, column: 3, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 2555, column: 3)
!7079 = !DILocalVariable(name: "bb_info", scope: !7080, file: !3, line: 2557, type: !2092)
!7080 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 2556, column: 5)
!7081 = !DILocation(line: 2557, column: 34, scope: !7080)
!7082 = !DILocation(line: 2557, column: 68, scope: !7080)
!7083 = !DILocation(line: 2557, column: 44, scope: !7080)
!7084 = !DILocation(line: 2558, column: 11, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 2558, column: 11)
!7086 = !DILocation(line: 2558, column: 11, scope: !7080)
!7087 = !DILocation(line: 2560, column: 18, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 2559, column: 2)
!7089 = !DILocation(line: 2560, column: 27, scope: !7088)
!7090 = !DILocation(line: 2560, column: 4, scope: !7088)
!7091 = !DILocation(line: 2561, column: 18, scope: !7088)
!7092 = !DILocation(line: 2561, column: 27, scope: !7088)
!7093 = !DILocation(line: 2561, column: 4, scope: !7088)
!7094 = !DILocation(line: 2562, column: 2, scope: !7088)
!7095 = !DILocation(line: 2565, column: 56, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 2564, column: 2)
!7097 = !DILocation(line: 2565, column: 68, scope: !7096)
!7098 = !DILocation(line: 2565, column: 44, scope: !7096)
!7099 = !DILocation(line: 2565, column: 14, scope: !7096)
!7100 = !DILocation(line: 2565, column: 12, scope: !7096)
!7101 = !DILocation(line: 2566, column: 28, scope: !7096)
!7102 = !DILocation(line: 2566, column: 38, scope: !7096)
!7103 = !DILocation(line: 2566, column: 4, scope: !7096)
!7104 = !DILocation(line: 2567, column: 19, scope: !7096)
!7105 = !DILocation(line: 2567, column: 4, scope: !7096)
!7106 = !DILocation(line: 2567, column: 13, scope: !7096)
!7107 = !DILocation(line: 2567, column: 17, scope: !7096)
!7108 = !DILocation(line: 2568, column: 19, scope: !7096)
!7109 = !DILocation(line: 2568, column: 4, scope: !7096)
!7110 = !DILocation(line: 2568, column: 13, scope: !7096)
!7111 = !DILocation(line: 2568, column: 17, scope: !7096)
!7112 = !DILocation(line: 2569, column: 18, scope: !7096)
!7113 = !DILocation(line: 2569, column: 4, scope: !7096)
!7114 = !DILocation(line: 2569, column: 13, scope: !7096)
!7115 = !DILocation(line: 2569, column: 16, scope: !7096)
!7116 = !DILocation(line: 2570, column: 19, scope: !7096)
!7117 = !DILocation(line: 2570, column: 4, scope: !7096)
!7118 = !DILocation(line: 2570, column: 13, scope: !7096)
!7119 = !DILocation(line: 2570, column: 17, scope: !7096)
!7120 = !DILocation(line: 2572, column: 5, scope: !7080)
!7121 = distinct !{!7121, !7075, !7122}
!7122 = !DILocation(line: 2572, column: 5, scope: !7076)
!7123 = !DILocation(line: 2574, column: 3, scope: !6930)
!7124 = !DILocation(line: 2574, column: 15, scope: !6930)
!7125 = !DILocation(line: 2574, column: 26, scope: !6930)
!7126 = !DILocation(line: 2575, column: 1, scope: !6930)
!7127 = distinct !DISubprogram(name: "df_byte_lr_reset", scope: !3, file: !3, line: 2581, type: !2121, scopeLine: 2582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7128 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !7127, file: !3, line: 2581, type: !802)
!7129 = !DILocation(line: 2581, column: 26, scope: !7127)
!7130 = !DILocalVariable(name: "bb_index", scope: !7127, file: !3, line: 2583, type: !7)
!7131 = !DILocation(line: 2583, column: 16, scope: !7127)
!7132 = !DILocalVariable(name: "bi", scope: !7127, file: !3, line: 2584, type: !4201)
!7133 = !DILocation(line: 2584, column: 19, scope: !7127)
!7134 = !DILocation(line: 2586, column: 3, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 2586, column: 3)
!7136 = !DILocation(line: 2586, column: 3, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7135, file: !3, line: 2586, column: 3)
!7138 = !DILocalVariable(name: "bb_info", scope: !7139, file: !3, line: 2588, type: !2092)
!7139 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 2587, column: 5)
!7140 = !DILocation(line: 2588, column: 34, scope: !7139)
!7141 = !DILocation(line: 2588, column: 68, scope: !7139)
!7142 = !DILocation(line: 2588, column: 44, scope: !7139)
!7143 = !DILocation(line: 2589, column: 7, scope: !7139)
!7144 = !DILocation(line: 2590, column: 21, scope: !7139)
!7145 = !DILocation(line: 2590, column: 30, scope: !7139)
!7146 = !DILocation(line: 2590, column: 7, scope: !7139)
!7147 = !DILocation(line: 2591, column: 21, scope: !7139)
!7148 = !DILocation(line: 2591, column: 30, scope: !7139)
!7149 = !DILocation(line: 2591, column: 7, scope: !7139)
!7150 = !DILocation(line: 2592, column: 5, scope: !7139)
!7151 = distinct !{!7151, !7134, !7152}
!7152 = !DILocation(line: 2592, column: 5, scope: !7135)
!7153 = !DILocation(line: 2593, column: 1, scope: !7127)
!7154 = distinct !DISubprogram(name: "df_byte_lr_free_bb_info", scope: !3, file: !3, line: 2424, type: !2128, scopeLine: 2426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7155 = !DILocalVariable(name: "bb", arg: 1, scope: !7154, file: !3, line: 2424, type: !1357)
!7156 = !DILocation(line: 2424, column: 38, scope: !7154)
!7157 = !DILocalVariable(name: "vbb_info", arg: 2, scope: !7154, file: !3, line: 2425, type: !801)
!7158 = !DILocation(line: 2425, column: 11, scope: !7154)
!7159 = !DILocalVariable(name: "bb_info", scope: !7154, file: !3, line: 2427, type: !2092)
!7160 = !DILocation(line: 2427, column: 30, scope: !7154)
!7161 = !DILocation(line: 2427, column: 70, scope: !7154)
!7162 = !DILocation(line: 2427, column: 40, scope: !7154)
!7163 = !DILocation(line: 2428, column: 7, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 2428, column: 7)
!7165 = !DILocation(line: 2428, column: 7, scope: !7154)
!7166 = !DILocation(line: 2430, column: 7, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 2429, column: 5)
!7168 = !DILocation(line: 2431, column: 7, scope: !7167)
!7169 = !DILocation(line: 2432, column: 7, scope: !7167)
!7170 = !DILocation(line: 2433, column: 7, scope: !7167)
!7171 = !DILocation(line: 2434, column: 18, scope: !7167)
!7172 = !DILocation(line: 2434, column: 30, scope: !7167)
!7173 = !DILocation(line: 2434, column: 42, scope: !7167)
!7174 = !DILocation(line: 2434, column: 7, scope: !7167)
!7175 = !DILocation(line: 2435, column: 5, scope: !7167)
!7176 = !DILocation(line: 2436, column: 1, scope: !7154)
!7177 = distinct !DISubprogram(name: "df_byte_lr_local_compute", scope: !3, file: !3, line: 2725, type: !2121, scopeLine: 2726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7178 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !7177, file: !3, line: 2725, type: !802)
!7179 = !DILocation(line: 2725, column: 34, scope: !7177)
!7180 = !DILocalVariable(name: "bb_index", scope: !7177, file: !3, line: 2727, type: !7)
!7181 = !DILocation(line: 2727, column: 16, scope: !7177)
!7182 = !DILocalVariable(name: "bi", scope: !7177, file: !3, line: 2728, type: !4201)
!7183 = !DILocation(line: 2728, column: 19, scope: !7177)
!7184 = !DILocation(line: 2730, column: 3, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 2730, column: 3)
!7186 = !DILocation(line: 2730, column: 3, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 2730, column: 3)
!7188 = !DILocation(line: 2732, column: 11, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 2732, column: 11)
!7190 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 2731, column: 5)
!7191 = !DILocation(line: 2732, column: 20, scope: !7189)
!7192 = !DILocation(line: 2732, column: 11, scope: !7190)
!7193 = !DILocalVariable(name: "bb_info", scope: !7194, file: !3, line: 2736, type: !2092)
!7194 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 2733, column: 2)
!7195 = !DILocation(line: 2736, column: 31, scope: !7194)
!7196 = !DILocation(line: 2736, column: 41, scope: !7194)
!7197 = !DILocation(line: 2737, column: 30, scope: !7194)
!7198 = !DILocation(line: 2737, column: 39, scope: !7194)
!7199 = !DILocation(line: 2737, column: 44, scope: !7194)
!7200 = !DILocation(line: 2737, column: 48, scope: !7194)
!7201 = !DILocation(line: 2737, column: 4, scope: !7194)
!7202 = !DILocation(line: 2738, column: 2, scope: !7194)
!7203 = !DILocation(line: 2740, column: 31, scope: !7189)
!7204 = !DILocation(line: 2740, column: 2, scope: !7189)
!7205 = !DILocation(line: 2741, column: 5, scope: !7190)
!7206 = distinct !{!7206, !7184, !7207}
!7207 = !DILocation(line: 2741, column: 5, scope: !7185)
!7208 = !DILocation(line: 2743, column: 17, scope: !7177)
!7209 = !DILocation(line: 2743, column: 29, scope: !7177)
!7210 = !DILocation(line: 2743, column: 3, scope: !7177)
!7211 = !DILocation(line: 2744, column: 1, scope: !7177)
!7212 = distinct !DISubprogram(name: "df_byte_lr_init", scope: !3, file: !3, line: 2750, type: !2121, scopeLine: 2751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7213 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !7212, file: !3, line: 2750, type: !802)
!7214 = !DILocation(line: 2750, column: 25, scope: !7212)
!7215 = !DILocalVariable(name: "bb_index", scope: !7212, file: !3, line: 2752, type: !7)
!7216 = !DILocation(line: 2752, column: 16, scope: !7212)
!7217 = !DILocalVariable(name: "bi", scope: !7212, file: !3, line: 2753, type: !4201)
!7218 = !DILocation(line: 2753, column: 19, scope: !7212)
!7219 = !DILocation(line: 2755, column: 3, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 2755, column: 3)
!7221 = !DILocation(line: 2755, column: 3, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 2755, column: 3)
!7223 = !DILocalVariable(name: "bb_info", scope: !7224, file: !3, line: 2757, type: !2092)
!7224 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 2756, column: 5)
!7225 = !DILocation(line: 2757, column: 34, scope: !7224)
!7226 = !DILocation(line: 2757, column: 68, scope: !7224)
!7227 = !DILocation(line: 2757, column: 44, scope: !7224)
!7228 = !DILocation(line: 2758, column: 20, scope: !7224)
!7229 = !DILocation(line: 2758, column: 29, scope: !7224)
!7230 = !DILocation(line: 2758, column: 33, scope: !7224)
!7231 = !DILocation(line: 2758, column: 42, scope: !7224)
!7232 = !DILocation(line: 2758, column: 7, scope: !7224)
!7233 = !DILocation(line: 2759, column: 21, scope: !7224)
!7234 = !DILocation(line: 2759, column: 30, scope: !7224)
!7235 = !DILocation(line: 2759, column: 7, scope: !7224)
!7236 = !DILocation(line: 2760, column: 5, scope: !7224)
!7237 = distinct !{!7237, !7219, !7238}
!7238 = !DILocation(line: 2760, column: 5, scope: !7220)
!7239 = !DILocation(line: 2761, column: 1, scope: !7212)
!7240 = distinct !DISubprogram(name: "df_byte_lr_confluence_0", scope: !3, file: !3, line: 2768, type: !2178, scopeLine: 2769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7241 = !DILocalVariable(name: "bb", arg: 1, scope: !7240, file: !3, line: 2768, type: !1357)
!7242 = !DILocation(line: 2768, column: 38, scope: !7240)
!7243 = !DILocalVariable(name: "problem_data", scope: !7240, file: !3, line: 2770, type: !2037)
!7244 = !DILocation(line: 2770, column: 35, scope: !7240)
!7245 = !DILocation(line: 2771, column: 41, scope: !7240)
!7246 = !DILocation(line: 2771, column: 53, scope: !7240)
!7247 = !DILocation(line: 2771, column: 7, scope: !7240)
!7248 = !DILocalVariable(name: "op1", scope: !7240, file: !3, line: 2772, type: !802)
!7249 = !DILocation(line: 2772, column: 10, scope: !7240)
!7250 = !DILocation(line: 2772, column: 40, scope: !7240)
!7251 = !DILocation(line: 2772, column: 44, scope: !7240)
!7252 = !DILocation(line: 2772, column: 16, scope: !7240)
!7253 = !DILocation(line: 2772, column: 52, scope: !7240)
!7254 = !DILocation(line: 2773, column: 7, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 2773, column: 7)
!7256 = !DILocation(line: 2773, column: 13, scope: !7255)
!7257 = !DILocation(line: 2773, column: 10, scope: !7255)
!7258 = !DILocation(line: 2773, column: 7, scope: !7240)
!7259 = !DILocation(line: 2774, column: 18, scope: !7255)
!7260 = !DILocation(line: 2774, column: 23, scope: !7255)
!7261 = !DILocation(line: 2774, column: 37, scope: !7255)
!7262 = !DILocation(line: 2774, column: 5, scope: !7255)
!7263 = !DILocation(line: 2775, column: 1, scope: !7240)
!7264 = distinct !DISubprogram(name: "df_byte_lr_confluence_n", scope: !3, file: !3, line: 2781, type: !2183, scopeLine: 2782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7265 = !DILocalVariable(name: "e", arg: 1, scope: !7264, file: !3, line: 2781, type: !1374)
!7266 = !DILocation(line: 2781, column: 31, scope: !7264)
!7267 = !DILocalVariable(name: "problem_data", scope: !7264, file: !3, line: 2783, type: !2037)
!7268 = !DILocation(line: 2783, column: 35, scope: !7264)
!7269 = !DILocation(line: 2784, column: 41, scope: !7264)
!7270 = !DILocation(line: 2784, column: 53, scope: !7264)
!7271 = !DILocation(line: 2784, column: 7, scope: !7264)
!7272 = !DILocalVariable(name: "op1", scope: !7264, file: !3, line: 2785, type: !802)
!7273 = !DILocation(line: 2785, column: 10, scope: !7264)
!7274 = !DILocation(line: 2785, column: 40, scope: !7264)
!7275 = !DILocation(line: 2785, column: 43, scope: !7264)
!7276 = !DILocation(line: 2785, column: 48, scope: !7264)
!7277 = !DILocation(line: 2785, column: 16, scope: !7264)
!7278 = !DILocation(line: 2785, column: 56, scope: !7264)
!7279 = !DILocalVariable(name: "op2", scope: !7264, file: !3, line: 2786, type: !802)
!7280 = !DILocation(line: 2786, column: 10, scope: !7264)
!7281 = !DILocation(line: 2786, column: 40, scope: !7264)
!7282 = !DILocation(line: 2786, column: 43, scope: !7264)
!7283 = !DILocation(line: 2786, column: 49, scope: !7264)
!7284 = !DILocation(line: 2786, column: 16, scope: !7264)
!7285 = !DILocation(line: 2786, column: 57, scope: !7264)
!7286 = !DILocation(line: 2791, column: 7, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 2791, column: 7)
!7288 = !DILocation(line: 2791, column: 10, scope: !7287)
!7289 = !DILocation(line: 2791, column: 16, scope: !7287)
!7290 = !DILocation(line: 2791, column: 7, scope: !7264)
!7291 = !DILocation(line: 2792, column: 32, scope: !7287)
!7292 = !DILocation(line: 2792, column: 37, scope: !7287)
!7293 = !DILocation(line: 2792, column: 42, scope: !7287)
!7294 = !DILocation(line: 2792, column: 56, scope: !7287)
!7295 = !DILocation(line: 2792, column: 5, scope: !7287)
!7296 = !DILocation(line: 2794, column: 22, scope: !7287)
!7297 = !DILocation(line: 2794, column: 27, scope: !7287)
!7298 = !DILocation(line: 2794, column: 5, scope: !7287)
!7299 = !DILocation(line: 2796, column: 20, scope: !7264)
!7300 = !DILocation(line: 2796, column: 25, scope: !7264)
!7301 = !DILocation(line: 2796, column: 39, scope: !7264)
!7302 = !DILocation(line: 2796, column: 3, scope: !7264)
!7303 = !DILocation(line: 2797, column: 1, scope: !7264)
!7304 = distinct !DISubprogram(name: "df_byte_lr_transfer_function", scope: !3, file: !3, line: 2803, type: !2188, scopeLine: 2804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7305 = !DILocalVariable(name: "bb_index", arg: 1, scope: !7304, file: !3, line: 2803, type: !855)
!7306 = !DILocation(line: 2803, column: 35, scope: !7304)
!7307 = !DILocalVariable(name: "bb_info", scope: !7304, file: !3, line: 2805, type: !2092)
!7308 = !DILocation(line: 2805, column: 30, scope: !7304)
!7309 = !DILocation(line: 2805, column: 64, scope: !7304)
!7310 = !DILocation(line: 2805, column: 40, scope: !7304)
!7311 = !DILocalVariable(name: "in", scope: !7304, file: !3, line: 2806, type: !802)
!7312 = !DILocation(line: 2806, column: 10, scope: !7304)
!7313 = !DILocation(line: 2806, column: 15, scope: !7304)
!7314 = !DILocation(line: 2806, column: 24, scope: !7304)
!7315 = !DILocalVariable(name: "out", scope: !7304, file: !3, line: 2807, type: !802)
!7316 = !DILocation(line: 2807, column: 10, scope: !7304)
!7317 = !DILocation(line: 2807, column: 16, scope: !7304)
!7318 = !DILocation(line: 2807, column: 25, scope: !7304)
!7319 = !DILocalVariable(name: "use", scope: !7304, file: !3, line: 2808, type: !802)
!7320 = !DILocation(line: 2808, column: 10, scope: !7304)
!7321 = !DILocation(line: 2808, column: 16, scope: !7304)
!7322 = !DILocation(line: 2808, column: 25, scope: !7304)
!7323 = !DILocalVariable(name: "def", scope: !7304, file: !3, line: 2809, type: !802)
!7324 = !DILocation(line: 2809, column: 10, scope: !7304)
!7325 = !DILocation(line: 2809, column: 16, scope: !7304)
!7326 = !DILocation(line: 2809, column: 25, scope: !7304)
!7327 = !DILocation(line: 2811, column: 32, scope: !7304)
!7328 = !DILocation(line: 2811, column: 36, scope: !7304)
!7329 = !DILocation(line: 2811, column: 41, scope: !7304)
!7330 = !DILocation(line: 2811, column: 46, scope: !7304)
!7331 = !DILocation(line: 2811, column: 10, scope: !7304)
!7332 = !DILocation(line: 2811, column: 3, scope: !7304)
!7333 = distinct !DISubprogram(name: "df_byte_lr_free", scope: !3, file: !3, line: 2818, type: !2195, scopeLine: 2819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7334 = !DILocalVariable(name: "problem_data", scope: !7333, file: !3, line: 2820, type: !2037)
!7335 = !DILocation(line: 2820, column: 35, scope: !7333)
!7336 = !DILocation(line: 2821, column: 41, scope: !7333)
!7337 = !DILocation(line: 2821, column: 53, scope: !7333)
!7338 = !DILocation(line: 2821, column: 7, scope: !7333)
!7339 = !DILocation(line: 2824, column: 7, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 2824, column: 7)
!7341 = !DILocation(line: 2824, column: 19, scope: !7340)
!7342 = !DILocation(line: 2824, column: 7, scope: !7333)
!7343 = !DILocation(line: 2826, column: 24, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 2825, column: 5)
!7345 = !DILocation(line: 2826, column: 36, scope: !7344)
!7346 = !DILocation(line: 2826, column: 7, scope: !7344)
!7347 = !DILocation(line: 2827, column: 7, scope: !7344)
!7348 = !DILocation(line: 2827, column: 19, scope: !7344)
!7349 = !DILocation(line: 2827, column: 35, scope: !7344)
!7350 = !DILocation(line: 2828, column: 13, scope: !7344)
!7351 = !DILocation(line: 2828, column: 25, scope: !7344)
!7352 = !DILocation(line: 2828, column: 7, scope: !7344)
!7353 = !DILocation(line: 2829, column: 5, scope: !7344)
!7354 = !DILocation(line: 2831, column: 3, scope: !7333)
!7355 = !DILocation(line: 2832, column: 28, scope: !7333)
!7356 = !DILocation(line: 2832, column: 42, scope: !7333)
!7357 = !DILocation(line: 2832, column: 3, scope: !7333)
!7358 = !DILocation(line: 2833, column: 9, scope: !7333)
!7359 = !DILocation(line: 2833, column: 23, scope: !7333)
!7360 = !DILocation(line: 2833, column: 3, scope: !7333)
!7361 = !DILocation(line: 2834, column: 9, scope: !7333)
!7362 = !DILocation(line: 2834, column: 23, scope: !7333)
!7363 = !DILocation(line: 2834, column: 3, scope: !7333)
!7364 = !DILocation(line: 2835, column: 9, scope: !7333)
!7365 = !DILocation(line: 2835, column: 3, scope: !7333)
!7366 = !DILocation(line: 2836, column: 9, scope: !7333)
!7367 = !DILocation(line: 2836, column: 3, scope: !7333)
!7368 = !DILocation(line: 2837, column: 1, scope: !7333)
!7369 = distinct !DISubprogram(name: "df_byte_lr_top_dump", scope: !3, file: !3, line: 2843, type: !2257, scopeLine: 2844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7370 = !DILocalVariable(name: "bb", arg: 1, scope: !7369, file: !3, line: 2843, type: !1357)
!7371 = !DILocation(line: 2843, column: 34, scope: !7369)
!7372 = !DILocalVariable(name: "file", arg: 2, scope: !7369, file: !3, line: 2843, type: !2204)
!7373 = !DILocation(line: 2843, column: 44, scope: !7369)
!7374 = !DILocalVariable(name: "bb_info", scope: !7369, file: !3, line: 2845, type: !2092)
!7375 = !DILocation(line: 2845, column: 30, scope: !7369)
!7376 = !DILocation(line: 2845, column: 64, scope: !7369)
!7377 = !DILocation(line: 2845, column: 68, scope: !7369)
!7378 = !DILocation(line: 2845, column: 40, scope: !7369)
!7379 = !DILocation(line: 2846, column: 8, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 2846, column: 7)
!7381 = !DILocation(line: 2846, column: 16, scope: !7380)
!7382 = !DILocation(line: 2846, column: 20, scope: !7380)
!7383 = !DILocation(line: 2846, column: 29, scope: !7380)
!7384 = !DILocation(line: 2846, column: 7, scope: !7369)
!7385 = !DILocation(line: 2847, column: 5, scope: !7380)
!7386 = !DILocation(line: 2849, column: 12, scope: !7369)
!7387 = !DILocation(line: 2849, column: 3, scope: !7369)
!7388 = !DILocation(line: 2850, column: 25, scope: !7369)
!7389 = !DILocation(line: 2850, column: 31, scope: !7369)
!7390 = !DILocation(line: 2850, column: 40, scope: !7369)
!7391 = !DILocation(line: 2850, column: 3, scope: !7369)
!7392 = !DILocation(line: 2851, column: 12, scope: !7369)
!7393 = !DILocation(line: 2851, column: 3, scope: !7369)
!7394 = !DILocation(line: 2852, column: 25, scope: !7369)
!7395 = !DILocation(line: 2852, column: 31, scope: !7369)
!7396 = !DILocation(line: 2852, column: 40, scope: !7369)
!7397 = !DILocation(line: 2852, column: 3, scope: !7369)
!7398 = !DILocation(line: 2853, column: 12, scope: !7369)
!7399 = !DILocation(line: 2853, column: 3, scope: !7369)
!7400 = !DILocation(line: 2854, column: 25, scope: !7369)
!7401 = !DILocation(line: 2854, column: 31, scope: !7369)
!7402 = !DILocation(line: 2854, column: 40, scope: !7369)
!7403 = !DILocation(line: 2854, column: 3, scope: !7369)
!7404 = !DILocation(line: 2855, column: 1, scope: !7369)
!7405 = distinct !DISubprogram(name: "df_byte_lr_bottom_dump", scope: !3, file: !3, line: 2861, type: !2257, scopeLine: 2862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7406 = !DILocalVariable(name: "bb", arg: 1, scope: !7405, file: !3, line: 2861, type: !1357)
!7407 = !DILocation(line: 2861, column: 37, scope: !7405)
!7408 = !DILocalVariable(name: "file", arg: 2, scope: !7405, file: !3, line: 2861, type: !2204)
!7409 = !DILocation(line: 2861, column: 47, scope: !7405)
!7410 = !DILocalVariable(name: "bb_info", scope: !7405, file: !3, line: 2863, type: !2092)
!7411 = !DILocation(line: 2863, column: 30, scope: !7405)
!7412 = !DILocation(line: 2863, column: 64, scope: !7405)
!7413 = !DILocation(line: 2863, column: 68, scope: !7405)
!7414 = !DILocation(line: 2863, column: 40, scope: !7405)
!7415 = !DILocation(line: 2864, column: 8, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7405, file: !3, line: 2864, column: 7)
!7417 = !DILocation(line: 2864, column: 16, scope: !7416)
!7418 = !DILocation(line: 2864, column: 20, scope: !7416)
!7419 = !DILocation(line: 2864, column: 29, scope: !7416)
!7420 = !DILocation(line: 2864, column: 7, scope: !7405)
!7421 = !DILocation(line: 2865, column: 5, scope: !7416)
!7422 = !DILocation(line: 2867, column: 12, scope: !7405)
!7423 = !DILocation(line: 2867, column: 3, scope: !7405)
!7424 = !DILocation(line: 2868, column: 25, scope: !7405)
!7425 = !DILocation(line: 2868, column: 31, scope: !7405)
!7426 = !DILocation(line: 2868, column: 40, scope: !7405)
!7427 = !DILocation(line: 2868, column: 3, scope: !7405)
!7428 = !DILocation(line: 2869, column: 1, scope: !7405)
!7429 = distinct !DISubprogram(name: "df_byte_lr_check_regs", scope: !3, file: !3, line: 2443, type: !7430, scopeLine: 2444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{null, !1998}
!7432 = !DILocalVariable(name: "ref_rec", arg: 1, scope: !7429, file: !3, line: 2443, type: !1998)
!7433 = !DILocation(line: 2443, column: 32, scope: !7429)
!7434 = !DILocalVariable(name: "problem_data", scope: !7429, file: !3, line: 2445, type: !2037)
!7435 = !DILocation(line: 2445, column: 35, scope: !7429)
!7436 = !DILocation(line: 2446, column: 41, scope: !7429)
!7437 = !DILocation(line: 2446, column: 53, scope: !7429)
!7438 = !DILocation(line: 2446, column: 7, scope: !7429)
!7439 = !DILocation(line: 2448, column: 3, scope: !7429)
!7440 = !DILocation(line: 2448, column: 11, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7442, file: !3, line: 2448, column: 3)
!7442 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 2448, column: 3)
!7443 = !DILocation(line: 2448, column: 10, scope: !7441)
!7444 = !DILocation(line: 2448, column: 3, scope: !7442)
!7445 = !DILocalVariable(name: "ref", scope: !7446, file: !3, line: 2450, type: !872)
!7446 = distinct !DILexicalBlock(scope: !7441, file: !3, line: 2449, column: 5)
!7447 = !DILocation(line: 2450, column: 14, scope: !7446)
!7448 = !DILocation(line: 2450, column: 21, scope: !7446)
!7449 = !DILocation(line: 2450, column: 20, scope: !7446)
!7450 = !DILocation(line: 2451, column: 11, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 2451, column: 11)
!7452 = !DILocation(line: 2454, column: 4, scope: !7451)
!7453 = !DILocation(line: 2454, column: 7, scope: !7451)
!7454 = !DILocation(line: 2454, column: 35, scope: !7451)
!7455 = !DILocation(line: 2451, column: 11, scope: !7446)
!7456 = !DILocation(line: 2455, column: 18, scope: !7451)
!7457 = !DILocation(line: 2455, column: 32, scope: !7451)
!7458 = !DILocation(line: 2455, column: 49, scope: !7451)
!7459 = !DILocation(line: 2455, column: 2, scope: !7451)
!7460 = !DILocation(line: 2456, column: 5, scope: !7446)
!7461 = !DILocation(line: 2448, column: 27, scope: !7441)
!7462 = !DILocation(line: 2448, column: 3, scope: !7441)
!7463 = distinct !{!7463, !7444, !7464}
!7464 = !DILocation(line: 2456, column: 5, scope: !7442)
!7465 = !DILocation(line: 2457, column: 1, scope: !7429)
!7466 = distinct !DISubprogram(name: "df_byte_lr_expand_bitmap", scope: !3, file: !3, line: 2464, type: !7467, scopeLine: 2465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7467 = !DISubroutineType(types: !7468)
!7468 = !{null, !802, !802}
!7469 = !DILocalVariable(name: "dest", arg: 1, scope: !7466, file: !3, line: 2464, type: !802)
!7470 = !DILocation(line: 2464, column: 34, scope: !7466)
!7471 = !DILocalVariable(name: "src", arg: 2, scope: !7466, file: !3, line: 2464, type: !802)
!7472 = !DILocation(line: 2464, column: 47, scope: !7466)
!7473 = !DILocalVariable(name: "problem_data", scope: !7466, file: !3, line: 2466, type: !2037)
!7474 = !DILocation(line: 2466, column: 35, scope: !7466)
!7475 = !DILocation(line: 2467, column: 41, scope: !7466)
!7476 = !DILocation(line: 2467, column: 53, scope: !7466)
!7477 = !DILocation(line: 2467, column: 7, scope: !7466)
!7478 = !DILocalVariable(name: "bi", scope: !7466, file: !3, line: 2468, type: !4201)
!7479 = !DILocation(line: 2468, column: 19, scope: !7466)
!7480 = !DILocalVariable(name: "i", scope: !7466, file: !3, line: 2469, type: !7)
!7481 = !DILocation(line: 2469, column: 16, scope: !7466)
!7482 = !DILocation(line: 2471, column: 17, scope: !7466)
!7483 = !DILocation(line: 2471, column: 3, scope: !7466)
!7484 = !DILocation(line: 2472, column: 3, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 2472, column: 3)
!7486 = !DILocation(line: 2472, column: 3, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7485, file: !3, line: 2472, column: 3)
!7488 = !DILocation(line: 2474, column: 25, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7487, file: !3, line: 2473, column: 5)
!7490 = !DILocation(line: 2474, column: 31, scope: !7489)
!7491 = !DILocation(line: 2474, column: 45, scope: !7489)
!7492 = !DILocation(line: 2474, column: 57, scope: !7489)
!7493 = !DILocation(line: 2475, column: 4, scope: !7489)
!7494 = !DILocation(line: 2475, column: 18, scope: !7489)
!7495 = !DILocation(line: 2475, column: 28, scope: !7489)
!7496 = !DILocation(line: 2474, column: 7, scope: !7489)
!7497 = !DILocation(line: 2476, column: 5, scope: !7489)
!7498 = distinct !{!7498, !7484, !7499}
!7499 = !DILocation(line: 2476, column: 5, scope: !7485)
!7500 = !DILocation(line: 2477, column: 1, scope: !7466)
!7501 = distinct !DISubprogram(name: "df_byte_lr_get_bb_info", scope: !385, file: !385, line: 1079, type: !7502, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7502 = !DISubroutineType(types: !7503)
!7503 = !{!2092, !7}
!7504 = !DILocalVariable(name: "index", arg: 1, scope: !7501, file: !385, line: 1079, type: !7)
!7505 = !DILocation(line: 1079, column: 38, scope: !7501)
!7506 = !DILocation(line: 1081, column: 7, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7501, file: !385, line: 1081, column: 7)
!7508 = !DILocation(line: 1081, column: 15, scope: !7507)
!7509 = !DILocation(line: 1081, column: 27, scope: !7507)
!7510 = !DILocation(line: 1081, column: 13, scope: !7507)
!7511 = !DILocation(line: 1081, column: 7, scope: !7501)
!7512 = !DILocation(line: 1082, column: 42, scope: !7507)
!7513 = !DILocation(line: 1082, column: 54, scope: !7507)
!7514 = !DILocation(line: 1082, column: 65, scope: !7507)
!7515 = !DILocation(line: 1082, column: 12, scope: !7507)
!7516 = !DILocation(line: 1082, column: 5, scope: !7507)
!7517 = !DILocation(line: 1084, column: 5, scope: !7507)
!7518 = !DILocation(line: 1085, column: 1, scope: !7501)
!7519 = distinct !DISubprogram(name: "df_byte_lr_set_bb_info", scope: !3, file: !3, line: 2412, type: !7520, scopeLine: 2414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7520 = !DISubroutineType(types: !7521)
!7521 = !{null, !7, !2092}
!7522 = !DILocalVariable(name: "index", arg: 1, scope: !7519, file: !3, line: 2412, type: !7)
!7523 = !DILocation(line: 2412, column: 38, scope: !7519)
!7524 = !DILocalVariable(name: "bb_info", arg: 2, scope: !7519, file: !3, line: 2413, type: !2092)
!7525 = !DILocation(line: 2413, column: 31, scope: !7519)
!7526 = !DILocation(line: 2415, column: 3, scope: !7519)
!7527 = !DILocation(line: 2416, column: 3, scope: !7519)
!7528 = !DILocation(line: 2417, column: 35, scope: !7519)
!7529 = !DILocation(line: 2417, column: 3, scope: !7519)
!7530 = !DILocation(line: 2417, column: 15, scope: !7519)
!7531 = !DILocation(line: 2417, column: 26, scope: !7519)
!7532 = !DILocation(line: 2417, column: 33, scope: !7519)
!7533 = !DILocation(line: 2418, column: 1, scope: !7519)
!7534 = distinct !DISubprogram(name: "df_byte_lr_bb_local_compute", scope: !3, file: !3, line: 2599, type: !2750, scopeLine: 2600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7535 = !DILocalVariable(name: "bb_index", arg: 1, scope: !7534, file: !3, line: 2599, type: !7)
!7536 = !DILocation(line: 2599, column: 43, scope: !7534)
!7537 = !DILocalVariable(name: "problem_data", scope: !7534, file: !3, line: 2601, type: !2037)
!7538 = !DILocation(line: 2601, column: 35, scope: !7534)
!7539 = !DILocation(line: 2602, column: 41, scope: !7534)
!7540 = !DILocation(line: 2602, column: 53, scope: !7534)
!7541 = !DILocation(line: 2602, column: 7, scope: !7534)
!7542 = !DILocalVariable(name: "bb", scope: !7534, file: !3, line: 2603, type: !1357)
!7543 = !DILocation(line: 2603, column: 15, scope: !7534)
!7544 = !DILocation(line: 2603, column: 20, scope: !7534)
!7545 = !DILocalVariable(name: "bb_info", scope: !7534, file: !3, line: 2604, type: !2092)
!7546 = !DILocation(line: 2604, column: 30, scope: !7534)
!7547 = !DILocation(line: 2604, column: 64, scope: !7534)
!7548 = !DILocation(line: 2604, column: 40, scope: !7534)
!7549 = !DILocalVariable(name: "insn", scope: !7534, file: !3, line: 2605, type: !883)
!7550 = !DILocation(line: 2605, column: 7, scope: !7534)
!7551 = !DILocalVariable(name: "def_rec", scope: !7534, file: !3, line: 2606, type: !1998)
!7552 = !DILocation(line: 2606, column: 11, scope: !7534)
!7553 = !DILocalVariable(name: "use_rec", scope: !7534, file: !3, line: 2607, type: !1998)
!7554 = !DILocation(line: 2607, column: 11, scope: !7534)
!7555 = !DILocation(line: 2610, column: 42, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 2610, column: 3)
!7557 = !DILocation(line: 2610, column: 18, scope: !7556)
!7558 = !DILocation(line: 2610, column: 16, scope: !7556)
!7559 = !DILocation(line: 2610, column: 8, scope: !7556)
!7560 = !DILocation(line: 2610, column: 54, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 2610, column: 3)
!7562 = !DILocation(line: 2610, column: 53, scope: !7561)
!7563 = !DILocation(line: 2610, column: 3, scope: !7556)
!7564 = !DILocalVariable(name: "def", scope: !7565, file: !3, line: 2612, type: !872)
!7565 = distinct !DILexicalBlock(scope: !7561, file: !3, line: 2611, column: 5)
!7566 = !DILocation(line: 2612, column: 14, scope: !7565)
!7567 = !DILocation(line: 2612, column: 21, scope: !7565)
!7568 = !DILocation(line: 2612, column: 20, scope: !7565)
!7569 = !DILocation(line: 2613, column: 12, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 2613, column: 11)
!7571 = !DILocation(line: 2613, column: 31, scope: !7570)
!7572 = !DILocation(line: 2613, column: 48, scope: !7570)
!7573 = !DILocation(line: 2613, column: 11, scope: !7565)
!7574 = !DILocalVariable(name: "dregno", scope: !7575, file: !3, line: 2615, type: !7)
!7575 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 2614, column: 2)
!7576 = !DILocation(line: 2615, column: 17, scope: !7575)
!7577 = !DILocation(line: 2615, column: 26, scope: !7575)
!7578 = !DILocalVariable(name: "start", scope: !7575, file: !3, line: 2616, type: !7)
!7579 = !DILocation(line: 2616, column: 17, scope: !7575)
!7580 = !DILocation(line: 2616, column: 25, scope: !7575)
!7581 = !DILocation(line: 2616, column: 39, scope: !7575)
!7582 = !DILocation(line: 2616, column: 51, scope: !7575)
!7583 = !DILocalVariable(name: "len", scope: !7575, file: !3, line: 2617, type: !7)
!7584 = !DILocation(line: 2617, column: 17, scope: !7575)
!7585 = !DILocation(line: 2617, column: 23, scope: !7575)
!7586 = !DILocation(line: 2617, column: 37, scope: !7575)
!7587 = !DILocation(line: 2617, column: 47, scope: !7575)
!7588 = !DILocation(line: 2618, column: 22, scope: !7575)
!7589 = !DILocation(line: 2618, column: 31, scope: !7575)
!7590 = !DILocation(line: 2618, column: 36, scope: !7575)
!7591 = !DILocation(line: 2618, column: 43, scope: !7575)
!7592 = !DILocation(line: 2618, column: 4, scope: !7575)
!7593 = !DILocation(line: 2619, column: 24, scope: !7575)
!7594 = !DILocation(line: 2619, column: 33, scope: !7575)
!7595 = !DILocation(line: 2619, column: 38, scope: !7575)
!7596 = !DILocation(line: 2619, column: 45, scope: !7575)
!7597 = !DILocation(line: 2619, column: 4, scope: !7575)
!7598 = !DILocation(line: 2620, column: 2, scope: !7575)
!7599 = !DILocation(line: 2621, column: 5, scope: !7565)
!7600 = !DILocation(line: 2610, column: 70, scope: !7561)
!7601 = !DILocation(line: 2610, column: 3, scope: !7561)
!7602 = distinct !{!7602, !7563, !7603}
!7603 = !DILocation(line: 2621, column: 5, scope: !7556)
!7604 = !DILocation(line: 2624, column: 42, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 2624, column: 3)
!7606 = !DILocation(line: 2624, column: 18, scope: !7605)
!7607 = !DILocation(line: 2624, column: 16, scope: !7605)
!7608 = !DILocation(line: 2624, column: 8, scope: !7605)
!7609 = !DILocation(line: 2624, column: 54, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7605, file: !3, line: 2624, column: 3)
!7611 = !DILocation(line: 2624, column: 53, scope: !7610)
!7612 = !DILocation(line: 2624, column: 3, scope: !7605)
!7613 = !DILocalVariable(name: "use", scope: !7614, file: !3, line: 2626, type: !872)
!7614 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 2625, column: 5)
!7615 = !DILocation(line: 2626, column: 14, scope: !7614)
!7616 = !DILocation(line: 2626, column: 21, scope: !7614)
!7617 = !DILocation(line: 2626, column: 20, scope: !7614)
!7618 = !DILocation(line: 2628, column: 12, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 2628, column: 11)
!7620 = !DILocation(line: 2628, column: 31, scope: !7619)
!7621 = !DILocation(line: 2628, column: 48, scope: !7619)
!7622 = !DILocation(line: 2628, column: 11, scope: !7614)
!7623 = !DILocalVariable(name: "uregno", scope: !7624, file: !3, line: 2630, type: !7)
!7624 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 2629, column: 2)
!7625 = !DILocation(line: 2630, column: 17, scope: !7624)
!7626 = !DILocation(line: 2630, column: 26, scope: !7624)
!7627 = !DILocalVariable(name: "start", scope: !7624, file: !3, line: 2631, type: !7)
!7628 = !DILocation(line: 2631, column: 17, scope: !7624)
!7629 = !DILocation(line: 2631, column: 25, scope: !7624)
!7630 = !DILocation(line: 2631, column: 39, scope: !7624)
!7631 = !DILocation(line: 2631, column: 51, scope: !7624)
!7632 = !DILocalVariable(name: "len", scope: !7624, file: !3, line: 2632, type: !7)
!7633 = !DILocation(line: 2632, column: 17, scope: !7624)
!7634 = !DILocation(line: 2632, column: 23, scope: !7624)
!7635 = !DILocation(line: 2632, column: 37, scope: !7624)
!7636 = !DILocation(line: 2632, column: 47, scope: !7624)
!7637 = !DILocation(line: 2633, column: 22, scope: !7624)
!7638 = !DILocation(line: 2633, column: 31, scope: !7624)
!7639 = !DILocation(line: 2633, column: 36, scope: !7624)
!7640 = !DILocation(line: 2633, column: 43, scope: !7624)
!7641 = !DILocation(line: 2633, column: 4, scope: !7624)
!7642 = !DILocation(line: 2634, column: 2, scope: !7624)
!7643 = !DILocation(line: 2635, column: 5, scope: !7614)
!7644 = !DILocation(line: 2624, column: 70, scope: !7610)
!7645 = !DILocation(line: 2624, column: 3, scope: !7610)
!7646 = distinct !{!7646, !7612, !7647}
!7647 = !DILocation(line: 2635, column: 5, scope: !7605)
!7648 = !DILocation(line: 2637, column: 3, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 2637, column: 3)
!7650 = !DILocation(line: 2637, column: 3, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 2637, column: 3)
!7652 = !DILocation(line: 0, scope: !7651)
!7653 = !DILocalVariable(name: "uid", scope: !7654, file: !3, line: 2639, type: !7)
!7654 = distinct !DILexicalBlock(scope: !7651, file: !3, line: 2638, column: 5)
!7655 = !DILocation(line: 2639, column: 20, scope: !7654)
!7656 = !DILocation(line: 2639, column: 26, scope: !7654)
!7657 = !DILocation(line: 2641, column: 12, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2641, column: 11)
!7659 = !DILocation(line: 2641, column: 11, scope: !7654)
!7660 = !DILocation(line: 2642, column: 2, scope: !7658)
!7661 = !DILocation(line: 2644, column: 22, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2644, column: 7)
!7663 = !DILocation(line: 2644, column: 20, scope: !7662)
!7664 = !DILocation(line: 2644, column: 12, scope: !7662)
!7665 = !DILocation(line: 2644, column: 47, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 2644, column: 7)
!7667 = !DILocation(line: 2644, column: 46, scope: !7666)
!7668 = !DILocation(line: 2644, column: 7, scope: !7662)
!7669 = !DILocalVariable(name: "def", scope: !7670, file: !3, line: 2646, type: !872)
!7670 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 2645, column: 2)
!7671 = !DILocation(line: 2646, column: 11, scope: !7670)
!7672 = !DILocation(line: 2646, column: 18, scope: !7670)
!7673 = !DILocation(line: 2646, column: 17, scope: !7670)
!7674 = !DILocation(line: 2649, column: 10, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 2649, column: 8)
!7676 = !DILocation(line: 2649, column: 29, scope: !7675)
!7677 = !DILocation(line: 2649, column: 8, scope: !7670)
!7678 = !DILocalVariable(name: "dregno", scope: !7679, file: !3, line: 2651, type: !7)
!7679 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 2650, column: 6)
!7680 = !DILocation(line: 2651, column: 21, scope: !7679)
!7681 = !DILocation(line: 2651, column: 30, scope: !7679)
!7682 = !DILocalVariable(name: "start", scope: !7679, file: !3, line: 2652, type: !7)
!7683 = !DILocation(line: 2652, column: 21, scope: !7679)
!7684 = !DILocation(line: 2652, column: 29, scope: !7679)
!7685 = !DILocation(line: 2652, column: 43, scope: !7679)
!7686 = !DILocation(line: 2652, column: 55, scope: !7679)
!7687 = !DILocalVariable(name: "len", scope: !7679, file: !3, line: 2653, type: !7)
!7688 = !DILocation(line: 2653, column: 21, scope: !7679)
!7689 = !DILocation(line: 2653, column: 27, scope: !7679)
!7690 = !DILocation(line: 2653, column: 41, scope: !7679)
!7691 = !DILocation(line: 2653, column: 51, scope: !7679)
!7692 = !DILocalVariable(name: "sb", scope: !7679, file: !3, line: 2654, type: !7)
!7693 = !DILocation(line: 2654, column: 21, scope: !7679)
!7694 = !DILocalVariable(name: "lb", scope: !7679, file: !3, line: 2655, type: !7)
!7695 = !DILocation(line: 2655, column: 21, scope: !7679)
!7696 = !DILocation(line: 2656, column: 40, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 2656, column: 12)
!7698 = !DILocation(line: 2656, column: 13, scope: !7697)
!7699 = !DILocation(line: 2656, column: 12, scope: !7679)
!7700 = !DILocation(line: 2658, column: 14, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2657, column: 3)
!7702 = !DILocation(line: 2658, column: 11, scope: !7701)
!7703 = !DILocation(line: 2659, column: 11, scope: !7701)
!7704 = !DILocation(line: 2659, column: 16, scope: !7701)
!7705 = !DILocation(line: 2659, column: 14, scope: !7701)
!7706 = !DILocation(line: 2659, column: 9, scope: !7701)
!7707 = !DILocation(line: 2660, column: 3, scope: !7701)
!7708 = !DILocation(line: 2661, column: 12, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 2661, column: 12)
!7710 = !DILocation(line: 2661, column: 12, scope: !7679)
!7711 = !DILocation(line: 2663, column: 23, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 2662, column: 3)
!7713 = !DILocation(line: 2663, column: 32, scope: !7712)
!7714 = !DILocation(line: 2663, column: 37, scope: !7712)
!7715 = !DILocation(line: 2663, column: 44, scope: !7712)
!7716 = !DILocation(line: 2663, column: 5, scope: !7712)
!7717 = !DILocation(line: 2664, column: 25, scope: !7712)
!7718 = !DILocation(line: 2664, column: 34, scope: !7712)
!7719 = !DILocation(line: 2664, column: 39, scope: !7712)
!7720 = !DILocation(line: 2664, column: 46, scope: !7712)
!7721 = !DILocation(line: 2664, column: 5, scope: !7712)
!7722 = !DILocation(line: 2665, column: 3, scope: !7712)
!7723 = !DILocation(line: 2666, column: 6, scope: !7679)
!7724 = !DILocation(line: 2667, column: 2, scope: !7670)
!7725 = !DILocation(line: 2644, column: 63, scope: !7666)
!7726 = !DILocation(line: 2644, column: 7, scope: !7666)
!7727 = distinct !{!7727, !7668, !7728}
!7728 = !DILocation(line: 2667, column: 2, scope: !7662)
!7729 = !DILocation(line: 2669, column: 22, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2669, column: 7)
!7731 = !DILocation(line: 2669, column: 20, scope: !7730)
!7732 = !DILocation(line: 2669, column: 12, scope: !7730)
!7733 = !DILocation(line: 2669, column: 47, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 2669, column: 7)
!7735 = !DILocation(line: 2669, column: 46, scope: !7734)
!7736 = !DILocation(line: 2669, column: 7, scope: !7730)
!7737 = !DILocalVariable(name: "use", scope: !7738, file: !3, line: 2671, type: !872)
!7738 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 2670, column: 2)
!7739 = !DILocation(line: 2671, column: 11, scope: !7738)
!7740 = !DILocation(line: 2671, column: 18, scope: !7738)
!7741 = !DILocation(line: 2671, column: 17, scope: !7738)
!7742 = !DILocalVariable(name: "uregno", scope: !7738, file: !3, line: 2672, type: !7)
!7743 = !DILocation(line: 2672, column: 17, scope: !7738)
!7744 = !DILocation(line: 2672, column: 26, scope: !7738)
!7745 = !DILocalVariable(name: "start", scope: !7738, file: !3, line: 2673, type: !7)
!7746 = !DILocation(line: 2673, column: 17, scope: !7738)
!7747 = !DILocation(line: 2673, column: 25, scope: !7738)
!7748 = !DILocation(line: 2673, column: 39, scope: !7738)
!7749 = !DILocation(line: 2673, column: 51, scope: !7738)
!7750 = !DILocalVariable(name: "len", scope: !7738, file: !3, line: 2674, type: !7)
!7751 = !DILocation(line: 2674, column: 17, scope: !7738)
!7752 = !DILocation(line: 2674, column: 23, scope: !7738)
!7753 = !DILocation(line: 2674, column: 37, scope: !7738)
!7754 = !DILocation(line: 2674, column: 47, scope: !7738)
!7755 = !DILocalVariable(name: "sb", scope: !7738, file: !3, line: 2675, type: !7)
!7756 = !DILocation(line: 2675, column: 17, scope: !7738)
!7757 = !DILocalVariable(name: "lb", scope: !7738, file: !3, line: 2676, type: !7)
!7758 = !DILocation(line: 2676, column: 17, scope: !7738)
!7759 = !DILocation(line: 2677, column: 36, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 2677, column: 8)
!7761 = !DILocation(line: 2677, column: 9, scope: !7760)
!7762 = !DILocation(line: 2677, column: 8, scope: !7738)
!7763 = !DILocation(line: 2679, column: 17, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 2678, column: 6)
!7765 = !DILocation(line: 2679, column: 14, scope: !7764)
!7766 = !DILocation(line: 2680, column: 14, scope: !7764)
!7767 = !DILocation(line: 2680, column: 19, scope: !7764)
!7768 = !DILocation(line: 2680, column: 17, scope: !7764)
!7769 = !DILocation(line: 2680, column: 12, scope: !7764)
!7770 = !DILocation(line: 2681, column: 6, scope: !7764)
!7771 = !DILocation(line: 2683, column: 8, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 2683, column: 8)
!7773 = !DILocation(line: 2683, column: 8, scope: !7738)
!7774 = !DILocation(line: 2684, column: 24, scope: !7772)
!7775 = !DILocation(line: 2684, column: 33, scope: !7772)
!7776 = !DILocation(line: 2684, column: 38, scope: !7772)
!7777 = !DILocation(line: 2684, column: 45, scope: !7772)
!7778 = !DILocation(line: 2684, column: 6, scope: !7772)
!7779 = !DILocation(line: 2685, column: 2, scope: !7738)
!7780 = !DILocation(line: 2669, column: 63, scope: !7734)
!7781 = !DILocation(line: 2669, column: 7, scope: !7734)
!7782 = distinct !{!7782, !7736, !7783}
!7783 = !DILocation(line: 2685, column: 2, scope: !7730)
!7784 = !DILocation(line: 2686, column: 5, scope: !7654)
!7785 = distinct !{!7785, !7648, !7786}
!7786 = !DILocation(line: 2686, column: 5, scope: !7649)
!7787 = !DILocation(line: 2691, column: 42, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 2691, column: 3)
!7789 = !DILocation(line: 2691, column: 18, scope: !7788)
!7790 = !DILocation(line: 2691, column: 16, scope: !7788)
!7791 = !DILocation(line: 2691, column: 8, scope: !7788)
!7792 = !DILocation(line: 2691, column: 54, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7788, file: !3, line: 2691, column: 3)
!7794 = !DILocation(line: 2691, column: 53, scope: !7793)
!7795 = !DILocation(line: 2691, column: 3, scope: !7788)
!7796 = !DILocalVariable(name: "def", scope: !7797, file: !3, line: 2693, type: !872)
!7797 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 2692, column: 5)
!7798 = !DILocation(line: 2693, column: 14, scope: !7797)
!7799 = !DILocation(line: 2693, column: 21, scope: !7797)
!7800 = !DILocation(line: 2693, column: 20, scope: !7797)
!7801 = !DILocation(line: 2694, column: 11, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 2694, column: 11)
!7803 = !DILocation(line: 2694, column: 30, scope: !7802)
!7804 = !DILocation(line: 2694, column: 11, scope: !7797)
!7805 = !DILocalVariable(name: "dregno", scope: !7806, file: !3, line: 2696, type: !7)
!7806 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 2695, column: 2)
!7807 = !DILocation(line: 2696, column: 17, scope: !7806)
!7808 = !DILocation(line: 2696, column: 26, scope: !7806)
!7809 = !DILocalVariable(name: "start", scope: !7806, file: !3, line: 2697, type: !7)
!7810 = !DILocation(line: 2697, column: 17, scope: !7806)
!7811 = !DILocation(line: 2697, column: 25, scope: !7806)
!7812 = !DILocation(line: 2697, column: 39, scope: !7806)
!7813 = !DILocation(line: 2697, column: 51, scope: !7806)
!7814 = !DILocalVariable(name: "len", scope: !7806, file: !3, line: 2698, type: !7)
!7815 = !DILocation(line: 2698, column: 17, scope: !7806)
!7816 = !DILocation(line: 2698, column: 23, scope: !7806)
!7817 = !DILocation(line: 2698, column: 37, scope: !7806)
!7818 = !DILocation(line: 2698, column: 47, scope: !7806)
!7819 = !DILocation(line: 2699, column: 22, scope: !7806)
!7820 = !DILocation(line: 2699, column: 31, scope: !7806)
!7821 = !DILocation(line: 2699, column: 36, scope: !7806)
!7822 = !DILocation(line: 2699, column: 43, scope: !7806)
!7823 = !DILocation(line: 2699, column: 4, scope: !7806)
!7824 = !DILocation(line: 2700, column: 24, scope: !7806)
!7825 = !DILocation(line: 2700, column: 33, scope: !7806)
!7826 = !DILocation(line: 2700, column: 38, scope: !7806)
!7827 = !DILocation(line: 2700, column: 45, scope: !7806)
!7828 = !DILocation(line: 2700, column: 4, scope: !7806)
!7829 = !DILocation(line: 2701, column: 2, scope: !7806)
!7830 = !DILocation(line: 2702, column: 5, scope: !7797)
!7831 = !DILocation(line: 2691, column: 70, scope: !7793)
!7832 = !DILocation(line: 2691, column: 3, scope: !7793)
!7833 = distinct !{!7833, !7795, !7834}
!7834 = !DILocation(line: 2702, column: 5, scope: !7788)
!7835 = !DILocation(line: 2719, column: 1, scope: !7534)
!7836 = distinct !DISubprogram(name: "df_note_alloc", scope: !3, file: !3, line: 3069, type: !2121, scopeLine: 3070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7837 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !7836, file: !3, line: 3069, type: !802)
!7838 = !DILocation(line: 3069, column: 23, scope: !7836)
!7839 = !DILocation(line: 3071, column: 3, scope: !7836)
!7840 = !DILocation(line: 3071, column: 12, scope: !7836)
!7841 = !DILocation(line: 3071, column: 23, scope: !7836)
!7842 = !DILocation(line: 3072, column: 1, scope: !7836)
!7843 = distinct !DISubprogram(name: "df_note_compute", scope: !3, file: !3, line: 3644, type: !2121, scopeLine: 3645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7844 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !7843, file: !3, line: 3644, type: !802)
!7845 = !DILocation(line: 3644, column: 25, scope: !7843)
!7846 = !DILocalVariable(name: "bb_index", scope: !7843, file: !3, line: 3646, type: !7)
!7847 = !DILocation(line: 3646, column: 16, scope: !7843)
!7848 = !DILocalVariable(name: "bi", scope: !7843, file: !3, line: 3647, type: !4201)
!7849 = !DILocation(line: 3647, column: 19, scope: !7843)
!7850 = !DILocalVariable(name: "live", scope: !7843, file: !3, line: 3648, type: !802)
!7851 = !DILocation(line: 3648, column: 10, scope: !7843)
!7852 = !DILocation(line: 3648, column: 17, scope: !7843)
!7853 = !DILocalVariable(name: "do_not_gen", scope: !7843, file: !3, line: 3649, type: !802)
!7854 = !DILocation(line: 3649, column: 10, scope: !7843)
!7855 = !DILocation(line: 3649, column: 23, scope: !7843)
!7856 = !DILocalVariable(name: "artificial_uses", scope: !7843, file: !3, line: 3650, type: !802)
!7857 = !DILocation(line: 3650, column: 10, scope: !7843)
!7858 = !DILocation(line: 3650, column: 28, scope: !7843)
!7859 = !DILocation(line: 3657, column: 3, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 3657, column: 3)
!7861 = !DILocation(line: 3657, column: 3, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7860, file: !3, line: 3657, column: 3)
!7863 = !DILocation(line: 3659, column: 25, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7862, file: !3, line: 3658, column: 3)
!7865 = !DILocation(line: 3659, column: 35, scope: !7864)
!7866 = !DILocation(line: 3659, column: 41, scope: !7864)
!7867 = !DILocation(line: 3659, column: 53, scope: !7864)
!7868 = !DILocation(line: 3659, column: 5, scope: !7864)
!7869 = !DILocation(line: 3660, column: 3, scope: !7864)
!7870 = distinct !{!7870, !7859, !7871}
!7871 = !DILocation(line: 3660, column: 3, scope: !7860)
!7872 = !DILocation(line: 3662, column: 3, scope: !7843)
!7873 = !DILocation(line: 3663, column: 3, scope: !7843)
!7874 = !DILocation(line: 3664, column: 3, scope: !7843)
!7875 = !DILocation(line: 3665, column: 1, scope: !7843)
!7876 = distinct !DISubprogram(name: "df_note_free", scope: !3, file: !3, line: 3671, type: !2195, scopeLine: 3672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7877 = !DILocation(line: 3673, column: 9, scope: !7876)
!7878 = !DILocation(line: 3673, column: 3, scope: !7876)
!7879 = !DILocation(line: 3674, column: 1, scope: !7876)
!7880 = distinct !DISubprogram(name: "df_note_bb_compute", scope: !3, file: !3, line: 3412, type: !7881, scopeLine: 3414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!7881 = !DISubroutineType(types: !7882)
!7882 = !{null, !7, !802, !802, !802}
!7883 = !DILocalVariable(name: "bb_index", arg: 1, scope: !7880, file: !3, line: 3412, type: !7)
!7884 = !DILocation(line: 3412, column: 34, scope: !7880)
!7885 = !DILocalVariable(name: "live", arg: 2, scope: !7880, file: !3, line: 3413, type: !802)
!7886 = !DILocation(line: 3413, column: 14, scope: !7880)
!7887 = !DILocalVariable(name: "do_not_gen", arg: 3, scope: !7880, file: !3, line: 3413, type: !802)
!7888 = !DILocation(line: 3413, column: 27, scope: !7880)
!7889 = !DILocalVariable(name: "artificial_uses", arg: 4, scope: !7880, file: !3, line: 3413, type: !802)
!7890 = !DILocation(line: 3413, column: 46, scope: !7880)
!7891 = !DILocalVariable(name: "bb", scope: !7880, file: !3, line: 3415, type: !1357)
!7892 = !DILocation(line: 3415, column: 15, scope: !7880)
!7893 = !DILocation(line: 3415, column: 20, scope: !7880)
!7894 = !DILocalVariable(name: "insn", scope: !7880, file: !3, line: 3416, type: !883)
!7895 = !DILocation(line: 3416, column: 7, scope: !7880)
!7896 = !DILocalVariable(name: "def_rec", scope: !7880, file: !3, line: 3417, type: !1998)
!7897 = !DILocation(line: 3417, column: 11, scope: !7880)
!7898 = !DILocalVariable(name: "use_rec", scope: !7880, file: !3, line: 3418, type: !1998)
!7899 = !DILocation(line: 3418, column: 11, scope: !7880)
!7900 = !DILocation(line: 3420, column: 16, scope: !7880)
!7901 = !DILocation(line: 3420, column: 39, scope: !7880)
!7902 = !DILocation(line: 3420, column: 22, scope: !7880)
!7903 = !DILocation(line: 3420, column: 3, scope: !7880)
!7904 = !DILocation(line: 3421, column: 17, scope: !7880)
!7905 = !DILocation(line: 3421, column: 3, scope: !7880)
!7906 = !DILocation(line: 3433, column: 42, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7880, file: !3, line: 3433, column: 3)
!7908 = !DILocation(line: 3433, column: 18, scope: !7907)
!7909 = !DILocation(line: 3433, column: 16, scope: !7907)
!7910 = !DILocation(line: 3433, column: 8, scope: !7907)
!7911 = !DILocation(line: 3433, column: 54, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 3433, column: 3)
!7913 = !DILocation(line: 3433, column: 53, scope: !7912)
!7914 = !DILocation(line: 3433, column: 3, scope: !7907)
!7915 = !DILocalVariable(name: "def", scope: !7916, file: !3, line: 3435, type: !872)
!7916 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 3434, column: 5)
!7917 = !DILocation(line: 3435, column: 14, scope: !7916)
!7918 = !DILocation(line: 3435, column: 21, scope: !7916)
!7919 = !DILocation(line: 3435, column: 20, scope: !7916)
!7920 = !DILocation(line: 3441, column: 12, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 3441, column: 11)
!7922 = !DILocation(line: 3441, column: 31, scope: !7921)
!7923 = !DILocation(line: 3441, column: 48, scope: !7921)
!7924 = !DILocation(line: 3441, column: 11, scope: !7916)
!7925 = !DILocation(line: 3442, column: 20, scope: !7921)
!7926 = !DILocation(line: 3442, column: 26, scope: !7921)
!7927 = !DILocation(line: 3442, column: 2, scope: !7921)
!7928 = !DILocation(line: 3443, column: 5, scope: !7916)
!7929 = !DILocation(line: 3433, column: 70, scope: !7912)
!7930 = !DILocation(line: 3433, column: 3, scope: !7912)
!7931 = distinct !{!7931, !7914, !7932}
!7932 = !DILocation(line: 3443, column: 5, scope: !7907)
!7933 = !DILocation(line: 3445, column: 42, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7880, file: !3, line: 3445, column: 3)
!7935 = !DILocation(line: 3445, column: 18, scope: !7934)
!7936 = !DILocation(line: 3445, column: 16, scope: !7934)
!7937 = !DILocation(line: 3445, column: 8, scope: !7934)
!7938 = !DILocation(line: 3445, column: 54, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 3445, column: 3)
!7940 = !DILocation(line: 3445, column: 53, scope: !7939)
!7941 = !DILocation(line: 3445, column: 3, scope: !7934)
!7942 = !DILocalVariable(name: "use", scope: !7943, file: !3, line: 3447, type: !872)
!7943 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 3446, column: 5)
!7944 = !DILocation(line: 3447, column: 14, scope: !7943)
!7945 = !DILocation(line: 3447, column: 21, scope: !7943)
!7946 = !DILocation(line: 3447, column: 20, scope: !7943)
!7947 = !DILocation(line: 3448, column: 12, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 3448, column: 11)
!7949 = !DILocation(line: 3448, column: 31, scope: !7948)
!7950 = !DILocation(line: 3448, column: 48, scope: !7948)
!7951 = !DILocation(line: 3448, column: 11, scope: !7943)
!7952 = !DILocalVariable(name: "regno", scope: !7953, file: !3, line: 3450, type: !7)
!7953 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 3449, column: 2)
!7954 = !DILocation(line: 3450, column: 17, scope: !7953)
!7955 = !DILocation(line: 3450, column: 25, scope: !7953)
!7956 = !DILocation(line: 3451, column: 20, scope: !7953)
!7957 = !DILocation(line: 3451, column: 26, scope: !7953)
!7958 = !DILocation(line: 3451, column: 4, scope: !7953)
!7959 = !DILocation(line: 3455, column: 20, scope: !7953)
!7960 = !DILocation(line: 3455, column: 37, scope: !7953)
!7961 = !DILocation(line: 3455, column: 4, scope: !7953)
!7962 = !DILocation(line: 3456, column: 2, scope: !7953)
!7963 = !DILocation(line: 3457, column: 5, scope: !7943)
!7964 = !DILocation(line: 3445, column: 70, scope: !7939)
!7965 = !DILocation(line: 3445, column: 3, scope: !7939)
!7966 = distinct !{!7966, !7941, !7967}
!7967 = !DILocation(line: 3457, column: 5, scope: !7934)
!7968 = !DILocation(line: 3467, column: 3, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7880, file: !3, line: 3467, column: 3)
!7970 = !DILocation(line: 3467, column: 3, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 3467, column: 3)
!7972 = !DILocation(line: 0, scope: !7971)
!7973 = !DILocalVariable(name: "uid", scope: !7974, file: !3, line: 3469, type: !7)
!7974 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 3468, column: 5)
!7975 = !DILocation(line: 3469, column: 20, scope: !7974)
!7976 = !DILocation(line: 3469, column: 26, scope: !7974)
!7977 = !DILocalVariable(name: "mws_rec", scope: !7974, file: !3, line: 3470, type: !2002)
!7978 = !DILocation(line: 3470, column: 30, scope: !7974)
!7979 = !DILocalVariable(name: "old_dead_notes", scope: !7974, file: !3, line: 3471, type: !883)
!7980 = !DILocation(line: 3471, column: 11, scope: !7974)
!7981 = !DILocalVariable(name: "old_unused_notes", scope: !7974, file: !3, line: 3472, type: !883)
!7982 = !DILocation(line: 3472, column: 11, scope: !7974)
!7983 = !DILocalVariable(name: "debug_insn", scope: !7974, file: !3, line: 3473, type: !855)
!7984 = !DILocation(line: 3473, column: 11, scope: !7974)
!7985 = !DILocation(line: 3475, column: 12, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 3475, column: 11)
!7987 = !DILocation(line: 3475, column: 11, scope: !7974)
!7988 = !DILocation(line: 3476, column: 2, scope: !7986)
!7989 = !DILocation(line: 3478, column: 20, scope: !7974)
!7990 = !DILocation(line: 3478, column: 18, scope: !7974)
!7991 = !DILocation(line: 3480, column: 21, scope: !7974)
!7992 = !DILocation(line: 3480, column: 7, scope: !7974)
!7993 = !DILocation(line: 3481, column: 22, scope: !7974)
!7994 = !DILocation(line: 3481, column: 7, scope: !7974)
!7995 = !DILocation(line: 3484, column: 11, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 3484, column: 11)
!7997 = !DILocation(line: 3484, column: 11, scope: !7974)
!7998 = !DILocation(line: 3495, column: 14, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 3485, column: 2)
!8000 = !DILocation(line: 3495, column: 12, scope: !7999)
!8001 = !DILocation(line: 3496, column: 4, scope: !7999)
!8002 = !DILocation(line: 3496, column: 12, scope: !7999)
!8003 = !DILocation(line: 3496, column: 11, scope: !7999)
!8004 = !DILocalVariable(name: "mws", scope: !8005, file: !3, line: 3498, type: !2003)
!8005 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 3497, column: 6)
!8006 = !DILocation(line: 3498, column: 30, scope: !8005)
!8007 = !DILocation(line: 3498, column: 37, scope: !8005)
!8008 = !DILocation(line: 3498, column: 36, scope: !8005)
!8009 = !DILocation(line: 3499, column: 13, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 3499, column: 12)
!8011 = !DILocation(line: 3500, column: 5, scope: !8010)
!8012 = !DILocation(line: 3500, column: 30, scope: !8010)
!8013 = !DILocation(line: 3500, column: 35, scope: !8010)
!8014 = !DILocation(line: 3500, column: 9, scope: !8010)
!8015 = !DILocation(line: 3499, column: 12, scope: !8005)
!8016 = !DILocation(line: 3502, column: 35, scope: !8010)
!8017 = !DILocation(line: 3502, column: 41, scope: !8010)
!8018 = !DILocation(line: 3503, column: 7, scope: !8010)
!8019 = !DILocation(line: 3503, column: 12, scope: !8010)
!8020 = !DILocation(line: 3503, column: 18, scope: !8010)
!8021 = !DILocation(line: 3504, column: 7, scope: !8010)
!8022 = !DILocation(line: 3502, column: 7, scope: !8010)
!8023 = !DILocation(line: 3502, column: 5, scope: !8010)
!8024 = !DILocation(line: 3501, column: 3, scope: !8010)
!8025 = !DILocation(line: 3505, column: 15, scope: !8005)
!8026 = distinct !{!8026, !8001, !8027}
!8027 = !DILocation(line: 3506, column: 6, scope: !7999)
!8028 = !DILocation(line: 3510, column: 19, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 3510, column: 4)
!8030 = !DILocation(line: 3510, column: 17, scope: !8029)
!8031 = !DILocation(line: 3510, column: 9, scope: !8029)
!8032 = !DILocation(line: 3510, column: 44, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 3510, column: 4)
!8034 = !DILocation(line: 3510, column: 43, scope: !8033)
!8035 = !DILocation(line: 3510, column: 4, scope: !8029)
!8036 = !DILocalVariable(name: "def", scope: !8037, file: !3, line: 3512, type: !872)
!8037 = distinct !DILexicalBlock(scope: !8033, file: !3, line: 3511, column: 6)
!8038 = !DILocation(line: 3512, column: 15, scope: !8037)
!8039 = !DILocation(line: 3512, column: 22, scope: !8037)
!8040 = !DILocation(line: 3512, column: 21, scope: !8037)
!8041 = !DILocalVariable(name: "dregno", scope: !8037, file: !3, line: 3513, type: !7)
!8042 = !DILocation(line: 3513, column: 21, scope: !8037)
!8043 = !DILocation(line: 3513, column: 30, scope: !8037)
!8044 = !DILocation(line: 3514, column: 13, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 3514, column: 12)
!8046 = !DILocation(line: 3514, column: 12, scope: !8037)
!8047 = !DILocation(line: 3517, column: 32, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 3515, column: 3)
!8049 = !DILocation(line: 3517, column: 38, scope: !8048)
!8050 = !DILocation(line: 3518, column: 11, scope: !8048)
!8051 = !DILocation(line: 3518, column: 16, scope: !8048)
!8052 = !DILocation(line: 3518, column: 22, scope: !8048)
!8053 = !DILocation(line: 3517, column: 9, scope: !8048)
!8054 = !DILocation(line: 3517, column: 7, scope: !8048)
!8055 = !DILocation(line: 3519, column: 21, scope: !8048)
!8056 = !DILocation(line: 3519, column: 33, scope: !8048)
!8057 = !DILocation(line: 3519, column: 5, scope: !8048)
!8058 = !DILocation(line: 3520, column: 3, scope: !8048)
!8059 = !DILocation(line: 3522, column: 13, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8037, file: !3, line: 3522, column: 12)
!8061 = !DILocation(line: 3522, column: 12, scope: !8037)
!8062 = !DILocation(line: 3523, column: 21, scope: !8060)
!8063 = !DILocation(line: 3523, column: 27, scope: !8060)
!8064 = !DILocation(line: 3523, column: 3, scope: !8060)
!8065 = !DILocation(line: 3524, column: 6, scope: !8037)
!8066 = !DILocation(line: 3510, column: 60, scope: !8033)
!8067 = !DILocation(line: 3510, column: 4, scope: !8033)
!8068 = distinct !{!8068, !8035, !8069}
!8069 = !DILocation(line: 3524, column: 6, scope: !8029)
!8070 = !DILocation(line: 3525, column: 2, scope: !7999)
!8071 = !DILocation(line: 3529, column: 14, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 3527, column: 2)
!8073 = !DILocation(line: 3529, column: 12, scope: !8072)
!8074 = !DILocation(line: 3530, column: 4, scope: !8072)
!8075 = !DILocation(line: 3530, column: 12, scope: !8072)
!8076 = !DILocation(line: 3530, column: 11, scope: !8072)
!8077 = !DILocalVariable(name: "mws", scope: !8078, file: !3, line: 3532, type: !2003)
!8078 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 3531, column: 6)
!8079 = !DILocation(line: 3532, column: 30, scope: !8078)
!8080 = !DILocation(line: 3532, column: 37, scope: !8078)
!8081 = !DILocation(line: 3532, column: 36, scope: !8078)
!8082 = !DILocation(line: 3533, column: 12, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 3533, column: 12)
!8084 = !DILocation(line: 3533, column: 12, scope: !8078)
!8085 = !DILocation(line: 3535, column: 35, scope: !8083)
!8086 = !DILocation(line: 3535, column: 41, scope: !8083)
!8087 = !DILocation(line: 3536, column: 7, scope: !8083)
!8088 = !DILocation(line: 3536, column: 12, scope: !8083)
!8089 = !DILocation(line: 3536, column: 18, scope: !8083)
!8090 = !DILocation(line: 3537, column: 7, scope: !8083)
!8091 = !DILocation(line: 3535, column: 7, scope: !8083)
!8092 = !DILocation(line: 3535, column: 5, scope: !8083)
!8093 = !DILocation(line: 3534, column: 3, scope: !8083)
!8094 = !DILocation(line: 3538, column: 15, scope: !8078)
!8095 = distinct !{!8095, !8074, !8096}
!8096 = !DILocation(line: 3539, column: 6, scope: !8072)
!8097 = !DILocation(line: 3541, column: 19, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 3541, column: 4)
!8099 = !DILocation(line: 3541, column: 17, scope: !8098)
!8100 = !DILocation(line: 3541, column: 9, scope: !8098)
!8101 = !DILocation(line: 3541, column: 44, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 3541, column: 4)
!8103 = !DILocation(line: 3541, column: 43, scope: !8102)
!8104 = !DILocation(line: 3541, column: 4, scope: !8098)
!8105 = !DILocalVariable(name: "def", scope: !8106, file: !3, line: 3543, type: !872)
!8106 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 3542, column: 6)
!8107 = !DILocation(line: 3543, column: 15, scope: !8106)
!8108 = !DILocation(line: 3543, column: 22, scope: !8106)
!8109 = !DILocation(line: 3543, column: 21, scope: !8106)
!8110 = !DILocalVariable(name: "dregno", scope: !8106, file: !3, line: 3544, type: !7)
!8111 = !DILocation(line: 3544, column: 21, scope: !8106)
!8112 = !DILocation(line: 3544, column: 30, scope: !8106)
!8113 = !DILocation(line: 3546, column: 28, scope: !8106)
!8114 = !DILocation(line: 3546, column: 34, scope: !8106)
!8115 = !DILocation(line: 3547, column: 7, scope: !8106)
!8116 = !DILocation(line: 3547, column: 12, scope: !8106)
!8117 = !DILocation(line: 3547, column: 18, scope: !8106)
!8118 = !DILocation(line: 3546, column: 5, scope: !8106)
!8119 = !DILocation(line: 3546, column: 3, scope: !8106)
!8120 = !DILocation(line: 3549, column: 13, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8106, file: !3, line: 3549, column: 12)
!8122 = !DILocation(line: 3549, column: 12, scope: !8106)
!8123 = !DILocation(line: 3550, column: 19, scope: !8121)
!8124 = !DILocation(line: 3550, column: 31, scope: !8121)
!8125 = !DILocation(line: 3550, column: 3, scope: !8121)
!8126 = !DILocation(line: 3552, column: 13, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8106, file: !3, line: 3552, column: 12)
!8128 = !DILocation(line: 3552, column: 12, scope: !8106)
!8129 = !DILocation(line: 3553, column: 21, scope: !8127)
!8130 = !DILocation(line: 3553, column: 27, scope: !8127)
!8131 = !DILocation(line: 3553, column: 3, scope: !8127)
!8132 = !DILocation(line: 3554, column: 6, scope: !8106)
!8133 = !DILocation(line: 3541, column: 60, scope: !8102)
!8134 = !DILocation(line: 3541, column: 4, scope: !8102)
!8135 = distinct !{!8135, !8104, !8136}
!8136 = !DILocation(line: 3554, column: 6, scope: !8098)
!8137 = !DILocation(line: 3558, column: 17, scope: !7974)
!8138 = !DILocation(line: 3558, column: 15, scope: !7974)
!8139 = !DILocation(line: 3559, column: 7, scope: !7974)
!8140 = !DILocation(line: 3559, column: 15, scope: !7974)
!8141 = !DILocation(line: 3559, column: 14, scope: !7974)
!8142 = !DILocalVariable(name: "mws", scope: !8143, file: !3, line: 3561, type: !2003)
!8143 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 3560, column: 2)
!8144 = !DILocation(line: 3561, column: 26, scope: !8143)
!8145 = !DILocation(line: 3561, column: 33, scope: !8143)
!8146 = !DILocation(line: 3561, column: 32, scope: !8143)
!8147 = !DILocation(line: 3562, column: 9, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 3562, column: 8)
!8149 = !DILocation(line: 3563, column: 8, scope: !8148)
!8150 = !DILocation(line: 3563, column: 33, scope: !8148)
!8151 = !DILocation(line: 3563, column: 38, scope: !8148)
!8152 = !DILocation(line: 3563, column: 12, scope: !8148)
!8153 = !DILocation(line: 3562, column: 8, scope: !8143)
!8154 = !DILocalVariable(name: "really_add_notes", scope: !8155, file: !3, line: 3565, type: !1052)
!8155 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 3564, column: 6)
!8156 = !DILocation(line: 3565, column: 13, scope: !8155)
!8157 = !DILocation(line: 3565, column: 32, scope: !8155)
!8158 = !DILocation(line: 3565, column: 43, scope: !8155)
!8159 = !DILocation(line: 3568, column: 31, scope: !8155)
!8160 = !DILocation(line: 3568, column: 37, scope: !8155)
!8161 = !DILocation(line: 3569, column: 10, scope: !8155)
!8162 = !DILocation(line: 3569, column: 15, scope: !8155)
!8163 = !DILocation(line: 3569, column: 21, scope: !8155)
!8164 = !DILocation(line: 3570, column: 10, scope: !8155)
!8165 = !DILocation(line: 3568, column: 5, scope: !8155)
!8166 = !DILocation(line: 3568, column: 3, scope: !8155)
!8167 = !DILocation(line: 3573, column: 12, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8155, file: !3, line: 3573, column: 12)
!8169 = !DILocation(line: 3573, column: 12, scope: !8155)
!8170 = !DILocation(line: 3574, column: 14, scope: !8168)
!8171 = !DILocation(line: 3574, column: 3, scope: !8168)
!8172 = !DILocation(line: 3575, column: 6, scope: !8155)
!8173 = !DILocation(line: 3576, column: 11, scope: !8143)
!8174 = distinct !{!8174, !8139, !8175}
!8175 = !DILocation(line: 3577, column: 2, scope: !7974)
!8176 = !DILocation(line: 3579, column: 22, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 3579, column: 7)
!8178 = !DILocation(line: 3579, column: 20, scope: !8177)
!8179 = !DILocation(line: 3579, column: 12, scope: !8177)
!8180 = !DILocation(line: 3579, column: 47, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 3579, column: 7)
!8182 = !DILocation(line: 3579, column: 46, scope: !8181)
!8183 = !DILocation(line: 3579, column: 7, scope: !8177)
!8184 = !DILocalVariable(name: "use", scope: !8185, file: !3, line: 3581, type: !872)
!8185 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 3580, column: 2)
!8186 = !DILocation(line: 3581, column: 11, scope: !8185)
!8187 = !DILocation(line: 3581, column: 18, scope: !8185)
!8188 = !DILocation(line: 3581, column: 17, scope: !8185)
!8189 = !DILocalVariable(name: "uregno", scope: !8185, file: !3, line: 3582, type: !7)
!8190 = !DILocation(line: 3582, column: 17, scope: !8185)
!8191 = !DILocation(line: 3582, column: 26, scope: !8185)
!8192 = !DILocation(line: 3591, column: 23, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8185, file: !3, line: 3591, column: 8)
!8194 = !DILocation(line: 3591, column: 29, scope: !8193)
!8195 = !DILocation(line: 3591, column: 9, scope: !8193)
!8196 = !DILocation(line: 3591, column: 8, scope: !8185)
!8197 = !DILocation(line: 3593, column: 12, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 3593, column: 12)
!8199 = distinct !DILexicalBlock(scope: !8193, file: !3, line: 3592, column: 6)
!8200 = !DILocation(line: 3593, column: 12, scope: !8199)
!8201 = !DILocation(line: 3595, column: 16, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 3594, column: 3)
!8203 = !DILocation(line: 3596, column: 5, scope: !8202)
!8204 = !DILocation(line: 3599, column: 16, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 3599, column: 13)
!8206 = !DILocation(line: 3599, column: 35, scope: !8205)
!8207 = !DILocation(line: 3600, column: 6, scope: !8205)
!8208 = !DILocation(line: 3600, column: 25, scope: !8205)
!8209 = !DILocation(line: 3600, column: 37, scope: !8205)
!8210 = !DILocation(line: 3600, column: 11, scope: !8205)
!8211 = !DILocation(line: 3601, column: 6, scope: !8205)
!8212 = !DILocation(line: 3601, column: 25, scope: !8205)
!8213 = !DILocation(line: 3601, column: 42, scope: !8205)
!8214 = !DILocation(line: 3601, column: 11, scope: !8205)
!8215 = !DILocation(line: 3602, column: 6, scope: !8205)
!8216 = !DILocation(line: 3602, column: 12, scope: !8205)
!8217 = !DILocation(line: 3602, column: 31, scope: !8205)
!8218 = !DILocation(line: 3603, column: 6, scope: !8205)
!8219 = !DILocation(line: 3603, column: 32, scope: !8205)
!8220 = !DILocation(line: 3603, column: 11, scope: !8205)
!8221 = !DILocation(line: 3599, column: 13, scope: !8199)
!8222 = !DILocalVariable(name: "reg", scope: !8223, file: !3, line: 3605, type: !883)
!8223 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 3604, column: 3)
!8224 = !DILocation(line: 3605, column: 9, scope: !8223)
!8225 = !DILocation(line: 3605, column: 16, scope: !8223)
!8226 = !DILocation(line: 3605, column: 15, scope: !8223)
!8227 = !DILocation(line: 3606, column: 32, scope: !8223)
!8228 = !DILocation(line: 3606, column: 31, scope: !8223)
!8229 = !DILocation(line: 3606, column: 56, scope: !8223)
!8230 = !DILocation(line: 3607, column: 45, scope: !8223)
!8231 = !DILocation(line: 3607, column: 51, scope: !8223)
!8232 = !DILocation(line: 3607, column: 67, scope: !8223)
!8233 = !DILocation(line: 3607, column: 22, scope: !8223)
!8234 = !DILocation(line: 3607, column: 20, scope: !8223)
!8235 = !DILocation(line: 3612, column: 3, scope: !8223)
!8236 = !DILocation(line: 3614, column: 24, scope: !8199)
!8237 = !DILocation(line: 3614, column: 30, scope: !8199)
!8238 = !DILocation(line: 3614, column: 8, scope: !8199)
!8239 = !DILocation(line: 3615, column: 6, scope: !8199)
!8240 = !DILocation(line: 3616, column: 2, scope: !8185)
!8241 = !DILocation(line: 3579, column: 63, scope: !8181)
!8242 = !DILocation(line: 3579, column: 7, scope: !8181)
!8243 = distinct !{!8243, !8183, !8244}
!8244 = !DILocation(line: 3616, column: 2, scope: !8177)
!8245 = !DILocation(line: 3618, column: 7, scope: !7974)
!8246 = !DILocation(line: 3618, column: 14, scope: !7974)
!8247 = !DILocalVariable(name: "next", scope: !8248, file: !3, line: 3620, type: !883)
!8248 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 3619, column: 2)
!8249 = !DILocation(line: 3620, column: 8, scope: !8248)
!8250 = !DILocation(line: 3620, column: 15, scope: !8248)
!8251 = !DILocation(line: 3621, column: 25, scope: !8248)
!8252 = !DILocation(line: 3621, column: 4, scope: !8248)
!8253 = !DILocation(line: 3622, column: 23, scope: !8248)
!8254 = !DILocation(line: 3622, column: 21, scope: !8248)
!8255 = distinct !{!8255, !8245, !8256}
!8256 = !DILocation(line: 3623, column: 2, scope: !7974)
!8257 = !DILocation(line: 3624, column: 7, scope: !7974)
!8258 = !DILocation(line: 3624, column: 14, scope: !7974)
!8259 = !DILocalVariable(name: "next", scope: !8260, file: !3, line: 3626, type: !883)
!8260 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 3625, column: 2)
!8261 = !DILocation(line: 3626, column: 8, scope: !8260)
!8262 = !DILocation(line: 3626, column: 15, scope: !8260)
!8263 = !DILocation(line: 3627, column: 25, scope: !8260)
!8264 = !DILocation(line: 3627, column: 4, scope: !8260)
!8265 = !DILocation(line: 3628, column: 21, scope: !8260)
!8266 = !DILocation(line: 3628, column: 19, scope: !8260)
!8267 = distinct !{!8267, !8257, !8268}
!8268 = !DILocation(line: 3629, column: 2, scope: !7974)
!8269 = !DILocation(line: 3631, column: 11, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 3631, column: 11)
!8271 = !DILocation(line: 3631, column: 22, scope: !8270)
!8272 = !DILocation(line: 3631, column: 11, scope: !7974)
!8273 = !DILocation(line: 3635, column: 35, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 3632, column: 2)
!8275 = !DILocation(line: 3635, column: 4, scope: !8274)
!8276 = !DILocation(line: 3635, column: 33, scope: !8274)
!8277 = !DILocation(line: 3636, column: 35, scope: !8274)
!8278 = !DILocation(line: 3636, column: 4, scope: !8274)
!8279 = !DILocation(line: 3637, column: 2, scope: !8274)
!8280 = !DILocation(line: 3638, column: 5, scope: !7974)
!8281 = distinct !{!8281, !7968, !8282}
!8282 = !DILocation(line: 3638, column: 5, scope: !7969)
!8283 = !DILocation(line: 3639, column: 1, scope: !7880)
!8284 = distinct !DISubprogram(name: "df_kill_notes", scope: !3, file: !3, line: 3112, type: !8285, scopeLine: 3113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8285 = !DISubroutineType(types: !8286)
!8286 = !{null, !883, !2023, !2023}
!8287 = !DILocalVariable(name: "insn", arg: 1, scope: !8284, file: !3, line: 3112, type: !883)
!8288 = !DILocation(line: 3112, column: 20, scope: !8284)
!8289 = !DILocalVariable(name: "old_dead_notes", arg: 2, scope: !8284, file: !3, line: 3112, type: !2023)
!8290 = !DILocation(line: 3112, column: 31, scope: !8284)
!8291 = !DILocalVariable(name: "old_unused_notes", arg: 3, scope: !8284, file: !3, line: 3112, type: !2023)
!8292 = !DILocation(line: 3112, column: 52, scope: !8284)
!8293 = !DILocalVariable(name: "pprev", scope: !8284, file: !3, line: 3114, type: !2023)
!8294 = !DILocation(line: 3114, column: 8, scope: !8284)
!8295 = !DILocation(line: 3114, column: 17, scope: !8284)
!8296 = !DILocalVariable(name: "link", scope: !8284, file: !3, line: 3115, type: !883)
!8297 = !DILocation(line: 3115, column: 7, scope: !8284)
!8298 = !DILocation(line: 3115, column: 15, scope: !8284)
!8299 = !DILocation(line: 3115, column: 14, scope: !8284)
!8300 = !DILocalVariable(name: "dead", scope: !8284, file: !3, line: 3116, type: !883)
!8301 = !DILocation(line: 3116, column: 7, scope: !8284)
!8302 = !DILocalVariable(name: "unused", scope: !8284, file: !3, line: 3117, type: !883)
!8303 = !DILocation(line: 3117, column: 7, scope: !8284)
!8304 = !DILocation(line: 3119, column: 3, scope: !8284)
!8305 = !DILocation(line: 3119, column: 10, scope: !8284)
!8306 = !DILocation(line: 3121, column: 15, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 3120, column: 5)
!8308 = !DILocation(line: 3121, column: 7, scope: !8307)
!8309 = !DILocation(line: 3126, column: 29, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 3126, column: 8)
!8311 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 3122, column: 2)
!8312 = !DILocation(line: 3126, column: 8, scope: !8310)
!8313 = !DILocation(line: 3126, column: 8, scope: !8311)
!8314 = !DILocation(line: 3128, column: 17, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 3127, column: 6)
!8316 = !DILocation(line: 3128, column: 14, scope: !8315)
!8317 = !DILocation(line: 3129, column: 16, scope: !8315)
!8318 = !DILocation(line: 3129, column: 15, scope: !8315)
!8319 = !DILocation(line: 3129, column: 13, scope: !8315)
!8320 = !DILocation(line: 3130, column: 6, scope: !8315)
!8321 = !DILocalVariable(name: "next", scope: !8322, file: !3, line: 3133, type: !883)
!8322 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 3132, column: 6)
!8323 = !DILocation(line: 3133, column: 12, scope: !8322)
!8324 = !DILocation(line: 3133, column: 19, scope: !8322)
!8325 = !DILocation(line: 3137, column: 25, scope: !8322)
!8326 = !DILocation(line: 3137, column: 8, scope: !8322)
!8327 = !DILocation(line: 3137, column: 23, scope: !8322)
!8328 = !DILocation(line: 3138, column: 15, scope: !8322)
!8329 = !DILocation(line: 3138, column: 13, scope: !8322)
!8330 = !DILocation(line: 3139, column: 24, scope: !8322)
!8331 = !DILocation(line: 3139, column: 22, scope: !8322)
!8332 = !DILocation(line: 3139, column: 9, scope: !8322)
!8333 = !DILocation(line: 3139, column: 15, scope: !8322)
!8334 = !DILocation(line: 3141, column: 4, scope: !8311)
!8335 = !DILocation(line: 3146, column: 29, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 3146, column: 8)
!8337 = !DILocation(line: 3146, column: 8, scope: !8336)
!8338 = !DILocation(line: 3146, column: 8, scope: !8311)
!8339 = !DILocation(line: 3148, column: 17, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 3147, column: 6)
!8341 = !DILocation(line: 3148, column: 14, scope: !8340)
!8342 = !DILocation(line: 3149, column: 16, scope: !8340)
!8343 = !DILocation(line: 3149, column: 15, scope: !8340)
!8344 = !DILocation(line: 3149, column: 13, scope: !8340)
!8345 = !DILocation(line: 3150, column: 6, scope: !8340)
!8346 = !DILocalVariable(name: "next", scope: !8347, file: !3, line: 3153, type: !883)
!8347 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 3152, column: 6)
!8348 = !DILocation(line: 3153, column: 12, scope: !8347)
!8349 = !DILocation(line: 3153, column: 19, scope: !8347)
!8350 = !DILocation(line: 3157, column: 25, scope: !8347)
!8351 = !DILocation(line: 3157, column: 8, scope: !8347)
!8352 = !DILocation(line: 3157, column: 23, scope: !8347)
!8353 = !DILocation(line: 3158, column: 17, scope: !8347)
!8354 = !DILocation(line: 3158, column: 15, scope: !8347)
!8355 = !DILocation(line: 3159, column: 24, scope: !8347)
!8356 = !DILocation(line: 3159, column: 22, scope: !8347)
!8357 = !DILocation(line: 3159, column: 9, scope: !8347)
!8358 = !DILocation(line: 3159, column: 15, scope: !8347)
!8359 = !DILocation(line: 3161, column: 4, scope: !8311)
!8360 = !DILocation(line: 3164, column: 13, scope: !8311)
!8361 = !DILocation(line: 3164, column: 10, scope: !8311)
!8362 = !DILocation(line: 3165, column: 12, scope: !8311)
!8363 = !DILocation(line: 3165, column: 11, scope: !8311)
!8364 = !DILocation(line: 3165, column: 9, scope: !8311)
!8365 = !DILocation(line: 3166, column: 4, scope: !8311)
!8366 = distinct !{!8366, !8304, !8367}
!8367 = !DILocation(line: 3168, column: 5, scope: !8284)
!8368 = !DILocation(line: 3170, column: 21, scope: !8284)
!8369 = !DILocation(line: 3170, column: 4, scope: !8284)
!8370 = !DILocation(line: 3170, column: 19, scope: !8284)
!8371 = !DILocation(line: 3171, column: 23, scope: !8284)
!8372 = !DILocation(line: 3171, column: 4, scope: !8284)
!8373 = !DILocation(line: 3171, column: 21, scope: !8284)
!8374 = !DILocation(line: 3172, column: 1, scope: !8284)
!8375 = distinct !DISubprogram(name: "df_ignore_stack_reg", scope: !3, file: !3, line: 3094, type: !2188, scopeLine: 3095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8376 = !DILocalVariable(name: "regno", arg: 1, scope: !8375, file: !3, line: 3094, type: !855)
!8377 = !DILocation(line: 3094, column: 26, scope: !8375)
!8378 = !DILocation(line: 3096, column: 10, scope: !8375)
!8379 = !DILocation(line: 3097, column: 5, scope: !8375)
!8380 = !DILocation(line: 3097, column: 8, scope: !8375)
!8381 = !DILocation(line: 0, scope: !8375)
!8382 = !DILocation(line: 3096, column: 3, scope: !8375)
!8383 = distinct !DISubprogram(name: "df_set_unused_notes_for_mw", scope: !3, file: !3, line: 3242, type: !8384, scopeLine: 3245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8384 = !DISubroutineType(types: !8385)
!8385 = !{!883, !883, !883, !2003, !802, !802, !802}
!8386 = !DILocalVariable(name: "insn", arg: 1, scope: !8383, file: !3, line: 3242, type: !883)
!8387 = !DILocation(line: 3242, column: 33, scope: !8383)
!8388 = !DILocalVariable(name: "old", arg: 2, scope: !8383, file: !3, line: 3242, type: !883)
!8389 = !DILocation(line: 3242, column: 43, scope: !8383)
!8390 = !DILocalVariable(name: "mws", arg: 3, scope: !8383, file: !3, line: 3242, type: !2003)
!8391 = !DILocation(line: 3242, column: 70, scope: !8383)
!8392 = !DILocalVariable(name: "live", arg: 4, scope: !8383, file: !3, line: 3243, type: !802)
!8393 = !DILocation(line: 3243, column: 15, scope: !8383)
!8394 = !DILocalVariable(name: "do_not_gen", arg: 5, scope: !8383, file: !3, line: 3243, type: !802)
!8395 = !DILocation(line: 3243, column: 28, scope: !8383)
!8396 = !DILocalVariable(name: "artificial_uses", arg: 6, scope: !8383, file: !3, line: 3244, type: !802)
!8397 = !DILocation(line: 3244, column: 15, scope: !8383)
!8398 = !DILocalVariable(name: "r", scope: !8383, file: !3, line: 3246, type: !7)
!8399 = !DILocation(line: 3246, column: 16, scope: !8383)
!8400 = !DILocation(line: 3254, column: 33, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 3254, column: 7)
!8402 = !DILocation(line: 3254, column: 38, scope: !8401)
!8403 = !DILocation(line: 3254, column: 44, scope: !8401)
!8404 = !DILocation(line: 3254, column: 7, scope: !8401)
!8405 = !DILocation(line: 3254, column: 7, scope: !8383)
!8406 = !DILocalVariable(name: "regno", scope: !8407, file: !3, line: 3256, type: !7)
!8407 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 3255, column: 5)
!8408 = !DILocation(line: 3256, column: 20, scope: !8407)
!8409 = !DILocation(line: 3256, column: 28, scope: !8407)
!8410 = !DILocation(line: 3256, column: 33, scope: !8407)
!8411 = !DILocation(line: 3257, column: 38, scope: !8407)
!8412 = !DILocation(line: 3257, column: 44, scope: !8407)
!8413 = !DILocation(line: 3257, column: 49, scope: !8407)
!8414 = !DILocation(line: 3257, column: 54, scope: !8407)
!8415 = !DILocation(line: 3257, column: 13, scope: !8407)
!8416 = !DILocation(line: 3257, column: 11, scope: !8407)
!8417 = !DILocation(line: 3262, column: 23, scope: !8407)
!8418 = !DILocation(line: 3262, column: 35, scope: !8407)
!8419 = !DILocation(line: 3262, column: 7, scope: !8407)
!8420 = !DILocation(line: 3264, column: 5, scope: !8407)
!8421 = !DILocation(line: 3266, column: 14, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 3266, column: 5)
!8423 = !DILocation(line: 3266, column: 19, scope: !8422)
!8424 = !DILocation(line: 3266, column: 12, scope: !8422)
!8425 = !DILocation(line: 3266, column: 10, scope: !8422)
!8426 = !DILocation(line: 3266, column: 32, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 3266, column: 5)
!8428 = !DILocation(line: 3266, column: 37, scope: !8427)
!8429 = !DILocation(line: 3266, column: 42, scope: !8427)
!8430 = !DILocation(line: 3266, column: 34, scope: !8427)
!8431 = !DILocation(line: 3266, column: 5, scope: !8422)
!8432 = !DILocation(line: 3268, column: 21, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 3268, column: 6)
!8434 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 3267, column: 7)
!8435 = !DILocation(line: 3268, column: 27, scope: !8433)
!8436 = !DILocation(line: 3268, column: 7, scope: !8433)
!8437 = !DILocation(line: 3269, column: 6, scope: !8433)
!8438 = !DILocation(line: 3269, column: 24, scope: !8433)
!8439 = !DILocation(line: 3269, column: 41, scope: !8433)
!8440 = !DILocation(line: 3269, column: 10, scope: !8433)
!8441 = !DILocation(line: 3268, column: 6, scope: !8434)
!8442 = !DILocation(line: 3271, column: 37, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 3270, column: 4)
!8444 = !DILocation(line: 3271, column: 43, scope: !8443)
!8445 = !DILocation(line: 3271, column: 48, scope: !8443)
!8446 = !DILocation(line: 3271, column: 62, scope: !8443)
!8447 = !DILocation(line: 3271, column: 12, scope: !8443)
!8448 = !DILocation(line: 3271, column: 10, scope: !8443)
!8449 = !DILocation(line: 3275, column: 4, scope: !8443)
!8450 = !DILocation(line: 3276, column: 18, scope: !8434)
!8451 = !DILocation(line: 3276, column: 30, scope: !8434)
!8452 = !DILocation(line: 3276, column: 2, scope: !8434)
!8453 = !DILocation(line: 3277, column: 7, scope: !8434)
!8454 = !DILocation(line: 3266, column: 54, scope: !8427)
!8455 = !DILocation(line: 3266, column: 5, scope: !8427)
!8456 = distinct !{!8456, !8431, !8457}
!8457 = !DILocation(line: 3277, column: 7, scope: !8422)
!8458 = !DILocation(line: 3278, column: 10, scope: !8383)
!8459 = !DILocation(line: 3278, column: 3, scope: !8383)
!8460 = distinct !DISubprogram(name: "df_create_unused_note", scope: !3, file: !3, line: 3377, type: !8461, scopeLine: 3379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8461 = !DISubroutineType(types: !8462)
!8462 = !{!883, !883, !883, !872, !802, !802}
!8463 = !DILocalVariable(name: "insn", arg: 1, scope: !8460, file: !3, line: 3377, type: !883)
!8464 = !DILocation(line: 3377, column: 28, scope: !8460)
!8465 = !DILocalVariable(name: "old", arg: 2, scope: !8460, file: !3, line: 3377, type: !883)
!8466 = !DILocation(line: 3377, column: 38, scope: !8460)
!8467 = !DILocalVariable(name: "def", arg: 3, scope: !8460, file: !3, line: 3377, type: !872)
!8468 = !DILocation(line: 3377, column: 50, scope: !8460)
!8469 = !DILocalVariable(name: "live", arg: 4, scope: !8460, file: !3, line: 3378, type: !802)
!8470 = !DILocation(line: 3378, column: 17, scope: !8460)
!8471 = !DILocalVariable(name: "artificial_uses", arg: 5, scope: !8460, file: !3, line: 3378, type: !802)
!8472 = !DILocation(line: 3378, column: 30, scope: !8460)
!8473 = !DILocalVariable(name: "dregno", scope: !8460, file: !3, line: 3380, type: !7)
!8474 = !DILocation(line: 3380, column: 16, scope: !8460)
!8475 = !DILocation(line: 3380, column: 25, scope: !8460)
!8476 = !DILocation(line: 3390, column: 23, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 3390, column: 7)
!8478 = !DILocation(line: 3390, column: 29, scope: !8477)
!8479 = !DILocation(line: 3390, column: 9, scope: !8477)
!8480 = !DILocation(line: 3391, column: 2, scope: !8477)
!8481 = !DILocation(line: 3391, column: 6, scope: !8477)
!8482 = !DILocation(line: 3391, column: 25, scope: !8477)
!8483 = !DILocation(line: 3392, column: 2, scope: !8477)
!8484 = !DILocation(line: 3392, column: 19, scope: !8477)
!8485 = !DILocation(line: 3392, column: 36, scope: !8477)
!8486 = !DILocation(line: 3392, column: 5, scope: !8477)
!8487 = !DILocation(line: 3393, column: 2, scope: !8477)
!8488 = !DILocation(line: 3393, column: 26, scope: !8477)
!8489 = !DILocation(line: 3393, column: 5, scope: !8477)
!8490 = !DILocation(line: 3390, column: 7, scope: !8460)
!8491 = !DILocalVariable(name: "reg", scope: !8492, file: !3, line: 3395, type: !883)
!8492 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 3394, column: 5)
!8493 = !DILocation(line: 3395, column: 11, scope: !8492)
!8494 = !DILocation(line: 3395, column: 18, scope: !8492)
!8495 = !DILocation(line: 3395, column: 17, scope: !8492)
!8496 = !DILocation(line: 3396, column: 20, scope: !8492)
!8497 = !DILocation(line: 3396, column: 19, scope: !8492)
!8498 = !DILocation(line: 3396, column: 43, scope: !8492)
!8499 = !DILocation(line: 3397, column: 38, scope: !8492)
!8500 = !DILocation(line: 3397, column: 44, scope: !8492)
!8501 = !DILocation(line: 3397, column: 49, scope: !8492)
!8502 = !DILocation(line: 3397, column: 13, scope: !8492)
!8503 = !DILocation(line: 3397, column: 11, scope: !8492)
!8504 = !DILocation(line: 3401, column: 5, scope: !8492)
!8505 = !DILocation(line: 3403, column: 10, scope: !8460)
!8506 = !DILocation(line: 3403, column: 3, scope: !8460)
!8507 = distinct !DISubprogram(name: "df_set_dead_notes_for_mw", scope: !3, file: !3, line: 3316, type: !8508, scopeLine: 3319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8508 = !DISubroutineType(types: !8509)
!8509 = !{!883, !883, !883, !2003, !802, !802, !802, !8510}
!8510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!8511 = !DILocalVariable(name: "insn", arg: 1, scope: !8507, file: !3, line: 3316, type: !883)
!8512 = !DILocation(line: 3316, column: 31, scope: !8507)
!8513 = !DILocalVariable(name: "old", arg: 2, scope: !8507, file: !3, line: 3316, type: !883)
!8514 = !DILocation(line: 3316, column: 41, scope: !8507)
!8515 = !DILocalVariable(name: "mws", arg: 3, scope: !8507, file: !3, line: 3316, type: !2003)
!8516 = !DILocation(line: 3316, column: 68, scope: !8507)
!8517 = !DILocalVariable(name: "live", arg: 4, scope: !8507, file: !3, line: 3317, type: !802)
!8518 = !DILocation(line: 3317, column: 13, scope: !8507)
!8519 = !DILocalVariable(name: "do_not_gen", arg: 5, scope: !8507, file: !3, line: 3317, type: !802)
!8520 = !DILocation(line: 3317, column: 26, scope: !8507)
!8521 = !DILocalVariable(name: "artificial_uses", arg: 6, scope: !8507, file: !3, line: 3318, type: !802)
!8522 = !DILocation(line: 3318, column: 13, scope: !8507)
!8523 = !DILocalVariable(name: "added_notes_p", arg: 7, scope: !8507, file: !3, line: 3318, type: !8510)
!8524 = !DILocation(line: 3318, column: 36, scope: !8507)
!8525 = !DILocalVariable(name: "r", scope: !8507, file: !3, line: 3320, type: !7)
!8526 = !DILocation(line: 3320, column: 16, scope: !8507)
!8527 = !DILocalVariable(name: "is_debug", scope: !8507, file: !3, line: 3321, type: !1052)
!8528 = !DILocation(line: 3321, column: 8, scope: !8507)
!8529 = !DILocation(line: 3321, column: 20, scope: !8507)
!8530 = !DILocation(line: 3321, column: 19, scope: !8507)
!8531 = !DILocation(line: 3323, column: 4, scope: !8507)
!8532 = !DILocation(line: 3323, column: 18, scope: !8507)
!8533 = !DILocation(line: 3338, column: 31, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8507, file: !3, line: 3338, column: 7)
!8535 = !DILocation(line: 3338, column: 36, scope: !8534)
!8536 = !DILocation(line: 3338, column: 42, scope: !8534)
!8537 = !DILocation(line: 3338, column: 59, scope: !8534)
!8538 = !DILocation(line: 3338, column: 7, scope: !8534)
!8539 = !DILocation(line: 3338, column: 7, scope: !8507)
!8540 = !DILocation(line: 3341, column: 11, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 3341, column: 11)
!8542 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 3339, column: 5)
!8543 = !DILocation(line: 3341, column: 11, scope: !8542)
!8544 = !DILocation(line: 3343, column: 5, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 3342, column: 2)
!8546 = !DILocation(line: 3343, column: 19, scope: !8545)
!8547 = !DILocation(line: 3344, column: 11, scope: !8545)
!8548 = !DILocation(line: 3344, column: 4, scope: !8545)
!8549 = !DILocation(line: 3346, column: 36, scope: !8542)
!8550 = !DILocation(line: 3346, column: 42, scope: !8542)
!8551 = !DILocation(line: 3346, column: 47, scope: !8542)
!8552 = !DILocation(line: 3346, column: 52, scope: !8542)
!8553 = !DILocation(line: 3346, column: 13, scope: !8542)
!8554 = !DILocation(line: 3346, column: 11, scope: !8542)
!8555 = !DILocation(line: 3350, column: 5, scope: !8542)
!8556 = !DILocation(line: 3353, column: 16, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 3353, column: 7)
!8558 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 3352, column: 5)
!8559 = !DILocation(line: 3353, column: 21, scope: !8557)
!8560 = !DILocation(line: 3353, column: 14, scope: !8557)
!8561 = !DILocation(line: 3353, column: 12, scope: !8557)
!8562 = !DILocation(line: 3353, column: 34, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 3353, column: 7)
!8564 = !DILocation(line: 3353, column: 39, scope: !8563)
!8565 = !DILocation(line: 3353, column: 44, scope: !8563)
!8566 = !DILocation(line: 3353, column: 36, scope: !8563)
!8567 = !DILocation(line: 3353, column: 7, scope: !8557)
!8568 = !DILocation(line: 3354, column: 21, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 3354, column: 6)
!8570 = !DILocation(line: 3354, column: 27, scope: !8569)
!8571 = !DILocation(line: 3354, column: 7, scope: !8569)
!8572 = !DILocation(line: 3355, column: 6, scope: !8569)
!8573 = !DILocation(line: 3355, column: 24, scope: !8569)
!8574 = !DILocation(line: 3355, column: 41, scope: !8569)
!8575 = !DILocation(line: 3355, column: 10, scope: !8569)
!8576 = !DILocation(line: 3356, column: 6, scope: !8569)
!8577 = !DILocation(line: 3356, column: 24, scope: !8569)
!8578 = !DILocation(line: 3356, column: 36, scope: !8569)
!8579 = !DILocation(line: 3356, column: 10, scope: !8569)
!8580 = !DILocation(line: 3354, column: 6, scope: !8563)
!8581 = !DILocation(line: 3358, column: 10, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 3358, column: 10)
!8583 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 3357, column: 4)
!8584 = !DILocation(line: 3358, column: 10, scope: !8583)
!8585 = !DILocation(line: 3360, column: 4, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 3359, column: 8)
!8587 = !DILocation(line: 3360, column: 18, scope: !8586)
!8588 = !DILocation(line: 3361, column: 10, scope: !8586)
!8589 = !DILocation(line: 3361, column: 3, scope: !8586)
!8590 = !DILocation(line: 3363, column: 35, scope: !8583)
!8591 = !DILocation(line: 3363, column: 41, scope: !8583)
!8592 = !DILocation(line: 3363, column: 46, scope: !8583)
!8593 = !DILocation(line: 3363, column: 60, scope: !8583)
!8594 = !DILocation(line: 3363, column: 12, scope: !8583)
!8595 = !DILocation(line: 3363, column: 10, scope: !8583)
!8596 = !DILocation(line: 3367, column: 4, scope: !8583)
!8597 = !DILocation(line: 3356, column: 37, scope: !8569)
!8598 = !DILocation(line: 3353, column: 56, scope: !8563)
!8599 = !DILocation(line: 3353, column: 7, scope: !8563)
!8600 = distinct !{!8600, !8567, !8601}
!8601 = !DILocation(line: 3367, column: 4, scope: !8557)
!8602 = !DILocation(line: 3369, column: 10, scope: !8507)
!8603 = !DILocation(line: 3369, column: 3, scope: !8507)
!8604 = !DILocation(line: 3370, column: 1, scope: !8507)
!8605 = distinct !DISubprogram(name: "df_set_note", scope: !3, file: !3, line: 3179, type: !8606, scopeLine: 3180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8606 = !DISubroutineType(types: !8607)
!8607 = !{!883, !752, !883, !883, !883}
!8608 = !DILocalVariable(name: "note_type", arg: 1, scope: !8605, file: !3, line: 3179, type: !752)
!8609 = !DILocation(line: 3179, column: 28, scope: !8605)
!8610 = !DILocalVariable(name: "insn", arg: 2, scope: !8605, file: !3, line: 3179, type: !883)
!8611 = !DILocation(line: 3179, column: 43, scope: !8605)
!8612 = !DILocalVariable(name: "old", arg: 3, scope: !8605, file: !3, line: 3179, type: !883)
!8613 = !DILocation(line: 3179, column: 53, scope: !8605)
!8614 = !DILocalVariable(name: "reg", arg: 4, scope: !8605, file: !3, line: 3179, type: !883)
!8615 = !DILocation(line: 3179, column: 62, scope: !8605)
!8616 = !DILocalVariable(name: "curr", scope: !8605, file: !3, line: 3181, type: !883)
!8617 = !DILocation(line: 3181, column: 7, scope: !8605)
!8618 = !DILocation(line: 3181, column: 14, scope: !8605)
!8619 = !DILocalVariable(name: "prev", scope: !8605, file: !3, line: 3182, type: !883)
!8620 = !DILocation(line: 3182, column: 7, scope: !8605)
!8621 = !DILocation(line: 3184, column: 3, scope: !8605)
!8622 = !DILocation(line: 3186, column: 3, scope: !8605)
!8623 = !DILocation(line: 3186, column: 10, scope: !8605)
!8624 = !DILocation(line: 3187, column: 9, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 3187, column: 9)
!8626 = !DILocation(line: 3187, column: 27, scope: !8625)
!8627 = !DILocation(line: 3187, column: 24, scope: !8625)
!8628 = !DILocation(line: 3187, column: 9, scope: !8605)
!8629 = !DILocation(line: 3189, column: 6, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 3189, column: 6)
!8631 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 3188, column: 7)
!8632 = !DILocation(line: 3189, column: 6, scope: !8631)
!8633 = !DILocation(line: 3190, column: 21, scope: !8630)
!8634 = !DILocation(line: 3190, column: 4, scope: !8630)
!8635 = !DILocation(line: 3190, column: 19, scope: !8630)
!8636 = !DILocation(line: 3192, column: 10, scope: !8630)
!8637 = !DILocation(line: 3192, column: 8, scope: !8630)
!8638 = !DILocation(line: 3193, column: 19, scope: !8631)
!8639 = !DILocation(line: 3193, column: 2, scope: !8631)
!8640 = !DILocation(line: 3193, column: 17, scope: !8631)
!8641 = !DILocation(line: 3194, column: 21, scope: !8631)
!8642 = !DILocation(line: 3194, column: 2, scope: !8631)
!8643 = !DILocation(line: 3194, column: 19, scope: !8631)
!8644 = !DILocation(line: 3195, column: 9, scope: !8631)
!8645 = !DILocation(line: 3195, column: 2, scope: !8631)
!8646 = !DILocation(line: 3199, column: 9, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 3198, column: 7)
!8648 = !DILocation(line: 3199, column: 7, scope: !8647)
!8649 = !DILocation(line: 3200, column: 9, scope: !8647)
!8650 = !DILocation(line: 3200, column: 7, scope: !8647)
!8651 = distinct !{!8651, !8622, !8652}
!8652 = !DILocation(line: 3201, column: 7, scope: !8605)
!8653 = !DILocation(line: 3204, column: 17, scope: !8605)
!8654 = !DILocation(line: 3204, column: 23, scope: !8605)
!8655 = !DILocation(line: 3204, column: 34, scope: !8605)
!8656 = !DILocation(line: 3204, column: 3, scope: !8605)
!8657 = !DILocation(line: 3205, column: 10, scope: !8605)
!8658 = !DILocation(line: 3205, column: 3, scope: !8605)
!8659 = !DILocation(line: 3206, column: 1, scope: !8605)
!8660 = distinct !DISubprogram(name: "df_whole_mw_reg_unused_p", scope: !3, file: !3, line: 3214, type: !8661, scopeLine: 3216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8661 = !DISubroutineType(types: !8662)
!8662 = !{!1052, !2003, !802, !802}
!8663 = !DILocalVariable(name: "mws", arg: 1, scope: !8660, file: !3, line: 3214, type: !2003)
!8664 = !DILocation(line: 3214, column: 49, scope: !8660)
!8665 = !DILocalVariable(name: "live", arg: 2, scope: !8660, file: !3, line: 3215, type: !802)
!8666 = !DILocation(line: 3215, column: 13, scope: !8660)
!8667 = !DILocalVariable(name: "artificial_uses", arg: 3, scope: !8660, file: !3, line: 3215, type: !802)
!8668 = !DILocation(line: 3215, column: 26, scope: !8660)
!8669 = !DILocalVariable(name: "r", scope: !8660, file: !3, line: 3217, type: !7)
!8670 = !DILocation(line: 3217, column: 16, scope: !8660)
!8671 = !DILocation(line: 3221, column: 7, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 3221, column: 7)
!8673 = !DILocation(line: 3221, column: 12, scope: !8672)
!8674 = !DILocation(line: 3221, column: 18, scope: !8672)
!8675 = !DILocation(line: 3221, column: 7, scope: !8660)
!8676 = !DILocation(line: 3222, column: 5, scope: !8672)
!8677 = !DILocation(line: 3225, column: 12, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 3225, column: 3)
!8679 = !DILocation(line: 3225, column: 17, scope: !8678)
!8680 = !DILocation(line: 3225, column: 10, scope: !8678)
!8681 = !DILocation(line: 3225, column: 8, scope: !8678)
!8682 = !DILocation(line: 3225, column: 30, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8678, file: !3, line: 3225, column: 3)
!8684 = !DILocation(line: 3225, column: 35, scope: !8683)
!8685 = !DILocation(line: 3225, column: 40, scope: !8683)
!8686 = !DILocation(line: 3225, column: 32, scope: !8683)
!8687 = !DILocation(line: 3225, column: 3, scope: !8678)
!8688 = !DILocation(line: 3226, column: 23, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8683, file: !3, line: 3226, column: 9)
!8690 = !DILocation(line: 3226, column: 29, scope: !8689)
!8691 = !DILocation(line: 3226, column: 9, scope: !8689)
!8692 = !DILocation(line: 3227, column: 2, scope: !8689)
!8693 = !DILocation(line: 3227, column: 19, scope: !8689)
!8694 = !DILocation(line: 3227, column: 36, scope: !8689)
!8695 = !DILocation(line: 3227, column: 5, scope: !8689)
!8696 = !DILocation(line: 3226, column: 9, scope: !8683)
!8697 = !DILocation(line: 3228, column: 7, scope: !8689)
!8698 = !DILocation(line: 3227, column: 37, scope: !8689)
!8699 = !DILocation(line: 3225, column: 52, scope: !8683)
!8700 = !DILocation(line: 3225, column: 3, scope: !8683)
!8701 = distinct !{!8701, !8687, !8702}
!8702 = !DILocation(line: 3228, column: 14, scope: !8678)
!8703 = !DILocation(line: 3230, column: 3, scope: !8660)
!8704 = !DILocation(line: 3231, column: 3, scope: !8660)
!8705 = !DILocation(line: 3232, column: 1, scope: !8660)
!8706 = distinct !DISubprogram(name: "df_whole_mw_reg_dead_p", scope: !3, file: !3, line: 3288, type: !8707, scopeLine: 3291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8707 = !DISubroutineType(types: !8708)
!8708 = !{!1052, !2003, !802, !802, !802}
!8709 = !DILocalVariable(name: "mws", arg: 1, scope: !8706, file: !3, line: 3288, type: !2003)
!8710 = !DILocation(line: 3288, column: 47, scope: !8706)
!8711 = !DILocalVariable(name: "live", arg: 2, scope: !8706, file: !3, line: 3289, type: !802)
!8712 = !DILocation(line: 3289, column: 11, scope: !8706)
!8713 = !DILocalVariable(name: "artificial_uses", arg: 3, scope: !8706, file: !3, line: 3289, type: !802)
!8714 = !DILocation(line: 3289, column: 24, scope: !8706)
!8715 = !DILocalVariable(name: "do_not_gen", arg: 4, scope: !8706, file: !3, line: 3290, type: !802)
!8716 = !DILocation(line: 3290, column: 11, scope: !8706)
!8717 = !DILocalVariable(name: "r", scope: !8706, file: !3, line: 3292, type: !7)
!8718 = !DILocation(line: 3292, column: 16, scope: !8706)
!8719 = !DILocation(line: 3296, column: 7, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 3296, column: 7)
!8721 = !DILocation(line: 3296, column: 12, scope: !8720)
!8722 = !DILocation(line: 3296, column: 18, scope: !8720)
!8723 = !DILocation(line: 3296, column: 7, scope: !8706)
!8724 = !DILocation(line: 3297, column: 5, scope: !8720)
!8725 = !DILocation(line: 3300, column: 12, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 3300, column: 3)
!8727 = !DILocation(line: 3300, column: 17, scope: !8726)
!8728 = !DILocation(line: 3300, column: 10, scope: !8726)
!8729 = !DILocation(line: 3300, column: 8, scope: !8726)
!8730 = !DILocation(line: 3300, column: 30, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 3300, column: 3)
!8732 = !DILocation(line: 3300, column: 35, scope: !8731)
!8733 = !DILocation(line: 3300, column: 40, scope: !8731)
!8734 = !DILocation(line: 3300, column: 32, scope: !8731)
!8735 = !DILocation(line: 3300, column: 3, scope: !8726)
!8736 = !DILocation(line: 3301, column: 23, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 3301, column: 9)
!8738 = !DILocation(line: 3301, column: 29, scope: !8737)
!8739 = !DILocation(line: 3301, column: 9, scope: !8737)
!8740 = !DILocation(line: 3302, column: 2, scope: !8737)
!8741 = !DILocation(line: 3302, column: 19, scope: !8737)
!8742 = !DILocation(line: 3302, column: 36, scope: !8737)
!8743 = !DILocation(line: 3302, column: 5, scope: !8737)
!8744 = !DILocation(line: 3303, column: 2, scope: !8737)
!8745 = !DILocation(line: 3303, column: 19, scope: !8737)
!8746 = !DILocation(line: 3303, column: 31, scope: !8737)
!8747 = !DILocation(line: 3303, column: 5, scope: !8737)
!8748 = !DILocation(line: 3301, column: 9, scope: !8731)
!8749 = !DILocation(line: 3304, column: 7, scope: !8737)
!8750 = !DILocation(line: 3303, column: 32, scope: !8737)
!8751 = !DILocation(line: 3300, column: 52, scope: !8731)
!8752 = !DILocation(line: 3300, column: 3, scope: !8731)
!8753 = distinct !{!8753, !8735, !8754}
!8754 = !DILocation(line: 3304, column: 14, scope: !8726)
!8755 = !DILocation(line: 3306, column: 3, scope: !8706)
!8756 = !DILocation(line: 3307, column: 3, scope: !8706)
!8757 = !DILocation(line: 3308, column: 1, scope: !8706)
!8758 = distinct !DISubprogram(name: "bb_has_eh_pred", scope: !142, file: !142, line: 973, type: !8759, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8759 = !DISubroutineType(types: !8760)
!8760 = !{!1052, !1357}
!8761 = !DILocalVariable(name: "bb", arg: 1, scope: !8758, file: !142, line: 973, type: !1357)
!8762 = !DILocation(line: 973, column: 29, scope: !8758)
!8763 = !DILocalVariable(name: "e", scope: !8758, file: !142, line: 975, type: !1374)
!8764 = !DILocation(line: 975, column: 8, scope: !8758)
!8765 = !DILocalVariable(name: "ei", scope: !8758, file: !142, line: 976, type: !2430)
!8766 = !DILocation(line: 976, column: 17, scope: !8758)
!8767 = !DILocation(line: 978, column: 3, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8758, file: !142, line: 978, column: 3)
!8769 = !DILocation(line: 978, column: 3, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8768, file: !142, line: 978, column: 3)
!8771 = !DILocation(line: 980, column: 11, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8773, file: !142, line: 980, column: 11)
!8773 = distinct !DILexicalBlock(scope: !8770, file: !142, line: 979, column: 5)
!8774 = !DILocation(line: 980, column: 14, scope: !8772)
!8775 = !DILocation(line: 980, column: 20, scope: !8772)
!8776 = !DILocation(line: 980, column: 11, scope: !8773)
!8777 = !DILocation(line: 981, column: 2, scope: !8772)
!8778 = !DILocation(line: 982, column: 5, scope: !8773)
!8779 = distinct !{!8779, !8767, !8780}
!8780 = !DILocation(line: 982, column: 5, scope: !8768)
!8781 = !DILocation(line: 983, column: 3, scope: !8758)
!8782 = !DILocation(line: 984, column: 1, scope: !8758)
!8783 = distinct !DISubprogram(name: "df_md_alloc", scope: !3, file: !3, line: 4057, type: !2121, scopeLine: 4058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8784 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !8783, file: !3, line: 4057, type: !802)
!8785 = !DILocation(line: 4057, column: 21, scope: !8783)
!8786 = !DILocalVariable(name: "bb_index", scope: !8783, file: !3, line: 4059, type: !7)
!8787 = !DILocation(line: 4059, column: 16, scope: !8783)
!8788 = !DILocalVariable(name: "bi", scope: !8783, file: !3, line: 4060, type: !4201)
!8789 = !DILocation(line: 4060, column: 19, scope: !8783)
!8790 = !DILocation(line: 4062, column: 8, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 4062, column: 7)
!8792 = !DILocation(line: 4062, column: 15, scope: !8791)
!8793 = !DILocation(line: 4062, column: 7, scope: !8783)
!8794 = !DILocation(line: 4063, column: 25, scope: !8791)
!8795 = !DILocation(line: 4063, column: 5, scope: !8791)
!8796 = !DILocation(line: 4063, column: 12, scope: !8791)
!8797 = !DILocation(line: 4063, column: 23, scope: !8791)
!8798 = !DILocation(line: 4066, column: 20, scope: !8783)
!8799 = !DILocation(line: 4066, column: 3, scope: !8783)
!8800 = !DILocation(line: 4067, column: 19, scope: !8783)
!8801 = !DILocation(line: 4067, column: 17, scope: !8783)
!8802 = !DILocation(line: 4069, column: 3, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 4069, column: 3)
!8804 = !DILocation(line: 4069, column: 3, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8803, file: !3, line: 4069, column: 3)
!8806 = !DILocalVariable(name: "bb_info", scope: !8807, file: !3, line: 4071, type: !2099)
!8807 = distinct !DILexicalBlock(scope: !8805, file: !3, line: 4070, column: 5)
!8808 = !DILocation(line: 4071, column: 29, scope: !8807)
!8809 = !DILocation(line: 4071, column: 58, scope: !8807)
!8810 = !DILocation(line: 4071, column: 39, scope: !8807)
!8811 = !DILocation(line: 4072, column: 11, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8807, file: !3, line: 4072, column: 11)
!8813 = !DILocation(line: 4072, column: 11, scope: !8807)
!8814 = !DILocation(line: 4074, column: 25, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 4073, column: 9)
!8816 = !DILocation(line: 4074, column: 34, scope: !8815)
!8817 = !DILocation(line: 4074, column: 11, scope: !8815)
!8818 = !DILocation(line: 4075, column: 25, scope: !8815)
!8819 = !DILocation(line: 4075, column: 34, scope: !8815)
!8820 = !DILocation(line: 4075, column: 11, scope: !8815)
!8821 = !DILocation(line: 4076, column: 25, scope: !8815)
!8822 = !DILocation(line: 4076, column: 34, scope: !8815)
!8823 = !DILocation(line: 4076, column: 11, scope: !8815)
!8824 = !DILocation(line: 4077, column: 25, scope: !8815)
!8825 = !DILocation(line: 4077, column: 34, scope: !8815)
!8826 = !DILocation(line: 4077, column: 11, scope: !8815)
!8827 = !DILocation(line: 4078, column: 25, scope: !8815)
!8828 = !DILocation(line: 4078, column: 34, scope: !8815)
!8829 = !DILocation(line: 4078, column: 11, scope: !8815)
!8830 = !DILocation(line: 4079, column: 9, scope: !8815)
!8831 = !DILocation(line: 4082, column: 58, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 4081, column: 9)
!8833 = !DILocation(line: 4082, column: 65, scope: !8832)
!8834 = !DILocation(line: 4082, column: 46, scope: !8832)
!8835 = !DILocation(line: 4082, column: 21, scope: !8832)
!8836 = !DILocation(line: 4082, column: 19, scope: !8832)
!8837 = !DILocation(line: 4083, column: 30, scope: !8832)
!8838 = !DILocation(line: 4083, column: 40, scope: !8832)
!8839 = !DILocation(line: 4083, column: 11, scope: !8832)
!8840 = !DILocation(line: 4084, column: 27, scope: !8832)
!8841 = !DILocation(line: 4084, column: 11, scope: !8832)
!8842 = !DILocation(line: 4084, column: 20, scope: !8832)
!8843 = !DILocation(line: 4084, column: 25, scope: !8832)
!8844 = !DILocation(line: 4085, column: 26, scope: !8832)
!8845 = !DILocation(line: 4085, column: 11, scope: !8832)
!8846 = !DILocation(line: 4085, column: 20, scope: !8832)
!8847 = !DILocation(line: 4085, column: 24, scope: !8832)
!8848 = !DILocation(line: 4086, column: 27, scope: !8832)
!8849 = !DILocation(line: 4086, column: 11, scope: !8832)
!8850 = !DILocation(line: 4086, column: 20, scope: !8832)
!8851 = !DILocation(line: 4086, column: 25, scope: !8832)
!8852 = !DILocation(line: 4087, column: 25, scope: !8832)
!8853 = !DILocation(line: 4087, column: 11, scope: !8832)
!8854 = !DILocation(line: 4087, column: 20, scope: !8832)
!8855 = !DILocation(line: 4087, column: 23, scope: !8832)
!8856 = !DILocation(line: 4088, column: 26, scope: !8832)
!8857 = !DILocation(line: 4088, column: 11, scope: !8832)
!8858 = !DILocation(line: 4088, column: 20, scope: !8832)
!8859 = !DILocation(line: 4088, column: 24, scope: !8832)
!8860 = !DILocation(line: 4090, column: 5, scope: !8807)
!8861 = distinct !{!8861, !8802, !8862}
!8862 = !DILocation(line: 4090, column: 5, scope: !8803)
!8863 = !DILocation(line: 4092, column: 3, scope: !8783)
!8864 = !DILocation(line: 4092, column: 10, scope: !8783)
!8865 = !DILocation(line: 4092, column: 21, scope: !8783)
!8866 = !DILocation(line: 4093, column: 1, scope: !8783)
!8867 = distinct !DISubprogram(name: "df_md_reset", scope: !3, file: !3, line: 4259, type: !2121, scopeLine: 4260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8868 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !8867, file: !3, line: 4259, type: !802)
!8869 = !DILocation(line: 4259, column: 21, scope: !8867)
!8870 = !DILocalVariable(name: "bb_index", scope: !8867, file: !3, line: 4261, type: !7)
!8871 = !DILocation(line: 4261, column: 16, scope: !8867)
!8872 = !DILocalVariable(name: "bi", scope: !8867, file: !3, line: 4262, type: !4201)
!8873 = !DILocation(line: 4262, column: 19, scope: !8867)
!8874 = !DILocation(line: 4264, column: 3, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 4264, column: 3)
!8876 = !DILocation(line: 4264, column: 3, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 4264, column: 3)
!8878 = !DILocalVariable(name: "bb_info", scope: !8879, file: !3, line: 4266, type: !2099)
!8879 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 4265, column: 5)
!8880 = !DILocation(line: 4266, column: 29, scope: !8879)
!8881 = !DILocation(line: 4266, column: 58, scope: !8879)
!8882 = !DILocation(line: 4266, column: 39, scope: !8879)
!8883 = !DILocation(line: 4267, column: 7, scope: !8879)
!8884 = !DILocation(line: 4268, column: 21, scope: !8879)
!8885 = !DILocation(line: 4268, column: 30, scope: !8879)
!8886 = !DILocation(line: 4268, column: 7, scope: !8879)
!8887 = !DILocation(line: 4269, column: 21, scope: !8879)
!8888 = !DILocation(line: 4269, column: 30, scope: !8879)
!8889 = !DILocation(line: 4269, column: 7, scope: !8879)
!8890 = !DILocation(line: 4270, column: 5, scope: !8879)
!8891 = distinct !{!8891, !8874, !8892}
!8892 = !DILocation(line: 4270, column: 5, scope: !8875)
!8893 = !DILocation(line: 4271, column: 1, scope: !8867)
!8894 = distinct !DISubprogram(name: "df_md_free_bb_info", scope: !3, file: !3, line: 4037, type: !2128, scopeLine: 4039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8895 = !DILocalVariable(name: "bb", arg: 1, scope: !8894, file: !3, line: 4037, type: !1357)
!8896 = !DILocation(line: 4037, column: 33, scope: !8894)
!8897 = !DILocalVariable(name: "vbb_info", arg: 2, scope: !8894, file: !3, line: 4038, type: !801)
!8898 = !DILocation(line: 4038, column: 27, scope: !8894)
!8899 = !DILocalVariable(name: "bb_info", scope: !8894, file: !3, line: 4040, type: !2099)
!8900 = !DILocation(line: 4040, column: 25, scope: !8894)
!8901 = !DILocation(line: 4040, column: 60, scope: !8894)
!8902 = !DILocation(line: 4040, column: 35, scope: !8894)
!8903 = !DILocation(line: 4041, column: 7, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 4041, column: 7)
!8905 = !DILocation(line: 4041, column: 7, scope: !8894)
!8906 = !DILocation(line: 4043, column: 7, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 4042, column: 5)
!8908 = !DILocation(line: 4044, column: 7, scope: !8907)
!8909 = !DILocation(line: 4045, column: 7, scope: !8907)
!8910 = !DILocation(line: 4046, column: 7, scope: !8907)
!8911 = !DILocation(line: 4047, column: 7, scope: !8907)
!8912 = !DILocation(line: 4048, column: 18, scope: !8907)
!8913 = !DILocation(line: 4048, column: 25, scope: !8907)
!8914 = !DILocation(line: 4048, column: 37, scope: !8907)
!8915 = !DILocation(line: 4048, column: 7, scope: !8907)
!8916 = !DILocation(line: 4049, column: 5, scope: !8907)
!8917 = !DILocation(line: 4050, column: 1, scope: !8894)
!8918 = distinct !DISubprogram(name: "df_md_local_compute", scope: !3, file: !3, line: 4215, type: !2121, scopeLine: 4216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!8919 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !8918, file: !3, line: 4215, type: !802)
!8920 = !DILocation(line: 4215, column: 29, scope: !8918)
!8921 = !DILocalVariable(name: "bb_index", scope: !8918, file: !3, line: 4217, type: !7)
!8922 = !DILocation(line: 4217, column: 16, scope: !8918)
!8923 = !DILocalVariable(name: "df_bb_index", scope: !8918, file: !3, line: 4217, type: !7)
!8924 = !DILocation(line: 4217, column: 26, scope: !8918)
!8925 = !DILocalVariable(name: "bi1", scope: !8918, file: !3, line: 4218, type: !4201)
!8926 = !DILocation(line: 4218, column: 19, scope: !8918)
!8927 = !DILocalVariable(name: "bi2", scope: !8918, file: !3, line: 4218, type: !4201)
!8928 = !DILocation(line: 4218, column: 24, scope: !8918)
!8929 = !DILocalVariable(name: "bb", scope: !8918, file: !3, line: 4219, type: !1357)
!8930 = !DILocation(line: 4219, column: 15, scope: !8918)
!8931 = !DILocalVariable(name: "frontiers", scope: !8918, file: !3, line: 4220, type: !2079)
!8932 = !DILocation(line: 4220, column: 11, scope: !8918)
!8933 = !DILocation(line: 4222, column: 18, scope: !8918)
!8934 = !DILocation(line: 4222, column: 16, scope: !8918)
!8935 = !DILocation(line: 4224, column: 3, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 4224, column: 3)
!8937 = !DILocation(line: 4224, column: 3, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 4224, column: 3)
!8939 = !DILocation(line: 4226, column: 31, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 4225, column: 5)
!8941 = !DILocation(line: 4226, column: 7, scope: !8940)
!8942 = !DILocation(line: 4227, column: 5, scope: !8940)
!8943 = distinct !{!8943, !8935, !8944}
!8944 = !DILocation(line: 4227, column: 5, scope: !8936)
!8945 = !DILocation(line: 4229, column: 3, scope: !8918)
!8946 = !DILocation(line: 4231, column: 15, scope: !8918)
!8947 = !DILocation(line: 4231, column: 13, scope: !8918)
!8948 = !DILocation(line: 4232, column: 3, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 4232, column: 3)
!8950 = !DILocation(line: 4232, column: 3, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 4232, column: 3)
!8952 = !DILocation(line: 4233, column: 28, scope: !8951)
!8953 = !DILocation(line: 4233, column: 5, scope: !8951)
!8954 = !DILocation(line: 4233, column: 15, scope: !8951)
!8955 = !DILocation(line: 4233, column: 19, scope: !8951)
!8956 = !DILocation(line: 4233, column: 26, scope: !8951)
!8957 = distinct !{!8957, !8948, !8958}
!8958 = !DILocation(line: 4233, column: 28, scope: !8949)
!8959 = !DILocation(line: 4235, column: 32, scope: !8918)
!8960 = !DILocation(line: 4235, column: 3, scope: !8918)
!8961 = !DILocation(line: 4238, column: 3, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 4238, column: 3)
!8963 = !DILocation(line: 4238, column: 3, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 4238, column: 3)
!8965 = !DILocalVariable(name: "kill", scope: !8966, file: !3, line: 4240, type: !802)
!8966 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 4239, column: 5)
!8967 = !DILocation(line: 4240, column: 14, scope: !8966)
!8968 = !DILocation(line: 4240, column: 40, scope: !8966)
!8969 = !DILocation(line: 4240, column: 21, scope: !8966)
!8970 = !DILocation(line: 4240, column: 51, scope: !8966)
!8971 = !DILocation(line: 4241, column: 7, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 4241, column: 7)
!8973 = !DILocation(line: 4241, column: 7, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8972, file: !3, line: 4241, column: 7)
!8975 = !DILocalVariable(name: "bb", scope: !8976, file: !3, line: 4243, type: !1357)
!8976 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 4242, column: 2)
!8977 = !DILocation(line: 4243, column: 16, scope: !8976)
!8978 = !DILocation(line: 4243, column: 21, scope: !8976)
!8979 = !DILocation(line: 4244, column: 22, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 4244, column: 8)
!8981 = !DILocation(line: 4244, column: 34, scope: !8980)
!8982 = !DILocation(line: 4244, column: 8, scope: !8980)
!8983 = !DILocation(line: 4244, column: 8, scope: !8976)
!8984 = !DILocation(line: 4245, column: 46, scope: !8980)
!8985 = !DILocation(line: 4245, column: 27, scope: !8980)
!8986 = !DILocation(line: 4245, column: 60, scope: !8980)
!8987 = !DILocation(line: 4245, column: 66, scope: !8980)
!8988 = !DILocation(line: 4246, column: 22, scope: !8980)
!8989 = !DILocation(line: 4246, column: 6, scope: !8980)
!8990 = !DILocation(line: 4245, column: 6, scope: !8980)
!8991 = !DILocation(line: 4247, column: 2, scope: !8976)
!8992 = distinct !{!8992, !8971, !8993}
!8993 = !DILocation(line: 4247, column: 2, scope: !8972)
!8994 = !DILocation(line: 4248, column: 5, scope: !8966)
!8995 = distinct !{!8995, !8961, !8996}
!8996 = !DILocation(line: 4248, column: 5, scope: !8962)
!8997 = !DILocation(line: 4250, column: 3, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 4250, column: 3)
!8999 = !DILocation(line: 4250, column: 3, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8998, file: !3, line: 4250, column: 3)
!9001 = !DILocation(line: 4251, column: 5, scope: !9000)
!9002 = distinct !{!9002, !8997, !9003}
!9003 = !DILocation(line: 4251, column: 5, scope: !8998)
!9004 = !DILocation(line: 4252, column: 9, scope: !8918)
!9005 = !DILocation(line: 4252, column: 3, scope: !8918)
!9006 = !DILocation(line: 4253, column: 1, scope: !8918)
!9007 = distinct !DISubprogram(name: "df_md_init", scope: !3, file: !3, line: 4298, type: !2121, scopeLine: 4299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!9008 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !9007, file: !3, line: 4298, type: !802)
!9009 = !DILocation(line: 4298, column: 20, scope: !9007)
!9010 = !DILocalVariable(name: "bb_index", scope: !9007, file: !3, line: 4300, type: !7)
!9011 = !DILocation(line: 4300, column: 16, scope: !9007)
!9012 = !DILocalVariable(name: "bi", scope: !9007, file: !3, line: 4301, type: !4201)
!9013 = !DILocation(line: 4301, column: 19, scope: !9007)
!9014 = !DILocation(line: 4303, column: 3, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9007, file: !3, line: 4303, column: 3)
!9016 = !DILocation(line: 4303, column: 3, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 4303, column: 3)
!9018 = !DILocalVariable(name: "bb_info", scope: !9019, file: !3, line: 4305, type: !2099)
!9019 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 4304, column: 5)
!9020 = !DILocation(line: 4305, column: 29, scope: !9019)
!9021 = !DILocation(line: 4305, column: 58, scope: !9019)
!9022 = !DILocation(line: 4305, column: 39, scope: !9019)
!9023 = !DILocation(line: 4307, column: 20, scope: !9019)
!9024 = !DILocation(line: 4307, column: 29, scope: !9019)
!9025 = !DILocation(line: 4307, column: 33, scope: !9019)
!9026 = !DILocation(line: 4307, column: 42, scope: !9019)
!9027 = !DILocation(line: 4307, column: 7, scope: !9019)
!9028 = !DILocation(line: 4308, column: 32, scope: !9019)
!9029 = !DILocation(line: 4308, column: 7, scope: !9019)
!9030 = !DILocation(line: 4309, column: 5, scope: !9019)
!9031 = distinct !{!9031, !9014, !9032}
!9032 = !DILocation(line: 4309, column: 5, scope: !9015)
!9033 = !DILocation(line: 4310, column: 1, scope: !9007)
!9034 = distinct !DISubprogram(name: "df_md_confluence_0", scope: !3, file: !3, line: 4313, type: !2178, scopeLine: 4314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!9035 = !DILocalVariable(name: "bb", arg: 1, scope: !9034, file: !3, line: 4313, type: !1357)
!9036 = !DILocation(line: 4313, column: 33, scope: !9034)
!9037 = !DILocalVariable(name: "bb_info", scope: !9034, file: !3, line: 4315, type: !2099)
!9038 = !DILocation(line: 4315, column: 25, scope: !9034)
!9039 = !DILocation(line: 4315, column: 54, scope: !9034)
!9040 = !DILocation(line: 4315, column: 58, scope: !9034)
!9041 = !DILocation(line: 4315, column: 35, scope: !9034)
!9042 = !DILocation(line: 4316, column: 16, scope: !9034)
!9043 = !DILocation(line: 4316, column: 25, scope: !9034)
!9044 = !DILocation(line: 4316, column: 29, scope: !9034)
!9045 = !DILocation(line: 4316, column: 38, scope: !9034)
!9046 = !DILocation(line: 4316, column: 3, scope: !9034)
!9047 = !DILocation(line: 4317, column: 1, scope: !9034)
!9048 = distinct !DISubprogram(name: "df_md_confluence_n", scope: !3, file: !3, line: 4322, type: !2183, scopeLine: 4323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!9049 = !DILocalVariable(name: "e", arg: 1, scope: !9048, file: !3, line: 4322, type: !1374)
!9050 = !DILocation(line: 4322, column: 26, scope: !9048)
!9051 = !DILocalVariable(name: "op1", scope: !9048, file: !3, line: 4324, type: !802)
!9052 = !DILocation(line: 4324, column: 10, scope: !9048)
!9053 = !DILocation(line: 4324, column: 35, scope: !9048)
!9054 = !DILocation(line: 4324, column: 38, scope: !9048)
!9055 = !DILocation(line: 4324, column: 44, scope: !9048)
!9056 = !DILocation(line: 4324, column: 16, scope: !9048)
!9057 = !DILocation(line: 4324, column: 52, scope: !9048)
!9058 = !DILocalVariable(name: "op2", scope: !9048, file: !3, line: 4325, type: !802)
!9059 = !DILocation(line: 4325, column: 10, scope: !9048)
!9060 = !DILocation(line: 4325, column: 35, scope: !9048)
!9061 = !DILocation(line: 4325, column: 38, scope: !9048)
!9062 = !DILocation(line: 4325, column: 43, scope: !9048)
!9063 = !DILocation(line: 4325, column: 16, scope: !9048)
!9064 = !DILocation(line: 4325, column: 51, scope: !9048)
!9065 = !DILocation(line: 4327, column: 7, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 4327, column: 7)
!9067 = !DILocation(line: 4327, column: 10, scope: !9066)
!9068 = !DILocation(line: 4327, column: 16, scope: !9066)
!9069 = !DILocation(line: 4327, column: 7, scope: !9048)
!9070 = !DILocation(line: 4328, column: 5, scope: !9066)
!9071 = !DILocation(line: 4330, column: 7, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 4330, column: 7)
!9073 = !DILocation(line: 4330, column: 10, scope: !9072)
!9074 = !DILocation(line: 4330, column: 16, scope: !9072)
!9075 = !DILocation(line: 4330, column: 7, scope: !9048)
!9076 = !DILocation(line: 4331, column: 32, scope: !9072)
!9077 = !DILocation(line: 4331, column: 37, scope: !9072)
!9078 = !DILocation(line: 4331, column: 42, scope: !9072)
!9079 = !DILocation(line: 4331, column: 5, scope: !9072)
!9080 = !DILocation(line: 4333, column: 22, scope: !9072)
!9081 = !DILocation(line: 4333, column: 27, scope: !9072)
!9082 = !DILocation(line: 4333, column: 5, scope: !9072)
!9083 = !DILocation(line: 4334, column: 1, scope: !9048)
!9084 = distinct !DISubprogram(name: "df_md_transfer_function", scope: !3, file: !3, line: 4274, type: !2188, scopeLine: 4275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!9085 = !DILocalVariable(name: "bb_index", arg: 1, scope: !9084, file: !3, line: 4274, type: !855)
!9086 = !DILocation(line: 4274, column: 30, scope: !9084)
!9087 = !DILocalVariable(name: "bb", scope: !9084, file: !3, line: 4276, type: !1357)
!9088 = !DILocation(line: 4276, column: 15, scope: !9084)
!9089 = !DILocation(line: 4276, column: 20, scope: !9084)
!9090 = !DILocalVariable(name: "bb_info", scope: !9084, file: !3, line: 4277, type: !2099)
!9091 = !DILocation(line: 4277, column: 25, scope: !9084)
!9092 = !DILocation(line: 4277, column: 54, scope: !9084)
!9093 = !DILocation(line: 4277, column: 35, scope: !9084)
!9094 = !DILocalVariable(name: "in", scope: !9084, file: !3, line: 4278, type: !802)
!9095 = !DILocation(line: 4278, column: 10, scope: !9084)
!9096 = !DILocation(line: 4278, column: 15, scope: !9084)
!9097 = !DILocation(line: 4278, column: 24, scope: !9084)
!9098 = !DILocalVariable(name: "out", scope: !9084, file: !3, line: 4279, type: !802)
!9099 = !DILocation(line: 4279, column: 10, scope: !9084)
!9100 = !DILocation(line: 4279, column: 16, scope: !9084)
!9101 = !DILocation(line: 4279, column: 25, scope: !9084)
!9102 = !DILocalVariable(name: "gen", scope: !9084, file: !3, line: 4280, type: !802)
!9103 = !DILocation(line: 4280, column: 10, scope: !9084)
!9104 = !DILocation(line: 4280, column: 16, scope: !9084)
!9105 = !DILocation(line: 4280, column: 25, scope: !9084)
!9106 = !DILocalVariable(name: "kill", scope: !9084, file: !3, line: 4281, type: !802)
!9107 = !DILocation(line: 4281, column: 10, scope: !9084)
!9108 = !DILocation(line: 4281, column: 17, scope: !9084)
!9109 = !DILocation(line: 4281, column: 26, scope: !9084)
!9110 = !DILocation(line: 4286, column: 15, scope: !9084)
!9111 = !DILocation(line: 4286, column: 30, scope: !9084)
!9112 = !DILocation(line: 4286, column: 52, scope: !9084)
!9113 = !DILocation(line: 4286, column: 35, scope: !9084)
!9114 = !DILocation(line: 4286, column: 3, scope: !9084)
!9115 = !DILocation(line: 4290, column: 20, scope: !9084)
!9116 = !DILocation(line: 4290, column: 40, scope: !9084)
!9117 = !DILocation(line: 4290, column: 24, scope: !9084)
!9118 = !DILocation(line: 4290, column: 3, scope: !9084)
!9119 = !DILocation(line: 4292, column: 32, scope: !9084)
!9120 = !DILocation(line: 4292, column: 37, scope: !9084)
!9121 = !DILocation(line: 4292, column: 52, scope: !9084)
!9122 = !DILocation(line: 4292, column: 56, scope: !9084)
!9123 = !DILocation(line: 4292, column: 10, scope: !9084)
!9124 = !DILocation(line: 4292, column: 3, scope: !9084)
!9125 = distinct !DISubprogram(name: "df_md_free", scope: !3, file: !3, line: 4339, type: !2195, scopeLine: 4340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!9126 = !DILocalVariable(name: "i", scope: !9125, file: !3, line: 4341, type: !7)
!9127 = !DILocation(line: 4341, column: 16, scope: !9125)
!9128 = !DILocation(line: 4342, column: 10, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9125, file: !3, line: 4342, column: 3)
!9130 = !DILocation(line: 4342, column: 8, scope: !9129)
!9131 = !DILocation(line: 4342, column: 15, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9129, file: !3, line: 4342, column: 3)
!9133 = !DILocation(line: 4342, column: 19, scope: !9132)
!9134 = !DILocation(line: 4342, column: 26, scope: !9132)
!9135 = !DILocation(line: 4342, column: 17, scope: !9132)
!9136 = !DILocation(line: 4342, column: 3, scope: !9129)
!9137 = !DILocalVariable(name: "bb_info", scope: !9138, file: !3, line: 4344, type: !2099)
!9138 = distinct !DILexicalBlock(scope: !9132, file: !3, line: 4343, column: 5)
!9139 = !DILocation(line: 4344, column: 29, scope: !9138)
!9140 = !DILocation(line: 4344, column: 58, scope: !9138)
!9141 = !DILocation(line: 4344, column: 39, scope: !9138)
!9142 = !DILocation(line: 4345, column: 11, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9138, file: !3, line: 4345, column: 11)
!9144 = !DILocation(line: 4345, column: 11, scope: !9138)
!9145 = !DILocation(line: 4347, column: 4, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 4346, column: 2)
!9147 = !DILocation(line: 4348, column: 4, scope: !9146)
!9148 = !DILocation(line: 4349, column: 4, scope: !9146)
!9149 = !DILocation(line: 4350, column: 4, scope: !9146)
!9150 = !DILocation(line: 4351, column: 4, scope: !9146)
!9151 = !DILocation(line: 4352, column: 2, scope: !9146)
!9152 = !DILocation(line: 4353, column: 5, scope: !9138)
!9153 = !DILocation(line: 4342, column: 44, scope: !9132)
!9154 = !DILocation(line: 4342, column: 3, scope: !9132)
!9155 = distinct !{!9155, !9136, !9156}
!9156 = !DILocation(line: 4353, column: 5, scope: !9129)
!9157 = !DILocation(line: 4355, column: 3, scope: !9125)
!9158 = !DILocation(line: 4356, column: 20, scope: !9125)
!9159 = !DILocation(line: 4356, column: 27, scope: !9125)
!9160 = !DILocation(line: 4356, column: 3, scope: !9125)
!9161 = !DILocation(line: 4358, column: 3, scope: !9125)
!9162 = !DILocation(line: 4358, column: 10, scope: !9125)
!9163 = !DILocation(line: 4358, column: 26, scope: !9125)
!9164 = !DILocation(line: 4359, column: 9, scope: !9125)
!9165 = !DILocation(line: 4359, column: 16, scope: !9125)
!9166 = !DILocation(line: 4359, column: 3, scope: !9125)
!9167 = !DILocation(line: 4360, column: 9, scope: !9125)
!9168 = !DILocation(line: 4360, column: 3, scope: !9125)
!9169 = !DILocation(line: 4361, column: 1, scope: !9125)
!9170 = distinct !DISubprogram(name: "df_md_top_dump", scope: !3, file: !3, line: 4367, type: !2257, scopeLine: 4368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!9171 = !DILocalVariable(name: "bb", arg: 1, scope: !9170, file: !3, line: 4367, type: !1357)
!9172 = !DILocation(line: 4367, column: 29, scope: !9170)
!9173 = !DILocalVariable(name: "file", arg: 2, scope: !9170, file: !3, line: 4367, type: !2204)
!9174 = !DILocation(line: 4367, column: 39, scope: !9170)
!9175 = !DILocalVariable(name: "bb_info", scope: !9170, file: !3, line: 4369, type: !2099)
!9176 = !DILocation(line: 4369, column: 25, scope: !9170)
!9177 = !DILocation(line: 4369, column: 54, scope: !9170)
!9178 = !DILocation(line: 4369, column: 58, scope: !9170)
!9179 = !DILocation(line: 4369, column: 35, scope: !9170)
!9180 = !DILocation(line: 4370, column: 8, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 4370, column: 7)
!9182 = !DILocation(line: 4370, column: 16, scope: !9181)
!9183 = !DILocation(line: 4370, column: 20, scope: !9181)
!9184 = !DILocation(line: 4370, column: 29, scope: !9181)
!9185 = !DILocation(line: 4370, column: 7, scope: !9170)
!9186 = !DILocation(line: 4371, column: 5, scope: !9181)
!9187 = !DILocation(line: 4373, column: 12, scope: !9170)
!9188 = !DILocation(line: 4373, column: 3, scope: !9170)
!9189 = !DILocation(line: 4374, column: 20, scope: !9170)
!9190 = !DILocation(line: 4374, column: 26, scope: !9170)
!9191 = !DILocation(line: 4374, column: 35, scope: !9170)
!9192 = !DILocation(line: 4374, column: 3, scope: !9170)
!9193 = !DILocation(line: 4375, column: 12, scope: !9170)
!9194 = !DILocation(line: 4375, column: 3, scope: !9170)
!9195 = !DILocation(line: 4376, column: 20, scope: !9170)
!9196 = !DILocation(line: 4376, column: 26, scope: !9170)
!9197 = !DILocation(line: 4376, column: 35, scope: !9170)
!9198 = !DILocation(line: 4376, column: 3, scope: !9170)
!9199 = !DILocation(line: 4377, column: 12, scope: !9170)
!9200 = !DILocation(line: 4377, column: 3, scope: !9170)
!9201 = !DILocation(line: 4378, column: 20, scope: !9170)
!9202 = !DILocation(line: 4378, column: 26, scope: !9170)
!9203 = !DILocation(line: 4378, column: 35, scope: !9170)
!9204 = !DILocation(line: 4378, column: 3, scope: !9170)
!9205 = !DILocation(line: 4379, column: 12, scope: !9170)
!9206 = !DILocation(line: 4379, column: 3, scope: !9170)
!9207 = !DILocation(line: 4380, column: 20, scope: !9170)
!9208 = !DILocation(line: 4380, column: 26, scope: !9170)
!9209 = !DILocation(line: 4380, column: 35, scope: !9170)
!9210 = !DILocation(line: 4380, column: 3, scope: !9170)
!9211 = !DILocation(line: 4381, column: 1, scope: !9170)
!9212 = distinct !DISubprogram(name: "df_md_bottom_dump", scope: !3, file: !3, line: 4386, type: !2257, scopeLine: 4387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!9213 = !DILocalVariable(name: "bb", arg: 1, scope: !9212, file: !3, line: 4386, type: !1357)
!9214 = !DILocation(line: 4386, column: 32, scope: !9212)
!9215 = !DILocalVariable(name: "file", arg: 2, scope: !9212, file: !3, line: 4386, type: !2204)
!9216 = !DILocation(line: 4386, column: 42, scope: !9212)
!9217 = !DILocalVariable(name: "bb_info", scope: !9212, file: !3, line: 4388, type: !2099)
!9218 = !DILocation(line: 4388, column: 25, scope: !9212)
!9219 = !DILocation(line: 4388, column: 54, scope: !9212)
!9220 = !DILocation(line: 4388, column: 58, scope: !9212)
!9221 = !DILocation(line: 4388, column: 35, scope: !9212)
!9222 = !DILocation(line: 4389, column: 8, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 4389, column: 7)
!9224 = !DILocation(line: 4389, column: 16, scope: !9223)
!9225 = !DILocation(line: 4389, column: 20, scope: !9223)
!9226 = !DILocation(line: 4389, column: 29, scope: !9223)
!9227 = !DILocation(line: 4389, column: 7, scope: !9212)
!9228 = !DILocation(line: 4390, column: 5, scope: !9223)
!9229 = !DILocation(line: 4392, column: 12, scope: !9212)
!9230 = !DILocation(line: 4392, column: 3, scope: !9212)
!9231 = !DILocation(line: 4393, column: 20, scope: !9212)
!9232 = !DILocation(line: 4393, column: 26, scope: !9212)
!9233 = !DILocation(line: 4393, column: 35, scope: !9212)
!9234 = !DILocation(line: 4393, column: 3, scope: !9212)
!9235 = !DILocation(line: 4394, column: 1, scope: !9212)
!9236 = distinct !DISubprogram(name: "df_md_get_bb_info", scope: !385, file: !385, line: 1061, type: !9237, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!9237 = !DISubroutineType(types: !9238)
!9238 = !{!2099, !7}
!9239 = !DILocalVariable(name: "index", arg: 1, scope: !9236, file: !385, line: 1061, type: !7)
!9240 = !DILocation(line: 1061, column: 33, scope: !9236)
!9241 = !DILocation(line: 1063, column: 7, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9236, file: !385, line: 1063, column: 7)
!9243 = !DILocation(line: 1063, column: 15, scope: !9242)
!9244 = !DILocation(line: 1063, column: 22, scope: !9242)
!9245 = !DILocation(line: 1063, column: 13, scope: !9242)
!9246 = !DILocation(line: 1063, column: 7, scope: !9236)
!9247 = !DILocation(line: 1064, column: 37, scope: !9242)
!9248 = !DILocation(line: 1064, column: 44, scope: !9242)
!9249 = !DILocation(line: 1064, column: 55, scope: !9242)
!9250 = !DILocation(line: 1064, column: 12, scope: !9242)
!9251 = !DILocation(line: 1064, column: 5, scope: !9242)
!9252 = !DILocation(line: 1066, column: 5, scope: !9242)
!9253 = !DILocation(line: 1067, column: 1, scope: !9236)
!9254 = distinct !DISubprogram(name: "df_md_set_bb_info", scope: !3, file: !3, line: 4027, type: !9255, scopeLine: 4029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!9255 = !DISubroutineType(types: !9256)
!9256 = !{null, !7, !2099}
!9257 = !DILocalVariable(name: "index", arg: 1, scope: !9254, file: !3, line: 4027, type: !7)
!9258 = !DILocation(line: 4027, column: 33, scope: !9254)
!9259 = !DILocalVariable(name: "bb_info", arg: 2, scope: !9254, file: !3, line: 4028, type: !2099)
!9260 = !DILocation(line: 4028, column: 42, scope: !9254)
!9261 = !DILocation(line: 4030, column: 3, scope: !9254)
!9262 = !DILocation(line: 4031, column: 3, scope: !9254)
!9263 = !DILocation(line: 4032, column: 30, scope: !9254)
!9264 = !DILocation(line: 4032, column: 3, scope: !9254)
!9265 = !DILocation(line: 4032, column: 10, scope: !9254)
!9266 = !DILocation(line: 4032, column: 21, scope: !9254)
!9267 = !DILocation(line: 4032, column: 28, scope: !9254)
!9268 = !DILocation(line: 4033, column: 1, scope: !9254)
!9269 = distinct !DISubprogram(name: "df_md_bb_local_compute", scope: !3, file: !3, line: 4185, type: !2750, scopeLine: 4186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!9270 = !DILocalVariable(name: "bb_index", arg: 1, scope: !9269, file: !3, line: 4185, type: !7)
!9271 = !DILocation(line: 4185, column: 38, scope: !9269)
!9272 = !DILocalVariable(name: "bb", scope: !9269, file: !3, line: 4187, type: !1357)
!9273 = !DILocation(line: 4187, column: 15, scope: !9269)
!9274 = !DILocation(line: 4187, column: 20, scope: !9269)
!9275 = !DILocalVariable(name: "bb_info", scope: !9269, file: !3, line: 4188, type: !2099)
!9276 = !DILocation(line: 4188, column: 25, scope: !9269)
!9277 = !DILocation(line: 4188, column: 54, scope: !9269)
!9278 = !DILocation(line: 4188, column: 35, scope: !9269)
!9279 = !DILocalVariable(name: "insn", scope: !9269, file: !3, line: 4189, type: !883)
!9280 = !DILocation(line: 4189, column: 7, scope: !9269)
!9281 = !DILocation(line: 4192, column: 9, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 4192, column: 7)
!9283 = !DILocation(line: 4192, column: 13, scope: !9282)
!9284 = !DILocation(line: 4192, column: 30, scope: !9282)
!9285 = !DILocation(line: 4192, column: 7, scope: !9269)
!9286 = !DILocation(line: 4193, column: 41, scope: !9282)
!9287 = !DILocation(line: 4194, column: 65, scope: !9282)
!9288 = !DILocation(line: 4194, column: 41, scope: !9282)
!9289 = !DILocation(line: 4193, column: 5, scope: !9282)
!9290 = !DILocation(line: 4197, column: 3, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 4197, column: 3)
!9292 = !DILocation(line: 4197, column: 3, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 4197, column: 3)
!9294 = !DILocation(line: 0, scope: !9293)
!9295 = !DILocalVariable(name: "uid", scope: !9296, file: !3, line: 4199, type: !7)
!9296 = distinct !DILexicalBlock(scope: !9293, file: !3, line: 4198, column: 5)
!9297 = !DILocation(line: 4199, column: 20, scope: !9296)
!9298 = !DILocation(line: 4199, column: 26, scope: !9296)
!9299 = !DILocation(line: 4200, column: 12, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9296, file: !3, line: 4200, column: 11)
!9301 = !DILocation(line: 4200, column: 11, scope: !9296)
!9302 = !DILocation(line: 4201, column: 9, scope: !9300)
!9303 = !DILocation(line: 4203, column: 43, scope: !9296)
!9304 = !DILocation(line: 4203, column: 52, scope: !9296)
!9305 = !DILocation(line: 4203, column: 7, scope: !9296)
!9306 = !DILocation(line: 4204, column: 5, scope: !9296)
!9307 = distinct !{!9307, !9290, !9308}
!9308 = !DILocation(line: 4204, column: 5, scope: !9291)
!9309 = !DILocation(line: 4206, column: 9, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 4206, column: 7)
!9311 = !DILocation(line: 4206, column: 13, scope: !9310)
!9312 = !DILocation(line: 4206, column: 30, scope: !9310)
!9313 = !DILocation(line: 4206, column: 7, scope: !9269)
!9314 = !DILocation(line: 4207, column: 41, scope: !9310)
!9315 = !DILocation(line: 4208, column: 65, scope: !9310)
!9316 = !DILocation(line: 4208, column: 41, scope: !9310)
!9317 = !DILocation(line: 4207, column: 5, scope: !9310)
!9318 = !DILocation(line: 4210, column: 1, scope: !9269)
!9319 = distinct !DISubprogram(name: "df_md_bb_local_compute_process_def", scope: !3, file: !3, line: 4146, type: !9320, scopeLine: 4149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2289)
!9320 = !DISubroutineType(types: !9321)
!9321 = !{null, !2099, !1998, !855}
!9322 = !DILocalVariable(name: "bb_info", arg: 1, scope: !9319, file: !3, line: 4146, type: !2099)
!9323 = !DILocation(line: 4146, column: 59, scope: !9319)
!9324 = !DILocalVariable(name: "def_rec", arg: 2, scope: !9319, file: !3, line: 4147, type: !1998)
!9325 = !DILocation(line: 4147, column: 45, scope: !9319)
!9326 = !DILocalVariable(name: "top_flag", arg: 3, scope: !9319, file: !3, line: 4148, type: !855)
!9327 = !DILocation(line: 4148, column: 41, scope: !9319)
!9328 = !DILocalVariable(name: "def", scope: !9319, file: !3, line: 4150, type: !872)
!9329 = !DILocation(line: 4150, column: 10, scope: !9319)
!9330 = !DILocation(line: 4151, column: 17, scope: !9319)
!9331 = !DILocation(line: 4151, column: 3, scope: !9319)
!9332 = !DILocation(line: 4153, column: 3, scope: !9319)
!9333 = !DILocation(line: 4153, column: 25, scope: !9319)
!9334 = !DILocation(line: 4153, column: 17, scope: !9319)
!9335 = !DILocation(line: 4153, column: 15, scope: !9319)
!9336 = !DILocation(line: 4153, column: 29, scope: !9319)
!9337 = !DILocalVariable(name: "dregno", scope: !9338, file: !3, line: 4155, type: !7)
!9338 = distinct !DILexicalBlock(scope: !9319, file: !3, line: 4154, column: 5)
!9339 = !DILocation(line: 4155, column: 20, scope: !9338)
!9340 = !DILocation(line: 4155, column: 29, scope: !9338)
!9341 = !DILocation(line: 4156, column: 15, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 4156, column: 11)
!9343 = !DILocation(line: 4156, column: 19, scope: !9342)
!9344 = !DILocation(line: 4156, column: 36, scope: !9342)
!9345 = !DILocation(line: 4157, column: 6, scope: !9342)
!9346 = !DILocation(line: 4157, column: 10, scope: !9342)
!9347 = !DILocation(line: 4157, column: 17, scope: !9342)
!9348 = !DILocation(line: 4158, column: 4, scope: !9342)
!9349 = !DILocation(line: 4158, column: 7, scope: !9342)
!9350 = !DILocation(line: 4158, column: 20, scope: !9342)
!9351 = !DILocation(line: 4158, column: 39, scope: !9342)
!9352 = !DILocation(line: 4158, column: 16, scope: !9342)
!9353 = !DILocation(line: 4156, column: 11, scope: !9338)
!9354 = !DILocation(line: 4160, column: 30, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 4160, column: 15)
!9356 = distinct !DILexicalBlock(scope: !9342, file: !3, line: 4159, column: 2)
!9357 = !DILocation(line: 4160, column: 44, scope: !9355)
!9358 = !DILocation(line: 4160, column: 16, scope: !9355)
!9359 = !DILocation(line: 4160, column: 15, scope: !9356)
!9360 = !DILocation(line: 4162, column: 12, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 4162, column: 12)
!9362 = distinct !DILexicalBlock(scope: !9355, file: !3, line: 4161, column: 6)
!9363 = !DILocation(line: 4163, column: 12, scope: !9361)
!9364 = !DILocation(line: 4162, column: 12, scope: !9362)
!9365 = !DILocation(line: 4165, column: 28, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 4164, column: 10)
!9367 = !DILocation(line: 4165, column: 37, scope: !9366)
!9368 = !DILocation(line: 4165, column: 42, scope: !9366)
!9369 = !DILocation(line: 4165, column: 12, scope: !9366)
!9370 = !DILocation(line: 4166, column: 30, scope: !9366)
!9371 = !DILocation(line: 4166, column: 39, scope: !9366)
!9372 = !DILocation(line: 4166, column: 45, scope: !9366)
!9373 = !DILocation(line: 4166, column: 12, scope: !9366)
!9374 = !DILocation(line: 4167, column: 10, scope: !9366)
!9375 = !DILocation(line: 4172, column: 28, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 4169, column: 10)
!9377 = !DILocation(line: 4172, column: 42, scope: !9376)
!9378 = !DILocation(line: 4172, column: 12, scope: !9376)
!9379 = !DILocation(line: 4173, column: 28, scope: !9376)
!9380 = !DILocation(line: 4173, column: 37, scope: !9376)
!9381 = !DILocation(line: 4173, column: 43, scope: !9376)
!9382 = !DILocation(line: 4173, column: 12, scope: !9376)
!9383 = !DILocation(line: 4174, column: 30, scope: !9376)
!9384 = !DILocation(line: 4174, column: 39, scope: !9376)
!9385 = !DILocation(line: 4174, column: 44, scope: !9376)
!9386 = !DILocation(line: 4174, column: 12, scope: !9376)
!9387 = !DILocation(line: 4176, column: 6, scope: !9362)
!9388 = !DILocation(line: 4177, column: 2, scope: !9356)
!9389 = distinct !{!9389, !9332, !9390}
!9390 = !DILocation(line: 4178, column: 5, scope: !9319)
!9391 = !DILocation(line: 4179, column: 1, scope: !9319)
