; ModuleID = 'blender/source/blender/editors/interface/interface_panel.c'
source_filename = "blender/source/blender/editors/interface/interface_panel.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.Panel = type { %struct.Panel*, %struct.Panel*, %struct.PanelType*, %struct.uiLayout*, [64 x i8], [64 x i8], [64 x i8], i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, %struct.Panel*, i8* }
%struct.uiLayout = type opaque
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.rctf = type { float, float, float, float }
%struct.SmoothView2DStore = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.ARegionType = type { %struct.ARegionType*, %struct.ARegionType*, i32, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.bContext*, %struct.ARegion*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.ARegion*, %struct.wmNotifier*)*, void (%struct.ARegion*)*, i8* (i8*)*, void ()*, void (%struct.wmKeyConfig*)*, void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i16 }
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type opaque
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Ipo = type opaque
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.bContext = type opaque
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type { %struct.SpaceType*, %struct.SpaceType*, [64 x i8], i32, i32, %struct.SpaceLink* (%struct.bContext*)*, void (%struct.SpaceLink*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.wmNotifier*)*, void (%struct.bContext*, %struct.ScrArea*)*, %struct.SpaceLink* (%struct.SpaceLink*)*, void ()*, void (%struct.wmKeyConfig*)*, void ()*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, i32 }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.wmNotifier = type { %struct.wmNotifier*, %struct.wmNotifier*, %struct.wmWindowManager*, %struct.wmWindow*, i32, i32, i32, i32, i32, i8* }
%struct.bContextDataResult = type opaque
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.PanelType = type { %struct.PanelType*, %struct.PanelType*, [64 x i8], [64 x i8], [64 x i8], [64 x i8], [64 x i8], i32, i32, i32, i32 (%struct.bContext*, %struct.PanelType*)*, void (%struct.bContext*, %struct.Panel*)*, void (%struct.bContext*, %struct.Panel*)*, %struct.ExtensionRNA }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.uiBlock = type { %struct.uiBlock*, %struct.uiBlock*, %struct.ListBase, %struct.Panel*, %struct.uiBlock*, %struct.ListBase, %struct.ListBase, %struct.uiLayout*, %struct.ListBase, [128 x i8], [4 x [4 x float]], %struct.rctf, float, i32, void (%struct.bContext*, i8*, i8*)*, i8*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, void (%struct.bContext*, i8*, i32)*, i8*, void (%struct.bContext*, i8*, i32)*, i8*, i32 (%struct.bContext*, %struct.uiBlock*, %struct.wmEvent*)*, void (%struct.bContext*, i8*, i8*, i8*, %struct.rcti*)*, i8*, i8*, i32, i16, i8, i8, i8, [7 x i8], double, i8*, i8, i8, i8, i8, i32, i32, i32, i32, i32, %struct.rctf, %struct.ListBase, %struct.uiPopupBlockHandle*, %struct.wmOperator*, i8*, %struct.UnitSettings*, [3 x float], i8, [64 x i8], %struct.PieMenuData }
%struct.uiPopupBlockHandle = type { %struct.ARegion*, [2 x float], double, i8, i8, void (%struct.bContext*, i8*, i32)*, void (%struct.bContext*, i8*)*, i8*, %struct.uiPopupBlockCreate, %struct.wmTimer*, %struct.uiKeyNavLock, %struct.wmOperatorType*, %struct.ScrArea*, %struct.ARegion*, i32, i32, i32, i32, [4 x float], i32, i8, [2 x i32] }
%struct.uiPopupBlockCreate = type { %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, %struct.uiBlock* (%struct.bContext*, %struct.uiPopupBlockHandle*, i8*)*, i8*, [2 x i32], %struct.ARegion* }
%struct.uiKeyNavLock = type { i8, [2 x i32] }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PieMenuData = type { [2 x float], [2 x float], [2 x float], [2 x float], double, i32, i32, float }
%struct.SpaceButs = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, i16, i16, i16, i16, i16, i16, i16, i16, i8, [7 x i8], i8*, i32, i32, %struct.ID*, i8* }
%struct.uiStyle = type { %struct.uiStyle*, %struct.uiStyle*, [64 x i8], %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.uiFontStyle = type { i16, i16, i16, [6 x i8], i16, i16, i16, i16, i16, i16, float, float }
%struct.uiBut = type { %struct.uiBut*, %struct.uiBut*, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8*, [128 x i8], [400 x i8], %struct.rctf, i8*, float, float, float, float, float, float, [4 x i8], void (%struct.bContext*, i8*, i8*)*, i8*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, %struct.bContextStore*, i32 (%struct.bContext*, i8*, i8*)*, i8*, void (%struct.bContext*, i8*, i8*, %struct.uiSearchItems*)*, i8*, void (%struct.bContext*, i8*, i8*)*, i8*, i8*, %struct.uiLink*, [2 x i16], i8*, i8*, i32, i8, i8, i8, i8, i8, i16, i16, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, void (%struct.bContext*, %struct.uiLayout*, i8*)*, %struct.PointerRNA, %struct.PropertyRNA*, i32, %struct.PointerRNA, %struct.PropertyRNA*, %struct.wmOperatorType*, %struct.PointerRNA*, i16, i8, i8, i8*, %struct.ImBuf*, float, %struct.uiHandleButtonData*, i8*, i8*, double*, float*, i8*, i8*, %struct.uiBlock* }
%struct.bContextStore = type { %struct.bContextStore*, %struct.bContextStore*, %struct.ListBase, i8 }
%struct.uiSearchItems = type opaque
%struct.uiLink = type { i8**, i8***, i16*, i16, i16, i16, i16, %struct.ListBase }
%struct.ImBuf = type opaque
%struct.uiHandleButtonData = type opaque
%struct.uiHandlePanelData = type { i32, %struct.wmTimer*, double, i32, i32, i32, i32, i32, i32 }
%struct.wmEventHandler = type opaque
%struct.PanelSort = type { %struct.Panel*, %struct.Panel* }
%struct.PanelCategoryDyn = type { %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn*, [64 x i8], %struct.rcti }
%struct.PanelCategoryStack = type { %struct.PanelCategoryStack*, %struct.PanelCategoryStack*, [64 x i8] }

@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [10 x i8] c"new panel\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.1 = private unnamed_addr constant [11 x i8] c"scaled %f\0A\00", align 1
@__func__.UI_panel_category_active_set = private unnamed_addr constant [29 x i8] c"UI_panel_category_active_set\00", align 1
@__func__.UI_panel_category_add = private unnamed_addr constant [22 x i8] c"UI_panel_category_add\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"panelsort\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@MEM_freeN = external dso_local global void (i8*)*, align 8
@__const.ui_panel_category_draw_tab.vec = private unnamed_addr constant [4 x [2 x float]] [[2 x float] [float 0x3FC8F5C280000000, float 0x3F947AE140000000], [2 x float] [float 0x3FE19999A0000000, float 0x3FC5A1CAC0000000], [2 x float] [float 0x3FEA978D40000000, float 0x3FDCCCCCC0000000], [2 x float] [float 0x3FEF5C2900000000, float 0x3FE9C28F60000000]], align 16
@.str.3 = private unnamed_addr constant [18 x i8] c"uiHandlePanelData\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Panel* @uiPanelFindByType(%struct.ARegion* %ar, %struct.PanelType* %pt) #0 !dbg !3380 {
entry:
  %retval = alloca %struct.Panel*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %pt.addr = alloca %struct.PanelType*, align 8
  %pa = alloca %struct.Panel*, align 8
  %idname = alloca i8*, align 8
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3386, metadata !DIExpression()), !dbg !3387
  store %struct.PanelType* %pt, %struct.PanelType** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PanelType** %pt.addr, metadata !3388, metadata !DIExpression()), !dbg !3389
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !3390, metadata !DIExpression()), !dbg !3391
  call void @llvm.dbg.declare(metadata i8** %idname, metadata !3392, metadata !DIExpression()), !dbg !3393
  %0 = load %struct.PanelType*, %struct.PanelType** %pt.addr, align 8, !dbg !3394
  %idname1 = getelementptr inbounds %struct.PanelType, %struct.PanelType* %0, i32 0, i32 2, !dbg !3395
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !3394
  store i8* %arraydecay, i8** %idname, align 8, !dbg !3393
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3396
  %panels = getelementptr inbounds %struct.ARegion, %struct.ARegion* %1, i32 0, i32 22, !dbg !3398
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels, i32 0, i32 0, !dbg !3399
  %2 = load i8*, i8** %first, align 8, !dbg !3399
  %3 = bitcast i8* %2 to %struct.Panel*, !dbg !3396
  store %struct.Panel* %3, %struct.Panel** %pa, align 8, !dbg !3400
  br label %for.cond, !dbg !3401

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3402
  %tobool = icmp ne %struct.Panel* %4, null, !dbg !3404
  br i1 %tobool, label %for.body, label %for.end, !dbg !3404

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3405
  %panelname = getelementptr inbounds %struct.Panel, %struct.Panel* %5, i32 0, i32 4, !dbg !3405
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %panelname, i64 0, i64 0, !dbg !3405
  %6 = load i8*, i8** %idname, align 8, !dbg !3405
  %call = call i32 @strncmp(i8* %arraydecay2, i8* %6, i64 64) #6, !dbg !3405
  %cmp = icmp eq i32 %call, 0, !dbg !3405
  br i1 %cmp, label %if.then, label %if.end, !dbg !3408

if.then:                                          ; preds = %for.body
  %7 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3409
  store %struct.Panel* %7, %struct.Panel** %retval, align 8, !dbg !3411
  br label %return, !dbg !3411

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3412

for.inc:                                          ; preds = %if.end
  %8 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3413
  %next = getelementptr inbounds %struct.Panel, %struct.Panel* %8, i32 0, i32 0, !dbg !3414
  %9 = load %struct.Panel*, %struct.Panel** %next, align 8, !dbg !3414
  store %struct.Panel* %9, %struct.Panel** %pa, align 8, !dbg !3415
  br label %for.cond, !dbg !3416, !llvm.loop !3417

for.end:                                          ; preds = %for.cond
  store %struct.Panel* null, %struct.Panel** %retval, align 8, !dbg !3419
  br label %return, !dbg !3419

return:                                           ; preds = %for.end, %if.then
  %10 = load %struct.Panel*, %struct.Panel** %retval, align 8, !dbg !3420
  ret %struct.Panel* %10, !dbg !3420
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Panel* @uiBeginPanel(%struct.ScrArea* %sa, %struct.ARegion* %ar, %struct.uiBlock* %block, %struct.PanelType* %pt, %struct.Panel* %pa, i8* %r_open) #0 !dbg !3421 {
entry:
  %retval = alloca %struct.Panel*, align 8
  %sa.addr = alloca %struct.ScrArea*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %pt.addr = alloca %struct.PanelType*, align 8
  %pa.addr = alloca %struct.Panel*, align 8
  %r_open.addr = alloca i8*, align 8
  %palast = alloca %struct.Panel*, align 8
  %panext = alloca %struct.Panel*, align 8
  %drawname = alloca i8*, align 8
  %idname = alloca i8*, align 8
  %newpanel = alloca i8, align 1
  %align = alloca i32, align 4
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !3425, metadata !DIExpression()), !dbg !3426
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3427, metadata !DIExpression()), !dbg !3428
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3429, metadata !DIExpression()), !dbg !3430
  store %struct.PanelType* %pt, %struct.PanelType** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PanelType** %pt.addr, metadata !3431, metadata !DIExpression()), !dbg !3432
  store %struct.Panel* %pa, %struct.Panel** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa.addr, metadata !3433, metadata !DIExpression()), !dbg !3434
  store i8* %r_open, i8** %r_open.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_open.addr, metadata !3435, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.declare(metadata %struct.Panel** %palast, metadata !3437, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.declare(metadata %struct.Panel** %panext, metadata !3439, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.declare(metadata i8** %drawname, metadata !3441, metadata !DIExpression()), !dbg !3442
  %0 = load %struct.PanelType*, %struct.PanelType** %pt.addr, align 8, !dbg !3443
  %label = getelementptr inbounds %struct.PanelType, %struct.PanelType* %0, i32 0, i32 3, !dbg !3443
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %label, i64 0, i64 0, !dbg !3443
  store i8* %arraydecay, i8** %drawname, align 8, !dbg !3442
  call void @llvm.dbg.declare(metadata i8** %idname, metadata !3444, metadata !DIExpression()), !dbg !3445
  %1 = load %struct.PanelType*, %struct.PanelType** %pt.addr, align 8, !dbg !3446
  %idname1 = getelementptr inbounds %struct.PanelType, %struct.PanelType* %1, i32 0, i32 2, !dbg !3447
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !3446
  store i8* %arraydecay2, i8** %idname, align 8, !dbg !3445
  call void @llvm.dbg.declare(metadata i8* %newpanel, metadata !3448, metadata !DIExpression()), !dbg !3450
  %2 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3451
  %cmp = icmp eq %struct.Panel* %2, null, !dbg !3452
  %conv = zext i1 %cmp to i32, !dbg !3452
  %conv3 = trunc i32 %conv to i8, !dbg !3453
  store i8 %conv3, i8* %newpanel, align 1, !dbg !3450
  call void @llvm.dbg.declare(metadata i32* %align, metadata !3454, metadata !DIExpression()), !dbg !3455
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3456
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3457
  %call = call i32 @panel_aligned(%struct.ScrArea* %3, %struct.ARegion* %4), !dbg !3458
  store i32 %call, i32* %align, align 4, !dbg !3455
  %5 = load i8, i8* %newpanel, align 1, !dbg !3459
  %tobool = icmp ne i8 %5, 0, !dbg !3459
  br i1 %tobool, label %if.else, label %if.then, !dbg !3461

if.then:                                          ; preds = %entry
  %6 = load %struct.PanelType*, %struct.PanelType** %pt.addr, align 8, !dbg !3462
  %7 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3464
  %type = getelementptr inbounds %struct.Panel, %struct.Panel* %7, i32 0, i32 2, !dbg !3465
  store %struct.PanelType* %6, %struct.PanelType** %type, align 8, !dbg !3466
  br label %if.end27, !dbg !3467

if.else:                                          ; preds = %entry
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3468
  %call4 = call i8* %8(i64 272, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)), !dbg !3468
  %9 = bitcast i8* %call4 to %struct.Panel*, !dbg !3468
  store %struct.Panel* %9, %struct.Panel** %pa.addr, align 8, !dbg !3470
  %10 = load %struct.PanelType*, %struct.PanelType** %pt.addr, align 8, !dbg !3471
  %11 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3472
  %type5 = getelementptr inbounds %struct.Panel, %struct.Panel* %11, i32 0, i32 2, !dbg !3473
  store %struct.PanelType* %10, %struct.PanelType** %type5, align 8, !dbg !3474
  %12 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3475
  %panelname = getelementptr inbounds %struct.Panel, %struct.Panel* %12, i32 0, i32 4, !dbg !3476
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %panelname, i64 0, i64 0, !dbg !3475
  %13 = load i8*, i8** %idname, align 8, !dbg !3477
  %call7 = call i8* @BLI_strncpy(i8* %arraydecay6, i8* %13, i64 64), !dbg !3478
  %14 = load %struct.PanelType*, %struct.PanelType** %pt.addr, align 8, !dbg !3479
  %flag = getelementptr inbounds %struct.PanelType, %struct.PanelType* %14, i32 0, i32 9, !dbg !3481
  %15 = load i32, i32* %flag, align 8, !dbg !3481
  %and = and i32 %15, 1, !dbg !3482
  %tobool8 = icmp ne i32 %and, 0, !dbg !3482
  br i1 %tobool8, label %if.then9, label %if.end21, !dbg !3483

if.then9:                                         ; preds = %if.else
  %16 = load i32, i32* %align, align 4, !dbg !3484
  %cmp10 = icmp eq i32 %16, 2, !dbg !3487
  br i1 %cmp10, label %if.then12, label %if.else16, !dbg !3488

if.then12:                                        ; preds = %if.then9
  %17 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3489
  %flag13 = getelementptr inbounds %struct.Panel, %struct.Panel* %17, i32 0, i32 13, !dbg !3490
  %18 = load i16, i16* %flag13, align 4, !dbg !3491
  %conv14 = sext i16 %18 to i32, !dbg !3491
  %or = or i32 %conv14, 4, !dbg !3491
  %conv15 = trunc i32 %or to i16, !dbg !3491
  store i16 %conv15, i16* %flag13, align 4, !dbg !3491
  br label %if.end, !dbg !3489

if.else16:                                        ; preds = %if.then9
  %19 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3492
  %flag17 = getelementptr inbounds %struct.Panel, %struct.Panel* %19, i32 0, i32 13, !dbg !3493
  %20 = load i16, i16* %flag17, align 4, !dbg !3494
  %conv18 = sext i16 %20 to i32, !dbg !3494
  %or19 = or i32 %conv18, 2, !dbg !3494
  %conv20 = trunc i32 %or19 to i16, !dbg !3494
  store i16 %conv20, i16* %flag17, align 4, !dbg !3494
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then12
  br label %if.end21, !dbg !3495

if.end21:                                         ; preds = %if.end, %if.else
  %21 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3496
  %ofsx = getelementptr inbounds %struct.Panel, %struct.Panel* %21, i32 0, i32 7, !dbg !3497
  store i32 0, i32* %ofsx, align 8, !dbg !3498
  %22 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3499
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %22, i32 0, i32 8, !dbg !3500
  store i32 0, i32* %ofsy, align 4, !dbg !3501
  %23 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3502
  %sizex = getelementptr inbounds %struct.Panel, %struct.Panel* %23, i32 0, i32 9, !dbg !3503
  store i32 0, i32* %sizex, align 8, !dbg !3504
  %24 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3505
  %sizey = getelementptr inbounds %struct.Panel, %struct.Panel* %24, i32 0, i32 10, !dbg !3506
  store i32 0, i32* %sizey, align 4, !dbg !3507
  %25 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3508
  %runtime_flag = getelementptr inbounds %struct.Panel, %struct.Panel* %25, i32 0, i32 14, !dbg !3509
  %26 = load i16, i16* %runtime_flag, align 2, !dbg !3510
  %conv22 = sext i16 %26 to i32, !dbg !3510
  %or23 = or i32 %conv22, 16, !dbg !3510
  %conv24 = trunc i32 %or23 to i16, !dbg !3510
  store i16 %conv24, i16* %runtime_flag, align 2, !dbg !3510
  %27 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3511
  %panels = getelementptr inbounds %struct.ARegion, %struct.ARegion* %27, i32 0, i32 22, !dbg !3512
  %28 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3513
  %29 = bitcast %struct.Panel* %28 to i8*, !dbg !3513
  call void @BLI_addtail(%struct.ListBase* %panels, i8* %29), !dbg !3514
  %30 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3515
  %tabname = getelementptr inbounds %struct.Panel, %struct.Panel* %30, i32 0, i32 5, !dbg !3516
  %arraydecay25 = getelementptr inbounds [64 x i8], [64 x i8]* %tabname, i64 0, i64 0, !dbg !3515
  %31 = load i8*, i8** %idname, align 8, !dbg !3517
  %call26 = call i8* @BLI_strncpy(i8* %arraydecay25, i8* %31, i64 64), !dbg !3518
  br label %if.end27

if.end27:                                         ; preds = %if.end21, %if.then
  %32 = load %struct.PanelType*, %struct.PanelType** %pt.addr, align 8, !dbg !3519
  %flag28 = getelementptr inbounds %struct.PanelType, %struct.PanelType* %32, i32 0, i32 9, !dbg !3521
  %33 = load i32, i32* %flag28, align 8, !dbg !3521
  %and29 = and i32 %33, 2, !dbg !3522
  %tobool30 = icmp ne i32 %and29, 0, !dbg !3522
  br i1 %tobool30, label %land.lhs.true, label %if.end42, !dbg !3523

land.lhs.true:                                    ; preds = %if.end27
  %34 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3524
  %flag31 = getelementptr inbounds %struct.Panel, %struct.Panel* %34, i32 0, i32 13, !dbg !3525
  %35 = load i16, i16* %flag31, align 4, !dbg !3525
  %conv32 = sext i16 %35 to i32, !dbg !3524
  %and33 = and i32 %conv32, 6, !dbg !3526
  %tobool34 = icmp ne i32 %and33, 0, !dbg !3526
  br i1 %tobool34, label %if.then35, label %if.end42, !dbg !3527

if.then35:                                        ; preds = %land.lhs.true
  %36 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3528
  %flag36 = getelementptr inbounds %struct.Panel, %struct.Panel* %36, i32 0, i32 13, !dbg !3530
  %37 = load i16, i16* %flag36, align 4, !dbg !3531
  %conv37 = sext i16 %37 to i32, !dbg !3531
  %and38 = and i32 %conv37, -7, !dbg !3531
  %conv39 = trunc i32 %and38 to i16, !dbg !3531
  store i16 %conv39, i16* %flag36, align 4, !dbg !3531
  %38 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3532
  %sizex40 = getelementptr inbounds %struct.Panel, %struct.Panel* %38, i32 0, i32 9, !dbg !3533
  store i32 0, i32* %sizex40, align 8, !dbg !3534
  %39 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3535
  %sizey41 = getelementptr inbounds %struct.Panel, %struct.Panel* %39, i32 0, i32 10, !dbg !3536
  store i32 0, i32* %sizey41, align 4, !dbg !3537
  br label %if.end42, !dbg !3538

if.end42:                                         ; preds = %if.then35, %land.lhs.true, %if.end27
  %40 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3539
  %drawname43 = getelementptr inbounds %struct.Panel, %struct.Panel* %40, i32 0, i32 6, !dbg !3540
  %arraydecay44 = getelementptr inbounds [64 x i8], [64 x i8]* %drawname43, i64 0, i64 0, !dbg !3539
  %41 = load i8*, i8** %drawname, align 8, !dbg !3541
  %call45 = call i8* @BLI_strncpy(i8* %arraydecay44, i8* %41, i64 64), !dbg !3542
  %42 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3543
  %panels46 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %42, i32 0, i32 22, !dbg !3545
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels46, i32 0, i32 0, !dbg !3546
  %43 = load i8*, i8** %first, align 8, !dbg !3546
  %44 = bitcast i8* %43 to %struct.Panel*, !dbg !3543
  store %struct.Panel* %44, %struct.Panel** %palast, align 8, !dbg !3547
  br label %for.cond, !dbg !3548

for.cond:                                         ; preds = %for.inc, %if.end42
  %45 = load %struct.Panel*, %struct.Panel** %palast, align 8, !dbg !3549
  %tobool47 = icmp ne %struct.Panel* %45, null, !dbg !3551
  br i1 %tobool47, label %for.body, label %for.end, !dbg !3551

for.body:                                         ; preds = %for.cond
  %46 = load %struct.Panel*, %struct.Panel** %palast, align 8, !dbg !3552
  %runtime_flag48 = getelementptr inbounds %struct.Panel, %struct.Panel* %46, i32 0, i32 14, !dbg !3554
  %47 = load i16, i16* %runtime_flag48, align 2, !dbg !3554
  %conv49 = sext i16 %47 to i32, !dbg !3552
  %and50 = and i32 %conv49, 1, !dbg !3555
  %tobool51 = icmp ne i32 %and50, 0, !dbg !3555
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !3556

if.then52:                                        ; preds = %for.body
  br label %for.end, !dbg !3557

if.end53:                                         ; preds = %for.body
  br label %for.inc, !dbg !3558

for.inc:                                          ; preds = %if.end53
  %48 = load %struct.Panel*, %struct.Panel** %palast, align 8, !dbg !3559
  %next = getelementptr inbounds %struct.Panel, %struct.Panel* %48, i32 0, i32 0, !dbg !3560
  %49 = load %struct.Panel*, %struct.Panel** %next, align 8, !dbg !3560
  store %struct.Panel* %49, %struct.Panel** %palast, align 8, !dbg !3561
  br label %for.cond, !dbg !3562, !llvm.loop !3563

for.end:                                          ; preds = %if.then52, %for.cond
  %50 = load i8, i8* %newpanel, align 1, !dbg !3565
  %tobool54 = icmp ne i8 %50, 0, !dbg !3565
  br i1 %tobool54, label %if.then55, label %if.end76, !dbg !3567

if.then55:                                        ; preds = %for.end
  %51 = load %struct.Panel*, %struct.Panel** %palast, align 8, !dbg !3568
  %tobool56 = icmp ne %struct.Panel* %51, null, !dbg !3570
  br i1 %tobool56, label %cond.true, label %cond.false, !dbg !3570

cond.true:                                        ; preds = %if.then55
  %52 = load %struct.Panel*, %struct.Panel** %palast, align 8, !dbg !3571
  %sortorder = getelementptr inbounds %struct.Panel, %struct.Panel* %52, i32 0, i32 17, !dbg !3572
  %53 = load i32, i32* %sortorder, align 4, !dbg !3572
  %add = add nsw i32 %53, 1, !dbg !3573
  br label %cond.end, !dbg !3570

cond.false:                                       ; preds = %if.then55
  br label %cond.end, !dbg !3570

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ 0, %cond.false ], !dbg !3570
  %54 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3574
  %sortorder57 = getelementptr inbounds %struct.Panel, %struct.Panel* %54, i32 0, i32 17, !dbg !3575
  store i32 %cond, i32* %sortorder57, align 4, !dbg !3576
  %55 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3577
  %panels58 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %55, i32 0, i32 22, !dbg !3579
  %first59 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels58, i32 0, i32 0, !dbg !3580
  %56 = load i8*, i8** %first59, align 8, !dbg !3580
  %57 = bitcast i8* %56 to %struct.Panel*, !dbg !3577
  store %struct.Panel* %57, %struct.Panel** %panext, align 8, !dbg !3581
  br label %for.cond60, !dbg !3582

for.cond60:                                       ; preds = %for.inc73, %cond.end
  %58 = load %struct.Panel*, %struct.Panel** %panext, align 8, !dbg !3583
  %tobool61 = icmp ne %struct.Panel* %58, null, !dbg !3585
  br i1 %tobool61, label %for.body62, label %for.end75, !dbg !3585

for.body62:                                       ; preds = %for.cond60
  %59 = load %struct.Panel*, %struct.Panel** %panext, align 8, !dbg !3586
  %60 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3588
  %cmp63 = icmp ne %struct.Panel* %59, %60, !dbg !3589
  br i1 %cmp63, label %land.lhs.true65, label %if.end72, !dbg !3590

land.lhs.true65:                                  ; preds = %for.body62
  %61 = load %struct.Panel*, %struct.Panel** %panext, align 8, !dbg !3591
  %sortorder66 = getelementptr inbounds %struct.Panel, %struct.Panel* %61, i32 0, i32 17, !dbg !3592
  %62 = load i32, i32* %sortorder66, align 4, !dbg !3592
  %63 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3593
  %sortorder67 = getelementptr inbounds %struct.Panel, %struct.Panel* %63, i32 0, i32 17, !dbg !3594
  %64 = load i32, i32* %sortorder67, align 4, !dbg !3594
  %cmp68 = icmp sge i32 %62, %64, !dbg !3595
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !3596

if.then70:                                        ; preds = %land.lhs.true65
  %65 = load %struct.Panel*, %struct.Panel** %panext, align 8, !dbg !3597
  %sortorder71 = getelementptr inbounds %struct.Panel, %struct.Panel* %65, i32 0, i32 17, !dbg !3598
  %66 = load i32, i32* %sortorder71, align 4, !dbg !3599
  %inc = add nsw i32 %66, 1, !dbg !3599
  store i32 %inc, i32* %sortorder71, align 4, !dbg !3599
  br label %if.end72, !dbg !3597

if.end72:                                         ; preds = %if.then70, %land.lhs.true65, %for.body62
  br label %for.inc73, !dbg !3594

for.inc73:                                        ; preds = %if.end72
  %67 = load %struct.Panel*, %struct.Panel** %panext, align 8, !dbg !3600
  %next74 = getelementptr inbounds %struct.Panel, %struct.Panel* %67, i32 0, i32 0, !dbg !3601
  %68 = load %struct.Panel*, %struct.Panel** %next74, align 8, !dbg !3601
  store %struct.Panel* %68, %struct.Panel** %panext, align 8, !dbg !3602
  br label %for.cond60, !dbg !3603, !llvm.loop !3604

for.end75:                                        ; preds = %for.cond60
  br label %if.end76, !dbg !3606

if.end76:                                         ; preds = %for.end75, %for.end
  %69 = load %struct.Panel*, %struct.Panel** %palast, align 8, !dbg !3607
  %tobool77 = icmp ne %struct.Panel* %69, null, !dbg !3607
  br i1 %tobool77, label %if.then78, label %if.end83, !dbg !3609

if.then78:                                        ; preds = %if.end76
  %70 = load %struct.Panel*, %struct.Panel** %palast, align 8, !dbg !3610
  %runtime_flag79 = getelementptr inbounds %struct.Panel, %struct.Panel* %70, i32 0, i32 14, !dbg !3611
  %71 = load i16, i16* %runtime_flag79, align 2, !dbg !3612
  %conv80 = sext i16 %71 to i32, !dbg !3612
  %and81 = and i32 %conv80, -2, !dbg !3612
  %conv82 = trunc i32 %and81 to i16, !dbg !3612
  store i16 %conv82, i16* %runtime_flag79, align 2, !dbg !3612
  br label %if.end83, !dbg !3610

if.end83:                                         ; preds = %if.then78, %if.end76
  %72 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3613
  %73 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3614
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %73, i32 0, i32 3, !dbg !3615
  store %struct.Panel* %72, %struct.Panel** %panel, align 8, !dbg !3616
  %74 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3617
  %runtime_flag84 = getelementptr inbounds %struct.Panel, %struct.Panel* %74, i32 0, i32 14, !dbg !3618
  %75 = load i16, i16* %runtime_flag84, align 2, !dbg !3619
  %conv85 = sext i16 %75 to i32, !dbg !3619
  %or86 = or i32 %conv85, 3, !dbg !3619
  %conv87 = trunc i32 %or86 to i16, !dbg !3619
  store i16 %conv87, i16* %runtime_flag84, align 2, !dbg !3619
  %76 = load i8*, i8** %r_open.addr, align 8, !dbg !3620
  store i8 0, i8* %76, align 1, !dbg !3621
  %77 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3622
  %paneltab = getelementptr inbounds %struct.Panel, %struct.Panel* %77, i32 0, i32 18, !dbg !3624
  %78 = load %struct.Panel*, %struct.Panel** %paneltab, align 8, !dbg !3624
  %tobool88 = icmp ne %struct.Panel* %78, null, !dbg !3622
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !3625

if.then89:                                        ; preds = %if.end83
  %79 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3626
  store %struct.Panel* %79, %struct.Panel** %retval, align 8, !dbg !3627
  br label %return, !dbg !3627

if.end90:                                         ; preds = %if.end83
  %80 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3628
  %flag91 = getelementptr inbounds %struct.Panel, %struct.Panel* %80, i32 0, i32 13, !dbg !3630
  %81 = load i16, i16* %flag91, align 4, !dbg !3630
  %conv92 = sext i16 %81 to i32, !dbg !3628
  %and93 = and i32 %conv92, 6, !dbg !3631
  %tobool94 = icmp ne i32 %and93, 0, !dbg !3631
  br i1 %tobool94, label %if.then95, label %if.end96, !dbg !3632

if.then95:                                        ; preds = %if.end90
  %82 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3633
  store %struct.Panel* %82, %struct.Panel** %retval, align 8, !dbg !3634
  br label %return, !dbg !3634

if.end96:                                         ; preds = %if.end90
  %83 = load i8*, i8** %r_open.addr, align 8, !dbg !3635
  store i8 1, i8* %83, align 1, !dbg !3636
  %84 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !3637
  store %struct.Panel* %84, %struct.Panel** %retval, align 8, !dbg !3638
  br label %return, !dbg !3638

return:                                           ; preds = %if.end96, %if.then95, %if.then89
  %85 = load %struct.Panel*, %struct.Panel** %retval, align 8, !dbg !3639
  ret %struct.Panel* %85, !dbg !3639
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @panel_aligned(%struct.ScrArea* %sa, %struct.ARegion* %ar) #0 !dbg !3640 {
entry:
  %retval = alloca i32, align 4
  %sa.addr = alloca %struct.ScrArea*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %sbuts = alloca %struct.SpaceButs*, align 8
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !3643, metadata !DIExpression()), !dbg !3644
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !3645, metadata !DIExpression()), !dbg !3646
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3647
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %0, i32 0, i32 8, !dbg !3649
  %1 = load i8, i8* %spacetype, align 8, !dbg !3649
  %conv = zext i8 %1 to i32, !dbg !3647
  %cmp = icmp eq i32 %conv, 4, !dbg !3650
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3651

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3652
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 8, !dbg !3653
  %3 = load i16, i16* %regiontype, align 2, !dbg !3653
  %conv2 = sext i16 %3 to i32, !dbg !3652
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !3654
  br i1 %cmp3, label %if.then, label %if.else, !dbg !3655

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.SpaceButs** %sbuts, metadata !3656, metadata !DIExpression()), !dbg !3686
  %4 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3687
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 19, !dbg !3688
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !3689
  %5 = load i8*, i8** %first, align 8, !dbg !3689
  %6 = bitcast i8* %5 to %struct.SpaceButs*, !dbg !3687
  store %struct.SpaceButs* %6, %struct.SpaceButs** %sbuts, align 8, !dbg !3686
  %7 = load %struct.SpaceButs*, %struct.SpaceButs** %sbuts, align 8, !dbg !3690
  %align = getelementptr inbounds %struct.SpaceButs, %struct.SpaceButs* %7, i32 0, i32 11, !dbg !3691
  %8 = load i16, i16* %align, align 8, !dbg !3691
  %conv5 = sext i16 %8 to i32, !dbg !3690
  store i32 %conv5, i32* %retval, align 4, !dbg !3692
  br label %return, !dbg !3692

if.else:                                          ; preds = %land.lhs.true, %entry
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3693
  %spacetype6 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 8, !dbg !3695
  %10 = load i8, i8* %spacetype6, align 8, !dbg !3695
  %conv7 = zext i8 %10 to i32, !dbg !3693
  %cmp8 = icmp eq i32 %conv7, 19, !dbg !3696
  br i1 %cmp8, label %land.lhs.true10, label %if.else16, !dbg !3697

land.lhs.true10:                                  ; preds = %if.else
  %11 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3698
  %regiontype11 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %11, i32 0, i32 8, !dbg !3699
  %12 = load i16, i16* %regiontype11, align 2, !dbg !3699
  %conv12 = sext i16 %12 to i32, !dbg !3698
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !3700
  br i1 %cmp13, label %if.then15, label %if.else16, !dbg !3701

if.then15:                                        ; preds = %land.lhs.true10
  store i32 2, i32* %retval, align 4, !dbg !3702
  br label %return, !dbg !3702

if.else16:                                        ; preds = %land.lhs.true10, %if.else
  %13 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3703
  %spacetype17 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %13, i32 0, i32 8, !dbg !3705
  %14 = load i8, i8* %spacetype17, align 8, !dbg !3705
  %conv18 = zext i8 %14 to i32, !dbg !3703
  %cmp19 = icmp eq i32 %conv18, 5, !dbg !3706
  br i1 %cmp19, label %land.lhs.true21, label %if.else27, !dbg !3707

land.lhs.true21:                                  ; preds = %if.else16
  %15 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3708
  %regiontype22 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %15, i32 0, i32 8, !dbg !3709
  %16 = load i16, i16* %regiontype22, align 2, !dbg !3709
  %conv23 = sext i16 %16 to i32, !dbg !3708
  %cmp24 = icmp eq i32 %conv23, 2, !dbg !3710
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !3711

if.then26:                                        ; preds = %land.lhs.true21
  store i32 2, i32* %retval, align 4, !dbg !3712
  br label %return, !dbg !3712

if.else27:                                        ; preds = %land.lhs.true21, %if.else16
  %17 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !3713
  %spacetype28 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %17, i32 0, i32 8, !dbg !3715
  %18 = load i8, i8* %spacetype28, align 8, !dbg !3715
  %conv29 = zext i8 %18 to i32, !dbg !3713
  %cmp30 = icmp eq i32 %conv29, 6, !dbg !3716
  br i1 %cmp30, label %land.lhs.true32, label %if.else38, !dbg !3717

land.lhs.true32:                                  ; preds = %if.else27
  %19 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3718
  %regiontype33 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %19, i32 0, i32 8, !dbg !3719
  %20 = load i16, i16* %regiontype33, align 2, !dbg !3719
  %conv34 = sext i16 %20 to i32, !dbg !3718
  %cmp35 = icmp eq i32 %conv34, 7, !dbg !3720
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !3721

if.then37:                                        ; preds = %land.lhs.true32
  store i32 2, i32* %retval, align 4, !dbg !3722
  br label %return, !dbg !3722

if.else38:                                        ; preds = %land.lhs.true32, %if.else27
  %21 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3723
  %regiontype39 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %21, i32 0, i32 8, !dbg !3723
  %22 = load i16, i16* %regiontype39, align 2, !dbg !3723
  %conv40 = sext i16 %22 to i32, !dbg !3723
  %cmp41 = icmp eq i32 %conv40, 4, !dbg !3723
  br i1 %cmp41, label %if.then52, label %lor.lhs.false, !dbg !3723

lor.lhs.false:                                    ; preds = %if.else38
  %23 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3723
  %regiontype43 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %23, i32 0, i32 8, !dbg !3723
  %24 = load i16, i16* %regiontype43, align 2, !dbg !3723
  %conv44 = sext i16 %24 to i32, !dbg !3723
  %cmp45 = icmp eq i32 %conv44, 5, !dbg !3723
  br i1 %cmp45, label %if.then52, label %lor.lhs.false47, !dbg !3723

lor.lhs.false47:                                  ; preds = %lor.lhs.false
  %25 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !3723
  %regiontype48 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %25, i32 0, i32 8, !dbg !3723
  %26 = load i16, i16* %regiontype48, align 2, !dbg !3723
  %conv49 = sext i16 %26 to i32, !dbg !3723
  %cmp50 = icmp eq i32 %conv49, 6, !dbg !3723
  br i1 %cmp50, label %if.then52, label %if.end, !dbg !3725

if.then52:                                        ; preds = %lor.lhs.false47, %lor.lhs.false, %if.else38
  store i32 2, i32* %retval, align 4, !dbg !3726
  br label %return, !dbg !3726

if.end:                                           ; preds = %lor.lhs.false47
  br label %if.end53

if.end53:                                         ; preds = %if.end
  br label %if.end54

if.end54:                                         ; preds = %if.end53
  br label %if.end55

if.end55:                                         ; preds = %if.end54
  br label %if.end56

if.end56:                                         ; preds = %if.end55
  store i32 0, i32* %retval, align 4, !dbg !3727
  br label %return, !dbg !3727

return:                                           ; preds = %if.end56, %if.then52, %if.then37, %if.then26, %if.then15, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !3728
  ret i32 %27, !dbg !3728
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #3

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiEndPanel(%struct.uiBlock* %block, i32 %width, i32 %height) #0 !dbg !3729 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %pa = alloca %struct.Panel*, align 8
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3732, metadata !DIExpression()), !dbg !3733
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !3734, metadata !DIExpression()), !dbg !3735
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !3736, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !3738, metadata !DIExpression()), !dbg !3739
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3740
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 3, !dbg !3741
  %1 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !3741
  store %struct.Panel* %1, %struct.Panel** %pa, align 8, !dbg !3739
  %2 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3742
  %runtime_flag = getelementptr inbounds %struct.Panel, %struct.Panel* %2, i32 0, i32 14, !dbg !3744
  %3 = load i16, i16* %runtime_flag, align 2, !dbg !3744
  %conv = sext i16 %3 to i32, !dbg !3742
  %and = and i32 %conv, 16, !dbg !3745
  %tobool = icmp ne i32 %and, 0, !dbg !3745
  br i1 %tobool, label %if.then, label %if.else, !dbg !3746

if.then:                                          ; preds = %entry
  %4 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3747
  %runtime_flag1 = getelementptr inbounds %struct.Panel, %struct.Panel* %4, i32 0, i32 14, !dbg !3749
  %5 = load i16, i16* %runtime_flag1, align 2, !dbg !3750
  %conv2 = sext i16 %5 to i32, !dbg !3750
  %and3 = and i32 %conv2, -17, !dbg !3750
  %conv4 = trunc i32 %and3 to i16, !dbg !3750
  store i16 %conv4, i16* %runtime_flag1, align 2, !dbg !3750
  %6 = load i32, i32* %width.addr, align 4, !dbg !3751
  %7 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3752
  %sizex = getelementptr inbounds %struct.Panel, %struct.Panel* %7, i32 0, i32 9, !dbg !3753
  store i32 %6, i32* %sizex, align 8, !dbg !3754
  %8 = load i32, i32* %height.addr, align 4, !dbg !3755
  %9 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3756
  %sizey = getelementptr inbounds %struct.Panel, %struct.Panel* %9, i32 0, i32 10, !dbg !3757
  store i32 %8, i32* %sizey, align 4, !dbg !3758
  br label %if.end35, !dbg !3759

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %width.addr, align 4, !dbg !3760
  %cmp = icmp eq i32 %10, 0, !dbg !3760
  br i1 %cmp, label %lor.lhs.false9, label %lor.lhs.false, !dbg !3760

lor.lhs.false:                                    ; preds = %if.else
  %11 = load i32, i32* %width.addr, align 4, !dbg !3760
  %12 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3760
  %sizex6 = getelementptr inbounds %struct.Panel, %struct.Panel* %12, i32 0, i32 9, !dbg !3760
  %13 = load i32, i32* %sizex6, align 8, !dbg !3760
  %cmp7 = icmp eq i32 %11, %13, !dbg !3760
  br i1 %cmp7, label %lor.lhs.false9, label %if.then16, !dbg !3763

lor.lhs.false9:                                   ; preds = %lor.lhs.false, %if.else
  %14 = load i32, i32* %height.addr, align 4, !dbg !3764
  %cmp10 = icmp eq i32 %14, 0, !dbg !3764
  br i1 %cmp10, label %if.end24, label %lor.lhs.false12, !dbg !3764

lor.lhs.false12:                                  ; preds = %lor.lhs.false9
  %15 = load i32, i32* %height.addr, align 4, !dbg !3764
  %16 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3764
  %sizey13 = getelementptr inbounds %struct.Panel, %struct.Panel* %16, i32 0, i32 10, !dbg !3764
  %17 = load i32, i32* %sizey13, align 4, !dbg !3764
  %cmp14 = icmp eq i32 %15, %17, !dbg !3764
  br i1 %cmp14, label %if.end24, label %if.then16, !dbg !3765

if.then16:                                        ; preds = %lor.lhs.false12, %lor.lhs.false
  %18 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3766
  %runtime_flag17 = getelementptr inbounds %struct.Panel, %struct.Panel* %18, i32 0, i32 14, !dbg !3768
  %19 = load i16, i16* %runtime_flag17, align 2, !dbg !3769
  %conv18 = sext i16 %19 to i32, !dbg !3769
  %or = or i32 %conv18, 8, !dbg !3769
  %conv19 = trunc i32 %or to i16, !dbg !3769
  store i16 %conv19, i16* %runtime_flag17, align 2, !dbg !3769
  %20 = load i32, i32* %height.addr, align 4, !dbg !3770
  %cmp20 = icmp ne i32 %20, 0, !dbg !3772
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !3773

if.then22:                                        ; preds = %if.then16
  %21 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3774
  %sizey23 = getelementptr inbounds %struct.Panel, %struct.Panel* %21, i32 0, i32 10, !dbg !3775
  %22 = load i32, i32* %sizey23, align 4, !dbg !3775
  %23 = load i32, i32* %height.addr, align 4, !dbg !3776
  %sub = sub nsw i32 %22, %23, !dbg !3777
  %24 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3778
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %24, i32 0, i32 8, !dbg !3779
  %25 = load i32, i32* %ofsy, align 4, !dbg !3780
  %add = add nsw i32 %25, %sub, !dbg !3780
  store i32 %add, i32* %ofsy, align 4, !dbg !3780
  br label %if.end, !dbg !3778

if.end:                                           ; preds = %if.then22, %if.then16
  br label %if.end24, !dbg !3781

if.end24:                                         ; preds = %if.end, %lor.lhs.false12, %lor.lhs.false9
  %26 = load i32, i32* %width.addr, align 4, !dbg !3782
  %cmp25 = icmp ne i32 %26, 0, !dbg !3784
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !3785

if.then27:                                        ; preds = %if.end24
  %27 = load i32, i32* %width.addr, align 4, !dbg !3786
  %28 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3787
  %sizex28 = getelementptr inbounds %struct.Panel, %struct.Panel* %28, i32 0, i32 9, !dbg !3788
  store i32 %27, i32* %sizex28, align 8, !dbg !3789
  br label %if.end29, !dbg !3787

if.end29:                                         ; preds = %if.then27, %if.end24
  %29 = load i32, i32* %height.addr, align 4, !dbg !3790
  %cmp30 = icmp ne i32 %29, 0, !dbg !3792
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !3793

if.then32:                                        ; preds = %if.end29
  %30 = load i32, i32* %height.addr, align 4, !dbg !3794
  %31 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !3795
  %sizey33 = getelementptr inbounds %struct.Panel, %struct.Panel* %31, i32 0, i32 10, !dbg !3796
  store i32 %30, i32* %sizey33, align 4, !dbg !3797
  br label %if.end34, !dbg !3795

if.end34:                                         ; preds = %if.then32, %if.end29
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then
  ret void, !dbg !3798
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @UI_DrawTriIcon(float %x, float %y, i8 zeroext %dir) #0 !dbg !3799 {
entry:
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  %dir.addr = alloca i8, align 1
  %f3 = alloca float, align 4
  %f5 = alloca float, align 4
  %f7 = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !3802, metadata !DIExpression()), !dbg !3803
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !3804, metadata !DIExpression()), !dbg !3805
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !3806, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.declare(metadata float* %f3, metadata !3808, metadata !DIExpression()), !dbg !3809
  %0 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !3810
  %conv = sext i16 %0 to i32, !dbg !3811
  %conv1 = sitofp i32 %conv to double, !dbg !3811
  %mul = fmul double 1.500000e-01, %conv1, !dbg !3812
  %conv2 = fptrunc double %mul to float, !dbg !3813
  store float %conv2, float* %f3, align 4, !dbg !3809
  call void @llvm.dbg.declare(metadata float* %f5, metadata !3814, metadata !DIExpression()), !dbg !3815
  %1 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !3816
  %conv3 = sext i16 %1 to i32, !dbg !3817
  %conv4 = sitofp i32 %conv3 to double, !dbg !3817
  %mul5 = fmul double 2.500000e-01, %conv4, !dbg !3818
  %conv6 = fptrunc double %mul5 to float, !dbg !3819
  store float %conv6, float* %f5, align 4, !dbg !3815
  call void @llvm.dbg.declare(metadata float* %f7, metadata !3820, metadata !DIExpression()), !dbg !3821
  %2 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !3822
  %conv7 = sext i16 %2 to i32, !dbg !3823
  %conv8 = sitofp i32 %conv7 to double, !dbg !3823
  %mul9 = fmul double 3.500000e-01, %conv8, !dbg !3824
  %conv10 = fptrunc double %mul9 to float, !dbg !3825
  store float %conv10, float* %f7, align 4, !dbg !3821
  %3 = load i8, i8* %dir.addr, align 1, !dbg !3826
  %conv11 = zext i8 %3 to i32, !dbg !3826
  %cmp = icmp eq i32 %conv11, 104, !dbg !3828
  br i1 %cmp, label %if.then, label %if.else, !dbg !3829

if.then:                                          ; preds = %entry
  %4 = load float, float* %x.addr, align 4, !dbg !3830
  %5 = load float, float* %f3, align 4, !dbg !3832
  %sub = fsub float %4, %5, !dbg !3833
  %6 = load float, float* %y.addr, align 4, !dbg !3834
  %7 = load float, float* %f5, align 4, !dbg !3835
  %sub13 = fsub float %6, %7, !dbg !3836
  %8 = load float, float* %x.addr, align 4, !dbg !3837
  %9 = load float, float* %f3, align 4, !dbg !3838
  %sub14 = fsub float %8, %9, !dbg !3839
  %10 = load float, float* %y.addr, align 4, !dbg !3840
  %11 = load float, float* %f5, align 4, !dbg !3841
  %add = fadd float %10, %11, !dbg !3842
  %12 = load float, float* %x.addr, align 4, !dbg !3843
  %13 = load float, float* %f7, align 4, !dbg !3844
  %add15 = fadd float %12, %13, !dbg !3845
  %14 = load float, float* %y.addr, align 4, !dbg !3846
  call void @ui_draw_anti_tria(float %sub, float %sub13, float %sub14, float %add, float %add15, float %14), !dbg !3847
  br label %if.end31, !dbg !3848

if.else:                                          ; preds = %entry
  %15 = load i8, i8* %dir.addr, align 1, !dbg !3849
  %conv16 = zext i8 %15 to i32, !dbg !3849
  %cmp17 = icmp eq i32 %conv16, 116, !dbg !3851
  br i1 %cmp17, label %if.then19, label %if.else25, !dbg !3852

if.then19:                                        ; preds = %if.else
  %16 = load float, float* %x.addr, align 4, !dbg !3853
  %17 = load float, float* %f5, align 4, !dbg !3855
  %sub20 = fsub float %16, %17, !dbg !3856
  %18 = load float, float* %y.addr, align 4, !dbg !3857
  %19 = load float, float* %f7, align 4, !dbg !3858
  %sub21 = fsub float %18, %19, !dbg !3859
  %20 = load float, float* %x.addr, align 4, !dbg !3860
  %21 = load float, float* %f5, align 4, !dbg !3861
  %add22 = fadd float %20, %21, !dbg !3862
  %22 = load float, float* %y.addr, align 4, !dbg !3863
  %23 = load float, float* %f7, align 4, !dbg !3864
  %sub23 = fsub float %22, %23, !dbg !3865
  %24 = load float, float* %x.addr, align 4, !dbg !3866
  %25 = load float, float* %y.addr, align 4, !dbg !3867
  %26 = load float, float* %f3, align 4, !dbg !3868
  %add24 = fadd float %25, %26, !dbg !3869
  call void @ui_draw_anti_tria(float %sub20, float %sub21, float %add22, float %sub23, float %24, float %add24), !dbg !3870
  br label %if.end, !dbg !3871

if.else25:                                        ; preds = %if.else
  %27 = load float, float* %x.addr, align 4, !dbg !3872
  %28 = load float, float* %f5, align 4, !dbg !3874
  %sub26 = fsub float %27, %28, !dbg !3875
  %29 = load float, float* %y.addr, align 4, !dbg !3876
  %30 = load float, float* %f3, align 4, !dbg !3877
  %add27 = fadd float %29, %30, !dbg !3878
  %31 = load float, float* %x.addr, align 4, !dbg !3879
  %32 = load float, float* %f5, align 4, !dbg !3880
  %add28 = fadd float %31, %32, !dbg !3881
  %33 = load float, float* %y.addr, align 4, !dbg !3882
  %34 = load float, float* %f3, align 4, !dbg !3883
  %add29 = fadd float %33, %34, !dbg !3884
  %35 = load float, float* %x.addr, align 4, !dbg !3885
  %36 = load float, float* %y.addr, align 4, !dbg !3886
  %37 = load float, float* %f7, align 4, !dbg !3887
  %sub30 = fsub float %36, %37, !dbg !3888
  call void @ui_draw_anti_tria(float %sub26, float %add27, float %add28, float %add29, float %35, float %sub30), !dbg !3889
  br label %if.end

if.end:                                           ; preds = %if.else25, %if.then19
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then
  ret void, !dbg !3890
}

declare dso_local void @ui_draw_anti_tria(float, float, float, float, float, float) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @ui_draw_aligned_panel(%struct.uiStyle* %style, %struct.uiBlock* %block, %struct.rcti* %rect, i8 zeroext %show_pin) #0 !dbg !3891 {
entry:
  %style.addr = alloca %struct.uiStyle*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %show_pin.addr = alloca i8, align 1
  %panel = alloca %struct.Panel*, align 8
  %headrect = alloca %struct.rcti, align 4
  %itemrect = alloca %struct.rctf, align 4
  %ofsx = alloca i32, align 4
  %minx = alloca float, align 4
  %maxx = alloca float, align 4
  %y = alloca float, align 4
  store %struct.uiStyle* %style, %struct.uiStyle** %style.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style.addr, metadata !3935, metadata !DIExpression()), !dbg !3936
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !3937, metadata !DIExpression()), !dbg !3938
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !3939, metadata !DIExpression()), !dbg !3940
  store i8 %show_pin, i8* %show_pin.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %show_pin.addr, metadata !3941, metadata !DIExpression()), !dbg !3942
  call void @llvm.dbg.declare(metadata %struct.Panel** %panel, metadata !3943, metadata !DIExpression()), !dbg !3944
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3945
  %panel1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 3, !dbg !3946
  %1 = load %struct.Panel*, %struct.Panel** %panel1, align 8, !dbg !3946
  store %struct.Panel* %1, %struct.Panel** %panel, align 8, !dbg !3944
  call void @llvm.dbg.declare(metadata %struct.rcti* %headrect, metadata !3947, metadata !DIExpression()), !dbg !3948
  call void @llvm.dbg.declare(metadata %struct.rctf* %itemrect, metadata !3949, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.declare(metadata i32* %ofsx, metadata !3951, metadata !DIExpression()), !dbg !3952
  %2 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !3953
  %paneltab = getelementptr inbounds %struct.Panel, %struct.Panel* %2, i32 0, i32 18, !dbg !3955
  %3 = load %struct.Panel*, %struct.Panel** %paneltab, align 8, !dbg !3955
  %tobool = icmp ne %struct.Panel* %3, null, !dbg !3953
  br i1 %tobool, label %if.then, label %if.end, !dbg !3956

if.then:                                          ; preds = %entry
  br label %return, !dbg !3957

if.end:                                           ; preds = %entry
  %4 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !3958
  %type = getelementptr inbounds %struct.Panel, %struct.Panel* %4, i32 0, i32 2, !dbg !3960
  %5 = load %struct.PanelType*, %struct.PanelType** %type, align 8, !dbg !3960
  %tobool2 = icmp ne %struct.PanelType* %5, null, !dbg !3958
  br i1 %tobool2, label %land.lhs.true, label %if.end6, !dbg !3961

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !3962
  %type3 = getelementptr inbounds %struct.Panel, %struct.Panel* %6, i32 0, i32 2, !dbg !3963
  %7 = load %struct.PanelType*, %struct.PanelType** %type3, align 8, !dbg !3963
  %flag = getelementptr inbounds %struct.PanelType, %struct.PanelType* %7, i32 0, i32 9, !dbg !3964
  %8 = load i32, i32* %flag, align 8, !dbg !3964
  %and = and i32 %8, 2, !dbg !3965
  %tobool4 = icmp ne i32 %and, 0, !dbg !3965
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !3966

if.then5:                                         ; preds = %land.lhs.true
  br label %return, !dbg !3967

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %9 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3968
  %10 = bitcast %struct.rcti* %headrect to i8*, !dbg !3969
  %11 = bitcast %struct.rcti* %9 to i8*, !dbg !3969
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 16, i1 false), !dbg !3969
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 3, !dbg !3970
  %12 = load i32, i32* %ymax, align 4, !dbg !3970
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 2, !dbg !3971
  store i32 %12, i32* %ymin, align 4, !dbg !3972
  %ymin7 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 2, !dbg !3973
  %13 = load i32, i32* %ymin7, align 4, !dbg !3973
  %conv = sitofp i32 %13 to double, !dbg !3974
  %14 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !3975
  %conv8 = sext i16 %14 to i32, !dbg !3975
  %add = add nsw i32 %conv8, 4, !dbg !3975
  %conv9 = sitofp i32 %add to float, !dbg !3975
  %15 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !3976
  %aspect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %15, i32 0, i32 12, !dbg !3977
  %16 = load float, float* %aspect, align 8, !dbg !3977
  %div = fdiv float %conv9, %16, !dbg !3978
  %add10 = fadd float %div, 0x3F50624DE0000000, !dbg !3979
  %conv11 = fpext float %add10 to double, !dbg !3975
  %17 = call double @llvm.floor.f64(double %conv11), !dbg !3980
  %add12 = fadd double %conv, %17, !dbg !3981
  %conv13 = fptosi double %add12 to i32, !dbg !3974
  %ymax14 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 3, !dbg !3982
  store i32 %conv13, i32* %ymax14, align 4, !dbg !3983
  call void @llvm.dbg.declare(metadata float* %minx, metadata !3984, metadata !DIExpression()), !dbg !3986
  %18 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3987
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %18, i32 0, i32 0, !dbg !3988
  %19 = load i32, i32* %xmin, align 4, !dbg !3988
  %conv15 = sitofp i32 %19 to float, !dbg !3987
  store float %conv15, float* %minx, align 4, !dbg !3986
  call void @llvm.dbg.declare(metadata float* %maxx, metadata !3989, metadata !DIExpression()), !dbg !3990
  %20 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !3991
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %20, i32 0, i32 1, !dbg !3992
  %21 = load i32, i32* %xmax, align 4, !dbg !3992
  %conv16 = sitofp i32 %21 to float, !dbg !3991
  store float %conv16, float* %maxx, align 4, !dbg !3990
  call void @llvm.dbg.declare(metadata float* %y, metadata !3993, metadata !DIExpression()), !dbg !3994
  %ymax17 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 3, !dbg !3995
  %22 = load i32, i32* %ymax17, align 4, !dbg !3995
  %conv18 = sitofp i32 %22 to float, !dbg !3996
  store float %conv18, float* %y, align 4, !dbg !3994
  call void @glEnable(i32 3042), !dbg !3997
  %call = call i32 @UI_GetThemeValue(i32 16), !dbg !3998
  %tobool19 = icmp ne i32 %call, 0, !dbg !3998
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !4000

if.then20:                                        ; preds = %if.end6
  call void @UI_ThemeColor4(i32 14), !dbg !4001
  %23 = load float, float* %minx, align 4, !dbg !4003
  %ymin21 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 2, !dbg !4004
  %24 = load i32, i32* %ymin21, align 4, !dbg !4004
  %add22 = add nsw i32 %24, 1, !dbg !4005
  %conv23 = sitofp i32 %add22 to float, !dbg !4006
  %25 = load float, float* %maxx, align 4, !dbg !4007
  %26 = load float, float* %y, align 4, !dbg !4008
  call void @glRectf(float %23, float %conv23, float %25, float %26), !dbg !4009
  %27 = load float, float* %minx, align 4, !dbg !4010
  %28 = load float, float* %y, align 4, !dbg !4011
  %29 = load float, float* %maxx, align 4, !dbg !4012
  %30 = load float, float* %y, align 4, !dbg !4013
  call void @fdrawline(float %27, float %28, float %29, float %30), !dbg !4014
  %31 = load float, float* %minx, align 4, !dbg !4015
  %32 = load float, float* %y, align 4, !dbg !4016
  %33 = load float, float* %maxx, align 4, !dbg !4017
  %34 = load float, float* %y, align 4, !dbg !4018
  call void @fdrawline(float %31, float %32, float %33, float %34), !dbg !4019
  br label %if.end36, !dbg !4020

if.else:                                          ; preds = %if.end6
  %35 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4021
  %runtime_flag = getelementptr inbounds %struct.Panel, %struct.Panel* %35, i32 0, i32 14, !dbg !4023
  %36 = load i16, i16* %runtime_flag, align 2, !dbg !4023
  %conv24 = sext i16 %36 to i32, !dbg !4021
  %and25 = and i32 %conv24, 32, !dbg !4024
  %tobool26 = icmp ne i32 %and25, 0, !dbg !4024
  br i1 %tobool26, label %if.end35, label %if.then27, !dbg !4025

if.then27:                                        ; preds = %if.else
  %37 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4026
  %aspect28 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %37, i32 0, i32 12, !dbg !4028
  %38 = load float, float* %aspect28, align 8, !dbg !4028
  %div29 = fdiv float 5.000000e+00, %38, !dbg !4029
  %39 = load float, float* %minx, align 4, !dbg !4030
  %add30 = fadd float %39, %div29, !dbg !4030
  store float %add30, float* %minx, align 4, !dbg !4030
  %40 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4031
  %aspect31 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %40, i32 0, i32 12, !dbg !4032
  %41 = load float, float* %aspect31, align 8, !dbg !4032
  %div32 = fdiv float 5.000000e+00, %41, !dbg !4033
  %42 = load float, float* %maxx, align 4, !dbg !4034
  %sub = fsub float %42, %div32, !dbg !4034
  store float %sub, float* %maxx, align 4, !dbg !4034
  call void @glColor4f(float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 5.000000e-01), !dbg !4035
  %43 = load float, float* %minx, align 4, !dbg !4036
  %44 = load float, float* %y, align 4, !dbg !4037
  %45 = load float, float* %maxx, align 4, !dbg !4038
  %46 = load float, float* %y, align 4, !dbg !4039
  call void @fdrawline(float %43, float %44, float %45, float %46), !dbg !4040
  call void @glColor4f(float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 2.500000e-01), !dbg !4041
  %47 = load float, float* %minx, align 4, !dbg !4042
  %48 = load float, float* %y, align 4, !dbg !4043
  %sub33 = fsub float %48, 1.000000e+00, !dbg !4044
  %49 = load float, float* %maxx, align 4, !dbg !4045
  %50 = load float, float* %y, align 4, !dbg !4046
  %sub34 = fsub float %50, 1.000000e+00, !dbg !4047
  call void @fdrawline(float %47, float %sub33, float %49, float %sub34), !dbg !4048
  br label %if.end35, !dbg !4049

if.end35:                                         ; preds = %if.then27, %if.else
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then20
  call void @glDisable(i32 3042), !dbg !4050
  %51 = load i8, i8* %show_pin.addr, align 1, !dbg !4051
  %conv37 = zext i8 %51 to i32, !dbg !4051
  %tobool38 = icmp ne i32 %conv37, 0, !dbg !4051
  br i1 %tobool38, label %land.lhs.true39, label %if.end67, !dbg !4053

land.lhs.true39:                                  ; preds = %if.end36
  %52 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4054
  %panel40 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %52, i32 0, i32 3, !dbg !4055
  %53 = load %struct.Panel*, %struct.Panel** %panel40, align 8, !dbg !4055
  %flag41 = getelementptr inbounds %struct.Panel, %struct.Panel* %53, i32 0, i32 13, !dbg !4056
  %54 = load i16, i16* %flag41, align 4, !dbg !4056
  %conv42 = sext i16 %54 to i32, !dbg !4054
  %and43 = and i32 %conv42, 32, !dbg !4057
  %tobool44 = icmp ne i32 %and43, 0, !dbg !4057
  br i1 %tobool44, label %if.then45, label %if.end67, !dbg !4058

if.then45:                                        ; preds = %land.lhs.true39
  call void @glEnable(i32 3042), !dbg !4059
  %xmax46 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 1, !dbg !4061
  %55 = load i32, i32* %xmax46, align 4, !dbg !4061
  %conv47 = sitofp i32 %55 to float, !dbg !4062
  %56 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4063
  %conv48 = sext i16 %56 to i32, !dbg !4063
  %conv49 = sitofp i32 %conv48 to float, !dbg !4063
  %mul = fmul float %conv49, 0x40019999A0000000, !dbg !4064
  %57 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4065
  %aspect50 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %57, i32 0, i32 12, !dbg !4066
  %58 = load float, float* %aspect50, align 8, !dbg !4066
  %div51 = fdiv float %mul, %58, !dbg !4067
  %sub52 = fsub float %conv47, %div51, !dbg !4068
  %ymin53 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 2, !dbg !4069
  %59 = load i32, i32* %ymin53, align 4, !dbg !4069
  %conv54 = sitofp i32 %59 to float, !dbg !4070
  %60 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4071
  %aspect55 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %60, i32 0, i32 12, !dbg !4072
  %61 = load float, float* %aspect55, align 8, !dbg !4072
  %div56 = fdiv float 5.000000e+00, %61, !dbg !4073
  %add57 = fadd float %conv54, %div56, !dbg !4074
  %62 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4075
  %flag58 = getelementptr inbounds %struct.Panel, %struct.Panel* %62, i32 0, i32 13, !dbg !4076
  %63 = load i16, i16* %flag58, align 4, !dbg !4076
  %conv59 = sext i16 %63 to i32, !dbg !4075
  %and60 = and i32 %conv59, 32, !dbg !4077
  %tobool61 = icmp ne i32 %and60, 0, !dbg !4078
  %64 = zext i1 %tobool61 to i64, !dbg !4078
  %cond = select i1 %tobool61, i32 43, i32 42, !dbg !4078
  %65 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4079
  %aspect62 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %65, i32 0, i32 12, !dbg !4080
  %66 = load float, float* %aspect62, align 8, !dbg !4080
  %67 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !4081
  %68 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !4081
  %conv63 = sitofp i32 %68 to float, !dbg !4081
  %mul64 = fmul float %67, %conv63, !dbg !4081
  %div65 = fdiv float %mul64, 7.200000e+01, !dbg !4081
  %div66 = fdiv float %66, %div65, !dbg !4082
  call void @UI_icon_draw_aspect(float %sub52, float %add57, i32 %cond, float %div66, float 1.000000e+00), !dbg !4083
  call void @glDisable(i32 3042), !dbg !4084
  br label %if.end67, !dbg !4085

if.end67:                                         ; preds = %if.then45, %land.lhs.true39, %if.end36
  %69 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4086
  %flag68 = getelementptr inbounds %struct.Panel, %struct.Panel* %69, i32 0, i32 13, !dbg !4088
  %70 = load i16, i16* %flag68, align 4, !dbg !4088
  %conv69 = sext i16 %70 to i32, !dbg !4086
  %and70 = and i32 %conv69, 2, !dbg !4089
  %tobool71 = icmp ne i32 %and70, 0, !dbg !4089
  br i1 %tobool71, label %if.end90, label %if.then72, !dbg !4090

if.then72:                                        ; preds = %if.end67
  %71 = load %struct.uiStyle*, %struct.uiStyle** %style.addr, align 8, !dbg !4091
  %72 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4093
  call void @ui_draw_aligned_panel_header(%struct.uiStyle* %71, %struct.uiBlock* %72, %struct.rcti* %headrect, i8 zeroext 104), !dbg !4094
  %xmax73 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 1, !dbg !4095
  %73 = load i32, i32* %xmax73, align 4, !dbg !4095
  %conv74 = sitofp i32 %73 to float, !dbg !4096
  %74 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4097
  %aspect75 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %74, i32 0, i32 12, !dbg !4098
  %75 = load float, float* %aspect75, align 8, !dbg !4098
  %div76 = fdiv float 5.000000e+00, %75, !dbg !4099
  %sub77 = fsub float %conv74, %div76, !dbg !4100
  %xmax78 = getelementptr inbounds %struct.rctf, %struct.rctf* %itemrect, i32 0, i32 1, !dbg !4101
  store float %sub77, float* %xmax78, align 4, !dbg !4102
  %xmax79 = getelementptr inbounds %struct.rctf, %struct.rctf* %itemrect, i32 0, i32 1, !dbg !4103
  %76 = load float, float* %xmax79, align 4, !dbg !4103
  %call80 = call i32 @BLI_rcti_size_y(%struct.rcti* %headrect), !dbg !4104
  %conv81 = sitofp i32 %call80 to float, !dbg !4104
  %sub82 = fsub float %76, %conv81, !dbg !4105
  %xmin83 = getelementptr inbounds %struct.rctf, %struct.rctf* %itemrect, i32 0, i32 0, !dbg !4106
  store float %sub82, float* %xmin83, align 4, !dbg !4107
  %ymin84 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 2, !dbg !4108
  %77 = load i32, i32* %ymin84, align 4, !dbg !4108
  %conv85 = sitofp i32 %77 to float, !dbg !4109
  %ymin86 = getelementptr inbounds %struct.rctf, %struct.rctf* %itemrect, i32 0, i32 2, !dbg !4110
  store float %conv85, float* %ymin86, align 4, !dbg !4111
  %ymax87 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 3, !dbg !4112
  %78 = load i32, i32* %ymax87, align 4, !dbg !4112
  %conv88 = sitofp i32 %78 to float, !dbg !4113
  %ymax89 = getelementptr inbounds %struct.rctf, %struct.rctf* %itemrect, i32 0, i32 3, !dbg !4114
  store float %conv88, float* %ymax89, align 4, !dbg !4115
  call void @BLI_rctf_scale(%struct.rctf* %itemrect, float 0x3FE6666660000000), !dbg !4116
  call void @ui_draw_panel_dragwidget(%struct.rctf* %itemrect), !dbg !4117
  br label %if.end90, !dbg !4118

if.end90:                                         ; preds = %if.then72, %if.end67
  %79 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4119
  %flag91 = getelementptr inbounds %struct.Panel, %struct.Panel* %79, i32 0, i32 13, !dbg !4121
  %80 = load i16, i16* %flag91, align 4, !dbg !4121
  %conv92 = sext i16 %80 to i32, !dbg !4119
  %and93 = and i32 %conv92, 4, !dbg !4122
  %tobool94 = icmp ne i32 %and93, 0, !dbg !4122
  br i1 %tobool94, label %if.then95, label %if.else96, !dbg !4123

if.then95:                                        ; preds = %if.end90
  br label %if.end143, !dbg !4124

if.else96:                                        ; preds = %if.end90
  %81 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4126
  %flag97 = getelementptr inbounds %struct.Panel, %struct.Panel* %81, i32 0, i32 13, !dbg !4128
  %82 = load i16, i16* %flag97, align 4, !dbg !4128
  %conv98 = sext i16 %82 to i32, !dbg !4126
  %and99 = and i32 %conv98, 2, !dbg !4129
  %tobool100 = icmp ne i32 %and99, 0, !dbg !4129
  br i1 %tobool100, label %if.then101, label %if.else102, !dbg !4130

if.then101:                                       ; preds = %if.else96
  %83 = load %struct.uiStyle*, %struct.uiStyle** %style.addr, align 8, !dbg !4131
  %84 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4133
  call void @ui_draw_aligned_panel_header(%struct.uiStyle* %83, %struct.uiBlock* %84, %struct.rcti* %headrect, i8 zeroext 118), !dbg !4134
  br label %if.end142, !dbg !4135

if.else102:                                       ; preds = %if.else96
  %85 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4136
  %flag103 = getelementptr inbounds %struct.Panel, %struct.Panel* %85, i32 0, i32 13, !dbg !4139
  %86 = load i16, i16* %flag103, align 4, !dbg !4139
  %conv104 = sext i16 %86 to i32, !dbg !4136
  %and105 = and i32 %conv104, 1, !dbg !4140
  %tobool106 = icmp ne i32 %and105, 0, !dbg !4140
  br i1 %tobool106, label %if.then107, label %if.end127, !dbg !4141

if.then107:                                       ; preds = %if.else102
  %87 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4142
  %control = getelementptr inbounds %struct.Panel, %struct.Panel* %87, i32 0, i32 15, !dbg !4145
  %88 = load i16, i16* %control, align 8, !dbg !4145
  %conv108 = sext i16 %88 to i32, !dbg !4142
  %and109 = and i32 %conv108, 2, !dbg !4146
  %tobool110 = icmp ne i32 %and109, 0, !dbg !4146
  br i1 %tobool110, label %if.then111, label %if.else112, !dbg !4147

if.then111:                                       ; preds = %if.then107
  call void @uiSetRoundBox(i32 15), !dbg !4148
  br label %if.end113, !dbg !4148

if.else112:                                       ; preds = %if.then107
  call void @uiSetRoundBox(i32 0), !dbg !4149
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.then111
  call void @UI_ThemeColorShade(i32 2, i32 -120), !dbg !4150
  %89 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4151
  %xmin114 = getelementptr inbounds %struct.rcti, %struct.rcti* %89, i32 0, i32 0, !dbg !4152
  %90 = load i32, i32* %xmin114, align 4, !dbg !4152
  %conv115 = sitofp i32 %90 to float, !dbg !4151
  %add116 = fadd float 5.000000e-01, %conv115, !dbg !4153
  %91 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4154
  %ymin117 = getelementptr inbounds %struct.rcti, %struct.rcti* %91, i32 0, i32 2, !dbg !4155
  %92 = load i32, i32* %ymin117, align 4, !dbg !4155
  %conv118 = sitofp i32 %92 to float, !dbg !4154
  %add119 = fadd float 5.000000e-01, %conv118, !dbg !4156
  %93 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4157
  %xmax120 = getelementptr inbounds %struct.rcti, %struct.rcti* %93, i32 0, i32 1, !dbg !4158
  %94 = load i32, i32* %xmax120, align 4, !dbg !4158
  %conv121 = sitofp i32 %94 to float, !dbg !4157
  %add122 = fadd float 5.000000e-01, %conv121, !dbg !4159
  %ymax123 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 3, !dbg !4160
  %95 = load i32, i32* %ymax123, align 4, !dbg !4160
  %conv124 = sitofp i32 %95 to float, !dbg !4161
  %add125 = fadd float 5.000000e-01, %conv124, !dbg !4162
  %add126 = fadd float %add125, 1.000000e+00, !dbg !4163
  call void @uiRoundRect(float %add116, float %add119, float %add122, float %add126, float 8.000000e+00), !dbg !4164
  br label %if.end127, !dbg !4165

if.end127:                                        ; preds = %if.end113, %if.else102
  %call128 = call i32 @UI_GetThemeValue(i32 17), !dbg !4166
  %tobool129 = icmp ne i32 %call128, 0, !dbg !4166
  br i1 %tobool129, label %if.then130, label %if.end135, !dbg !4168

if.then130:                                       ; preds = %if.end127
  call void @glEnable(i32 3042), !dbg !4169
  call void @UI_ThemeColor4(i32 15), !dbg !4171
  %96 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4172
  %xmin131 = getelementptr inbounds %struct.rcti, %struct.rcti* %96, i32 0, i32 0, !dbg !4173
  %97 = load i32, i32* %xmin131, align 4, !dbg !4173
  %98 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4174
  %ymin132 = getelementptr inbounds %struct.rcti, %struct.rcti* %98, i32 0, i32 2, !dbg !4175
  %99 = load i32, i32* %ymin132, align 4, !dbg !4175
  %100 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4176
  %xmax133 = getelementptr inbounds %struct.rcti, %struct.rcti* %100, i32 0, i32 1, !dbg !4177
  %101 = load i32, i32* %xmax133, align 4, !dbg !4177
  %102 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4178
  %ymax134 = getelementptr inbounds %struct.rcti, %struct.rcti* %102, i32 0, i32 3, !dbg !4179
  %103 = load i32, i32* %ymax134, align 4, !dbg !4179
  call void @glRecti(i32 %97, i32 %99, i32 %101, i32 %103), !dbg !4180
  br label %if.end135, !dbg !4181

if.end135:                                        ; preds = %if.then130, %if.end127
  %104 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4182
  %control136 = getelementptr inbounds %struct.Panel, %struct.Panel* %104, i32 0, i32 15, !dbg !4184
  %105 = load i16, i16* %control136, align 8, !dbg !4184
  %conv137 = sext i16 %105 to i32, !dbg !4182
  %and138 = and i32 %conv137, 512, !dbg !4185
  %tobool139 = icmp ne i32 %and138, 0, !dbg !4185
  br i1 %tobool139, label %if.then140, label %if.end141, !dbg !4186

if.then140:                                       ; preds = %if.end135
  %106 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4187
  call void @ui_draw_panel_scalewidget(%struct.rcti* %106), !dbg !4188
  br label %if.end141, !dbg !4188

if.end141:                                        ; preds = %if.then140, %if.end135
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.then101
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.then95
  store i32 6, i32* %ofsx, align 4, !dbg !4189
  %107 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4190
  %control144 = getelementptr inbounds %struct.Panel, %struct.Panel* %107, i32 0, i32 15, !dbg !4192
  %108 = load i16, i16* %control144, align 8, !dbg !4192
  %conv145 = sext i16 %108 to i32, !dbg !4190
  %and146 = and i32 %conv145, 32, !dbg !4193
  %tobool147 = icmp ne i32 %and146, 0, !dbg !4193
  br i1 %tobool147, label %if.then148, label %if.end156, !dbg !4194

if.then148:                                       ; preds = %if.end143
  call void @UI_ThemeColor(i32 5), !dbg !4195
  %109 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4197
  %xmin149 = getelementptr inbounds %struct.rcti, %struct.rcti* %109, i32 0, i32 0, !dbg !4198
  %110 = load i32, i32* %xmin149, align 4, !dbg !4198
  %add150 = add nsw i32 %110, 2, !dbg !4199
  %111 = load i32, i32* %ofsx, align 4, !dbg !4200
  %add151 = add nsw i32 %add150, %111, !dbg !4201
  %conv152 = sitofp i32 %add151 to float, !dbg !4197
  %112 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4202
  %ymax153 = getelementptr inbounds %struct.rcti, %struct.rcti* %112, i32 0, i32 3, !dbg !4203
  %113 = load i32, i32* %ymax153, align 4, !dbg !4203
  %add154 = add nsw i32 %113, 2, !dbg !4204
  %conv155 = sitofp i32 %add154 to float, !dbg !4202
  call void @ui_draw_x_icon(float %conv152, float %conv155), !dbg !4205
  store i32 22, i32* %ofsx, align 4, !dbg !4206
  br label %if.end156, !dbg !4207

if.end156:                                        ; preds = %if.then148, %if.end143
  call void @UI_ThemeColor(i32 5), !dbg !4208
  %xmin157 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 0, !dbg !4209
  %114 = load i32, i32* %xmin157, align 4, !dbg !4209
  %conv158 = sitofp i32 %114 to float, !dbg !4210
  %115 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4211
  %aspect159 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %115, i32 0, i32 12, !dbg !4212
  %116 = load float, float* %aspect159, align 8, !dbg !4212
  %div160 = fdiv float 5.000000e+00, %116, !dbg !4213
  %add161 = fadd float %conv158, %div160, !dbg !4214
  %xmin162 = getelementptr inbounds %struct.rctf, %struct.rctf* %itemrect, i32 0, i32 0, !dbg !4215
  store float %add161, float* %xmin162, align 4, !dbg !4216
  %xmin163 = getelementptr inbounds %struct.rctf, %struct.rctf* %itemrect, i32 0, i32 0, !dbg !4217
  %117 = load float, float* %xmin163, align 4, !dbg !4217
  %call164 = call i32 @BLI_rcti_size_y(%struct.rcti* %headrect), !dbg !4218
  %conv165 = sitofp i32 %call164 to float, !dbg !4218
  %add166 = fadd float %117, %conv165, !dbg !4219
  %xmax167 = getelementptr inbounds %struct.rctf, %struct.rctf* %itemrect, i32 0, i32 1, !dbg !4220
  store float %add166, float* %xmax167, align 4, !dbg !4221
  %ymin168 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 2, !dbg !4222
  %118 = load i32, i32* %ymin168, align 4, !dbg !4222
  %conv169 = sitofp i32 %118 to float, !dbg !4223
  %ymin170 = getelementptr inbounds %struct.rctf, %struct.rctf* %itemrect, i32 0, i32 2, !dbg !4224
  store float %conv169, float* %ymin170, align 4, !dbg !4225
  %ymax171 = getelementptr inbounds %struct.rcti, %struct.rcti* %headrect, i32 0, i32 3, !dbg !4226
  %119 = load i32, i32* %ymax171, align 4, !dbg !4226
  %conv172 = sitofp i32 %119 to float, !dbg !4227
  %ymax173 = getelementptr inbounds %struct.rctf, %struct.rctf* %itemrect, i32 0, i32 3, !dbg !4228
  store float %conv172, float* %ymax173, align 4, !dbg !4229
  call void @BLI_rctf_scale(%struct.rctf* %itemrect, float 0x3FD6666660000000), !dbg !4230
  %120 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4231
  %flag174 = getelementptr inbounds %struct.Panel, %struct.Panel* %120, i32 0, i32 13, !dbg !4233
  %121 = load i16, i16* %flag174, align 4, !dbg !4233
  %conv175 = sext i16 %121 to i32, !dbg !4231
  %and176 = and i32 %conv175, 4, !dbg !4234
  %tobool177 = icmp ne i32 %and176, 0, !dbg !4234
  br i1 %tobool177, label %if.then178, label %if.else179, !dbg !4235

if.then178:                                       ; preds = %if.end156
  call void @ui_draw_tria_rect(%struct.rctf* %itemrect, i8 zeroext 104), !dbg !4236
  br label %if.end187, !dbg !4236

if.else179:                                       ; preds = %if.end156
  %122 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4237
  %flag180 = getelementptr inbounds %struct.Panel, %struct.Panel* %122, i32 0, i32 13, !dbg !4239
  %123 = load i16, i16* %flag180, align 4, !dbg !4239
  %conv181 = sext i16 %123 to i32, !dbg !4237
  %and182 = and i32 %conv181, 2, !dbg !4240
  %tobool183 = icmp ne i32 %and182, 0, !dbg !4240
  br i1 %tobool183, label %if.then184, label %if.else185, !dbg !4241

if.then184:                                       ; preds = %if.else179
  call void @ui_draw_tria_rect(%struct.rctf* %itemrect, i8 zeroext 104), !dbg !4242
  br label %if.end186, !dbg !4242

if.else185:                                       ; preds = %if.else179
  call void @ui_draw_tria_rect(%struct.rctf* %itemrect, i8 zeroext 118), !dbg !4243
  br label %if.end186

if.end186:                                        ; preds = %if.else185, %if.then184
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.then178
  %124 = load i32, i32* %ofsx, align 4, !dbg !4244
  br label %return, !dbg !4245

return:                                           ; preds = %if.end187, %if.then5, %if.then
  ret void, !dbg !4245
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

declare dso_local void @glEnable(i32) #3

declare dso_local i32 @UI_GetThemeValue(i32) #3

declare dso_local void @UI_ThemeColor4(i32) #3

declare dso_local void @glRectf(float, float, float, float) #3

declare dso_local void @fdrawline(float, float, float, float) #3

declare dso_local void @glColor4f(float, float, float, float) #3

declare dso_local void @glDisable(i32) #3

declare dso_local void @UI_icon_draw_aspect(float, float, i32, float, float) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_draw_aligned_panel_header(%struct.uiStyle* %style, %struct.uiBlock* %block, %struct.rcti* %rect, i8 zeroext %dir) #0 !dbg !4246 {
entry:
  %style.addr = alloca %struct.uiStyle*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  %dir.addr = alloca i8, align 1
  %panel = alloca %struct.Panel*, align 8
  %hrect = alloca %struct.rcti, align 4
  %pnl_icons = alloca i32, align 4
  %activename = alloca i8*, align 8
  store %struct.uiStyle* %style, %struct.uiStyle** %style.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style.addr, metadata !4249, metadata !DIExpression()), !dbg !4250
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !4251, metadata !DIExpression()), !dbg !4252
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !4253, metadata !DIExpression()), !dbg !4254
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !4255, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.declare(metadata %struct.Panel** %panel, metadata !4257, metadata !DIExpression()), !dbg !4258
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4259
  %panel1 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %0, i32 0, i32 3, !dbg !4260
  %1 = load %struct.Panel*, %struct.Panel** %panel1, align 8, !dbg !4260
  store %struct.Panel* %1, %struct.Panel** %panel, align 8, !dbg !4258
  call void @llvm.dbg.declare(metadata %struct.rcti* %hrect, metadata !4261, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.declare(metadata i32* %pnl_icons, metadata !4263, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.declare(metadata i8** %activename, metadata !4265, metadata !DIExpression()), !dbg !4266
  %2 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4267
  %drawname = getelementptr inbounds %struct.Panel, %struct.Panel* %2, i32 0, i32 6, !dbg !4268
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %drawname, i64 0, i64 0, !dbg !4267
  %3 = load i8, i8* %arrayidx, align 8, !dbg !4267
  %conv = zext i8 %3 to i32, !dbg !4267
  %tobool = icmp ne i32 %conv, 0, !dbg !4267
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4267

cond.true:                                        ; preds = %entry
  %4 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4269
  %drawname2 = getelementptr inbounds %struct.Panel, %struct.Panel* %4, i32 0, i32 6, !dbg !4270
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %drawname2, i64 0, i64 0, !dbg !4269
  br label %cond.end, !dbg !4267

cond.false:                                       ; preds = %entry
  %5 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4271
  %panelname = getelementptr inbounds %struct.Panel, %struct.Panel* %5, i32 0, i32 4, !dbg !4272
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %panelname, i64 0, i64 0, !dbg !4271
  br label %cond.end, !dbg !4267

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay, %cond.true ], [ %arraydecay3, %cond.false ], !dbg !4267
  store i8* %cond, i8** %activename, align 8, !dbg !4266
  %6 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4273
  %control = getelementptr inbounds %struct.Panel, %struct.Panel* %6, i32 0, i32 15, !dbg !4275
  %7 = load i16, i16* %control, align 8, !dbg !4275
  %conv4 = sext i16 %7 to i32, !dbg !4273
  %and = and i32 %conv4, 32, !dbg !4276
  %tobool5 = icmp ne i32 %and, 0, !dbg !4276
  br i1 %tobool5, label %if.then, label %if.else, !dbg !4277

if.then:                                          ; preds = %cond.end
  %8 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4278
  %labelofs = getelementptr inbounds %struct.Panel, %struct.Panel* %8, i32 0, i32 11, !dbg !4279
  %9 = load i16, i16* %labelofs, align 8, !dbg !4279
  %conv6 = sext i16 %9 to i32, !dbg !4278
  %10 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4280
  %conv7 = sext i16 %10 to i32, !dbg !4280
  %mul = mul nsw i32 2, %conv7, !dbg !4281
  %add = add nsw i32 %conv6, %mul, !dbg !4282
  %add8 = add nsw i32 %add, 5, !dbg !4283
  %conv9 = sitofp i32 %add8 to float, !dbg !4284
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4285
  %aspect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %11, i32 0, i32 12, !dbg !4286
  %12 = load float, float* %aspect, align 8, !dbg !4286
  %div = fdiv float %conv9, %12, !dbg !4287
  %add10 = fadd float %div, 0x3F50624DE0000000, !dbg !4288
  %conv11 = fptosi float %add10 to i32, !dbg !4284
  store i32 %conv11, i32* %pnl_icons, align 4, !dbg !4289
  br label %if.end, !dbg !4290

if.else:                                          ; preds = %cond.end
  %13 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4291
  %labelofs12 = getelementptr inbounds %struct.Panel, %struct.Panel* %13, i32 0, i32 11, !dbg !4292
  %14 = load i16, i16* %labelofs12, align 8, !dbg !4292
  %conv13 = sext i16 %14 to i32, !dbg !4291
  %15 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4293
  %conv14 = sext i16 %15 to i32, !dbg !4293
  %add15 = add nsw i32 %conv13, %conv14, !dbg !4294
  %add16 = add nsw i32 %add15, 5, !dbg !4295
  %conv17 = sitofp i32 %add16 to float, !dbg !4296
  %16 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4297
  %aspect18 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %16, i32 0, i32 12, !dbg !4298
  %17 = load float, float* %aspect18, align 8, !dbg !4298
  %div19 = fdiv float %conv17, %17, !dbg !4299
  %add20 = fadd float %div19, 0x3F50624DE0000000, !dbg !4300
  %conv21 = fptosi float %add20 to i32, !dbg !4296
  store i32 %conv21, i32* %pnl_icons, align 4, !dbg !4301
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @UI_ThemeColor(i32 5), !dbg !4302
  %18 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4303
  %19 = bitcast %struct.rcti* %hrect to i8*, !dbg !4304
  %20 = bitcast %struct.rcti* %18 to i8*, !dbg !4304
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 16, i1 false), !dbg !4304
  %21 = load i8, i8* %dir.addr, align 1, !dbg !4305
  %conv22 = zext i8 %21 to i32, !dbg !4305
  %cmp = icmp eq i32 %conv22, 104, !dbg !4307
  br i1 %cmp, label %if.then24, label %if.else32, !dbg !4308

if.then24:                                        ; preds = %if.end
  %22 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4309
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %22, i32 0, i32 0, !dbg !4311
  %23 = load i32, i32* %xmin, align 4, !dbg !4311
  %24 = load i32, i32* %pnl_icons, align 4, !dbg !4312
  %add25 = add nsw i32 %23, %24, !dbg !4313
  %xmin26 = getelementptr inbounds %struct.rcti, %struct.rcti* %hrect, i32 0, i32 0, !dbg !4314
  store i32 %add25, i32* %xmin26, align 4, !dbg !4315
  %25 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4316
  %aspect27 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %25, i32 0, i32 12, !dbg !4317
  %26 = load float, float* %aspect27, align 8, !dbg !4317
  %div28 = fdiv float 2.000000e+00, %26, !dbg !4318
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %hrect, i32 0, i32 2, !dbg !4319
  %27 = load i32, i32* %ymin, align 4, !dbg !4320
  %conv29 = sitofp i32 %27 to float, !dbg !4320
  %add30 = fadd float %conv29, %div28, !dbg !4320
  %conv31 = fptosi float %add30 to i32, !dbg !4320
  store i32 %conv31, i32* %ymin, align 4, !dbg !4320
  %28 = load %struct.uiStyle*, %struct.uiStyle** %style.addr, align 8, !dbg !4321
  %paneltitle = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %28, i32 0, i32 3, !dbg !4322
  %29 = load i8*, i8** %activename, align 8, !dbg !4323
  call void @uiStyleFontDraw(%struct.uiFontStyle* %paneltitle, %struct.rcti* %hrect, i8* %29), !dbg !4324
  br label %if.end45, !dbg !4325

if.else32:                                        ; preds = %if.end
  %30 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4326
  %xmin33 = getelementptr inbounds %struct.rcti, %struct.rcti* %30, i32 0, i32 0, !dbg !4328
  %31 = load i32, i32* %xmin33, align 4, !dbg !4328
  %conv34 = sitofp i32 %31 to float, !dbg !4326
  %32 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4329
  %conv35 = sext i16 %32 to i32, !dbg !4329
  %add36 = add nsw i32 %conv35, 5, !dbg !4330
  %conv37 = sitofp i32 %add36 to float, !dbg !4331
  %33 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !4332
  %aspect38 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %33, i32 0, i32 12, !dbg !4333
  %34 = load float, float* %aspect38, align 8, !dbg !4333
  %div39 = fdiv float %conv37, %34, !dbg !4334
  %add40 = fadd float %conv34, %div39, !dbg !4335
  %add41 = fadd float %add40, 0x3F50624DE0000000, !dbg !4336
  %conv42 = fptosi float %add41 to i32, !dbg !4326
  %xmin43 = getelementptr inbounds %struct.rcti, %struct.rcti* %hrect, i32 0, i32 0, !dbg !4337
  store i32 %conv42, i32* %xmin43, align 4, !dbg !4338
  %35 = load %struct.uiStyle*, %struct.uiStyle** %style.addr, align 8, !dbg !4339
  %paneltitle44 = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %35, i32 0, i32 3, !dbg !4340
  %36 = load i8*, i8** %activename, align 8, !dbg !4341
  call void @uiStyleFontDrawRotated(%struct.uiFontStyle* %paneltitle44, %struct.rcti* %hrect, i8* %36), !dbg !4342
  br label %if.end45

if.end45:                                         ; preds = %if.else32, %if.then24
  ret void, !dbg !4343
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_y(%struct.rcti* %rct) #0 !dbg !4344 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !4350, metadata !DIExpression()), !dbg !4351
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !4352
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 3, !dbg !4353
  %1 = load i32, i32* %ymax, align 4, !dbg !4353
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !4354
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 2, !dbg !4355
  %3 = load i32, i32* %ymin, align 4, !dbg !4355
  %sub = sub nsw i32 %1, %3, !dbg !4356
  ret i32 %sub, !dbg !4357
}

declare dso_local void @BLI_rctf_scale(%struct.rctf*, float) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_draw_panel_dragwidget(%struct.rctf* %rect) #0 !dbg !4358 {
entry:
  %rect.addr = alloca %struct.rctf*, align 8
  %col_back = alloca [3 x i8], align 1
  %col_high = alloca [3 x i8], align 1
  %col_dark = alloca [3 x i8], align 1
  %col_tint = alloca i32, align 4
  %px = alloca i32, align 4
  %px_zoom = alloca i32, align 4
  %box_margin = alloca i32, align 4
  %box_size = alloca i32, align 4
  %x_min = alloca i32, align 4
  %y_min = alloca i32, align 4
  %y_ofs = alloca i32, align 4
  %x_ofs = alloca i32, align 4
  %i_x = alloca i32, align 4
  %i_y = alloca i32, align 4
  %x_co = alloca i32, align 4
  %y_co = alloca i32, align 4
  store %struct.rctf* %rect, %struct.rctf** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rect.addr, metadata !4363, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.declare(metadata [3 x i8]* %col_back, metadata !4365, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.declare(metadata [3 x i8]* %col_high, metadata !4368, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.declare(metadata [3 x i8]* %col_dark, metadata !4370, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.declare(metadata i32* %col_tint, metadata !4372, metadata !DIExpression()), !dbg !4374
  store i32 84, i32* %col_tint, align 4, !dbg !4374
  call void @llvm.dbg.declare(metadata i32* %px, metadata !4375, metadata !DIExpression()), !dbg !4376
  %0 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !4377
  %conv = fptosi float %0 to i32, !dbg !4378
  store i32 %conv, i32* %px, align 4, !dbg !4376
  call void @llvm.dbg.declare(metadata i32* %px_zoom, metadata !4379, metadata !DIExpression()), !dbg !4380
  %1 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4381
  %call = call float @BLI_rctf_size_y(%struct.rctf* %1), !dbg !4382
  %div = fdiv float %call, 2.200000e+01, !dbg !4383
  %call1 = call i32 @iroundf(float %div), !dbg !4384
  %call2 = call i32 @max_ii(i32 %call1, i32 1), !dbg !4385
  store i32 %call2, i32* %px_zoom, align 4, !dbg !4380
  call void @llvm.dbg.declare(metadata i32* %box_margin, metadata !4386, metadata !DIExpression()), !dbg !4387
  %2 = load i32, i32* %px_zoom, align 4, !dbg !4388
  %conv3 = sitofp i32 %2 to float, !dbg !4388
  %mul = fmul float %conv3, 2.000000e+00, !dbg !4389
  %call4 = call i32 @iroundf(float %mul), !dbg !4390
  %3 = load i32, i32* %px, align 4, !dbg !4391
  %call5 = call i32 @max_ii(i32 %call4, i32 %3), !dbg !4392
  store i32 %call5, i32* %box_margin, align 4, !dbg !4387
  call void @llvm.dbg.declare(metadata i32* %box_size, metadata !4393, metadata !DIExpression()), !dbg !4394
  %4 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4395
  %call6 = call float @BLI_rctf_size_y(%struct.rctf* %4), !dbg !4396
  %div7 = fdiv float %call6, 8.000000e+00, !dbg !4397
  %5 = load i32, i32* %px, align 4, !dbg !4398
  %conv8 = sitofp i32 %5 to float, !dbg !4398
  %sub = fsub float %div7, %conv8, !dbg !4399
  %call9 = call i32 @iroundf(float %sub), !dbg !4400
  %6 = load i32, i32* %px, align 4, !dbg !4401
  %call10 = call i32 @max_ii(i32 %call9, i32 %6), !dbg !4402
  store i32 %call10, i32* %box_size, align 4, !dbg !4394
  call void @llvm.dbg.declare(metadata i32* %x_min, metadata !4403, metadata !DIExpression()), !dbg !4404
  %7 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4405
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %7, i32 0, i32 0, !dbg !4406
  %8 = load float, float* %xmin, align 4, !dbg !4406
  %conv11 = fptosi float %8 to i32, !dbg !4405
  store i32 %conv11, i32* %x_min, align 4, !dbg !4404
  call void @llvm.dbg.declare(metadata i32* %y_min, metadata !4407, metadata !DIExpression()), !dbg !4408
  %9 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4409
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %9, i32 0, i32 2, !dbg !4410
  %10 = load float, float* %ymin, align 4, !dbg !4410
  %conv12 = fptosi float %10 to i32, !dbg !4409
  store i32 %conv12, i32* %y_min, align 4, !dbg !4408
  call void @llvm.dbg.declare(metadata i32* %y_ofs, metadata !4411, metadata !DIExpression()), !dbg !4412
  %11 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4413
  %call13 = call float @BLI_rctf_size_y(%struct.rctf* %11), !dbg !4414
  %div14 = fdiv float %call13, 3.000000e+00, !dbg !4415
  %call15 = call i32 @iroundf(float %div14), !dbg !4416
  %12 = load i32, i32* %px, align 4, !dbg !4417
  %call16 = call i32 @max_ii(i32 %call15, i32 %12), !dbg !4418
  store i32 %call16, i32* %y_ofs, align 4, !dbg !4412
  call void @llvm.dbg.declare(metadata i32* %x_ofs, metadata !4419, metadata !DIExpression()), !dbg !4420
  %13 = load i32, i32* %y_ofs, align 4, !dbg !4421
  store i32 %13, i32* %x_ofs, align 4, !dbg !4420
  call void @llvm.dbg.declare(metadata i32* %i_x, metadata !4422, metadata !DIExpression()), !dbg !4423
  call void @llvm.dbg.declare(metadata i32* %i_y, metadata !4424, metadata !DIExpression()), !dbg !4425
  %call17 = call i32 @UI_GetThemeValue(i32 16), !dbg !4426
  %tobool = icmp ne i32 %call17, 0, !dbg !4426
  %14 = zext i1 %tobool to i64, !dbg !4426
  %cond = select i1 %tobool, i32 14, i32 15, !dbg !4426
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %col_back, i64 0, i64 0, !dbg !4427
  call void @UI_GetThemeColor3ubv(i32 %cond, i8* %arraydecay), !dbg !4428
  %arraydecay18 = getelementptr inbounds [3 x i8], [3 x i8]* %col_back, i64 0, i64 0, !dbg !4429
  %arraydecay19 = getelementptr inbounds [3 x i8], [3 x i8]* %col_high, i64 0, i64 0, !dbg !4430
  call void @UI_GetColorPtrShade3ubv(i8* %arraydecay18, i8* %arraydecay19, i32 84), !dbg !4431
  %arraydecay20 = getelementptr inbounds [3 x i8], [3 x i8]* %col_back, i64 0, i64 0, !dbg !4432
  %arraydecay21 = getelementptr inbounds [3 x i8], [3 x i8]* %col_dark, i64 0, i64 0, !dbg !4433
  call void @UI_GetColorPtrShade3ubv(i8* %arraydecay20, i8* %arraydecay21, i32 -84), !dbg !4434
  store i32 0, i32* %i_x, align 4, !dbg !4435
  br label %for.cond, !dbg !4437

for.cond:                                         ; preds = %for.inc50, %entry
  %15 = load i32, i32* %i_x, align 4, !dbg !4438
  %cmp = icmp slt i32 %15, 4, !dbg !4440
  br i1 %cmp, label %for.body, label %for.end52, !dbg !4441

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i_y, align 4, !dbg !4442
  br label %for.cond23, !dbg !4445

for.cond23:                                       ; preds = %for.inc, %for.body
  %16 = load i32, i32* %i_y, align 4, !dbg !4446
  %cmp24 = icmp slt i32 %16, 2, !dbg !4448
  br i1 %cmp24, label %for.body26, label %for.end, !dbg !4449

for.body26:                                       ; preds = %for.cond23
  call void @llvm.dbg.declare(metadata i32* %x_co, metadata !4450, metadata !DIExpression()), !dbg !4452
  %17 = load i32, i32* %x_min, align 4, !dbg !4453
  %18 = load i32, i32* %x_ofs, align 4, !dbg !4454
  %add = add nsw i32 %17, %18, !dbg !4455
  %19 = load i32, i32* %i_x, align 4, !dbg !4456
  %20 = load i32, i32* %box_size, align 4, !dbg !4457
  %21 = load i32, i32* %box_margin, align 4, !dbg !4458
  %add27 = add nsw i32 %20, %21, !dbg !4459
  %mul28 = mul nsw i32 %19, %add27, !dbg !4460
  %add29 = add nsw i32 %add, %mul28, !dbg !4461
  store i32 %add29, i32* %x_co, align 4, !dbg !4452
  call void @llvm.dbg.declare(metadata i32* %y_co, metadata !4462, metadata !DIExpression()), !dbg !4463
  %22 = load i32, i32* %y_min, align 4, !dbg !4464
  %23 = load i32, i32* %y_ofs, align 4, !dbg !4465
  %add30 = add nsw i32 %22, %23, !dbg !4466
  %24 = load i32, i32* %i_y, align 4, !dbg !4467
  %25 = load i32, i32* %box_size, align 4, !dbg !4468
  %26 = load i32, i32* %box_margin, align 4, !dbg !4469
  %add31 = add nsw i32 %25, %26, !dbg !4470
  %mul32 = mul nsw i32 %24, %add31, !dbg !4471
  %add33 = add nsw i32 %add30, %mul32, !dbg !4472
  store i32 %add33, i32* %y_co, align 4, !dbg !4463
  %arraydecay34 = getelementptr inbounds [3 x i8], [3 x i8]* %col_dark, i64 0, i64 0, !dbg !4473
  call void @glColor3ubv(i8* %arraydecay34), !dbg !4474
  %27 = load i32, i32* %x_co, align 4, !dbg !4475
  %28 = load i32, i32* %box_size, align 4, !dbg !4476
  %sub35 = sub nsw i32 %27, %28, !dbg !4477
  %conv36 = sitofp i32 %sub35 to float, !dbg !4475
  %29 = load i32, i32* %y_co, align 4, !dbg !4478
  %30 = load i32, i32* %px_zoom, align 4, !dbg !4479
  %sub37 = sub nsw i32 %29, %30, !dbg !4480
  %conv38 = sitofp i32 %sub37 to float, !dbg !4478
  %31 = load i32, i32* %x_co, align 4, !dbg !4481
  %conv39 = sitofp i32 %31 to float, !dbg !4481
  %32 = load i32, i32* %y_co, align 4, !dbg !4482
  %33 = load i32, i32* %box_size, align 4, !dbg !4483
  %add40 = add nsw i32 %32, %33, !dbg !4484
  %34 = load i32, i32* %px_zoom, align 4, !dbg !4485
  %sub41 = sub nsw i32 %add40, %34, !dbg !4486
  %conv42 = sitofp i32 %sub41 to float, !dbg !4487
  call void @glRectf(float %conv36, float %conv38, float %conv39, float %conv42), !dbg !4488
  %arraydecay43 = getelementptr inbounds [3 x i8], [3 x i8]* %col_high, i64 0, i64 0, !dbg !4489
  call void @glColor3ubv(i8* %arraydecay43), !dbg !4490
  %35 = load i32, i32* %x_co, align 4, !dbg !4491
  %36 = load i32, i32* %box_size, align 4, !dbg !4492
  %sub44 = sub nsw i32 %35, %36, !dbg !4493
  %conv45 = sitofp i32 %sub44 to float, !dbg !4491
  %37 = load i32, i32* %y_co, align 4, !dbg !4494
  %conv46 = sitofp i32 %37 to float, !dbg !4494
  %38 = load i32, i32* %x_co, align 4, !dbg !4495
  %conv47 = sitofp i32 %38 to float, !dbg !4495
  %39 = load i32, i32* %y_co, align 4, !dbg !4496
  %40 = load i32, i32* %box_size, align 4, !dbg !4497
  %add48 = add nsw i32 %39, %40, !dbg !4498
  %conv49 = sitofp i32 %add48 to float, !dbg !4496
  call void @glRectf(float %conv45, float %conv46, float %conv47, float %conv49), !dbg !4499
  br label %for.inc, !dbg !4500

for.inc:                                          ; preds = %for.body26
  %41 = load i32, i32* %i_y, align 4, !dbg !4501
  %inc = add nsw i32 %41, 1, !dbg !4501
  store i32 %inc, i32* %i_y, align 4, !dbg !4501
  br label %for.cond23, !dbg !4502, !llvm.loop !4503

for.end:                                          ; preds = %for.cond23
  br label %for.inc50, !dbg !4505

for.inc50:                                        ; preds = %for.end
  %42 = load i32, i32* %i_x, align 4, !dbg !4506
  %inc51 = add nsw i32 %42, 1, !dbg !4506
  store i32 %inc51, i32* %i_x, align 4, !dbg !4506
  br label %for.cond, !dbg !4507, !llvm.loop !4508

for.end52:                                        ; preds = %for.cond
  ret void, !dbg !4510
}

declare dso_local void @uiSetRoundBox(i32) #3

declare dso_local void @UI_ThemeColorShade(i32, i32) #3

declare dso_local void @uiRoundRect(float, float, float, float, float) #3

declare dso_local void @glRecti(i32, i32, i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_draw_panel_scalewidget(%struct.rcti* %rect) #0 !dbg !4511 {
entry:
  %rect.addr = alloca %struct.rcti*, align 8
  %xmin = alloca float, align 4
  %xmax = alloca float, align 4
  %dx = alloca float, align 4
  %ymin = alloca float, align 4
  %ymax = alloca float, align 4
  %dy = alloca float, align 4
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !4514, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.declare(metadata float* %xmin, metadata !4516, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.declare(metadata float* %xmax, metadata !4518, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.declare(metadata float* %dx, metadata !4520, metadata !DIExpression()), !dbg !4521
  call void @llvm.dbg.declare(metadata float* %ymin, metadata !4522, metadata !DIExpression()), !dbg !4523
  call void @llvm.dbg.declare(metadata float* %ymax, metadata !4524, metadata !DIExpression()), !dbg !4525
  call void @llvm.dbg.declare(metadata float* %dy, metadata !4526, metadata !DIExpression()), !dbg !4527
  %0 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4528
  %xmax1 = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 1, !dbg !4529
  %1 = load i32, i32* %xmax1, align 4, !dbg !4529
  %2 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4530
  %conv = sext i16 %2 to i32, !dbg !4530
  %add = add nsw i32 %conv, 4, !dbg !4530
  %sub = sub nsw i32 %1, %add, !dbg !4531
  %add2 = add nsw i32 %sub, 2, !dbg !4532
  %conv3 = sitofp i32 %add2 to float, !dbg !4528
  store float %conv3, float* %xmin, align 4, !dbg !4533
  %3 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4534
  %xmax4 = getelementptr inbounds %struct.rcti, %struct.rcti* %3, i32 0, i32 1, !dbg !4535
  %4 = load i32, i32* %xmax4, align 4, !dbg !4535
  %sub5 = sub nsw i32 %4, 3, !dbg !4536
  %conv6 = sitofp i32 %sub5 to float, !dbg !4534
  store float %conv6, float* %xmax, align 4, !dbg !4537
  %5 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4538
  %ymin7 = getelementptr inbounds %struct.rcti, %struct.rcti* %5, i32 0, i32 2, !dbg !4539
  %6 = load i32, i32* %ymin7, align 4, !dbg !4539
  %add8 = add nsw i32 %6, 3, !dbg !4540
  %conv9 = sitofp i32 %add8 to float, !dbg !4538
  store float %conv9, float* %ymin, align 4, !dbg !4541
  %7 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !4542
  %ymin10 = getelementptr inbounds %struct.rcti, %struct.rcti* %7, i32 0, i32 2, !dbg !4543
  %8 = load i32, i32* %ymin10, align 4, !dbg !4543
  %9 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !4544
  %conv11 = sext i16 %9 to i32, !dbg !4544
  %add12 = add nsw i32 %conv11, 4, !dbg !4544
  %add13 = add nsw i32 %8, %add12, !dbg !4545
  %sub14 = sub nsw i32 %add13, 2, !dbg !4546
  %conv15 = sitofp i32 %sub14 to float, !dbg !4542
  store float %conv15, float* %ymax, align 4, !dbg !4547
  %10 = load float, float* %xmax, align 4, !dbg !4548
  %11 = load float, float* %xmin, align 4, !dbg !4549
  %sub16 = fsub float %10, %11, !dbg !4550
  %mul = fmul float 5.000000e-01, %sub16, !dbg !4551
  store float %mul, float* %dx, align 4, !dbg !4552
  %12 = load float, float* %ymax, align 4, !dbg !4553
  %13 = load float, float* %ymin, align 4, !dbg !4554
  %sub17 = fsub float %12, %13, !dbg !4555
  %mul18 = fmul float 5.000000e-01, %sub17, !dbg !4556
  store float %mul18, float* %dy, align 4, !dbg !4557
  call void @glEnable(i32 3042), !dbg !4558
  call void @glColor4ub(i8 zeroext -1, i8 zeroext -1, i8 zeroext -1, i8 zeroext 50), !dbg !4559
  %14 = load float, float* %xmin, align 4, !dbg !4560
  %15 = load float, float* %ymin, align 4, !dbg !4561
  %16 = load float, float* %xmax, align 4, !dbg !4562
  %17 = load float, float* %ymax, align 4, !dbg !4563
  call void @fdrawline(float %14, float %15, float %16, float %17), !dbg !4564
  %18 = load float, float* %xmin, align 4, !dbg !4565
  %19 = load float, float* %dx, align 4, !dbg !4566
  %add19 = fadd float %18, %19, !dbg !4567
  %20 = load float, float* %ymin, align 4, !dbg !4568
  %21 = load float, float* %xmax, align 4, !dbg !4569
  %22 = load float, float* %ymax, align 4, !dbg !4570
  %23 = load float, float* %dy, align 4, !dbg !4571
  %sub20 = fsub float %22, %23, !dbg !4572
  call void @fdrawline(float %add19, float %20, float %21, float %sub20), !dbg !4573
  call void @glColor4ub(i8 zeroext 0, i8 zeroext 0, i8 zeroext 0, i8 zeroext 50), !dbg !4574
  %24 = load float, float* %xmin, align 4, !dbg !4575
  %25 = load float, float* %ymin, align 4, !dbg !4576
  %add21 = fadd float %25, 1.000000e+00, !dbg !4577
  %26 = load float, float* %xmax, align 4, !dbg !4578
  %27 = load float, float* %ymax, align 4, !dbg !4579
  %add22 = fadd float %27, 1.000000e+00, !dbg !4580
  call void @fdrawline(float %24, float %add21, float %26, float %add22), !dbg !4581
  %28 = load float, float* %xmin, align 4, !dbg !4582
  %29 = load float, float* %dx, align 4, !dbg !4583
  %add23 = fadd float %28, %29, !dbg !4584
  %30 = load float, float* %ymin, align 4, !dbg !4585
  %add24 = fadd float %30, 1.000000e+00, !dbg !4586
  %31 = load float, float* %xmax, align 4, !dbg !4587
  %32 = load float, float* %ymax, align 4, !dbg !4588
  %33 = load float, float* %dy, align 4, !dbg !4589
  %sub25 = fsub float %32, %33, !dbg !4590
  %add26 = fadd float %sub25, 1.000000e+00, !dbg !4591
  call void @fdrawline(float %add23, float %add24, float %31, float %add26), !dbg !4592
  call void @glDisable(i32 3042), !dbg !4593
  ret void, !dbg !4594
}

declare dso_local void @UI_ThemeColor(i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_draw_x_icon(float %x, float %y) #0 !dbg !4595 {
entry:
  %x.addr = alloca float, align 4
  %y.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !4598, metadata !DIExpression()), !dbg !4599
  store float %y, float* %y.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y.addr, metadata !4600, metadata !DIExpression()), !dbg !4601
  %0 = load float, float* %x.addr, align 4, !dbg !4602
  %1 = load float, float* %y.addr, align 4, !dbg !4603
  %2 = load float, float* %x.addr, align 4, !dbg !4604
  %add = fadd float %2, 9.375000e+00, !dbg !4605
  %3 = load float, float* %y.addr, align 4, !dbg !4606
  %add1 = fadd float %3, 9.375000e+00, !dbg !4607
  call void @ui_draw_anti_x(float %0, float %1, float %add, float %add1), !dbg !4608
  ret void, !dbg !4609
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_draw_tria_rect(%struct.rctf* %rect, i8 zeroext %dir) #0 !dbg !4610 {
entry:
  %rect.addr = alloca %struct.rctf*, align 8
  %dir.addr = alloca i8, align 1
  %half = alloca float, align 4
  %half4 = alloca float, align 4
  store %struct.rctf* %rect, %struct.rctf** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rect.addr, metadata !4613, metadata !DIExpression()), !dbg !4614
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !4615, metadata !DIExpression()), !dbg !4616
  %0 = load i8, i8* %dir.addr, align 1, !dbg !4617
  %conv = zext i8 %0 to i32, !dbg !4617
  %cmp = icmp eq i32 %conv, 104, !dbg !4619
  br i1 %cmp, label %if.then, label %if.else, !dbg !4620

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %half, metadata !4621, metadata !DIExpression()), !dbg !4623
  %1 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4624
  %call = call float @BLI_rctf_size_y(%struct.rctf* %1), !dbg !4625
  %mul = fmul float 5.000000e-01, %call, !dbg !4626
  store float %mul, float* %half, align 4, !dbg !4623
  %2 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4627
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 0, !dbg !4628
  %3 = load float, float* %xmin, align 4, !dbg !4628
  %4 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4629
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %4, i32 0, i32 2, !dbg !4630
  %5 = load float, float* %ymin, align 4, !dbg !4630
  %6 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4631
  %xmin2 = getelementptr inbounds %struct.rctf, %struct.rctf* %6, i32 0, i32 0, !dbg !4632
  %7 = load float, float* %xmin2, align 4, !dbg !4632
  %8 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4633
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %8, i32 0, i32 3, !dbg !4634
  %9 = load float, float* %ymax, align 4, !dbg !4634
  %10 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4635
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %10, i32 0, i32 1, !dbg !4636
  %11 = load float, float* %xmax, align 4, !dbg !4636
  %12 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4637
  %ymin3 = getelementptr inbounds %struct.rctf, %struct.rctf* %12, i32 0, i32 2, !dbg !4638
  %13 = load float, float* %ymin3, align 4, !dbg !4638
  %14 = load float, float* %half, align 4, !dbg !4639
  %add = fadd float %13, %14, !dbg !4640
  call void @ui_draw_anti_tria(float %3, float %5, float %7, float %9, float %11, float %add), !dbg !4641
  br label %if.end, !dbg !4642

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %half4, metadata !4643, metadata !DIExpression()), !dbg !4645
  %15 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4646
  %call5 = call float @BLI_rctf_size_x(%struct.rctf* %15), !dbg !4647
  %mul6 = fmul float 5.000000e-01, %call5, !dbg !4648
  store float %mul6, float* %half4, align 4, !dbg !4645
  %16 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4649
  %xmin7 = getelementptr inbounds %struct.rctf, %struct.rctf* %16, i32 0, i32 0, !dbg !4650
  %17 = load float, float* %xmin7, align 4, !dbg !4650
  %18 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4651
  %ymax8 = getelementptr inbounds %struct.rctf, %struct.rctf* %18, i32 0, i32 3, !dbg !4652
  %19 = load float, float* %ymax8, align 4, !dbg !4652
  %20 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4653
  %xmax9 = getelementptr inbounds %struct.rctf, %struct.rctf* %20, i32 0, i32 1, !dbg !4654
  %21 = load float, float* %xmax9, align 4, !dbg !4654
  %22 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4655
  %ymax10 = getelementptr inbounds %struct.rctf, %struct.rctf* %22, i32 0, i32 3, !dbg !4656
  %23 = load float, float* %ymax10, align 4, !dbg !4656
  %24 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4657
  %xmin11 = getelementptr inbounds %struct.rctf, %struct.rctf* %24, i32 0, i32 0, !dbg !4658
  %25 = load float, float* %xmin11, align 4, !dbg !4658
  %26 = load float, float* %half4, align 4, !dbg !4659
  %add12 = fadd float %25, %26, !dbg !4660
  %27 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !4661
  %ymin13 = getelementptr inbounds %struct.rctf, %struct.rctf* %27, i32 0, i32 2, !dbg !4662
  %28 = load float, float* %ymin13, align 4, !dbg !4662
  call void @ui_draw_anti_tria(float %17, float %19, float %21, float %23, float %add12, float %28), !dbg !4663
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4664
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiBeginPanels(%struct.bContext* %UNUSED_C, %struct.ARegion* %ar) #0 !dbg !4665 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %pa = alloca %struct.Panel*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !4671, metadata !DIExpression()), !dbg !4672
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !4673, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !4675, metadata !DIExpression()), !dbg !4676
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4677
  %panels = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 22, !dbg !4679
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels, i32 0, i32 0, !dbg !4680
  %1 = load i8*, i8** %first, align 8, !dbg !4680
  %2 = bitcast i8* %1 to %struct.Panel*, !dbg !4677
  store %struct.Panel* %2, %struct.Panel** %pa, align 8, !dbg !4681
  br label %for.cond, !dbg !4682

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !4683
  %tobool = icmp ne %struct.Panel* %3, null, !dbg !4685
  br i1 %tobool, label %for.body, label %for.end, !dbg !4685

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !4686
  %runtime_flag = getelementptr inbounds %struct.Panel, %struct.Panel* %4, i32 0, i32 14, !dbg !4689
  %5 = load i16, i16* %runtime_flag, align 2, !dbg !4689
  %conv = sext i16 %5 to i32, !dbg !4686
  %and = and i32 %conv, 2, !dbg !4690
  %tobool1 = icmp ne i32 %and, 0, !dbg !4690
  br i1 %tobool1, label %if.then, label %if.else, !dbg !4691

if.then:                                          ; preds = %for.body
  %6 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !4692
  %runtime_flag2 = getelementptr inbounds %struct.Panel, %struct.Panel* %6, i32 0, i32 14, !dbg !4693
  store i16 4, i16* %runtime_flag2, align 2, !dbg !4694
  br label %if.end, !dbg !4692

if.else:                                          ; preds = %for.body
  %7 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !4695
  %runtime_flag3 = getelementptr inbounds %struct.Panel, %struct.Panel* %7, i32 0, i32 14, !dbg !4696
  store i16 0, i16* %runtime_flag3, align 2, !dbg !4697
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !4698

for.inc:                                          ; preds = %if.end
  %8 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !4699
  %next = getelementptr inbounds %struct.Panel, %struct.Panel* %8, i32 0, i32 0, !dbg !4700
  %9 = load %struct.Panel*, %struct.Panel** %next, align 8, !dbg !4700
  store %struct.Panel* %9, %struct.Panel** %pa, align 8, !dbg !4701
  br label %for.cond, !dbg !4702, !llvm.loop !4703

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4705
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiEndPanels(%struct.bContext* %C, %struct.ARegion* %ar, i32* %x, i32* %y) #0 !dbg !4706 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %x.addr = alloca i32*, align 8
  %y.addr = alloca i32*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %panot = alloca %struct.Panel*, align 8
  %panew = alloca %struct.Panel*, align 8
  %patest = alloca %struct.Panel*, align 8
  %pa = alloca %struct.Panel*, align 8
  %firstpa = alloca %struct.Panel*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4710, metadata !DIExpression()), !dbg !4711
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !4712, metadata !DIExpression()), !dbg !4713
  store i32* %x, i32** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %x.addr, metadata !4714, metadata !DIExpression()), !dbg !4715
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !4716, metadata !DIExpression()), !dbg !4717
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !4718, metadata !DIExpression()), !dbg !4719
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4720
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !4721
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !4719
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !4722, metadata !DIExpression()), !dbg !4723
  call void @llvm.dbg.declare(metadata %struct.Panel** %panot, metadata !4724, metadata !DIExpression()), !dbg !4725
  call void @llvm.dbg.declare(metadata %struct.Panel** %panew, metadata !4726, metadata !DIExpression()), !dbg !4727
  call void @llvm.dbg.declare(metadata %struct.Panel** %patest, metadata !4728, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !4730, metadata !DIExpression()), !dbg !4731
  call void @llvm.dbg.declare(metadata %struct.Panel** %firstpa, metadata !4732, metadata !DIExpression()), !dbg !4733
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4734
  %uiblocks = getelementptr inbounds %struct.ARegion, %struct.ARegion* %1, i32 0, i32 21, !dbg !4736
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %uiblocks, i32 0, i32 0, !dbg !4737
  %2 = load i8*, i8** %first, align 8, !dbg !4737
  %3 = bitcast i8* %2 to %struct.uiBlock*, !dbg !4734
  store %struct.uiBlock* %3, %struct.uiBlock** %block, align 8, !dbg !4738
  br label %for.cond, !dbg !4739

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4740
  %tobool = icmp ne %struct.uiBlock* %4, null, !dbg !4742
  br i1 %tobool, label %for.body, label %for.end, !dbg !4742

for.body:                                         ; preds = %for.cond
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4743
  %active = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %5, i32 0, i32 36, !dbg !4745
  %6 = load i8, i8* %active, align 1, !dbg !4745
  %conv = zext i8 %6 to i32, !dbg !4743
  %tobool1 = icmp ne i32 %conv, 0, !dbg !4743
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !4746

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4747
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %7, i32 0, i32 3, !dbg !4748
  %8 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !4748
  %tobool2 = icmp ne %struct.Panel* %8, null, !dbg !4747
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4749

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4750
  call void @ui_offset_panel_block(%struct.uiBlock* %9), !dbg !4751
  br label %if.end, !dbg !4751

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4748

for.inc:                                          ; preds = %if.end
  %10 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4752
  %next = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %10, i32 0, i32 0, !dbg !4753
  %11 = load %struct.uiBlock*, %struct.uiBlock** %next, align 8, !dbg !4753
  store %struct.uiBlock* %11, %struct.uiBlock** %block, align 8, !dbg !4754
  br label %for.cond, !dbg !4755, !llvm.loop !4756

for.end:                                          ; preds = %for.cond
  %12 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4758
  %panels = getelementptr inbounds %struct.ARegion, %struct.ARegion* %12, i32 0, i32 22, !dbg !4760
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels, i32 0, i32 0, !dbg !4761
  %13 = load i8*, i8** %first3, align 8, !dbg !4761
  %14 = bitcast i8* %13 to %struct.Panel*, !dbg !4758
  store %struct.Panel* %14, %struct.Panel** %panot, align 8, !dbg !4762
  br label %for.cond4, !dbg !4763

for.cond4:                                        ; preds = %for.inc48, %for.end
  %15 = load %struct.Panel*, %struct.Panel** %panot, align 8, !dbg !4764
  %tobool5 = icmp ne %struct.Panel* %15, null, !dbg !4766
  br i1 %tobool5, label %for.body6, label %for.end50, !dbg !4766

for.body6:                                        ; preds = %for.cond4
  %16 = load %struct.Panel*, %struct.Panel** %panot, align 8, !dbg !4767
  %runtime_flag = getelementptr inbounds %struct.Panel, %struct.Panel* %16, i32 0, i32 14, !dbg !4770
  %17 = load i16, i16* %runtime_flag, align 2, !dbg !4770
  %conv7 = sext i16 %17 to i32, !dbg !4767
  %and = and i32 %conv7, 2, !dbg !4771
  %cmp = icmp eq i32 %and, 0, !dbg !4772
  br i1 %cmp, label %if.then9, label %if.end47, !dbg !4773

if.then9:                                         ; preds = %for.body6
  %18 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4774
  %panels10 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %18, i32 0, i32 22, !dbg !4777
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels10, i32 0, i32 0, !dbg !4778
  %19 = load i8*, i8** %first11, align 8, !dbg !4778
  %20 = bitcast i8* %19 to %struct.Panel*, !dbg !4774
  store %struct.Panel* %20, %struct.Panel** %panew, align 8, !dbg !4779
  br label %for.cond12, !dbg !4780

for.cond12:                                       ; preds = %for.inc25, %if.then9
  %21 = load %struct.Panel*, %struct.Panel** %panew, align 8, !dbg !4781
  %tobool13 = icmp ne %struct.Panel* %21, null, !dbg !4783
  br i1 %tobool13, label %for.body14, label %for.end27, !dbg !4783

for.body14:                                       ; preds = %for.cond12
  %22 = load %struct.Panel*, %struct.Panel** %panew, align 8, !dbg !4784
  %runtime_flag15 = getelementptr inbounds %struct.Panel, %struct.Panel* %22, i32 0, i32 14, !dbg !4787
  %23 = load i16, i16* %runtime_flag15, align 2, !dbg !4787
  %conv16 = sext i16 %23 to i32, !dbg !4784
  %and17 = and i32 %conv16, 2, !dbg !4788
  %tobool18 = icmp ne i32 %and17, 0, !dbg !4788
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !4789

if.then19:                                        ; preds = %for.body14
  %24 = load %struct.Panel*, %struct.Panel** %panew, align 8, !dbg !4790
  %paneltab = getelementptr inbounds %struct.Panel, %struct.Panel* %24, i32 0, i32 18, !dbg !4793
  %25 = load %struct.Panel*, %struct.Panel** %paneltab, align 8, !dbg !4793
  %26 = load %struct.Panel*, %struct.Panel** %panot, align 8, !dbg !4794
  %cmp20 = icmp eq %struct.Panel* %25, %26, !dbg !4795
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !4796

if.then22:                                        ; preds = %if.then19
  br label %for.end27, !dbg !4797

if.end23:                                         ; preds = %if.then19
  br label %if.end24, !dbg !4799

if.end24:                                         ; preds = %if.end23, %for.body14
  br label %for.inc25, !dbg !4800

for.inc25:                                        ; preds = %if.end24
  %27 = load %struct.Panel*, %struct.Panel** %panew, align 8, !dbg !4801
  %next26 = getelementptr inbounds %struct.Panel, %struct.Panel* %27, i32 0, i32 0, !dbg !4802
  %28 = load %struct.Panel*, %struct.Panel** %next26, align 8, !dbg !4802
  store %struct.Panel* %28, %struct.Panel** %panew, align 8, !dbg !4803
  br label %for.cond12, !dbg !4804, !llvm.loop !4805

for.end27:                                        ; preds = %if.then22, %for.cond12
  %29 = load %struct.Panel*, %struct.Panel** %panew, align 8, !dbg !4807
  %tobool28 = icmp ne %struct.Panel* %29, null, !dbg !4807
  br i1 %tobool28, label %if.then29, label %if.end46, !dbg !4809

if.then29:                                        ; preds = %for.end27
  %30 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4810
  %panels30 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %30, i32 0, i32 22, !dbg !4813
  %first31 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels30, i32 0, i32 0, !dbg !4814
  %31 = load i8*, i8** %first31, align 8, !dbg !4814
  %32 = bitcast i8* %31 to %struct.Panel*, !dbg !4810
  store %struct.Panel* %32, %struct.Panel** %patest, align 8, !dbg !4815
  br label %for.cond32, !dbg !4816

for.cond32:                                       ; preds = %for.inc41, %if.then29
  %33 = load %struct.Panel*, %struct.Panel** %patest, align 8, !dbg !4817
  %tobool33 = icmp ne %struct.Panel* %33, null, !dbg !4819
  br i1 %tobool33, label %for.body34, label %for.end43, !dbg !4819

for.body34:                                       ; preds = %for.cond32
  %34 = load %struct.Panel*, %struct.Panel** %patest, align 8, !dbg !4820
  %paneltab35 = getelementptr inbounds %struct.Panel, %struct.Panel* %34, i32 0, i32 18, !dbg !4823
  %35 = load %struct.Panel*, %struct.Panel** %paneltab35, align 8, !dbg !4823
  %36 = load %struct.Panel*, %struct.Panel** %panot, align 8, !dbg !4824
  %cmp36 = icmp eq %struct.Panel* %35, %36, !dbg !4825
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !4826

if.then38:                                        ; preds = %for.body34
  %37 = load %struct.Panel*, %struct.Panel** %panew, align 8, !dbg !4827
  %38 = load %struct.Panel*, %struct.Panel** %patest, align 8, !dbg !4829
  %paneltab39 = getelementptr inbounds %struct.Panel, %struct.Panel* %38, i32 0, i32 18, !dbg !4830
  store %struct.Panel* %37, %struct.Panel** %paneltab39, align 8, !dbg !4831
  br label %if.end40, !dbg !4832

if.end40:                                         ; preds = %if.then38, %for.body34
  br label %for.inc41, !dbg !4833

for.inc41:                                        ; preds = %if.end40
  %39 = load %struct.Panel*, %struct.Panel** %patest, align 8, !dbg !4834
  %next42 = getelementptr inbounds %struct.Panel, %struct.Panel* %39, i32 0, i32 0, !dbg !4835
  %40 = load %struct.Panel*, %struct.Panel** %next42, align 8, !dbg !4835
  store %struct.Panel* %40, %struct.Panel** %patest, align 8, !dbg !4836
  br label %for.cond32, !dbg !4837, !llvm.loop !4838

for.end43:                                        ; preds = %for.cond32
  %41 = load %struct.Panel*, %struct.Panel** %panew, align 8, !dbg !4840
  %42 = load %struct.Panel*, %struct.Panel** %panot, align 8, !dbg !4841
  %paneltab44 = getelementptr inbounds %struct.Panel, %struct.Panel* %42, i32 0, i32 18, !dbg !4842
  store %struct.Panel* %41, %struct.Panel** %paneltab44, align 8, !dbg !4843
  %43 = load %struct.Panel*, %struct.Panel** %panew, align 8, !dbg !4844
  %paneltab45 = getelementptr inbounds %struct.Panel, %struct.Panel* %43, i32 0, i32 18, !dbg !4845
  store %struct.Panel* null, %struct.Panel** %paneltab45, align 8, !dbg !4846
  %44 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4847
  call void @ED_region_tag_redraw(%struct.ARegion* %44), !dbg !4848
  br label %if.end46, !dbg !4849

if.end46:                                         ; preds = %for.end43, %for.end27
  br label %if.end47, !dbg !4850

if.end47:                                         ; preds = %if.end46, %for.body6
  br label %for.inc48, !dbg !4851

for.inc48:                                        ; preds = %if.end47
  %45 = load %struct.Panel*, %struct.Panel** %panot, align 8, !dbg !4852
  %next49 = getelementptr inbounds %struct.Panel, %struct.Panel* %45, i32 0, i32 0, !dbg !4853
  %46 = load %struct.Panel*, %struct.Panel** %next49, align 8, !dbg !4853
  store %struct.Panel* %46, %struct.Panel** %panot, align 8, !dbg !4854
  br label %for.cond4, !dbg !4855, !llvm.loop !4856

for.end50:                                        ; preds = %for.cond4
  %47 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4858
  %48 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4860
  %call51 = call i32 @panels_re_align(%struct.ScrArea* %47, %struct.ARegion* %48, %struct.Panel** %pa), !dbg !4861
  %tobool52 = icmp ne i32 %call51, 0, !dbg !4861
  br i1 %tobool52, label %if.then53, label %if.end58, !dbg !4862

if.then53:                                        ; preds = %for.end50
  %49 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !4863
  %tobool54 = icmp ne %struct.Panel* %49, null, !dbg !4863
  br i1 %tobool54, label %if.then55, label %if.else, !dbg !4866

if.then55:                                        ; preds = %if.then53
  %50 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4867
  %51 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !4868
  call void @panel_activate_state(%struct.bContext* %50, %struct.Panel* %51, i32 3), !dbg !4869
  br label %if.end57, !dbg !4869

if.else:                                          ; preds = %if.then53
  %52 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4870
  %53 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4871
  %call56 = call zeroext i8 @uiAlignPanelStep(%struct.ScrArea* %52, %struct.ARegion* %53, float 1.000000e+00, i8 zeroext 0), !dbg !4872
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.then55
  br label %if.end58, !dbg !4873

if.end58:                                         ; preds = %if.end57, %for.end50
  store %struct.Panel* null, %struct.Panel** %firstpa, align 8, !dbg !4874
  %54 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4875
  %uiblocks59 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %54, i32 0, i32 21, !dbg !4877
  %first60 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %uiblocks59, i32 0, i32 0, !dbg !4878
  %55 = load i8*, i8** %first60, align 8, !dbg !4878
  %56 = bitcast i8* %55 to %struct.uiBlock*, !dbg !4875
  store %struct.uiBlock* %56, %struct.uiBlock** %block, align 8, !dbg !4879
  br label %for.cond61, !dbg !4880

for.cond61:                                       ; preds = %for.inc80, %if.end58
  %57 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4881
  %tobool62 = icmp ne %struct.uiBlock* %57, null, !dbg !4883
  br i1 %tobool62, label %for.body63, label %for.end82, !dbg !4883

for.body63:                                       ; preds = %for.cond61
  %58 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4884
  %active64 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %58, i32 0, i32 36, !dbg !4886
  %59 = load i8, i8* %active64, align 1, !dbg !4886
  %conv65 = zext i8 %59 to i32, !dbg !4884
  %tobool66 = icmp ne i32 %conv65, 0, !dbg !4884
  br i1 %tobool66, label %land.lhs.true67, label %if.end79, !dbg !4887

land.lhs.true67:                                  ; preds = %for.body63
  %60 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4888
  %panel68 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %60, i32 0, i32 3, !dbg !4889
  %61 = load %struct.Panel*, %struct.Panel** %panel68, align 8, !dbg !4889
  %tobool69 = icmp ne %struct.Panel* %61, null, !dbg !4888
  br i1 %tobool69, label %if.then70, label %if.end79, !dbg !4890

if.then70:                                        ; preds = %land.lhs.true67
  %62 = load %struct.Panel*, %struct.Panel** %firstpa, align 8, !dbg !4891
  %tobool71 = icmp ne %struct.Panel* %62, null, !dbg !4891
  br i1 %tobool71, label %lor.lhs.false, label %if.then76, !dbg !4893

lor.lhs.false:                                    ; preds = %if.then70
  %63 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4894
  %panel72 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %63, i32 0, i32 3, !dbg !4895
  %64 = load %struct.Panel*, %struct.Panel** %panel72, align 8, !dbg !4895
  %sortorder = getelementptr inbounds %struct.Panel, %struct.Panel* %64, i32 0, i32 17, !dbg !4896
  %65 = load i32, i32* %sortorder, align 4, !dbg !4896
  %66 = load %struct.Panel*, %struct.Panel** %firstpa, align 8, !dbg !4897
  %sortorder73 = getelementptr inbounds %struct.Panel, %struct.Panel* %66, i32 0, i32 17, !dbg !4898
  %67 = load i32, i32* %sortorder73, align 4, !dbg !4898
  %cmp74 = icmp slt i32 %65, %67, !dbg !4899
  br i1 %cmp74, label %if.then76, label %if.end78, !dbg !4900

if.then76:                                        ; preds = %lor.lhs.false, %if.then70
  %68 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4901
  %panel77 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %68, i32 0, i32 3, !dbg !4902
  %69 = load %struct.Panel*, %struct.Panel** %panel77, align 8, !dbg !4902
  store %struct.Panel* %69, %struct.Panel** %firstpa, align 8, !dbg !4903
  br label %if.end78, !dbg !4904

if.end78:                                         ; preds = %if.then76, %lor.lhs.false
  br label %if.end79, !dbg !4898

if.end79:                                         ; preds = %if.end78, %land.lhs.true67, %for.body63
  br label %for.inc80, !dbg !4889

for.inc80:                                        ; preds = %if.end79
  %70 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !4905
  %next81 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %70, i32 0, i32 0, !dbg !4906
  %71 = load %struct.uiBlock*, %struct.uiBlock** %next81, align 8, !dbg !4906
  store %struct.uiBlock* %71, %struct.uiBlock** %block, align 8, !dbg !4907
  br label %for.cond61, !dbg !4908, !llvm.loop !4909

for.end82:                                        ; preds = %for.cond61
  %72 = load %struct.Panel*, %struct.Panel** %firstpa, align 8, !dbg !4911
  %tobool83 = icmp ne %struct.Panel* %72, null, !dbg !4911
  br i1 %tobool83, label %if.then84, label %if.end88, !dbg !4913

if.then84:                                        ; preds = %for.end82
  %73 = load %struct.Panel*, %struct.Panel** %firstpa, align 8, !dbg !4914
  %runtime_flag85 = getelementptr inbounds %struct.Panel, %struct.Panel* %73, i32 0, i32 14, !dbg !4915
  %74 = load i16, i16* %runtime_flag85, align 2, !dbg !4916
  %conv86 = sext i16 %74 to i32, !dbg !4916
  %or = or i32 %conv86, 32, !dbg !4916
  %conv87 = trunc i32 %or to i16, !dbg !4916
  store i16 %conv87, i16* %runtime_flag85, align 2, !dbg !4916
  br label %if.end88, !dbg !4914

if.end88:                                         ; preds = %if.then84, %for.end82
  %75 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4917
  %76 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4918
  %77 = load i32*, i32** %x.addr, align 8, !dbg !4919
  %78 = load i32*, i32** %y.addr, align 8, !dbg !4920
  call void @ui_panels_size(%struct.ScrArea* %75, %struct.ARegion* %76, i32* %77, i32* %78), !dbg !4921
  ret void, !dbg !4922
}

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_offset_panel_block(%struct.uiBlock* %block) #0 !dbg !4923 {
entry:
  %block.addr = alloca %struct.uiBlock*, align 8
  %style = alloca %struct.uiStyle*, align 8
  %but = alloca %struct.uiBut*, align 8
  %ofsy = alloca i32, align 4
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !4926, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !4928, metadata !DIExpression()), !dbg !4929
  %call = call %struct.uiStyle* @UI_GetStyleDraw(), !dbg !4930
  store %struct.uiStyle* %call, %struct.uiStyle** %style, align 8, !dbg !4929
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !4931, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.declare(metadata i32* %ofsy, metadata !5067, metadata !DIExpression()), !dbg !5068
  %0 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5069
  call void @ui_bounds_block(%struct.uiBlock* %0), !dbg !5070
  %1 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5071
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %1, i32 0, i32 3, !dbg !5072
  %2 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !5072
  %sizey = getelementptr inbounds %struct.Panel, %struct.Panel* %2, i32 0, i32 10, !dbg !5073
  %3 = load i32, i32* %sizey, align 4, !dbg !5073
  %4 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !5074
  %panelspace = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %4, i32 0, i32 15, !dbg !5075
  %5 = load i16, i16* %panelspace, align 2, !dbg !5075
  %conv = sext i16 %5 to i32, !dbg !5074
  %sub = sub nsw i32 %3, %conv, !dbg !5076
  store i32 %sub, i32* %ofsy, align 4, !dbg !5077
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5078
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 2, !dbg !5080
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !5081
  %7 = load i8*, i8** %first, align 8, !dbg !5081
  %8 = bitcast i8* %7 to %struct.uiBut*, !dbg !5078
  store %struct.uiBut* %8, %struct.uiBut** %but, align 8, !dbg !5082
  br label %for.cond, !dbg !5083

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5084
  %tobool = icmp ne %struct.uiBut* %9, null, !dbg !5086
  br i1 %tobool, label %for.body, label %for.end, !dbg !5086

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %ofsy, align 4, !dbg !5087
  %conv1 = sitofp i32 %10 to float, !dbg !5087
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5089
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %11, i32 0, i32 18, !dbg !5090
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 2, !dbg !5091
  %12 = load float, float* %ymin, align 8, !dbg !5092
  %add = fadd float %12, %conv1, !dbg !5092
  store float %add, float* %ymin, align 8, !dbg !5092
  %13 = load i32, i32* %ofsy, align 4, !dbg !5093
  %conv2 = sitofp i32 %13 to float, !dbg !5093
  %14 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5094
  %rect3 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %14, i32 0, i32 18, !dbg !5095
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect3, i32 0, i32 3, !dbg !5096
  %15 = load float, float* %ymax, align 4, !dbg !5097
  %add4 = fadd float %15, %conv2, !dbg !5097
  store float %add4, float* %ymax, align 4, !dbg !5097
  br label %for.inc, !dbg !5098

for.inc:                                          ; preds = %for.body
  %16 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5099
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %16, i32 0, i32 0, !dbg !5100
  %17 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !5100
  store %struct.uiBut* %17, %struct.uiBut** %but, align 8, !dbg !5101
  br label %for.cond, !dbg !5102, !llvm.loop !5103

for.end:                                          ; preds = %for.cond
  %18 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5105
  %panel5 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %18, i32 0, i32 3, !dbg !5106
  %19 = load %struct.Panel*, %struct.Panel** %panel5, align 8, !dbg !5106
  %sizex = getelementptr inbounds %struct.Panel, %struct.Panel* %19, i32 0, i32 9, !dbg !5107
  %20 = load i32, i32* %sizex, align 8, !dbg !5107
  %conv6 = sitofp i32 %20 to float, !dbg !5105
  %21 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5108
  %rect7 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %21, i32 0, i32 11, !dbg !5109
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect7, i32 0, i32 1, !dbg !5110
  store float %conv6, float* %xmax, align 4, !dbg !5111
  %22 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5112
  %panel8 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %22, i32 0, i32 3, !dbg !5113
  %23 = load %struct.Panel*, %struct.Panel** %panel8, align 8, !dbg !5113
  %sizey9 = getelementptr inbounds %struct.Panel, %struct.Panel* %23, i32 0, i32 10, !dbg !5114
  %24 = load i32, i32* %sizey9, align 4, !dbg !5114
  %conv10 = sitofp i32 %24 to float, !dbg !5112
  %25 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5115
  %rect11 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %25, i32 0, i32 11, !dbg !5116
  %ymax12 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect11, i32 0, i32 3, !dbg !5117
  store float %conv10, float* %ymax12, align 4, !dbg !5118
  %26 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5119
  %rect13 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %26, i32 0, i32 11, !dbg !5120
  %ymin14 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect13, i32 0, i32 2, !dbg !5121
  store float 0.000000e+00, float* %ymin14, align 8, !dbg !5122
  %27 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !5123
  %rect15 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %27, i32 0, i32 11, !dbg !5124
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect15, i32 0, i32 0, !dbg !5125
  store float 0.000000e+00, float* %xmin, align 8, !dbg !5126
  ret void, !dbg !5127
}

declare dso_local void @ED_region_tag_redraw(%struct.ARegion*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @panels_re_align(%struct.ScrArea* %sa, %struct.ARegion* %ar, %struct.Panel** %r_pa) #0 !dbg !5128 {
entry:
  %retval = alloca i32, align 4
  %sa.addr = alloca %struct.ScrArea*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %r_pa.addr = alloca %struct.Panel**, align 8
  %pa = alloca %struct.Panel*, align 8
  %active = alloca i32, align 4
  %sbuts = alloca %struct.SpaceButs*, align 8
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !5132, metadata !DIExpression()), !dbg !5133
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !5134, metadata !DIExpression()), !dbg !5135
  store %struct.Panel** %r_pa, %struct.Panel*** %r_pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel*** %r_pa.addr, metadata !5136, metadata !DIExpression()), !dbg !5137
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !5138, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.declare(metadata i32* %active, metadata !5140, metadata !DIExpression()), !dbg !5141
  store i32 0, i32* %active, align 4, !dbg !5141
  %0 = load %struct.Panel**, %struct.Panel*** %r_pa.addr, align 8, !dbg !5142
  store %struct.Panel* null, %struct.Panel** %0, align 8, !dbg !5143
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5144
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %1, i32 0, i32 8, !dbg !5146
  %2 = load i8, i8* %spacetype, align 8, !dbg !5146
  %conv = zext i8 %2 to i32, !dbg !5144
  %cmp = icmp eq i32 %conv, 4, !dbg !5147
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5148

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5149
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %3, i32 0, i32 8, !dbg !5150
  %4 = load i16, i16* %regiontype, align 2, !dbg !5150
  %conv2 = sext i16 %4 to i32, !dbg !5149
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !5151
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5152

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.SpaceButs** %sbuts, metadata !5153, metadata !DIExpression()), !dbg !5155
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5156
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 19, !dbg !5157
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !5158
  %6 = load i8*, i8** %first, align 8, !dbg !5158
  %7 = bitcast i8* %6 to %struct.SpaceButs*, !dbg !5156
  store %struct.SpaceButs* %7, %struct.SpaceButs** %sbuts, align 8, !dbg !5155
  %8 = load %struct.SpaceButs*, %struct.SpaceButs** %sbuts, align 8, !dbg !5159
  %align = getelementptr inbounds %struct.SpaceButs, %struct.SpaceButs* %8, i32 0, i32 11, !dbg !5161
  %9 = load i16, i16* %align, align 8, !dbg !5161
  %tobool = icmp ne i16 %9, 0, !dbg !5159
  br i1 %tobool, label %if.then5, label %if.end13, !dbg !5162

if.then5:                                         ; preds = %if.then
  %10 = load %struct.SpaceButs*, %struct.SpaceButs** %sbuts, align 8, !dbg !5163
  %re_align = getelementptr inbounds %struct.SpaceButs, %struct.SpaceButs* %10, i32 0, i32 10, !dbg !5165
  %11 = load i16, i16* %re_align, align 2, !dbg !5165
  %conv6 = sext i16 %11 to i32, !dbg !5163
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !5163
  br i1 %tobool7, label %if.then12, label %lor.lhs.false, !dbg !5166

lor.lhs.false:                                    ; preds = %if.then5
  %12 = load %struct.SpaceButs*, %struct.SpaceButs** %sbuts, align 8, !dbg !5167
  %mainbo = getelementptr inbounds %struct.SpaceButs, %struct.SpaceButs* %12, i32 0, i32 8, !dbg !5168
  %13 = load i16, i16* %mainbo, align 2, !dbg !5168
  %conv8 = sext i16 %13 to i32, !dbg !5167
  %14 = load %struct.SpaceButs*, %struct.SpaceButs** %sbuts, align 8, !dbg !5169
  %mainb = getelementptr inbounds %struct.SpaceButs, %struct.SpaceButs* %14, i32 0, i32 7, !dbg !5170
  %15 = load i16, i16* %mainb, align 8, !dbg !5170
  %conv9 = sext i16 %15 to i32, !dbg !5169
  %cmp10 = icmp ne i32 %conv8, %conv9, !dbg !5171
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !5172

if.then12:                                        ; preds = %lor.lhs.false, %if.then5
  store i32 1, i32* %retval, align 4, !dbg !5173
  br label %return, !dbg !5173

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end13, !dbg !5170

if.end13:                                         ; preds = %if.end, %if.then
  br label %if.end37, !dbg !5174

if.else:                                          ; preds = %land.lhs.true, %entry
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5175
  %spacetype14 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %16, i32 0, i32 8, !dbg !5177
  %17 = load i8, i8* %spacetype14, align 8, !dbg !5177
  %conv15 = zext i8 %17 to i32, !dbg !5175
  %cmp16 = icmp eq i32 %conv15, 6, !dbg !5178
  br i1 %cmp16, label %land.lhs.true18, label %if.else24, !dbg !5179

land.lhs.true18:                                  ; preds = %if.else
  %18 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5180
  %regiontype19 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %18, i32 0, i32 8, !dbg !5181
  %19 = load i16, i16* %regiontype19, align 2, !dbg !5181
  %conv20 = sext i16 %19 to i32, !dbg !5180
  %cmp21 = icmp eq i32 %conv20, 7, !dbg !5182
  br i1 %cmp21, label %if.then23, label %if.else24, !dbg !5183

if.then23:                                        ; preds = %land.lhs.true18
  store i32 1, i32* %retval, align 4, !dbg !5184
  br label %return, !dbg !5184

if.else24:                                        ; preds = %land.lhs.true18, %if.else
  %20 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5185
  %spacetype25 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %20, i32 0, i32 8, !dbg !5187
  %21 = load i8, i8* %spacetype25, align 8, !dbg !5187
  %conv26 = zext i8 %21 to i32, !dbg !5185
  %cmp27 = icmp eq i32 %conv26, 5, !dbg !5188
  br i1 %cmp27, label %land.lhs.true29, label %if.end35, !dbg !5189

land.lhs.true29:                                  ; preds = %if.else24
  %22 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5190
  %regiontype30 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %22, i32 0, i32 8, !dbg !5191
  %23 = load i16, i16* %regiontype30, align 2, !dbg !5191
  %conv31 = sext i16 %23 to i32, !dbg !5190
  %cmp32 = icmp eq i32 %conv31, 2, !dbg !5192
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !5193

if.then34:                                        ; preds = %land.lhs.true29
  store i32 1, i32* %retval, align 4, !dbg !5194
  br label %return, !dbg !5194

if.end35:                                         ; preds = %land.lhs.true29, %if.else24
  br label %if.end36

if.end36:                                         ; preds = %if.end35
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end13
  %24 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5195
  %panels = getelementptr inbounds %struct.ARegion, %struct.ARegion* %24, i32 0, i32 22, !dbg !5197
  %first38 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels, i32 0, i32 0, !dbg !5198
  %25 = load i8*, i8** %first38, align 8, !dbg !5198
  %26 = bitcast i8* %25 to %struct.Panel*, !dbg !5195
  store %struct.Panel* %26, %struct.Panel** %pa, align 8, !dbg !5199
  br label %for.cond, !dbg !5200

for.cond:                                         ; preds = %for.inc, %if.end37
  %27 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5201
  %tobool39 = icmp ne %struct.Panel* %27, null, !dbg !5203
  br i1 %tobool39, label %for.body, label %for.end, !dbg !5203

for.body:                                         ; preds = %for.cond
  %28 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5204
  %runtime_flag = getelementptr inbounds %struct.Panel, %struct.Panel* %28, i32 0, i32 14, !dbg !5207
  %29 = load i16, i16* %runtime_flag, align 2, !dbg !5207
  %conv40 = sext i16 %29 to i32, !dbg !5204
  %and = and i32 %conv40, 4, !dbg !5208
  %tobool41 = icmp ne i32 %and, 0, !dbg !5208
  br i1 %tobool41, label %land.lhs.true42, label %if.end48, !dbg !5209

land.lhs.true42:                                  ; preds = %for.body
  %30 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5210
  %runtime_flag43 = getelementptr inbounds %struct.Panel, %struct.Panel* %30, i32 0, i32 14, !dbg !5211
  %31 = load i16, i16* %runtime_flag43, align 2, !dbg !5211
  %conv44 = sext i16 %31 to i32, !dbg !5210
  %and45 = and i32 %conv44, 2, !dbg !5212
  %tobool46 = icmp ne i32 %and45, 0, !dbg !5212
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !5213

if.then47:                                        ; preds = %land.lhs.true42
  store i32 1, i32* %retval, align 4, !dbg !5214
  br label %return, !dbg !5214

if.end48:                                         ; preds = %land.lhs.true42, %for.body
  %32 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5215
  %runtime_flag49 = getelementptr inbounds %struct.Panel, %struct.Panel* %32, i32 0, i32 14, !dbg !5217
  %33 = load i16, i16* %runtime_flag49, align 2, !dbg !5217
  %conv50 = sext i16 %33 to i32, !dbg !5215
  %and51 = and i32 %conv50, 4, !dbg !5218
  %tobool52 = icmp ne i32 %and51, 0, !dbg !5218
  br i1 %tobool52, label %if.end59, label %land.lhs.true53, !dbg !5219

land.lhs.true53:                                  ; preds = %if.end48
  %34 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5220
  %runtime_flag54 = getelementptr inbounds %struct.Panel, %struct.Panel* %34, i32 0, i32 14, !dbg !5221
  %35 = load i16, i16* %runtime_flag54, align 2, !dbg !5221
  %conv55 = sext i16 %35 to i32, !dbg !5220
  %and56 = and i32 %conv55, 2, !dbg !5222
  %tobool57 = icmp ne i32 %and56, 0, !dbg !5222
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !5223

if.then58:                                        ; preds = %land.lhs.true53
  store i32 1, i32* %retval, align 4, !dbg !5224
  br label %return, !dbg !5224

if.end59:                                         ; preds = %land.lhs.true53, %if.end48
  %36 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5225
  %activedata = getelementptr inbounds %struct.Panel, %struct.Panel* %36, i32 0, i32 19, !dbg !5227
  %37 = load i8*, i8** %activedata, align 8, !dbg !5227
  %tobool60 = icmp ne i8* %37, null, !dbg !5225
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !5228

if.then61:                                        ; preds = %if.end59
  store i32 1, i32* %active, align 4, !dbg !5229
  br label %if.end62, !dbg !5230

if.end62:                                         ; preds = %if.then61, %if.end59
  br label %for.inc, !dbg !5231

for.inc:                                          ; preds = %if.end62
  %38 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5232
  %next = getelementptr inbounds %struct.Panel, %struct.Panel* %38, i32 0, i32 0, !dbg !5233
  %39 = load %struct.Panel*, %struct.Panel** %next, align 8, !dbg !5233
  store %struct.Panel* %39, %struct.Panel** %pa, align 8, !dbg !5234
  br label %for.cond, !dbg !5235, !llvm.loop !5236

for.end:                                          ; preds = %for.cond
  %40 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5238
  %panels63 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %40, i32 0, i32 22, !dbg !5240
  %first64 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels63, i32 0, i32 0, !dbg !5241
  %41 = load i8*, i8** %first64, align 8, !dbg !5241
  %42 = bitcast i8* %41 to %struct.Panel*, !dbg !5238
  store %struct.Panel* %42, %struct.Panel** %pa, align 8, !dbg !5242
  br label %for.cond65, !dbg !5243

for.cond65:                                       ; preds = %for.inc77, %for.end
  %43 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5244
  %tobool66 = icmp ne %struct.Panel* %43, null, !dbg !5246
  br i1 %tobool66, label %for.body67, label %for.end79, !dbg !5246

for.body67:                                       ; preds = %for.cond65
  %44 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5247
  %runtime_flag68 = getelementptr inbounds %struct.Panel, %struct.Panel* %44, i32 0, i32 14, !dbg !5250
  %45 = load i16, i16* %runtime_flag68, align 2, !dbg !5250
  %conv69 = sext i16 %45 to i32, !dbg !5247
  %and70 = and i32 %conv69, 8, !dbg !5251
  %tobool71 = icmp ne i32 %and70, 0, !dbg !5251
  br i1 %tobool71, label %if.then72, label %if.end76, !dbg !5252

if.then72:                                        ; preds = %for.body67
  %46 = load i32, i32* %active, align 4, !dbg !5253
  %tobool73 = icmp ne i32 %46, 0, !dbg !5253
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !5256

if.then74:                                        ; preds = %if.then72
  %47 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5257
  %48 = load %struct.Panel**, %struct.Panel*** %r_pa.addr, align 8, !dbg !5258
  store %struct.Panel* %47, %struct.Panel** %48, align 8, !dbg !5259
  br label %if.end75, !dbg !5260

if.end75:                                         ; preds = %if.then74, %if.then72
  store i32 1, i32* %retval, align 4, !dbg !5261
  br label %return, !dbg !5261

if.end76:                                         ; preds = %for.body67
  br label %for.inc77, !dbg !5262

for.inc77:                                        ; preds = %if.end76
  %49 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5263
  %next78 = getelementptr inbounds %struct.Panel, %struct.Panel* %49, i32 0, i32 0, !dbg !5264
  %50 = load %struct.Panel*, %struct.Panel** %next78, align 8, !dbg !5264
  store %struct.Panel* %50, %struct.Panel** %pa, align 8, !dbg !5265
  br label %for.cond65, !dbg !5266, !llvm.loop !5267

for.end79:                                        ; preds = %for.cond65
  store i32 0, i32* %retval, align 4, !dbg !5269
  br label %return, !dbg !5269

return:                                           ; preds = %for.end79, %if.end75, %if.then58, %if.then47, %if.then34, %if.then23, %if.then12
  %51 = load i32, i32* %retval, align 4, !dbg !5270
  ret i32 %51, !dbg !5270
}

; Function Attrs: noinline nounwind uwtable
define internal void @panel_activate_state(%struct.bContext* %C, %struct.Panel* %pa, i32 %state) #0 !dbg !5271 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %pa.addr = alloca %struct.Panel*, align 8
  %state.addr = alloca i32, align 4
  %data = alloca %struct.uiHandlePanelData*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5275, metadata !DIExpression()), !dbg !5276
  store %struct.Panel* %pa, %struct.Panel** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa.addr, metadata !5277, metadata !DIExpression()), !dbg !5278
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !5279, metadata !DIExpression()), !dbg !5280
  call void @llvm.dbg.declare(metadata %struct.uiHandlePanelData** %data, metadata !5281, metadata !DIExpression()), !dbg !5297
  %0 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !5298
  %activedata = getelementptr inbounds %struct.Panel, %struct.Panel* %0, i32 0, i32 19, !dbg !5299
  %1 = load i8*, i8** %activedata, align 8, !dbg !5299
  %2 = bitcast i8* %1 to %struct.uiHandlePanelData*, !dbg !5298
  store %struct.uiHandlePanelData* %2, %struct.uiHandlePanelData** %data, align 8, !dbg !5297
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !5300, metadata !DIExpression()), !dbg !5303
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5304
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %3), !dbg !5305
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !5303
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5306, metadata !DIExpression()), !dbg !5307
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5308
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %4), !dbg !5309
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !5307
  %5 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5310
  %tobool = icmp ne %struct.uiHandlePanelData* %5, null, !dbg !5310
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5312

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5313
  %state2 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %6, i32 0, i32 0, !dbg !5314
  %7 = load i32, i32* %state2, align 8, !dbg !5314
  %8 = load i32, i32* %state.addr, align 4, !dbg !5315
  %cmp = icmp eq i32 %7, %8, !dbg !5316
  br i1 %cmp, label %if.then, label %if.end, !dbg !5317

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !5318

if.end:                                           ; preds = %land.lhs.true, %entry
  %9 = load i32, i32* %state.addr, align 4, !dbg !5319
  %cmp3 = icmp eq i32 %9, 4, !dbg !5321
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !5322

lor.lhs.false:                                    ; preds = %if.end
  %10 = load i32, i32* %state.addr, align 4, !dbg !5323
  %cmp4 = icmp eq i32 %10, 3, !dbg !5324
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !5325

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %11 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5326
  %tobool6 = icmp ne %struct.uiHandlePanelData* %11, null, !dbg !5326
  br i1 %tobool6, label %land.lhs.true7, label %if.end11, !dbg !5329

land.lhs.true7:                                   ; preds = %if.then5
  %12 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5330
  %state8 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %12, i32 0, i32 0, !dbg !5331
  %13 = load i32, i32* %state8, align 8, !dbg !5331
  %cmp9 = icmp ne i32 %13, 3, !dbg !5332
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5333

if.then10:                                        ; preds = %land.lhs.true7
  %14 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5334
  call void @check_panel_overlap(%struct.ARegion* %14, %struct.Panel* null), !dbg !5336
  br label %if.end11, !dbg !5337

if.end11:                                         ; preds = %if.then10, %land.lhs.true7, %if.then5
  %15 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !5338
  %flag = getelementptr inbounds %struct.Panel, %struct.Panel* %15, i32 0, i32 13, !dbg !5339
  %16 = load i16, i16* %flag, align 4, !dbg !5340
  %conv = sext i16 %16 to i32, !dbg !5340
  %and = and i32 %conv, -2, !dbg !5340
  %conv12 = trunc i32 %and to i16, !dbg !5340
  store i16 %conv12, i16* %flag, align 4, !dbg !5340
  br label %if.end16, !dbg !5341

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !5342
  %flag13 = getelementptr inbounds %struct.Panel, %struct.Panel* %17, i32 0, i32 13, !dbg !5343
  %18 = load i16, i16* %flag13, align 4, !dbg !5344
  %conv14 = sext i16 %18 to i32, !dbg !5344
  %or = or i32 %conv14, 1, !dbg !5344
  %conv15 = trunc i32 %or to i16, !dbg !5344
  store i16 %conv15, i16* %flag13, align 4, !dbg !5344
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.end11
  %19 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5345
  %tobool17 = icmp ne %struct.uiHandlePanelData* %19, null, !dbg !5345
  br i1 %tobool17, label %land.lhs.true18, label %if.end24, !dbg !5347

land.lhs.true18:                                  ; preds = %if.end16
  %20 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5348
  %animtimer = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %20, i32 0, i32 1, !dbg !5349
  %21 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !5349
  %tobool19 = icmp ne %struct.wmTimer* %21, null, !dbg !5348
  br i1 %tobool19, label %if.then20, label %if.end24, !dbg !5350

if.then20:                                        ; preds = %land.lhs.true18
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5351
  %call21 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %22), !dbg !5353
  %23 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5354
  %24 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5355
  %animtimer22 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %24, i32 0, i32 1, !dbg !5356
  %25 = load %struct.wmTimer*, %struct.wmTimer** %animtimer22, align 8, !dbg !5356
  call void @WM_event_remove_timer(%struct.wmWindowManager* %call21, %struct.wmWindow* %23, %struct.wmTimer* %25), !dbg !5357
  %26 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5358
  %animtimer23 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %26, i32 0, i32 1, !dbg !5359
  store %struct.wmTimer* null, %struct.wmTimer** %animtimer23, align 8, !dbg !5360
  br label %if.end24, !dbg !5361

if.end24:                                         ; preds = %if.then20, %land.lhs.true18, %if.end16
  %27 = load i32, i32* %state.addr, align 4, !dbg !5362
  %cmp25 = icmp eq i32 %27, 4, !dbg !5364
  br i1 %cmp25, label %if.then27, label %if.else29, !dbg !5365

if.then27:                                        ; preds = %if.end24
  %28 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5366
  %29 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5368
  %30 = bitcast %struct.uiHandlePanelData* %29 to i8*, !dbg !5368
  call void %28(i8* %30), !dbg !5366
  %31 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !5369
  %activedata28 = getelementptr inbounds %struct.Panel, %struct.Panel* %31, i32 0, i32 19, !dbg !5370
  store i8* null, i8** %activedata28, align 8, !dbg !5371
  %32 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5372
  %modalhandlers = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %32, i32 0, i32 29, !dbg !5373
  %33 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !5374
  %34 = bitcast %struct.Panel* %33 to i8*, !dbg !5374
  call void @WM_event_remove_ui_handler(%struct.ListBase* %modalhandlers, i32 (%struct.bContext*, %struct.wmEvent*, i8*)* @ui_handler_panel, void (%struct.bContext*, i8*)* @ui_handler_remove_panel, i8* %34, i8 zeroext 0), !dbg !5375
  br label %if.end50, !dbg !5376

if.else29:                                        ; preds = %if.end24
  %35 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5377
  %tobool30 = icmp ne %struct.uiHandlePanelData* %35, null, !dbg !5377
  br i1 %tobool30, label %if.end36, label %if.then31, !dbg !5380

if.then31:                                        ; preds = %if.else29
  %36 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5381
  %call32 = call i8* %36(i64 48, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0)), !dbg !5381
  %37 = bitcast i8* %call32 to %struct.uiHandlePanelData*, !dbg !5381
  store %struct.uiHandlePanelData* %37, %struct.uiHandlePanelData** %data, align 8, !dbg !5383
  %38 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5384
  %39 = bitcast %struct.uiHandlePanelData* %38 to i8*, !dbg !5384
  %40 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !5385
  %activedata33 = getelementptr inbounds %struct.Panel, %struct.Panel* %40, i32 0, i32 19, !dbg !5386
  store i8* %39, i8** %activedata33, align 8, !dbg !5387
  %41 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5388
  %42 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5389
  %modalhandlers34 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %42, i32 0, i32 29, !dbg !5390
  %43 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !5391
  %44 = bitcast %struct.Panel* %43 to i8*, !dbg !5391
  %call35 = call %struct.wmEventHandler* @WM_event_add_ui_handler(%struct.bContext* %41, %struct.ListBase* %modalhandlers34, i32 (%struct.bContext*, %struct.wmEvent*, i8*)* @ui_handler_panel, void (%struct.bContext*, i8*)* @ui_handler_remove_panel, i8* %44, i8 zeroext 0), !dbg !5392
  br label %if.end36, !dbg !5393

if.end36:                                         ; preds = %if.then31, %if.else29
  %45 = load i32, i32* %state.addr, align 4, !dbg !5394
  %cmp37 = icmp eq i32 %45, 3, !dbg !5394
  br i1 %cmp37, label %if.then42, label %lor.lhs.false39, !dbg !5394

lor.lhs.false39:                                  ; preds = %if.end36
  %46 = load i32, i32* %state.addr, align 4, !dbg !5394
  %cmp40 = icmp eq i32 %46, 0, !dbg !5394
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !5396

if.then42:                                        ; preds = %lor.lhs.false39, %if.end36
  %47 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5397
  %call43 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %47), !dbg !5398
  %48 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5399
  %call44 = call %struct.wmTimer* @WM_event_add_timer(%struct.wmWindowManager* %call43, %struct.wmWindow* %48, i32 272, double 2.000000e-02), !dbg !5400
  %49 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5401
  %animtimer45 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %49, i32 0, i32 1, !dbg !5402
  store %struct.wmTimer* %call44, %struct.wmTimer** %animtimer45, align 8, !dbg !5403
  br label %if.end46, !dbg !5401

if.end46:                                         ; preds = %if.then42, %lor.lhs.false39
  %50 = load i32, i32* %state.addr, align 4, !dbg !5404
  %51 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5405
  %state47 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %51, i32 0, i32 0, !dbg !5406
  store i32 %50, i32* %state47, align 8, !dbg !5407
  %52 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5408
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %52, i32 0, i32 21, !dbg !5409
  %53 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !5409
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %53, i32 0, i32 4, !dbg !5410
  %54 = load i32, i32* %x, align 4, !dbg !5410
  %55 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5411
  %startx = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %55, i32 0, i32 3, !dbg !5412
  store i32 %54, i32* %startx, align 8, !dbg !5413
  %56 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5414
  %eventstate48 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %56, i32 0, i32 21, !dbg !5415
  %57 = load %struct.wmEvent*, %struct.wmEvent** %eventstate48, align 8, !dbg !5415
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %57, i32 0, i32 5, !dbg !5416
  %58 = load i32, i32* %y, align 8, !dbg !5416
  %59 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5417
  %starty = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %59, i32 0, i32 4, !dbg !5418
  store i32 %58, i32* %starty, align 4, !dbg !5419
  %60 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !5420
  %ofsx = getelementptr inbounds %struct.Panel, %struct.Panel* %60, i32 0, i32 7, !dbg !5421
  %61 = load i32, i32* %ofsx, align 8, !dbg !5421
  %62 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5422
  %startofsx = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %62, i32 0, i32 5, !dbg !5423
  store i32 %61, i32* %startofsx, align 8, !dbg !5424
  %63 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !5425
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %63, i32 0, i32 8, !dbg !5426
  %64 = load i32, i32* %ofsy, align 4, !dbg !5426
  %65 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5427
  %startofsy = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %65, i32 0, i32 6, !dbg !5428
  store i32 %64, i32* %startofsy, align 4, !dbg !5429
  %66 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !5430
  %sizex = getelementptr inbounds %struct.Panel, %struct.Panel* %66, i32 0, i32 9, !dbg !5431
  %67 = load i32, i32* %sizex, align 8, !dbg !5431
  %68 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5432
  %startsizex = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %68, i32 0, i32 7, !dbg !5433
  store i32 %67, i32* %startsizex, align 8, !dbg !5434
  %69 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !5435
  %sizey = getelementptr inbounds %struct.Panel, %struct.Panel* %69, i32 0, i32 10, !dbg !5436
  %70 = load i32, i32* %sizey, align 4, !dbg !5436
  %71 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5437
  %startsizey = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %71, i32 0, i32 8, !dbg !5438
  store i32 %70, i32* %startsizey, align 4, !dbg !5439
  %call49 = call double @PIL_check_seconds_timer(), !dbg !5440
  %72 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !5441
  %starttime = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %72, i32 0, i32 2, !dbg !5442
  store double %call49, double* %starttime, align 8, !dbg !5443
  br label %if.end50

if.end50:                                         ; preds = %if.end46, %if.then27
  %73 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5444
  call void @ED_region_tag_redraw(%struct.ARegion* %73), !dbg !5445
  br label %return, !dbg !5446

return:                                           ; preds = %if.end50, %if.then
  ret void, !dbg !5446
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uiAlignPanelStep(%struct.ScrArea* %sa, %struct.ARegion* %ar, float %fac, i8 zeroext %drag) #0 !dbg !5447 {
entry:
  %retval = alloca i8, align 1
  %sa.addr = alloca %struct.ScrArea*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %fac.addr = alloca float, align 4
  %drag.addr = alloca i8, align 1
  %pa = alloca %struct.Panel*, align 8
  %ps = alloca %struct.PanelSort*, align 8
  %panelsort = alloca %struct.PanelSort*, align 8
  %psnext = alloca %struct.PanelSort*, align 8
  %a = alloca i32, align 4
  %tot = alloca i32, align 4
  %done = alloca i8, align 1
  %align = alloca i32, align 4
  %has_category_tabs = alloca i8, align 1
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !5451, metadata !DIExpression()), !dbg !5452
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !5453, metadata !DIExpression()), !dbg !5454
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !5455, metadata !DIExpression()), !dbg !5456
  store i8 %drag, i8* %drag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %drag.addr, metadata !5457, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !5459, metadata !DIExpression()), !dbg !5460
  call void @llvm.dbg.declare(metadata %struct.PanelSort** %ps, metadata !5461, metadata !DIExpression()), !dbg !5468
  call void @llvm.dbg.declare(metadata %struct.PanelSort** %panelsort, metadata !5469, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.declare(metadata %struct.PanelSort** %psnext, metadata !5471, metadata !DIExpression()), !dbg !5472
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5473, metadata !DIExpression()), !dbg !5474
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5475, metadata !DIExpression()), !dbg !5476
  store i32 0, i32* %tot, align 4, !dbg !5476
  call void @llvm.dbg.declare(metadata i8* %done, metadata !5477, metadata !DIExpression()), !dbg !5478
  call void @llvm.dbg.declare(metadata i32* %align, metadata !5479, metadata !DIExpression()), !dbg !5480
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5481
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5482
  %call = call i32 @panel_aligned(%struct.ScrArea* %0, %struct.ARegion* %1), !dbg !5483
  store i32 %call, i32* %align, align 4, !dbg !5480
  call void @llvm.dbg.declare(metadata i8* %has_category_tabs, metadata !5484, metadata !DIExpression()), !dbg !5485
  %2 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5486
  %call1 = call zeroext i8 @UI_panel_category_is_visible(%struct.ARegion* %2), !dbg !5487
  store i8 %call1, i8* %has_category_tabs, align 1, !dbg !5485
  %3 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5488
  %panels = getelementptr inbounds %struct.ARegion, %struct.ARegion* %3, i32 0, i32 22, !dbg !5490
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels, i32 0, i32 0, !dbg !5491
  %4 = load i8*, i8** %first, align 8, !dbg !5491
  %5 = bitcast i8* %4 to %struct.Panel*, !dbg !5488
  store %struct.Panel* %5, %struct.Panel** %pa, align 8, !dbg !5492
  br label %for.cond, !dbg !5493

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5494
  %tobool = icmp ne %struct.Panel* %6, null, !dbg !5496
  br i1 %tobool, label %for.body, label %for.end, !dbg !5496

for.body:                                         ; preds = %for.cond
  %7 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5497
  %runtime_flag = getelementptr inbounds %struct.Panel, %struct.Panel* %7, i32 0, i32 14, !dbg !5499
  %8 = load i16, i16* %runtime_flag, align 2, !dbg !5499
  %conv = sext i16 %8 to i32, !dbg !5497
  %and = and i32 %conv, 2, !dbg !5500
  %tobool2 = icmp ne i32 %and, 0, !dbg !5500
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !5501

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5502
  %paneltab = getelementptr inbounds %struct.Panel, %struct.Panel* %9, i32 0, i32 18, !dbg !5503
  %10 = load %struct.Panel*, %struct.Panel** %paneltab, align 8, !dbg !5503
  %cmp = icmp eq %struct.Panel* %10, null, !dbg !5504
  br i1 %cmp, label %if.then, label %if.end, !dbg !5505

if.then:                                          ; preds = %land.lhs.true
  %11 = load i32, i32* %tot, align 4, !dbg !5506
  %inc = add nsw i32 %11, 1, !dbg !5506
  store i32 %inc, i32* %tot, align 4, !dbg !5506
  br label %if.end, !dbg !5507

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !5508

for.inc:                                          ; preds = %if.end
  %12 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5509
  %next = getelementptr inbounds %struct.Panel, %struct.Panel* %12, i32 0, i32 0, !dbg !5510
  %13 = load %struct.Panel*, %struct.Panel** %next, align 8, !dbg !5510
  store %struct.Panel* %13, %struct.Panel** %pa, align 8, !dbg !5511
  br label %for.cond, !dbg !5512, !llvm.loop !5513

for.end:                                          ; preds = %for.cond
  %14 = load i32, i32* %tot, align 4, !dbg !5515
  %cmp4 = icmp eq i32 %14, 0, !dbg !5517
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !5518

if.then6:                                         ; preds = %for.end
  store i8 0, i8* %retval, align 1, !dbg !5519
  br label %return, !dbg !5519

if.end7:                                          ; preds = %for.end
  %15 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5520
  %panels8 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %15, i32 0, i32 22, !dbg !5522
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels8, i32 0, i32 0, !dbg !5523
  %16 = load i8*, i8** %first9, align 8, !dbg !5523
  %17 = bitcast i8* %16 to %struct.Panel*, !dbg !5520
  store %struct.Panel* %17, %struct.Panel** %pa, align 8, !dbg !5524
  br label %for.cond10, !dbg !5525

for.cond10:                                       ; preds = %for.inc47, %if.end7
  %18 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5526
  %tobool11 = icmp ne %struct.Panel* %18, null, !dbg !5528
  br i1 %tobool11, label %for.body12, label %for.end49, !dbg !5528

for.body12:                                       ; preds = %for.cond10
  %19 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5529
  %runtime_flag13 = getelementptr inbounds %struct.Panel, %struct.Panel* %19, i32 0, i32 14, !dbg !5532
  %20 = load i16, i16* %runtime_flag13, align 2, !dbg !5532
  %conv14 = sext i16 %20 to i32, !dbg !5529
  %and15 = and i32 %conv14, 2, !dbg !5533
  %tobool16 = icmp ne i32 %and15, 0, !dbg !5533
  br i1 %tobool16, label %land.lhs.true17, label %if.end46, !dbg !5534

land.lhs.true17:                                  ; preds = %for.body12
  %21 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5535
  %paneltab18 = getelementptr inbounds %struct.Panel, %struct.Panel* %21, i32 0, i32 18, !dbg !5536
  %22 = load %struct.Panel*, %struct.Panel** %paneltab18, align 8, !dbg !5536
  %cmp19 = icmp eq %struct.Panel* %22, null, !dbg !5537
  br i1 %cmp19, label %if.then21, label %if.end46, !dbg !5538

if.then21:                                        ; preds = %land.lhs.true17
  %23 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5539
  %flag = getelementptr inbounds %struct.Panel, %struct.Panel* %23, i32 0, i32 13, !dbg !5542
  %24 = load i16, i16* %flag, align 4, !dbg !5542
  %conv22 = sext i16 %24 to i32, !dbg !5539
  %and23 = and i32 %conv22, 2, !dbg !5543
  %tobool24 = icmp ne i32 %and23, 0, !dbg !5543
  br i1 %tobool24, label %land.lhs.true25, label %if.else, !dbg !5544

land.lhs.true25:                                  ; preds = %if.then21
  %25 = load i32, i32* %align, align 4, !dbg !5545
  %cmp26 = icmp eq i32 %25, 2, !dbg !5546
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !5547

if.then28:                                        ; preds = %land.lhs.true25
  %26 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5548
  %flag29 = getelementptr inbounds %struct.Panel, %struct.Panel* %26, i32 0, i32 13, !dbg !5549
  %27 = load i16, i16* %flag29, align 4, !dbg !5550
  %conv30 = sext i16 %27 to i32, !dbg !5550
  %xor = xor i32 %conv30, 6, !dbg !5550
  %conv31 = trunc i32 %xor to i16, !dbg !5550
  store i16 %conv31, i16* %flag29, align 4, !dbg !5550
  br label %if.end45, !dbg !5548

if.else:                                          ; preds = %land.lhs.true25, %if.then21
  %28 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5551
  %flag32 = getelementptr inbounds %struct.Panel, %struct.Panel* %28, i32 0, i32 13, !dbg !5553
  %29 = load i16, i16* %flag32, align 4, !dbg !5553
  %conv33 = sext i16 %29 to i32, !dbg !5551
  %and34 = and i32 %conv33, 4, !dbg !5554
  %tobool35 = icmp ne i32 %and34, 0, !dbg !5554
  br i1 %tobool35, label %land.lhs.true36, label %if.end44, !dbg !5555

land.lhs.true36:                                  ; preds = %if.else
  %30 = load i32, i32* %align, align 4, !dbg !5556
  %cmp37 = icmp eq i32 %30, 1, !dbg !5557
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !5558

if.then39:                                        ; preds = %land.lhs.true36
  %31 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5559
  %flag40 = getelementptr inbounds %struct.Panel, %struct.Panel* %31, i32 0, i32 13, !dbg !5560
  %32 = load i16, i16* %flag40, align 4, !dbg !5561
  %conv41 = sext i16 %32 to i32, !dbg !5561
  %xor42 = xor i32 %conv41, 6, !dbg !5561
  %conv43 = trunc i32 %xor42 to i16, !dbg !5561
  store i16 %conv43, i16* %flag40, align 4, !dbg !5561
  br label %if.end44, !dbg !5559

if.end44:                                         ; preds = %if.then39, %land.lhs.true36, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then28
  br label %if.end46, !dbg !5562

if.end46:                                         ; preds = %if.end45, %land.lhs.true17, %for.body12
  br label %for.inc47, !dbg !5563

for.inc47:                                        ; preds = %if.end46
  %33 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5564
  %next48 = getelementptr inbounds %struct.Panel, %struct.Panel* %33, i32 0, i32 0, !dbg !5565
  %34 = load %struct.Panel*, %struct.Panel** %next48, align 8, !dbg !5565
  store %struct.Panel* %34, %struct.Panel** %pa, align 8, !dbg !5566
  br label %for.cond10, !dbg !5567, !llvm.loop !5568

for.end49:                                        ; preds = %for.cond10
  %35 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5570
  %36 = load i32, i32* %tot, align 4, !dbg !5571
  %conv50 = sext i32 %36 to i64, !dbg !5571
  %mul = mul i64 %conv50, 16, !dbg !5572
  %call51 = call i8* %35(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)), !dbg !5570
  %37 = bitcast i8* %call51 to %struct.PanelSort*, !dbg !5570
  store %struct.PanelSort* %37, %struct.PanelSort** %panelsort, align 8, !dbg !5573
  %38 = load %struct.PanelSort*, %struct.PanelSort** %panelsort, align 8, !dbg !5574
  store %struct.PanelSort* %38, %struct.PanelSort** %ps, align 8, !dbg !5575
  %39 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5576
  %panels52 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %39, i32 0, i32 22, !dbg !5578
  %first53 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels52, i32 0, i32 0, !dbg !5579
  %40 = load i8*, i8** %first53, align 8, !dbg !5579
  %41 = bitcast i8* %40 to %struct.Panel*, !dbg !5576
  store %struct.Panel* %41, %struct.Panel** %pa, align 8, !dbg !5580
  br label %for.cond54, !dbg !5581

for.cond54:                                       ; preds = %for.inc69, %for.end49
  %42 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5582
  %tobool55 = icmp ne %struct.Panel* %42, null, !dbg !5584
  br i1 %tobool55, label %for.body56, label %for.end71, !dbg !5584

for.body56:                                       ; preds = %for.cond54
  %43 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5585
  %runtime_flag57 = getelementptr inbounds %struct.Panel, %struct.Panel* %43, i32 0, i32 14, !dbg !5588
  %44 = load i16, i16* %runtime_flag57, align 2, !dbg !5588
  %conv58 = sext i16 %44 to i32, !dbg !5585
  %and59 = and i32 %conv58, 2, !dbg !5589
  %tobool60 = icmp ne i32 %and59, 0, !dbg !5589
  br i1 %tobool60, label %land.lhs.true61, label %if.end68, !dbg !5590

land.lhs.true61:                                  ; preds = %for.body56
  %45 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5591
  %paneltab62 = getelementptr inbounds %struct.Panel, %struct.Panel* %45, i32 0, i32 18, !dbg !5592
  %46 = load %struct.Panel*, %struct.Panel** %paneltab62, align 8, !dbg !5592
  %cmp63 = icmp eq %struct.Panel* %46, null, !dbg !5593
  br i1 %cmp63, label %if.then65, label %if.end68, !dbg !5594

if.then65:                                        ; preds = %land.lhs.true61
  %47 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !5595
  %48 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5597
  %49 = bitcast %struct.Panel* %48 to i8*, !dbg !5597
  %call66 = call i8* %47(i8* %49), !dbg !5595
  %50 = bitcast i8* %call66 to %struct.Panel*, !dbg !5595
  %51 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5598
  %pa67 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %51, i32 0, i32 0, !dbg !5599
  store %struct.Panel* %50, %struct.Panel** %pa67, align 8, !dbg !5600
  %52 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5601
  %53 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5602
  %orig = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %53, i32 0, i32 1, !dbg !5603
  store %struct.Panel* %52, %struct.Panel** %orig, align 8, !dbg !5604
  %54 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5605
  %incdec.ptr = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %54, i32 1, !dbg !5605
  store %struct.PanelSort* %incdec.ptr, %struct.PanelSort** %ps, align 8, !dbg !5605
  br label %if.end68, !dbg !5606

if.end68:                                         ; preds = %if.then65, %land.lhs.true61, %for.body56
  br label %for.inc69, !dbg !5607

for.inc69:                                        ; preds = %if.end68
  %55 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5608
  %next70 = getelementptr inbounds %struct.Panel, %struct.Panel* %55, i32 0, i32 0, !dbg !5609
  %56 = load %struct.Panel*, %struct.Panel** %next70, align 8, !dbg !5609
  store %struct.Panel* %56, %struct.Panel** %pa, align 8, !dbg !5610
  br label %for.cond54, !dbg !5611, !llvm.loop !5612

for.end71:                                        ; preds = %for.cond54
  %57 = load i8, i8* %drag.addr, align 1, !dbg !5614
  %tobool72 = icmp ne i8 %57, 0, !dbg !5614
  br i1 %tobool72, label %if.then73, label %if.else90, !dbg !5616

if.then73:                                        ; preds = %for.end71
  %58 = load i32, i32* %align, align 4, !dbg !5617
  %cmp74 = icmp eq i32 %58, 2, !dbg !5620
  br i1 %cmp74, label %if.then76, label %if.else78, !dbg !5621

if.then76:                                        ; preds = %if.then73
  %59 = load %struct.PanelSort*, %struct.PanelSort** %panelsort, align 8, !dbg !5622
  %60 = bitcast %struct.PanelSort* %59 to i8*, !dbg !5622
  %61 = load i32, i32* %tot, align 4, !dbg !5623
  %conv77 = sext i32 %61 to i64, !dbg !5623
  call void @qsort(i8* %60, i64 %conv77, i64 16, i32 (i8*, i8*)* @find_highest_panel), !dbg !5624
  br label %if.end80, !dbg !5624

if.else78:                                        ; preds = %if.then73
  %62 = load %struct.PanelSort*, %struct.PanelSort** %panelsort, align 8, !dbg !5625
  %63 = bitcast %struct.PanelSort* %62 to i8*, !dbg !5625
  %64 = load i32, i32* %tot, align 4, !dbg !5626
  %conv79 = sext i32 %64 to i64, !dbg !5626
  call void @qsort(i8* %63, i64 %conv79, i64 16, i32 (i8*, i8*)* @find_leftmost_panel), !dbg !5627
  br label %if.end80

if.end80:                                         ; preds = %if.else78, %if.then76
  %65 = load %struct.PanelSort*, %struct.PanelSort** %panelsort, align 8, !dbg !5628
  store %struct.PanelSort* %65, %struct.PanelSort** %ps, align 8, !dbg !5630
  store i32 0, i32* %a, align 4, !dbg !5631
  br label %for.cond81, !dbg !5632

for.cond81:                                       ; preds = %for.inc86, %if.end80
  %66 = load i32, i32* %a, align 4, !dbg !5633
  %67 = load i32, i32* %tot, align 4, !dbg !5635
  %cmp82 = icmp slt i32 %66, %67, !dbg !5636
  br i1 %cmp82, label %for.body84, label %for.end89, !dbg !5637

for.body84:                                       ; preds = %for.cond81
  %68 = load i32, i32* %a, align 4, !dbg !5638
  %69 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5639
  %orig85 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %69, i32 0, i32 1, !dbg !5640
  %70 = load %struct.Panel*, %struct.Panel** %orig85, align 8, !dbg !5640
  %sortorder = getelementptr inbounds %struct.Panel, %struct.Panel* %70, i32 0, i32 17, !dbg !5641
  store i32 %68, i32* %sortorder, align 4, !dbg !5642
  br label %for.inc86, !dbg !5639

for.inc86:                                        ; preds = %for.body84
  %71 = load i32, i32* %a, align 4, !dbg !5643
  %inc87 = add nsw i32 %71, 1, !dbg !5643
  store i32 %inc87, i32* %a, align 4, !dbg !5643
  %72 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5644
  %incdec.ptr88 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %72, i32 1, !dbg !5644
  store %struct.PanelSort* %incdec.ptr88, %struct.PanelSort** %ps, align 8, !dbg !5644
  br label %for.cond81, !dbg !5645, !llvm.loop !5646

for.end89:                                        ; preds = %for.cond81
  br label %if.end92, !dbg !5648

if.else90:                                        ; preds = %for.end71
  %73 = load %struct.PanelSort*, %struct.PanelSort** %panelsort, align 8, !dbg !5649
  %74 = bitcast %struct.PanelSort* %73 to i8*, !dbg !5649
  %75 = load i32, i32* %tot, align 4, !dbg !5650
  %conv91 = sext i32 %75 to i64, !dbg !5650
  call void @qsort(i8* %74, i64 %conv91, i64 16, i32 (i8*, i8*)* @compare_panel), !dbg !5651
  br label %if.end92

if.end92:                                         ; preds = %if.else90, %for.end89
  %76 = load %struct.PanelSort*, %struct.PanelSort** %panelsort, align 8, !dbg !5652
  store %struct.PanelSort* %76, %struct.PanelSort** %ps, align 8, !dbg !5653
  %77 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5654
  %pa93 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %77, i32 0, i32 0, !dbg !5655
  %78 = load %struct.Panel*, %struct.Panel** %pa93, align 8, !dbg !5655
  %ofsx = getelementptr inbounds %struct.Panel, %struct.Panel* %78, i32 0, i32 7, !dbg !5656
  store i32 0, i32* %ofsx, align 8, !dbg !5657
  %79 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5658
  %pa94 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %79, i32 0, i32 0, !dbg !5659
  %80 = load %struct.Panel*, %struct.Panel** %pa94, align 8, !dbg !5659
  %call95 = call i32 @get_panel_size_y(%struct.Panel* %80), !dbg !5660
  %sub = sub nsw i32 0, %call95, !dbg !5661
  %81 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5662
  %pa96 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %81, i32 0, i32 0, !dbg !5663
  %82 = load %struct.Panel*, %struct.Panel** %pa96, align 8, !dbg !5663
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %82, i32 0, i32 8, !dbg !5664
  store i32 %sub, i32* %ofsy, align 4, !dbg !5665
  %83 = load i8, i8* %has_category_tabs, align 1, !dbg !5666
  %tobool97 = icmp ne i8 %83, 0, !dbg !5666
  br i1 %tobool97, label %if.then98, label %if.end110, !dbg !5668

if.then98:                                        ; preds = %if.end92
  %84 = load i32, i32* %align, align 4, !dbg !5669
  %cmp99 = icmp eq i32 %84, 2, !dbg !5672
  br i1 %cmp99, label %if.then101, label %if.end109, !dbg !5673

if.then101:                                       ; preds = %if.then98
  %85 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5674
  %conv102 = sext i16 %85 to i32, !dbg !5674
  %conv103 = sitofp i32 %conv102 to float, !dbg !5674
  %mul104 = fmul float %conv103, 1.000000e+00, !dbg !5674
  %86 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5676
  %pa105 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %86, i32 0, i32 0, !dbg !5677
  %87 = load %struct.Panel*, %struct.Panel** %pa105, align 8, !dbg !5677
  %ofsx106 = getelementptr inbounds %struct.Panel, %struct.Panel* %87, i32 0, i32 7, !dbg !5678
  %88 = load i32, i32* %ofsx106, align 8, !dbg !5679
  %conv107 = sitofp i32 %88 to float, !dbg !5679
  %add = fadd float %conv107, %mul104, !dbg !5679
  %conv108 = fptosi float %add to i32, !dbg !5679
  store i32 %conv108, i32* %ofsx106, align 8, !dbg !5679
  br label %if.end109, !dbg !5680

if.end109:                                        ; preds = %if.then101, %if.then98
  br label %if.end110, !dbg !5681

if.end110:                                        ; preds = %if.end109, %if.end92
  store i32 0, i32* %a, align 4, !dbg !5682
  br label %for.cond111, !dbg !5684

for.cond111:                                      ; preds = %for.inc146, %if.end110
  %89 = load i32, i32* %a, align 4, !dbg !5685
  %90 = load i32, i32* %tot, align 4, !dbg !5687
  %sub112 = sub nsw i32 %90, 1, !dbg !5688
  %cmp113 = icmp slt i32 %89, %sub112, !dbg !5689
  br i1 %cmp113, label %for.body115, label %for.end149, !dbg !5690

for.body115:                                      ; preds = %for.cond111
  %91 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5691
  %add.ptr = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %91, i64 1, !dbg !5693
  store %struct.PanelSort* %add.ptr, %struct.PanelSort** %psnext, align 8, !dbg !5694
  %92 = load i32, i32* %align, align 4, !dbg !5695
  %cmp116 = icmp eq i32 %92, 2, !dbg !5697
  br i1 %cmp116, label %if.then118, label %if.else130, !dbg !5698

if.then118:                                       ; preds = %for.body115
  %93 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5699
  %pa119 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %93, i32 0, i32 0, !dbg !5701
  %94 = load %struct.Panel*, %struct.Panel** %pa119, align 8, !dbg !5701
  %ofsx120 = getelementptr inbounds %struct.Panel, %struct.Panel* %94, i32 0, i32 7, !dbg !5702
  %95 = load i32, i32* %ofsx120, align 8, !dbg !5702
  %96 = load %struct.PanelSort*, %struct.PanelSort** %psnext, align 8, !dbg !5703
  %pa121 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %96, i32 0, i32 0, !dbg !5704
  %97 = load %struct.Panel*, %struct.Panel** %pa121, align 8, !dbg !5704
  %ofsx122 = getelementptr inbounds %struct.Panel, %struct.Panel* %97, i32 0, i32 7, !dbg !5705
  store i32 %95, i32* %ofsx122, align 8, !dbg !5706
  %98 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5707
  %pa123 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %98, i32 0, i32 0, !dbg !5708
  %99 = load %struct.Panel*, %struct.Panel** %pa123, align 8, !dbg !5708
  %call124 = call i32 @get_panel_real_ofsy(%struct.Panel* %99), !dbg !5709
  %100 = load %struct.PanelSort*, %struct.PanelSort** %psnext, align 8, !dbg !5710
  %pa125 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %100, i32 0, i32 0, !dbg !5711
  %101 = load %struct.Panel*, %struct.Panel** %pa125, align 8, !dbg !5711
  %call126 = call i32 @get_panel_size_y(%struct.Panel* %101), !dbg !5712
  %sub127 = sub nsw i32 %call124, %call126, !dbg !5713
  %102 = load %struct.PanelSort*, %struct.PanelSort** %psnext, align 8, !dbg !5714
  %pa128 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %102, i32 0, i32 0, !dbg !5715
  %103 = load %struct.Panel*, %struct.Panel** %pa128, align 8, !dbg !5715
  %ofsy129 = getelementptr inbounds %struct.Panel, %struct.Panel* %103, i32 0, i32 8, !dbg !5716
  store i32 %sub127, i32* %ofsy129, align 4, !dbg !5717
  br label %if.end145, !dbg !5718

if.else130:                                       ; preds = %for.body115
  %104 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5719
  %pa131 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %104, i32 0, i32 0, !dbg !5721
  %105 = load %struct.Panel*, %struct.Panel** %pa131, align 8, !dbg !5721
  %call132 = call i32 @get_panel_real_ofsx(%struct.Panel* %105), !dbg !5722
  %106 = load %struct.PanelSort*, %struct.PanelSort** %psnext, align 8, !dbg !5723
  %pa133 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %106, i32 0, i32 0, !dbg !5724
  %107 = load %struct.Panel*, %struct.Panel** %pa133, align 8, !dbg !5724
  %ofsx134 = getelementptr inbounds %struct.Panel, %struct.Panel* %107, i32 0, i32 7, !dbg !5725
  store i32 %call132, i32* %ofsx134, align 8, !dbg !5726
  %108 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5727
  %pa135 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %108, i32 0, i32 0, !dbg !5728
  %109 = load %struct.Panel*, %struct.Panel** %pa135, align 8, !dbg !5728
  %ofsy136 = getelementptr inbounds %struct.Panel, %struct.Panel* %109, i32 0, i32 8, !dbg !5729
  %110 = load i32, i32* %ofsy136, align 4, !dbg !5729
  %111 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5730
  %pa137 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %111, i32 0, i32 0, !dbg !5731
  %112 = load %struct.Panel*, %struct.Panel** %pa137, align 8, !dbg !5731
  %call138 = call i32 @get_panel_size_y(%struct.Panel* %112), !dbg !5732
  %add139 = add nsw i32 %110, %call138, !dbg !5733
  %113 = load %struct.PanelSort*, %struct.PanelSort** %psnext, align 8, !dbg !5734
  %pa140 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %113, i32 0, i32 0, !dbg !5735
  %114 = load %struct.Panel*, %struct.Panel** %pa140, align 8, !dbg !5735
  %call141 = call i32 @get_panel_size_y(%struct.Panel* %114), !dbg !5736
  %sub142 = sub nsw i32 %add139, %call141, !dbg !5737
  %115 = load %struct.PanelSort*, %struct.PanelSort** %psnext, align 8, !dbg !5738
  %pa143 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %115, i32 0, i32 0, !dbg !5739
  %116 = load %struct.Panel*, %struct.Panel** %pa143, align 8, !dbg !5739
  %ofsy144 = getelementptr inbounds %struct.Panel, %struct.Panel* %116, i32 0, i32 8, !dbg !5740
  store i32 %sub142, i32* %ofsy144, align 4, !dbg !5741
  br label %if.end145

if.end145:                                        ; preds = %if.else130, %if.then118
  br label %for.inc146, !dbg !5742

for.inc146:                                       ; preds = %if.end145
  %117 = load i32, i32* %a, align 4, !dbg !5743
  %inc147 = add nsw i32 %117, 1, !dbg !5743
  store i32 %inc147, i32* %a, align 4, !dbg !5743
  %118 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5744
  %incdec.ptr148 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %118, i32 1, !dbg !5744
  store %struct.PanelSort* %incdec.ptr148, %struct.PanelSort** %ps, align 8, !dbg !5744
  br label %for.cond111, !dbg !5745, !llvm.loop !5746

for.end149:                                       ; preds = %for.cond111
  store i8 0, i8* %done, align 1, !dbg !5748
  %119 = load %struct.PanelSort*, %struct.PanelSort** %panelsort, align 8, !dbg !5749
  store %struct.PanelSort* %119, %struct.PanelSort** %ps, align 8, !dbg !5750
  store i32 0, i32* %a, align 4, !dbg !5751
  br label %for.cond150, !dbg !5753

for.cond150:                                      ; preds = %for.inc202, %for.end149
  %120 = load i32, i32* %a, align 4, !dbg !5754
  %121 = load i32, i32* %tot, align 4, !dbg !5756
  %cmp151 = icmp slt i32 %120, %121, !dbg !5757
  br i1 %cmp151, label %for.body153, label %for.end205, !dbg !5758

for.body153:                                      ; preds = %for.cond150
  %122 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5759
  %pa154 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %122, i32 0, i32 0, !dbg !5762
  %123 = load %struct.Panel*, %struct.Panel** %pa154, align 8, !dbg !5762
  %flag155 = getelementptr inbounds %struct.Panel, %struct.Panel* %123, i32 0, i32 13, !dbg !5763
  %124 = load i16, i16* %flag155, align 4, !dbg !5763
  %conv156 = sext i16 %124 to i32, !dbg !5759
  %and157 = and i32 %conv156, 1, !dbg !5764
  %cmp158 = icmp eq i32 %and157, 0, !dbg !5765
  br i1 %cmp158, label %if.then160, label %if.end201, !dbg !5766

if.then160:                                       ; preds = %for.body153
  %125 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5767
  %orig161 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %125, i32 0, i32 1, !dbg !5770
  %126 = load %struct.Panel*, %struct.Panel** %orig161, align 8, !dbg !5770
  %ofsx162 = getelementptr inbounds %struct.Panel, %struct.Panel* %126, i32 0, i32 7, !dbg !5771
  %127 = load i32, i32* %ofsx162, align 8, !dbg !5771
  %128 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5772
  %pa163 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %128, i32 0, i32 0, !dbg !5773
  %129 = load %struct.Panel*, %struct.Panel** %pa163, align 8, !dbg !5773
  %ofsx164 = getelementptr inbounds %struct.Panel, %struct.Panel* %129, i32 0, i32 7, !dbg !5774
  %130 = load i32, i32* %ofsx164, align 8, !dbg !5774
  %cmp165 = icmp ne i32 %127, %130, !dbg !5775
  br i1 %cmp165, label %if.then173, label %lor.lhs.false, !dbg !5776

lor.lhs.false:                                    ; preds = %if.then160
  %131 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5777
  %orig167 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %131, i32 0, i32 1, !dbg !5778
  %132 = load %struct.Panel*, %struct.Panel** %orig167, align 8, !dbg !5778
  %ofsy168 = getelementptr inbounds %struct.Panel, %struct.Panel* %132, i32 0, i32 8, !dbg !5779
  %133 = load i32, i32* %ofsy168, align 4, !dbg !5779
  %134 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5780
  %pa169 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %134, i32 0, i32 0, !dbg !5781
  %135 = load %struct.Panel*, %struct.Panel** %pa169, align 8, !dbg !5781
  %ofsy170 = getelementptr inbounds %struct.Panel, %struct.Panel* %135, i32 0, i32 8, !dbg !5782
  %136 = load i32, i32* %ofsy170, align 4, !dbg !5782
  %cmp171 = icmp ne i32 %133, %136, !dbg !5783
  br i1 %cmp171, label %if.then173, label %if.end200, !dbg !5784

if.then173:                                       ; preds = %lor.lhs.false, %if.then160
  %137 = load float, float* %fac.addr, align 4, !dbg !5785
  %138 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5787
  %pa174 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %138, i32 0, i32 0, !dbg !5788
  %139 = load %struct.Panel*, %struct.Panel** %pa174, align 8, !dbg !5788
  %ofsx175 = getelementptr inbounds %struct.Panel, %struct.Panel* %139, i32 0, i32 7, !dbg !5789
  %140 = load i32, i32* %ofsx175, align 8, !dbg !5789
  %conv176 = sitofp i32 %140 to float, !dbg !5790
  %mul177 = fmul float %137, %conv176, !dbg !5791
  %141 = load float, float* %fac.addr, align 4, !dbg !5792
  %sub178 = fsub float 1.000000e+00, %141, !dbg !5793
  %142 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5794
  %orig179 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %142, i32 0, i32 1, !dbg !5795
  %143 = load %struct.Panel*, %struct.Panel** %orig179, align 8, !dbg !5795
  %ofsx180 = getelementptr inbounds %struct.Panel, %struct.Panel* %143, i32 0, i32 7, !dbg !5796
  %144 = load i32, i32* %ofsx180, align 8, !dbg !5796
  %conv181 = sitofp i32 %144 to float, !dbg !5797
  %mul182 = fmul float %sub178, %conv181, !dbg !5798
  %add183 = fadd float %mul177, %mul182, !dbg !5799
  %call184 = call i32 @iroundf(float %add183), !dbg !5800
  %145 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5801
  %orig185 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %145, i32 0, i32 1, !dbg !5802
  %146 = load %struct.Panel*, %struct.Panel** %orig185, align 8, !dbg !5802
  %ofsx186 = getelementptr inbounds %struct.Panel, %struct.Panel* %146, i32 0, i32 7, !dbg !5803
  store i32 %call184, i32* %ofsx186, align 8, !dbg !5804
  %147 = load float, float* %fac.addr, align 4, !dbg !5805
  %148 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5806
  %pa187 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %148, i32 0, i32 0, !dbg !5807
  %149 = load %struct.Panel*, %struct.Panel** %pa187, align 8, !dbg !5807
  %ofsy188 = getelementptr inbounds %struct.Panel, %struct.Panel* %149, i32 0, i32 8, !dbg !5808
  %150 = load i32, i32* %ofsy188, align 4, !dbg !5808
  %conv189 = sitofp i32 %150 to float, !dbg !5809
  %mul190 = fmul float %147, %conv189, !dbg !5810
  %151 = load float, float* %fac.addr, align 4, !dbg !5811
  %sub191 = fsub float 1.000000e+00, %151, !dbg !5812
  %152 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5813
  %orig192 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %152, i32 0, i32 1, !dbg !5814
  %153 = load %struct.Panel*, %struct.Panel** %orig192, align 8, !dbg !5814
  %ofsy193 = getelementptr inbounds %struct.Panel, %struct.Panel* %153, i32 0, i32 8, !dbg !5815
  %154 = load i32, i32* %ofsy193, align 4, !dbg !5815
  %conv194 = sitofp i32 %154 to float, !dbg !5816
  %mul195 = fmul float %sub191, %conv194, !dbg !5817
  %add196 = fadd float %mul190, %mul195, !dbg !5818
  %call197 = call i32 @iroundf(float %add196), !dbg !5819
  %155 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5820
  %orig198 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %155, i32 0, i32 1, !dbg !5821
  %156 = load %struct.Panel*, %struct.Panel** %orig198, align 8, !dbg !5821
  %ofsy199 = getelementptr inbounds %struct.Panel, %struct.Panel* %156, i32 0, i32 8, !dbg !5822
  store i32 %call197, i32* %ofsy199, align 4, !dbg !5823
  store i8 1, i8* %done, align 1, !dbg !5824
  br label %if.end200, !dbg !5825

if.end200:                                        ; preds = %if.then173, %lor.lhs.false
  br label %if.end201, !dbg !5826

if.end201:                                        ; preds = %if.end200, %for.body153
  br label %for.inc202, !dbg !5827

for.inc202:                                       ; preds = %if.end201
  %157 = load i32, i32* %a, align 4, !dbg !5828
  %inc203 = add nsw i32 %157, 1, !dbg !5828
  store i32 %inc203, i32* %a, align 4, !dbg !5828
  %158 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5829
  %incdec.ptr204 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %158, i32 1, !dbg !5829
  store %struct.PanelSort* %incdec.ptr204, %struct.PanelSort** %ps, align 8, !dbg !5829
  br label %for.cond150, !dbg !5830, !llvm.loop !5831

for.end205:                                       ; preds = %for.cond150
  %159 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5833
  %panels206 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %159, i32 0, i32 22, !dbg !5835
  %first207 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels206, i32 0, i32 0, !dbg !5836
  %160 = load i8*, i8** %first207, align 8, !dbg !5836
  %161 = bitcast i8* %160 to %struct.Panel*, !dbg !5833
  store %struct.Panel* %161, %struct.Panel** %pa, align 8, !dbg !5837
  br label %for.cond208, !dbg !5838

for.cond208:                                      ; preds = %for.inc221, %for.end205
  %162 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5839
  %tobool209 = icmp ne %struct.Panel* %162, null, !dbg !5841
  br i1 %tobool209, label %for.body210, label %for.end223, !dbg !5841

for.body210:                                      ; preds = %for.cond208
  %163 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5842
  %paneltab211 = getelementptr inbounds %struct.Panel, %struct.Panel* %163, i32 0, i32 18, !dbg !5844
  %164 = load %struct.Panel*, %struct.Panel** %paneltab211, align 8, !dbg !5844
  %tobool212 = icmp ne %struct.Panel* %164, null, !dbg !5842
  br i1 %tobool212, label %land.lhs.true213, label %if.end220, !dbg !5845

land.lhs.true213:                                 ; preds = %for.body210
  %165 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5846
  %runtime_flag214 = getelementptr inbounds %struct.Panel, %struct.Panel* %165, i32 0, i32 14, !dbg !5847
  %166 = load i16, i16* %runtime_flag214, align 2, !dbg !5847
  %conv215 = sext i16 %166 to i32, !dbg !5846
  %and216 = and i32 %conv215, 2, !dbg !5848
  %tobool217 = icmp ne i32 %and216, 0, !dbg !5848
  br i1 %tobool217, label %if.then218, label %if.end220, !dbg !5849

if.then218:                                       ; preds = %land.lhs.true213
  %167 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5850
  %168 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5851
  %paneltab219 = getelementptr inbounds %struct.Panel, %struct.Panel* %168, i32 0, i32 18, !dbg !5852
  %169 = load %struct.Panel*, %struct.Panel** %paneltab219, align 8, !dbg !5852
  call void @ui_panel_copy_offset(%struct.Panel* %167, %struct.Panel* %169), !dbg !5853
  br label %if.end220, !dbg !5853

if.end220:                                        ; preds = %if.then218, %land.lhs.true213, %for.body210
  br label %for.inc221, !dbg !5854

for.inc221:                                       ; preds = %if.end220
  %170 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5855
  %next222 = getelementptr inbounds %struct.Panel, %struct.Panel* %170, i32 0, i32 0, !dbg !5856
  %171 = load %struct.Panel*, %struct.Panel** %next222, align 8, !dbg !5856
  store %struct.Panel* %171, %struct.Panel** %pa, align 8, !dbg !5857
  br label %for.cond208, !dbg !5858, !llvm.loop !5859

for.end223:                                       ; preds = %for.cond208
  %172 = load %struct.PanelSort*, %struct.PanelSort** %panelsort, align 8, !dbg !5861
  store %struct.PanelSort* %172, %struct.PanelSort** %ps, align 8, !dbg !5863
  store i32 0, i32* %a, align 4, !dbg !5864
  br label %for.cond224, !dbg !5865

for.cond224:                                      ; preds = %for.inc229, %for.end223
  %173 = load i32, i32* %a, align 4, !dbg !5866
  %174 = load i32, i32* %tot, align 4, !dbg !5868
  %cmp225 = icmp slt i32 %173, %174, !dbg !5869
  br i1 %cmp225, label %for.body227, label %for.end232, !dbg !5870

for.body227:                                      ; preds = %for.cond224
  %175 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5871
  %176 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5873
  %pa228 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %176, i32 0, i32 0, !dbg !5874
  %177 = load %struct.Panel*, %struct.Panel** %pa228, align 8, !dbg !5874
  %178 = bitcast %struct.Panel* %177 to i8*, !dbg !5873
  call void %175(i8* %178), !dbg !5871
  br label %for.inc229, !dbg !5875

for.inc229:                                       ; preds = %for.body227
  %179 = load i32, i32* %a, align 4, !dbg !5876
  %inc230 = add nsw i32 %179, 1, !dbg !5876
  store i32 %inc230, i32* %a, align 4, !dbg !5876
  %180 = load %struct.PanelSort*, %struct.PanelSort** %ps, align 8, !dbg !5877
  %incdec.ptr231 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %180, i32 1, !dbg !5877
  store %struct.PanelSort* %incdec.ptr231, %struct.PanelSort** %ps, align 8, !dbg !5877
  br label %for.cond224, !dbg !5878, !llvm.loop !5879

for.end232:                                       ; preds = %for.cond224
  %181 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5881
  %182 = load %struct.PanelSort*, %struct.PanelSort** %panelsort, align 8, !dbg !5882
  %183 = bitcast %struct.PanelSort* %182 to i8*, !dbg !5882
  call void %181(i8* %183), !dbg !5881
  %184 = load i8, i8* %done, align 1, !dbg !5883
  store i8 %184, i8* %retval, align 1, !dbg !5884
  br label %return, !dbg !5884

return:                                           ; preds = %for.end232, %if.then6
  %185 = load i8, i8* %retval, align 1, !dbg !5885
  ret i8 %185, !dbg !5885
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_panels_size(%struct.ScrArea* %sa, %struct.ARegion* %ar, i32* %x, i32* %y) #0 !dbg !5886 {
entry:
  %sa.addr = alloca %struct.ScrArea*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %x.addr = alloca i32*, align 8
  %y.addr = alloca i32*, align 8
  %pa = alloca %struct.Panel*, align 8
  %align = alloca i32, align 4
  %sizex = alloca i32, align 4
  %sizey = alloca i32, align 4
  %pa_sizex = alloca i32, align 4
  %pa_sizey = alloca i32, align 4
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !5889, metadata !DIExpression()), !dbg !5890
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !5891, metadata !DIExpression()), !dbg !5892
  store i32* %x, i32** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %x.addr, metadata !5893, metadata !DIExpression()), !dbg !5894
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !5895, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !5897, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.declare(metadata i32* %align, metadata !5899, metadata !DIExpression()), !dbg !5900
  %0 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !5901
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5902
  %call = call i32 @panel_aligned(%struct.ScrArea* %0, %struct.ARegion* %1), !dbg !5903
  store i32 %call, i32* %align, align 4, !dbg !5900
  call void @llvm.dbg.declare(metadata i32* %sizex, metadata !5904, metadata !DIExpression()), !dbg !5905
  store i32 0, i32* %sizex, align 4, !dbg !5905
  call void @llvm.dbg.declare(metadata i32* %sizey, metadata !5906, metadata !DIExpression()), !dbg !5907
  store i32 0, i32* %sizey, align 4, !dbg !5907
  %2 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5908
  %panels = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 22, !dbg !5910
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels, i32 0, i32 0, !dbg !5911
  %3 = load i8*, i8** %first, align 8, !dbg !5911
  %4 = bitcast i8* %3 to %struct.Panel*, !dbg !5908
  store %struct.Panel* %4, %struct.Panel** %pa, align 8, !dbg !5912
  br label %for.cond, !dbg !5913

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5914
  %tobool = icmp ne %struct.Panel* %5, null, !dbg !5916
  br i1 %tobool, label %for.body, label %for.end, !dbg !5916

for.body:                                         ; preds = %for.cond
  %6 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5917
  %runtime_flag = getelementptr inbounds %struct.Panel, %struct.Panel* %6, i32 0, i32 14, !dbg !5920
  %7 = load i16, i16* %runtime_flag, align 2, !dbg !5920
  %conv = sext i16 %7 to i32, !dbg !5917
  %and = and i32 %conv, 2, !dbg !5921
  %tobool1 = icmp ne i32 %and, 0, !dbg !5921
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !5922

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %pa_sizex, metadata !5923, metadata !DIExpression()), !dbg !5925
  call void @llvm.dbg.declare(metadata i32* %pa_sizey, metadata !5926, metadata !DIExpression()), !dbg !5927
  %8 = load i32, i32* %align, align 4, !dbg !5928
  %cmp = icmp eq i32 %8, 2, !dbg !5930
  br i1 %cmp, label %if.then3, label %if.else, !dbg !5931

if.then3:                                         ; preds = %if.then
  %9 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5932
  %ofsx = getelementptr inbounds %struct.Panel, %struct.Panel* %9, i32 0, i32 7, !dbg !5934
  %10 = load i32, i32* %ofsx, align 8, !dbg !5934
  %11 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5935
  %sizex4 = getelementptr inbounds %struct.Panel, %struct.Panel* %11, i32 0, i32 9, !dbg !5936
  %12 = load i32, i32* %sizex4, align 8, !dbg !5936
  %add = add nsw i32 %10, %12, !dbg !5937
  store i32 %add, i32* %pa_sizex, align 4, !dbg !5938
  %13 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5939
  %call5 = call i32 @get_panel_real_ofsy(%struct.Panel* %13), !dbg !5940
  store i32 %call5, i32* %pa_sizey, align 4, !dbg !5941
  br label %if.end, !dbg !5942

if.else:                                          ; preds = %if.then
  %14 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5943
  %call6 = call i32 @get_panel_real_ofsx(%struct.Panel* %14), !dbg !5945
  %15 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5946
  %sizex7 = getelementptr inbounds %struct.Panel, %struct.Panel* %15, i32 0, i32 9, !dbg !5947
  %16 = load i32, i32* %sizex7, align 8, !dbg !5947
  %add8 = add nsw i32 %call6, %16, !dbg !5948
  store i32 %add8, i32* %pa_sizex, align 4, !dbg !5949
  %17 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5950
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %17, i32 0, i32 8, !dbg !5951
  %18 = load i32, i32* %ofsy, align 4, !dbg !5951
  %19 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5952
  %call9 = call i32 @get_panel_size_y(%struct.Panel* %19), !dbg !5953
  %add10 = add nsw i32 %18, %call9, !dbg !5954
  store i32 %add10, i32* %pa_sizey, align 4, !dbg !5955
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %20 = load i32, i32* %sizex, align 4, !dbg !5956
  %21 = load i32, i32* %pa_sizex, align 4, !dbg !5957
  %call11 = call i32 @max_ii(i32 %20, i32 %21), !dbg !5958
  store i32 %call11, i32* %sizex, align 4, !dbg !5959
  %22 = load i32, i32* %sizey, align 4, !dbg !5960
  %23 = load i32, i32* %pa_sizey, align 4, !dbg !5961
  %call12 = call i32 @min_ii(i32 %22, i32 %23), !dbg !5962
  store i32 %call12, i32* %sizey, align 4, !dbg !5963
  br label %if.end13, !dbg !5964

if.end13:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !5965

for.inc:                                          ; preds = %if.end13
  %24 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !5966
  %next = getelementptr inbounds %struct.Panel, %struct.Panel* %24, i32 0, i32 0, !dbg !5967
  %25 = load %struct.Panel*, %struct.Panel** %next, align 8, !dbg !5967
  store %struct.Panel* %25, %struct.Panel** %pa, align 8, !dbg !5968
  br label %for.cond, !dbg !5969, !llvm.loop !5970

for.end:                                          ; preds = %for.cond
  %26 = load i32, i32* %sizex, align 4, !dbg !5972
  %cmp14 = icmp eq i32 %26, 0, !dbg !5974
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !5975

if.then16:                                        ; preds = %for.end
  store i32 340, i32* %sizex, align 4, !dbg !5976
  br label %if.end17, !dbg !5977

if.end17:                                         ; preds = %if.then16, %for.end
  %27 = load i32, i32* %sizey, align 4, !dbg !5978
  %cmp18 = icmp eq i32 %27, 0, !dbg !5980
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !5981

if.then20:                                        ; preds = %if.end17
  store i32 -340, i32* %sizey, align 4, !dbg !5982
  br label %if.end21, !dbg !5983

if.end21:                                         ; preds = %if.then20, %if.end17
  %28 = load i32, i32* %sizex, align 4, !dbg !5984
  %29 = load i32*, i32** %x.addr, align 8, !dbg !5985
  store i32 %28, i32* %29, align 4, !dbg !5986
  %30 = load i32, i32* %sizey, align 4, !dbg !5987
  %31 = load i32*, i32** %y.addr, align 8, !dbg !5988
  store i32 %30, i32* %31, align 4, !dbg !5989
  ret void, !dbg !5990
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiDrawPanels(%struct.bContext* %C, %struct.ARegion* %ar) #0 !dbg !5991 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %block = alloca %struct.uiBlock*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5992, metadata !DIExpression()), !dbg !5993
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !5994, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !5996, metadata !DIExpression()), !dbg !5997
  call void @UI_ThemeClearColor(i32 2), !dbg !5998
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5999
  %uiblocks = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 21, !dbg !6001
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %uiblocks, i32 0, i32 0, !dbg !6002
  %1 = load i8*, i8** %first, align 8, !dbg !6002
  %2 = bitcast i8* %1 to %struct.uiBlock*, !dbg !5999
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !6003
  br label %for.cond, !dbg !6004

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6005
  %tobool = icmp ne %struct.uiBlock* %3, null, !dbg !6007
  br i1 %tobool, label %for.body, label %for.end, !dbg !6007

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6008
  %active = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 36, !dbg !6011
  %5 = load i8, i8* %active, align 1, !dbg !6011
  %conv = zext i8 %5 to i32, !dbg !6008
  %tobool1 = icmp ne i32 %conv, 0, !dbg !6008
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !6012

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6013
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %6, i32 0, i32 3, !dbg !6014
  %7 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !6014
  %tobool2 = icmp ne %struct.Panel* %7, null, !dbg !6013
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !6015

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6016
  %panel4 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 3, !dbg !6017
  %9 = load %struct.Panel*, %struct.Panel** %panel4, align 8, !dbg !6017
  %flag = getelementptr inbounds %struct.Panel, %struct.Panel* %9, i32 0, i32 13, !dbg !6018
  %10 = load i16, i16* %flag, align 4, !dbg !6018
  %conv5 = sext i16 %10 to i32, !dbg !6016
  %and = and i32 %conv5, 1, !dbg !6019
  %tobool6 = icmp ne i32 %and, 0, !dbg !6019
  br i1 %tobool6, label %if.end, label %if.then, !dbg !6020

if.then:                                          ; preds = %land.lhs.true3
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6021
  %12 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6023
  call void @uiDrawBlock(%struct.bContext* %11, %struct.uiBlock* %12), !dbg !6024
  br label %if.end, !dbg !6025

if.end:                                           ; preds = %if.then, %land.lhs.true3, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6026

for.inc:                                          ; preds = %if.end
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6027
  %next = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %13, i32 0, i32 0, !dbg !6028
  %14 = load %struct.uiBlock*, %struct.uiBlock** %next, align 8, !dbg !6028
  store %struct.uiBlock* %14, %struct.uiBlock** %block, align 8, !dbg !6029
  br label %for.cond, !dbg !6030, !llvm.loop !6031

for.end:                                          ; preds = %for.cond
  %15 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6033
  %uiblocks7 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %15, i32 0, i32 21, !dbg !6035
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %uiblocks7, i32 0, i32 0, !dbg !6036
  %16 = load i8*, i8** %first8, align 8, !dbg !6036
  %17 = bitcast i8* %16 to %struct.uiBlock*, !dbg !6033
  store %struct.uiBlock* %17, %struct.uiBlock** %block, align 8, !dbg !6037
  br label %for.cond9, !dbg !6038

for.cond9:                                        ; preds = %for.inc26, %for.end
  %18 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6039
  %tobool10 = icmp ne %struct.uiBlock* %18, null, !dbg !6041
  br i1 %tobool10, label %for.body11, label %for.end28, !dbg !6041

for.body11:                                       ; preds = %for.cond9
  %19 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6042
  %active12 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %19, i32 0, i32 36, !dbg !6045
  %20 = load i8, i8* %active12, align 1, !dbg !6045
  %conv13 = zext i8 %20 to i32, !dbg !6042
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !6042
  br i1 %tobool14, label %land.lhs.true15, label %if.end25, !dbg !6046

land.lhs.true15:                                  ; preds = %for.body11
  %21 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6047
  %panel16 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %21, i32 0, i32 3, !dbg !6048
  %22 = load %struct.Panel*, %struct.Panel** %panel16, align 8, !dbg !6048
  %tobool17 = icmp ne %struct.Panel* %22, null, !dbg !6047
  br i1 %tobool17, label %land.lhs.true18, label %if.end25, !dbg !6049

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %23 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6050
  %panel19 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %23, i32 0, i32 3, !dbg !6051
  %24 = load %struct.Panel*, %struct.Panel** %panel19, align 8, !dbg !6051
  %flag20 = getelementptr inbounds %struct.Panel, %struct.Panel* %24, i32 0, i32 13, !dbg !6052
  %25 = load i16, i16* %flag20, align 4, !dbg !6052
  %conv21 = sext i16 %25 to i32, !dbg !6050
  %and22 = and i32 %conv21, 1, !dbg !6053
  %tobool23 = icmp ne i32 %and22, 0, !dbg !6053
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6054

if.then24:                                        ; preds = %land.lhs.true18
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6055
  %27 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6057
  call void @uiDrawBlock(%struct.bContext* %26, %struct.uiBlock* %27), !dbg !6058
  br label %if.end25, !dbg !6059

if.end25:                                         ; preds = %if.then24, %land.lhs.true18, %land.lhs.true15, %for.body11
  br label %for.inc26, !dbg !6060

for.inc26:                                        ; preds = %if.end25
  %28 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6061
  %next27 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %28, i32 0, i32 0, !dbg !6062
  %29 = load %struct.uiBlock*, %struct.uiBlock** %next27, align 8, !dbg !6062
  store %struct.uiBlock* %29, %struct.uiBlock** %block, align 8, !dbg !6063
  br label %for.cond9, !dbg !6064, !llvm.loop !6065

for.end28:                                        ; preds = %for.cond9
  ret void, !dbg !6067
}

declare dso_local void @UI_ThemeClearColor(i32) #3

declare dso_local void @uiDrawBlock(%struct.bContext*, %struct.uiBlock*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @uiScalePanels(%struct.ARegion* %ar, float %new_width) #0 !dbg !6068 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %new_width.addr = alloca float, align 4
  %block = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %fac = alloca float, align 4
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6071, metadata !DIExpression()), !dbg !6072
  store float %new_width, float* %new_width.addr, align 4
  call void @llvm.dbg.declare(metadata float* %new_width.addr, metadata !6073, metadata !DIExpression()), !dbg !6074
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !6075, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !6077, metadata !DIExpression()), !dbg !6078
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6079
  %uiblocks = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 21, !dbg !6081
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %uiblocks, i32 0, i32 0, !dbg !6082
  %1 = load i8*, i8** %first, align 8, !dbg !6082
  %2 = bitcast i8* %1 to %struct.uiBlock*, !dbg !6079
  store %struct.uiBlock* %2, %struct.uiBlock** %block, align 8, !dbg !6083
  br label %for.cond, !dbg !6084

for.cond:                                         ; preds = %for.inc13, %entry
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6085
  %tobool = icmp ne %struct.uiBlock* %3, null, !dbg !6087
  br i1 %tobool, label %for.body, label %for.end15, !dbg !6087

for.body:                                         ; preds = %for.cond
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6088
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %4, i32 0, i32 3, !dbg !6091
  %5 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !6091
  %tobool1 = icmp ne %struct.Panel* %5, null, !dbg !6088
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6092

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float* %fac, metadata !6093, metadata !DIExpression()), !dbg !6095
  %6 = load float, float* %new_width.addr, align 4, !dbg !6096
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6097
  %panel2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %7, i32 0, i32 3, !dbg !6098
  %8 = load %struct.Panel*, %struct.Panel** %panel2, align 8, !dbg !6098
  %sizex = getelementptr inbounds %struct.Panel, %struct.Panel* %8, i32 0, i32 9, !dbg !6099
  %9 = load i32, i32* %sizex, align 8, !dbg !6099
  %conv = sitofp i32 %9 to float, !dbg !6100
  %div = fdiv float %6, %conv, !dbg !6101
  store float %div, float* %fac, align 4, !dbg !6095
  %10 = load float, float* %fac, align 4, !dbg !6102
  %conv3 = fpext float %10 to double, !dbg !6102
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), double %conv3), !dbg !6103
  %11 = load float, float* %new_width.addr, align 4, !dbg !6104
  %conv4 = fptosi float %11 to i32, !dbg !6104
  %12 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6105
  %panel5 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %12, i32 0, i32 3, !dbg !6106
  %13 = load %struct.Panel*, %struct.Panel** %panel5, align 8, !dbg !6106
  %sizex6 = getelementptr inbounds %struct.Panel, %struct.Panel* %13, i32 0, i32 9, !dbg !6107
  store i32 %conv4, i32* %sizex6, align 8, !dbg !6108
  %14 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6109
  %buttons = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %14, i32 0, i32 2, !dbg !6111
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %buttons, i32 0, i32 0, !dbg !6112
  %15 = load i8*, i8** %first7, align 8, !dbg !6112
  %16 = bitcast i8* %15 to %struct.uiBut*, !dbg !6109
  store %struct.uiBut* %16, %struct.uiBut** %but, align 8, !dbg !6113
  br label %for.cond8, !dbg !6114

for.cond8:                                        ; preds = %for.inc, %if.then
  %17 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6115
  %tobool9 = icmp ne %struct.uiBut* %17, null, !dbg !6117
  br i1 %tobool9, label %for.body10, label %for.end, !dbg !6117

for.body10:                                       ; preds = %for.cond8
  %18 = load float, float* %fac, align 4, !dbg !6118
  %19 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6120
  %rect = getelementptr inbounds %struct.uiBut, %struct.uiBut* %19, i32 0, i32 18, !dbg !6121
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect, i32 0, i32 0, !dbg !6122
  %20 = load float, float* %xmin, align 8, !dbg !6123
  %mul = fmul float %20, %18, !dbg !6123
  store float %mul, float* %xmin, align 8, !dbg !6123
  %21 = load float, float* %fac, align 4, !dbg !6124
  %22 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6125
  %rect11 = getelementptr inbounds %struct.uiBut, %struct.uiBut* %22, i32 0, i32 18, !dbg !6126
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect11, i32 0, i32 1, !dbg !6127
  %23 = load float, float* %xmax, align 4, !dbg !6128
  %mul12 = fmul float %23, %21, !dbg !6128
  store float %mul12, float* %xmax, align 4, !dbg !6128
  br label %for.inc, !dbg !6129

for.inc:                                          ; preds = %for.body10
  %24 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !6130
  %next = getelementptr inbounds %struct.uiBut, %struct.uiBut* %24, i32 0, i32 0, !dbg !6131
  %25 = load %struct.uiBut*, %struct.uiBut** %next, align 8, !dbg !6131
  store %struct.uiBut* %25, %struct.uiBut** %but, align 8, !dbg !6132
  br label %for.cond8, !dbg !6133, !llvm.loop !6134

for.end:                                          ; preds = %for.cond8
  br label %if.end, !dbg !6136

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc13, !dbg !6137

for.inc13:                                        ; preds = %if.end
  %26 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6138
  %next14 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %26, i32 0, i32 0, !dbg !6139
  %27 = load %struct.uiBlock*, %struct.uiBlock** %next14, align 8, !dbg !6139
  store %struct.uiBlock* %27, %struct.uiBlock** %block, align 8, !dbg !6140
  br label %for.cond, !dbg !6141, !llvm.loop !6142

for.end15:                                        ; preds = %for.cond
  ret void, !dbg !6144
}

declare dso_local i32 @printf(i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @UI_panel_category_is_visible(%struct.ARegion* %ar) #0 !dbg !6145 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6148, metadata !DIExpression()), !dbg !6149
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6150
  %panels_category = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 27, !dbg !6151
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels_category, i32 0, i32 0, !dbg !6152
  %1 = load i8*, i8** %first, align 8, !dbg !6152
  %tobool = icmp ne i8* %1, null, !dbg !6150
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6153

land.rhs:                                         ; preds = %entry
  %2 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6154
  %panels_category1 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 27, !dbg !6155
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels_category1, i32 0, i32 0, !dbg !6156
  %3 = load i8*, i8** %first2, align 8, !dbg !6156
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6157
  %panels_category3 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %4, i32 0, i32 27, !dbg !6158
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels_category3, i32 0, i32 1, !dbg !6159
  %5 = load i8*, i8** %last, align 8, !dbg !6159
  %cmp = icmp ne i8* %3, %5, !dbg !6160
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !6161
  %land.ext = zext i1 %6 to i32, !dbg !6153
  %conv = trunc i32 %land.ext to i8, !dbg !6150
  ret i8 %conv, !dbg !6162
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PanelCategoryDyn* @UI_panel_category_find(%struct.ARegion* %ar, i8* %idname) #0 !dbg !6163 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %idname.addr = alloca i8*, align 8
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6166, metadata !DIExpression()), !dbg !6167
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !6168, metadata !DIExpression()), !dbg !6169
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6170
  %panels_category = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 27, !dbg !6171
  %1 = load i8*, i8** %idname.addr, align 8, !dbg !6172
  %call = call i8* @BLI_findstring(%struct.ListBase* %panels_category, i8* %1, i32 16), !dbg !6173
  %2 = bitcast i8* %call to %struct.PanelCategoryDyn*, !dbg !6173
  ret %struct.PanelCategoryDyn* %2, !dbg !6174
}

declare dso_local i8* @BLI_findstring(%struct.ListBase*, i8*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PanelCategoryStack* @UI_panel_category_active_find(%struct.ARegion* %ar, i8* %idname) #0 !dbg !6175 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %idname.addr = alloca i8*, align 8
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6184, metadata !DIExpression()), !dbg !6185
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !6186, metadata !DIExpression()), !dbg !6187
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6188
  %panels_category_active = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 23, !dbg !6189
  %1 = load i8*, i8** %idname.addr, align 8, !dbg !6190
  %call = call i8* @BLI_findstring(%struct.ListBase* %panels_category_active, i8* %1, i32 16), !dbg !6191
  %2 = bitcast i8* %call to %struct.PanelCategoryStack*, !dbg !6191
  ret %struct.PanelCategoryStack* %2, !dbg !6192
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @UI_panel_category_active_get(%struct.ARegion* %ar, i8 zeroext %set_fallback) #0 !dbg !6193 {
entry:
  %retval = alloca i8*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %set_fallback.addr = alloca i8, align 1
  %pc_act = alloca %struct.PanelCategoryStack*, align 8
  %pc_dyn = alloca %struct.PanelCategoryDyn*, align 8
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6196, metadata !DIExpression()), !dbg !6197
  store i8 %set_fallback, i8* %set_fallback.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set_fallback.addr, metadata !6198, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.declare(metadata %struct.PanelCategoryStack** %pc_act, metadata !6200, metadata !DIExpression()), !dbg !6203
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6204
  %panels_category_active = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 23, !dbg !6206
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels_category_active, i32 0, i32 0, !dbg !6207
  %1 = load i8*, i8** %first, align 8, !dbg !6207
  %2 = bitcast i8* %1 to %struct.PanelCategoryStack*, !dbg !6204
  store %struct.PanelCategoryStack* %2, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6208
  br label %for.cond, !dbg !6209

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6210
  %tobool = icmp ne %struct.PanelCategoryStack* %3, null, !dbg !6212
  br i1 %tobool, label %for.body, label %for.end, !dbg !6212

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6213
  %5 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6216
  %idname = getelementptr inbounds %struct.PanelCategoryStack, %struct.PanelCategoryStack* %5, i32 0, i32 2, !dbg !6217
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !6216
  %call = call %struct.PanelCategoryDyn* @UI_panel_category_find(%struct.ARegion* %4, i8* %arraydecay), !dbg !6218
  %tobool1 = icmp ne %struct.PanelCategoryDyn* %call, null, !dbg !6218
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6219

if.then:                                          ; preds = %for.body
  %6 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6220
  %idname2 = getelementptr inbounds %struct.PanelCategoryStack, %struct.PanelCategoryStack* %6, i32 0, i32 2, !dbg !6222
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %idname2, i64 0, i64 0, !dbg !6220
  store i8* %arraydecay3, i8** %retval, align 8, !dbg !6223
  br label %return, !dbg !6223

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6224

for.inc:                                          ; preds = %if.end
  %7 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6225
  %next = getelementptr inbounds %struct.PanelCategoryStack, %struct.PanelCategoryStack* %7, i32 0, i32 0, !dbg !6226
  %8 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %next, align 8, !dbg !6226
  store %struct.PanelCategoryStack* %8, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6227
  br label %for.cond, !dbg !6228, !llvm.loop !6229

for.end:                                          ; preds = %for.cond
  %9 = load i8, i8* %set_fallback.addr, align 1, !dbg !6231
  %tobool4 = icmp ne i8 %9, 0, !dbg !6231
  br i1 %tobool4, label %if.then5, label %if.end14, !dbg !6233

if.then5:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.PanelCategoryDyn** %pc_dyn, metadata !6234, metadata !DIExpression()), !dbg !6236
  %10 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6237
  %panels_category = getelementptr inbounds %struct.ARegion, %struct.ARegion* %10, i32 0, i32 27, !dbg !6238
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels_category, i32 0, i32 0, !dbg !6239
  %11 = load i8*, i8** %first6, align 8, !dbg !6239
  %12 = bitcast i8* %11 to %struct.PanelCategoryDyn*, !dbg !6237
  store %struct.PanelCategoryDyn* %12, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6236
  %13 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6240
  %tobool7 = icmp ne %struct.PanelCategoryDyn* %13, null, !dbg !6240
  br i1 %tobool7, label %if.then8, label %if.end13, !dbg !6242

if.then8:                                         ; preds = %if.then5
  %14 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6243
  %15 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6245
  %idname9 = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %15, i32 0, i32 2, !dbg !6246
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %idname9, i64 0, i64 0, !dbg !6245
  call void @UI_panel_category_active_set(%struct.ARegion* %14, i8* %arraydecay10), !dbg !6247
  %16 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6248
  %idname11 = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %16, i32 0, i32 2, !dbg !6249
  %arraydecay12 = getelementptr inbounds [64 x i8], [64 x i8]* %idname11, i64 0, i64 0, !dbg !6248
  store i8* %arraydecay12, i8** %retval, align 8, !dbg !6250
  br label %return, !dbg !6250

if.end13:                                         ; preds = %if.then5
  br label %if.end14, !dbg !6251

if.end14:                                         ; preds = %if.end13, %for.end
  store i8* null, i8** %retval, align 8, !dbg !6252
  br label %return, !dbg !6252

return:                                           ; preds = %if.end14, %if.then8, %if.then
  %17 = load i8*, i8** %retval, align 8, !dbg !6253
  ret i8* %17, !dbg !6253
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @UI_panel_category_active_set(%struct.ARegion* %ar, i8* %idname) #0 !dbg !6254 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %idname.addr = alloca i8*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %pc_act = alloca %struct.PanelCategoryStack*, align 8
  %pc_act_next = alloca %struct.PanelCategoryStack*, align 8
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6257, metadata !DIExpression()), !dbg !6258
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !6261, metadata !DIExpression()), !dbg !6262
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6263
  %panels_category_active = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 23, !dbg !6264
  store %struct.ListBase* %panels_category_active, %struct.ListBase** %lb, align 8, !dbg !6262
  call void @llvm.dbg.declare(metadata %struct.PanelCategoryStack** %pc_act, metadata !6265, metadata !DIExpression()), !dbg !6266
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6267
  %2 = load i8*, i8** %idname.addr, align 8, !dbg !6268
  %call = call %struct.PanelCategoryStack* @UI_panel_category_active_find(%struct.ARegion* %1, i8* %2), !dbg !6269
  store %struct.PanelCategoryStack* %call, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6266
  %3 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6270
  %tobool = icmp ne %struct.PanelCategoryStack* %3, null, !dbg !6270
  br i1 %tobool, label %if.then, label %if.else, !dbg !6272

if.then:                                          ; preds = %entry
  %4 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !6273
  %5 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6275
  %6 = bitcast %struct.PanelCategoryStack* %5 to i8*, !dbg !6275
  call void @BLI_remlink(%struct.ListBase* %4, i8* %6), !dbg !6276
  br label %if.end, !dbg !6277

if.else:                                          ; preds = %entry
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6278
  %call1 = call i8* %7(i64 80, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.UI_panel_category_active_set, i64 0, i64 0)), !dbg !6278
  %8 = bitcast i8* %call1 to %struct.PanelCategoryStack*, !dbg !6278
  store %struct.PanelCategoryStack* %8, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6280
  %9 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6281
  %idname2 = getelementptr inbounds %struct.PanelCategoryStack, %struct.PanelCategoryStack* %9, i32 0, i32 2, !dbg !6282
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname2, i64 0, i64 0, !dbg !6281
  %10 = load i8*, i8** %idname.addr, align 8, !dbg !6283
  %call3 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %10, i64 64), !dbg !6284
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !6285
  %12 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6286
  %13 = bitcast %struct.PanelCategoryStack* %12 to i8*, !dbg !6286
  call void @BLI_addhead(%struct.ListBase* %11, i8* %13), !dbg !6287
  call void @llvm.dbg.declare(metadata %struct.PanelCategoryStack** %pc_act_next, metadata !6288, metadata !DIExpression()), !dbg !6290
  %14 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6291
  %next = getelementptr inbounds %struct.PanelCategoryStack, %struct.PanelCategoryStack* %14, i32 0, i32 0, !dbg !6292
  %15 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %next, align 8, !dbg !6292
  store %struct.PanelCategoryStack* %15, %struct.PanelCategoryStack** %pc_act_next, align 8, !dbg !6293
  br label %while.cond, !dbg !6294

while.cond:                                       ; preds = %if.end11, %if.end
  %16 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act_next, align 8, !dbg !6295
  store %struct.PanelCategoryStack* %16, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6296
  %tobool4 = icmp ne %struct.PanelCategoryStack* %16, null, !dbg !6294
  br i1 %tobool4, label %while.body, label %while.end, !dbg !6294

while.body:                                       ; preds = %while.cond
  %17 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6297
  %next5 = getelementptr inbounds %struct.PanelCategoryStack, %struct.PanelCategoryStack* %17, i32 0, i32 0, !dbg !6299
  %18 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %next5, align 8, !dbg !6299
  store %struct.PanelCategoryStack* %18, %struct.PanelCategoryStack** %pc_act_next, align 8, !dbg !6300
  %19 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6301
  %type = getelementptr inbounds %struct.ARegion, %struct.ARegion* %19, i32 0, i32 20, !dbg !6303
  %20 = load %struct.ARegionType*, %struct.ARegionType** %type, align 8, !dbg !6303
  %paneltypes = getelementptr inbounds %struct.ARegionType, %struct.ARegionType* %20, i32 0, i32 14, !dbg !6304
  %21 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6305
  %idname6 = getelementptr inbounds %struct.PanelCategoryStack, %struct.PanelCategoryStack* %21, i32 0, i32 2, !dbg !6306
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %idname6, i64 0, i64 0, !dbg !6305
  %call8 = call i8* @BLI_findstring(%struct.ListBase* %paneltypes, i8* %arraydecay7, i32 272), !dbg !6307
  %tobool9 = icmp ne i8* %call8, null, !dbg !6307
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !6308

if.then10:                                        ; preds = %while.body
  %22 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !6309
  %23 = load %struct.PanelCategoryStack*, %struct.PanelCategoryStack** %pc_act, align 8, !dbg !6311
  %24 = bitcast %struct.PanelCategoryStack* %23 to i8*, !dbg !6311
  call void @BLI_remlink(%struct.ListBase* %22, i8* %24), !dbg !6312
  br label %if.end11, !dbg !6313

if.end11:                                         ; preds = %if.then10, %while.body
  br label %while.cond, !dbg !6294, !llvm.loop !6314

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6316
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #3

declare dso_local void @BLI_addhead(%struct.ListBase*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PanelCategoryDyn* @UI_panel_category_find_mouse_over_ex(%struct.ARegion* %ar, i32 %x, i32 %y) #0 !dbg !6317 {
entry:
  %retval = alloca %struct.PanelCategoryDyn*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %ptd = alloca %struct.PanelCategoryDyn*, align 8
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6320, metadata !DIExpression()), !dbg !6321
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !6322, metadata !DIExpression()), !dbg !6323
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !6324, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.declare(metadata %struct.PanelCategoryDyn** %ptd, metadata !6326, metadata !DIExpression()), !dbg !6327
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6328
  %panels_category = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 27, !dbg !6330
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels_category, i32 0, i32 0, !dbg !6331
  %1 = load i8*, i8** %first, align 8, !dbg !6331
  %2 = bitcast i8* %1 to %struct.PanelCategoryDyn*, !dbg !6328
  store %struct.PanelCategoryDyn* %2, %struct.PanelCategoryDyn** %ptd, align 8, !dbg !6332
  br label %for.cond, !dbg !6333

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %ptd, align 8, !dbg !6334
  %tobool = icmp ne %struct.PanelCategoryDyn* %3, null, !dbg !6336
  br i1 %tobool, label %for.body, label %for.end, !dbg !6336

for.body:                                         ; preds = %for.cond
  %4 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %ptd, align 8, !dbg !6337
  %rect = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %4, i32 0, i32 3, !dbg !6340
  %5 = load i32, i32* %x.addr, align 4, !dbg !6341
  %6 = load i32, i32* %y.addr, align 4, !dbg !6342
  %call = call zeroext i8 @BLI_rcti_isect_pt(%struct.rcti* %rect, i32 %5, i32 %6), !dbg !6343
  %tobool1 = icmp ne i8 %call, 0, !dbg !6343
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6344

if.then:                                          ; preds = %for.body
  %7 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %ptd, align 8, !dbg !6345
  store %struct.PanelCategoryDyn* %7, %struct.PanelCategoryDyn** %retval, align 8, !dbg !6347
  br label %return, !dbg !6347

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6348

for.inc:                                          ; preds = %if.end
  %8 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %ptd, align 8, !dbg !6349
  %next = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %8, i32 0, i32 0, !dbg !6350
  %9 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %next, align 8, !dbg !6350
  store %struct.PanelCategoryDyn* %9, %struct.PanelCategoryDyn** %ptd, align 8, !dbg !6351
  br label %for.cond, !dbg !6352, !llvm.loop !6353

for.end:                                          ; preds = %for.cond
  store %struct.PanelCategoryDyn* null, %struct.PanelCategoryDyn** %retval, align 8, !dbg !6355
  br label %return, !dbg !6355

return:                                           ; preds = %for.end, %if.then
  %10 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %retval, align 8, !dbg !6356
  ret %struct.PanelCategoryDyn* %10, !dbg !6356
}

declare dso_local zeroext i8 @BLI_rcti_isect_pt(%struct.rcti*, i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.PanelCategoryDyn* @UI_panel_category_find_mouse_over(%struct.ARegion* %ar, %struct.wmEvent* %event) #0 !dbg !6357 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6363, metadata !DIExpression()), !dbg !6364
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !6365, metadata !DIExpression()), !dbg !6366
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6367
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6368
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %1, i32 0, i32 6, !dbg !6369
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !6368
  %2 = load i32, i32* %arrayidx, align 4, !dbg !6368
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6370
  %mval1 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 6, !dbg !6371
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %mval1, i64 0, i64 1, !dbg !6370
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !6370
  %call = call %struct.PanelCategoryDyn* @UI_panel_category_find_mouse_over_ex(%struct.ARegion* %0, i32 %2, i32 %4), !dbg !6372
  ret %struct.PanelCategoryDyn* %call, !dbg !6373
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @UI_panel_category_add(%struct.ARegion* %ar, i8* %name) #0 !dbg !6374 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %name.addr = alloca i8*, align 8
  %pc_dyn = alloca %struct.PanelCategoryDyn*, align 8
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6375, metadata !DIExpression()), !dbg !6376
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6377, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.declare(metadata %struct.PanelCategoryDyn** %pc_dyn, metadata !6379, metadata !DIExpression()), !dbg !6380
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6381
  %call = call i8* %0(i64 96, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.UI_panel_category_add, i64 0, i64 0)), !dbg !6381
  %1 = bitcast i8* %call to %struct.PanelCategoryDyn*, !dbg !6381
  store %struct.PanelCategoryDyn* %1, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6380
  %2 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6382
  %panels_category = getelementptr inbounds %struct.ARegion, %struct.ARegion* %2, i32 0, i32 27, !dbg !6383
  %3 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6384
  %4 = bitcast %struct.PanelCategoryDyn* %3 to i8*, !dbg !6384
  call void @BLI_addtail(%struct.ListBase* %panels_category, i8* %4), !dbg !6385
  %5 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6386
  %idname = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %5, i32 0, i32 2, !dbg !6387
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !6386
  %6 = load i8*, i8** %name.addr, align 8, !dbg !6388
  %call1 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %6, i64 64), !dbg !6389
  ret void, !dbg !6390
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @UI_panel_category_clear_all(%struct.ARegion* %ar) #0 !dbg !6391 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6394, metadata !DIExpression()), !dbg !6395
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6396
  %panels_category = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 27, !dbg !6397
  call void @BLI_freelistN(%struct.ListBase* %panels_category), !dbg !6398
  ret void, !dbg !6399
}

declare dso_local void @BLI_freelistN(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @UI_panel_category_draw_all(%struct.ARegion* %ar, i8* %category_id_active) #0 !dbg !6400 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %category_id_active.addr = alloca i8*, align 8
  %v2d = alloca %struct.View2D*, align 8
  %style = alloca %struct.uiStyle*, align 8
  %fstyle = alloca %struct.uiFontStyle*, align 8
  %fontid = alloca i32, align 4
  %fstyle_points = alloca i16, align 2
  %pc_dyn = alloca %struct.PanelCategoryDyn*, align 8
  %aspect = alloca float, align 4
  %zoom = alloca float, align 4
  %px = alloca i32, align 4
  %category_tabs_width = alloca i32, align 4
  %dpi_fac = alloca float, align 4
  %tab_v_pad_text = alloca i32, align 4
  %tab_v_pad = alloca i32, align 4
  %tab_curve_radius = alloca float, align 4
  %roundboxtype = alloca i32, align 4
  %is_alpha = alloca i8, align 1
  %do_scaletabs = alloca i8, align 1
  %scaletabs = alloca float, align 4
  %rct_xmin = alloca i32, align 4
  %rct_xmax = alloca i32, align 4
  %text_v_ofs = alloca i32, align 4
  %y_ofs = alloca i32, align 4
  %theme_col_back = alloca [4 x i8], align 1
  %theme_col_text = alloca [3 x i8], align 1
  %theme_col_text_hi = alloca [3 x i8], align 1
  %theme_col_tab_bg = alloca [4 x i8], align 1
  %theme_col_tab_active = alloca [3 x i8], align 1
  %theme_col_tab_inactive = alloca [3 x i8], align 1
  %theme_col_tab_outline = alloca [3 x i8], align 1
  %theme_col_tab_divider = alloca [3 x i8], align 1
  %theme_col_tab_highlight = alloca [3 x i8], align 1
  %theme_col_tab_highlight_inactive = alloca [3 x i8], align 1
  %rct = alloca %struct.rcti*, align 8
  %category_id = alloca i8*, align 8
  %category_id_draw = alloca i8*, align 8
  %category_width = alloca i32, align 4
  %rct95 = alloca %struct.rcti*, align 8
  %rct147 = alloca %struct.rcti*, align 8
  %category_id149 = alloca i8*, align 8
  %category_id_draw152 = alloca i8*, align 8
  %category_width153 = alloca i32, align 4
  %category_draw_len = alloca i64, align 8
  %is_active = alloca i8, align 1
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6401, metadata !DIExpression()), !dbg !6402
  store i8* %category_id_active, i8** %category_id_active.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %category_id_active.addr, metadata !6403, metadata !DIExpression()), !dbg !6404
  call void @llvm.dbg.declare(metadata %struct.View2D** %v2d, metadata !6405, metadata !DIExpression()), !dbg !6407
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6408
  %v2d1 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 2, !dbg !6409
  store %struct.View2D* %v2d1, %struct.View2D** %v2d, align 8, !dbg !6407
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !6410, metadata !DIExpression()), !dbg !6411
  %call = call %struct.uiStyle* @UI_GetStyle(), !dbg !6412
  store %struct.uiStyle* %call, %struct.uiStyle** %style, align 8, !dbg !6411
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle, metadata !6413, metadata !DIExpression()), !dbg !6416
  %1 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !6417
  %widget = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %1, i32 0, i32 6, !dbg !6418
  store %struct.uiFontStyle* %widget, %struct.uiFontStyle** %fstyle, align 8, !dbg !6416
  call void @llvm.dbg.declare(metadata i32* %fontid, metadata !6419, metadata !DIExpression()), !dbg !6420
  %2 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle, align 8, !dbg !6421
  %uifont_id = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %2, i32 0, i32 0, !dbg !6422
  %3 = load i16, i16* %uifont_id, align 4, !dbg !6422
  %conv = sext i16 %3 to i32, !dbg !6421
  store i32 %conv, i32* %fontid, align 4, !dbg !6420
  call void @llvm.dbg.declare(metadata i16* %fstyle_points, metadata !6423, metadata !DIExpression()), !dbg !6424
  %4 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle, align 8, !dbg !6425
  %points = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %4, i32 0, i32 1, !dbg !6426
  %5 = load i16, i16* %points, align 2, !dbg !6426
  store i16 %5, i16* %fstyle_points, align 2, !dbg !6424
  call void @llvm.dbg.declare(metadata %struct.PanelCategoryDyn** %pc_dyn, metadata !6427, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.declare(metadata float* %aspect, metadata !6429, metadata !DIExpression()), !dbg !6430
  %6 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6431
  %uiblocks = getelementptr inbounds %struct.ARegion, %struct.ARegion* %6, i32 0, i32 21, !dbg !6432
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %uiblocks, i32 0, i32 0, !dbg !6433
  %7 = load i8*, i8** %first, align 8, !dbg !6433
  %8 = bitcast i8* %7 to %struct.uiBlock*, !dbg !6434
  %aspect2 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %8, i32 0, i32 12, !dbg !6435
  %9 = load float, float* %aspect2, align 8, !dbg !6435
  store float %9, float* %aspect, align 4, !dbg !6430
  call void @llvm.dbg.declare(metadata float* %zoom, metadata !6436, metadata !DIExpression()), !dbg !6437
  %10 = load float, float* %aspect, align 4, !dbg !6438
  %div = fdiv float 1.000000e+00, %10, !dbg !6439
  store float %div, float* %zoom, align 4, !dbg !6437
  call void @llvm.dbg.declare(metadata i32* %px, metadata !6440, metadata !DIExpression()), !dbg !6441
  %11 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6442
  %call3 = call i32 @iroundf(float %11), !dbg !6443
  %call4 = call i32 @max_ii(i32 1, i32 %call3), !dbg !6444
  store i32 %call4, i32* %px, align 4, !dbg !6441
  call void @llvm.dbg.declare(metadata i32* %category_tabs_width, metadata !6445, metadata !DIExpression()), !dbg !6446
  %12 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6447
  %conv5 = sext i16 %12 to i32, !dbg !6447
  %conv6 = sitofp i32 %conv5 to float, !dbg !6447
  %mul = fmul float %conv6, 1.000000e+00, !dbg !6447
  %13 = load float, float* %zoom, align 4, !dbg !6448
  %mul7 = fmul float %mul, %13, !dbg !6449
  %call8 = call i32 @iroundf(float %mul7), !dbg !6450
  store i32 %call8, i32* %category_tabs_width, align 4, !dbg !6446
  call void @llvm.dbg.declare(metadata float* %dpi_fac, metadata !6451, metadata !DIExpression()), !dbg !6452
  %14 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6453
  %15 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !6453
  %conv9 = sitofp i32 %15 to float, !dbg !6453
  %mul10 = fmul float %14, %conv9, !dbg !6453
  %div11 = fdiv float %mul10, 7.200000e+01, !dbg !6453
  store float %div11, float* %dpi_fac, align 4, !dbg !6452
  call void @llvm.dbg.declare(metadata i32* %tab_v_pad_text, metadata !6454, metadata !DIExpression()), !dbg !6455
  %16 = load i32, i32* %px, align 4, !dbg !6456
  %mul12 = mul nsw i32 %16, 3, !dbg !6457
  %conv13 = sitofp i32 %mul12 to float, !dbg !6458
  %17 = load float, float* %dpi_fac, align 4, !dbg !6459
  %mul14 = fmul float %conv13, %17, !dbg !6460
  %add = fadd float 2.000000e+00, %mul14, !dbg !6461
  %18 = load float, float* %zoom, align 4, !dbg !6462
  %mul15 = fmul float %add, %18, !dbg !6463
  %call16 = call i32 @iroundf(float %mul15), !dbg !6464
  store i32 %call16, i32* %tab_v_pad_text, align 4, !dbg !6455
  call void @llvm.dbg.declare(metadata i32* %tab_v_pad, metadata !6465, metadata !DIExpression()), !dbg !6466
  %19 = load i32, i32* %px, align 4, !dbg !6467
  %mul17 = mul nsw i32 2, %19, !dbg !6468
  %conv18 = sitofp i32 %mul17 to float, !dbg !6469
  %20 = load float, float* %dpi_fac, align 4, !dbg !6470
  %mul19 = fmul float %conv18, %20, !dbg !6471
  %add20 = fadd float 4.000000e+00, %mul19, !dbg !6472
  %21 = load float, float* %zoom, align 4, !dbg !6473
  %mul21 = fmul float %add20, %21, !dbg !6474
  %call22 = call i32 @iroundf(float %mul21), !dbg !6475
  store i32 %call22, i32* %tab_v_pad, align 4, !dbg !6466
  call void @llvm.dbg.declare(metadata float* %tab_curve_radius, metadata !6476, metadata !DIExpression()), !dbg !6477
  %22 = load i32, i32* %px, align 4, !dbg !6478
  %mul23 = mul nsw i32 %22, 3, !dbg !6479
  %conv24 = sitofp i32 %mul23 to float, !dbg !6480
  %23 = load float, float* %dpi_fac, align 4, !dbg !6481
  %mul25 = fmul float %conv24, %23, !dbg !6482
  %24 = load float, float* %zoom, align 4, !dbg !6483
  %mul26 = fmul float %mul25, %24, !dbg !6484
  store float %mul26, float* %tab_curve_radius, align 4, !dbg !6477
  call void @llvm.dbg.declare(metadata i32* %roundboxtype, metadata !6485, metadata !DIExpression()), !dbg !6486
  store i32 9, i32* %roundboxtype, align 4, !dbg !6486
  call void @llvm.dbg.declare(metadata i8* %is_alpha, metadata !6487, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.declare(metadata i8* %do_scaletabs, metadata !6489, metadata !DIExpression()), !dbg !6490
  store i8 0, i8* %do_scaletabs, align 1, !dbg !6490
  call void @llvm.dbg.declare(metadata float* %scaletabs, metadata !6491, metadata !DIExpression()), !dbg !6492
  store float 1.000000e+00, float* %scaletabs, align 4, !dbg !6492
  call void @llvm.dbg.declare(metadata i32* %rct_xmin, metadata !6493, metadata !DIExpression()), !dbg !6494
  %25 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6495
  %mask = getelementptr inbounds %struct.View2D, %struct.View2D* %25, i32 0, i32 4, !dbg !6496
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %mask, i32 0, i32 0, !dbg !6497
  %26 = load i32, i32* %xmin, align 8, !dbg !6497
  %add27 = add nsw i32 %26, 3, !dbg !6498
  store i32 %add27, i32* %rct_xmin, align 4, !dbg !6494
  call void @llvm.dbg.declare(metadata i32* %rct_xmax, metadata !6499, metadata !DIExpression()), !dbg !6500
  %27 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6501
  %mask28 = getelementptr inbounds %struct.View2D, %struct.View2D* %27, i32 0, i32 4, !dbg !6502
  %xmin29 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask28, i32 0, i32 0, !dbg !6503
  %28 = load i32, i32* %xmin29, align 8, !dbg !6503
  %29 = load i32, i32* %category_tabs_width, align 4, !dbg !6504
  %add30 = add nsw i32 %28, %29, !dbg !6505
  store i32 %add30, i32* %rct_xmax, align 4, !dbg !6500
  call void @llvm.dbg.declare(metadata i32* %text_v_ofs, metadata !6506, metadata !DIExpression()), !dbg !6507
  %30 = load i32, i32* %rct_xmax, align 4, !dbg !6508
  %31 = load i32, i32* %rct_xmin, align 4, !dbg !6509
  %sub = sub nsw i32 %30, %31, !dbg !6510
  %conv31 = sitofp i32 %sub to float, !dbg !6511
  %mul32 = fmul float %conv31, 0x3FD3333340000000, !dbg !6512
  %conv33 = fptosi float %mul32 to i32, !dbg !6511
  store i32 %conv33, i32* %text_v_ofs, align 4, !dbg !6507
  call void @llvm.dbg.declare(metadata i32* %y_ofs, metadata !6513, metadata !DIExpression()), !dbg !6514
  %32 = load i32, i32* %tab_v_pad, align 4, !dbg !6515
  store i32 %32, i32* %y_ofs, align 4, !dbg !6514
  call void @llvm.dbg.declare(metadata [4 x i8]* %theme_col_back, metadata !6516, metadata !DIExpression()), !dbg !6517
  call void @llvm.dbg.declare(metadata [3 x i8]* %theme_col_text, metadata !6518, metadata !DIExpression()), !dbg !6519
  call void @llvm.dbg.declare(metadata [3 x i8]* %theme_col_text_hi, metadata !6520, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.declare(metadata [4 x i8]* %theme_col_tab_bg, metadata !6522, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.declare(metadata [3 x i8]* %theme_col_tab_active, metadata !6524, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.declare(metadata [3 x i8]* %theme_col_tab_inactive, metadata !6526, metadata !DIExpression()), !dbg !6527
  call void @llvm.dbg.declare(metadata [3 x i8]* %theme_col_tab_outline, metadata !6528, metadata !DIExpression()), !dbg !6529
  call void @llvm.dbg.declare(metadata [3 x i8]* %theme_col_tab_divider, metadata !6530, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.declare(metadata [3 x i8]* %theme_col_tab_highlight, metadata !6532, metadata !DIExpression()), !dbg !6533
  call void @llvm.dbg.declare(metadata [3 x i8]* %theme_col_tab_highlight_inactive, metadata !6534, metadata !DIExpression()), !dbg !6535
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %theme_col_back, i64 0, i64 0, !dbg !6536
  call void @UI_GetThemeColor4ubv(i32 2, i8* %arraydecay), !dbg !6537
  %arraydecay34 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_text, i64 0, i64 0, !dbg !6538
  call void @UI_GetThemeColor3ubv(i32 3, i8* %arraydecay34), !dbg !6539
  %arraydecay35 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_text_hi, i64 0, i64 0, !dbg !6540
  call void @UI_GetThemeColor3ubv(i32 4, i8* %arraydecay35), !dbg !6541
  %arraydecay36 = getelementptr inbounds [4 x i8], [4 x i8]* %theme_col_tab_bg, i64 0, i64 0, !dbg !6542
  call void @UI_GetThemeColor4ubv(i32 8, i8* %arraydecay36), !dbg !6543
  %arraydecay37 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_active, i64 0, i64 0, !dbg !6544
  call void @UI_GetThemeColor3ubv(i32 6, i8* %arraydecay37), !dbg !6545
  %arraydecay38 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_inactive, i64 0, i64 0, !dbg !6546
  call void @UI_GetThemeColor3ubv(i32 7, i8* %arraydecay38), !dbg !6547
  %arraydecay39 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_outline, i64 0, i64 0, !dbg !6548
  call void @UI_GetThemeColor3ubv(i32 9, i8* %arraydecay39), !dbg !6549
  %arraydecay40 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_divider, i64 0, i64 0, !dbg !6550
  %arraydecay41 = getelementptr inbounds [4 x i8], [4 x i8]* %theme_col_back, i64 0, i64 0, !dbg !6551
  %arraydecay42 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_outline, i64 0, i64 0, !dbg !6552
  call void @interp_v3_v3v3_uchar(i8* %arraydecay40, i8* %arraydecay41, i8* %arraydecay42, float 0x3FD3333340000000), !dbg !6553
  %arraydecay43 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_highlight, i64 0, i64 0, !dbg !6554
  %arraydecay44 = getelementptr inbounds [4 x i8], [4 x i8]* %theme_col_back, i64 0, i64 0, !dbg !6555
  %arraydecay45 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_text_hi, i64 0, i64 0, !dbg !6556
  call void @interp_v3_v3v3_uchar(i8* %arraydecay43, i8* %arraydecay44, i8* %arraydecay45, float 0x3FC99999A0000000), !dbg !6557
  %arraydecay46 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_highlight_inactive, i64 0, i64 0, !dbg !6558
  %arraydecay47 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_inactive, i64 0, i64 0, !dbg !6559
  %arraydecay48 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_text_hi, i64 0, i64 0, !dbg !6560
  call void @interp_v3_v3v3_uchar(i8* %arraydecay46, i8* %arraydecay47, i8* %arraydecay48, float 0x3FBEB851E0000000), !dbg !6561
  %33 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6562
  %overlap = getelementptr inbounds %struct.ARegion, %struct.ARegion* %33, i32 0, i32 17, !dbg !6563
  %34 = load i16, i16* %overlap, align 2, !dbg !6563
  %conv49 = sext i16 %34 to i32, !dbg !6562
  %tobool = icmp ne i32 %conv49, 0, !dbg !6562
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6564

land.rhs:                                         ; preds = %entry
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %theme_col_back, i64 0, i64 3, !dbg !6565
  %35 = load i8, i8* %arrayidx, align 1, !dbg !6565
  %conv50 = zext i8 %35 to i32, !dbg !6565
  %cmp = icmp ne i32 %conv50, 255, !dbg !6566
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %36 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !6567
  %land.ext = zext i1 %36 to i32, !dbg !6564
  %conv52 = trunc i32 %land.ext to i8, !dbg !6568
  store i8 %conv52, i8* %is_alpha, align 1, !dbg !6569
  %37 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle, align 8, !dbg !6570
  %kerning = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %37, i32 0, i32 2, !dbg !6572
  %38 = load i16, i16* %kerning, align 4, !dbg !6572
  %conv53 = sext i16 %38 to i32, !dbg !6570
  %cmp54 = icmp eq i32 %conv53, 1, !dbg !6573
  br i1 %cmp54, label %if.then, label %if.end, !dbg !6574

if.then:                                          ; preds = %land.end
  %39 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle, align 8, !dbg !6575
  %uifont_id56 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %39, i32 0, i32 0, !dbg !6577
  %40 = load i16, i16* %uifont_id56, align 4, !dbg !6577
  %conv57 = sext i16 %40 to i32, !dbg !6575
  call void @BLF_enable(i32 %conv57, i32 8), !dbg !6578
  br label %if.end, !dbg !6579

if.end:                                           ; preds = %if.then, %land.end
  %41 = load i32, i32* %fontid, align 4, !dbg !6580
  call void @BLF_enable(i32 %41, i32 1), !dbg !6581
  %42 = load i32, i32* %fontid, align 4, !dbg !6582
  call void @BLF_rotation(i32 %42, float 0x3FF921FB60000000), !dbg !6583
  %43 = load float, float* %aspect, align 4, !dbg !6584
  %44 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !6585
  %mul58 = fmul float %44, 0x3FF19999A0000000, !dbg !6586
  %div59 = fdiv float %43, %mul58, !dbg !6587
  call void @ui_fontscale(i16* %fstyle_points, float %div59), !dbg !6588
  %45 = load i32, i32* %fontid, align 4, !dbg !6589
  %46 = load i16, i16* %fstyle_points, align 2, !dbg !6590
  %conv60 = sext i16 %46 to i32, !dbg !6590
  %47 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !6591
  call void @BLF_size(i32 %45, i32 %conv60, i32 %47), !dbg !6592
  %48 = load i32, i32* %fontid, align 4, !dbg !6593
  call void @BLF_enable(i32 %48, i32 4), !dbg !6594
  %49 = load i32, i32* %fontid, align 4, !dbg !6595
  call void @BLF_shadow(i32 %49, i32 3, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 2.500000e-01), !dbg !6596
  %50 = load i32, i32* %fontid, align 4, !dbg !6597
  call void @BLF_shadow_offset(i32 %50, i32 -1, i32 -1), !dbg !6598
  %51 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6599
  %panels_category = getelementptr inbounds %struct.ARegion, %struct.ARegion* %51, i32 0, i32 27, !dbg !6601
  %first61 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels_category, i32 0, i32 0, !dbg !6602
  %52 = load i8*, i8** %first61, align 8, !dbg !6602
  %53 = bitcast i8* %52 to %struct.PanelCategoryDyn*, !dbg !6599
  store %struct.PanelCategoryDyn* %53, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6603
  br label %for.cond, !dbg !6604

for.cond:                                         ; preds = %for.inc, %if.end
  %54 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6605
  %tobool62 = icmp ne %struct.PanelCategoryDyn* %54, null, !dbg !6607
  br i1 %tobool62, label %for.body, label %for.end, !dbg !6607

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct, metadata !6608, metadata !DIExpression()), !dbg !6610
  %55 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6611
  %rect = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %55, i32 0, i32 3, !dbg !6612
  store %struct.rcti* %rect, %struct.rcti** %rct, align 8, !dbg !6610
  call void @llvm.dbg.declare(metadata i8** %category_id, metadata !6613, metadata !DIExpression()), !dbg !6614
  %56 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6615
  %idname = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %56, i32 0, i32 2, !dbg !6616
  %arraydecay63 = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !6615
  store i8* %arraydecay63, i8** %category_id, align 8, !dbg !6614
  call void @llvm.dbg.declare(metadata i8** %category_id_draw, metadata !6617, metadata !DIExpression()), !dbg !6618
  %57 = load i8*, i8** %category_id, align 8, !dbg !6619
  store i8* %57, i8** %category_id_draw, align 8, !dbg !6618
  call void @llvm.dbg.declare(metadata i32* %category_width, metadata !6620, metadata !DIExpression()), !dbg !6621
  %58 = load i32, i32* %fontid, align 4, !dbg !6622
  %59 = load i8*, i8** %category_id_draw, align 8, !dbg !6623
  %call64 = call float @BLF_width(i32 %58, i8* %59, i64 1024), !dbg !6624
  %conv65 = fptosi float %call64 to i32, !dbg !6624
  store i32 %conv65, i32* %category_width, align 4, !dbg !6621
  %60 = load i32, i32* %rct_xmin, align 4, !dbg !6625
  %61 = load %struct.rcti*, %struct.rcti** %rct, align 8, !dbg !6626
  %xmin66 = getelementptr inbounds %struct.rcti, %struct.rcti* %61, i32 0, i32 0, !dbg !6627
  store i32 %60, i32* %xmin66, align 4, !dbg !6628
  %62 = load i32, i32* %rct_xmax, align 4, !dbg !6629
  %63 = load %struct.rcti*, %struct.rcti** %rct, align 8, !dbg !6630
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %63, i32 0, i32 1, !dbg !6631
  store i32 %62, i32* %xmax, align 4, !dbg !6632
  %64 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6633
  %mask67 = getelementptr inbounds %struct.View2D, %struct.View2D* %64, i32 0, i32 4, !dbg !6634
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %mask67, i32 0, i32 3, !dbg !6635
  %65 = load i32, i32* %ymax, align 4, !dbg !6635
  %66 = load i32, i32* %y_ofs, align 4, !dbg !6636
  %67 = load i32, i32* %category_width, align 4, !dbg !6637
  %add68 = add nsw i32 %66, %67, !dbg !6638
  %68 = load i32, i32* %tab_v_pad_text, align 4, !dbg !6639
  %mul69 = mul nsw i32 %68, 2, !dbg !6640
  %add70 = add nsw i32 %add68, %mul69, !dbg !6641
  %sub71 = sub nsw i32 %65, %add70, !dbg !6642
  %69 = load %struct.rcti*, %struct.rcti** %rct, align 8, !dbg !6643
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %69, i32 0, i32 2, !dbg !6644
  store i32 %sub71, i32* %ymin, align 4, !dbg !6645
  %70 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6646
  %mask72 = getelementptr inbounds %struct.View2D, %struct.View2D* %70, i32 0, i32 4, !dbg !6647
  %ymax73 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask72, i32 0, i32 3, !dbg !6648
  %71 = load i32, i32* %ymax73, align 4, !dbg !6648
  %72 = load i32, i32* %y_ofs, align 4, !dbg !6649
  %sub74 = sub nsw i32 %71, %72, !dbg !6650
  %73 = load %struct.rcti*, %struct.rcti** %rct, align 8, !dbg !6651
  %ymax75 = getelementptr inbounds %struct.rcti, %struct.rcti* %73, i32 0, i32 3, !dbg !6652
  store i32 %sub74, i32* %ymax75, align 4, !dbg !6653
  %74 = load i32, i32* %category_width, align 4, !dbg !6654
  %75 = load i32, i32* %tab_v_pad, align 4, !dbg !6655
  %add76 = add nsw i32 %74, %75, !dbg !6656
  %76 = load i32, i32* %tab_v_pad_text, align 4, !dbg !6657
  %mul77 = mul nsw i32 %76, 2, !dbg !6658
  %add78 = add nsw i32 %add76, %mul77, !dbg !6659
  %77 = load i32, i32* %y_ofs, align 4, !dbg !6660
  %add79 = add nsw i32 %77, %add78, !dbg !6660
  store i32 %add79, i32* %y_ofs, align 4, !dbg !6660
  br label %for.inc, !dbg !6661

for.inc:                                          ; preds = %for.body
  %78 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6662
  %next = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %78, i32 0, i32 0, !dbg !6663
  %79 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %next, align 8, !dbg !6663
  store %struct.PanelCategoryDyn* %79, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6664
  br label %for.cond, !dbg !6665, !llvm.loop !6666

for.end:                                          ; preds = %for.cond
  %80 = load i32, i32* %y_ofs, align 4, !dbg !6668
  %81 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6670
  %mask80 = getelementptr inbounds %struct.View2D, %struct.View2D* %81, i32 0, i32 4, !dbg !6671
  %call81 = call i32 @BLI_rcti_size_y(%struct.rcti* %mask80), !dbg !6672
  %cmp82 = icmp sgt i32 %80, %call81, !dbg !6673
  br i1 %cmp82, label %if.then84, label %if.end124, !dbg !6674

if.then84:                                        ; preds = %for.end
  %82 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6675
  %mask85 = getelementptr inbounds %struct.View2D, %struct.View2D* %82, i32 0, i32 4, !dbg !6677
  %call86 = call i32 @BLI_rcti_size_y(%struct.rcti* %mask85), !dbg !6678
  %conv87 = sitofp i32 %call86 to float, !dbg !6679
  %83 = load i32, i32* %y_ofs, align 4, !dbg !6680
  %conv88 = sitofp i32 %83 to float, !dbg !6681
  %div89 = fdiv float %conv87, %conv88, !dbg !6682
  store float %div89, float* %scaletabs, align 4, !dbg !6683
  %84 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6684
  %panels_category90 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %84, i32 0, i32 27, !dbg !6686
  %first91 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels_category90, i32 0, i32 0, !dbg !6687
  %85 = load i8*, i8** %first91, align 8, !dbg !6687
  %86 = bitcast i8* %85 to %struct.PanelCategoryDyn*, !dbg !6684
  store %struct.PanelCategoryDyn* %86, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6688
  br label %for.cond92, !dbg !6689

for.cond92:                                       ; preds = %for.inc121, %if.then84
  %87 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6690
  %tobool93 = icmp ne %struct.PanelCategoryDyn* %87, null, !dbg !6692
  br i1 %tobool93, label %for.body94, label %for.end123, !dbg !6692

for.body94:                                       ; preds = %for.cond92
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct95, metadata !6693, metadata !DIExpression()), !dbg !6695
  %88 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6696
  %rect96 = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %88, i32 0, i32 3, !dbg !6697
  store %struct.rcti* %rect96, %struct.rcti** %rct95, align 8, !dbg !6695
  %89 = load %struct.rcti*, %struct.rcti** %rct95, align 8, !dbg !6698
  %ymin97 = getelementptr inbounds %struct.rcti, %struct.rcti* %89, i32 0, i32 2, !dbg !6699
  %90 = load i32, i32* %ymin97, align 4, !dbg !6699
  %91 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6700
  %mask98 = getelementptr inbounds %struct.View2D, %struct.View2D* %91, i32 0, i32 4, !dbg !6701
  %ymax99 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask98, i32 0, i32 3, !dbg !6702
  %92 = load i32, i32* %ymax99, align 4, !dbg !6702
  %sub100 = sub nsw i32 %90, %92, !dbg !6703
  %conv101 = sitofp i32 %sub100 to float, !dbg !6704
  %93 = load float, float* %scaletabs, align 4, !dbg !6705
  %mul102 = fmul float %conv101, %93, !dbg !6706
  %94 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6707
  %mask103 = getelementptr inbounds %struct.View2D, %struct.View2D* %94, i32 0, i32 4, !dbg !6708
  %ymax104 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask103, i32 0, i32 3, !dbg !6709
  %95 = load i32, i32* %ymax104, align 4, !dbg !6709
  %conv105 = sitofp i32 %95 to float, !dbg !6707
  %add106 = fadd float %mul102, %conv105, !dbg !6710
  %conv107 = fptosi float %add106 to i32, !dbg !6711
  %96 = load %struct.rcti*, %struct.rcti** %rct95, align 8, !dbg !6712
  %ymin108 = getelementptr inbounds %struct.rcti, %struct.rcti* %96, i32 0, i32 2, !dbg !6713
  store i32 %conv107, i32* %ymin108, align 4, !dbg !6714
  %97 = load %struct.rcti*, %struct.rcti** %rct95, align 8, !dbg !6715
  %ymax109 = getelementptr inbounds %struct.rcti, %struct.rcti* %97, i32 0, i32 3, !dbg !6716
  %98 = load i32, i32* %ymax109, align 4, !dbg !6716
  %99 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6717
  %mask110 = getelementptr inbounds %struct.View2D, %struct.View2D* %99, i32 0, i32 4, !dbg !6718
  %ymax111 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask110, i32 0, i32 3, !dbg !6719
  %100 = load i32, i32* %ymax111, align 4, !dbg !6719
  %sub112 = sub nsw i32 %98, %100, !dbg !6720
  %conv113 = sitofp i32 %sub112 to float, !dbg !6721
  %101 = load float, float* %scaletabs, align 4, !dbg !6722
  %mul114 = fmul float %conv113, %101, !dbg !6723
  %102 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6724
  %mask115 = getelementptr inbounds %struct.View2D, %struct.View2D* %102, i32 0, i32 4, !dbg !6725
  %ymax116 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask115, i32 0, i32 3, !dbg !6726
  %103 = load i32, i32* %ymax116, align 4, !dbg !6726
  %conv117 = sitofp i32 %103 to float, !dbg !6724
  %add118 = fadd float %mul114, %conv117, !dbg !6727
  %conv119 = fptosi float %add118 to i32, !dbg !6728
  %104 = load %struct.rcti*, %struct.rcti** %rct95, align 8, !dbg !6729
  %ymax120 = getelementptr inbounds %struct.rcti, %struct.rcti* %104, i32 0, i32 3, !dbg !6730
  store i32 %conv119, i32* %ymax120, align 4, !dbg !6731
  br label %for.inc121, !dbg !6732

for.inc121:                                       ; preds = %for.body94
  %105 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6733
  %next122 = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %105, i32 0, i32 0, !dbg !6734
  %106 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %next122, align 8, !dbg !6734
  store %struct.PanelCategoryDyn* %106, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6735
  br label %for.cond92, !dbg !6736, !llvm.loop !6737

for.end123:                                       ; preds = %for.cond92
  store i8 1, i8* %do_scaletabs, align 1, !dbg !6739
  br label %if.end124, !dbg !6740

if.end124:                                        ; preds = %for.end123, %for.end
  call void @glEnable(i32 2848), !dbg !6741
  %107 = load i8, i8* %is_alpha, align 1, !dbg !6742
  %tobool125 = icmp ne i8 %107, 0, !dbg !6742
  br i1 %tobool125, label %if.then126, label %if.else, !dbg !6744

if.then126:                                       ; preds = %if.end124
  call void @glEnable(i32 3042), !dbg !6745
  %arraydecay127 = getelementptr inbounds [4 x i8], [4 x i8]* %theme_col_tab_bg, i64 0, i64 0, !dbg !6747
  call void @glColor4ubv(i8* %arraydecay127), !dbg !6748
  br label %if.end129, !dbg !6749

if.else:                                          ; preds = %if.end124
  %arraydecay128 = getelementptr inbounds [4 x i8], [4 x i8]* %theme_col_tab_bg, i64 0, i64 0, !dbg !6750
  call void @glColor3ubv(i8* %arraydecay128), !dbg !6752
  br label %if.end129

if.end129:                                        ; preds = %if.else, %if.then126
  %108 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6753
  %mask130 = getelementptr inbounds %struct.View2D, %struct.View2D* %108, i32 0, i32 4, !dbg !6754
  %xmin131 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask130, i32 0, i32 0, !dbg !6755
  %109 = load i32, i32* %xmin131, align 8, !dbg !6755
  %110 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6756
  %mask132 = getelementptr inbounds %struct.View2D, %struct.View2D* %110, i32 0, i32 4, !dbg !6757
  %ymin133 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask132, i32 0, i32 2, !dbg !6758
  %111 = load i32, i32* %ymin133, align 8, !dbg !6758
  %112 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6759
  %mask134 = getelementptr inbounds %struct.View2D, %struct.View2D* %112, i32 0, i32 4, !dbg !6760
  %xmin135 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask134, i32 0, i32 0, !dbg !6761
  %113 = load i32, i32* %xmin135, align 8, !dbg !6761
  %114 = load i32, i32* %category_tabs_width, align 4, !dbg !6762
  %add136 = add nsw i32 %113, %114, !dbg !6763
  %115 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6764
  %mask137 = getelementptr inbounds %struct.View2D, %struct.View2D* %115, i32 0, i32 4, !dbg !6765
  %ymax138 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask137, i32 0, i32 3, !dbg !6766
  %116 = load i32, i32* %ymax138, align 4, !dbg !6766
  call void @glRecti(i32 %109, i32 %111, i32 %add136, i32 %116), !dbg !6767
  %117 = load i8, i8* %is_alpha, align 1, !dbg !6768
  %tobool139 = icmp ne i8 %117, 0, !dbg !6768
  br i1 %tobool139, label %if.then140, label %if.end141, !dbg !6770

if.then140:                                       ; preds = %if.end129
  call void @glDisable(i32 3042), !dbg !6771
  br label %if.end141, !dbg !6773

if.end141:                                        ; preds = %if.then140, %if.end129
  %118 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6774
  %panels_category142 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %118, i32 0, i32 27, !dbg !6776
  %first143 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels_category142, i32 0, i32 0, !dbg !6777
  %119 = load i8*, i8** %first143, align 8, !dbg !6777
  %120 = bitcast i8* %119 to %struct.PanelCategoryDyn*, !dbg !6774
  store %struct.PanelCategoryDyn* %120, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6778
  br label %for.cond144, !dbg !6779

for.cond144:                                      ; preds = %for.inc273, %if.end141
  %121 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6780
  %tobool145 = icmp ne %struct.PanelCategoryDyn* %121, null, !dbg !6782
  br i1 %tobool145, label %for.body146, label %for.end275, !dbg !6782

for.body146:                                      ; preds = %for.cond144
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct147, metadata !6783, metadata !DIExpression()), !dbg !6785
  %122 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6786
  %rect148 = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %122, i32 0, i32 3, !dbg !6787
  store %struct.rcti* %rect148, %struct.rcti** %rct147, align 8, !dbg !6785
  call void @llvm.dbg.declare(metadata i8** %category_id149, metadata !6788, metadata !DIExpression()), !dbg !6789
  %123 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6790
  %idname150 = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %123, i32 0, i32 2, !dbg !6791
  %arraydecay151 = getelementptr inbounds [64 x i8], [64 x i8]* %idname150, i64 0, i64 0, !dbg !6790
  store i8* %arraydecay151, i8** %category_id149, align 8, !dbg !6789
  call void @llvm.dbg.declare(metadata i8** %category_id_draw152, metadata !6792, metadata !DIExpression()), !dbg !6793
  %124 = load i8*, i8** %category_id149, align 8, !dbg !6794
  store i8* %124, i8** %category_id_draw152, align 8, !dbg !6793
  call void @llvm.dbg.declare(metadata i32* %category_width153, metadata !6795, metadata !DIExpression()), !dbg !6796
  %125 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6797
  %call154 = call i32 @BLI_rcti_size_y(%struct.rcti* %125), !dbg !6798
  %126 = load i32, i32* %tab_v_pad_text, align 4, !dbg !6799
  %mul155 = mul nsw i32 %126, 2, !dbg !6800
  %sub156 = sub nsw i32 %call154, %mul155, !dbg !6801
  store i32 %sub156, i32* %category_width153, align 4, !dbg !6796
  call void @llvm.dbg.declare(metadata i64* %category_draw_len, metadata !6802, metadata !DIExpression()), !dbg !6805
  store i64 1024, i64* %category_draw_len, align 8, !dbg !6805
  call void @llvm.dbg.declare(metadata i8* %is_active, metadata !6806, metadata !DIExpression()), !dbg !6807
  %127 = load i8*, i8** %category_id149, align 8, !dbg !6808
  %128 = load i8*, i8** %category_id_active.addr, align 8, !dbg !6808
  %call157 = call i32 @strcmp(i8* %127, i8* %128) #6, !dbg !6808
  %cmp158 = icmp eq i32 %call157, 0, !dbg !6808
  %conv159 = zext i1 %cmp158 to i32, !dbg !6808
  %conv160 = trunc i32 %conv159 to i8, !dbg !6808
  store i8 %conv160, i8* %is_active, align 1, !dbg !6807
  call void @glEnable(i32 3042), !dbg !6809
  %129 = load i8, i8* %is_active, align 1, !dbg !6810
  %conv161 = zext i8 %129 to i32, !dbg !6810
  %tobool162 = icmp ne i32 %conv161, 0, !dbg !6810
  br i1 %tobool162, label %cond.true, label %cond.false, !dbg !6810

cond.true:                                        ; preds = %for.body146
  %arraydecay163 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_active, i64 0, i64 0, !dbg !6812
  br label %cond.end, !dbg !6810

cond.false:                                       ; preds = %for.body146
  %arraydecay164 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_inactive, i64 0, i64 0, !dbg !6813
  br label %cond.end, !dbg !6810

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay163, %cond.true ], [ %arraydecay164, %cond.false ], !dbg !6810
  call void @glColor3ubv(i8* %cond), !dbg !6814
  %130 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6815
  %xmin165 = getelementptr inbounds %struct.rcti, %struct.rcti* %130, i32 0, i32 0, !dbg !6816
  %131 = load i32, i32* %xmin165, align 4, !dbg !6816
  %conv166 = sitofp i32 %131 to float, !dbg !6815
  %132 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6817
  %ymin167 = getelementptr inbounds %struct.rcti, %struct.rcti* %132, i32 0, i32 2, !dbg !6818
  %133 = load i32, i32* %ymin167, align 4, !dbg !6818
  %conv168 = sitofp i32 %133 to float, !dbg !6817
  %134 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6819
  %xmax169 = getelementptr inbounds %struct.rcti, %struct.rcti* %134, i32 0, i32 1, !dbg !6820
  %135 = load i32, i32* %xmax169, align 4, !dbg !6820
  %conv170 = sitofp i32 %135 to float, !dbg !6819
  %136 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6821
  %ymax171 = getelementptr inbounds %struct.rcti, %struct.rcti* %136, i32 0, i32 3, !dbg !6822
  %137 = load i32, i32* %ymax171, align 4, !dbg !6822
  %conv172 = sitofp i32 %137 to float, !dbg !6821
  %138 = load float, float* %tab_curve_radius, align 4, !dbg !6823
  %139 = load i32, i32* %px, align 4, !dbg !6824
  %conv173 = sitofp i32 %139 to float, !dbg !6824
  %sub174 = fsub float %138, %conv173, !dbg !6825
  call void @ui_panel_category_draw_tab(i32 9, float %conv166, float %conv168, float %conv170, float %conv172, float %sub174, i32 9, i8 zeroext 1, i8 zeroext 1, i8* null), !dbg !6826
  %arraydecay175 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_outline, i64 0, i64 0, !dbg !6827
  call void @glColor3ubv(i8* %arraydecay175), !dbg !6828
  call void @glPolygonMode(i32 1032, i32 6913), !dbg !6829
  %140 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6830
  %xmin176 = getelementptr inbounds %struct.rcti, %struct.rcti* %140, i32 0, i32 0, !dbg !6831
  %141 = load i32, i32* %xmin176, align 4, !dbg !6831
  %142 = load i32, i32* %px, align 4, !dbg !6832
  %sub177 = sub nsw i32 %141, %142, !dbg !6833
  %conv178 = sitofp i32 %sub177 to float, !dbg !6830
  %143 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6834
  %ymin179 = getelementptr inbounds %struct.rcti, %struct.rcti* %143, i32 0, i32 2, !dbg !6835
  %144 = load i32, i32* %ymin179, align 4, !dbg !6835
  %145 = load i32, i32* %px, align 4, !dbg !6836
  %sub180 = sub nsw i32 %144, %145, !dbg !6837
  %conv181 = sitofp i32 %sub180 to float, !dbg !6834
  %146 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6838
  %xmax182 = getelementptr inbounds %struct.rcti, %struct.rcti* %146, i32 0, i32 1, !dbg !6839
  %147 = load i32, i32* %xmax182, align 4, !dbg !6839
  %148 = load i32, i32* %px, align 4, !dbg !6840
  %sub183 = sub nsw i32 %147, %148, !dbg !6841
  %conv184 = sitofp i32 %sub183 to float, !dbg !6838
  %149 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6842
  %ymax185 = getelementptr inbounds %struct.rcti, %struct.rcti* %149, i32 0, i32 3, !dbg !6843
  %150 = load i32, i32* %ymax185, align 4, !dbg !6843
  %151 = load i32, i32* %px, align 4, !dbg !6844
  %add186 = add nsw i32 %150, %151, !dbg !6845
  %conv187 = sitofp i32 %add186 to float, !dbg !6842
  %152 = load float, float* %tab_curve_radius, align 4, !dbg !6846
  call void @ui_panel_category_draw_tab(i32 3, float %conv178, float %conv181, float %conv184, float %conv187, float %152, i32 9, i8 zeroext 1, i8 zeroext 1, i8* null), !dbg !6847
  call void @glShadeModel(i32 7425), !dbg !6848
  %153 = load i8, i8* %is_active, align 1, !dbg !6849
  %conv188 = zext i8 %153 to i32, !dbg !6849
  %tobool189 = icmp ne i32 %conv188, 0, !dbg !6849
  br i1 %tobool189, label %cond.true190, label %cond.false192, !dbg !6849

cond.true190:                                     ; preds = %cond.end
  %arraydecay191 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_highlight, i64 0, i64 0, !dbg !6850
  br label %cond.end194, !dbg !6849

cond.false192:                                    ; preds = %cond.end
  %arraydecay193 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_highlight_inactive, i64 0, i64 0, !dbg !6851
  br label %cond.end194, !dbg !6849

cond.end194:                                      ; preds = %cond.false192, %cond.true190
  %cond195 = phi i8* [ %arraydecay191, %cond.true190 ], [ %arraydecay193, %cond.false192 ], !dbg !6849
  call void @glColor3ubv(i8* %cond195), !dbg !6852
  %154 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6853
  %xmin196 = getelementptr inbounds %struct.rcti, %struct.rcti* %154, i32 0, i32 0, !dbg !6854
  %155 = load i32, i32* %xmin196, align 4, !dbg !6854
  %conv197 = sitofp i32 %155 to float, !dbg !6853
  %156 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6855
  %ymin198 = getelementptr inbounds %struct.rcti, %struct.rcti* %156, i32 0, i32 2, !dbg !6856
  %157 = load i32, i32* %ymin198, align 4, !dbg !6856
  %conv199 = sitofp i32 %157 to float, !dbg !6855
  %158 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6857
  %xmax200 = getelementptr inbounds %struct.rcti, %struct.rcti* %158, i32 0, i32 1, !dbg !6858
  %159 = load i32, i32* %xmax200, align 4, !dbg !6858
  %conv201 = sitofp i32 %159 to float, !dbg !6857
  %160 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6859
  %ymax202 = getelementptr inbounds %struct.rcti, %struct.rcti* %160, i32 0, i32 3, !dbg !6860
  %161 = load i32, i32* %ymax202, align 4, !dbg !6860
  %conv203 = sitofp i32 %161 to float, !dbg !6859
  %162 = load float, float* %tab_curve_radius, align 4, !dbg !6861
  %163 = load i8, i8* %is_active, align 1, !dbg !6862
  %conv204 = zext i8 %163 to i32, !dbg !6862
  %tobool205 = icmp ne i32 %conv204, 0, !dbg !6862
  br i1 %tobool205, label %cond.true206, label %cond.false208, !dbg !6862

cond.true206:                                     ; preds = %cond.end194
  %arraydecay207 = getelementptr inbounds [4 x i8], [4 x i8]* %theme_col_back, i64 0, i64 0, !dbg !6863
  br label %cond.end210, !dbg !6862

cond.false208:                                    ; preds = %cond.end194
  %arraydecay209 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_inactive, i64 0, i64 0, !dbg !6864
  br label %cond.end210, !dbg !6862

cond.end210:                                      ; preds = %cond.false208, %cond.true206
  %cond211 = phi i8* [ %arraydecay207, %cond.true206 ], [ %arraydecay209, %cond.false208 ], !dbg !6862
  call void @ui_panel_category_draw_tab(i32 3, float %conv197, float %conv199, float %conv201, float %conv203, float %162, i32 9, i8 zeroext 1, i8 zeroext 0, i8* %cond211), !dbg !6865
  call void @glShadeModel(i32 7424), !dbg !6866
  call void @glPolygonMode(i32 1032, i32 6914), !dbg !6867
  %164 = load i8, i8* %is_active, align 1, !dbg !6868
  %tobool212 = icmp ne i8 %164, 0, !dbg !6868
  br i1 %tobool212, label %if.end226, label %if.then213, !dbg !6870

if.then213:                                       ; preds = %cond.end210
  %arraydecay214 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_divider, i64 0, i64 0, !dbg !6871
  call void @glColor3ubv(i8* %arraydecay214), !dbg !6873
  %165 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6874
  %mask215 = getelementptr inbounds %struct.View2D, %struct.View2D* %165, i32 0, i32 4, !dbg !6875
  %xmin216 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask215, i32 0, i32 0, !dbg !6876
  %166 = load i32, i32* %xmin216, align 8, !dbg !6876
  %167 = load i32, i32* %category_tabs_width, align 4, !dbg !6877
  %add217 = add nsw i32 %166, %167, !dbg !6878
  %168 = load i32, i32* %px, align 4, !dbg !6879
  %sub218 = sub nsw i32 %add217, %168, !dbg !6880
  %169 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6881
  %ymin219 = getelementptr inbounds %struct.rcti, %struct.rcti* %169, i32 0, i32 2, !dbg !6882
  %170 = load i32, i32* %ymin219, align 4, !dbg !6882
  %171 = load i32, i32* %tab_v_pad, align 4, !dbg !6883
  %sub220 = sub nsw i32 %170, %171, !dbg !6884
  %172 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6885
  %mask221 = getelementptr inbounds %struct.View2D, %struct.View2D* %172, i32 0, i32 4, !dbg !6886
  %xmin222 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask221, i32 0, i32 0, !dbg !6887
  %173 = load i32, i32* %xmin222, align 8, !dbg !6887
  %174 = load i32, i32* %category_tabs_width, align 4, !dbg !6888
  %add223 = add nsw i32 %173, %174, !dbg !6889
  %175 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6890
  %ymax224 = getelementptr inbounds %struct.rcti, %struct.rcti* %175, i32 0, i32 3, !dbg !6891
  %176 = load i32, i32* %ymax224, align 4, !dbg !6891
  %177 = load i32, i32* %tab_v_pad, align 4, !dbg !6892
  %add225 = add nsw i32 %176, %177, !dbg !6893
  call void @glRecti(i32 %sub218, i32 %sub220, i32 %add223, i32 %add225), !dbg !6894
  br label %if.end226, !dbg !6895

if.end226:                                        ; preds = %if.then213, %cond.end210
  %178 = load i8, i8* %do_scaletabs, align 1, !dbg !6896
  %tobool227 = icmp ne i8 %178, 0, !dbg !6896
  br i1 %tobool227, label %if.then228, label %if.end231, !dbg !6898

if.then228:                                       ; preds = %if.end226
  %179 = load i32, i32* %fontid, align 4, !dbg !6899
  %180 = load i8*, i8** %category_id_draw152, align 8, !dbg !6901
  %181 = load i64, i64* %category_draw_len, align 8, !dbg !6902
  %182 = load i32, i32* %category_width153, align 4, !dbg !6903
  %conv229 = sitofp i32 %182 to float, !dbg !6903
  %call230 = call i64 @BLF_width_to_strlen(i32 %179, i8* %180, i64 %181, float %conv229, float* null), !dbg !6904
  store i64 %call230, i64* %category_draw_len, align 8, !dbg !6905
  br label %if.end231, !dbg !6906

if.end231:                                        ; preds = %if.then228, %if.end226
  %183 = load i32, i32* %fontid, align 4, !dbg !6907
  %184 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6908
  %xmax232 = getelementptr inbounds %struct.rcti, %struct.rcti* %184, i32 0, i32 1, !dbg !6909
  %185 = load i32, i32* %xmax232, align 4, !dbg !6909
  %186 = load i32, i32* %text_v_ofs, align 4, !dbg !6910
  %sub233 = sub nsw i32 %185, %186, !dbg !6911
  %conv234 = sitofp i32 %sub233 to float, !dbg !6908
  %187 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6912
  %ymin235 = getelementptr inbounds %struct.rcti, %struct.rcti* %187, i32 0, i32 2, !dbg !6913
  %188 = load i32, i32* %ymin235, align 4, !dbg !6913
  %189 = load i32, i32* %tab_v_pad_text, align 4, !dbg !6914
  %add236 = add nsw i32 %188, %189, !dbg !6915
  %conv237 = sitofp i32 %add236 to float, !dbg !6912
  call void @BLF_position(i32 %183, float %conv234, float %conv237, float 0.000000e+00), !dbg !6916
  %arraydecay238 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_text, i64 0, i64 0, !dbg !6917
  call void @glColor3ubv(i8* %arraydecay238), !dbg !6918
  %190 = load i32, i32* %fontid, align 4, !dbg !6919
  %191 = load i8*, i8** %category_id_draw152, align 8, !dbg !6920
  %192 = load i64, i64* %category_draw_len, align 8, !dbg !6921
  call void @BLF_draw(i32 %190, i8* %191, i64 %192), !dbg !6922
  call void @glDisable(i32 3042), !dbg !6923
  %193 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6924
  %prev = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %193, i32 0, i32 1, !dbg !6926
  %194 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %prev, align 8, !dbg !6926
  %cmp239 = icmp eq %struct.PanelCategoryDyn* %194, null, !dbg !6927
  br i1 %cmp239, label %if.then241, label %if.end254, !dbg !6928

if.then241:                                       ; preds = %if.end231
  %arraydecay242 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_divider, i64 0, i64 0, !dbg !6929
  call void @glColor3ubv(i8* %arraydecay242), !dbg !6931
  %195 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6932
  %mask243 = getelementptr inbounds %struct.View2D, %struct.View2D* %195, i32 0, i32 4, !dbg !6933
  %xmin244 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask243, i32 0, i32 0, !dbg !6934
  %196 = load i32, i32* %xmin244, align 8, !dbg !6934
  %197 = load i32, i32* %category_tabs_width, align 4, !dbg !6935
  %add245 = add nsw i32 %196, %197, !dbg !6936
  %198 = load i32, i32* %px, align 4, !dbg !6937
  %sub246 = sub nsw i32 %add245, %198, !dbg !6938
  %199 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6939
  %ymax247 = getelementptr inbounds %struct.rcti, %struct.rcti* %199, i32 0, i32 3, !dbg !6940
  %200 = load i32, i32* %ymax247, align 4, !dbg !6940
  %201 = load i32, i32* %px, align 4, !dbg !6941
  %add248 = add nsw i32 %200, %201, !dbg !6942
  %202 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6943
  %mask249 = getelementptr inbounds %struct.View2D, %struct.View2D* %202, i32 0, i32 4, !dbg !6944
  %xmin250 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask249, i32 0, i32 0, !dbg !6945
  %203 = load i32, i32* %xmin250, align 8, !dbg !6945
  %204 = load i32, i32* %category_tabs_width, align 4, !dbg !6946
  %add251 = add nsw i32 %203, %204, !dbg !6947
  %205 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6948
  %mask252 = getelementptr inbounds %struct.View2D, %struct.View2D* %205, i32 0, i32 4, !dbg !6949
  %ymax253 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask252, i32 0, i32 3, !dbg !6950
  %206 = load i32, i32* %ymax253, align 4, !dbg !6950
  call void @glRecti(i32 %sub246, i32 %add248, i32 %add251, i32 %206), !dbg !6951
  br label %if.end254, !dbg !6952

if.end254:                                        ; preds = %if.then241, %if.end231
  %207 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6953
  %next255 = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %207, i32 0, i32 0, !dbg !6955
  %208 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %next255, align 8, !dbg !6955
  %cmp256 = icmp eq %struct.PanelCategoryDyn* %208, null, !dbg !6956
  br i1 %cmp256, label %if.then258, label %if.end268, !dbg !6957

if.then258:                                       ; preds = %if.end254
  %arraydecay259 = getelementptr inbounds [3 x i8], [3 x i8]* %theme_col_tab_divider, i64 0, i64 0, !dbg !6958
  call void @glColor3ubv(i8* %arraydecay259), !dbg !6960
  %209 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6961
  %mask260 = getelementptr inbounds %struct.View2D, %struct.View2D* %209, i32 0, i32 4, !dbg !6962
  %xmin261 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask260, i32 0, i32 0, !dbg !6963
  %210 = load i32, i32* %xmin261, align 8, !dbg !6963
  %211 = load i32, i32* %category_tabs_width, align 4, !dbg !6964
  %add262 = add nsw i32 %210, %211, !dbg !6965
  %212 = load i32, i32* %px, align 4, !dbg !6966
  %sub263 = sub nsw i32 %add262, %212, !dbg !6967
  %213 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6968
  %mask264 = getelementptr inbounds %struct.View2D, %struct.View2D* %213, i32 0, i32 4, !dbg !6969
  %xmin265 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask264, i32 0, i32 0, !dbg !6970
  %214 = load i32, i32* %xmin265, align 8, !dbg !6970
  %215 = load i32, i32* %category_tabs_width, align 4, !dbg !6971
  %add266 = add nsw i32 %214, %215, !dbg !6972
  %216 = load %struct.rcti*, %struct.rcti** %rct147, align 8, !dbg !6973
  %ymin267 = getelementptr inbounds %struct.rcti, %struct.rcti* %216, i32 0, i32 2, !dbg !6974
  %217 = load i32, i32* %ymin267, align 4, !dbg !6974
  call void @glRecti(i32 %sub263, i32 0, i32 %add266, i32 %217), !dbg !6975
  br label %if.end268, !dbg !6976

if.end268:                                        ; preds = %if.then258, %if.end254
  %218 = load %struct.View2D*, %struct.View2D** %v2d, align 8, !dbg !6977
  %mask269 = getelementptr inbounds %struct.View2D, %struct.View2D* %218, i32 0, i32 4, !dbg !6978
  %xmin270 = getelementptr inbounds %struct.rcti, %struct.rcti* %mask269, i32 0, i32 0, !dbg !6979
  %219 = load i32, i32* %xmin270, align 8, !dbg !6979
  %220 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6980
  %rect271 = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %220, i32 0, i32 3, !dbg !6981
  %xmin272 = getelementptr inbounds %struct.rcti, %struct.rcti* %rect271, i32 0, i32 0, !dbg !6982
  store i32 %219, i32* %xmin272, align 8, !dbg !6983
  br label %for.inc273, !dbg !6984

for.inc273:                                       ; preds = %if.end268
  %221 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6985
  %next274 = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %221, i32 0, i32 0, !dbg !6986
  %222 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %next274, align 8, !dbg !6986
  store %struct.PanelCategoryDyn* %222, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !6987
  br label %for.cond144, !dbg !6988, !llvm.loop !6989

for.end275:                                       ; preds = %for.cond144
  call void @glDisable(i32 2848), !dbg !6991
  %223 = load i32, i32* %fontid, align 4, !dbg !6992
  call void @BLF_disable(i32 %223, i32 1), !dbg !6993
  %224 = load i32, i32* %fontid, align 4, !dbg !6994
  call void @BLF_disable(i32 %224, i32 4), !dbg !6995
  %225 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle, align 8, !dbg !6996
  %kerning276 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %225, i32 0, i32 2, !dbg !6998
  %226 = load i16, i16* %kerning276, align 4, !dbg !6998
  %conv277 = sext i16 %226 to i32, !dbg !6996
  %cmp278 = icmp eq i32 %conv277, 1, !dbg !6999
  br i1 %cmp278, label %if.then280, label %if.end283, !dbg !7000

if.then280:                                       ; preds = %for.end275
  %227 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle, align 8, !dbg !7001
  %uifont_id281 = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %227, i32 0, i32 0, !dbg !7003
  %228 = load i16, i16* %uifont_id281, align 4, !dbg !7003
  %conv282 = sext i16 %228 to i32, !dbg !7001
  call void @BLF_disable(i32 %conv282, i32 8), !dbg !7004
  br label %if.end283, !dbg !7005

if.end283:                                        ; preds = %if.then280, %for.end275
  ret void, !dbg !7006
}

declare dso_local %struct.uiStyle* @UI_GetStyle() #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !7007 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7011, metadata !DIExpression()), !dbg !7012
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !7013, metadata !DIExpression()), !dbg !7014
  %0 = load i32, i32* %b.addr, align 4, !dbg !7015
  %1 = load i32, i32* %a.addr, align 4, !dbg !7016
  %cmp = icmp slt i32 %0, %1, !dbg !7017
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7018

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !7019
  br label %cond.end, !dbg !7018

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !7020
  br label %cond.end, !dbg !7018

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !7018
  ret i32 %cond, !dbg !7021
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @iroundf(float %a) #0 !dbg !7022 {
entry:
  %a.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !7025, metadata !DIExpression()), !dbg !7026
  %0 = load float, float* %a.addr, align 4, !dbg !7027
  %add = fadd float %0, 5.000000e-01, !dbg !7028
  %1 = call float @llvm.floor.f32(float %add), !dbg !7029
  %conv = fptosi float %1 to i32, !dbg !7030
  ret i32 %conv, !dbg !7031
}

declare dso_local void @UI_GetThemeColor4ubv(i32, i8*) #3

declare dso_local void @UI_GetThemeColor3ubv(i32, i8*) #3

declare dso_local void @interp_v3_v3v3_uchar(i8*, i8*, i8*, float) #3

declare dso_local void @BLF_enable(i32, i32) #3

declare dso_local void @BLF_rotation(i32, float) #3

declare dso_local void @ui_fontscale(i16*, float) #3

declare dso_local void @BLF_size(i32, i32, i32) #3

declare dso_local void @BLF_shadow(i32, i32, float, float, float, float) #3

declare dso_local void @BLF_shadow_offset(i32, i32, i32) #3

declare dso_local float @BLF_width(i32, i8*, i64) #3

declare dso_local void @glColor4ubv(i8*) #3

declare dso_local void @glColor3ubv(i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ui_panel_category_draw_tab(i32 %mode, float %minx, float %miny, float %maxx, float %maxy, float %rad, i32 %roundboxtype, i8 zeroext %use_highlight, i8 zeroext %use_shadow, i8* %highlight_fade) #0 !dbg !7032 {
entry:
  %mode.addr = alloca i32, align 4
  %minx.addr = alloca float, align 4
  %miny.addr = alloca float, align 4
  %maxx.addr = alloca float, align 4
  %maxy.addr = alloca float, align 4
  %rad.addr = alloca float, align 4
  %roundboxtype.addr = alloca i32, align 4
  %use_highlight.addr = alloca i8, align 1
  %use_shadow.addr = alloca i8, align 1
  %highlight_fade.addr = alloca i8*, align 8
  %vec = alloca [4 x [2 x float]], align 16
  %a = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7036, metadata !DIExpression()), !dbg !7037
  store float %minx, float* %minx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %minx.addr, metadata !7038, metadata !DIExpression()), !dbg !7039
  store float %miny, float* %miny.addr, align 4
  call void @llvm.dbg.declare(metadata float* %miny.addr, metadata !7040, metadata !DIExpression()), !dbg !7041
  store float %maxx, float* %maxx.addr, align 4
  call void @llvm.dbg.declare(metadata float* %maxx.addr, metadata !7042, metadata !DIExpression()), !dbg !7043
  store float %maxy, float* %maxy.addr, align 4
  call void @llvm.dbg.declare(metadata float* %maxy.addr, metadata !7044, metadata !DIExpression()), !dbg !7045
  store float %rad, float* %rad.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rad.addr, metadata !7046, metadata !DIExpression()), !dbg !7047
  store i32 %roundboxtype, i32* %roundboxtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %roundboxtype.addr, metadata !7048, metadata !DIExpression()), !dbg !7049
  store i8 %use_highlight, i8* %use_highlight.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_highlight.addr, metadata !7050, metadata !DIExpression()), !dbg !7051
  store i8 %use_shadow, i8* %use_shadow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_shadow.addr, metadata !7052, metadata !DIExpression()), !dbg !7053
  store i8* %highlight_fade, i8** %highlight_fade.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %highlight_fade.addr, metadata !7054, metadata !DIExpression()), !dbg !7055
  call void @llvm.dbg.declare(metadata [4 x [2 x float]]* %vec, metadata !7056, metadata !DIExpression()), !dbg !7057
  %0 = bitcast [4 x [2 x float]]* %vec to i8*, !dbg !7057
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([4 x [2 x float]]* @__const.ui_panel_category_draw_tab.vec to i8*), i64 32, i1 false), !dbg !7057
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7058, metadata !DIExpression()), !dbg !7059
  store i32 0, i32* %a, align 4, !dbg !7060
  br label %for.cond, !dbg !7062

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %a, align 4, !dbg !7063
  %cmp = icmp slt i32 %1, 4, !dbg !7065
  br i1 %cmp, label %for.body, label %for.end, !dbg !7066

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %a, align 4, !dbg !7067
  %idxprom = sext i32 %2 to i64, !dbg !7069
  %arrayidx = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 %idxprom, !dbg !7069
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !7069
  %3 = load float, float* %rad.addr, align 4, !dbg !7070
  call void @mul_v2_fl(float* %arraydecay, float %3), !dbg !7071
  br label %for.inc, !dbg !7072

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %a, align 4, !dbg !7073
  %inc = add nsw i32 %4, 1, !dbg !7073
  store i32 %inc, i32* %a, align 4, !dbg !7073
  br label %for.cond, !dbg !7074, !llvm.loop !7075

for.end:                                          ; preds = %for.cond
  %5 = load i32, i32* %mode.addr, align 4, !dbg !7077
  call void @glBegin(i32 %5), !dbg !7078
  %6 = load i8, i8* %use_highlight.addr, align 1, !dbg !7079
  %tobool = icmp ne i8 %6, 0, !dbg !7079
  br i1 %tobool, label %if.then, label %if.end40, !dbg !7081

if.then:                                          ; preds = %for.end
  %7 = load i32, i32* %roundboxtype.addr, align 4, !dbg !7082
  %and = and i32 %7, 2, !dbg !7085
  %tobool1 = icmp ne i32 %and, 0, !dbg !7085
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !7086

if.then2:                                         ; preds = %if.then
  %8 = load float, float* %maxx.addr, align 4, !dbg !7087
  %9 = load float, float* %maxy.addr, align 4, !dbg !7089
  %10 = load float, float* %rad.addr, align 4, !dbg !7090
  %sub = fsub float %9, %10, !dbg !7091
  call void @glVertex2f(float %8, float %sub), !dbg !7092
  store i32 0, i32* %a, align 4, !dbg !7093
  br label %for.cond3, !dbg !7095

for.cond3:                                        ; preds = %for.inc14, %if.then2
  %11 = load i32, i32* %a, align 4, !dbg !7096
  %cmp4 = icmp slt i32 %11, 4, !dbg !7098
  br i1 %cmp4, label %for.body5, label %for.end16, !dbg !7099

for.body5:                                        ; preds = %for.cond3
  %12 = load float, float* %maxx.addr, align 4, !dbg !7100
  %13 = load i32, i32* %a, align 4, !dbg !7102
  %idxprom6 = sext i32 %13 to i64, !dbg !7103
  %arrayidx7 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 %idxprom6, !dbg !7103
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx7, i64 0, i64 1, !dbg !7103
  %14 = load float, float* %arrayidx8, align 4, !dbg !7103
  %sub9 = fsub float %12, %14, !dbg !7104
  %15 = load float, float* %maxy.addr, align 4, !dbg !7105
  %16 = load float, float* %rad.addr, align 4, !dbg !7106
  %sub10 = fsub float %15, %16, !dbg !7107
  %17 = load i32, i32* %a, align 4, !dbg !7108
  %idxprom11 = sext i32 %17 to i64, !dbg !7109
  %arrayidx12 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 %idxprom11, !dbg !7109
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx12, i64 0, i64 0, !dbg !7109
  %18 = load float, float* %arrayidx13, align 8, !dbg !7109
  %add = fadd float %sub10, %18, !dbg !7110
  call void @glVertex2f(float %sub9, float %add), !dbg !7111
  br label %for.inc14, !dbg !7112

for.inc14:                                        ; preds = %for.body5
  %19 = load i32, i32* %a, align 4, !dbg !7113
  %inc15 = add nsw i32 %19, 1, !dbg !7113
  store i32 %inc15, i32* %a, align 4, !dbg !7113
  br label %for.cond3, !dbg !7114, !llvm.loop !7115

for.end16:                                        ; preds = %for.cond3
  %20 = load float, float* %maxx.addr, align 4, !dbg !7117
  %21 = load float, float* %rad.addr, align 4, !dbg !7118
  %sub17 = fsub float %20, %21, !dbg !7119
  %22 = load float, float* %maxy.addr, align 4, !dbg !7120
  call void @glVertex2f(float %sub17, float %22), !dbg !7121
  br label %if.end, !dbg !7122

if.else:                                          ; preds = %if.then
  %23 = load float, float* %maxx.addr, align 4, !dbg !7123
  %24 = load float, float* %maxy.addr, align 4, !dbg !7125
  call void @glVertex2f(float %23, float %24), !dbg !7126
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end16
  %25 = load i32, i32* %roundboxtype.addr, align 4, !dbg !7127
  %and18 = and i32 %25, 1, !dbg !7129
  %tobool19 = icmp ne i32 %and18, 0, !dbg !7129
  br i1 %tobool19, label %if.then20, label %if.else38, !dbg !7130

if.then20:                                        ; preds = %if.end
  %26 = load float, float* %minx.addr, align 4, !dbg !7131
  %27 = load float, float* %rad.addr, align 4, !dbg !7133
  %add21 = fadd float %26, %27, !dbg !7134
  %28 = load float, float* %maxy.addr, align 4, !dbg !7135
  call void @glVertex2f(float %add21, float %28), !dbg !7136
  store i32 0, i32* %a, align 4, !dbg !7137
  br label %for.cond22, !dbg !7139

for.cond22:                                       ; preds = %for.inc34, %if.then20
  %29 = load i32, i32* %a, align 4, !dbg !7140
  %cmp23 = icmp slt i32 %29, 4, !dbg !7142
  br i1 %cmp23, label %for.body24, label %for.end36, !dbg !7143

for.body24:                                       ; preds = %for.cond22
  %30 = load float, float* %minx.addr, align 4, !dbg !7144
  %31 = load float, float* %rad.addr, align 4, !dbg !7146
  %add25 = fadd float %30, %31, !dbg !7147
  %32 = load i32, i32* %a, align 4, !dbg !7148
  %idxprom26 = sext i32 %32 to i64, !dbg !7149
  %arrayidx27 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 %idxprom26, !dbg !7149
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx27, i64 0, i64 0, !dbg !7149
  %33 = load float, float* %arrayidx28, align 8, !dbg !7149
  %sub29 = fsub float %add25, %33, !dbg !7150
  %34 = load float, float* %maxy.addr, align 4, !dbg !7151
  %35 = load i32, i32* %a, align 4, !dbg !7152
  %idxprom30 = sext i32 %35 to i64, !dbg !7153
  %arrayidx31 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 %idxprom30, !dbg !7153
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx31, i64 0, i64 1, !dbg !7153
  %36 = load float, float* %arrayidx32, align 4, !dbg !7153
  %sub33 = fsub float %34, %36, !dbg !7154
  call void @glVertex2f(float %sub29, float %sub33), !dbg !7155
  br label %for.inc34, !dbg !7156

for.inc34:                                        ; preds = %for.body24
  %37 = load i32, i32* %a, align 4, !dbg !7157
  %inc35 = add nsw i32 %37, 1, !dbg !7157
  store i32 %inc35, i32* %a, align 4, !dbg !7157
  br label %for.cond22, !dbg !7158, !llvm.loop !7159

for.end36:                                        ; preds = %for.cond22
  %38 = load float, float* %minx.addr, align 4, !dbg !7161
  %39 = load float, float* %maxy.addr, align 4, !dbg !7162
  %40 = load float, float* %rad.addr, align 4, !dbg !7163
  %sub37 = fsub float %39, %40, !dbg !7164
  call void @glVertex2f(float %38, float %sub37), !dbg !7165
  br label %if.end39, !dbg !7166

if.else38:                                        ; preds = %if.end
  %41 = load float, float* %minx.addr, align 4, !dbg !7167
  %42 = load float, float* %maxy.addr, align 4, !dbg !7169
  call void @glVertex2f(float %41, float %42), !dbg !7170
  br label %if.end39

if.end39:                                         ; preds = %if.else38, %for.end36
  br label %if.end40, !dbg !7171

if.end40:                                         ; preds = %if.end39, %for.end
  %43 = load i8, i8* %use_highlight.addr, align 1, !dbg !7172
  %conv = zext i8 %43 to i32, !dbg !7172
  %tobool41 = icmp ne i32 %conv, 0, !dbg !7172
  br i1 %tobool41, label %land.lhs.true, label %if.end48, !dbg !7174

land.lhs.true:                                    ; preds = %if.end40
  %44 = load i8, i8* %use_shadow.addr, align 1, !dbg !7175
  %tobool42 = icmp ne i8 %44, 0, !dbg !7175
  br i1 %tobool42, label %if.end48, label %if.then43, !dbg !7176

if.then43:                                        ; preds = %land.lhs.true
  %45 = load i8*, i8** %highlight_fade.addr, align 8, !dbg !7177
  %tobool44 = icmp ne i8* %45, null, !dbg !7177
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !7180

if.then45:                                        ; preds = %if.then43
  %46 = load i8*, i8** %highlight_fade.addr, align 8, !dbg !7181
  call void @glColor3ubv(i8* %46), !dbg !7183
  br label %if.end46, !dbg !7184

if.end46:                                         ; preds = %if.then45, %if.then43
  %47 = load float, float* %minx.addr, align 4, !dbg !7185
  %48 = load float, float* %miny.addr, align 4, !dbg !7186
  %49 = load float, float* %rad.addr, align 4, !dbg !7187
  %add47 = fadd float %48, %49, !dbg !7188
  call void @glVertex2f(float %47, float %add47), !dbg !7189
  call void @glEnd(), !dbg !7190
  br label %return, !dbg !7191

if.end48:                                         ; preds = %land.lhs.true, %if.end40
  %50 = load i32, i32* %roundboxtype.addr, align 4, !dbg !7192
  %and49 = and i32 %50, 8, !dbg !7194
  %tobool50 = icmp ne i32 %and49, 0, !dbg !7194
  br i1 %tobool50, label %if.then51, label %if.else70, !dbg !7195

if.then51:                                        ; preds = %if.end48
  %51 = load float, float* %minx.addr, align 4, !dbg !7196
  %52 = load float, float* %miny.addr, align 4, !dbg !7198
  %53 = load float, float* %rad.addr, align 4, !dbg !7199
  %add52 = fadd float %52, %53, !dbg !7200
  call void @glVertex2f(float %51, float %add52), !dbg !7201
  store i32 0, i32* %a, align 4, !dbg !7202
  br label %for.cond53, !dbg !7204

for.cond53:                                       ; preds = %for.inc66, %if.then51
  %54 = load i32, i32* %a, align 4, !dbg !7205
  %cmp54 = icmp slt i32 %54, 4, !dbg !7207
  br i1 %cmp54, label %for.body56, label %for.end68, !dbg !7208

for.body56:                                       ; preds = %for.cond53
  %55 = load float, float* %minx.addr, align 4, !dbg !7209
  %56 = load i32, i32* %a, align 4, !dbg !7211
  %idxprom57 = sext i32 %56 to i64, !dbg !7212
  %arrayidx58 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 %idxprom57, !dbg !7212
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx58, i64 0, i64 1, !dbg !7212
  %57 = load float, float* %arrayidx59, align 4, !dbg !7212
  %add60 = fadd float %55, %57, !dbg !7213
  %58 = load float, float* %miny.addr, align 4, !dbg !7214
  %59 = load float, float* %rad.addr, align 4, !dbg !7215
  %add61 = fadd float %58, %59, !dbg !7216
  %60 = load i32, i32* %a, align 4, !dbg !7217
  %idxprom62 = sext i32 %60 to i64, !dbg !7218
  %arrayidx63 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 %idxprom62, !dbg !7218
  %arrayidx64 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx63, i64 0, i64 0, !dbg !7218
  %61 = load float, float* %arrayidx64, align 8, !dbg !7218
  %sub65 = fsub float %add61, %61, !dbg !7219
  call void @glVertex2f(float %add60, float %sub65), !dbg !7220
  br label %for.inc66, !dbg !7221

for.inc66:                                        ; preds = %for.body56
  %62 = load i32, i32* %a, align 4, !dbg !7222
  %inc67 = add nsw i32 %62, 1, !dbg !7222
  store i32 %inc67, i32* %a, align 4, !dbg !7222
  br label %for.cond53, !dbg !7223, !llvm.loop !7224

for.end68:                                        ; preds = %for.cond53
  %63 = load float, float* %minx.addr, align 4, !dbg !7226
  %64 = load float, float* %rad.addr, align 4, !dbg !7227
  %add69 = fadd float %63, %64, !dbg !7228
  %65 = load float, float* %miny.addr, align 4, !dbg !7229
  call void @glVertex2f(float %add69, float %65), !dbg !7230
  br label %if.end71, !dbg !7231

if.else70:                                        ; preds = %if.end48
  %66 = load float, float* %minx.addr, align 4, !dbg !7232
  %67 = load float, float* %miny.addr, align 4, !dbg !7234
  call void @glVertex2f(float %66, float %67), !dbg !7235
  br label %if.end71

if.end71:                                         ; preds = %if.else70, %for.end68
  %68 = load i32, i32* %roundboxtype.addr, align 4, !dbg !7236
  %and72 = and i32 %68, 4, !dbg !7238
  %tobool73 = icmp ne i32 %and72, 0, !dbg !7238
  br i1 %tobool73, label %if.then74, label %if.else93, !dbg !7239

if.then74:                                        ; preds = %if.end71
  %69 = load float, float* %maxx.addr, align 4, !dbg !7240
  %70 = load float, float* %rad.addr, align 4, !dbg !7242
  %sub75 = fsub float %69, %70, !dbg !7243
  %71 = load float, float* %miny.addr, align 4, !dbg !7244
  call void @glVertex2f(float %sub75, float %71), !dbg !7245
  store i32 0, i32* %a, align 4, !dbg !7246
  br label %for.cond76, !dbg !7248

for.cond76:                                       ; preds = %for.inc89, %if.then74
  %72 = load i32, i32* %a, align 4, !dbg !7249
  %cmp77 = icmp slt i32 %72, 4, !dbg !7251
  br i1 %cmp77, label %for.body79, label %for.end91, !dbg !7252

for.body79:                                       ; preds = %for.cond76
  %73 = load float, float* %maxx.addr, align 4, !dbg !7253
  %74 = load float, float* %rad.addr, align 4, !dbg !7255
  %sub80 = fsub float %73, %74, !dbg !7256
  %75 = load i32, i32* %a, align 4, !dbg !7257
  %idxprom81 = sext i32 %75 to i64, !dbg !7258
  %arrayidx82 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 %idxprom81, !dbg !7258
  %arrayidx83 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx82, i64 0, i64 0, !dbg !7258
  %76 = load float, float* %arrayidx83, align 8, !dbg !7258
  %add84 = fadd float %sub80, %76, !dbg !7259
  %77 = load float, float* %miny.addr, align 4, !dbg !7260
  %78 = load i32, i32* %a, align 4, !dbg !7261
  %idxprom85 = sext i32 %78 to i64, !dbg !7262
  %arrayidx86 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %vec, i64 0, i64 %idxprom85, !dbg !7262
  %arrayidx87 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx86, i64 0, i64 1, !dbg !7262
  %79 = load float, float* %arrayidx87, align 4, !dbg !7262
  %add88 = fadd float %77, %79, !dbg !7263
  call void @glVertex2f(float %add84, float %add88), !dbg !7264
  br label %for.inc89, !dbg !7265

for.inc89:                                        ; preds = %for.body79
  %80 = load i32, i32* %a, align 4, !dbg !7266
  %inc90 = add nsw i32 %80, 1, !dbg !7266
  store i32 %inc90, i32* %a, align 4, !dbg !7266
  br label %for.cond76, !dbg !7267, !llvm.loop !7268

for.end91:                                        ; preds = %for.cond76
  %81 = load float, float* %maxx.addr, align 4, !dbg !7270
  %82 = load float, float* %miny.addr, align 4, !dbg !7271
  %83 = load float, float* %rad.addr, align 4, !dbg !7272
  %add92 = fadd float %82, %83, !dbg !7273
  call void @glVertex2f(float %81, float %add92), !dbg !7274
  br label %if.end94, !dbg !7275

if.else93:                                        ; preds = %if.end71
  %84 = load float, float* %maxx.addr, align 4, !dbg !7276
  %85 = load float, float* %miny.addr, align 4, !dbg !7278
  call void @glVertex2f(float %84, float %85), !dbg !7279
  br label %if.end94

if.end94:                                         ; preds = %if.else93, %for.end91
  call void @glEnd(), !dbg !7280
  br label %return, !dbg !7281

return:                                           ; preds = %if.end94, %if.end46
  ret void, !dbg !7281
}

declare dso_local void @glPolygonMode(i32, i32) #3

declare dso_local void @glShadeModel(i32) #3

declare dso_local i64 @BLF_width_to_strlen(i32, i8*, i64, float, float*) #3

declare dso_local void @BLF_position(i32, float, float, float) #3

declare dso_local void @BLF_draw(i32, i8*, i64) #3

declare dso_local void @BLF_disable(i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ui_handler_panel_region(%struct.bContext* %C, %struct.wmEvent* %event, %struct.ARegion* %ar) #0 !dbg !7282 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %pa = alloca %struct.Panel*, align 8
  %retval1 = alloca i32, align 4
  %mx = alloca i32, align 4
  %my = alloca i32, align 4
  %has_category_tabs = alloca i8, align 1
  %pc_dyn = alloca %struct.PanelCategoryDyn*, align 8
  %category = alloca i8*, align 8
  %pc_dyn29 = alloca %struct.PanelCategoryDyn*, align 8
  %inside = alloca i8, align 1
  %inside_header = alloca i8, align 1
  %inside_scale = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7286, metadata !DIExpression()), !dbg !7287
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7288, metadata !DIExpression()), !dbg !7289
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !7290, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !7292, metadata !DIExpression()), !dbg !7293
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !7294, metadata !DIExpression()), !dbg !7295
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7296, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.declare(metadata i32* %mx, metadata !7298, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.declare(metadata i32* %my, metadata !7300, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.declare(metadata i8* %has_category_tabs, metadata !7302, metadata !DIExpression()), !dbg !7303
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7304
  %call = call zeroext i8 @UI_panel_category_is_visible(%struct.ARegion* %0), !dbg !7305
  store i8 %call, i8* %has_category_tabs, align 1, !dbg !7303
  store i32 0, i32* %retval1, align 4, !dbg !7306
  %1 = load i8, i8* %has_category_tabs, align 1, !dbg !7307
  %tobool = icmp ne i8 %1, 0, !dbg !7307
  br i1 %tobool, label %if.then, label %if.end48, !dbg !7309

if.then:                                          ; preds = %entry
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7310
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 3, !dbg !7313
  %3 = load i16, i16* %val, align 2, !dbg !7313
  %conv = sext i16 %3 to i32, !dbg !7310
  %cmp = icmp eq i32 %conv, 1, !dbg !7314
  br i1 %cmp, label %if.then3, label %if.end47, !dbg !7315

if.then3:                                         ; preds = %if.then
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7316
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 2, !dbg !7319
  %5 = load i16, i16* %type, align 8, !dbg !7319
  %conv4 = sext i16 %5 to i32, !dbg !7316
  %cmp5 = icmp eq i32 %conv4, 1, !dbg !7320
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !7321

if.then7:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata %struct.PanelCategoryDyn** %pc_dyn, metadata !7322, metadata !DIExpression()), !dbg !7324
  %6 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7325
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7326
  %call8 = call %struct.PanelCategoryDyn* @UI_panel_category_find_mouse_over(%struct.ARegion* %6, %struct.wmEvent* %7), !dbg !7327
  store %struct.PanelCategoryDyn* %call8, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !7324
  %8 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !7328
  %tobool9 = icmp ne %struct.PanelCategoryDyn* %8, null, !dbg !7328
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !7330

if.then10:                                        ; preds = %if.then7
  %9 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7331
  %10 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn, align 8, !dbg !7333
  %idname = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %10, i32 0, i32 2, !dbg !7334
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !7333
  call void @UI_panel_category_active_set(%struct.ARegion* %9, i8* %arraydecay), !dbg !7335
  %11 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7336
  call void @ED_region_tag_redraw(%struct.ARegion* %11), !dbg !7337
  %12 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7338
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %12, i32 0, i32 2, !dbg !7339
  call void @UI_view2d_offset(%struct.View2D* %v2d, float -1.000000e+00, float 1.000000e+00), !dbg !7340
  store i32 1, i32* %retval1, align 4, !dbg !7341
  br label %if.end, !dbg !7342

if.end:                                           ; preds = %if.then10, %if.then7
  br label %if.end46, !dbg !7343

if.else:                                          ; preds = %if.then3
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7344
  %type11 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 2, !dbg !7344
  %14 = load i16, i16* %type11, align 8, !dbg !7344
  %conv12 = sext i16 %14 to i32, !dbg !7344
  %cmp13 = icmp eq i32 %conv12, 10, !dbg !7344
  br i1 %cmp13, label %if.then19, label %lor.lhs.false, !dbg !7344

lor.lhs.false:                                    ; preds = %if.else
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7344
  %type15 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 2, !dbg !7344
  %16 = load i16, i16* %type15, align 8, !dbg !7344
  %conv16 = sext i16 %16 to i32, !dbg !7344
  %cmp17 = icmp eq i32 %conv16, 11, !dbg !7344
  br i1 %cmp17, label %if.then19, label %if.end45, !dbg !7346

if.then19:                                        ; preds = %lor.lhs.false, %if.else
  %17 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7347
  %ctrl = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %17, i32 0, i32 18, !dbg !7350
  %18 = load i16, i16* %ctrl, align 2, !dbg !7350
  %conv20 = sext i16 %18 to i32, !dbg !7347
  %tobool21 = icmp ne i32 %conv20, 0, !dbg !7347
  br i1 %tobool21, label %if.then25, label %lor.lhs.false22, !dbg !7351

lor.lhs.false22:                                  ; preds = %if.then19
  %19 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7352
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %19, i32 0, i32 6, !dbg !7353
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !7352
  %20 = load i32, i32* %arrayidx, align 4, !dbg !7352
  %21 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7354
  %panels_category = getelementptr inbounds %struct.ARegion, %struct.ARegion* %21, i32 0, i32 27, !dbg !7355
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels_category, i32 0, i32 0, !dbg !7356
  %22 = load i8*, i8** %first, align 8, !dbg !7356
  %23 = bitcast i8* %22 to %struct.PanelCategoryDyn*, !dbg !7357
  %rect = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %23, i32 0, i32 3, !dbg !7358
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %rect, i32 0, i32 1, !dbg !7359
  %24 = load i32, i32* %xmax, align 4, !dbg !7359
  %cmp23 = icmp slt i32 %20, %24, !dbg !7360
  br i1 %cmp23, label %if.then25, label %if.end44, !dbg !7361

if.then25:                                        ; preds = %lor.lhs.false22, %if.then19
  call void @llvm.dbg.declare(metadata i8** %category, metadata !7362, metadata !DIExpression()), !dbg !7364
  %25 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7365
  %call26 = call i8* @UI_panel_category_active_get(%struct.ARegion* %25, i8 zeroext 0), !dbg !7366
  store i8* %call26, i8** %category, align 8, !dbg !7364
  %26 = load i8*, i8** %category, align 8, !dbg !7367
  %tobool27 = icmp ne i8* %26, null, !dbg !7367
  br i1 %tobool27, label %if.then28, label %if.end43, !dbg !7369

if.then28:                                        ; preds = %if.then25
  call void @llvm.dbg.declare(metadata %struct.PanelCategoryDyn** %pc_dyn29, metadata !7370, metadata !DIExpression()), !dbg !7372
  %27 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7373
  %28 = load i8*, i8** %category, align 8, !dbg !7374
  %call30 = call %struct.PanelCategoryDyn* @UI_panel_category_find(%struct.ARegion* %27, i8* %28), !dbg !7375
  store %struct.PanelCategoryDyn* %call30, %struct.PanelCategoryDyn** %pc_dyn29, align 8, !dbg !7372
  %29 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn29, align 8, !dbg !7376
  %tobool31 = icmp ne %struct.PanelCategoryDyn* %29, null, !dbg !7376
  br i1 %tobool31, label %if.then32, label %if.end42, !dbg !7378

if.then32:                                        ; preds = %if.then28
  %30 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7379
  %type33 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %30, i32 0, i32 2, !dbg !7381
  %31 = load i16, i16* %type33, align 8, !dbg !7381
  %conv34 = sext i16 %31 to i32, !dbg !7379
  %cmp35 = icmp eq i32 %conv34, 11, !dbg !7382
  br i1 %cmp35, label %cond.true, label %cond.false, !dbg !7383

cond.true:                                        ; preds = %if.then32
  %32 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn29, align 8, !dbg !7384
  %next = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %32, i32 0, i32 0, !dbg !7385
  %33 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %next, align 8, !dbg !7385
  br label %cond.end, !dbg !7383

cond.false:                                       ; preds = %if.then32
  %34 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn29, align 8, !dbg !7386
  %prev = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %34, i32 0, i32 1, !dbg !7387
  %35 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %prev, align 8, !dbg !7387
  br label %cond.end, !dbg !7383

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.PanelCategoryDyn* [ %33, %cond.true ], [ %35, %cond.false ], !dbg !7383
  store %struct.PanelCategoryDyn* %cond, %struct.PanelCategoryDyn** %pc_dyn29, align 8, !dbg !7388
  %36 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn29, align 8, !dbg !7389
  %tobool37 = icmp ne %struct.PanelCategoryDyn* %36, null, !dbg !7389
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !7391

if.then38:                                        ; preds = %cond.end
  %37 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7392
  %38 = load %struct.PanelCategoryDyn*, %struct.PanelCategoryDyn** %pc_dyn29, align 8, !dbg !7394
  %idname39 = getelementptr inbounds %struct.PanelCategoryDyn, %struct.PanelCategoryDyn* %38, i32 0, i32 2, !dbg !7395
  %arraydecay40 = getelementptr inbounds [64 x i8], [64 x i8]* %idname39, i64 0, i64 0, !dbg !7394
  call void @UI_panel_category_active_set(%struct.ARegion* %37, i8* %arraydecay40), !dbg !7396
  %39 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7397
  call void @ED_region_tag_redraw(%struct.ARegion* %39), !dbg !7398
  br label %if.end41, !dbg !7399

if.end41:                                         ; preds = %if.then38, %cond.end
  br label %if.end42, !dbg !7400

if.end42:                                         ; preds = %if.end41, %if.then28
  br label %if.end43, !dbg !7401

if.end43:                                         ; preds = %if.end42, %if.then25
  store i32 1, i32* %retval1, align 4, !dbg !7402
  br label %if.end44, !dbg !7403

if.end44:                                         ; preds = %if.end43, %lor.lhs.false22
  br label %if.end45, !dbg !7404

if.end45:                                         ; preds = %if.end44, %lor.lhs.false
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end
  br label %if.end47, !dbg !7405

if.end47:                                         ; preds = %if.end46, %if.then
  br label %if.end48, !dbg !7406

if.end48:                                         ; preds = %if.end47, %entry
  %40 = load i32, i32* %retval1, align 4, !dbg !7407
  %cmp49 = icmp eq i32 %40, 1, !dbg !7409
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !7410

if.then51:                                        ; preds = %if.end48
  %41 = load i32, i32* %retval1, align 4, !dbg !7411
  store i32 %41, i32* %retval, align 4, !dbg !7413
  br label %return, !dbg !7413

if.end52:                                         ; preds = %if.end48
  %42 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7414
  %uiblocks = getelementptr inbounds %struct.ARegion, %struct.ARegion* %42, i32 0, i32 21, !dbg !7416
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %uiblocks, i32 0, i32 1, !dbg !7417
  %43 = load i8*, i8** %last, align 8, !dbg !7417
  %44 = bitcast i8* %43 to %struct.uiBlock*, !dbg !7414
  store %struct.uiBlock* %44, %struct.uiBlock** %block, align 8, !dbg !7418
  br label %for.cond, !dbg !7419

for.cond:                                         ; preds = %for.inc, %if.end52
  %45 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7420
  %tobool53 = icmp ne %struct.uiBlock* %45, null, !dbg !7422
  br i1 %tobool53, label %for.body, label %for.end, !dbg !7422

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %inside, metadata !7423, metadata !DIExpression()), !dbg !7425
  store i8 0, i8* %inside, align 1, !dbg !7425
  call void @llvm.dbg.declare(metadata i8* %inside_header, metadata !7426, metadata !DIExpression()), !dbg !7427
  store i8 0, i8* %inside_header, align 1, !dbg !7427
  call void @llvm.dbg.declare(metadata i8* %inside_scale, metadata !7428, metadata !DIExpression()), !dbg !7429
  store i8 0, i8* %inside_scale, align 1, !dbg !7429
  %46 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7430
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %46, i32 0, i32 4, !dbg !7431
  %47 = load i32, i32* %x, align 4, !dbg !7431
  store i32 %47, i32* %mx, align 4, !dbg !7432
  %48 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7433
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %48, i32 0, i32 5, !dbg !7434
  %49 = load i32, i32* %y, align 8, !dbg !7434
  store i32 %49, i32* %my, align 4, !dbg !7435
  %50 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7436
  %51 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7437
  call void @ui_window_to_block(%struct.ARegion* %50, %struct.uiBlock* %51, i32* %mx, i32* %my), !dbg !7438
  %52 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7439
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %52, i32 0, i32 3, !dbg !7440
  %53 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !7440
  store %struct.Panel* %53, %struct.Panel** %pa, align 8, !dbg !7441
  %54 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7442
  %tobool54 = icmp ne %struct.Panel* %54, null, !dbg !7442
  br i1 %tobool54, label %lor.lhs.false55, label %if.then58, !dbg !7444

lor.lhs.false55:                                  ; preds = %for.body
  %55 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7445
  %paneltab = getelementptr inbounds %struct.Panel, %struct.Panel* %55, i32 0, i32 18, !dbg !7446
  %56 = load %struct.Panel*, %struct.Panel** %paneltab, align 8, !dbg !7446
  %cmp56 = icmp ne %struct.Panel* %56, null, !dbg !7447
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !7448

if.then58:                                        ; preds = %lor.lhs.false55, %for.body
  br label %for.inc, !dbg !7449

if.end59:                                         ; preds = %lor.lhs.false55
  %57 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7450
  %type60 = getelementptr inbounds %struct.Panel, %struct.Panel* %57, i32 0, i32 2, !dbg !7452
  %58 = load %struct.PanelType*, %struct.PanelType** %type60, align 8, !dbg !7452
  %tobool61 = icmp ne %struct.PanelType* %58, null, !dbg !7450
  br i1 %tobool61, label %land.lhs.true, label %if.end65, !dbg !7453

land.lhs.true:                                    ; preds = %if.end59
  %59 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7454
  %type62 = getelementptr inbounds %struct.Panel, %struct.Panel* %59, i32 0, i32 2, !dbg !7455
  %60 = load %struct.PanelType*, %struct.PanelType** %type62, align 8, !dbg !7455
  %flag = getelementptr inbounds %struct.PanelType, %struct.PanelType* %60, i32 0, i32 9, !dbg !7456
  %61 = load i32, i32* %flag, align 8, !dbg !7456
  %and = and i32 %61, 2, !dbg !7457
  %tobool63 = icmp ne i32 %and, 0, !dbg !7457
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !7458

if.then64:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !7459

if.end65:                                         ; preds = %land.lhs.true, %if.end59
  %62 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7460
  %flag66 = getelementptr inbounds %struct.Panel, %struct.Panel* %62, i32 0, i32 13, !dbg !7462
  %63 = load i16, i16* %flag66, align 4, !dbg !7462
  %conv67 = sext i16 %63 to i32, !dbg !7460
  %and68 = and i32 %conv67, 2, !dbg !7463
  %tobool69 = icmp ne i32 %and68, 0, !dbg !7463
  br i1 %tobool69, label %if.then70, label %if.else86, !dbg !7464

if.then70:                                        ; preds = %if.end65
  %64 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7465
  %rect71 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %64, i32 0, i32 11, !dbg !7468
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect71, i32 0, i32 0, !dbg !7469
  %65 = load float, float* %xmin, align 8, !dbg !7469
  %66 = load i32, i32* %mx, align 4, !dbg !7470
  %conv72 = sitofp i32 %66 to float, !dbg !7470
  %cmp73 = fcmp ole float %65, %conv72, !dbg !7471
  br i1 %cmp73, label %land.lhs.true75, label %if.end85, !dbg !7472

land.lhs.true75:                                  ; preds = %if.then70
  %67 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7473
  %rect76 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %67, i32 0, i32 11, !dbg !7474
  %xmin77 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect76, i32 0, i32 0, !dbg !7475
  %68 = load float, float* %xmin77, align 8, !dbg !7475
  %69 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !7476
  %conv78 = sext i16 %69 to i32, !dbg !7476
  %add = add nsw i32 %conv78, 4, !dbg !7476
  %conv79 = sitofp i32 %add to float, !dbg !7476
  %add80 = fadd float %68, %conv79, !dbg !7477
  %70 = load i32, i32* %mx, align 4, !dbg !7478
  %conv81 = sitofp i32 %70 to float, !dbg !7478
  %cmp82 = fcmp oge float %add80, %conv81, !dbg !7479
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !7480

if.then84:                                        ; preds = %land.lhs.true75
  store i8 1, i8* %inside_header, align 1, !dbg !7481
  br label %if.end85, !dbg !7482

if.end85:                                         ; preds = %if.then84, %land.lhs.true75, %if.then70
  br label %if.end179, !dbg !7483

if.else86:                                        ; preds = %if.end65
  %71 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7484
  %rect87 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %71, i32 0, i32 11, !dbg !7486
  %xmin88 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect87, i32 0, i32 0, !dbg !7487
  %72 = load float, float* %xmin88, align 8, !dbg !7487
  %73 = load i32, i32* %mx, align 4, !dbg !7488
  %conv89 = sitofp i32 %73 to float, !dbg !7488
  %cmp90 = fcmp ogt float %72, %conv89, !dbg !7489
  br i1 %cmp90, label %if.then98, label %lor.lhs.false92, !dbg !7490

lor.lhs.false92:                                  ; preds = %if.else86
  %74 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7491
  %rect93 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %74, i32 0, i32 11, !dbg !7492
  %xmax94 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect93, i32 0, i32 1, !dbg !7493
  %75 = load float, float* %xmax94, align 4, !dbg !7493
  %76 = load i32, i32* %mx, align 4, !dbg !7494
  %conv95 = sitofp i32 %76 to float, !dbg !7494
  %cmp96 = fcmp olt float %75, %conv95, !dbg !7495
  br i1 %cmp96, label %if.then98, label %if.else99, !dbg !7496

if.then98:                                        ; preds = %lor.lhs.false92, %if.else86
  br label %if.end178, !dbg !7497

if.else99:                                        ; preds = %lor.lhs.false92
  %77 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7499
  %rect100 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %77, i32 0, i32 11, !dbg !7501
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect100, i32 0, i32 3, !dbg !7502
  %78 = load float, float* %ymax, align 4, !dbg !7502
  %79 = load i32, i32* %my, align 4, !dbg !7503
  %conv101 = sitofp i32 %79 to float, !dbg !7503
  %cmp102 = fcmp ole float %78, %conv101, !dbg !7504
  br i1 %cmp102, label %land.lhs.true104, label %if.else115, !dbg !7505

land.lhs.true104:                                 ; preds = %if.else99
  %80 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7506
  %rect105 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %80, i32 0, i32 11, !dbg !7507
  %ymax106 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect105, i32 0, i32 3, !dbg !7508
  %81 = load float, float* %ymax106, align 4, !dbg !7508
  %82 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !7509
  %conv107 = sext i16 %82 to i32, !dbg !7509
  %add108 = add nsw i32 %conv107, 4, !dbg !7509
  %conv109 = sitofp i32 %add108 to float, !dbg !7509
  %add110 = fadd float %81, %conv109, !dbg !7510
  %83 = load i32, i32* %my, align 4, !dbg !7511
  %conv111 = sitofp i32 %83 to float, !dbg !7511
  %cmp112 = fcmp oge float %add110, %conv111, !dbg !7512
  br i1 %cmp112, label %if.then114, label %if.else115, !dbg !7513

if.then114:                                       ; preds = %land.lhs.true104
  store i8 1, i8* %inside_header, align 1, !dbg !7514
  br label %if.end177, !dbg !7516

if.else115:                                       ; preds = %land.lhs.true104, %if.else99
  %84 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7517
  %flag116 = getelementptr inbounds %struct.Panel, %struct.Panel* %84, i32 0, i32 13, !dbg !7519
  %85 = load i16, i16* %flag116, align 4, !dbg !7519
  %conv117 = sext i16 %85 to i32, !dbg !7517
  %and118 = and i32 %conv117, 4, !dbg !7520
  %tobool119 = icmp ne i32 %and118, 0, !dbg !7520
  br i1 %tobool119, label %if.end176, label %if.then120, !dbg !7521

if.then120:                                       ; preds = %if.else115
  %86 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7522
  %control = getelementptr inbounds %struct.Panel, %struct.Panel* %86, i32 0, i32 15, !dbg !7525
  %87 = load i16, i16* %control, align 8, !dbg !7525
  %conv121 = sext i16 %87 to i32, !dbg !7522
  %and122 = and i32 %conv121, 512, !dbg !7526
  %tobool123 = icmp ne i32 %and122, 0, !dbg !7526
  br i1 %tobool123, label %if.then124, label %if.end145, !dbg !7527

if.then124:                                       ; preds = %if.then120
  %88 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7528
  %rect125 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %88, i32 0, i32 11, !dbg !7531
  %xmax126 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect125, i32 0, i32 1, !dbg !7532
  %89 = load float, float* %xmax126, align 4, !dbg !7532
  %90 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !7533
  %conv127 = sext i16 %90 to i32, !dbg !7533
  %add128 = add nsw i32 %conv127, 4, !dbg !7533
  %conv129 = sitofp i32 %add128 to float, !dbg !7533
  %sub = fsub float %89, %conv129, !dbg !7534
  %91 = load i32, i32* %mx, align 4, !dbg !7535
  %conv130 = sitofp i32 %91 to float, !dbg !7535
  %cmp131 = fcmp ole float %sub, %conv130, !dbg !7536
  br i1 %cmp131, label %if.then133, label %if.end144, !dbg !7537

if.then133:                                       ; preds = %if.then124
  %92 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7538
  %rect134 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %92, i32 0, i32 11, !dbg !7540
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect134, i32 0, i32 2, !dbg !7541
  %93 = load float, float* %ymin, align 8, !dbg !7541
  %94 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !7542
  %conv135 = sext i16 %94 to i32, !dbg !7542
  %add136 = add nsw i32 %conv135, 4, !dbg !7542
  %conv137 = sitofp i32 %add136 to float, !dbg !7542
  %add138 = fadd float %93, %conv137, !dbg !7543
  %95 = load i32, i32* %my, align 4, !dbg !7544
  %conv139 = sitofp i32 %95 to float, !dbg !7544
  %cmp140 = fcmp oge float %add138, %conv139, !dbg !7545
  br i1 %cmp140, label %if.then142, label %if.end143, !dbg !7546

if.then142:                                       ; preds = %if.then133
  store i8 1, i8* %inside_scale, align 1, !dbg !7547
  br label %if.end143, !dbg !7548

if.end143:                                        ; preds = %if.then142, %if.then133
  br label %if.end144, !dbg !7544

if.end144:                                        ; preds = %if.end143, %if.then124
  br label %if.end145, !dbg !7549

if.end145:                                        ; preds = %if.end144, %if.then120
  %96 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7550
  %rect146 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %96, i32 0, i32 11, !dbg !7552
  %xmin147 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect146, i32 0, i32 0, !dbg !7553
  %97 = load float, float* %xmin147, align 8, !dbg !7553
  %98 = load i32, i32* %mx, align 4, !dbg !7554
  %conv148 = sitofp i32 %98 to float, !dbg !7554
  %cmp149 = fcmp ole float %97, %conv148, !dbg !7555
  br i1 %cmp149, label %land.lhs.true151, label %if.end175, !dbg !7556

land.lhs.true151:                                 ; preds = %if.end145
  %99 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7557
  %rect152 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %99, i32 0, i32 11, !dbg !7558
  %xmax153 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect152, i32 0, i32 1, !dbg !7559
  %100 = load float, float* %xmax153, align 4, !dbg !7559
  %101 = load i32, i32* %mx, align 4, !dbg !7560
  %conv154 = sitofp i32 %101 to float, !dbg !7560
  %cmp155 = fcmp oge float %100, %conv154, !dbg !7561
  br i1 %cmp155, label %if.then157, label %if.end175, !dbg !7562

if.then157:                                       ; preds = %land.lhs.true151
  %102 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7563
  %rect158 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %102, i32 0, i32 11, !dbg !7565
  %ymin159 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect158, i32 0, i32 2, !dbg !7566
  %103 = load float, float* %ymin159, align 8, !dbg !7566
  %104 = load i32, i32* %my, align 4, !dbg !7567
  %conv160 = sitofp i32 %104 to float, !dbg !7567
  %cmp161 = fcmp ole float %103, %conv160, !dbg !7568
  br i1 %cmp161, label %land.lhs.true163, label %if.end174, !dbg !7569

land.lhs.true163:                                 ; preds = %if.then157
  %105 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7570
  %rect164 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %105, i32 0, i32 11, !dbg !7571
  %ymax165 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect164, i32 0, i32 3, !dbg !7572
  %106 = load float, float* %ymax165, align 4, !dbg !7572
  %107 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !7573
  %conv166 = sext i16 %107 to i32, !dbg !7573
  %add167 = add nsw i32 %conv166, 4, !dbg !7573
  %conv168 = sitofp i32 %add167 to float, !dbg !7573
  %add169 = fadd float %106, %conv168, !dbg !7574
  %108 = load i32, i32* %my, align 4, !dbg !7575
  %conv170 = sitofp i32 %108 to float, !dbg !7575
  %cmp171 = fcmp oge float %add169, %conv170, !dbg !7576
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !7577

if.then173:                                       ; preds = %land.lhs.true163
  store i8 1, i8* %inside, align 1, !dbg !7578
  br label %if.end174, !dbg !7579

if.end174:                                        ; preds = %if.then173, %land.lhs.true163, %if.then157
  br label %if.end175, !dbg !7575

if.end175:                                        ; preds = %if.end174, %land.lhs.true151, %if.end145
  br label %if.end176, !dbg !7580

if.end176:                                        ; preds = %if.end175, %if.else115
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %if.then114
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.then98
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.end85
  %109 = load i8, i8* %inside, align 1, !dbg !7581
  %conv180 = zext i8 %109 to i32, !dbg !7581
  %tobool181 = icmp ne i32 %conv180, 0, !dbg !7581
  br i1 %tobool181, label %land.lhs.true185, label %lor.lhs.false182, !dbg !7583

lor.lhs.false182:                                 ; preds = %if.end179
  %110 = load i8, i8* %inside_header, align 1, !dbg !7584
  %conv183 = zext i8 %110 to i32, !dbg !7584
  %tobool184 = icmp ne i32 %conv183, 0, !dbg !7584
  br i1 %tobool184, label %land.lhs.true185, label %if.end246, !dbg !7585

land.lhs.true185:                                 ; preds = %lor.lhs.false182, %if.end179
  %111 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7586
  %val186 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %111, i32 0, i32 3, !dbg !7587
  %112 = load i16, i16* %val186, align 2, !dbg !7587
  %conv187 = sext i16 %112 to i32, !dbg !7586
  %cmp188 = icmp eq i32 %conv187, 1, !dbg !7588
  br i1 %cmp188, label %if.then190, label %if.end246, !dbg !7589

if.then190:                                       ; preds = %land.lhs.true185
  %113 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7590
  %type191 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %113, i32 0, i32 2, !dbg !7593
  %114 = load i16, i16* %type191, align 8, !dbg !7593
  %conv192 = sext i16 %114 to i32, !dbg !7590
  %cmp193 = icmp eq i32 %conv192, 97, !dbg !7594
  br i1 %cmp193, label %land.lhs.true195, label %if.end245, !dbg !7595

land.lhs.true195:                                 ; preds = %if.then190
  %115 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7596
  %ctrl196 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %115, i32 0, i32 18, !dbg !7596
  %116 = load i16, i16* %ctrl196, align 2, !dbg !7596
  %conv197 = sext i16 %116 to i32, !dbg !7596
  %cmp198 = icmp eq i32 1, %conv197, !dbg !7596
  br i1 %cmp198, label %if.end245, label %lor.lhs.false200, !dbg !7596

lor.lhs.false200:                                 ; preds = %land.lhs.true195
  %117 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7596
  %oskey = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %117, i32 0, i32 20, !dbg !7596
  %118 = load i16, i16* %oskey, align 2, !dbg !7596
  %conv201 = sext i16 %118 to i32, !dbg !7596
  %cmp202 = icmp eq i32 1, %conv201, !dbg !7596
  br i1 %cmp202, label %if.end245, label %lor.lhs.false204, !dbg !7596

lor.lhs.false204:                                 ; preds = %lor.lhs.false200
  %119 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7596
  %shift = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %119, i32 0, i32 17, !dbg !7596
  %120 = load i16, i16* %shift, align 8, !dbg !7596
  %conv205 = sext i16 %120 to i32, !dbg !7596
  %cmp206 = icmp eq i32 1, %conv205, !dbg !7596
  br i1 %cmp206, label %if.end245, label %lor.lhs.false208, !dbg !7596

lor.lhs.false208:                                 ; preds = %lor.lhs.false204
  %121 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7596
  %alt = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %121, i32 0, i32 19, !dbg !7596
  %122 = load i16, i16* %alt, align 4, !dbg !7596
  %conv209 = sext i16 %122 to i32, !dbg !7596
  %cmp210 = icmp eq i32 1, %conv209, !dbg !7596
  br i1 %cmp210, label %if.end245, label %if.then212, !dbg !7597

if.then212:                                       ; preds = %lor.lhs.false208
  %123 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7598
  %flag213 = getelementptr inbounds %struct.Panel, %struct.Panel* %123, i32 0, i32 13, !dbg !7601
  %124 = load i16, i16* %flag213, align 4, !dbg !7601
  %conv214 = sext i16 %124 to i32, !dbg !7598
  %and215 = and i32 %conv214, 4, !dbg !7602
  %tobool216 = icmp ne i32 %and215, 0, !dbg !7602
  br i1 %tobool216, label %if.then217, label %if.else239, !dbg !7603

if.then217:                                       ; preds = %if.then212
  %125 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7604
  %rect218 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %125, i32 0, i32 11, !dbg !7607
  %ymax219 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect218, i32 0, i32 3, !dbg !7608
  %126 = load float, float* %ymax219, align 4, !dbg !7608
  %127 = load i32, i32* %my, align 4, !dbg !7609
  %conv220 = sitofp i32 %127 to float, !dbg !7609
  %cmp221 = fcmp ole float %126, %conv220, !dbg !7610
  br i1 %cmp221, label %land.lhs.true223, label %if.end238, !dbg !7611

land.lhs.true223:                                 ; preds = %if.then217
  %128 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7612
  %rect224 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %128, i32 0, i32 11, !dbg !7613
  %ymax225 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect224, i32 0, i32 3, !dbg !7614
  %129 = load float, float* %ymax225, align 4, !dbg !7614
  %130 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !7615
  %conv226 = sext i16 %130 to i32, !dbg !7615
  %add227 = add nsw i32 %conv226, 4, !dbg !7615
  %conv228 = sitofp i32 %add227 to float, !dbg !7615
  %add229 = fadd float %129, %conv228, !dbg !7616
  %131 = load i32, i32* %my, align 4, !dbg !7617
  %conv230 = sitofp i32 %131 to float, !dbg !7617
  %cmp231 = fcmp oge float %add229, %conv230, !dbg !7618
  br i1 %cmp231, label %if.then233, label %if.end238, !dbg !7619

if.then233:                                       ; preds = %land.lhs.true223
  %132 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7620
  %133 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7621
  %134 = load i32, i32* %mx, align 4, !dbg !7622
  %135 = load i32, i32* %my, align 4, !dbg !7623
  %136 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7624
  %type234 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %136, i32 0, i32 2, !dbg !7625
  %137 = load i16, i16* %type234, align 8, !dbg !7625
  %conv235 = sext i16 %137 to i32, !dbg !7624
  %138 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7626
  %ctrl236 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %138, i32 0, i32 18, !dbg !7627
  %139 = load i16, i16* %ctrl236, align 2, !dbg !7627
  %140 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7628
  %shift237 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %140, i32 0, i32 17, !dbg !7629
  %141 = load i16, i16* %shift237, align 8, !dbg !7629
  call void @ui_handle_panel_header(%struct.bContext* %132, %struct.uiBlock* %133, i32 %134, i32 %135, i32 %conv235, i16 signext %139, i16 signext %141), !dbg !7630
  br label %if.end238, !dbg !7630

if.end238:                                        ; preds = %if.then233, %land.lhs.true223, %if.then217
  br label %if.end244, !dbg !7631

if.else239:                                       ; preds = %if.then212
  %142 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7632
  %143 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7633
  %144 = load i32, i32* %mx, align 4, !dbg !7634
  %145 = load i32, i32* %my, align 4, !dbg !7635
  %146 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7636
  %type240 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %146, i32 0, i32 2, !dbg !7637
  %147 = load i16, i16* %type240, align 8, !dbg !7637
  %conv241 = sext i16 %147 to i32, !dbg !7636
  %148 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7638
  %ctrl242 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %148, i32 0, i32 18, !dbg !7639
  %149 = load i16, i16* %ctrl242, align 2, !dbg !7639
  %150 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7640
  %shift243 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %150, i32 0, i32 17, !dbg !7641
  %151 = load i16, i16* %shift243, align 8, !dbg !7641
  call void @ui_handle_panel_header(%struct.bContext* %142, %struct.uiBlock* %143, i32 %144, i32 %145, i32 %conv241, i16 signext %149, i16 signext %151), !dbg !7642
  br label %if.end244

if.end244:                                        ; preds = %if.else239, %if.end238
  store i32 1, i32* %retval1, align 4, !dbg !7643
  br label %for.inc, !dbg !7644

if.end245:                                        ; preds = %lor.lhs.false208, %lor.lhs.false204, %lor.lhs.false200, %land.lhs.true195, %if.then190
  br label %if.end246, !dbg !7645

if.end246:                                        ; preds = %if.end245, %land.lhs.true185, %lor.lhs.false182
  %152 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7646
  %call247 = call zeroext i8 @ui_button_is_active(%struct.ARegion* %152), !dbg !7648
  %tobool248 = icmp ne i8 %call247, 0, !dbg !7648
  br i1 %tobool248, label %if.then249, label %if.end250, !dbg !7649

if.then249:                                       ; preds = %if.end246
  br label %for.inc, !dbg !7650

if.end250:                                        ; preds = %if.end246
  %153 = load i8, i8* %inside, align 1, !dbg !7651
  %conv251 = zext i8 %153 to i32, !dbg !7651
  %tobool252 = icmp ne i32 %conv251, 0, !dbg !7651
  br i1 %tobool252, label %if.then256, label %lor.lhs.false253, !dbg !7653

lor.lhs.false253:                                 ; preds = %if.end250
  %154 = load i8, i8* %inside_header, align 1, !dbg !7654
  %conv254 = zext i8 %154 to i32, !dbg !7654
  %tobool255 = icmp ne i32 %conv254, 0, !dbg !7654
  br i1 %tobool255, label %if.then256, label %if.end331, !dbg !7655

if.then256:                                       ; preds = %lor.lhs.false253, %if.end250
  %155 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7656
  %val257 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %155, i32 0, i32 3, !dbg !7659
  %156 = load i16, i16* %val257, align 2, !dbg !7659
  %conv258 = sext i16 %156 to i32, !dbg !7656
  %cmp259 = icmp eq i32 %conv258, 1, !dbg !7660
  br i1 %cmp259, label %if.then261, label %if.end330, !dbg !7661

if.then261:                                       ; preds = %if.then256
  %157 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7662
  %type262 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %157, i32 0, i32 2, !dbg !7662
  %158 = load i16, i16* %type262, align 8, !dbg !7662
  %conv263 = sext i16 %158 to i32, !dbg !7662
  %cmp264 = icmp eq i32 %conv263, 220, !dbg !7662
  br i1 %cmp264, label %if.then271, label %lor.lhs.false266, !dbg !7662

lor.lhs.false266:                                 ; preds = %if.then261
  %159 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7662
  %type267 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %159, i32 0, i32 2, !dbg !7662
  %160 = load i16, i16* %type267, align 8, !dbg !7662
  %conv268 = sext i16 %160 to i32, !dbg !7662
  %cmp269 = icmp eq i32 %conv268, 163, !dbg !7662
  br i1 %cmp269, label %if.then271, label %if.else277, !dbg !7665

if.then271:                                       ; preds = %lor.lhs.false266, %if.then261
  %161 = load i8, i8* %inside_header, align 1, !dbg !7666
  %tobool272 = icmp ne i8 %161, 0, !dbg !7666
  br i1 %tobool272, label %if.then273, label %if.end276, !dbg !7669

if.then273:                                       ; preds = %if.then271
  %162 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7670
  %163 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7672
  %164 = load i32, i32* %mx, align 4, !dbg !7673
  %165 = load i32, i32* %my, align 4, !dbg !7674
  %166 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7675
  %ctrl274 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %166, i32 0, i32 18, !dbg !7676
  %167 = load i16, i16* %ctrl274, align 2, !dbg !7676
  %168 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7677
  %shift275 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %168, i32 0, i32 17, !dbg !7678
  %169 = load i16, i16* %shift275, align 8, !dbg !7678
  call void @ui_handle_panel_header(%struct.bContext* %162, %struct.uiBlock* %163, i32 %164, i32 %165, i32 220, i16 signext %167, i16 signext %169), !dbg !7679
  store i32 1, i32* %retval1, align 4, !dbg !7680
  br label %for.end, !dbg !7681

if.end276:                                        ; preds = %if.then271
  br label %if.end329, !dbg !7682

if.else277:                                       ; preds = %lor.lhs.false266
  %170 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7683
  %type278 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %170, i32 0, i32 2, !dbg !7685
  %171 = load i16, i16* %type278, align 8, !dbg !7685
  %conv279 = sext i16 %171 to i32, !dbg !7683
  %cmp280 = icmp eq i32 %conv279, 1, !dbg !7686
  br i1 %cmp280, label %if.then282, label %if.else298, !dbg !7687

if.then282:                                       ; preds = %if.else277
  store i32 1, i32* %retval1, align 4, !dbg !7688
  %172 = load i8, i8* %inside_header, align 1, !dbg !7690
  %tobool283 = icmp ne i8 %172, 0, !dbg !7690
  br i1 %tobool283, label %if.then284, label %if.else287, !dbg !7692

if.then284:                                       ; preds = %if.then282
  %173 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7693
  %174 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7695
  %175 = load i32, i32* %mx, align 4, !dbg !7696
  %176 = load i32, i32* %my, align 4, !dbg !7697
  %177 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7698
  %ctrl285 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %177, i32 0, i32 18, !dbg !7699
  %178 = load i16, i16* %ctrl285, align 2, !dbg !7699
  %179 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7700
  %shift286 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %179, i32 0, i32 17, !dbg !7701
  %180 = load i16, i16* %shift286, align 8, !dbg !7701
  call void @ui_handle_panel_header(%struct.bContext* %173, %struct.uiBlock* %174, i32 %175, i32 %176, i32 0, i16 signext %178, i16 signext %180), !dbg !7702
  store i32 1, i32* %retval1, align 4, !dbg !7703
  br label %for.end, !dbg !7704

if.else287:                                       ; preds = %if.then282
  %181 = load i8, i8* %inside_scale, align 1, !dbg !7705
  %conv288 = zext i8 %181 to i32, !dbg !7705
  %tobool289 = icmp ne i32 %conv288, 0, !dbg !7705
  br i1 %tobool289, label %land.lhs.true290, label %if.end296, !dbg !7707

land.lhs.true290:                                 ; preds = %if.else287
  %182 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7708
  %flag291 = getelementptr inbounds %struct.Panel, %struct.Panel* %182, i32 0, i32 13, !dbg !7709
  %183 = load i16, i16* %flag291, align 4, !dbg !7709
  %conv292 = sext i16 %183 to i32, !dbg !7708
  %and293 = and i32 %conv292, 6, !dbg !7710
  %tobool294 = icmp ne i32 %and293, 0, !dbg !7710
  br i1 %tobool294, label %if.end296, label %if.then295, !dbg !7711

if.then295:                                       ; preds = %land.lhs.true290
  %184 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7712
  %185 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7714
  call void @panel_activate_state(%struct.bContext* %184, %struct.Panel* %185, i32 1), !dbg !7715
  store i32 1, i32* %retval1, align 4, !dbg !7716
  br label %for.end, !dbg !7717

if.end296:                                        ; preds = %land.lhs.true290, %if.else287
  br label %if.end297

if.end297:                                        ; preds = %if.end296
  br label %if.end328, !dbg !7718

if.else298:                                       ; preds = %if.else277
  %186 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7719
  %type299 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %186, i32 0, i32 2, !dbg !7721
  %187 = load i16, i16* %type299, align 8, !dbg !7721
  %conv300 = sext i16 %187 to i32, !dbg !7719
  %cmp301 = icmp eq i32 %conv300, 3, !dbg !7722
  br i1 %cmp301, label %if.then303, label %if.else308, !dbg !7723

if.then303:                                       ; preds = %if.else298
  %188 = load i8, i8* %inside_header, align 1, !dbg !7724
  %tobool304 = icmp ne i8 %188, 0, !dbg !7724
  br i1 %tobool304, label %if.then305, label %if.end307, !dbg !7727

if.then305:                                       ; preds = %if.then303
  %189 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7728
  %190 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !7730
  %191 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7731
  %panel306 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %191, i32 0, i32 3, !dbg !7732
  %192 = load %struct.Panel*, %struct.Panel** %panel306, align 8, !dbg !7732
  call void @ui_panel_menu(%struct.bContext* %189, %struct.ARegion* %190, %struct.Panel* %192), !dbg !7733
  store i32 1, i32* %retval1, align 4, !dbg !7734
  br label %for.end, !dbg !7735

if.end307:                                        ; preds = %if.then303
  br label %if.end327, !dbg !7736

if.else308:                                       ; preds = %if.else298
  %193 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7737
  %type309 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %193, i32 0, i32 2, !dbg !7739
  %194 = load i16, i16* %type309, align 8, !dbg !7739
  %conv310 = sext i16 %194 to i32, !dbg !7737
  %cmp311 = icmp eq i32 %conv310, 218, !dbg !7740
  br i1 %cmp311, label %if.then313, label %if.else314, !dbg !7741

if.then313:                                       ; preds = %if.else308
  br label %if.end326, !dbg !7742

if.else314:                                       ; preds = %if.else308
  %195 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7744
  %type315 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %195, i32 0, i32 2, !dbg !7746
  %196 = load i16, i16* %type315, align 8, !dbg !7746
  %conv316 = sext i16 %196 to i32, !dbg !7744
  %cmp317 = icmp eq i32 %conv316, 164, !dbg !7747
  br i1 %cmp317, label %if.then324, label %lor.lhs.false319, !dbg !7748

lor.lhs.false319:                                 ; preds = %if.else314
  %197 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7749
  %type320 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %197, i32 0, i32 2, !dbg !7750
  %198 = load i16, i16* %type320, align 8, !dbg !7750
  %conv321 = sext i16 %198 to i32, !dbg !7749
  %cmp322 = icmp eq i32 %conv321, 162, !dbg !7751
  br i1 %cmp322, label %if.then324, label %if.end325, !dbg !7752

if.then324:                                       ; preds = %lor.lhs.false319, %if.else314
  br label %if.end325, !dbg !7753

if.end325:                                        ; preds = %if.then324, %lor.lhs.false319
  br label %if.end326

if.end326:                                        ; preds = %if.end325, %if.then313
  br label %if.end327

if.end327:                                        ; preds = %if.end326, %if.end307
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.end297
  br label %if.end329

if.end329:                                        ; preds = %if.end328, %if.end276
  br label %if.end330, !dbg !7755

if.end330:                                        ; preds = %if.end329, %if.then256
  br label %if.end331, !dbg !7756

if.end331:                                        ; preds = %if.end330, %lor.lhs.false253
  br label %for.inc, !dbg !7757

for.inc:                                          ; preds = %if.end331, %if.then249, %if.end244, %if.then64, %if.then58
  %199 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !7758
  %prev332 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %199, i32 0, i32 1, !dbg !7759
  %200 = load %struct.uiBlock*, %struct.uiBlock** %prev332, align 8, !dbg !7759
  store %struct.uiBlock* %200, %struct.uiBlock** %block, align 8, !dbg !7760
  br label %for.cond, !dbg !7761, !llvm.loop !7762

for.end:                                          ; preds = %if.then305, %if.then295, %if.then284, %if.then273, %for.cond
  %201 = load i32, i32* %retval1, align 4, !dbg !7764
  store i32 %201, i32* %retval, align 4, !dbg !7765
  br label %return, !dbg !7765

return:                                           ; preds = %for.end, %if.then51
  %202 = load i32, i32* %retval, align 4, !dbg !7766
  ret i32 %202, !dbg !7766
}

declare dso_local void @UI_view2d_offset(%struct.View2D*, float, float) #3

declare dso_local void @ui_window_to_block(%struct.ARegion*, %struct.uiBlock*, i32*, i32*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_handle_panel_header(%struct.bContext* %C, %struct.uiBlock* %block, i32 %mx, i32 %my, i32 %event, i16 signext %ctrl, i16 signext %shift) #0 !dbg !7767 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %block.addr = alloca %struct.uiBlock*, align 8
  %mx.addr = alloca i32, align 4
  %my.addr = alloca i32, align 4
  %event.addr = alloca i32, align 4
  %ctrl.addr = alloca i16, align 2
  %shift.addr = alloca i16, align 2
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %pa = alloca %struct.Panel*, align 8
  %show_pin = alloca i8, align 1
  %align = alloca i32, align 4
  %button = alloca i32, align 4
  %rect_drag = alloca %struct.rctf, align 4
  %rect_pin = alloca %struct.rctf, align 4
  %rect_leftmost = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7770, metadata !DIExpression()), !dbg !7771
  store %struct.uiBlock* %block, %struct.uiBlock** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block.addr, metadata !7772, metadata !DIExpression()), !dbg !7773
  store i32 %mx, i32* %mx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mx.addr, metadata !7774, metadata !DIExpression()), !dbg !7775
  store i32 %my, i32* %my.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %my.addr, metadata !7776, metadata !DIExpression()), !dbg !7777
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !7778, metadata !DIExpression()), !dbg !7779
  store i16 %ctrl, i16* %ctrl.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ctrl.addr, metadata !7780, metadata !DIExpression()), !dbg !7781
  store i16 %shift, i16* %shift.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %shift.addr, metadata !7782, metadata !DIExpression()), !dbg !7783
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !7784, metadata !DIExpression()), !dbg !7785
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7786
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !7787
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !7785
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !7788, metadata !DIExpression()), !dbg !7789
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7790
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !7791
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !7789
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !7792, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.declare(metadata i8* %show_pin, metadata !7794, metadata !DIExpression()), !dbg !7795
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7796
  %call2 = call zeroext i8 @UI_panel_category_is_visible(%struct.ARegion* %2), !dbg !7797
  %conv = zext i8 %call2 to i32, !dbg !7797
  %tobool = icmp ne i32 %conv, 0, !dbg !7797
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7798

land.rhs:                                         ; preds = %entry
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7799
  %panel = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %3, i32 0, i32 3, !dbg !7800
  %4 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !7800
  %flag = getelementptr inbounds %struct.Panel, %struct.Panel* %4, i32 0, i32 13, !dbg !7801
  %5 = load i16, i16* %flag, align 4, !dbg !7801
  %conv3 = sext i16 %5 to i32, !dbg !7799
  %and = and i32 %conv3, 32, !dbg !7802
  %tobool4 = icmp ne i32 %and, 0, !dbg !7798
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %tobool4, %land.rhs ], !dbg !7803
  %land.ext = zext i1 %6 to i32, !dbg !7798
  %conv5 = trunc i32 %land.ext to i8, !dbg !7797
  store i8 %conv5, i8* %show_pin, align 1, !dbg !7795
  call void @llvm.dbg.declare(metadata i32* %align, metadata !7804, metadata !DIExpression()), !dbg !7805
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7806
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7807
  %call6 = call i32 @panel_aligned(%struct.ScrArea* %7, %struct.ARegion* %8), !dbg !7808
  store i32 %call6, i32* %align, align 4, !dbg !7805
  call void @llvm.dbg.declare(metadata i32* %button, metadata !7809, metadata !DIExpression()), !dbg !7810
  store i32 0, i32* %button, align 4, !dbg !7810
  call void @llvm.dbg.declare(metadata %struct.rctf* %rect_drag, metadata !7811, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.declare(metadata %struct.rctf* %rect_pin, metadata !7813, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.declare(metadata float* %rect_leftmost, metadata !7815, metadata !DIExpression()), !dbg !7816
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7817
  %rect = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %9, i32 0, i32 11, !dbg !7818
  %10 = bitcast %struct.rctf* %rect_drag to i8*, !dbg !7818
  %11 = bitcast %struct.rctf* %rect to i8*, !dbg !7818
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 8 %11, i64 16, i1 false), !dbg !7818
  %12 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7819
  %rect7 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %12, i32 0, i32 11, !dbg !7820
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect7, i32 0, i32 1, !dbg !7821
  %13 = load float, float* %xmax, align 4, !dbg !7821
  %14 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !7822
  %conv8 = sext i16 %14 to i32, !dbg !7822
  %conv9 = sitofp i32 %conv8 to float, !dbg !7822
  %mul = fmul float %conv9, 1.500000e+00, !dbg !7823
  %sub = fsub float %13, %mul, !dbg !7824
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %rect_drag, i32 0, i32 0, !dbg !7825
  store float %sub, float* %xmin, align 4, !dbg !7826
  %15 = bitcast %struct.rctf* %rect_pin to i8*, !dbg !7827
  %16 = bitcast %struct.rctf* %rect_drag to i8*, !dbg !7827
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 16, i1 false), !dbg !7827
  %17 = load i8, i8* %show_pin, align 1, !dbg !7828
  %tobool10 = icmp ne i8 %17, 0, !dbg !7828
  br i1 %tobool10, label %if.then, label %if.end, !dbg !7830

if.then:                                          ; preds = %land.end
  %18 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !7831
  %conv11 = sext i16 %18 to i32, !dbg !7831
  %sub12 = sub nsw i32 0, %conv11, !dbg !7833
  %conv13 = sitofp i32 %sub12 to float, !dbg !7833
  call void @BLI_rctf_translate(%struct.rctf* %rect_pin, float %conv13, float 0.000000e+00), !dbg !7834
  br label %if.end, !dbg !7835

if.end:                                           ; preds = %if.then, %land.end
  %xmin14 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect_pin, i32 0, i32 0, !dbg !7836
  %19 = load float, float* %xmin14, align 4, !dbg !7836
  store float %19, float* %rect_leftmost, align 4, !dbg !7837
  %20 = load i32, i32* %event.addr, align 4, !dbg !7838
  %cmp = icmp eq i32 %20, 220, !dbg !7840
  br i1 %cmp, label %if.then16, label %if.else, !dbg !7841

if.then16:                                        ; preds = %if.end
  store i32 1, i32* %button, align 4, !dbg !7842
  br label %if.end75, !dbg !7843

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %event.addr, align 4, !dbg !7844
  %cmp17 = icmp eq i32 %21, 97, !dbg !7846
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !7847

if.then19:                                        ; preds = %if.else
  store i32 1, i32* %button, align 4, !dbg !7848
  br label %if.end74, !dbg !7849

if.else20:                                        ; preds = %if.else
  %22 = load i32, i32* %event.addr, align 4, !dbg !7850
  %cmp21 = icmp eq i32 %22, 0, !dbg !7850
  br i1 %cmp21, label %land.lhs.true, label %lor.lhs.false, !dbg !7850

lor.lhs.false:                                    ; preds = %if.else20
  %23 = load i32, i32* %event.addr, align 4, !dbg !7850
  %cmp23 = icmp eq i32 %23, 220, !dbg !7850
  br i1 %cmp23, label %land.lhs.true, label %lor.lhs.false25, !dbg !7850

lor.lhs.false25:                                  ; preds = %lor.lhs.false
  %24 = load i32, i32* %event.addr, align 4, !dbg !7850
  %cmp26 = icmp eq i32 %24, 1, !dbg !7850
  br i1 %cmp26, label %land.lhs.true, label %if.else35, !dbg !7852

land.lhs.true:                                    ; preds = %lor.lhs.false25, %lor.lhs.false, %if.else20
  %25 = load i16, i16* %shift.addr, align 2, !dbg !7853
  %conv28 = sext i16 %25 to i32, !dbg !7853
  %tobool29 = icmp ne i32 %conv28, 0, !dbg !7853
  br i1 %tobool29, label %if.then30, label %if.else35, !dbg !7854

if.then30:                                        ; preds = %land.lhs.true
  %26 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7855
  %panel31 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %26, i32 0, i32 3, !dbg !7857
  %27 = load %struct.Panel*, %struct.Panel** %panel31, align 8, !dbg !7857
  %flag32 = getelementptr inbounds %struct.Panel, %struct.Panel* %27, i32 0, i32 13, !dbg !7858
  %28 = load i16, i16* %flag32, align 4, !dbg !7859
  %conv33 = sext i16 %28 to i32, !dbg !7859
  %xor = xor i32 %conv33, 32, !dbg !7859
  %conv34 = trunc i32 %xor to i16, !dbg !7859
  store i16 %conv34, i16* %flag32, align 4, !dbg !7859
  store i32 2, i32* %button, align 4, !dbg !7860
  br label %if.end73, !dbg !7861

if.else35:                                        ; preds = %land.lhs.true, %lor.lhs.false25
  %29 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7862
  %panel36 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %29, i32 0, i32 3, !dbg !7864
  %30 = load %struct.Panel*, %struct.Panel** %panel36, align 8, !dbg !7864
  %flag37 = getelementptr inbounds %struct.Panel, %struct.Panel* %30, i32 0, i32 13, !dbg !7865
  %31 = load i16, i16* %flag37, align 4, !dbg !7865
  %conv38 = sext i16 %31 to i32, !dbg !7862
  %and39 = and i32 %conv38, 2, !dbg !7866
  %tobool40 = icmp ne i32 %and39, 0, !dbg !7866
  br i1 %tobool40, label %if.then41, label %if.else48, !dbg !7867

if.then41:                                        ; preds = %if.else35
  %32 = load i32, i32* %my.addr, align 4, !dbg !7868
  %conv42 = sitofp i32 %32 to float, !dbg !7868
  %33 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7871
  %rect43 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %33, i32 0, i32 11, !dbg !7872
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %rect43, i32 0, i32 3, !dbg !7873
  %34 = load float, float* %ymax, align 4, !dbg !7873
  %cmp44 = fcmp oge float %conv42, %34, !dbg !7874
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !7875

if.then46:                                        ; preds = %if.then41
  store i32 1, i32* %button, align 4, !dbg !7876
  br label %if.end47, !dbg !7877

if.end47:                                         ; preds = %if.then46, %if.then41
  br label %if.end72, !dbg !7878

if.else48:                                        ; preds = %if.else35
  %35 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7879
  %panel49 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %35, i32 0, i32 3, !dbg !7881
  %36 = load %struct.Panel*, %struct.Panel** %panel49, align 8, !dbg !7881
  %control = getelementptr inbounds %struct.Panel, %struct.Panel* %36, i32 0, i32 15, !dbg !7882
  %37 = load i16, i16* %control, align 8, !dbg !7882
  %conv50 = sext i16 %37 to i32, !dbg !7879
  %and51 = and i32 %conv50, 32, !dbg !7883
  %tobool52 = icmp ne i32 %and51, 0, !dbg !7883
  br i1 %tobool52, label %if.then53, label %if.else65, !dbg !7884

if.then53:                                        ; preds = %if.else48
  %38 = load i32, i32* %mx.addr, align 4, !dbg !7885
  %conv54 = sitofp i32 %38 to float, !dbg !7885
  %39 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7888
  %rect55 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %39, i32 0, i32 11, !dbg !7889
  %xmax56 = getelementptr inbounds %struct.rctf, %struct.rctf* %rect55, i32 0, i32 1, !dbg !7890
  %40 = load float, float* %xmax56, align 4, !dbg !7890
  %sub57 = fsub float %40, 8.000000e+00, !dbg !7891
  %41 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !7892
  %conv58 = sext i16 %41 to i32, !dbg !7892
  %conv59 = sitofp i32 %conv58 to float, !dbg !7892
  %sub60 = fsub float %sub57, %conv59, !dbg !7893
  %cmp61 = fcmp ole float %conv54, %sub60, !dbg !7894
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !7895

if.then63:                                        ; preds = %if.then53
  store i32 2, i32* %button, align 4, !dbg !7896
  br label %if.end64, !dbg !7897

if.end64:                                         ; preds = %if.then63, %if.then53
  br label %if.end71, !dbg !7898

if.else65:                                        ; preds = %if.else48
  %42 = load i32, i32* %mx.addr, align 4, !dbg !7899
  %conv66 = sitofp i32 %42 to float, !dbg !7899
  %43 = load float, float* %rect_leftmost, align 4, !dbg !7901
  %cmp67 = fcmp olt float %conv66, %43, !dbg !7902
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !7903

if.then69:                                        ; preds = %if.else65
  store i32 1, i32* %button, align 4, !dbg !7904
  br label %if.end70, !dbg !7906

if.end70:                                         ; preds = %if.then69, %if.else65
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.end64
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.end47
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then30
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then19
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then16
  %44 = load i32, i32* %button, align 4, !dbg !7907
  %tobool76 = icmp ne i32 %44, 0, !dbg !7907
  br i1 %tobool76, label %if.then77, label %if.else159, !dbg !7909

if.then77:                                        ; preds = %if.end75
  %45 = load i32, i32* %button, align 4, !dbg !7910
  %cmp78 = icmp eq i32 %45, 2, !dbg !7913
  br i1 %cmp78, label %if.then80, label %if.else81, !dbg !7914

if.then80:                                        ; preds = %if.then77
  %46 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7915
  call void @ED_region_tag_redraw(%struct.ARegion* %46), !dbg !7917
  br label %if.end153, !dbg !7918

if.else81:                                        ; preds = %if.then77
  %47 = load i16, i16* %ctrl.addr, align 2, !dbg !7919
  %tobool82 = icmp ne i16 %47, 0, !dbg !7919
  br i1 %tobool82, label %if.then83, label %if.end85, !dbg !7922

if.then83:                                        ; preds = %if.else81
  %48 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7923
  %49 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7924
  %50 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7925
  %panel84 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %50, i32 0, i32 3, !dbg !7926
  %51 = load %struct.Panel*, %struct.Panel** %panel84, align 8, !dbg !7926
  call void @panels_collapse_all(%struct.ScrArea* %48, %struct.ARegion* %49, %struct.Panel* %51), !dbg !7927
  br label %if.end85, !dbg !7927

if.end85:                                         ; preds = %if.then83, %if.else81
  %52 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7928
  %panel86 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %52, i32 0, i32 3, !dbg !7930
  %53 = load %struct.Panel*, %struct.Panel** %panel86, align 8, !dbg !7930
  %flag87 = getelementptr inbounds %struct.Panel, %struct.Panel* %53, i32 0, i32 13, !dbg !7931
  %54 = load i16, i16* %flag87, align 4, !dbg !7931
  %conv88 = sext i16 %54 to i32, !dbg !7928
  %and89 = and i32 %conv88, 6, !dbg !7932
  %tobool90 = icmp ne i32 %and89, 0, !dbg !7932
  br i1 %tobool90, label %if.then91, label %if.else104, !dbg !7933

if.then91:                                        ; preds = %if.end85
  %55 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7934
  %panel92 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %55, i32 0, i32 3, !dbg !7936
  %56 = load %struct.Panel*, %struct.Panel** %panel92, align 8, !dbg !7936
  %flag93 = getelementptr inbounds %struct.Panel, %struct.Panel* %56, i32 0, i32 13, !dbg !7937
  %57 = load i16, i16* %flag93, align 4, !dbg !7938
  %conv94 = sext i16 %57 to i32, !dbg !7938
  %and95 = and i32 %conv94, -7, !dbg !7938
  %conv96 = trunc i32 %and95 to i16, !dbg !7938
  store i16 %conv96, i16* %flag93, align 4, !dbg !7938
  %58 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7939
  %panel97 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %58, i32 0, i32 3, !dbg !7941
  %59 = load %struct.Panel*, %struct.Panel** %panel97, align 8, !dbg !7941
  %snap = getelementptr inbounds %struct.Panel, %struct.Panel* %59, i32 0, i32 16, !dbg !7942
  %60 = load i16, i16* %snap, align 2, !dbg !7942
  %conv98 = sext i16 %60 to i32, !dbg !7939
  %and99 = and i32 %conv98, 4, !dbg !7943
  %tobool100 = icmp ne i32 %and99, 0, !dbg !7943
  br i1 %tobool100, label %if.then101, label %if.end103, !dbg !7944

if.then101:                                       ; preds = %if.then91
  %61 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7945
  %panel102 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %61, i32 0, i32 3, !dbg !7946
  %62 = load %struct.Panel*, %struct.Panel** %panel102, align 8, !dbg !7946
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %62, i32 0, i32 8, !dbg !7947
  store i32 0, i32* %ofsy, align 4, !dbg !7948
  br label %if.end103, !dbg !7945

if.end103:                                        ; preds = %if.then101, %if.then91
  br label %if.end130, !dbg !7949

if.else104:                                       ; preds = %if.end85
  %63 = load i32, i32* %align, align 4, !dbg !7950
  %cmp105 = icmp eq i32 %63, 1, !dbg !7952
  br i1 %cmp105, label %if.then107, label %if.else112, !dbg !7953

if.then107:                                       ; preds = %if.else104
  %64 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7954
  %panel108 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %64, i32 0, i32 3, !dbg !7956
  %65 = load %struct.Panel*, %struct.Panel** %panel108, align 8, !dbg !7956
  %flag109 = getelementptr inbounds %struct.Panel, %struct.Panel* %65, i32 0, i32 13, !dbg !7957
  %66 = load i16, i16* %flag109, align 4, !dbg !7958
  %conv110 = sext i16 %66 to i32, !dbg !7958
  %or = or i32 %conv110, 2, !dbg !7958
  %conv111 = trunc i32 %or to i16, !dbg !7958
  store i16 %conv111, i16* %flag109, align 4, !dbg !7958
  br label %if.end129, !dbg !7959

if.else112:                                       ; preds = %if.else104
  %67 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7960
  %panel113 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %67, i32 0, i32 3, !dbg !7962
  %68 = load %struct.Panel*, %struct.Panel** %panel113, align 8, !dbg !7962
  %flag114 = getelementptr inbounds %struct.Panel, %struct.Panel* %68, i32 0, i32 13, !dbg !7963
  %69 = load i16, i16* %flag114, align 4, !dbg !7964
  %conv115 = sext i16 %69 to i32, !dbg !7964
  %or116 = or i32 %conv115, 4, !dbg !7964
  %conv117 = trunc i32 %or116 to i16, !dbg !7964
  store i16 %conv117, i16* %flag114, align 4, !dbg !7964
  %70 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7965
  %panel118 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %70, i32 0, i32 3, !dbg !7967
  %71 = load %struct.Panel*, %struct.Panel** %panel118, align 8, !dbg !7967
  %snap119 = getelementptr inbounds %struct.Panel, %struct.Panel* %71, i32 0, i32 16, !dbg !7968
  %72 = load i16, i16* %snap119, align 2, !dbg !7968
  %conv120 = sext i16 %72 to i32, !dbg !7965
  %and121 = and i32 %conv120, 4, !dbg !7969
  %tobool122 = icmp ne i32 %and121, 0, !dbg !7969
  br i1 %tobool122, label %if.then123, label %if.end128, !dbg !7970

if.then123:                                       ; preds = %if.else112
  %73 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7971
  %panel124 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %73, i32 0, i32 3, !dbg !7972
  %74 = load %struct.Panel*, %struct.Panel** %panel124, align 8, !dbg !7972
  %sizey = getelementptr inbounds %struct.Panel, %struct.Panel* %74, i32 0, i32 10, !dbg !7973
  %75 = load i32, i32* %sizey, align 4, !dbg !7973
  %sub125 = sub nsw i32 0, %75, !dbg !7974
  %76 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7975
  %panel126 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %76, i32 0, i32 3, !dbg !7976
  %77 = load %struct.Panel*, %struct.Panel** %panel126, align 8, !dbg !7976
  %ofsy127 = getelementptr inbounds %struct.Panel, %struct.Panel* %77, i32 0, i32 8, !dbg !7977
  store i32 %sub125, i32* %ofsy127, align 4, !dbg !7978
  br label %if.end128, !dbg !7975

if.end128:                                        ; preds = %if.then123, %if.else112
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.then107
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end103
  %78 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7979
  %panels = getelementptr inbounds %struct.ARegion, %struct.ARegion* %78, i32 0, i32 22, !dbg !7981
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels, i32 0, i32 0, !dbg !7982
  %79 = load i8*, i8** %first, align 8, !dbg !7982
  %80 = bitcast i8* %79 to %struct.Panel*, !dbg !7979
  store %struct.Panel* %80, %struct.Panel** %pa, align 8, !dbg !7983
  br label %for.cond, !dbg !7984

for.cond:                                         ; preds = %for.inc, %if.end130
  %81 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7985
  %tobool131 = icmp ne %struct.Panel* %81, null, !dbg !7987
  br i1 %tobool131, label %for.body, label %for.end, !dbg !7987

for.body:                                         ; preds = %for.cond
  %82 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !7988
  %paneltab = getelementptr inbounds %struct.Panel, %struct.Panel* %82, i32 0, i32 18, !dbg !7991
  %83 = load %struct.Panel*, %struct.Panel** %paneltab, align 8, !dbg !7991
  %84 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7992
  %panel132 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %84, i32 0, i32 3, !dbg !7993
  %85 = load %struct.Panel*, %struct.Panel** %panel132, align 8, !dbg !7993
  %cmp133 = icmp eq %struct.Panel* %83, %85, !dbg !7994
  br i1 %cmp133, label %if.then135, label %if.end152, !dbg !7995

if.then135:                                       ; preds = %for.body
  %86 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !7996
  %panel136 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %86, i32 0, i32 3, !dbg !7999
  %87 = load %struct.Panel*, %struct.Panel** %panel136, align 8, !dbg !7999
  %flag137 = getelementptr inbounds %struct.Panel, %struct.Panel* %87, i32 0, i32 13, !dbg !8000
  %88 = load i16, i16* %flag137, align 4, !dbg !8000
  %conv138 = sext i16 %88 to i32, !dbg !7996
  %and139 = and i32 %conv138, 6, !dbg !8001
  %tobool140 = icmp ne i32 %and139, 0, !dbg !8001
  br i1 %tobool140, label %if.then141, label %if.else146, !dbg !8002

if.then141:                                       ; preds = %if.then135
  %89 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8003
  %flag142 = getelementptr inbounds %struct.Panel, %struct.Panel* %89, i32 0, i32 13, !dbg !8004
  %90 = load i16, i16* %flag142, align 4, !dbg !8005
  %conv143 = sext i16 %90 to i32, !dbg !8005
  %or144 = or i32 %conv143, 6, !dbg !8005
  %conv145 = trunc i32 %or144 to i16, !dbg !8005
  store i16 %conv145, i16* %flag142, align 4, !dbg !8005
  br label %if.end151, !dbg !8003

if.else146:                                       ; preds = %if.then135
  %91 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8006
  %flag147 = getelementptr inbounds %struct.Panel, %struct.Panel* %91, i32 0, i32 13, !dbg !8007
  %92 = load i16, i16* %flag147, align 4, !dbg !8008
  %conv148 = sext i16 %92 to i32, !dbg !8008
  %and149 = and i32 %conv148, -7, !dbg !8008
  %conv150 = trunc i32 %and149 to i16, !dbg !8008
  store i16 %conv150, i16* %flag147, align 4, !dbg !8008
  br label %if.end151

if.end151:                                        ; preds = %if.else146, %if.then141
  br label %if.end152, !dbg !8009

if.end152:                                        ; preds = %if.end151, %for.body
  br label %for.inc, !dbg !8010

for.inc:                                          ; preds = %if.end152
  %93 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8011
  %next = getelementptr inbounds %struct.Panel, %struct.Panel* %93, i32 0, i32 0, !dbg !8012
  %94 = load %struct.Panel*, %struct.Panel** %next, align 8, !dbg !8012
  store %struct.Panel* %94, %struct.Panel** %pa, align 8, !dbg !8013
  br label %for.cond, !dbg !8014, !llvm.loop !8015

for.end:                                          ; preds = %for.cond
  br label %if.end153

if.end153:                                        ; preds = %for.end, %if.then80
  %95 = load i32, i32* %align, align 4, !dbg !8017
  %tobool154 = icmp ne i32 %95, 0, !dbg !8017
  br i1 %tobool154, label %if.then155, label %if.else157, !dbg !8019

if.then155:                                       ; preds = %if.end153
  %96 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8020
  %97 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8021
  %panel156 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %97, i32 0, i32 3, !dbg !8022
  %98 = load %struct.Panel*, %struct.Panel** %panel156, align 8, !dbg !8022
  call void @panel_activate_state(%struct.bContext* %96, %struct.Panel* %98, i32 3), !dbg !8023
  br label %if.end158, !dbg !8023

if.else157:                                       ; preds = %if.end153
  %99 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8024
  call void @ED_region_tag_redraw(%struct.ARegion* %99), !dbg !8025
  br label %if.end158

if.end158:                                        ; preds = %if.else157, %if.then155
  br label %if.end181, !dbg !8026

if.else159:                                       ; preds = %if.end75
  %100 = load i32, i32* %mx.addr, align 4, !dbg !8027
  %conv160 = sitofp i32 %100 to float, !dbg !8027
  %call161 = call zeroext i8 @BLI_rctf_isect_x(%struct.rctf* %rect_drag, float %conv160), !dbg !8029
  %tobool162 = icmp ne i8 %call161, 0, !dbg !8029
  br i1 %tobool162, label %if.then163, label %if.else165, !dbg !8030

if.then163:                                       ; preds = %if.else159
  %101 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8031
  %102 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8033
  %panel164 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %102, i32 0, i32 3, !dbg !8034
  %103 = load %struct.Panel*, %struct.Panel** %panel164, align 8, !dbg !8034
  call void @panel_activate_state(%struct.bContext* %101, %struct.Panel* %103, i32 0), !dbg !8035
  br label %if.end180, !dbg !8036

if.else165:                                       ; preds = %if.else159
  %104 = load i8, i8* %show_pin, align 1, !dbg !8037
  %conv166 = zext i8 %104 to i32, !dbg !8037
  %tobool167 = icmp ne i32 %conv166, 0, !dbg !8037
  br i1 %tobool167, label %land.lhs.true168, label %if.end179, !dbg !8039

land.lhs.true168:                                 ; preds = %if.else165
  %105 = load i32, i32* %mx.addr, align 4, !dbg !8040
  %conv169 = sitofp i32 %105 to float, !dbg !8040
  %call170 = call zeroext i8 @BLI_rctf_isect_x(%struct.rctf* %rect_pin, float %conv169), !dbg !8041
  %conv171 = zext i8 %call170 to i32, !dbg !8041
  %tobool172 = icmp ne i32 %conv171, 0, !dbg !8041
  br i1 %tobool172, label %if.then173, label %if.end179, !dbg !8042

if.then173:                                       ; preds = %land.lhs.true168
  %106 = load %struct.uiBlock*, %struct.uiBlock** %block.addr, align 8, !dbg !8043
  %panel174 = getelementptr inbounds %struct.uiBlock, %struct.uiBlock* %106, i32 0, i32 3, !dbg !8045
  %107 = load %struct.Panel*, %struct.Panel** %panel174, align 8, !dbg !8045
  %flag175 = getelementptr inbounds %struct.Panel, %struct.Panel* %107, i32 0, i32 13, !dbg !8046
  %108 = load i16, i16* %flag175, align 4, !dbg !8047
  %conv176 = sext i16 %108 to i32, !dbg !8047
  %xor177 = xor i32 %conv176, 32, !dbg !8047
  %conv178 = trunc i32 %xor177 to i16, !dbg !8047
  store i16 %conv178, i16* %flag175, align 4, !dbg !8047
  %109 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8048
  call void @ED_region_tag_redraw(%struct.ARegion* %109), !dbg !8049
  br label %if.end179, !dbg !8050

if.end179:                                        ; preds = %if.then173, %land.lhs.true168, %if.else165
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.then163
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.end158
  ret void, !dbg !8051
}

declare dso_local zeroext i8 @ui_button_is_active(%struct.ARegion*) #3

declare dso_local void @ui_panel_menu(%struct.bContext*, %struct.ARegion*, %struct.Panel*) #3

declare dso_local void @uiStyleFontDraw(%struct.uiFontStyle*, %struct.rcti*, i8*) #3

declare dso_local void @uiStyleFontDrawRotated(%struct.uiFontStyle*, %struct.rcti*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_y(%struct.rctf* %rct) #0 !dbg !8052 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !8057, metadata !DIExpression()), !dbg !8058
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !8059
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 3, !dbg !8060
  %1 = load float, float* %ymax, align 4, !dbg !8060
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !8061
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 2, !dbg !8062
  %3 = load float, float* %ymin, align 4, !dbg !8062
  %sub = fsub float %1, %3, !dbg !8063
  ret float %sub, !dbg !8064
}

declare dso_local void @UI_GetColorPtrShade3ubv(i8*, i8*, i32) #3

declare dso_local void @glColor4ub(i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_draw_anti_x(float %x1, float %y1, float %x2, float %y2) #0 !dbg !8065 {
entry:
  %x1.addr = alloca float, align 4
  %y1.addr = alloca float, align 4
  %x2.addr = alloca float, align 4
  %y2.addr = alloca float, align 4
  store float %x1, float* %x1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x1.addr, metadata !8068, metadata !DIExpression()), !dbg !8069
  store float %y1, float* %y1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y1.addr, metadata !8070, metadata !DIExpression()), !dbg !8071
  store float %x2, float* %x2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x2.addr, metadata !8072, metadata !DIExpression()), !dbg !8073
  store float %y2, float* %y2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %y2.addr, metadata !8074, metadata !DIExpression()), !dbg !8075
  call void @glEnable(i32 2848), !dbg !8076
  call void @glEnable(i32 3042), !dbg !8077
  %0 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8078
  call void @glLineWidth(float 2.000000e+00), !dbg !8078
  %1 = load float, float* %x1.addr, align 4, !dbg !8079
  %2 = load float, float* %y1.addr, align 4, !dbg !8080
  %3 = load float, float* %x2.addr, align 4, !dbg !8081
  %4 = load float, float* %y2.addr, align 4, !dbg !8082
  call void @fdrawline(float %1, float %2, float %3, float %4), !dbg !8083
  %5 = load float, float* %x1.addr, align 4, !dbg !8084
  %6 = load float, float* %y2.addr, align 4, !dbg !8085
  %7 = load float, float* %x2.addr, align 4, !dbg !8086
  %8 = load float, float* %y1.addr, align 4, !dbg !8087
  call void @fdrawline(float %5, float %6, float %7, float %8), !dbg !8088
  %9 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !8089
  call void @glLineWidth(float 1.000000e+00), !dbg !8089
  call void @glDisable(i32 2848), !dbg !8090
  call void @glDisable(i32 3042), !dbg !8091
  ret void, !dbg !8092
}

declare dso_local void @glLineWidth(float) #3

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_x(%struct.rctf* %rct) #0 !dbg !8093 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !8094, metadata !DIExpression()), !dbg !8095
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !8096
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 1, !dbg !8097
  %1 = load float, float* %xmax, align 4, !dbg !8097
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !8098
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 0, !dbg !8099
  %3 = load float, float* %xmin, align 4, !dbg !8099
  %sub = fsub float %1, %3, !dbg !8100
  ret float %sub, !dbg !8101
}

declare dso_local %struct.uiStyle* @UI_GetStyleDraw() #3

declare dso_local void @ui_bounds_block(%struct.uiBlock*) #3

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @find_highest_panel(i8* %a1, i8* %a2) #0 !dbg !8102 {
entry:
  %retval = alloca i32, align 4
  %a1.addr = alloca i8*, align 8
  %a2.addr = alloca i8*, align 8
  %ps1 = alloca %struct.PanelSort*, align 8
  %ps2 = alloca %struct.PanelSort*, align 8
  store i8* %a1, i8** %a1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a1.addr, metadata !8107, metadata !DIExpression()), !dbg !8108
  store i8* %a2, i8** %a2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a2.addr, metadata !8109, metadata !DIExpression()), !dbg !8110
  call void @llvm.dbg.declare(metadata %struct.PanelSort** %ps1, metadata !8111, metadata !DIExpression()), !dbg !8114
  %0 = load i8*, i8** %a1.addr, align 8, !dbg !8115
  %1 = bitcast i8* %0 to %struct.PanelSort*, !dbg !8115
  store %struct.PanelSort* %1, %struct.PanelSort** %ps1, align 8, !dbg !8114
  call void @llvm.dbg.declare(metadata %struct.PanelSort** %ps2, metadata !8116, metadata !DIExpression()), !dbg !8117
  %2 = load i8*, i8** %a2.addr, align 8, !dbg !8118
  %3 = bitcast i8* %2 to %struct.PanelSort*, !dbg !8118
  store %struct.PanelSort* %3, %struct.PanelSort** %ps2, align 8, !dbg !8117
  %4 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8119
  %pa = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %4, i32 0, i32 0, !dbg !8121
  %5 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8121
  %sortorder = getelementptr inbounds %struct.Panel, %struct.Panel* %5, i32 0, i32 17, !dbg !8122
  %6 = load i32, i32* %sortorder, align 4, !dbg !8122
  %7 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8123
  %pa1 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %7, i32 0, i32 0, !dbg !8124
  %8 = load %struct.Panel*, %struct.Panel** %pa1, align 8, !dbg !8124
  %sortorder2 = getelementptr inbounds %struct.Panel, %struct.Panel* %8, i32 0, i32 17, !dbg !8125
  %9 = load i32, i32* %sortorder2, align 4, !dbg !8125
  %cmp = icmp slt i32 %6, %9, !dbg !8126
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8127

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8128
  %pa3 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %10, i32 0, i32 0, !dbg !8129
  %11 = load %struct.Panel*, %struct.Panel** %pa3, align 8, !dbg !8129
  %type = getelementptr inbounds %struct.Panel, %struct.Panel* %11, i32 0, i32 2, !dbg !8130
  %12 = load %struct.PanelType*, %struct.PanelType** %type, align 8, !dbg !8130
  %flag = getelementptr inbounds %struct.PanelType, %struct.PanelType* %12, i32 0, i32 9, !dbg !8131
  %13 = load i32, i32* %flag, align 8, !dbg !8131
  %and = and i32 %13, 2, !dbg !8132
  %tobool = icmp ne i32 %and, 0, !dbg !8132
  br i1 %tobool, label %if.then, label %if.end, !dbg !8133

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !8134
  br label %return, !dbg !8134

if.end:                                           ; preds = %land.lhs.true, %entry
  %14 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8135
  %pa4 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %14, i32 0, i32 0, !dbg !8137
  %15 = load %struct.Panel*, %struct.Panel** %pa4, align 8, !dbg !8137
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %15, i32 0, i32 8, !dbg !8138
  %16 = load i32, i32* %ofsy, align 4, !dbg !8138
  %17 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8139
  %pa5 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %17, i32 0, i32 0, !dbg !8140
  %18 = load %struct.Panel*, %struct.Panel** %pa5, align 8, !dbg !8140
  %sizey = getelementptr inbounds %struct.Panel, %struct.Panel* %18, i32 0, i32 10, !dbg !8141
  %19 = load i32, i32* %sizey, align 4, !dbg !8141
  %add = add nsw i32 %16, %19, !dbg !8142
  %20 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8143
  %pa6 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %20, i32 0, i32 0, !dbg !8144
  %21 = load %struct.Panel*, %struct.Panel** %pa6, align 8, !dbg !8144
  %ofsy7 = getelementptr inbounds %struct.Panel, %struct.Panel* %21, i32 0, i32 8, !dbg !8145
  %22 = load i32, i32* %ofsy7, align 4, !dbg !8145
  %23 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8146
  %pa8 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %23, i32 0, i32 0, !dbg !8147
  %24 = load %struct.Panel*, %struct.Panel** %pa8, align 8, !dbg !8147
  %sizey9 = getelementptr inbounds %struct.Panel, %struct.Panel* %24, i32 0, i32 10, !dbg !8148
  %25 = load i32, i32* %sizey9, align 4, !dbg !8148
  %add10 = add nsw i32 %22, %25, !dbg !8149
  %cmp11 = icmp slt i32 %add, %add10, !dbg !8150
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !8151

if.then12:                                        ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !8152
  br label %return, !dbg !8152

if.else:                                          ; preds = %if.end
  %26 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8153
  %pa13 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %26, i32 0, i32 0, !dbg !8155
  %27 = load %struct.Panel*, %struct.Panel** %pa13, align 8, !dbg !8155
  %ofsy14 = getelementptr inbounds %struct.Panel, %struct.Panel* %27, i32 0, i32 8, !dbg !8156
  %28 = load i32, i32* %ofsy14, align 4, !dbg !8156
  %29 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8157
  %pa15 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %29, i32 0, i32 0, !dbg !8158
  %30 = load %struct.Panel*, %struct.Panel** %pa15, align 8, !dbg !8158
  %sizey16 = getelementptr inbounds %struct.Panel, %struct.Panel* %30, i32 0, i32 10, !dbg !8159
  %31 = load i32, i32* %sizey16, align 4, !dbg !8159
  %add17 = add nsw i32 %28, %31, !dbg !8160
  %32 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8161
  %pa18 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %32, i32 0, i32 0, !dbg !8162
  %33 = load %struct.Panel*, %struct.Panel** %pa18, align 8, !dbg !8162
  %ofsy19 = getelementptr inbounds %struct.Panel, %struct.Panel* %33, i32 0, i32 8, !dbg !8163
  %34 = load i32, i32* %ofsy19, align 4, !dbg !8163
  %35 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8164
  %pa20 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %35, i32 0, i32 0, !dbg !8165
  %36 = load %struct.Panel*, %struct.Panel** %pa20, align 8, !dbg !8165
  %sizey21 = getelementptr inbounds %struct.Panel, %struct.Panel* %36, i32 0, i32 10, !dbg !8166
  %37 = load i32, i32* %sizey21, align 4, !dbg !8166
  %add22 = add nsw i32 %34, %37, !dbg !8167
  %cmp23 = icmp sgt i32 %add17, %add22, !dbg !8168
  br i1 %cmp23, label %if.then24, label %if.else25, !dbg !8169

if.then24:                                        ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !8170
  br label %return, !dbg !8170

if.else25:                                        ; preds = %if.else
  %38 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8171
  %pa26 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %38, i32 0, i32 0, !dbg !8173
  %39 = load %struct.Panel*, %struct.Panel** %pa26, align 8, !dbg !8173
  %sortorder27 = getelementptr inbounds %struct.Panel, %struct.Panel* %39, i32 0, i32 17, !dbg !8174
  %40 = load i32, i32* %sortorder27, align 4, !dbg !8174
  %41 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8175
  %pa28 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %41, i32 0, i32 0, !dbg !8176
  %42 = load %struct.Panel*, %struct.Panel** %pa28, align 8, !dbg !8176
  %sortorder29 = getelementptr inbounds %struct.Panel, %struct.Panel* %42, i32 0, i32 17, !dbg !8177
  %43 = load i32, i32* %sortorder29, align 4, !dbg !8177
  %cmp30 = icmp sgt i32 %40, %43, !dbg !8178
  br i1 %cmp30, label %if.then31, label %if.else32, !dbg !8179

if.then31:                                        ; preds = %if.else25
  store i32 1, i32* %retval, align 4, !dbg !8180
  br label %return, !dbg !8180

if.else32:                                        ; preds = %if.else25
  %44 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8181
  %pa33 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %44, i32 0, i32 0, !dbg !8183
  %45 = load %struct.Panel*, %struct.Panel** %pa33, align 8, !dbg !8183
  %sortorder34 = getelementptr inbounds %struct.Panel, %struct.Panel* %45, i32 0, i32 17, !dbg !8184
  %46 = load i32, i32* %sortorder34, align 4, !dbg !8184
  %47 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8185
  %pa35 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %47, i32 0, i32 0, !dbg !8186
  %48 = load %struct.Panel*, %struct.Panel** %pa35, align 8, !dbg !8186
  %sortorder36 = getelementptr inbounds %struct.Panel, %struct.Panel* %48, i32 0, i32 17, !dbg !8187
  %49 = load i32, i32* %sortorder36, align 4, !dbg !8187
  %cmp37 = icmp slt i32 %46, %49, !dbg !8188
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !8189

if.then38:                                        ; preds = %if.else32
  store i32 -1, i32* %retval, align 4, !dbg !8190
  br label %return, !dbg !8190

if.end39:                                         ; preds = %if.else32
  br label %if.end40

if.end40:                                         ; preds = %if.end39
  br label %if.end41

if.end41:                                         ; preds = %if.end40
  br label %if.end42

if.end42:                                         ; preds = %if.end41
  store i32 0, i32* %retval, align 4, !dbg !8191
  br label %return, !dbg !8191

return:                                           ; preds = %if.end42, %if.then38, %if.then31, %if.then24, %if.then12, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !8192
  ret i32 %50, !dbg !8192
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @find_leftmost_panel(i8* %a1, i8* %a2) #0 !dbg !8193 {
entry:
  %retval = alloca i32, align 4
  %a1.addr = alloca i8*, align 8
  %a2.addr = alloca i8*, align 8
  %ps1 = alloca %struct.PanelSort*, align 8
  %ps2 = alloca %struct.PanelSort*, align 8
  store i8* %a1, i8** %a1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a1.addr, metadata !8194, metadata !DIExpression()), !dbg !8195
  store i8* %a2, i8** %a2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a2.addr, metadata !8196, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.declare(metadata %struct.PanelSort** %ps1, metadata !8198, metadata !DIExpression()), !dbg !8199
  %0 = load i8*, i8** %a1.addr, align 8, !dbg !8200
  %1 = bitcast i8* %0 to %struct.PanelSort*, !dbg !8200
  store %struct.PanelSort* %1, %struct.PanelSort** %ps1, align 8, !dbg !8199
  call void @llvm.dbg.declare(metadata %struct.PanelSort** %ps2, metadata !8201, metadata !DIExpression()), !dbg !8202
  %2 = load i8*, i8** %a2.addr, align 8, !dbg !8203
  %3 = bitcast i8* %2 to %struct.PanelSort*, !dbg !8203
  store %struct.PanelSort* %3, %struct.PanelSort** %ps2, align 8, !dbg !8202
  %4 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8204
  %pa = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %4, i32 0, i32 0, !dbg !8206
  %5 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8206
  %ofsx = getelementptr inbounds %struct.Panel, %struct.Panel* %5, i32 0, i32 7, !dbg !8207
  %6 = load i32, i32* %ofsx, align 8, !dbg !8207
  %7 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8208
  %pa1 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %7, i32 0, i32 0, !dbg !8209
  %8 = load %struct.Panel*, %struct.Panel** %pa1, align 8, !dbg !8209
  %ofsx2 = getelementptr inbounds %struct.Panel, %struct.Panel* %8, i32 0, i32 7, !dbg !8210
  %9 = load i32, i32* %ofsx2, align 8, !dbg !8210
  %cmp = icmp sgt i32 %6, %9, !dbg !8211
  br i1 %cmp, label %if.then, label %if.else, !dbg !8212

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8213
  br label %return, !dbg !8213

if.else:                                          ; preds = %entry
  %10 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8214
  %pa3 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %10, i32 0, i32 0, !dbg !8216
  %11 = load %struct.Panel*, %struct.Panel** %pa3, align 8, !dbg !8216
  %ofsx4 = getelementptr inbounds %struct.Panel, %struct.Panel* %11, i32 0, i32 7, !dbg !8217
  %12 = load i32, i32* %ofsx4, align 8, !dbg !8217
  %13 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8218
  %pa5 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %13, i32 0, i32 0, !dbg !8219
  %14 = load %struct.Panel*, %struct.Panel** %pa5, align 8, !dbg !8219
  %ofsx6 = getelementptr inbounds %struct.Panel, %struct.Panel* %14, i32 0, i32 7, !dbg !8220
  %15 = load i32, i32* %ofsx6, align 8, !dbg !8220
  %cmp7 = icmp slt i32 %12, %15, !dbg !8221
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !8222

if.then8:                                         ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !8223
  br label %return, !dbg !8223

if.else9:                                         ; preds = %if.else
  %16 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8224
  %pa10 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %16, i32 0, i32 0, !dbg !8226
  %17 = load %struct.Panel*, %struct.Panel** %pa10, align 8, !dbg !8226
  %sortorder = getelementptr inbounds %struct.Panel, %struct.Panel* %17, i32 0, i32 17, !dbg !8227
  %18 = load i32, i32* %sortorder, align 4, !dbg !8227
  %19 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8228
  %pa11 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %19, i32 0, i32 0, !dbg !8229
  %20 = load %struct.Panel*, %struct.Panel** %pa11, align 8, !dbg !8229
  %sortorder12 = getelementptr inbounds %struct.Panel, %struct.Panel* %20, i32 0, i32 17, !dbg !8230
  %21 = load i32, i32* %sortorder12, align 4, !dbg !8230
  %cmp13 = icmp sgt i32 %18, %21, !dbg !8231
  br i1 %cmp13, label %if.then14, label %if.else15, !dbg !8232

if.then14:                                        ; preds = %if.else9
  store i32 1, i32* %retval, align 4, !dbg !8233
  br label %return, !dbg !8233

if.else15:                                        ; preds = %if.else9
  %22 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8234
  %pa16 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %22, i32 0, i32 0, !dbg !8236
  %23 = load %struct.Panel*, %struct.Panel** %pa16, align 8, !dbg !8236
  %sortorder17 = getelementptr inbounds %struct.Panel, %struct.Panel* %23, i32 0, i32 17, !dbg !8237
  %24 = load i32, i32* %sortorder17, align 4, !dbg !8237
  %25 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8238
  %pa18 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %25, i32 0, i32 0, !dbg !8239
  %26 = load %struct.Panel*, %struct.Panel** %pa18, align 8, !dbg !8239
  %sortorder19 = getelementptr inbounds %struct.Panel, %struct.Panel* %26, i32 0, i32 17, !dbg !8240
  %27 = load i32, i32* %sortorder19, align 4, !dbg !8240
  %cmp20 = icmp slt i32 %24, %27, !dbg !8241
  br i1 %cmp20, label %if.then21, label %if.end, !dbg !8242

if.then21:                                        ; preds = %if.else15
  store i32 -1, i32* %retval, align 4, !dbg !8243
  br label %return, !dbg !8243

if.end:                                           ; preds = %if.else15
  br label %if.end22

if.end22:                                         ; preds = %if.end
  br label %if.end23

if.end23:                                         ; preds = %if.end22
  br label %if.end24

if.end24:                                         ; preds = %if.end23
  store i32 0, i32* %retval, align 4, !dbg !8244
  br label %return, !dbg !8244

return:                                           ; preds = %if.end24, %if.then21, %if.then14, %if.then8, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !8245
  ret i32 %28, !dbg !8245
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @compare_panel(i8* %a1, i8* %a2) #0 !dbg !8246 {
entry:
  %retval = alloca i32, align 4
  %a1.addr = alloca i8*, align 8
  %a2.addr = alloca i8*, align 8
  %ps1 = alloca %struct.PanelSort*, align 8
  %ps2 = alloca %struct.PanelSort*, align 8
  store i8* %a1, i8** %a1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a1.addr, metadata !8247, metadata !DIExpression()), !dbg !8248
  store i8* %a2, i8** %a2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a2.addr, metadata !8249, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.declare(metadata %struct.PanelSort** %ps1, metadata !8251, metadata !DIExpression()), !dbg !8252
  %0 = load i8*, i8** %a1.addr, align 8, !dbg !8253
  %1 = bitcast i8* %0 to %struct.PanelSort*, !dbg !8253
  store %struct.PanelSort* %1, %struct.PanelSort** %ps1, align 8, !dbg !8252
  call void @llvm.dbg.declare(metadata %struct.PanelSort** %ps2, metadata !8254, metadata !DIExpression()), !dbg !8255
  %2 = load i8*, i8** %a2.addr, align 8, !dbg !8256
  %3 = bitcast i8* %2 to %struct.PanelSort*, !dbg !8256
  store %struct.PanelSort* %3, %struct.PanelSort** %ps2, align 8, !dbg !8255
  %4 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8257
  %pa = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %4, i32 0, i32 0, !dbg !8259
  %5 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8259
  %sortorder = getelementptr inbounds %struct.Panel, %struct.Panel* %5, i32 0, i32 17, !dbg !8260
  %6 = load i32, i32* %sortorder, align 4, !dbg !8260
  %7 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8261
  %pa1 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %7, i32 0, i32 0, !dbg !8262
  %8 = load %struct.Panel*, %struct.Panel** %pa1, align 8, !dbg !8262
  %sortorder2 = getelementptr inbounds %struct.Panel, %struct.Panel* %8, i32 0, i32 17, !dbg !8263
  %9 = load i32, i32* %sortorder2, align 4, !dbg !8263
  %cmp = icmp sgt i32 %6, %9, !dbg !8264
  br i1 %cmp, label %if.then, label %if.else, !dbg !8265

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8266
  br label %return, !dbg !8266

if.else:                                          ; preds = %entry
  %10 = load %struct.PanelSort*, %struct.PanelSort** %ps1, align 8, !dbg !8267
  %pa3 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %10, i32 0, i32 0, !dbg !8269
  %11 = load %struct.Panel*, %struct.Panel** %pa3, align 8, !dbg !8269
  %sortorder4 = getelementptr inbounds %struct.Panel, %struct.Panel* %11, i32 0, i32 17, !dbg !8270
  %12 = load i32, i32* %sortorder4, align 4, !dbg !8270
  %13 = load %struct.PanelSort*, %struct.PanelSort** %ps2, align 8, !dbg !8271
  %pa5 = getelementptr inbounds %struct.PanelSort, %struct.PanelSort* %13, i32 0, i32 0, !dbg !8272
  %14 = load %struct.Panel*, %struct.Panel** %pa5, align 8, !dbg !8272
  %sortorder6 = getelementptr inbounds %struct.Panel, %struct.Panel* %14, i32 0, i32 17, !dbg !8273
  %15 = load i32, i32* %sortorder6, align 4, !dbg !8273
  %cmp7 = icmp slt i32 %12, %15, !dbg !8274
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !8275

if.then8:                                         ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !8276
  br label %return, !dbg !8276

if.end:                                           ; preds = %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8277
  br label %return, !dbg !8277

return:                                           ; preds = %if.end9, %if.then8, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !8278
  ret i32 %16, !dbg !8278
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_panel_size_y(%struct.Panel* %pa) #0 !dbg !8279 {
entry:
  %retval = alloca i32, align 4
  %pa.addr = alloca %struct.Panel*, align 8
  store %struct.Panel* %pa, %struct.Panel** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa.addr, metadata !8282, metadata !DIExpression()), !dbg !8283
  %0 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8284
  %type = getelementptr inbounds %struct.Panel, %struct.Panel* %0, i32 0, i32 2, !dbg !8286
  %1 = load %struct.PanelType*, %struct.PanelType** %type, align 8, !dbg !8286
  %tobool = icmp ne %struct.PanelType* %1, null, !dbg !8284
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8287

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8288
  %type1 = getelementptr inbounds %struct.Panel, %struct.Panel* %2, i32 0, i32 2, !dbg !8289
  %3 = load %struct.PanelType*, %struct.PanelType** %type1, align 8, !dbg !8289
  %flag = getelementptr inbounds %struct.PanelType, %struct.PanelType* %3, i32 0, i32 9, !dbg !8290
  %4 = load i32, i32* %flag, align 8, !dbg !8290
  %and = and i32 %4, 2, !dbg !8291
  %tobool2 = icmp ne i32 %and, 0, !dbg !8291
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8292

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8293
  %sizey = getelementptr inbounds %struct.Panel, %struct.Panel* %5, i32 0, i32 10, !dbg !8294
  %6 = load i32, i32* %sizey, align 4, !dbg !8294
  store i32 %6, i32* %retval, align 4, !dbg !8295
  br label %return, !dbg !8295

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !8296
  %conv = sext i16 %7 to i32, !dbg !8296
  %add = add nsw i32 %conv, 4, !dbg !8296
  %8 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8297
  %sizey3 = getelementptr inbounds %struct.Panel, %struct.Panel* %8, i32 0, i32 10, !dbg !8298
  %9 = load i32, i32* %sizey3, align 4, !dbg !8298
  %add4 = add nsw i32 %add, %9, !dbg !8299
  store i32 %add4, i32* %retval, align 4, !dbg !8300
  br label %return, !dbg !8300

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8301
  ret i32 %10, !dbg !8301
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_panel_real_ofsy(%struct.Panel* %pa) #0 !dbg !8302 {
entry:
  %retval = alloca i32, align 4
  %pa.addr = alloca %struct.Panel*, align 8
  store %struct.Panel* %pa, %struct.Panel** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa.addr, metadata !8303, metadata !DIExpression()), !dbg !8304
  %0 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8305
  %flag = getelementptr inbounds %struct.Panel, %struct.Panel* %0, i32 0, i32 13, !dbg !8307
  %1 = load i16, i16* %flag, align 4, !dbg !8307
  %conv = sext i16 %1 to i32, !dbg !8305
  %and = and i32 %conv, 4, !dbg !8308
  %tobool = icmp ne i32 %and, 0, !dbg !8308
  br i1 %tobool, label %if.then, label %if.else, !dbg !8309

if.then:                                          ; preds = %entry
  %2 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8310
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %2, i32 0, i32 8, !dbg !8311
  %3 = load i32, i32* %ofsy, align 4, !dbg !8311
  %4 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8312
  %sizey = getelementptr inbounds %struct.Panel, %struct.Panel* %4, i32 0, i32 10, !dbg !8313
  %5 = load i32, i32* %sizey, align 4, !dbg !8313
  %add = add nsw i32 %3, %5, !dbg !8314
  store i32 %add, i32* %retval, align 4, !dbg !8315
  br label %return, !dbg !8315

if.else:                                          ; preds = %entry
  %6 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8316
  %paneltab = getelementptr inbounds %struct.Panel, %struct.Panel* %6, i32 0, i32 18, !dbg !8318
  %7 = load %struct.Panel*, %struct.Panel** %paneltab, align 8, !dbg !8318
  %tobool1 = icmp ne %struct.Panel* %7, null, !dbg !8316
  br i1 %tobool1, label %land.lhs.true, label %if.else11, !dbg !8319

land.lhs.true:                                    ; preds = %if.else
  %8 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8320
  %paneltab2 = getelementptr inbounds %struct.Panel, %struct.Panel* %8, i32 0, i32 18, !dbg !8321
  %9 = load %struct.Panel*, %struct.Panel** %paneltab2, align 8, !dbg !8321
  %flag3 = getelementptr inbounds %struct.Panel, %struct.Panel* %9, i32 0, i32 13, !dbg !8322
  %10 = load i16, i16* %flag3, align 4, !dbg !8322
  %conv4 = sext i16 %10 to i32, !dbg !8320
  %and5 = and i32 %conv4, 4, !dbg !8323
  %tobool6 = icmp ne i32 %and5, 0, !dbg !8323
  br i1 %tobool6, label %if.then7, label %if.else11, !dbg !8324

if.then7:                                         ; preds = %land.lhs.true
  %11 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8325
  %ofsy8 = getelementptr inbounds %struct.Panel, %struct.Panel* %11, i32 0, i32 8, !dbg !8326
  %12 = load i32, i32* %ofsy8, align 4, !dbg !8326
  %13 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8327
  %sizey9 = getelementptr inbounds %struct.Panel, %struct.Panel* %13, i32 0, i32 10, !dbg !8328
  %14 = load i32, i32* %sizey9, align 4, !dbg !8328
  %add10 = add nsw i32 %12, %14, !dbg !8329
  store i32 %add10, i32* %retval, align 4, !dbg !8330
  br label %return, !dbg !8330

if.else11:                                        ; preds = %land.lhs.true, %if.else
  %15 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8331
  %paneltab12 = getelementptr inbounds %struct.Panel, %struct.Panel* %15, i32 0, i32 18, !dbg !8333
  %16 = load %struct.Panel*, %struct.Panel** %paneltab12, align 8, !dbg !8333
  %tobool13 = icmp ne %struct.Panel* %16, null, !dbg !8331
  br i1 %tobool13, label %if.then14, label %if.else17, !dbg !8334

if.then14:                                        ; preds = %if.else11
  %17 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8335
  %paneltab15 = getelementptr inbounds %struct.Panel, %struct.Panel* %17, i32 0, i32 18, !dbg !8336
  %18 = load %struct.Panel*, %struct.Panel** %paneltab15, align 8, !dbg !8336
  %ofsy16 = getelementptr inbounds %struct.Panel, %struct.Panel* %18, i32 0, i32 8, !dbg !8337
  %19 = load i32, i32* %ofsy16, align 4, !dbg !8337
  store i32 %19, i32* %retval, align 4, !dbg !8338
  br label %return, !dbg !8338

if.else17:                                        ; preds = %if.else11
  %20 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8339
  %ofsy18 = getelementptr inbounds %struct.Panel, %struct.Panel* %20, i32 0, i32 8, !dbg !8340
  %21 = load i32, i32* %ofsy18, align 4, !dbg !8340
  store i32 %21, i32* %retval, align 4, !dbg !8341
  br label %return, !dbg !8341

return:                                           ; preds = %if.else17, %if.then14, %if.then7, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !8342
  ret i32 %22, !dbg !8342
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_panel_real_ofsx(%struct.Panel* %pa) #0 !dbg !8343 {
entry:
  %retval = alloca i32, align 4
  %pa.addr = alloca %struct.Panel*, align 8
  store %struct.Panel* %pa, %struct.Panel** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa.addr, metadata !8344, metadata !DIExpression()), !dbg !8345
  %0 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8346
  %flag = getelementptr inbounds %struct.Panel, %struct.Panel* %0, i32 0, i32 13, !dbg !8348
  %1 = load i16, i16* %flag, align 4, !dbg !8348
  %conv = sext i16 %1 to i32, !dbg !8346
  %and = and i32 %conv, 2, !dbg !8349
  %tobool = icmp ne i32 %and, 0, !dbg !8349
  br i1 %tobool, label %if.then, label %if.else, !dbg !8350

if.then:                                          ; preds = %entry
  %2 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8351
  %ofsx = getelementptr inbounds %struct.Panel, %struct.Panel* %2, i32 0, i32 7, !dbg !8352
  %3 = load i32, i32* %ofsx, align 8, !dbg !8352
  %4 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8353
  %call = call i32 @get_panel_header(%struct.Panel* %4), !dbg !8354
  %add = add nsw i32 %3, %call, !dbg !8355
  store i32 %add, i32* %retval, align 4, !dbg !8356
  br label %return, !dbg !8356

if.else:                                          ; preds = %entry
  %5 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8357
  %paneltab = getelementptr inbounds %struct.Panel, %struct.Panel* %5, i32 0, i32 18, !dbg !8359
  %6 = load %struct.Panel*, %struct.Panel** %paneltab, align 8, !dbg !8359
  %tobool1 = icmp ne %struct.Panel* %6, null, !dbg !8357
  br i1 %tobool1, label %land.lhs.true, label %if.else11, !dbg !8360

land.lhs.true:                                    ; preds = %if.else
  %7 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8361
  %paneltab2 = getelementptr inbounds %struct.Panel, %struct.Panel* %7, i32 0, i32 18, !dbg !8362
  %8 = load %struct.Panel*, %struct.Panel** %paneltab2, align 8, !dbg !8362
  %flag3 = getelementptr inbounds %struct.Panel, %struct.Panel* %8, i32 0, i32 13, !dbg !8363
  %9 = load i16, i16* %flag3, align 4, !dbg !8363
  %conv4 = sext i16 %9 to i32, !dbg !8361
  %and5 = and i32 %conv4, 2, !dbg !8364
  %tobool6 = icmp ne i32 %and5, 0, !dbg !8364
  br i1 %tobool6, label %if.then7, label %if.else11, !dbg !8365

if.then7:                                         ; preds = %land.lhs.true
  %10 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8366
  %ofsx8 = getelementptr inbounds %struct.Panel, %struct.Panel* %10, i32 0, i32 7, !dbg !8367
  %11 = load i32, i32* %ofsx8, align 8, !dbg !8367
  %12 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8368
  %call9 = call i32 @get_panel_header(%struct.Panel* %12), !dbg !8369
  %add10 = add nsw i32 %11, %call9, !dbg !8370
  store i32 %add10, i32* %retval, align 4, !dbg !8371
  br label %return, !dbg !8371

if.else11:                                        ; preds = %land.lhs.true, %if.else
  %13 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8372
  %ofsx12 = getelementptr inbounds %struct.Panel, %struct.Panel* %13, i32 0, i32 7, !dbg !8373
  %14 = load i32, i32* %ofsx12, align 8, !dbg !8373
  %15 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8374
  %sizex = getelementptr inbounds %struct.Panel, %struct.Panel* %15, i32 0, i32 9, !dbg !8375
  %16 = load i32, i32* %sizex, align 8, !dbg !8375
  %add13 = add nsw i32 %14, %16, !dbg !8376
  store i32 %add13, i32* %retval, align 4, !dbg !8377
  br label %return, !dbg !8377

return:                                           ; preds = %if.else11, %if.then7, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !8378
  ret i32 %17, !dbg !8378
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_panel_copy_offset(%struct.Panel* %pa, %struct.Panel* %papar) #0 !dbg !8379 {
entry:
  %pa.addr = alloca %struct.Panel*, align 8
  %papar.addr = alloca %struct.Panel*, align 8
  store %struct.Panel* %pa, %struct.Panel** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa.addr, metadata !8382, metadata !DIExpression()), !dbg !8383
  store %struct.Panel* %papar, %struct.Panel** %papar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel** %papar.addr, metadata !8384, metadata !DIExpression()), !dbg !8385
  %0 = load %struct.Panel*, %struct.Panel** %papar.addr, align 8, !dbg !8386
  %ofsx = getelementptr inbounds %struct.Panel, %struct.Panel* %0, i32 0, i32 7, !dbg !8387
  %1 = load i32, i32* %ofsx, align 8, !dbg !8387
  %2 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8388
  %ofsx1 = getelementptr inbounds %struct.Panel, %struct.Panel* %2, i32 0, i32 7, !dbg !8389
  store i32 %1, i32* %ofsx1, align 8, !dbg !8390
  %3 = load %struct.Panel*, %struct.Panel** %papar.addr, align 8, !dbg !8391
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %3, i32 0, i32 8, !dbg !8392
  %4 = load i32, i32* %ofsy, align 4, !dbg !8392
  %5 = load %struct.Panel*, %struct.Panel** %papar.addr, align 8, !dbg !8393
  %sizey = getelementptr inbounds %struct.Panel, %struct.Panel* %5, i32 0, i32 10, !dbg !8394
  %6 = load i32, i32* %sizey, align 4, !dbg !8394
  %add = add nsw i32 %4, %6, !dbg !8395
  %7 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8396
  %sizey2 = getelementptr inbounds %struct.Panel, %struct.Panel* %7, i32 0, i32 10, !dbg !8397
  %8 = load i32, i32* %sizey2, align 4, !dbg !8397
  %sub = sub nsw i32 %add, %8, !dbg !8398
  %9 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8399
  %ofsy3 = getelementptr inbounds %struct.Panel, %struct.Panel* %9, i32 0, i32 8, !dbg !8400
  store i32 %sub, i32* %ofsy3, align 4, !dbg !8401
  ret void, !dbg !8402
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_panel_header(%struct.Panel* %pa) #0 !dbg !8403 {
entry:
  %retval = alloca i32, align 4
  %pa.addr = alloca %struct.Panel*, align 8
  store %struct.Panel* %pa, %struct.Panel** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa.addr, metadata !8404, metadata !DIExpression()), !dbg !8405
  %0 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8406
  %type = getelementptr inbounds %struct.Panel, %struct.Panel* %0, i32 0, i32 2, !dbg !8408
  %1 = load %struct.PanelType*, %struct.PanelType** %type, align 8, !dbg !8408
  %tobool = icmp ne %struct.PanelType* %1, null, !dbg !8406
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8409

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Panel*, %struct.Panel** %pa.addr, align 8, !dbg !8410
  %type1 = getelementptr inbounds %struct.Panel, %struct.Panel* %2, i32 0, i32 2, !dbg !8411
  %3 = load %struct.PanelType*, %struct.PanelType** %type1, align 8, !dbg !8411
  %flag = getelementptr inbounds %struct.PanelType, %struct.PanelType* %3, i32 0, i32 9, !dbg !8412
  %4 = load i32, i32* %flag, align 8, !dbg !8412
  %and = and i32 %4, 2, !dbg !8413
  %tobool2 = icmp ne i32 %and, 0, !dbg !8413
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8414

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !8415
  br label %return, !dbg !8415

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !8416
  %conv = sext i16 %5 to i32, !dbg !8416
  %add = add nsw i32 %conv, 4, !dbg !8416
  store i32 %add, i32* %retval, align 4, !dbg !8417
  br label %return, !dbg !8417

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !8418
  ret i32 %6, !dbg !8418
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !8419 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !8420, metadata !DIExpression()), !dbg !8421
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !8422, metadata !DIExpression()), !dbg !8423
  %0 = load i32, i32* %a.addr, align 4, !dbg !8424
  %1 = load i32, i32* %b.addr, align 4, !dbg !8425
  %cmp = icmp slt i32 %0, %1, !dbg !8426
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8427

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !8428
  br label %cond.end, !dbg !8427

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !8429
  br label %cond.end, !dbg !8427

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8427
  ret i32 %cond, !dbg !8430
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.floor.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_fl(float* %r, float %f) #0 !dbg !8431 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8435, metadata !DIExpression()), !dbg !8436
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8437, metadata !DIExpression()), !dbg !8438
  %0 = load float, float* %f.addr, align 4, !dbg !8439
  %1 = load float*, float** %r.addr, align 8, !dbg !8440
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !8440
  %2 = load float, float* %arrayidx, align 4, !dbg !8441
  %mul = fmul float %2, %0, !dbg !8441
  store float %mul, float* %arrayidx, align 4, !dbg !8441
  %3 = load float, float* %f.addr, align 4, !dbg !8442
  %4 = load float*, float** %r.addr, align 8, !dbg !8443
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !8443
  %5 = load float, float* %arrayidx1, align 4, !dbg !8444
  %mul2 = fmul float %5, %3, !dbg !8444
  store float %mul2, float* %arrayidx1, align 4, !dbg !8444
  ret void, !dbg !8445
}

declare dso_local void @glBegin(i32) #3

declare dso_local void @glVertex2f(float, float) #3

declare dso_local void @glEnd() #3

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #3

declare dso_local void @BLI_rctf_translate(%struct.rctf*, float, float) #3

; Function Attrs: noinline nounwind uwtable
define internal void @panels_collapse_all(%struct.ScrArea* %sa, %struct.ARegion* %ar, %struct.Panel* %from_pa) #0 !dbg !8446 {
entry:
  %sa.addr = alloca %struct.ScrArea*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %from_pa.addr = alloca %struct.Panel*, align 8
  %has_category_tabs = alloca i8, align 1
  %category = alloca i8*, align 8
  %flag = alloca i32, align 4
  %from_pt = alloca %struct.PanelType*, align 8
  %pa = alloca %struct.Panel*, align 8
  %pt = alloca %struct.PanelType*, align 8
  store %struct.ScrArea* %sa, %struct.ScrArea** %sa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa.addr, metadata !8451, metadata !DIExpression()), !dbg !8452
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !8453, metadata !DIExpression()), !dbg !8454
  store %struct.Panel* %from_pa, %struct.Panel** %from_pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel** %from_pa.addr, metadata !8455, metadata !DIExpression()), !dbg !8456
  call void @llvm.dbg.declare(metadata i8* %has_category_tabs, metadata !8457, metadata !DIExpression()), !dbg !8458
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8459
  %call = call zeroext i8 @UI_panel_category_is_visible(%struct.ARegion* %0), !dbg !8460
  store i8 %call, i8* %has_category_tabs, align 1, !dbg !8458
  call void @llvm.dbg.declare(metadata i8** %category, metadata !8461, metadata !DIExpression()), !dbg !8462
  %1 = load i8, i8* %has_category_tabs, align 1, !dbg !8463
  %conv = zext i8 %1 to i32, !dbg !8463
  %tobool = icmp ne i32 %conv, 0, !dbg !8463
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8463

cond.true:                                        ; preds = %entry
  %2 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8464
  %call1 = call i8* @UI_panel_category_active_get(%struct.ARegion* %2, i8 zeroext 0), !dbg !8465
  br label %cond.end, !dbg !8463

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8463

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !8463
  store i8* %cond, i8** %category, align 8, !dbg !8462
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !8466, metadata !DIExpression()), !dbg !8467
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa.addr, align 8, !dbg !8468
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8469
  %call2 = call i32 @panel_aligned(%struct.ScrArea* %3, %struct.ARegion* %4), !dbg !8470
  %cmp = icmp eq i32 %call2, 1, !dbg !8471
  %5 = zext i1 %cmp to i64, !dbg !8472
  %cond4 = select i1 %cmp, i32 2, i32 4, !dbg !8472
  store i32 %cond4, i32* %flag, align 4, !dbg !8467
  call void @llvm.dbg.declare(metadata %struct.PanelType** %from_pt, metadata !8473, metadata !DIExpression()), !dbg !8476
  %6 = load %struct.Panel*, %struct.Panel** %from_pa.addr, align 8, !dbg !8477
  %type = getelementptr inbounds %struct.Panel, %struct.Panel* %6, i32 0, i32 2, !dbg !8478
  %7 = load %struct.PanelType*, %struct.PanelType** %type, align 8, !dbg !8478
  store %struct.PanelType* %7, %struct.PanelType** %from_pt, align 8, !dbg !8476
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !8479, metadata !DIExpression()), !dbg !8480
  %8 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8481
  %panels = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 22, !dbg !8483
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels, i32 0, i32 0, !dbg !8484
  %9 = load i8*, i8** %first, align 8, !dbg !8484
  %10 = bitcast i8* %9 to %struct.Panel*, !dbg !8481
  store %struct.Panel* %10, %struct.Panel** %pa, align 8, !dbg !8485
  br label %for.cond, !dbg !8486

for.cond:                                         ; preds = %for.inc, %cond.end
  %11 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8487
  %tobool5 = icmp ne %struct.Panel* %11, null, !dbg !8489
  br i1 %tobool5, label %for.body, label %for.end, !dbg !8489

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PanelType** %pt, metadata !8490, metadata !DIExpression()), !dbg !8492
  %12 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8493
  %type6 = getelementptr inbounds %struct.Panel, %struct.Panel* %12, i32 0, i32 2, !dbg !8494
  %13 = load %struct.PanelType*, %struct.PanelType** %type6, align 8, !dbg !8494
  store %struct.PanelType* %13, %struct.PanelType** %pt, align 8, !dbg !8492
  %14 = load %struct.PanelType*, %struct.PanelType** %pt, align 8, !dbg !8495
  %tobool7 = icmp ne %struct.PanelType* %14, null, !dbg !8495
  br i1 %tobool7, label %land.lhs.true, label %if.end49, !dbg !8497

land.lhs.true:                                    ; preds = %for.body
  %15 = load %struct.PanelType*, %struct.PanelType** %from_pt, align 8, !dbg !8498
  %tobool8 = icmp ne %struct.PanelType* %15, null, !dbg !8498
  br i1 %tobool8, label %land.lhs.true9, label %if.end49, !dbg !8499

land.lhs.true9:                                   ; preds = %land.lhs.true
  %16 = load %struct.PanelType*, %struct.PanelType** %pt, align 8, !dbg !8500
  %flag10 = getelementptr inbounds %struct.PanelType, %struct.PanelType* %16, i32 0, i32 9, !dbg !8501
  %17 = load i32, i32* %flag10, align 8, !dbg !8501
  %and = and i32 %17, 2, !dbg !8502
  %tobool11 = icmp ne i32 %and, 0, !dbg !8502
  br i1 %tobool11, label %if.end49, label %if.then, !dbg !8503

if.then:                                          ; preds = %land.lhs.true9
  %18 = load %struct.PanelType*, %struct.PanelType** %pt, align 8, !dbg !8504
  %context = getelementptr inbounds %struct.PanelType, %struct.PanelType* %18, i32 0, i32 5, !dbg !8507
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %context, i64 0, i64 0, !dbg !8504
  %19 = load i8, i8* %arrayidx, align 8, !dbg !8504
  %tobool12 = icmp ne i8 %19, 0, !dbg !8504
  br i1 %tobool12, label %lor.lhs.false, label %if.then23, !dbg !8508

lor.lhs.false:                                    ; preds = %if.then
  %20 = load %struct.PanelType*, %struct.PanelType** %from_pt, align 8, !dbg !8509
  %context13 = getelementptr inbounds %struct.PanelType, %struct.PanelType* %20, i32 0, i32 5, !dbg !8510
  %arrayidx14 = getelementptr inbounds [64 x i8], [64 x i8]* %context13, i64 0, i64 0, !dbg !8509
  %21 = load i8, i8* %arrayidx14, align 8, !dbg !8509
  %tobool15 = icmp ne i8 %21, 0, !dbg !8509
  br i1 %tobool15, label %lor.lhs.false16, label %if.then23, !dbg !8511

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %22 = load %struct.PanelType*, %struct.PanelType** %pt, align 8, !dbg !8512
  %context17 = getelementptr inbounds %struct.PanelType, %struct.PanelType* %22, i32 0, i32 5, !dbg !8512
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %context17, i64 0, i64 0, !dbg !8512
  %23 = load %struct.PanelType*, %struct.PanelType** %from_pt, align 8, !dbg !8512
  %context18 = getelementptr inbounds %struct.PanelType, %struct.PanelType* %23, i32 0, i32 5, !dbg !8512
  %arraydecay19 = getelementptr inbounds [64 x i8], [64 x i8]* %context18, i64 0, i64 0, !dbg !8512
  %call20 = call i32 @strcmp(i8* %arraydecay, i8* %arraydecay19) #6, !dbg !8512
  %cmp21 = icmp eq i32 %call20, 0, !dbg !8512
  br i1 %cmp21, label %if.then23, label %if.end48, !dbg !8513

if.then23:                                        ; preds = %lor.lhs.false16, %lor.lhs.false, %if.then
  %24 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8514
  %flag24 = getelementptr inbounds %struct.Panel, %struct.Panel* %24, i32 0, i32 13, !dbg !8517
  %25 = load i16, i16* %flag24, align 4, !dbg !8517
  %conv25 = sext i16 %25 to i32, !dbg !8514
  %and26 = and i32 %conv25, 32, !dbg !8518
  %tobool27 = icmp ne i32 %and26, 0, !dbg !8518
  br i1 %tobool27, label %if.then40, label %lor.lhs.false28, !dbg !8519

lor.lhs.false28:                                  ; preds = %if.then23
  %26 = load i8*, i8** %category, align 8, !dbg !8520
  %tobool29 = icmp ne i8* %26, null, !dbg !8520
  br i1 %tobool29, label %lor.lhs.false30, label %if.then40, !dbg !8521

lor.lhs.false30:                                  ; preds = %lor.lhs.false28
  %27 = load %struct.PanelType*, %struct.PanelType** %pt, align 8, !dbg !8522
  %category31 = getelementptr inbounds %struct.PanelType, %struct.PanelType* %27, i32 0, i32 6, !dbg !8523
  %arrayidx32 = getelementptr inbounds [64 x i8], [64 x i8]* %category31, i64 0, i64 0, !dbg !8522
  %28 = load i8, i8* %arrayidx32, align 8, !dbg !8522
  %tobool33 = icmp ne i8 %28, 0, !dbg !8522
  br i1 %tobool33, label %lor.lhs.false34, label %if.then40, !dbg !8524

lor.lhs.false34:                                  ; preds = %lor.lhs.false30
  %29 = load %struct.PanelType*, %struct.PanelType** %pt, align 8, !dbg !8525
  %category35 = getelementptr inbounds %struct.PanelType, %struct.PanelType* %29, i32 0, i32 6, !dbg !8525
  %arraydecay36 = getelementptr inbounds [64 x i8], [64 x i8]* %category35, i64 0, i64 0, !dbg !8525
  %30 = load i8*, i8** %category, align 8, !dbg !8525
  %call37 = call i32 @strcmp(i8* %arraydecay36, i8* %30) #6, !dbg !8525
  %cmp38 = icmp eq i32 %call37, 0, !dbg !8525
  br i1 %cmp38, label %if.then40, label %if.end, !dbg !8526

if.then40:                                        ; preds = %lor.lhs.false34, %lor.lhs.false30, %lor.lhs.false28, %if.then23
  %31 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8527
  %flag41 = getelementptr inbounds %struct.Panel, %struct.Panel* %31, i32 0, i32 13, !dbg !8529
  %32 = load i16, i16* %flag41, align 4, !dbg !8530
  %conv42 = sext i16 %32 to i32, !dbg !8530
  %and43 = and i32 %conv42, -7, !dbg !8530
  %conv44 = trunc i32 %and43 to i16, !dbg !8530
  store i16 %conv44, i16* %flag41, align 4, !dbg !8530
  %33 = load i32, i32* %flag, align 4, !dbg !8531
  %34 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8532
  %flag45 = getelementptr inbounds %struct.Panel, %struct.Panel* %34, i32 0, i32 13, !dbg !8533
  %35 = load i16, i16* %flag45, align 4, !dbg !8534
  %conv46 = sext i16 %35 to i32, !dbg !8534
  %or = or i32 %conv46, %33, !dbg !8534
  %conv47 = trunc i32 %or to i16, !dbg !8534
  store i16 %conv47, i16* %flag45, align 4, !dbg !8534
  br label %if.end, !dbg !8535

if.end:                                           ; preds = %if.then40, %lor.lhs.false34
  br label %if.end48, !dbg !8536

if.end48:                                         ; preds = %if.end, %lor.lhs.false16
  br label %if.end49, !dbg !8537

if.end49:                                         ; preds = %if.end48, %land.lhs.true9, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8538

for.inc:                                          ; preds = %if.end49
  %36 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8539
  %next = getelementptr inbounds %struct.Panel, %struct.Panel* %36, i32 0, i32 0, !dbg !8540
  %37 = load %struct.Panel*, %struct.Panel** %next, align 8, !dbg !8540
  store %struct.Panel* %37, %struct.Panel** %pa, align 8, !dbg !8541
  br label %for.cond, !dbg !8542, !llvm.loop !8543

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8545
}

declare dso_local zeroext i8 @BLI_rctf_isect_x(%struct.rctf*, float) #3

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @check_panel_overlap(%struct.ARegion* %ar, %struct.Panel* %panel) #0 !dbg !8546 {
entry:
  %ar.addr = alloca %struct.ARegion*, align 8
  %panel.addr = alloca %struct.Panel*, align 8
  %pa = alloca %struct.Panel*, align 8
  %safex = alloca float, align 4
  %safey = alloca float, align 4
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !8549, metadata !DIExpression()), !dbg !8550
  store %struct.Panel* %panel, %struct.Panel** %panel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel** %panel.addr, metadata !8551, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !8553, metadata !DIExpression()), !dbg !8554
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !8555
  %panels = getelementptr inbounds %struct.ARegion, %struct.ARegion* %0, i32 0, i32 22, !dbg !8557
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %panels, i32 0, i32 0, !dbg !8558
  %1 = load i8*, i8** %first, align 8, !dbg !8558
  %2 = bitcast i8* %1 to %struct.Panel*, !dbg !8555
  store %struct.Panel* %2, %struct.Panel** %pa, align 8, !dbg !8559
  br label %for.cond, !dbg !8560

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8561
  %tobool = icmp ne %struct.Panel* %3, null, !dbg !8563
  br i1 %tobool, label %for.body, label %for.end, !dbg !8563

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8564
  %flag = getelementptr inbounds %struct.Panel, %struct.Panel* %4, i32 0, i32 13, !dbg !8566
  %5 = load i16, i16* %flag, align 4, !dbg !8567
  %conv = sext i16 %5 to i32, !dbg !8567
  %and = and i32 %conv, -17, !dbg !8567
  %conv1 = trunc i32 %and to i16, !dbg !8567
  store i16 %conv1, i16* %flag, align 4, !dbg !8567
  %6 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8568
  %tobool2 = icmp ne %struct.Panel* %6, null, !dbg !8568
  br i1 %tobool2, label %land.lhs.true, label %if.end87, !dbg !8570

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8571
  %8 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8572
  %cmp = icmp ne %struct.Panel* %7, %8, !dbg !8573
  br i1 %cmp, label %if.then, label %if.end87, !dbg !8574

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8575
  %paneltab = getelementptr inbounds %struct.Panel, %struct.Panel* %9, i32 0, i32 18, !dbg !8578
  %10 = load %struct.Panel*, %struct.Panel** %paneltab, align 8, !dbg !8578
  %cmp4 = icmp eq %struct.Panel* %10, null, !dbg !8579
  br i1 %cmp4, label %land.lhs.true6, label %if.end86, !dbg !8580

land.lhs.true6:                                   ; preds = %if.then
  %11 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8581
  %runtime_flag = getelementptr inbounds %struct.Panel, %struct.Panel* %11, i32 0, i32 14, !dbg !8582
  %12 = load i16, i16* %runtime_flag, align 2, !dbg !8582
  %conv7 = sext i16 %12 to i32, !dbg !8581
  %and8 = and i32 %conv7, 2, !dbg !8583
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8583
  br i1 %tobool9, label %if.then10, label %if.end86, !dbg !8584

if.then10:                                        ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata float* %safex, metadata !8585, metadata !DIExpression()), !dbg !8587
  store float 0x3FC99999A0000000, float* %safex, align 4, !dbg !8587
  call void @llvm.dbg.declare(metadata float* %safey, metadata !8588, metadata !DIExpression()), !dbg !8589
  store float 0x3FC99999A0000000, float* %safey, align 4, !dbg !8589
  %13 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8590
  %flag11 = getelementptr inbounds %struct.Panel, %struct.Panel* %13, i32 0, i32 13, !dbg !8592
  %14 = load i16, i16* %flag11, align 4, !dbg !8592
  %conv12 = sext i16 %14 to i32, !dbg !8590
  %and13 = and i32 %conv12, 2, !dbg !8593
  %tobool14 = icmp ne i32 %and13, 0, !dbg !8593
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !8594

if.then15:                                        ; preds = %if.then10
  store float 0x3FA99999A0000000, float* %safex, align 4, !dbg !8595
  br label %if.end35, !dbg !8596

if.else:                                          ; preds = %if.then10
  %15 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8597
  %flag16 = getelementptr inbounds %struct.Panel, %struct.Panel* %15, i32 0, i32 13, !dbg !8599
  %16 = load i16, i16* %flag16, align 4, !dbg !8599
  %conv17 = sext i16 %16 to i32, !dbg !8597
  %and18 = and i32 %conv17, 4, !dbg !8600
  %tobool19 = icmp ne i32 %and18, 0, !dbg !8600
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !8601

if.then20:                                        ; preds = %if.else
  store float 0x3FA99999A0000000, float* %safey, align 4, !dbg !8602
  br label %if.end34, !dbg !8603

if.else21:                                        ; preds = %if.else
  %17 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8604
  %flag22 = getelementptr inbounds %struct.Panel, %struct.Panel* %17, i32 0, i32 13, !dbg !8606
  %18 = load i16, i16* %flag22, align 4, !dbg !8606
  %conv23 = sext i16 %18 to i32, !dbg !8604
  %and24 = and i32 %conv23, 2, !dbg !8607
  %tobool25 = icmp ne i32 %and24, 0, !dbg !8607
  br i1 %tobool25, label %if.then26, label %if.else27, !dbg !8608

if.then26:                                        ; preds = %if.else21
  store float 0x3FA99999A0000000, float* %safex, align 4, !dbg !8609
  br label %if.end33, !dbg !8610

if.else27:                                        ; preds = %if.else21
  %19 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8611
  %flag28 = getelementptr inbounds %struct.Panel, %struct.Panel* %19, i32 0, i32 13, !dbg !8613
  %20 = load i16, i16* %flag28, align 4, !dbg !8613
  %conv29 = sext i16 %20 to i32, !dbg !8611
  %and30 = and i32 %conv29, 4, !dbg !8614
  %tobool31 = icmp ne i32 %and30, 0, !dbg !8614
  br i1 %tobool31, label %if.then32, label %if.end, !dbg !8615

if.then32:                                        ; preds = %if.else27
  store float 0x3FA99999A0000000, float* %safey, align 4, !dbg !8616
  br label %if.end, !dbg !8617

if.end:                                           ; preds = %if.then32, %if.else27
  br label %if.end33

if.end33:                                         ; preds = %if.end, %if.then26
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then20
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then15
  %21 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8618
  %ofsx = getelementptr inbounds %struct.Panel, %struct.Panel* %21, i32 0, i32 7, !dbg !8620
  %22 = load i32, i32* %ofsx, align 8, !dbg !8620
  %conv36 = sitofp i32 %22 to float, !dbg !8618
  %23 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8621
  %ofsx37 = getelementptr inbounds %struct.Panel, %struct.Panel* %23, i32 0, i32 7, !dbg !8622
  %24 = load i32, i32* %ofsx37, align 8, !dbg !8622
  %conv38 = sitofp i32 %24 to float, !dbg !8621
  %25 = load float, float* %safex, align 4, !dbg !8623
  %26 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8624
  %sizex = getelementptr inbounds %struct.Panel, %struct.Panel* %26, i32 0, i32 9, !dbg !8625
  %27 = load i32, i32* %sizex, align 8, !dbg !8625
  %conv39 = sitofp i32 %27 to float, !dbg !8624
  %mul = fmul float %25, %conv39, !dbg !8626
  %sub = fsub float %conv38, %mul, !dbg !8627
  %cmp40 = fcmp ogt float %conv36, %sub, !dbg !8628
  br i1 %cmp40, label %if.then42, label %if.end85, !dbg !8629

if.then42:                                        ; preds = %if.end35
  %28 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8630
  %ofsx43 = getelementptr inbounds %struct.Panel, %struct.Panel* %28, i32 0, i32 7, !dbg !8632
  %29 = load i32, i32* %ofsx43, align 8, !dbg !8632
  %30 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8633
  %sizex44 = getelementptr inbounds %struct.Panel, %struct.Panel* %30, i32 0, i32 9, !dbg !8634
  %31 = load i32, i32* %sizex44, align 8, !dbg !8634
  %add = add nsw i32 %29, %31, !dbg !8635
  %conv45 = sitofp i32 %add to float, !dbg !8630
  %32 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8636
  %ofsx46 = getelementptr inbounds %struct.Panel, %struct.Panel* %32, i32 0, i32 7, !dbg !8637
  %33 = load i32, i32* %ofsx46, align 8, !dbg !8637
  %conv47 = sitofp i32 %33 to float, !dbg !8636
  %34 = load float, float* %safex, align 4, !dbg !8638
  %add48 = fadd float 1.000000e+00, %34, !dbg !8639
  %35 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8640
  %sizex49 = getelementptr inbounds %struct.Panel, %struct.Panel* %35, i32 0, i32 9, !dbg !8641
  %36 = load i32, i32* %sizex49, align 8, !dbg !8641
  %conv50 = sitofp i32 %36 to float, !dbg !8640
  %mul51 = fmul float %add48, %conv50, !dbg !8642
  %add52 = fadd float %conv47, %mul51, !dbg !8643
  %cmp53 = fcmp olt float %conv45, %add52, !dbg !8644
  br i1 %cmp53, label %if.then55, label %if.end84, !dbg !8645

if.then55:                                        ; preds = %if.then42
  %37 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8646
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %37, i32 0, i32 8, !dbg !8648
  %38 = load i32, i32* %ofsy, align 4, !dbg !8648
  %conv56 = sitofp i32 %38 to float, !dbg !8646
  %39 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8649
  %ofsy57 = getelementptr inbounds %struct.Panel, %struct.Panel* %39, i32 0, i32 8, !dbg !8650
  %40 = load i32, i32* %ofsy57, align 4, !dbg !8650
  %conv58 = sitofp i32 %40 to float, !dbg !8649
  %41 = load float, float* %safey, align 4, !dbg !8651
  %42 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8652
  %sizey = getelementptr inbounds %struct.Panel, %struct.Panel* %42, i32 0, i32 10, !dbg !8653
  %43 = load i32, i32* %sizey, align 4, !dbg !8653
  %conv59 = sitofp i32 %43 to float, !dbg !8652
  %mul60 = fmul float %41, %conv59, !dbg !8654
  %sub61 = fsub float %conv58, %mul60, !dbg !8655
  %cmp62 = fcmp ogt float %conv56, %sub61, !dbg !8656
  br i1 %cmp62, label %if.then64, label %if.end83, !dbg !8657

if.then64:                                        ; preds = %if.then55
  %44 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8658
  %ofsy65 = getelementptr inbounds %struct.Panel, %struct.Panel* %44, i32 0, i32 8, !dbg !8660
  %45 = load i32, i32* %ofsy65, align 4, !dbg !8660
  %46 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8661
  %sizey66 = getelementptr inbounds %struct.Panel, %struct.Panel* %46, i32 0, i32 10, !dbg !8662
  %47 = load i32, i32* %sizey66, align 4, !dbg !8662
  %add67 = add nsw i32 %45, %47, !dbg !8663
  %conv68 = sitofp i32 %add67 to float, !dbg !8658
  %48 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8664
  %ofsy69 = getelementptr inbounds %struct.Panel, %struct.Panel* %48, i32 0, i32 8, !dbg !8665
  %49 = load i32, i32* %ofsy69, align 4, !dbg !8665
  %conv70 = sitofp i32 %49 to float, !dbg !8664
  %50 = load float, float* %safey, align 4, !dbg !8666
  %add71 = fadd float 1.000000e+00, %50, !dbg !8667
  %51 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8668
  %sizey72 = getelementptr inbounds %struct.Panel, %struct.Panel* %51, i32 0, i32 10, !dbg !8669
  %52 = load i32, i32* %sizey72, align 4, !dbg !8669
  %conv73 = sitofp i32 %52 to float, !dbg !8668
  %mul74 = fmul float %add71, %conv73, !dbg !8670
  %add75 = fadd float %conv70, %mul74, !dbg !8671
  %cmp76 = fcmp olt float %conv68, %add75, !dbg !8672
  br i1 %cmp76, label %if.then78, label %if.end82, !dbg !8673

if.then78:                                        ; preds = %if.then64
  %53 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8674
  %flag79 = getelementptr inbounds %struct.Panel, %struct.Panel* %53, i32 0, i32 13, !dbg !8675
  %54 = load i16, i16* %flag79, align 4, !dbg !8676
  %conv80 = sext i16 %54 to i32, !dbg !8676
  %or = or i32 %conv80, 16, !dbg !8676
  %conv81 = trunc i32 %or to i16, !dbg !8676
  store i16 %conv81, i16* %flag79, align 4, !dbg !8676
  br label %if.end82, !dbg !8674

if.end82:                                         ; preds = %if.then78, %if.then64
  br label %if.end83, !dbg !8669

if.end83:                                         ; preds = %if.end82, %if.then55
  br label %if.end84, !dbg !8653

if.end84:                                         ; preds = %if.end83, %if.then42
  br label %if.end85, !dbg !8641

if.end85:                                         ; preds = %if.end84, %if.end35
  br label %if.end86, !dbg !8677

if.end86:                                         ; preds = %if.end85, %land.lhs.true6, %if.then
  br label %if.end87, !dbg !8678

if.end87:                                         ; preds = %if.end86, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8679

for.inc:                                          ; preds = %if.end87
  %55 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8680
  %next = getelementptr inbounds %struct.Panel, %struct.Panel* %55, i32 0, i32 0, !dbg !8681
  %56 = load %struct.Panel*, %struct.Panel** %next, align 8, !dbg !8681
  store %struct.Panel* %56, %struct.Panel** %pa, align 8, !dbg !8682
  br label %for.cond, !dbg !8683, !llvm.loop !8684

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8686
}

declare dso_local void @WM_event_remove_timer(%struct.wmWindowManager*, %struct.wmWindow*, %struct.wmTimer*) #3

declare dso_local %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext*) #3

declare dso_local void @WM_event_remove_ui_handler(%struct.ListBase*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, void (%struct.bContext*, i8*)*, i8*, i8 zeroext) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @ui_handler_panel(%struct.bContext* %C, %struct.wmEvent* %event, i8* %userdata) #0 !dbg !8687 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %userdata.addr = alloca i8*, align 8
  %panel = alloca %struct.Panel*, align 8
  %data = alloca %struct.uiHandlePanelData*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %align = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8690, metadata !DIExpression()), !dbg !8691
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8692, metadata !DIExpression()), !dbg !8693
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !8694, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.declare(metadata %struct.Panel** %panel, metadata !8696, metadata !DIExpression()), !dbg !8697
  %0 = load i8*, i8** %userdata.addr, align 8, !dbg !8698
  %1 = bitcast i8* %0 to %struct.Panel*, !dbg !8698
  store %struct.Panel* %1, %struct.Panel** %panel, align 8, !dbg !8697
  call void @llvm.dbg.declare(metadata %struct.uiHandlePanelData** %data, metadata !8699, metadata !DIExpression()), !dbg !8700
  %2 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !8701
  %activedata = getelementptr inbounds %struct.Panel, %struct.Panel* %2, i32 0, i32 19, !dbg !8702
  %3 = load i8*, i8** %activedata, align 8, !dbg !8702
  %4 = bitcast i8* %3 to %struct.uiHandlePanelData*, !dbg !8701
  store %struct.uiHandlePanelData* %4, %struct.uiHandlePanelData** %data, align 8, !dbg !8700
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8703
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 2, !dbg !8705
  %6 = load i16, i16* %type, align 8, !dbg !8705
  %conv = sext i16 %6 to i32, !dbg !8703
  %cmp = icmp eq i32 %conv, 1, !dbg !8706
  br i1 %cmp, label %land.lhs.true, label %if.else8, !dbg !8707

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8708
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 3, !dbg !8709
  %8 = load i16, i16* %val, align 2, !dbg !8709
  %conv2 = sext i16 %8 to i32, !dbg !8708
  %cmp3 = icmp ne i32 %conv2, 1, !dbg !8710
  br i1 %cmp3, label %if.then, label %if.else8, !dbg !8711

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !8712, metadata !DIExpression()), !dbg !8714
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8715
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %9), !dbg !8716
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !8714
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8717, metadata !DIExpression()), !dbg !8718
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8719
  %call5 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %10), !dbg !8720
  store %struct.ARegion* %call5, %struct.ARegion** %ar, align 8, !dbg !8718
  call void @llvm.dbg.declare(metadata i32* %align, metadata !8721, metadata !DIExpression()), !dbg !8722
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8723
  %12 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8724
  %call6 = call i32 @panel_aligned(%struct.ScrArea* %11, %struct.ARegion* %12), !dbg !8725
  store i32 %call6, i32* %align, align 4, !dbg !8722
  %13 = load i32, i32* %align, align 4, !dbg !8726
  %tobool = icmp ne i32 %13, 0, !dbg !8726
  br i1 %tobool, label %if.then7, label %if.else, !dbg !8728

if.then7:                                         ; preds = %if.then
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8729
  %15 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !8730
  call void @panel_activate_state(%struct.bContext* %14, %struct.Panel* %15, i32 3), !dbg !8731
  br label %if.end, !dbg !8731

if.else:                                          ; preds = %if.then
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8732
  %17 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !8733
  call void @panel_activate_state(%struct.bContext* %16, %struct.Panel* %17, i32 4), !dbg !8734
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end40, !dbg !8735

if.else8:                                         ; preds = %land.lhs.true, %entry
  %18 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8736
  %type9 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %18, i32 0, i32 2, !dbg !8738
  %19 = load i16, i16* %type9, align 8, !dbg !8738
  %conv10 = sext i16 %19 to i32, !dbg !8736
  %cmp11 = icmp eq i32 %conv10, 4, !dbg !8739
  br i1 %cmp11, label %if.then13, label %if.else18, !dbg !8740

if.then13:                                        ; preds = %if.else8
  %20 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8741
  %state = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %20, i32 0, i32 0, !dbg !8744
  %21 = load i32, i32* %state, align 8, !dbg !8744
  %cmp14 = icmp eq i32 %21, 0, !dbg !8745
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !8746

if.then16:                                        ; preds = %if.then13
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8747
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8748
  %24 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !8749
  call void @ui_do_drag(%struct.bContext* %22, %struct.wmEvent* %23, %struct.Panel* %24), !dbg !8750
  br label %if.end17, !dbg !8750

if.end17:                                         ; preds = %if.then16, %if.then13
  br label %if.end39, !dbg !8751

if.else18:                                        ; preds = %if.else8
  %25 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8752
  %type19 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %25, i32 0, i32 2, !dbg !8754
  %26 = load i16, i16* %type19, align 8, !dbg !8754
  %conv20 = sext i16 %26 to i32, !dbg !8752
  %cmp21 = icmp eq i32 %conv20, 272, !dbg !8755
  br i1 %cmp21, label %land.lhs.true23, label %if.end38, !dbg !8756

land.lhs.true23:                                  ; preds = %if.else18
  %27 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8757
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %27, i32 0, i32 28, !dbg !8758
  %28 = load i8*, i8** %customdata, align 8, !dbg !8758
  %29 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8759
  %animtimer = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %29, i32 0, i32 1, !dbg !8760
  %30 = load %struct.wmTimer*, %struct.wmTimer** %animtimer, align 8, !dbg !8760
  %31 = bitcast %struct.wmTimer* %30 to i8*, !dbg !8759
  %cmp24 = icmp eq i8* %28, %31, !dbg !8761
  br i1 %cmp24, label %if.then26, label %if.end38, !dbg !8762

if.then26:                                        ; preds = %land.lhs.true23
  %32 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8763
  %state27 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %32, i32 0, i32 0, !dbg !8766
  %33 = load i32, i32* %state27, align 8, !dbg !8766
  %cmp28 = icmp eq i32 %33, 3, !dbg !8767
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !8768

if.then30:                                        ; preds = %if.then26
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8769
  %35 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !8770
  call void @ui_do_animate(%struct.bContext* %34, %struct.Panel* %35), !dbg !8771
  br label %if.end37, !dbg !8771

if.else31:                                        ; preds = %if.then26
  %36 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8772
  %state32 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %36, i32 0, i32 0, !dbg !8774
  %37 = load i32, i32* %state32, align 8, !dbg !8774
  %cmp33 = icmp eq i32 %37, 0, !dbg !8775
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !8776

if.then35:                                        ; preds = %if.else31
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8777
  %39 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8778
  %40 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !8779
  call void @ui_do_drag(%struct.bContext* %38, %struct.wmEvent* %39, %struct.Panel* %40), !dbg !8780
  br label %if.end36, !dbg !8780

if.end36:                                         ; preds = %if.then35, %if.else31
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then30
  br label %if.end38, !dbg !8781

if.end38:                                         ; preds = %if.end37, %land.lhs.true23, %if.else18
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end17
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end
  %41 = load %struct.Panel*, %struct.Panel** %panel, align 8, !dbg !8782
  %activedata41 = getelementptr inbounds %struct.Panel, %struct.Panel* %41, i32 0, i32 19, !dbg !8783
  %42 = load i8*, i8** %activedata41, align 8, !dbg !8783
  %43 = bitcast i8* %42 to %struct.uiHandlePanelData*, !dbg !8782
  store %struct.uiHandlePanelData* %43, %struct.uiHandlePanelData** %data, align 8, !dbg !8784
  %44 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8785
  %tobool42 = icmp ne %struct.uiHandlePanelData* %44, null, !dbg !8785
  br i1 %tobool42, label %land.lhs.true43, label %if.else48, !dbg !8787

land.lhs.true43:                                  ; preds = %if.end40
  %45 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8788
  %state44 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %45, i32 0, i32 0, !dbg !8789
  %46 = load i32, i32* %state44, align 8, !dbg !8789
  %cmp45 = icmp eq i32 %46, 3, !dbg !8790
  br i1 %cmp45, label %if.then47, label %if.else48, !dbg !8791

if.then47:                                        ; preds = %land.lhs.true43
  store i32 0, i32* %retval, align 4, !dbg !8792
  br label %return, !dbg !8792

if.else48:                                        ; preds = %land.lhs.true43, %if.end40
  store i32 1, i32* %retval, align 4, !dbg !8793
  br label %return, !dbg !8793

return:                                           ; preds = %if.else48, %if.then47
  %47 = load i32, i32* %retval, align 4, !dbg !8794
  ret i32 %47, !dbg !8794
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_handler_remove_panel(%struct.bContext* %C, i8* %userdata) #0 !dbg !8795 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %userdata.addr = alloca i8*, align 8
  %pa = alloca %struct.Panel*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8798, metadata !DIExpression()), !dbg !8799
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !8800, metadata !DIExpression()), !dbg !8801
  call void @llvm.dbg.declare(metadata %struct.Panel** %pa, metadata !8802, metadata !DIExpression()), !dbg !8803
  %0 = load i8*, i8** %userdata.addr, align 8, !dbg !8804
  %1 = bitcast i8* %0 to %struct.Panel*, !dbg !8804
  store %struct.Panel* %1, %struct.Panel** %pa, align 8, !dbg !8803
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8805
  %3 = load %struct.Panel*, %struct.Panel** %pa, align 8, !dbg !8806
  call void @panel_activate_state(%struct.bContext* %2, %struct.Panel* %3, i32 4), !dbg !8807
  ret void, !dbg !8808
}

declare dso_local %struct.wmEventHandler* @WM_event_add_ui_handler(%struct.bContext*, %struct.ListBase*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, void (%struct.bContext*, i8*)*, i8*, i8 zeroext) #3

declare dso_local %struct.wmTimer* @WM_event_add_timer(%struct.wmWindowManager*, %struct.wmWindow*, i32, double) #3

declare dso_local double @PIL_check_seconds_timer() #3

; Function Attrs: noinline nounwind uwtable
define internal void @ui_do_drag(%struct.bContext* %C, %struct.wmEvent* %event, %struct.Panel* %panel) #0 !dbg !8809 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %panel.addr = alloca %struct.Panel*, align 8
  %data = alloca %struct.uiHandlePanelData*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %align = alloca i16, align 2
  %dx = alloca i16, align 2
  %dy = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8812, metadata !DIExpression()), !dbg !8813
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8814, metadata !DIExpression()), !dbg !8815
  store %struct.Panel* %panel, %struct.Panel** %panel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel** %panel.addr, metadata !8816, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.declare(metadata %struct.uiHandlePanelData** %data, metadata !8818, metadata !DIExpression()), !dbg !8819
  %0 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8820
  %activedata = getelementptr inbounds %struct.Panel, %struct.Panel* %0, i32 0, i32 19, !dbg !8821
  %1 = load i8*, i8** %activedata, align 8, !dbg !8821
  %2 = bitcast i8* %1 to %struct.uiHandlePanelData*, !dbg !8820
  store %struct.uiHandlePanelData* %2, %struct.uiHandlePanelData** %data, align 8, !dbg !8819
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !8822, metadata !DIExpression()), !dbg !8823
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8824
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %3), !dbg !8825
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !8823
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8826, metadata !DIExpression()), !dbg !8827
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8828
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %4), !dbg !8829
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !8827
  call void @llvm.dbg.declare(metadata i16* %align, metadata !8830, metadata !DIExpression()), !dbg !8831
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8832
  %6 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8833
  %call2 = call i32 @panel_aligned(%struct.ScrArea* %5, %struct.ARegion* %6), !dbg !8834
  %conv = trunc i32 %call2 to i16, !dbg !8834
  store i16 %conv, i16* %align, align 2, !dbg !8831
  call void @llvm.dbg.declare(metadata i16* %dx, metadata !8835, metadata !DIExpression()), !dbg !8836
  store i16 0, i16* %dx, align 2, !dbg !8836
  call void @llvm.dbg.declare(metadata i16* %dy, metadata !8837, metadata !DIExpression()), !dbg !8838
  store i16 0, i16* %dy, align 2, !dbg !8838
  %7 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8839
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %7, i32 0, i32 3, !dbg !8841
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8842
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 4, !dbg !8843
  %call3 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %winrct, i32* %x), !dbg !8844
  %tobool = icmp ne i8 %call3, 0, !dbg !8844
  br i1 %tobool, label %if.end, label %if.then, !dbg !8845

if.then:                                          ; preds = %entry
  br label %return, !dbg !8846

if.end:                                           ; preds = %entry
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8847
  %x4 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 4, !dbg !8848
  %10 = load i32, i32* %x4, align 4, !dbg !8848
  %11 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8849
  %startx = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %11, i32 0, i32 3, !dbg !8850
  %12 = load i32, i32* %startx, align 8, !dbg !8850
  %sub = sub nsw i32 %10, %12, !dbg !8851
  %13 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !8852
  %conv5 = sext i16 %13 to i32, !dbg !8852
  %div = sdiv i32 %conv5, 5, !dbg !8852
  %sub6 = sub nsw i32 %div, 1, !dbg !8853
  %neg = xor i32 %sub6, -1, !dbg !8854
  %and = and i32 %sub, %neg, !dbg !8855
  %conv7 = trunc i32 %and to i16, !dbg !8856
  store i16 %conv7, i16* %dx, align 2, !dbg !8857
  %14 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8858
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %14, i32 0, i32 5, !dbg !8859
  %15 = load i32, i32* %y, align 8, !dbg !8859
  %16 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8860
  %starty = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %16, i32 0, i32 4, !dbg !8861
  %17 = load i32, i32* %starty, align 4, !dbg !8861
  %sub8 = sub nsw i32 %15, %17, !dbg !8862
  %18 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !8863
  %conv9 = sext i16 %18 to i32, !dbg !8863
  %div10 = sdiv i32 %conv9, 5, !dbg !8863
  %sub11 = sub nsw i32 %div10, 1, !dbg !8864
  %neg12 = xor i32 %sub11, -1, !dbg !8865
  %and13 = and i32 %sub8, %neg12, !dbg !8866
  %conv14 = trunc i32 %and13 to i16, !dbg !8867
  store i16 %conv14, i16* %dy, align 2, !dbg !8868
  %19 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8869
  %v2d = getelementptr inbounds %struct.ARegion, %struct.ARegion* %19, i32 0, i32 2, !dbg !8870
  %cur = getelementptr inbounds %struct.View2D, %struct.View2D* %v2d, i32 0, i32 1, !dbg !8871
  %call15 = call float @BLI_rctf_size_x(%struct.rctf* %cur), !dbg !8872
  %20 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8873
  %winrct16 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %20, i32 0, i32 3, !dbg !8874
  %call17 = call i32 @BLI_rcti_size_x(%struct.rcti* %winrct16), !dbg !8875
  %conv18 = sitofp i32 %call17 to float, !dbg !8876
  %div19 = fdiv float %call15, %conv18, !dbg !8877
  %21 = load i16, i16* %dx, align 2, !dbg !8878
  %conv20 = sitofp i16 %21 to float, !dbg !8878
  %mul = fmul float %conv20, %div19, !dbg !8878
  %conv21 = fptosi float %mul to i16, !dbg !8878
  store i16 %conv21, i16* %dx, align 2, !dbg !8878
  %22 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8879
  %v2d22 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %22, i32 0, i32 2, !dbg !8880
  %cur23 = getelementptr inbounds %struct.View2D, %struct.View2D* %v2d22, i32 0, i32 1, !dbg !8881
  %call24 = call float @BLI_rctf_size_y(%struct.rctf* %cur23), !dbg !8882
  %23 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8883
  %winrct25 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %23, i32 0, i32 3, !dbg !8884
  %call26 = call i32 @BLI_rcti_size_y(%struct.rcti* %winrct25), !dbg !8885
  %conv27 = sitofp i32 %call26 to float, !dbg !8886
  %div28 = fdiv float %call24, %conv27, !dbg !8887
  %24 = load i16, i16* %dy, align 2, !dbg !8888
  %conv29 = sitofp i16 %24 to float, !dbg !8888
  %mul30 = fmul float %conv29, %div28, !dbg !8888
  %conv31 = fptosi float %mul30 to i16, !dbg !8888
  store i16 %conv31, i16* %dy, align 2, !dbg !8888
  %25 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8889
  %state = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %25, i32 0, i32 0, !dbg !8891
  %26 = load i32, i32* %state, align 8, !dbg !8891
  %cmp = icmp eq i32 %26, 1, !dbg !8892
  br i1 %cmp, label %if.then33, label %if.else, !dbg !8893

if.then33:                                        ; preds = %if.end
  %27 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8894
  %startsizex = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %27, i32 0, i32 7, !dbg !8894
  %28 = load i32, i32* %startsizex, align 8, !dbg !8894
  %29 = load i16, i16* %dx, align 2, !dbg !8894
  %conv34 = sext i16 %29 to i32, !dbg !8894
  %add = add nsw i32 %28, %conv34, !dbg !8894
  %cmp35 = icmp sgt i32 %add, 100, !dbg !8894
  br i1 %cmp35, label %cond.true, label %cond.false, !dbg !8894

cond.true:                                        ; preds = %if.then33
  %30 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8894
  %startsizex37 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %30, i32 0, i32 7, !dbg !8894
  %31 = load i32, i32* %startsizex37, align 8, !dbg !8894
  %32 = load i16, i16* %dx, align 2, !dbg !8894
  %conv38 = sext i16 %32 to i32, !dbg !8894
  %add39 = add nsw i32 %31, %conv38, !dbg !8894
  br label %cond.end, !dbg !8894

cond.false:                                       ; preds = %if.then33
  br label %cond.end, !dbg !8894

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add39, %cond.true ], [ 100, %cond.false ], !dbg !8894
  %33 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8896
  %sizex = getelementptr inbounds %struct.Panel, %struct.Panel* %33, i32 0, i32 9, !dbg !8897
  store i32 %cond, i32* %sizex, align 8, !dbg !8898
  %34 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8899
  %startsizey = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %34, i32 0, i32 8, !dbg !8901
  %35 = load i32, i32* %startsizey, align 4, !dbg !8901
  %36 = load i16, i16* %dy, align 2, !dbg !8902
  %conv40 = sext i16 %36 to i32, !dbg !8902
  %sub41 = sub nsw i32 %35, %conv40, !dbg !8903
  %cmp42 = icmp slt i32 %sub41, 70, !dbg !8904
  br i1 %cmp42, label %if.then44, label %if.end48, !dbg !8905

if.then44:                                        ; preds = %cond.end
  %37 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8906
  %startsizey45 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %37, i32 0, i32 8, !dbg !8907
  %38 = load i32, i32* %startsizey45, align 4, !dbg !8907
  %add46 = add nsw i32 -70, %38, !dbg !8908
  %conv47 = trunc i32 %add46 to i16, !dbg !8909
  store i16 %conv47, i16* %dy, align 2, !dbg !8910
  br label %if.end48, !dbg !8911

if.end48:                                         ; preds = %if.then44, %cond.end
  %39 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8912
  %startsizey49 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %39, i32 0, i32 8, !dbg !8913
  %40 = load i32, i32* %startsizey49, align 4, !dbg !8913
  %41 = load i16, i16* %dy, align 2, !dbg !8914
  %conv50 = sext i16 %41 to i32, !dbg !8914
  %sub51 = sub nsw i32 %40, %conv50, !dbg !8915
  %42 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8916
  %sizey = getelementptr inbounds %struct.Panel, %struct.Panel* %42, i32 0, i32 10, !dbg !8917
  store i32 %sub51, i32* %sizey, align 4, !dbg !8918
  %43 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8919
  %startofsy = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %43, i32 0, i32 6, !dbg !8920
  %44 = load i32, i32* %startofsy, align 4, !dbg !8920
  %45 = load i16, i16* %dy, align 2, !dbg !8921
  %conv52 = sext i16 %45 to i32, !dbg !8921
  %add53 = add nsw i32 %44, %conv52, !dbg !8922
  %46 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8923
  %ofsy = getelementptr inbounds %struct.Panel, %struct.Panel* %46, i32 0, i32 8, !dbg !8924
  store i32 %add53, i32* %ofsy, align 4, !dbg !8925
  br label %if.end64, !dbg !8926

if.else:                                          ; preds = %if.end
  %47 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8927
  %snap = getelementptr inbounds %struct.Panel, %struct.Panel* %47, i32 0, i32 16, !dbg !8929
  store i16 0, i16* %snap, align 2, !dbg !8930
  %48 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8931
  %startofsx = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %48, i32 0, i32 5, !dbg !8932
  %49 = load i32, i32* %startofsx, align 8, !dbg !8932
  %50 = load i16, i16* %dx, align 2, !dbg !8933
  %conv54 = sext i16 %50 to i32, !dbg !8933
  %add55 = add nsw i32 %49, %conv54, !dbg !8934
  %51 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8935
  %ofsx = getelementptr inbounds %struct.Panel, %struct.Panel* %51, i32 0, i32 7, !dbg !8936
  store i32 %add55, i32* %ofsx, align 8, !dbg !8937
  %52 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8938
  %startofsy56 = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %52, i32 0, i32 6, !dbg !8939
  %53 = load i32, i32* %startofsy56, align 4, !dbg !8939
  %54 = load i16, i16* %dy, align 2, !dbg !8940
  %conv57 = sext i16 %54 to i32, !dbg !8940
  %add58 = add nsw i32 %53, %conv57, !dbg !8941
  %55 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8942
  %ofsy59 = getelementptr inbounds %struct.Panel, %struct.Panel* %55, i32 0, i32 8, !dbg !8943
  store i32 %add58, i32* %ofsy59, align 4, !dbg !8944
  %56 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8945
  %57 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8946
  call void @check_panel_overlap(%struct.ARegion* %56, %struct.Panel* %57), !dbg !8947
  %58 = load i16, i16* %align, align 2, !dbg !8948
  %tobool60 = icmp ne i16 %58, 0, !dbg !8948
  br i1 %tobool60, label %if.then61, label %if.end63, !dbg !8950

if.then61:                                        ; preds = %if.else
  %59 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8951
  %60 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8952
  %call62 = call zeroext i8 @uiAlignPanelStep(%struct.ScrArea* %59, %struct.ARegion* %60, float 0x3FC99999A0000000, i8 zeroext 1), !dbg !8953
  br label %if.end63, !dbg !8953

if.end63:                                         ; preds = %if.then61, %if.else
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end48
  %61 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8954
  call void @ED_region_tag_redraw(%struct.ARegion* %61), !dbg !8955
  br label %return, !dbg !8956

return:                                           ; preds = %if.end64, %if.then
  ret void, !dbg !8956
}

; Function Attrs: noinline nounwind uwtable
define internal void @ui_do_animate(%struct.bContext* %C, %struct.Panel* %panel) #0 !dbg !8957 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %panel.addr = alloca %struct.Panel*, align 8
  %data = alloca %struct.uiHandlePanelData*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %fac = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8960, metadata !DIExpression()), !dbg !8961
  store %struct.Panel* %panel, %struct.Panel** %panel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Panel** %panel.addr, metadata !8962, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.declare(metadata %struct.uiHandlePanelData** %data, metadata !8964, metadata !DIExpression()), !dbg !8965
  %0 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !8966
  %activedata = getelementptr inbounds %struct.Panel, %struct.Panel* %0, i32 0, i32 19, !dbg !8967
  %1 = load i8*, i8** %activedata, align 8, !dbg !8967
  %2 = bitcast i8* %1 to %struct.uiHandlePanelData*, !dbg !8966
  store %struct.uiHandlePanelData* %2, %struct.uiHandlePanelData** %data, align 8, !dbg !8965
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !8968, metadata !DIExpression()), !dbg !8969
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8970
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %3), !dbg !8971
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !8969
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8972, metadata !DIExpression()), !dbg !8973
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8974
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %4), !dbg !8975
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !8973
  call void @llvm.dbg.declare(metadata float* %fac, metadata !8976, metadata !DIExpression()), !dbg !8977
  %call2 = call double @PIL_check_seconds_timer(), !dbg !8978
  %5 = load %struct.uiHandlePanelData*, %struct.uiHandlePanelData** %data, align 8, !dbg !8979
  %starttime = getelementptr inbounds %struct.uiHandlePanelData, %struct.uiHandlePanelData* %5, i32 0, i32 2, !dbg !8980
  %6 = load double, double* %starttime, align 8, !dbg !8980
  %sub = fsub double %call2, %6, !dbg !8981
  %div = fdiv double %sub, 3.000000e-01, !dbg !8982
  %conv = fptrunc double %div to float, !dbg !8983
  store float %conv, float* %fac, align 4, !dbg !8984
  %7 = load float, float* %fac, align 4, !dbg !8985
  %call3 = call float @sqrtf(float %7) #7, !dbg !8986
  %call4 = call float @min_ff(float %call3, float 1.000000e+00), !dbg !8987
  store float %call4, float* %fac, align 4, !dbg !8988
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8989
  %9 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8991
  %10 = load float, float* %fac, align 4, !dbg !8992
  %call5 = call zeroext i8 @uiAlignPanelStep(%struct.ScrArea* %8, %struct.ARegion* %9, float %10, i8 zeroext 0), !dbg !8993
  %tobool = icmp ne i8 %call5, 0, !dbg !8993
  br i1 %tobool, label %if.then, label %if.else, !dbg !8994

if.then:                                          ; preds = %entry
  %11 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8995
  call void @ED_region_tag_redraw(%struct.ARegion* %11), !dbg !8997
  br label %if.end, !dbg !8998

if.else:                                          ; preds = %entry
  store float 1.000000e+00, float* %fac, align 4, !dbg !8999
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load float, float* %fac, align 4, !dbg !9001
  %cmp = fcmp oge float %12, 1.000000e+00, !dbg !9003
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !9004

if.then7:                                         ; preds = %if.end
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9005
  %14 = load %struct.Panel*, %struct.Panel** %panel.addr, align 8, !dbg !9007
  call void @panel_activate_state(%struct.bContext* %13, %struct.Panel* %14, i32 4), !dbg !9008
  br label %if.end8, !dbg !9009

if.end8:                                          ; preds = %if.then7, %if.end
  ret void, !dbg !9010
}

declare dso_local zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti*, i32*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @BLI_rcti_size_x(%struct.rcti* %rct) #0 !dbg !9011 {
entry:
  %rct.addr = alloca %struct.rcti*, align 8
  store %struct.rcti* %rct, %struct.rcti** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rct.addr, metadata !9012, metadata !DIExpression()), !dbg !9013
  %0 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !9014
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %0, i32 0, i32 1, !dbg !9015
  %1 = load i32, i32* %xmax, align 4, !dbg !9015
  %2 = load %struct.rcti*, %struct.rcti** %rct.addr, align 8, !dbg !9016
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 0, !dbg !9017
  %3 = load i32, i32* %xmin, align 4, !dbg !9017
  %sub = sub nsw i32 %1, %3, !dbg !9018
  ret i32 %sub, !dbg !9019
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !9020 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !9023, metadata !DIExpression()), !dbg !9024
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !9025, metadata !DIExpression()), !dbg !9026
  %0 = load float, float* %a.addr, align 4, !dbg !9027
  %1 = load float, float* %b.addr, align 4, !dbg !9028
  %cmp = fcmp olt float %0, %1, !dbg !9029
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9030

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !9031
  br label %cond.end, !dbg !9030

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !9032
  br label %cond.end, !dbg !9030

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !9030
  ret float %cond, !dbg !9033
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #5

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3376, !3377, !3378}
!llvm.ident = !{!3379}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !1378, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/editors/interface/interface_panel.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !14, !21, !30, !226, !1075, !1083, !1090, !1136, !1143, !1344, !1368}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 426, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13}
!7 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_NONE", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "UI_BLOCK_BOUNDS", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_TEXT", value: 2, isUnsigned: true)
!10 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_MOUSE", value: 3, isUnsigned: true)
!11 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_MENU", value: 4, isUnsigned: true)
!12 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_POPUP_CENTER", value: 5, isUnsigned: true)
!13 = !DIEnumerator(name: "UI_BLOCK_BOUNDS_PIE_CENTER", value: 6, isUnsigned: true)
!14 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpaceButtons_Align", file: !15, line: 215, baseType: !5, size: 32, elements: !16)
!15 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!16 = !{!17, !18, !19, !20}
!17 = !DIEnumerator(name: "BUT_FREE", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "BUT_HORIZONTAL", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "BUT_VERTICAL", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "BUT_AUTO", value: 3, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !22, line: 299, baseType: !5, size: 32, elements: !23)
!22 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!23 = !{!24, !25, !26, !27, !28, !29}
!24 = !DIEnumerator(name: "PNL_SELECT", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "PNL_CLOSEDX", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "PNL_CLOSEDY", value: 4, isUnsigned: true)
!27 = !DIEnumerator(name: "PNL_CLOSED", value: 6, isUnsigned: true)
!28 = !DIEnumerator(name: "PNL_OVERLAP", value: 16, isUnsigned: true)
!29 = !DIEnumerator(name: "PNL_PIN", value: 32, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !31, line: 54, baseType: !5, size: 32, elements: !32)
!31 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!32 = !{!33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225}
!33 = !DIEnumerator(name: "TH_REDALERT", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "TH_THEMEUI", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "TH_BACK", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "TH_TEXT", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "TH_TEXT_HI", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "TH_TITLE", value: 5, isUnsigned: true)
!39 = !DIEnumerator(name: "TH_TAB_ACTIVE", value: 6, isUnsigned: true)
!40 = !DIEnumerator(name: "TH_TAB_INACTIVE", value: 7, isUnsigned: true)
!41 = !DIEnumerator(name: "TH_TAB_BACK", value: 8, isUnsigned: true)
!42 = !DIEnumerator(name: "TH_TAB_OUTLINE", value: 9, isUnsigned: true)
!43 = !DIEnumerator(name: "TH_HEADER", value: 10, isUnsigned: true)
!44 = !DIEnumerator(name: "TH_HEADERDESEL", value: 11, isUnsigned: true)
!45 = !DIEnumerator(name: "TH_HEADER_TEXT", value: 12, isUnsigned: true)
!46 = !DIEnumerator(name: "TH_HEADER_TEXT_HI", value: 13, isUnsigned: true)
!47 = !DIEnumerator(name: "TH_PANEL_HEADER", value: 14, isUnsigned: true)
!48 = !DIEnumerator(name: "TH_PANEL_BACK", value: 15, isUnsigned: true)
!49 = !DIEnumerator(name: "TH_PANEL_SHOW_HEADER", value: 16, isUnsigned: true)
!50 = !DIEnumerator(name: "TH_PANEL_SHOW_BACK", value: 17, isUnsigned: true)
!51 = !DIEnumerator(name: "TH_BUTBACK", value: 18, isUnsigned: true)
!52 = !DIEnumerator(name: "TH_BUTBACK_TEXT", value: 19, isUnsigned: true)
!53 = !DIEnumerator(name: "TH_BUTBACK_TEXT_HI", value: 20, isUnsigned: true)
!54 = !DIEnumerator(name: "TH_SHADE1", value: 21, isUnsigned: true)
!55 = !DIEnumerator(name: "TH_SHADE2", value: 22, isUnsigned: true)
!56 = !DIEnumerator(name: "TH_HILITE", value: 23, isUnsigned: true)
!57 = !DIEnumerator(name: "TH_GRID", value: 24, isUnsigned: true)
!58 = !DIEnumerator(name: "TH_WIRE", value: 25, isUnsigned: true)
!59 = !DIEnumerator(name: "TH_WIRE_INNER", value: 26, isUnsigned: true)
!60 = !DIEnumerator(name: "TH_WIRE_EDIT", value: 27, isUnsigned: true)
!61 = !DIEnumerator(name: "TH_SELECT", value: 28, isUnsigned: true)
!62 = !DIEnumerator(name: "TH_ACTIVE", value: 29, isUnsigned: true)
!63 = !DIEnumerator(name: "TH_GROUP", value: 30, isUnsigned: true)
!64 = !DIEnumerator(name: "TH_GROUP_ACTIVE", value: 31, isUnsigned: true)
!65 = !DIEnumerator(name: "TH_TRANSFORM", value: 32, isUnsigned: true)
!66 = !DIEnumerator(name: "TH_VERTEX", value: 33, isUnsigned: true)
!67 = !DIEnumerator(name: "TH_VERTEX_SELECT", value: 34, isUnsigned: true)
!68 = !DIEnumerator(name: "TH_VERTEX_UNREFERENCED", value: 35, isUnsigned: true)
!69 = !DIEnumerator(name: "TH_VERTEX_SIZE", value: 36, isUnsigned: true)
!70 = !DIEnumerator(name: "TH_OUTLINE_WIDTH", value: 37, isUnsigned: true)
!71 = !DIEnumerator(name: "TH_EDGE", value: 38, isUnsigned: true)
!72 = !DIEnumerator(name: "TH_EDGE_SELECT", value: 39, isUnsigned: true)
!73 = !DIEnumerator(name: "TH_EDGE_SEAM", value: 40, isUnsigned: true)
!74 = !DIEnumerator(name: "TH_EDGE_FACESEL", value: 41, isUnsigned: true)
!75 = !DIEnumerator(name: "TH_FACE", value: 42, isUnsigned: true)
!76 = !DIEnumerator(name: "TH_FACE_SELECT", value: 43, isUnsigned: true)
!77 = !DIEnumerator(name: "TH_NORMAL", value: 44, isUnsigned: true)
!78 = !DIEnumerator(name: "TH_VNORMAL", value: 45, isUnsigned: true)
!79 = !DIEnumerator(name: "TH_LNORMAL", value: 46, isUnsigned: true)
!80 = !DIEnumerator(name: "TH_FACE_DOT", value: 47, isUnsigned: true)
!81 = !DIEnumerator(name: "TH_FACEDOT_SIZE", value: 48, isUnsigned: true)
!82 = !DIEnumerator(name: "TH_CFRAME", value: 49, isUnsigned: true)
!83 = !DIEnumerator(name: "TH_NURB_ULINE", value: 50, isUnsigned: true)
!84 = !DIEnumerator(name: "TH_NURB_VLINE", value: 51, isUnsigned: true)
!85 = !DIEnumerator(name: "TH_NURB_SEL_ULINE", value: 52, isUnsigned: true)
!86 = !DIEnumerator(name: "TH_NURB_SEL_VLINE", value: 53, isUnsigned: true)
!87 = !DIEnumerator(name: "TH_HANDLE_FREE", value: 54, isUnsigned: true)
!88 = !DIEnumerator(name: "TH_HANDLE_AUTO", value: 55, isUnsigned: true)
!89 = !DIEnumerator(name: "TH_HANDLE_VECT", value: 56, isUnsigned: true)
!90 = !DIEnumerator(name: "TH_HANDLE_ALIGN", value: 57, isUnsigned: true)
!91 = !DIEnumerator(name: "TH_HANDLE_AUTOCLAMP", value: 58, isUnsigned: true)
!92 = !DIEnumerator(name: "TH_HANDLE_SEL_FREE", value: 59, isUnsigned: true)
!93 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTO", value: 60, isUnsigned: true)
!94 = !DIEnumerator(name: "TH_HANDLE_SEL_VECT", value: 61, isUnsigned: true)
!95 = !DIEnumerator(name: "TH_HANDLE_SEL_ALIGN", value: 62, isUnsigned: true)
!96 = !DIEnumerator(name: "TH_HANDLE_SEL_AUTOCLAMP", value: 63, isUnsigned: true)
!97 = !DIEnumerator(name: "TH_ACTIVE_SPLINE", value: 64, isUnsigned: true)
!98 = !DIEnumerator(name: "TH_ACTIVE_VERT", value: 65, isUnsigned: true)
!99 = !DIEnumerator(name: "TH_SYNTAX_B", value: 66, isUnsigned: true)
!100 = !DIEnumerator(name: "TH_SYNTAX_V", value: 67, isUnsigned: true)
!101 = !DIEnumerator(name: "TH_SYNTAX_R", value: 68, isUnsigned: true)
!102 = !DIEnumerator(name: "TH_SYNTAX_C", value: 69, isUnsigned: true)
!103 = !DIEnumerator(name: "TH_SYNTAX_L", value: 70, isUnsigned: true)
!104 = !DIEnumerator(name: "TH_SYNTAX_D", value: 71, isUnsigned: true)
!105 = !DIEnumerator(name: "TH_SYNTAX_N", value: 72, isUnsigned: true)
!106 = !DIEnumerator(name: "TH_SYNTAX_S", value: 73, isUnsigned: true)
!107 = !DIEnumerator(name: "TH_BONE_SOLID", value: 74, isUnsigned: true)
!108 = !DIEnumerator(name: "TH_BONE_POSE", value: 75, isUnsigned: true)
!109 = !DIEnumerator(name: "TH_BONE_POSE_ACTIVE", value: 76, isUnsigned: true)
!110 = !DIEnumerator(name: "TH_STRIP", value: 77, isUnsigned: true)
!111 = !DIEnumerator(name: "TH_STRIP_SELECT", value: 78, isUnsigned: true)
!112 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME", value: 79, isUnsigned: true)
!113 = !DIEnumerator(name: "TH_KEYTYPE_KEYFRAME_SELECT", value: 80, isUnsigned: true)
!114 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME", value: 81, isUnsigned: true)
!115 = !DIEnumerator(name: "TH_KEYTYPE_EXTREME_SELECT", value: 82, isUnsigned: true)
!116 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN", value: 83, isUnsigned: true)
!117 = !DIEnumerator(name: "TH_KEYTYPE_BREAKDOWN_SELECT", value: 84, isUnsigned: true)
!118 = !DIEnumerator(name: "TH_KEYTYPE_JITTER", value: 85, isUnsigned: true)
!119 = !DIEnumerator(name: "TH_KEYTYPE_JITTER_SELECT", value: 86, isUnsigned: true)
!120 = !DIEnumerator(name: "TH_KEYBORDER", value: 87, isUnsigned: true)
!121 = !DIEnumerator(name: "TH_KEYBORDER_SELECT", value: 88, isUnsigned: true)
!122 = !DIEnumerator(name: "TH_LAMP", value: 89, isUnsigned: true)
!123 = !DIEnumerator(name: "TH_SPEAKER", value: 90, isUnsigned: true)
!124 = !DIEnumerator(name: "TH_CAMERA", value: 91, isUnsigned: true)
!125 = !DIEnumerator(name: "TH_EMPTY", value: 92, isUnsigned: true)
!126 = !DIEnumerator(name: "TH_NODE", value: 93, isUnsigned: true)
!127 = !DIEnumerator(name: "TH_NODE_INPUT", value: 94, isUnsigned: true)
!128 = !DIEnumerator(name: "TH_NODE_OUTPUT", value: 95, isUnsigned: true)
!129 = !DIEnumerator(name: "TH_NODE_COLOR", value: 96, isUnsigned: true)
!130 = !DIEnumerator(name: "TH_NODE_FILTER", value: 97, isUnsigned: true)
!131 = !DIEnumerator(name: "TH_NODE_VECTOR", value: 98, isUnsigned: true)
!132 = !DIEnumerator(name: "TH_NODE_TEXTURE", value: 99, isUnsigned: true)
!133 = !DIEnumerator(name: "TH_NODE_PATTERN", value: 100, isUnsigned: true)
!134 = !DIEnumerator(name: "TH_NODE_SCRIPT", value: 101, isUnsigned: true)
!135 = !DIEnumerator(name: "TH_NODE_LAYOUT", value: 102, isUnsigned: true)
!136 = !DIEnumerator(name: "TH_NODE_SHADER", value: 103, isUnsigned: true)
!137 = !DIEnumerator(name: "TH_NODE_INTERFACE", value: 104, isUnsigned: true)
!138 = !DIEnumerator(name: "TH_NODE_CONVERTOR", value: 105, isUnsigned: true)
!139 = !DIEnumerator(name: "TH_NODE_GROUP", value: 106, isUnsigned: true)
!140 = !DIEnumerator(name: "TH_NODE_FRAME", value: 107, isUnsigned: true)
!141 = !DIEnumerator(name: "TH_NODE_MATTE", value: 108, isUnsigned: true)
!142 = !DIEnumerator(name: "TH_NODE_DISTORT", value: 109, isUnsigned: true)
!143 = !DIEnumerator(name: "TH_CONSOLE_OUTPUT", value: 110, isUnsigned: true)
!144 = !DIEnumerator(name: "TH_CONSOLE_INPUT", value: 111, isUnsigned: true)
!145 = !DIEnumerator(name: "TH_CONSOLE_INFO", value: 112, isUnsigned: true)
!146 = !DIEnumerator(name: "TH_CONSOLE_ERROR", value: 113, isUnsigned: true)
!147 = !DIEnumerator(name: "TH_CONSOLE_CURSOR", value: 114, isUnsigned: true)
!148 = !DIEnumerator(name: "TH_CONSOLE_SELECT", value: 115, isUnsigned: true)
!149 = !DIEnumerator(name: "TH_SEQ_MOVIE", value: 116, isUnsigned: true)
!150 = !DIEnumerator(name: "TH_SEQ_MOVIECLIP", value: 117, isUnsigned: true)
!151 = !DIEnumerator(name: "TH_SEQ_MASK", value: 118, isUnsigned: true)
!152 = !DIEnumerator(name: "TH_SEQ_IMAGE", value: 119, isUnsigned: true)
!153 = !DIEnumerator(name: "TH_SEQ_SCENE", value: 120, isUnsigned: true)
!154 = !DIEnumerator(name: "TH_SEQ_AUDIO", value: 121, isUnsigned: true)
!155 = !DIEnumerator(name: "TH_SEQ_EFFECT", value: 122, isUnsigned: true)
!156 = !DIEnumerator(name: "TH_SEQ_TRANSITION", value: 123, isUnsigned: true)
!157 = !DIEnumerator(name: "TH_SEQ_META", value: 124, isUnsigned: true)
!158 = !DIEnumerator(name: "TH_SEQ_PREVIEW", value: 125, isUnsigned: true)
!159 = !DIEnumerator(name: "TH_EDGE_SHARP", value: 126, isUnsigned: true)
!160 = !DIEnumerator(name: "TH_EDITMESH_ACTIVE", value: 127, isUnsigned: true)
!161 = !DIEnumerator(name: "TH_HANDLE_VERTEX", value: 128, isUnsigned: true)
!162 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SELECT", value: 129, isUnsigned: true)
!163 = !DIEnumerator(name: "TH_HANDLE_VERTEX_SIZE", value: 130, isUnsigned: true)
!164 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELOB", value: 131, isUnsigned: true)
!165 = !DIEnumerator(name: "TH_DOPESHEET_CHANNELSUBOB", value: 132, isUnsigned: true)
!166 = !DIEnumerator(name: "TH_PREVIEW_BACK", value: 133, isUnsigned: true)
!167 = !DIEnumerator(name: "TH_EDGE_CREASE", value: 134, isUnsigned: true)
!168 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGELEN", value: 135, isUnsigned: true)
!169 = !DIEnumerator(name: "TH_DRAWEXTRA_EDGEANG", value: 136, isUnsigned: true)
!170 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEAREA", value: 137, isUnsigned: true)
!171 = !DIEnumerator(name: "TH_DRAWEXTRA_FACEANG", value: 138, isUnsigned: true)
!172 = !DIEnumerator(name: "TH_NODE_CURVING", value: 139, isUnsigned: true)
!173 = !DIEnumerator(name: "TH_MARKER_OUTLINE", value: 140, isUnsigned: true)
!174 = !DIEnumerator(name: "TH_MARKER", value: 141, isUnsigned: true)
!175 = !DIEnumerator(name: "TH_ACT_MARKER", value: 142, isUnsigned: true)
!176 = !DIEnumerator(name: "TH_SEL_MARKER", value: 143, isUnsigned: true)
!177 = !DIEnumerator(name: "TH_BUNDLE_SOLID", value: 144, isUnsigned: true)
!178 = !DIEnumerator(name: "TH_DIS_MARKER", value: 145, isUnsigned: true)
!179 = !DIEnumerator(name: "TH_PATH_BEFORE", value: 146, isUnsigned: true)
!180 = !DIEnumerator(name: "TH_PATH_AFTER", value: 147, isUnsigned: true)
!181 = !DIEnumerator(name: "TH_CAMERA_PATH", value: 148, isUnsigned: true)
!182 = !DIEnumerator(name: "TH_LOCK_MARKER", value: 149, isUnsigned: true)
!183 = !DIEnumerator(name: "TH_STITCH_PREVIEW_FACE", value: 150, isUnsigned: true)
!184 = !DIEnumerator(name: "TH_STITCH_PREVIEW_EDGE", value: 151, isUnsigned: true)
!185 = !DIEnumerator(name: "TH_STITCH_PREVIEW_VERT", value: 152, isUnsigned: true)
!186 = !DIEnumerator(name: "TH_STITCH_PREVIEW_STITCHABLE", value: 153, isUnsigned: true)
!187 = !DIEnumerator(name: "TH_STITCH_PREVIEW_UNSTITCHABLE", value: 154, isUnsigned: true)
!188 = !DIEnumerator(name: "TH_STITCH_PREVIEW_ACTIVE", value: 155, isUnsigned: true)
!189 = !DIEnumerator(name: "TH_PAINT_CURVE_HANDLE", value: 156, isUnsigned: true)
!190 = !DIEnumerator(name: "TH_PAINT_CURVE_PIVOT", value: 157, isUnsigned: true)
!191 = !DIEnumerator(name: "TH_UV_SHADOW", value: 158, isUnsigned: true)
!192 = !DIEnumerator(name: "TH_UV_OTHERS", value: 159, isUnsigned: true)
!193 = !DIEnumerator(name: "TH_FREESTYLE_EDGE_MARK", value: 160, isUnsigned: true)
!194 = !DIEnumerator(name: "TH_FREESTYLE_FACE_MARK", value: 161, isUnsigned: true)
!195 = !DIEnumerator(name: "TH_MATCH", value: 162, isUnsigned: true)
!196 = !DIEnumerator(name: "TH_SELECT_HIGHLIGHT", value: 163, isUnsigned: true)
!197 = !DIEnumerator(name: "TH_SKIN_ROOT", value: 164, isUnsigned: true)
!198 = !DIEnumerator(name: "TH_ANIM_ACTIVE", value: 165, isUnsigned: true)
!199 = !DIEnumerator(name: "TH_ANIM_INACTIVE", value: 166, isUnsigned: true)
!200 = !DIEnumerator(name: "TH_NLA_TWEAK", value: 167, isUnsigned: true)
!201 = !DIEnumerator(name: "TH_NLA_TWEAK_DUPLI", value: 168, isUnsigned: true)
!202 = !DIEnumerator(name: "TH_NLA_TRANSITION", value: 169, isUnsigned: true)
!203 = !DIEnumerator(name: "TH_NLA_TRANSITION_SEL", value: 170, isUnsigned: true)
!204 = !DIEnumerator(name: "TH_NLA_META", value: 171, isUnsigned: true)
!205 = !DIEnumerator(name: "TH_NLA_META_SEL", value: 172, isUnsigned: true)
!206 = !DIEnumerator(name: "TH_NLA_SOUND", value: 173, isUnsigned: true)
!207 = !DIEnumerator(name: "TH_NLA_SOUND_SEL", value: 174, isUnsigned: true)
!208 = !DIEnumerator(name: "TH_EMBOSS", value: 175, isUnsigned: true)
!209 = !DIEnumerator(name: "TH_AXIS_X", value: 176, isUnsigned: true)
!210 = !DIEnumerator(name: "TH_AXIS_Y", value: 177, isUnsigned: true)
!211 = !DIEnumerator(name: "TH_AXIS_Z", value: 178, isUnsigned: true)
!212 = !DIEnumerator(name: "TH_LOW_GRAD", value: 179, isUnsigned: true)
!213 = !DIEnumerator(name: "TH_HIGH_GRAD", value: 180, isUnsigned: true)
!214 = !DIEnumerator(name: "TH_SHOW_BACK_GRAD", value: 181, isUnsigned: true)
!215 = !DIEnumerator(name: "TH_INFO_SELECTED", value: 182, isUnsigned: true)
!216 = !DIEnumerator(name: "TH_INFO_SELECTED_TEXT", value: 183, isUnsigned: true)
!217 = !DIEnumerator(name: "TH_INFO_ERROR", value: 184, isUnsigned: true)
!218 = !DIEnumerator(name: "TH_INFO_ERROR_TEXT", value: 185, isUnsigned: true)
!219 = !DIEnumerator(name: "TH_INFO_WARNING", value: 186, isUnsigned: true)
!220 = !DIEnumerator(name: "TH_INFO_WARNING_TEXT", value: 187, isUnsigned: true)
!221 = !DIEnumerator(name: "TH_INFO_INFO", value: 188, isUnsigned: true)
!222 = !DIEnumerator(name: "TH_INFO_INFO_TEXT", value: 189, isUnsigned: true)
!223 = !DIEnumerator(name: "TH_INFO_DEBUG", value: 190, isUnsigned: true)
!224 = !DIEnumerator(name: "TH_INFO_DEBUG_TEXT", value: 191, isUnsigned: true)
!225 = !DIEnumerator(name: "TH_VIEW_OVERLAY", value: 192, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !31, line: 40, baseType: !5, size: 32, elements: !227)
!227 = !{!228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074}
!228 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!229 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!230 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!231 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!232 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!233 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!234 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!235 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!236 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!237 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!238 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!239 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!240 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!241 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!242 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!243 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!244 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!245 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!246 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!247 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!248 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!249 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!250 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!251 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!252 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!253 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!254 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!255 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!256 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!257 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!258 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!259 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!260 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!261 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!262 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!263 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!264 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!265 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!266 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!267 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!268 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!269 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!270 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!271 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!272 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!273 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!274 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!275 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!276 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!277 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!278 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!279 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!280 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!281 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!282 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!283 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!284 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!285 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!286 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!287 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!288 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!289 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!290 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!291 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!292 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!293 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!294 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!295 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!296 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!297 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!298 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!299 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!300 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!301 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!302 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!303 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!304 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!305 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!306 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!307 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!308 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!309 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!310 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!311 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!312 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!313 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!314 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!315 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!316 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!317 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!318 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!319 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!320 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!321 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!322 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!323 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!324 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!325 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!326 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!327 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!328 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!329 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!330 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!331 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!332 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!333 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!334 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!335 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!336 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!337 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!338 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!339 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!340 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!341 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!342 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!343 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!344 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!345 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!346 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!347 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!348 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!349 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!350 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!351 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!352 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!353 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!354 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!355 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!356 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!357 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!358 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!359 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!360 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!361 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!362 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!363 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!364 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!365 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!366 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!367 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!368 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!369 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!370 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!371 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!372 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!373 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!374 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!375 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!376 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!377 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!378 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!379 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!380 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!381 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!382 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!383 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!384 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!385 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!386 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!387 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!388 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!389 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!390 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!391 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!392 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!393 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!394 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!395 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!396 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!397 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!398 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!399 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!400 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!401 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!402 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!403 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!404 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!405 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!406 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!407 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!408 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!409 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!410 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!411 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!412 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!413 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!414 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!415 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!416 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!417 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!418 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!419 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!420 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!421 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!422 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!423 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!424 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!425 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!426 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!427 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!428 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!429 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!430 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!431 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!432 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!433 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!434 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!435 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!436 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!437 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!438 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!439 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!440 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!441 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!442 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!443 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!444 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!445 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!446 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!447 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!448 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!449 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!450 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!451 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!452 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!453 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!454 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!455 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!456 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!457 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!458 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!459 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!460 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!461 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!462 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!463 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!464 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!465 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!466 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!467 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!468 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!469 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!470 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!471 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!472 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!473 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!474 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!475 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!476 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!477 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!478 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!479 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!480 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!481 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!482 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!483 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!484 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!485 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!486 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!487 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!488 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!489 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!490 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!491 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!492 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!493 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!494 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!495 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!496 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!497 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!498 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!499 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!500 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!501 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!502 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!503 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!504 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!505 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!506 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!507 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!508 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!509 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!510 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!511 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!512 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!513 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!514 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!515 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!516 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!517 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!518 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!519 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!520 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!521 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!522 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!523 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!524 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!525 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!526 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!527 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!528 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!529 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!530 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!531 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!532 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!533 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!534 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!535 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!536 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!537 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!538 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!539 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!540 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!541 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!542 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!543 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!544 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!545 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!546 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!547 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!548 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!549 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!550 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!551 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!552 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!553 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!554 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!555 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!556 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!557 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!558 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!559 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!560 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!561 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!562 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!563 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!564 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!565 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!566 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!567 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!568 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!569 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!570 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!571 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!572 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!573 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!574 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!575 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!576 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!577 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!578 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!579 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!580 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!581 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!582 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!583 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!584 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!585 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!586 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!587 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!588 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!589 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!590 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!591 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!592 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!593 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!594 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!595 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!596 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!597 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!598 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!599 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!600 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!601 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!602 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!603 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!604 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!605 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!606 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!607 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!608 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!609 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!610 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!611 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!612 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!613 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!614 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!615 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!616 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!617 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!618 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!619 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!620 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!621 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!622 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!623 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!624 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!625 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!626 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!627 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!628 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!629 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!630 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!631 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!632 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!633 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!634 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!635 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!636 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!637 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!638 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!639 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!640 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!641 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!642 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!643 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!644 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!645 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!646 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!647 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!648 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!649 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!650 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!651 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!652 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!653 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!654 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!655 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!656 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!657 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!658 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!659 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!660 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!661 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!662 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!663 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!664 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!665 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!666 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!667 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!668 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!669 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!670 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!671 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!672 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!673 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!899 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!900 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!901 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!902 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!903 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!904 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!905 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!906 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!907 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!908 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!909 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!910 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!911 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!912 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!913 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!914 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!915 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!916 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!917 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!918 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!919 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!920 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!921 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!922 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!923 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!924 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!925 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!926 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!927 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!928 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!929 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!930 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!931 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!932 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!933 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!934 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!935 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!936 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!937 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!938 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!939 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!940 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!941 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!942 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!943 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!944 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!945 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!946 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!947 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!948 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!949 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!950 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!951 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!952 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!953 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!954 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!955 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!956 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!957 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!958 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!959 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!960 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!961 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!962 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!963 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!964 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!965 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!966 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!967 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!968 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!969 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!970 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!971 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!972 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!973 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!974 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!975 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!976 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!977 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!978 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!979 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!980 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!981 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!982 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!983 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!984 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!985 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!986 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!987 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!988 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!989 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!990 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!991 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!992 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!993 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!994 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!995 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!996 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!997 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!998 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!999 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!1000 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!1001 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!1002 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!1003 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!1004 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!1005 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!1006 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!1007 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!1008 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!1009 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!1010 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!1011 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!1012 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!1013 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!1014 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!1015 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!1016 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!1017 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!1018 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!1019 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!1020 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!1021 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!1022 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!1023 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!1024 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!1025 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!1026 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!1027 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!1028 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!1029 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!1030 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!1031 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!1032 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!1033 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!1034 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!1035 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!1036 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!1037 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!1038 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!1039 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!1040 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!1041 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!1042 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!1043 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!1044 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!1045 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!1046 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!1047 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!1048 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!1049 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!1050 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!1051 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!1052 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!1053 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!1054 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!1055 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!1056 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!1057 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!1058 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!1059 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!1060 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!1061 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!1062 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!1063 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!1064 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!1065 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!1066 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!1067 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!1068 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!1069 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!1070 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!1071 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!1072 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!1073 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!1074 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!1075 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 787, baseType: !5, size: 32, elements: !1076)
!1076 = !{!1077, !1078, !1079, !1080, !1081, !1082}
!1077 = !DIEnumerator(name: "UI_CNR_TOP_LEFT", value: 1, isUnsigned: true)
!1078 = !DIEnumerator(name: "UI_CNR_TOP_RIGHT", value: 2, isUnsigned: true)
!1079 = !DIEnumerator(name: "UI_CNR_BOTTOM_RIGHT", value: 4, isUnsigned: true)
!1080 = !DIEnumerator(name: "UI_CNR_BOTTOM_LEFT", value: 8, isUnsigned: true)
!1081 = !DIEnumerator(name: "UI_CNR_NONE", value: 0, isUnsigned: true)
!1082 = !DIEnumerator(name: "UI_CNR_ALL", value: 15, isUnsigned: true)
!1083 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uiHandlePanelState", file: !1, line: 85, baseType: !5, size: 32, elements: !1084)
!1084 = !{!1085, !1086, !1087, !1088, !1089}
!1085 = !DIEnumerator(name: "PANEL_STATE_DRAG", value: 0, isUnsigned: true)
!1086 = !DIEnumerator(name: "PANEL_STATE_DRAG_SCALE", value: 1, isUnsigned: true)
!1087 = !DIEnumerator(name: "PANEL_STATE_WAIT_UNTAB", value: 2, isUnsigned: true)
!1088 = !DIEnumerator(name: "PANEL_STATE_ANIMATION", value: 3, isUnsigned: true)
!1089 = !DIEnumerator(name: "PANEL_STATE_EXIT", value: 4, isUnsigned: true)
!1090 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 236, baseType: !5, size: 32, elements: !1091)
!1091 = !{!1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135}
!1092 = !DIEnumerator(name: "BUT", value: 512, isUnsigned: true)
!1093 = !DIEnumerator(name: "ROW", value: 1024, isUnsigned: true)
!1094 = !DIEnumerator(name: "TOG", value: 1536, isUnsigned: true)
!1095 = !DIEnumerator(name: "NUM", value: 2560, isUnsigned: true)
!1096 = !DIEnumerator(name: "TEX", value: 3072, isUnsigned: true)
!1097 = !DIEnumerator(name: "TOGN", value: 4608, isUnsigned: true)
!1098 = !DIEnumerator(name: "LABEL", value: 5120, isUnsigned: true)
!1099 = !DIEnumerator(name: "MENU", value: 5632, isUnsigned: true)
!1100 = !DIEnumerator(name: "ICONTOG", value: 6656, isUnsigned: true)
!1101 = !DIEnumerator(name: "NUMSLI", value: 7168, isUnsigned: true)
!1102 = !DIEnumerator(name: "COLOR", value: 7680, isUnsigned: true)
!1103 = !DIEnumerator(name: "SCROLL", value: 9216, isUnsigned: true)
!1104 = !DIEnumerator(name: "BLOCK", value: 9728, isUnsigned: true)
!1105 = !DIEnumerator(name: "BUTM", value: 10240, isUnsigned: true)
!1106 = !DIEnumerator(name: "SEPR", value: 10752, isUnsigned: true)
!1107 = !DIEnumerator(name: "LINK", value: 11264, isUnsigned: true)
!1108 = !DIEnumerator(name: "INLINK", value: 11776, isUnsigned: true)
!1109 = !DIEnumerator(name: "KEYEVT", value: 12288, isUnsigned: true)
!1110 = !DIEnumerator(name: "HSVCUBE", value: 13312, isUnsigned: true)
!1111 = !DIEnumerator(name: "PULLDOWN", value: 13824, isUnsigned: true)
!1112 = !DIEnumerator(name: "ROUNDBOX", value: 14336, isUnsigned: true)
!1113 = !DIEnumerator(name: "BUT_COLORBAND", value: 15360, isUnsigned: true)
!1114 = !DIEnumerator(name: "BUT_NORMAL", value: 15872, isUnsigned: true)
!1115 = !DIEnumerator(name: "BUT_CURVE", value: 16384, isUnsigned: true)
!1116 = !DIEnumerator(name: "ICONTOGN", value: 17408, isUnsigned: true)
!1117 = !DIEnumerator(name: "LISTBOX", value: 17920, isUnsigned: true)
!1118 = !DIEnumerator(name: "LISTROW", value: 18432, isUnsigned: true)
!1119 = !DIEnumerator(name: "TOGBUT", value: 18944, isUnsigned: true)
!1120 = !DIEnumerator(name: "OPTION", value: 19456, isUnsigned: true)
!1121 = !DIEnumerator(name: "OPTIONN", value: 19968, isUnsigned: true)
!1122 = !DIEnumerator(name: "TRACKPREVIEW", value: 20480, isUnsigned: true)
!1123 = !DIEnumerator(name: "SEARCH_MENU", value: 20992, isUnsigned: true)
!1124 = !DIEnumerator(name: "BUT_EXTRA", value: 21504, isUnsigned: true)
!1125 = !DIEnumerator(name: "HSVCIRCLE", value: 22016, isUnsigned: true)
!1126 = !DIEnumerator(name: "HOTKEYEVT", value: 23552, isUnsigned: true)
!1127 = !DIEnumerator(name: "BUT_IMAGE", value: 24064, isUnsigned: true)
!1128 = !DIEnumerator(name: "HISTOGRAM", value: 24576, isUnsigned: true)
!1129 = !DIEnumerator(name: "WAVEFORM", value: 25088, isUnsigned: true)
!1130 = !DIEnumerator(name: "VECTORSCOPE", value: 25600, isUnsigned: true)
!1131 = !DIEnumerator(name: "PROGRESSBAR", value: 26112, isUnsigned: true)
!1132 = !DIEnumerator(name: "SEARCH_MENU_UNLINK", value: 26624, isUnsigned: true)
!1133 = !DIEnumerator(name: "NODESOCKET", value: 27136, isUnsigned: true)
!1134 = !DIEnumerator(name: "SEPRLINE", value: 27648, isUnsigned: true)
!1135 = !DIEnumerator(name: "GRIP", value: 28160, isUnsigned: true)
!1136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 223, baseType: !5, size: 32, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1141, !1142}
!1138 = !DIEnumerator(name: "UI_BUT_POIN_CHAR", value: 32, isUnsigned: true)
!1139 = !DIEnumerator(name: "UI_BUT_POIN_SHORT", value: 64, isUnsigned: true)
!1140 = !DIEnumerator(name: "UI_BUT_POIN_INT", value: 96, isUnsigned: true)
!1141 = !DIEnumerator(name: "UI_BUT_POIN_FLOAT", value: 128, isUnsigned: true)
!1142 = !DIEnumerator(name: "UI_BUT_POIN_BIT", value: 256, isUnsigned: true)
!1143 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1144, line: 54, baseType: !5, size: 32, elements: !1145)
!1144 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1145 = !{!1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343}
!1146 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!1147 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!1148 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!1149 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!1150 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!1151 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!1152 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!1153 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!1154 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!1155 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!1156 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!1157 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!1158 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!1159 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!1160 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!1161 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!1162 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!1163 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!1164 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!1165 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!1166 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!1167 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!1168 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!1169 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!1170 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!1171 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!1172 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!1173 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!1174 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!1175 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!1176 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!1177 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!1178 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!1179 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!1180 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!1181 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!1182 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!1183 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!1184 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!1185 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!1186 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!1187 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!1188 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!1189 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!1190 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!1191 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!1192 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!1193 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!1194 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!1195 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!1196 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!1197 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!1198 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!1199 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!1200 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!1201 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!1202 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!1203 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!1204 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!1205 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!1206 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!1207 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!1208 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!1209 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!1210 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!1211 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!1212 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!1213 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!1214 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!1215 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!1216 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!1217 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!1218 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!1219 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!1220 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!1221 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!1222 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!1223 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!1224 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!1225 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!1226 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!1227 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!1228 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!1229 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!1230 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!1231 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!1232 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!1233 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!1234 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!1235 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!1236 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!1237 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!1238 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!1239 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!1240 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!1241 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!1242 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!1243 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!1244 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!1245 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!1246 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!1247 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!1248 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!1249 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!1250 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!1251 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!1252 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!1253 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!1254 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!1255 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!1256 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!1257 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!1258 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!1259 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!1260 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!1261 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!1262 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!1263 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!1264 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!1265 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!1266 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!1267 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!1268 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!1269 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!1270 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!1271 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!1272 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!1273 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!1274 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!1275 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!1276 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!1277 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!1278 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!1279 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!1280 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!1281 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!1282 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!1283 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!1284 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!1285 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!1286 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!1287 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!1288 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!1289 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!1290 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!1291 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!1292 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!1293 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!1294 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!1295 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!1296 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!1297 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!1298 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!1299 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!1300 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!1301 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!1302 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!1303 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!1304 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!1305 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!1306 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!1307 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!1308 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!1309 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!1310 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!1311 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!1312 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!1313 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!1314 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!1315 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!1316 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!1317 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!1318 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!1319 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!1320 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!1321 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!1322 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!1323 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!1324 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!1325 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!1326 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!1327 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!1328 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!1329 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!1330 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!1331 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!1332 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!1333 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!1334 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!1335 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!1336 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!1337 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!1338 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!1339 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!1340 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!1341 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!1342 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!1343 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!1344 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !15, line: 1163, baseType: !5, size: 32, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367}
!1346 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!1347 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!1348 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!1349 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!1350 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!1351 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!1352 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!1353 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!1354 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!1355 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!1356 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!1357 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!1358 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!1359 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!1360 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!1361 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!1362 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!1363 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!1364 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!1365 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!1366 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!1367 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!1368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !22, line: 361, baseType: !5, size: 32, elements: !1369)
!1369 = !{!1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377}
!1370 = !DIEnumerator(name: "RGN_TYPE_WINDOW", value: 0, isUnsigned: true)
!1371 = !DIEnumerator(name: "RGN_TYPE_HEADER", value: 1, isUnsigned: true)
!1372 = !DIEnumerator(name: "RGN_TYPE_CHANNELS", value: 2, isUnsigned: true)
!1373 = !DIEnumerator(name: "RGN_TYPE_TEMPORARY", value: 3, isUnsigned: true)
!1374 = !DIEnumerator(name: "RGN_TYPE_UI", value: 4, isUnsigned: true)
!1375 = !DIEnumerator(name: "RGN_TYPE_TOOLS", value: 5, isUnsigned: true)
!1376 = !DIEnumerator(name: "RGN_TYPE_TOOL_PROPS", value: 6, isUnsigned: true)
!1377 = !DIEnumerator(name: "RGN_TYPE_PREVIEW", value: 7, isUnsigned: true)
!1378 = !{!1379, !1380, !1381, !3367, !1420}
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1380 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlock", file: !4, line: 83, baseType: !1383)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !1384, line: 320, size: 5440, elements: !1385)
!1384 = !DIFile(filename: "blender/source/blender/editors/interface/interface_intern.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1385 = !{!1386, !1387, !1388, !1395, !1497, !1498, !1499, !1500, !1501, !1502, !1506, !1510, !1519, !1520, !1521, !1526, !1527, !1528, !1530, !1531, !1536, !1537, !1539, !1540, !1596, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1616, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !3349, !3350, !3351, !3353, !3354, !3355, !3356}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1383, file: !1384, line: 321, baseType: !1381, size: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1383, file: !1384, line: 321, baseType: !1381, size: 64, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "buttons", scope: !1383, file: !1384, line: 323, baseType: !1389, size: 128, offset: 128)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !1390, line: 71, baseType: !1391)
!1390 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !1390, line: 69, size: 128, elements: !1392)
!1392 = !{!1393, !1394}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1391, file: !1390, line: 70, baseType: !1379, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1391, file: !1390, line: 70, baseType: !1379, size: 64, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !1383, file: !1384, line: 324, baseType: !1396, size: 64, offset: 256)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "Panel", file: !22, line: 113, baseType: !1398)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Panel", file: !22, line: 97, size: 2176, elements: !1399)
!1399 = !{!1400, !1402, !1403, !1477, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1398, file: !22, line: 98, baseType: !1401, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1398, file: !22, line: 98, baseType: !1401, size: 64, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1398, file: !22, line: 100, baseType: !1404, size: 64, offset: 128)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PanelType", file: !1406, line: 169, size: 3264, elements: !1407)
!1406 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_screen.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1407 = !{!1408, !1409, !1410, !1415, !1416, !1417, !1418, !1419, !1421, !1422, !1423, !1431, !1435, !1436}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1405, file: !1406, line: 170, baseType: !1404, size: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1405, file: !1406, line: 170, baseType: !1404, size: 64, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1405, file: !1406, line: 172, baseType: !1411, size: 512, offset: 128)
!1411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 512, elements: !1413)
!1412 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1413 = !{!1414}
!1414 = !DISubrange(count: 64)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1405, file: !1406, line: 173, baseType: !1411, size: 512, offset: 640)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !1405, file: !1406, line: 174, baseType: !1411, size: 512, offset: 1152)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1405, file: !1406, line: 175, baseType: !1411, size: 512, offset: 1664)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1405, file: !1406, line: 176, baseType: !1411, size: 512, offset: 2176)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "space_type", scope: !1405, file: !1406, line: 177, baseType: !1420, size: 32, offset: 2688)
!1420 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "region_type", scope: !1405, file: !1406, line: 178, baseType: !1420, size: 32, offset: 2720)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1405, file: !1406, line: 180, baseType: !1420, size: 32, offset: 2752)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1405, file: !1406, line: 183, baseType: !1424, size: 64, offset: 2816)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!1420, !1427, !1404}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1429)
!1429 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !1430, line: 44, flags: DIFlagFwdDecl)
!1430 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "draw_header", scope: !1405, file: !1406, line: 185, baseType: !1432, size: 64, offset: 2880)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{null, !1427, !1401}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !1405, file: !1406, line: 187, baseType: !1432, size: 64, offset: 2944)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1405, file: !1406, line: 190, baseType: !1437, size: 256, offset: 3008)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !1430, line: 436, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !1430, line: 430, size: 256, elements: !1439)
!1439 = !{!1440, !1441, !1445, !1472}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1438, file: !1430, line: 431, baseType: !1379, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !1438, file: !1430, line: 432, baseType: !1442, size: 64, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !1430, line: 417, baseType: !1444)
!1444 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !1430, line: 41, flags: DIFlagFwdDecl)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1438, file: !1430, line: 433, baseType: !1446, size: 64, offset: 128)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !1430, line: 408, baseType: !1447)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!1420, !1450, !1451, !1461, !1463}
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !1430, line: 55, size: 192, elements: !1453)
!1453 = !{!1454, !1458, !1460}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1452, file: !1430, line: 58, baseType: !1455, size: 64)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1452, file: !1430, line: 56, size: 64, elements: !1456)
!1456 = !{!1457}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1455, file: !1430, line: 57, baseType: !1379, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1452, file: !1430, line: 60, baseType: !1459, size: 64, offset: 64)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1452, file: !1430, line: 61, baseType: !1379, size: 64, offset: 128)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !1430, line: 38, flags: DIFlagFwdDecl)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !1430, line: 348, baseType: !1465)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !1430, line: 337, size: 256, elements: !1466)
!1466 = !{!1467, !1468, !1469, !1470, !1471}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1465, file: !1430, line: 339, baseType: !1379, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1465, file: !1430, line: 342, baseType: !1461, size: 64, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !1465, file: !1430, line: 345, baseType: !1420, size: 32, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !1465, file: !1430, line: 347, baseType: !1420, size: 32, offset: 160)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !1465, file: !1430, line: 347, baseType: !1420, size: 32, offset: 192)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1438, file: !1430, line: 434, baseType: !1473, size: 64, offset: 192)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !1430, line: 409, baseType: !1474)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{null, !1379}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1398, file: !22, line: 101, baseType: !1478, size: 64, offset: 192)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !1406, line: 48, flags: DIFlagFwdDecl)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "panelname", scope: !1398, file: !22, line: 103, baseType: !1411, size: 512, offset: 256)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "tabname", scope: !1398, file: !22, line: 103, baseType: !1411, size: 512, offset: 768)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "drawname", scope: !1398, file: !22, line: 104, baseType: !1411, size: 512, offset: 1280)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "ofsx", scope: !1398, file: !22, line: 105, baseType: !1420, size: 32, offset: 1792)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ofsy", scope: !1398, file: !22, line: 105, baseType: !1420, size: 32, offset: 1824)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1398, file: !22, line: 105, baseType: !1420, size: 32, offset: 1856)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1398, file: !22, line: 105, baseType: !1420, size: 32, offset: 1888)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "labelofs", scope: !1398, file: !22, line: 106, baseType: !1488, size: 16, offset: 1920)
!1488 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1398, file: !22, line: 106, baseType: !1488, size: 16, offset: 1936)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1398, file: !22, line: 107, baseType: !1488, size: 16, offset: 1952)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_flag", scope: !1398, file: !22, line: 107, baseType: !1488, size: 16, offset: 1968)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1398, file: !22, line: 108, baseType: !1488, size: 16, offset: 1984)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "snap", scope: !1398, file: !22, line: 109, baseType: !1488, size: 16, offset: 2000)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "sortorder", scope: !1398, file: !22, line: 110, baseType: !1420, size: 32, offset: 2016)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "paneltab", scope: !1398, file: !22, line: 111, baseType: !1401, size: 64, offset: 2048)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "activedata", scope: !1398, file: !22, line: 112, baseType: !1379, size: 64, offset: 2112)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "oldblock", scope: !1383, file: !1384, line: 325, baseType: !1381, size: 64, offset: 320)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "butstore", scope: !1383, file: !1384, line: 327, baseType: !1389, size: 128, offset: 384)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "layouts", scope: !1383, file: !1384, line: 329, baseType: !1389, size: 128, offset: 512)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "curlayout", scope: !1383, file: !1384, line: 330, baseType: !1478, size: 64, offset: 640)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "contexts", scope: !1383, file: !1384, line: 332, baseType: !1389, size: 128, offset: 704)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1383, file: !1384, line: 334, baseType: !1503, size: 1024, offset: 832)
!1503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 1024, elements: !1504)
!1504 = !{!1505}
!1505 = !DISubrange(count: 128)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !1383, file: !1384, line: 336, baseType: !1507, size: 512, offset: 1856)
!1507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1380, size: 512, elements: !1508)
!1508 = !{!1509, !1509}
!1509 = !DISubrange(count: 4)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1383, file: !1384, line: 338, baseType: !1511, size: 128, offset: 2368)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1512, line: 95, baseType: !1513)
!1512 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1512, line: 92, size: 128, elements: !1514)
!1514 = !{!1515, !1516, !1517, !1518}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1513, file: !1512, line: 93, baseType: !1380, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1513, file: !1512, line: 93, baseType: !1380, size: 32, offset: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1513, file: !1512, line: 94, baseType: !1380, size: 32, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1513, file: !1512, line: 94, baseType: !1380, size: 32, offset: 96)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !1383, file: !1384, line: 339, baseType: !1380, size: 32, offset: 2496)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "puphash", scope: !1383, file: !1384, line: 341, baseType: !5, size: 32, offset: 2528)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1383, file: !1384, line: 343, baseType: !1522, size: 64, offset: 2560)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleFunc", file: !4, line: 336, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{null, !1450, !1379, !1379}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg1", scope: !1383, file: !1384, line: 344, baseType: !1379, size: 64, offset: 2624)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg2", scope: !1383, file: !1384, line: 345, baseType: !1379, size: 64, offset: 2688)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "funcN", scope: !1383, file: !1384, line: 347, baseType: !1529, size: 64, offset: 2752)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleNFunc", file: !4, line: 338, baseType: !1523)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "func_argN", scope: !1383, file: !1384, line: 348, baseType: !1379, size: 64, offset: 2816)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "butm_func", scope: !1383, file: !1384, line: 350, baseType: !1532, size: 64, offset: 2880)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiMenuHandleFunc", file: !4, line: 346, baseType: !1533)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{null, !1450, !1379, !1420}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "butm_func_arg", scope: !1383, file: !1384, line: 351, baseType: !1379, size: 64, offset: 2944)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "handle_func", scope: !1383, file: !1384, line: 353, baseType: !1538, size: 64, offset: 3008)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockHandleFunc", file: !4, line: 341, baseType: !1533)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "handle_func_arg", scope: !1383, file: !1384, line: 354, baseType: !1379, size: 64, offset: 3072)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "block_event_func", scope: !1383, file: !1384, line: 357, baseType: !1541, size: 64, offset: 3136)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!1420, !1427, !1544, !1545}
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1547)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !1548, line: 421, size: 960, elements: !1549)
!1548 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1549 = !{!1550, !1552, !1553, !1554, !1555, !1556, !1557, !1561, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1584, !1592, !1593, !1594, !1595}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1547, file: !1548, line: 422, baseType: !1551, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1547, file: !1548, line: 422, baseType: !1551, size: 64, offset: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1547, file: !1548, line: 424, baseType: !1488, size: 16, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1547, file: !1548, line: 425, baseType: !1488, size: 16, offset: 144)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1547, file: !1548, line: 426, baseType: !1420, size: 32, offset: 160)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1547, file: !1548, line: 426, baseType: !1420, size: 32, offset: 192)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !1547, file: !1548, line: 427, baseType: !1558, size: 64, offset: 224)
!1558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1420, size: 64, elements: !1559)
!1559 = !{!1560}
!1560 = !DISubrange(count: 2)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !1547, file: !1548, line: 428, baseType: !1562, size: 48, offset: 288)
!1562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 48, elements: !1563)
!1563 = !{!1564}
!1564 = !DISubrange(count: 6)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !1547, file: !1548, line: 431, baseType: !1412, size: 8, offset: 336)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1547, file: !1548, line: 432, baseType: !1412, size: 8, offset: 344)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !1547, file: !1548, line: 435, baseType: !1488, size: 16, offset: 352)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !1547, file: !1548, line: 436, baseType: !1488, size: 16, offset: 368)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !1547, file: !1548, line: 437, baseType: !1420, size: 32, offset: 384)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !1547, file: !1548, line: 437, baseType: !1420, size: 32, offset: 416)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !1547, file: !1548, line: 438, baseType: !1572, size: 64, offset: 448)
!1572 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !1547, file: !1548, line: 439, baseType: !1420, size: 32, offset: 512)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !1547, file: !1548, line: 439, baseType: !1420, size: 32, offset: 544)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !1547, file: !1548, line: 442, baseType: !1488, size: 16, offset: 576)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !1547, file: !1548, line: 442, baseType: !1488, size: 16, offset: 592)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1547, file: !1548, line: 442, baseType: !1488, size: 16, offset: 608)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !1547, file: !1548, line: 442, baseType: !1488, size: 16, offset: 624)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !1547, file: !1548, line: 443, baseType: !1488, size: 16, offset: 640)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !1547, file: !1548, line: 446, baseType: !1488, size: 16, offset: 656)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !1547, file: !1548, line: 449, baseType: !1582, size: 64, offset: 704)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1412)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !1547, file: !1548, line: 452, baseType: !1585, size: 64, offset: 768)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !1548, line: 463, size: 128, elements: !1587)
!1587 = !{!1588, !1589, !1590, !1591}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !1586, file: !1548, line: 464, baseType: !1420, size: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !1586, file: !1548, line: 465, baseType: !1380, size: 32, offset: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !1586, file: !1548, line: 466, baseType: !1380, size: 32, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !1586, file: !1548, line: 467, baseType: !1380, size: 32, offset: 96)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !1547, file: !1548, line: 455, baseType: !1488, size: 16, offset: 832)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !1547, file: !1548, line: 456, baseType: !1488, size: 16, offset: 848)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1547, file: !1548, line: 457, baseType: !1420, size: 32, offset: 864)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1547, file: !1548, line: 458, baseType: !1379, size: 64, offset: 896)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra", scope: !1383, file: !1384, line: 360, baseType: !1597, size: 64, offset: 3200)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{null, !1427, !1379, !1379, !1379, !1600}
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1512, line: 89, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1512, line: 86, size: 128, elements: !1603)
!1603 = !{!1604, !1605, !1606, !1607}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1602, file: !1512, line: 87, baseType: !1420, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1602, file: !1512, line: 87, baseType: !1420, size: 32, offset: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1602, file: !1512, line: 88, baseType: !1420, size: 32, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1602, file: !1512, line: 88, baseType: !1420, size: 32, offset: 96)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra_arg1", scope: !1383, file: !1384, line: 361, baseType: !1379, size: 64, offset: 3264)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "drawextra_arg2", scope: !1383, file: !1384, line: 362, baseType: !1379, size: 64, offset: 3328)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1383, file: !1384, line: 364, baseType: !1420, size: 32, offset: 3392)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "alignnr", scope: !1383, file: !1384, line: 365, baseType: !1488, size: 16, offset: 3424)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1383, file: !1384, line: 367, baseType: !1412, size: 8, offset: 3440)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1383, file: !1384, line: 368, baseType: !1412, size: 8, offset: 3448)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "auto_open", scope: !1383, file: !1384, line: 369, baseType: !1615, size: 8, offset: 3456)
!1615 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1383, file: !1384, line: 370, baseType: !1617, size: 56, offset: 3464)
!1617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 56, elements: !1618)
!1618 = !{!1619}
!1619 = !DISubrange(count: 7)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "auto_open_last", scope: !1383, file: !1384, line: 371, baseType: !1572, size: 64, offset: 3520)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "lockstr", scope: !1383, file: !1384, line: 373, baseType: !1582, size: 64, offset: 3584)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1383, file: !1384, line: 375, baseType: !1412, size: 8, offset: 3648)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1383, file: !1384, line: 376, baseType: !1412, size: 8, offset: 3656)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "tooltipdisabled", scope: !1383, file: !1384, line: 377, baseType: !1412, size: 8, offset: 3664)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "endblock", scope: !1383, file: !1384, line: 378, baseType: !1412, size: 8, offset: 3672)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "bounds_type", scope: !1383, file: !1384, line: 380, baseType: !1627, size: 32, offset: 3680)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBlockBoundsCalc", file: !4, line: 434, baseType: !3)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "mx", scope: !1383, file: !1384, line: 381, baseType: !1420, size: 32, offset: 3712)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "my", scope: !1383, file: !1384, line: 381, baseType: !1420, size: 32, offset: 3744)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1383, file: !1384, line: 382, baseType: !1420, size: 32, offset: 3776)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "minbounds", scope: !1383, file: !1384, line: 382, baseType: !1420, size: 32, offset: 3808)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1383, file: !1384, line: 384, baseType: !1511, size: 128, offset: 3840)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "saferct", scope: !1383, file: !1384, line: 385, baseType: !1389, size: 128, offset: 3968)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1383, file: !1384, line: 387, baseType: !1635, size: 64, offset: 4096)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPopupBlockHandle", file: !4, line: 84, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupBlockHandle", file: !1384, line: 491, size: 1536, elements: !1638)
!1638 = !{!1639, !3225, !3226, !3227, !3228, !3229, !3230, !3234, !3235, !3254, !3255, !3260, !3337, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1637, file: !1384, line: 493, baseType: !1640, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !22, line: 230, size: 3072, elements: !1642)
!1642 = !{!1643, !1644, !1645, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1641, file: !22, line: 231, baseType: !1640, size: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1641, file: !22, line: 231, baseType: !1640, size: 64, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !1641, file: !22, line: 233, baseType: !1646, size: 1280, offset: 128)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !1647, line: 71, baseType: !1648)
!1647 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !1647, line: 40, size: 1280, elements: !1649)
!1649 = !{!1650, !1651, !1652, !1653, !1654, !1655, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1674, !1675, !1676, !1679}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1648, file: !1647, line: 41, baseType: !1511, size: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1648, file: !1647, line: 41, baseType: !1511, size: 128, offset: 128)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !1648, file: !1647, line: 42, baseType: !1601, size: 128, offset: 256)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !1648, file: !1647, line: 42, baseType: !1601, size: 128, offset: 384)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1648, file: !1647, line: 43, baseType: !1601, size: 128, offset: 512)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1648, file: !1647, line: 45, baseType: !1656, size: 64, offset: 640)
!1656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1380, size: 64, elements: !1559)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1648, file: !1647, line: 45, baseType: !1656, size: 64, offset: 704)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !1648, file: !1647, line: 46, baseType: !1380, size: 32, offset: 768)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !1648, file: !1647, line: 46, baseType: !1380, size: 32, offset: 800)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !1648, file: !1647, line: 48, baseType: !1488, size: 16, offset: 832)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !1648, file: !1647, line: 49, baseType: !1488, size: 16, offset: 848)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !1648, file: !1647, line: 51, baseType: !1488, size: 16, offset: 864)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !1648, file: !1647, line: 52, baseType: !1488, size: 16, offset: 880)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !1648, file: !1647, line: 53, baseType: !1488, size: 16, offset: 896)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1648, file: !1647, line: 55, baseType: !1488, size: 16, offset: 912)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1648, file: !1647, line: 56, baseType: !1488, size: 16, offset: 928)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1648, file: !1647, line: 58, baseType: !1488, size: 16, offset: 944)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1648, file: !1647, line: 58, baseType: !1488, size: 16, offset: 960)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !1648, file: !1647, line: 59, baseType: !1488, size: 16, offset: 976)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !1648, file: !1647, line: 59, baseType: !1488, size: 16, offset: 992)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !1648, file: !1647, line: 61, baseType: !1488, size: 16, offset: 1008)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !1648, file: !1647, line: 63, baseType: !1673, size: 64, offset: 1024)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !1648, file: !1647, line: 64, baseType: !1420, size: 32, offset: 1088)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !1648, file: !1647, line: 65, baseType: !1420, size: 32, offset: 1120)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !1648, file: !1647, line: 68, baseType: !1677, size: 64, offset: 1152)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !1647, line: 68, flags: DIFlagFwdDecl)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !1648, file: !1647, line: 69, baseType: !1680, size: 64, offset: 1216)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !1548, line: 490, size: 768, elements: !1682)
!1682 = !{!1683, !1684, !1685, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1681, file: !1548, line: 491, baseType: !1680, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1681, file: !1548, line: 491, baseType: !1680, size: 64, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !1681, file: !1548, line: 493, baseType: !1686, size: 64, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !1688, line: 169, size: 2048, elements: !1689)
!1688 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1689 = !{!1690, !1691, !1692, !1693, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2961, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1687, file: !1688, line: 170, baseType: !1686, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1687, file: !1688, line: 170, baseType: !1686, size: 64, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !1687, file: !1688, line: 172, baseType: !1379, size: 64, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !1687, file: !1688, line: 174, baseType: !1694, size: 64, offset: 192)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !22, line: 49, size: 1984, elements: !1696)
!1696 = !{!1697, !1756, !1757, !1758, !1759, !1760, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1695, file: !22, line: 50, baseType: !1698, size: 960)
!1698 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1699, line: 130, baseType: !1700)
!1699 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1699, line: 117, size: 960, elements: !1701)
!1701 = !{!1702, !1703, !1704, !1706, !1725, !1729, !1730, !1731, !1732, !1733}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1700, file: !1699, line: 118, baseType: !1379, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1700, file: !1699, line: 118, baseType: !1379, size: 64, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1700, file: !1699, line: 119, baseType: !1705, size: 64, offset: 128)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1700, file: !1699, line: 120, baseType: !1707, size: 64, offset: 192)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1699, line: 136, size: 17600, elements: !1709)
!1709 = !{!1710, !1711, !1713, !1716, !1720, !1721, !1722}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1708, file: !1699, line: 137, baseType: !1698, size: 960)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1708, file: !1699, line: 138, baseType: !1712, size: 64, offset: 960)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1708, file: !1699, line: 139, baseType: !1714, size: 64, offset: 1024)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1699, line: 43, flags: DIFlagFwdDecl)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1708, file: !1699, line: 140, baseType: !1717, size: 8192, offset: 1088)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 8192, elements: !1718)
!1718 = !{!1719}
!1719 = !DISubrange(count: 1024)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1708, file: !1699, line: 141, baseType: !1717, size: 8192, offset: 9280)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1708, file: !1699, line: 148, baseType: !1707, size: 64, offset: 17472)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1708, file: !1699, line: 150, baseType: !1723, size: 64, offset: 17536)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1699, line: 45, flags: DIFlagFwdDecl)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1700, file: !1699, line: 121, baseType: !1726, size: 528, offset: 256)
!1726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 528, elements: !1727)
!1727 = !{!1728}
!1728 = !DISubrange(count: 66)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1700, file: !1699, line: 126, baseType: !1488, size: 16, offset: 784)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1700, file: !1699, line: 127, baseType: !1420, size: 32, offset: 800)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1700, file: !1699, line: 128, baseType: !1420, size: 32, offset: 832)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1700, file: !1699, line: 128, baseType: !1420, size: 32, offset: 864)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1700, file: !1699, line: 129, baseType: !1734, size: 64, offset: 896)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1699, line: 75, baseType: !1736)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1699, line: 62, size: 1024, elements: !1737)
!1737 = !{!1738, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1754, !1755}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1736, file: !1699, line: 63, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1736, file: !1699, line: 63, baseType: !1739, size: 64, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1736, file: !1699, line: 64, baseType: !1412, size: 8, offset: 128)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1736, file: !1699, line: 64, baseType: !1412, size: 8, offset: 136)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1736, file: !1699, line: 65, baseType: !1488, size: 16, offset: 144)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1736, file: !1699, line: 66, baseType: !1411, size: 512, offset: 160)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1736, file: !1699, line: 67, baseType: !1420, size: 32, offset: 672)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1736, file: !1699, line: 69, baseType: !1747, size: 256, offset: 704)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1699, line: 60, baseType: !1748)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1699, line: 48, size: 256, elements: !1749)
!1749 = !{!1750, !1751, !1752, !1753}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1748, file: !1699, line: 49, baseType: !1379, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1748, file: !1699, line: 58, baseType: !1389, size: 128, offset: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1748, file: !1699, line: 59, baseType: !1420, size: 32, offset: 192)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1748, file: !1699, line: 59, baseType: !1420, size: 32, offset: 224)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1736, file: !1699, line: 70, baseType: !1420, size: 32, offset: 960)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1736, file: !1699, line: 74, baseType: !1420, size: 32, offset: 992)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !1695, file: !22, line: 52, baseType: !1389, size: 128, offset: 960)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !1695, file: !22, line: 53, baseType: !1389, size: 128, offset: 1088)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !1695, file: !22, line: 54, baseType: !1389, size: 128, offset: 1216)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !1695, file: !22, line: 55, baseType: !1389, size: 128, offset: 1344)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1695, file: !22, line: 57, baseType: !1761, size: 64, offset: 1472)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1763, line: 1216, size: 39680, elements: !1764)
!1763 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1764 = !{!1765, !1766, !1770, !1773, !1776, !1777, !1778, !1790, !1791, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1807, !1871, !2301, !2515, !2518, !2793, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2815, !2816, !2817, !2818, !2819, !2827, !2894, !2901, !2902, !2909, !2910, !2916, !2917, !2918, !2919, !2920}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1762, file: !1763, line: 1217, baseType: !1698, size: 960)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1762, file: !1763, line: 1218, baseType: !1767, size: 64, offset: 960)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !1769, line: 45, flags: DIFlagFwdDecl)
!1769 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1762, file: !1763, line: 1220, baseType: !1771, size: 64, offset: 1024)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1772 = !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !1769, line: 49, flags: DIFlagFwdDecl)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1762, file: !1763, line: 1221, baseType: !1774, size: 64, offset: 1088)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1763, line: 52, flags: DIFlagFwdDecl)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1762, file: !1763, line: 1223, baseType: !1761, size: 64, offset: 1152)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1762, file: !1763, line: 1225, baseType: !1389, size: 128, offset: 1216)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1762, file: !1763, line: 1226, baseType: !1779, size: 64, offset: 1344)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1763, line: 69, size: 320, elements: !1781)
!1781 = !{!1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1780, file: !1763, line: 70, baseType: !1779, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1780, file: !1763, line: 70, baseType: !1779, size: 64, offset: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1780, file: !1763, line: 71, baseType: !5, size: 32, offset: 128)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1780, file: !1763, line: 71, baseType: !5, size: 32, offset: 160)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1780, file: !1763, line: 72, baseType: !1420, size: 32, offset: 192)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1780, file: !1763, line: 73, baseType: !1488, size: 16, offset: 224)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1780, file: !1763, line: 73, baseType: !1488, size: 16, offset: 240)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1780, file: !1763, line: 74, baseType: !1771, size: 64, offset: 256)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1762, file: !1763, line: 1227, baseType: !1771, size: 64, offset: 1408)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1762, file: !1763, line: 1229, baseType: !1792, size: 96, offset: 1472)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1380, size: 96, elements: !1793)
!1793 = !{!1794}
!1794 = !DISubrange(count: 3)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1762, file: !1763, line: 1230, baseType: !1792, size: 96, offset: 1568)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1762, file: !1763, line: 1231, baseType: !1792, size: 96, offset: 1664)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1762, file: !1763, line: 1231, baseType: !1792, size: 96, offset: 1760)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1762, file: !1763, line: 1233, baseType: !5, size: 32, offset: 1856)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1762, file: !1763, line: 1234, baseType: !1420, size: 32, offset: 1888)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1762, file: !1763, line: 1235, baseType: !5, size: 32, offset: 1920)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1762, file: !1763, line: 1237, baseType: !1488, size: 16, offset: 1952)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1762, file: !1763, line: 1239, baseType: !1412, size: 8, offset: 1968)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1762, file: !1763, line: 1240, baseType: !1804, size: 8, offset: 1976)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 8, elements: !1805)
!1805 = !{!1806}
!1806 = !DISubrange(count: 1)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1762, file: !1763, line: 1242, baseType: !1808, size: 64, offset: 1984)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1810, line: 328, size: 3456, elements: !1811)
!1810 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1811 = !{!1812, !1813, !1814, !1817, !1818, !1819, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1844, !1849, !1850, !1853, !1857, !1862, !1866, !1867, !1868, !1869, !1870}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1809, file: !1810, line: 329, baseType: !1698, size: 960)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1809, file: !1810, line: 330, baseType: !1767, size: 64, offset: 960)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1809, file: !1810, line: 332, baseType: !1815, size: 64, offset: 1024)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!1816 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1810, line: 332, flags: DIFlagFwdDecl)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1809, file: !1810, line: 333, baseType: !1411, size: 512, offset: 1088)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1809, file: !1810, line: 335, baseType: !1459, size: 64, offset: 1600)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1809, file: !1810, line: 337, baseType: !1820, size: 64, offset: 1664)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !1822, line: 45, flags: DIFlagFwdDecl)
!1822 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1809, file: !1810, line: 338, baseType: !1656, size: 64, offset: 1728)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1809, file: !1810, line: 340, baseType: !1389, size: 128, offset: 1792)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1809, file: !1810, line: 340, baseType: !1389, size: 128, offset: 1920)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1809, file: !1810, line: 342, baseType: !1420, size: 32, offset: 2048)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1809, file: !1810, line: 342, baseType: !1420, size: 32, offset: 2080)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1809, file: !1810, line: 343, baseType: !1420, size: 32, offset: 2112)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1809, file: !1810, line: 345, baseType: !1420, size: 32, offset: 2144)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1809, file: !1810, line: 346, baseType: !1420, size: 32, offset: 2176)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1809, file: !1810, line: 347, baseType: !1488, size: 16, offset: 2208)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1809, file: !1810, line: 348, baseType: !1488, size: 16, offset: 2224)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1809, file: !1810, line: 349, baseType: !1420, size: 32, offset: 2240)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1809, file: !1810, line: 351, baseType: !1420, size: 32, offset: 2272)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1809, file: !1810, line: 353, baseType: !1488, size: 16, offset: 2304)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1809, file: !1810, line: 354, baseType: !1488, size: 16, offset: 2320)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1809, file: !1810, line: 355, baseType: !1420, size: 32, offset: 2336)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1809, file: !1810, line: 357, baseType: !1511, size: 128, offset: 2368)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1809, file: !1810, line: 363, baseType: !1389, size: 128, offset: 2496)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1809, file: !1810, line: 363, baseType: !1389, size: 128, offset: 2624)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1809, file: !1810, line: 368, baseType: !1842, size: 64, offset: 2752)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1810, line: 48, flags: DIFlagFwdDecl)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1809, file: !1810, line: 372, baseType: !1845, size: 32, offset: 2816)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1810, line: 274, baseType: !1846)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1810, line: 271, size: 32, elements: !1847)
!1847 = !{!1848}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1846, file: !1810, line: 273, baseType: !5, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1809, file: !1810, line: 373, baseType: !1420, size: 32, offset: 2848)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1809, file: !1810, line: 382, baseType: !1851, size: 64, offset: 2880)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1810, line: 46, flags: DIFlagFwdDecl)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1809, file: !1810, line: 385, baseType: !1854, size: 64, offset: 2944)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{null, !1379, !1380}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1809, file: !1810, line: 386, baseType: !1858, size: 64, offset: 3008)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{null, !1379, !1861}
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1809, file: !1810, line: 387, baseType: !1863, size: 64, offset: 3072)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = !DISubroutineType(types: !1865)
!1865 = !{!1420, !1379}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1809, file: !1810, line: 388, baseType: !1474, size: 64, offset: 3136)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1809, file: !1810, line: 389, baseType: !1379, size: 64, offset: 3200)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1809, file: !1810, line: 389, baseType: !1379, size: 64, offset: 3264)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1809, file: !1810, line: 389, baseType: !1379, size: 64, offset: 3328)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1809, file: !1810, line: 389, baseType: !1379, size: 64, offset: 3392)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1762, file: !1763, line: 1244, baseType: !1872, size: 64, offset: 2048)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1874, line: 200, size: 17024, elements: !1875)
!1874 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1875 = !{!1876, !1878, !1879, !1880, !2294, !2295, !2296, !2297, !2298, !2299, !2300}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1873, file: !1874, line: 201, baseType: !1877, size: 64)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1873, file: !1874, line: 202, baseType: !1389, size: 128, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1873, file: !1874, line: 203, baseType: !1389, size: 128, offset: 192)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1873, file: !1874, line: 206, baseType: !1881, size: 64, offset: 320)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1874, line: 190, baseType: !1883)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1874, line: 126, size: 2816, elements: !1884)
!1884 = !{!1885, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1984, !1987, !1988, !1989, !2265, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2293}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1883, file: !1874, line: 127, baseType: !1886, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1883, file: !1874, line: 127, baseType: !1886, size: 64, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1883, file: !1874, line: 128, baseType: !1379, size: 64, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1883, file: !1874, line: 129, baseType: !1379, size: 64, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1883, file: !1874, line: 130, baseType: !1411, size: 512, offset: 256)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1883, file: !1874, line: 132, baseType: !1420, size: 32, offset: 768)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1883, file: !1874, line: 132, baseType: !1420, size: 32, offset: 800)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1883, file: !1874, line: 133, baseType: !1420, size: 32, offset: 832)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1883, file: !1874, line: 134, baseType: !1420, size: 32, offset: 864)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1883, file: !1874, line: 134, baseType: !1420, size: 32, offset: 896)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1883, file: !1874, line: 134, baseType: !1420, size: 32, offset: 928)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1883, file: !1874, line: 135, baseType: !1420, size: 32, offset: 960)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1883, file: !1874, line: 135, baseType: !1420, size: 32, offset: 992)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1883, file: !1874, line: 136, baseType: !1420, size: 32, offset: 1024)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1883, file: !1874, line: 136, baseType: !1420, size: 32, offset: 1056)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1883, file: !1874, line: 137, baseType: !1420, size: 32, offset: 1088)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1883, file: !1874, line: 137, baseType: !1420, size: 32, offset: 1120)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1883, file: !1874, line: 138, baseType: !1380, size: 32, offset: 1152)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1883, file: !1874, line: 139, baseType: !1380, size: 32, offset: 1184)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1883, file: !1874, line: 139, baseType: !1380, size: 32, offset: 1216)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1883, file: !1874, line: 141, baseType: !1488, size: 16, offset: 1248)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1883, file: !1874, line: 142, baseType: !1488, size: 16, offset: 1264)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1883, file: !1874, line: 143, baseType: !1420, size: 32, offset: 1280)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1883, file: !1874, line: 144, baseType: !1420, size: 32, offset: 1312)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1883, file: !1874, line: 146, baseType: !1911, size: 64, offset: 1344)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1874, line: 114, baseType: !1913)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1874, line: 99, size: 7232, elements: !1914)
!1914 = !{!1915, !1917, !1918, !1919, !1920, !1921, !1922, !1933, !1937, !1952, !1961, !1968, !1978}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1913, file: !1874, line: 100, baseType: !1916, size: 64)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1913, file: !1874, line: 100, baseType: !1916, size: 64, offset: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1913, file: !1874, line: 101, baseType: !1420, size: 32, offset: 128)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1913, file: !1874, line: 101, baseType: !1420, size: 32, offset: 160)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1913, file: !1874, line: 102, baseType: !1420, size: 32, offset: 192)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1913, file: !1874, line: 102, baseType: !1420, size: 32, offset: 224)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1913, file: !1874, line: 103, baseType: !1923, size: 64, offset: 256)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1874, line: 59, baseType: !1925)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1874, line: 56, size: 2112, elements: !1926)
!1926 = !{!1927, !1931, !1932}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1925, file: !1874, line: 57, baseType: !1928, size: 2048)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 2048, elements: !1929)
!1929 = !{!1930}
!1930 = !DISubrange(count: 256)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1925, file: !1874, line: 58, baseType: !1420, size: 32, offset: 2048)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1925, file: !1874, line: 58, baseType: !1420, size: 32, offset: 2080)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1913, file: !1874, line: 106, baseType: !1934, size: 6144, offset: 320)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 6144, elements: !1935)
!1935 = !{!1936}
!1936 = !DISubrange(count: 768)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1913, file: !1874, line: 107, baseType: !1938, size: 64, offset: 6464)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1874, line: 97, baseType: !1940)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1874, line: 83, size: 8320, elements: !1941)
!1941 = !{!1942, !1943, !1944, !1948, !1949, !1950, !1951}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1940, file: !1874, line: 84, baseType: !1934, size: 6144)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1940, file: !1874, line: 87, baseType: !1928, size: 2048, offset: 6144)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1940, file: !1874, line: 88, baseType: !1945, size: 64, offset: 8192)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1947, line: 41, flags: DIFlagFwdDecl)
!1947 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1940, file: !1874, line: 90, baseType: !1488, size: 16, offset: 8256)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1940, file: !1874, line: 92, baseType: !1488, size: 16, offset: 8272)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1940, file: !1874, line: 93, baseType: !1488, size: 16, offset: 8288)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1940, file: !1874, line: 95, baseType: !1488, size: 16, offset: 8304)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1913, file: !1874, line: 108, baseType: !1953, size: 64, offset: 6528)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1874, line: 66, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1874, line: 61, size: 128, elements: !1956)
!1956 = !{!1957, !1958, !1959, !1960}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1955, file: !1874, line: 62, baseType: !1420, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1955, file: !1874, line: 63, baseType: !1420, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1955, file: !1874, line: 64, baseType: !1420, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1955, file: !1874, line: 65, baseType: !1420, size: 32, offset: 96)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1913, file: !1874, line: 109, baseType: !1962, size: 64, offset: 6592)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1874, line: 71, baseType: !1964)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1874, line: 68, size: 64, elements: !1965)
!1965 = !{!1966, !1967}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1964, file: !1874, line: 69, baseType: !1420, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1964, file: !1874, line: 70, baseType: !1420, size: 32, offset: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1913, file: !1874, line: 110, baseType: !1969, size: 64, offset: 6656)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1874, line: 81, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1874, line: 73, size: 352, elements: !1972)
!1972 = !{!1973, !1974, !1975, !1976, !1977}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1971, file: !1874, line: 74, baseType: !1792, size: 96)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1971, file: !1874, line: 75, baseType: !1792, size: 96, offset: 96)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1971, file: !1874, line: 76, baseType: !1792, size: 96, offset: 192)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1971, file: !1874, line: 77, baseType: !1420, size: 32, offset: 288)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1971, file: !1874, line: 78, baseType: !1420, size: 32, offset: 320)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1913, file: !1874, line: 113, baseType: !1979, size: 512, offset: 6720)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1980, line: 182, baseType: !1981)
!1980 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1980, line: 180, size: 512, elements: !1982)
!1982 = !{!1983}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1981, file: !1980, line: 181, baseType: !1411, size: 512)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1883, file: !1874, line: 148, baseType: !1985, size: 64, offset: 1408)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !1769, line: 46, flags: DIFlagFwdDecl)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1883, file: !1874, line: 151, baseType: !1761, size: 64, offset: 1472)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1883, file: !1874, line: 152, baseType: !1771, size: 64, offset: 1536)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1883, file: !1874, line: 153, baseType: !1990, size: 64, offset: 1600)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1992, line: 64, size: 19136, elements: !1993)
!1992 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1993 = !{!1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2006, !2007, !2251, !2252, !2260, !2261, !2262, !2263, !2264}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1991, file: !1992, line: 65, baseType: !1698, size: 960)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1991, file: !1992, line: 66, baseType: !1767, size: 64, offset: 960)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1991, file: !1992, line: 68, baseType: !1717, size: 8192, offset: 1024)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1991, file: !1992, line: 70, baseType: !1420, size: 32, offset: 9216)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1991, file: !1992, line: 71, baseType: !1420, size: 32, offset: 9248)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1991, file: !1992, line: 72, baseType: !1558, size: 64, offset: 9280)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1991, file: !1992, line: 74, baseType: !1380, size: 32, offset: 9344)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1991, file: !1992, line: 74, baseType: !1380, size: 32, offset: 9376)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1991, file: !1992, line: 76, baseType: !1945, size: 64, offset: 9408)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1991, file: !1992, line: 77, baseType: !2004, size: 64, offset: 9472)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1992, line: 77, flags: DIFlagFwdDecl)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1991, file: !1992, line: 78, baseType: !1820, size: 64, offset: 9536)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1991, file: !1992, line: 80, baseType: !2008, size: 2624, offset: 9600)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1822, line: 340, size: 2624, elements: !2009)
!2009 = !{!2010, !2038, !2056, !2057, !2058, !2073, !2131, !2132, !2231, !2232, !2233, !2234, !2240}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !2008, file: !1822, line: 341, baseType: !2011, size: 576)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1822, line: 251, baseType: !2012)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1822, line: 207, size: 576, elements: !2013)
!2013 = !{!2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2012, file: !1822, line: 208, baseType: !1420, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !2012, file: !1822, line: 211, baseType: !1488, size: 16, offset: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !2012, file: !1822, line: 212, baseType: !1488, size: 16, offset: 48)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !2012, file: !1822, line: 213, baseType: !1380, size: 32, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !2012, file: !1822, line: 214, baseType: !1488, size: 16, offset: 96)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !2012, file: !1822, line: 215, baseType: !1488, size: 16, offset: 112)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !2012, file: !1822, line: 216, baseType: !1488, size: 16, offset: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !2012, file: !1822, line: 217, baseType: !1488, size: 16, offset: 144)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !2012, file: !1822, line: 218, baseType: !1488, size: 16, offset: 160)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !2012, file: !1822, line: 219, baseType: !1488, size: 16, offset: 176)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !2012, file: !1822, line: 220, baseType: !1380, size: 32, offset: 192)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !2012, file: !1822, line: 222, baseType: !1488, size: 16, offset: 224)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !2012, file: !1822, line: 225, baseType: !1488, size: 16, offset: 240)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !2012, file: !1822, line: 228, baseType: !1420, size: 32, offset: 256)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !2012, file: !1822, line: 229, baseType: !1420, size: 32, offset: 288)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !2012, file: !1822, line: 233, baseType: !1420, size: 32, offset: 320)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !2012, file: !1822, line: 236, baseType: !1488, size: 16, offset: 352)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2012, file: !1822, line: 236, baseType: !1488, size: 16, offset: 368)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2012, file: !1822, line: 241, baseType: !1380, size: 32, offset: 384)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !2012, file: !1822, line: 244, baseType: !1420, size: 32, offset: 416)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !2012, file: !1822, line: 244, baseType: !1420, size: 32, offset: 448)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !2012, file: !1822, line: 245, baseType: !1380, size: 32, offset: 480)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !2012, file: !1822, line: 248, baseType: !1380, size: 32, offset: 512)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2012, file: !1822, line: 250, baseType: !1420, size: 32, offset: 544)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2008, file: !1822, line: 342, baseType: !2039, size: 448, offset: 576)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1822, line: 79, baseType: !2040)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1822, line: 61, size: 448, elements: !2041)
!2041 = !{!2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !2040, file: !1822, line: 62, baseType: !1379, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !2040, file: !1822, line: 64, baseType: !1488, size: 16, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2040, file: !1822, line: 65, baseType: !1488, size: 16, offset: 80)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !2040, file: !1822, line: 67, baseType: !1380, size: 32, offset: 96)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !2040, file: !1822, line: 68, baseType: !1380, size: 32, offset: 128)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !2040, file: !1822, line: 69, baseType: !1380, size: 32, offset: 160)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2040, file: !1822, line: 70, baseType: !1488, size: 16, offset: 192)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2040, file: !1822, line: 71, baseType: !1488, size: 16, offset: 208)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !2040, file: !1822, line: 72, baseType: !1656, size: 64, offset: 224)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2040, file: !1822, line: 75, baseType: !1380, size: 32, offset: 288)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !2040, file: !1822, line: 75, baseType: !1380, size: 32, offset: 320)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !2040, file: !1822, line: 75, baseType: !1380, size: 32, offset: 352)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !2040, file: !1822, line: 78, baseType: !1380, size: 32, offset: 384)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !2040, file: !1822, line: 78, baseType: !1380, size: 32, offset: 416)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !2008, file: !1822, line: 343, baseType: !1389, size: 128, offset: 1024)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !2008, file: !1822, line: 344, baseType: !1389, size: 128, offset: 1152)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !2008, file: !1822, line: 345, baseType: !2059, size: 192, offset: 1280)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1822, line: 278, baseType: !2060)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1822, line: 270, size: 192, elements: !2061)
!2061 = !{!2062, !2063, !2064, !2065, !2066}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2060, file: !1822, line: 271, baseType: !1420, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2060, file: !1822, line: 273, baseType: !1380, size: 32, offset: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !2060, file: !1822, line: 275, baseType: !1420, size: 32, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !2060, file: !1822, line: 276, baseType: !1420, size: 32, offset: 96)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !2060, file: !1822, line: 277, baseType: !2067, size: 64, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1822, line: 55, size: 576, elements: !2069)
!2069 = !{!2070, !2071, !2072}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2068, file: !1822, line: 56, baseType: !1420, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2068, file: !1822, line: 57, baseType: !1380, size: 32, offset: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2068, file: !1822, line: 58, baseType: !1507, size: 512, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !2008, file: !1822, line: 346, baseType: !2074, size: 384, offset: 1472)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1822, line: 268, baseType: !2075)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1822, line: 253, size: 384, elements: !2076)
!2076 = !{!2077, !2078, !2079, !2080, !2081, !2125, !2126, !2127, !2128, !2129, !2130}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2075, file: !1822, line: 254, baseType: !1420, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !2075, file: !1822, line: 255, baseType: !1420, size: 32, offset: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2075, file: !1822, line: 255, baseType: !1420, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !2075, file: !1822, line: 258, baseType: !1380, size: 32, offset: 96)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !2075, file: !1822, line: 259, baseType: !2082, size: 64, offset: 128)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1822, line: 164, baseType: !2084)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1822, line: 108, size: 1664, elements: !2085)
!2085 = !{!2086, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2084, file: !1822, line: 109, baseType: !2087, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2084, file: !1822, line: 109, baseType: !2087, size: 64, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2084, file: !1822, line: 111, baseType: !1411, size: 512, offset: 128)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !2084, file: !1822, line: 119, baseType: !1656, size: 64, offset: 640)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !2084, file: !1822, line: 119, baseType: !1656, size: 64, offset: 704)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2084, file: !1822, line: 125, baseType: !1656, size: 64, offset: 768)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2084, file: !1822, line: 125, baseType: !1656, size: 64, offset: 832)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2084, file: !1822, line: 127, baseType: !1656, size: 64, offset: 896)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2084, file: !1822, line: 130, baseType: !1420, size: 32, offset: 960)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2084, file: !1822, line: 131, baseType: !1420, size: 32, offset: 992)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2084, file: !1822, line: 132, baseType: !2098, size: 64, offset: 1024)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1822, line: 106, baseType: !2100)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1822, line: 81, size: 512, elements: !2101)
!2101 = !{!2102, !2103, !2106, !2107, !2108, !2109}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2100, file: !1822, line: 82, baseType: !1656, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !2100, file: !1822, line: 97, baseType: !2104, size: 256, offset: 64)
!2104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1380, size: 256, elements: !2105)
!2105 = !{!1509, !1560}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2100, file: !1822, line: 102, baseType: !1656, size: 64, offset: 320)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2100, file: !1822, line: 102, baseType: !1656, size: 64, offset: 384)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2100, file: !1822, line: 104, baseType: !1420, size: 32, offset: 448)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2100, file: !1822, line: 105, baseType: !1420, size: 32, offset: 480)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !2084, file: !1822, line: 135, baseType: !1792, size: 96, offset: 1088)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2084, file: !1822, line: 136, baseType: !1380, size: 32, offset: 1184)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2084, file: !1822, line: 139, baseType: !1420, size: 32, offset: 1216)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !2084, file: !1822, line: 139, baseType: !1420, size: 32, offset: 1248)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !2084, file: !1822, line: 139, baseType: !1420, size: 32, offset: 1280)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2084, file: !1822, line: 140, baseType: !1792, size: 96, offset: 1312)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !2084, file: !1822, line: 143, baseType: !1488, size: 16, offset: 1408)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2084, file: !1822, line: 144, baseType: !1488, size: 16, offset: 1424)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !2084, file: !1822, line: 145, baseType: !1488, size: 16, offset: 1440)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !2084, file: !1822, line: 148, baseType: !1488, size: 16, offset: 1456)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !2084, file: !1822, line: 149, baseType: !1420, size: 32, offset: 1472)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !2084, file: !1822, line: 150, baseType: !1380, size: 32, offset: 1504)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2084, file: !1822, line: 152, baseType: !1820, size: 64, offset: 1536)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2084, file: !1822, line: 163, baseType: !1380, size: 32, offset: 1600)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2084, file: !1822, line: 163, baseType: !1380, size: 32, offset: 1632)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !2075, file: !1822, line: 261, baseType: !1380, size: 32, offset: 192)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !2075, file: !1822, line: 261, baseType: !1380, size: 32, offset: 224)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !2075, file: !1822, line: 261, baseType: !1380, size: 32, offset: 256)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2075, file: !1822, line: 263, baseType: !1420, size: 32, offset: 288)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2075, file: !1822, line: 266, baseType: !1420, size: 32, offset: 320)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2075, file: !1822, line: 267, baseType: !1380, size: 32, offset: 352)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2008, file: !1822, line: 347, baseType: !2082, size: 64, offset: 1856)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !2008, file: !1822, line: 348, baseType: !2133, size: 64, offset: 1920)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1822, line: 205, baseType: !2135)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1822, line: 186, size: 1024, elements: !2136)
!2136 = !{!2137, !2139, !2140, !2141, !2143, !2144, !2145, !2153, !2154, !2155, !2229, !2230}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2135, file: !1822, line: 187, baseType: !2138, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2135, file: !1822, line: 187, baseType: !2138, size: 64, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2135, file: !1822, line: 189, baseType: !1411, size: 512, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !2135, file: !1822, line: 191, baseType: !2142, size: 64, offset: 640)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !2135, file: !1822, line: 193, baseType: !1420, size: 32, offset: 704)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2135, file: !1822, line: 193, baseType: !1420, size: 32, offset: 736)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2135, file: !1822, line: 195, baseType: !2146, size: 64, offset: 768)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1822, line: 184, baseType: !2148)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1822, line: 166, size: 320, elements: !2149)
!2149 = !{!2150, !2151, !2152}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !2148, file: !1822, line: 180, baseType: !2104, size: 256)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2148, file: !1822, line: 182, baseType: !1420, size: 32, offset: 256)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2148, file: !1822, line: 183, baseType: !1420, size: 32, offset: 288)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2135, file: !1822, line: 196, baseType: !1420, size: 32, offset: 832)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2135, file: !1822, line: 198, baseType: !1420, size: 32, offset: 864)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2135, file: !1822, line: 200, baseType: !2156, size: 64, offset: 896)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1947, line: 77, size: 15424, elements: !2158)
!2158 = !{!2159, !2160, !2161, !2164, !2167, !2168, !2171, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2191, !2192, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2218, !2219, !2220, !2221, !2222, !2223}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2157, file: !1947, line: 78, baseType: !1698, size: 960)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2157, file: !1947, line: 80, baseType: !1717, size: 8192, offset: 960)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2157, file: !1947, line: 82, baseType: !2162, size: 64, offset: 9152)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1947, line: 43, flags: DIFlagFwdDecl)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2157, file: !1947, line: 83, baseType: !2165, size: 64, offset: 9216)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !1699, line: 46, flags: DIFlagFwdDecl)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2157, file: !1947, line: 86, baseType: !1945, size: 64, offset: 9280)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !2157, file: !1947, line: 87, baseType: !2169, size: 64, offset: 9344)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1947, line: 44, flags: DIFlagFwdDecl)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !2157, file: !1947, line: 89, baseType: !2172, size: 512, offset: 9408)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2169, size: 512, elements: !2173)
!2173 = !{!2174}
!2174 = !DISubrange(count: 8)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !2157, file: !1947, line: 90, baseType: !1488, size: 16, offset: 9920)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !2157, file: !1947, line: 90, baseType: !1488, size: 16, offset: 9936)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2157, file: !1947, line: 92, baseType: !1488, size: 16, offset: 9952)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2157, file: !1947, line: 92, baseType: !1488, size: 16, offset: 9968)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2157, file: !1947, line: 93, baseType: !1488, size: 16, offset: 9984)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2157, file: !1947, line: 93, baseType: !1488, size: 16, offset: 10000)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2157, file: !1947, line: 94, baseType: !1420, size: 32, offset: 10016)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !2157, file: !1947, line: 97, baseType: !1488, size: 16, offset: 10048)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !2157, file: !1947, line: 97, baseType: !1488, size: 16, offset: 10064)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !2157, file: !1947, line: 98, baseType: !1488, size: 16, offset: 10080)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !2157, file: !1947, line: 98, baseType: !1488, size: 16, offset: 10096)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !2157, file: !1947, line: 99, baseType: !1488, size: 16, offset: 10112)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !2157, file: !1947, line: 99, baseType: !1488, size: 16, offset: 10128)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !2157, file: !1947, line: 100, baseType: !5, size: 32, offset: 10144)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !2157, file: !1947, line: 101, baseType: !2190, size: 64, offset: 10176)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !2157, file: !1947, line: 103, baseType: !1723, size: 64, offset: 10240)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2157, file: !1947, line: 104, baseType: !2193, size: 64, offset: 10304)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !1699, line: 159, size: 448, elements: !2195)
!2195 = !{!2196, !2198, !2199, !2201, !2202, !2204}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2194, file: !1699, line: 161, baseType: !2197, size: 64)
!2197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !1559)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2194, file: !1699, line: 162, baseType: !2197, size: 64, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2194, file: !1699, line: 163, baseType: !2200, size: 32, offset: 128)
!2200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1488, size: 32, elements: !1559)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2194, file: !1699, line: 164, baseType: !2200, size: 32, offset: 160)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !2194, file: !1699, line: 165, baseType: !2203, size: 128, offset: 192)
!2203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2190, size: 128, elements: !1559)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2194, file: !1699, line: 166, baseType: !2205, size: 128, offset: 320)
!2205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2165, size: 128, elements: !1559)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !2157, file: !1947, line: 107, baseType: !1380, size: 32, offset: 10368)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !2157, file: !1947, line: 108, baseType: !1420, size: 32, offset: 10400)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !2157, file: !1947, line: 109, baseType: !1488, size: 16, offset: 10432)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2157, file: !1947, line: 110, baseType: !1488, size: 16, offset: 10448)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !2157, file: !1947, line: 113, baseType: !1420, size: 32, offset: 10464)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !2157, file: !1947, line: 113, baseType: !1420, size: 32, offset: 10496)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !2157, file: !1947, line: 114, baseType: !1412, size: 8, offset: 10528)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !2157, file: !1947, line: 114, baseType: !1412, size: 8, offset: 10536)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !2157, file: !1947, line: 115, baseType: !1488, size: 16, offset: 10544)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !2157, file: !1947, line: 116, baseType: !2216, size: 128, offset: 10560)
!2216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1380, size: 128, elements: !2217)
!2217 = !{!1509}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2157, file: !1947, line: 119, baseType: !1380, size: 32, offset: 10688)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2157, file: !1947, line: 119, baseType: !1380, size: 32, offset: 10720)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2157, file: !1947, line: 122, baseType: !1979, size: 512, offset: 10752)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !2157, file: !1947, line: 123, baseType: !1412, size: 8, offset: 11264)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2157, file: !1947, line: 125, baseType: !1617, size: 56, offset: 11272)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !2157, file: !1947, line: 126, baseType: !2224, size: 4096, offset: 11328)
!2224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2225, size: 4096, elements: !2173)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1947, line: 69, baseType: !2226)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1947, line: 67, size: 512, elements: !2227)
!2227 = !{!2228}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2226, file: !1947, line: 68, baseType: !1411, size: 512)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !2135, file: !1822, line: 201, baseType: !1380, size: 32, offset: 960)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2135, file: !1822, line: 204, baseType: !1420, size: 32, offset: 992)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2008, file: !1822, line: 350, baseType: !1389, size: 128, offset: 1984)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !2008, file: !1822, line: 351, baseType: !1420, size: 32, offset: 2112)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !2008, file: !1822, line: 351, baseType: !1420, size: 32, offset: 2144)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2008, file: !1822, line: 353, baseType: !2235, size: 64, offset: 2176)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1822, line: 297, baseType: !2237)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1822, line: 295, size: 2048, elements: !2238)
!2238 = !{!2239}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !2237, file: !1822, line: 296, baseType: !1928, size: 2048)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !2008, file: !1822, line: 355, baseType: !2241, size: 384, offset: 2240)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1822, line: 338, baseType: !2242)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1822, line: 322, size: 384, elements: !2243)
!2243 = !{!2244, !2245, !2246, !2247, !2248, !2249, !2250}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2242, file: !1822, line: 323, baseType: !1420, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !2242, file: !1822, line: 325, baseType: !1488, size: 16, offset: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2242, file: !1822, line: 326, baseType: !1488, size: 16, offset: 48)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !2242, file: !1822, line: 331, baseType: !1389, size: 128, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2242, file: !1822, line: 334, baseType: !1389, size: 128, offset: 192)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !2242, file: !1822, line: 335, baseType: !1420, size: 32, offset: 320)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2242, file: !1822, line: 337, baseType: !1420, size: 32, offset: 352)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1991, file: !1992, line: 81, baseType: !1379, size: 64, offset: 12224)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1991, file: !1992, line: 85, baseType: !2253, size: 6208, offset: 12288)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1992, line: 55, size: 6208, elements: !2254)
!2254 = !{!2255, !2256, !2257, !2258, !2259}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2253, file: !1992, line: 56, baseType: !1934, size: 6144)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2253, file: !1992, line: 58, baseType: !1488, size: 16, offset: 6144)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2253, file: !1992, line: 59, baseType: !1488, size: 16, offset: 6160)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !2253, file: !1992, line: 60, baseType: !1488, size: 16, offset: 6176)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !2253, file: !1992, line: 61, baseType: !1488, size: 16, offset: 6192)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1991, file: !1992, line: 86, baseType: !1420, size: 32, offset: 18496)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1991, file: !1992, line: 88, baseType: !1420, size: 32, offset: 18528)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1991, file: !1992, line: 90, baseType: !1420, size: 32, offset: 18560)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1991, file: !1992, line: 94, baseType: !1420, size: 32, offset: 18592)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1991, file: !1992, line: 100, baseType: !1979, size: 512, offset: 18624)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1883, file: !1874, line: 154, baseType: !2266, size: 64, offset: 1664)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !2268, line: 264, flags: DIFlagFwdDecl)
!2268 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1883, file: !1874, line: 156, baseType: !1945, size: 64, offset: 1728)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1883, file: !1874, line: 158, baseType: !1380, size: 32, offset: 1792)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1883, file: !1874, line: 159, baseType: !1380, size: 32, offset: 1824)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1883, file: !1874, line: 162, baseType: !1886, size: 64, offset: 1856)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1883, file: !1874, line: 162, baseType: !1886, size: 64, offset: 1920)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1883, file: !1874, line: 162, baseType: !1886, size: 64, offset: 1984)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1883, file: !1874, line: 164, baseType: !1389, size: 128, offset: 2048)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1883, file: !1874, line: 166, baseType: !2277, size: 64, offset: 2176)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1874, line: 51, flags: DIFlagFwdDecl)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1883, file: !1874, line: 167, baseType: !1379, size: 64, offset: 2240)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1883, file: !1874, line: 168, baseType: !1380, size: 32, offset: 2304)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1883, file: !1874, line: 170, baseType: !1380, size: 32, offset: 2336)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1883, file: !1874, line: 170, baseType: !1380, size: 32, offset: 2368)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1883, file: !1874, line: 171, baseType: !1380, size: 32, offset: 2400)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1883, file: !1874, line: 173, baseType: !1379, size: 64, offset: 2432)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1883, file: !1874, line: 175, baseType: !1420, size: 32, offset: 2496)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1883, file: !1874, line: 176, baseType: !1420, size: 32, offset: 2528)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1883, file: !1874, line: 179, baseType: !1420, size: 32, offset: 2560)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1883, file: !1874, line: 180, baseType: !1380, size: 32, offset: 2592)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1883, file: !1874, line: 183, baseType: !1420, size: 32, offset: 2624)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1883, file: !1874, line: 185, baseType: !1412, size: 8, offset: 2656)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1883, file: !1874, line: 186, baseType: !2292, size: 24, offset: 2664)
!2292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 24, elements: !1793)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1883, file: !1874, line: 189, baseType: !1389, size: 128, offset: 2688)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1873, file: !1874, line: 207, baseType: !1717, size: 8192, offset: 384)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1873, file: !1874, line: 208, baseType: !1717, size: 8192, offset: 8576)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1873, file: !1874, line: 210, baseType: !1420, size: 32, offset: 16768)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1873, file: !1874, line: 210, baseType: !1420, size: 32, offset: 16800)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1873, file: !1874, line: 211, baseType: !1420, size: 32, offset: 16832)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1873, file: !1874, line: 211, baseType: !1420, size: 32, offset: 16864)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1873, file: !1874, line: 212, baseType: !1511, size: 128, offset: 16896)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1762, file: !1763, line: 1246, baseType: !2302, size: 64, offset: 2112)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1763, line: 1067, size: 5184, elements: !2304)
!2304 = !{!2305, !2334, !2335, !2350, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2372, !2388, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2498}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2303, file: !1763, line: 1068, baseType: !2306, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1763, line: 934, baseType: !2308)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1763, line: 925, size: 576, elements: !2309)
!2309 = !{!2310, !2326, !2327, !2328, !2329, !2330, !2333}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2308, file: !1763, line: 926, baseType: !2311, size: 320)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1763, line: 830, baseType: !2312)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1763, line: 813, size: 320, elements: !2313)
!2313 = !{!2314, !2317, !2320, !2321, !2323, !2324, !2325}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2312, file: !1763, line: 814, baseType: !2315, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1763, line: 51, flags: DIFlagFwdDecl)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2312, file: !1763, line: 815, baseType: !2318, size: 64, offset: 64)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1763, line: 815, flags: DIFlagFwdDecl)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2312, file: !1763, line: 818, baseType: !1379, size: 64, offset: 128)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2312, file: !1763, line: 819, baseType: !2322, size: 32, offset: 192)
!2322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 32, elements: !2217)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2312, file: !1763, line: 822, baseType: !1420, size: 32, offset: 224)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2312, file: !1763, line: 826, baseType: !1420, size: 32, offset: 256)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2312, file: !1763, line: 829, baseType: !1420, size: 32, offset: 288)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2308, file: !1763, line: 928, baseType: !1488, size: 16, offset: 320)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2308, file: !1763, line: 928, baseType: !1488, size: 16, offset: 336)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2308, file: !1763, line: 929, baseType: !1420, size: 32, offset: 352)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2308, file: !1763, line: 930, baseType: !2190, size: 64, offset: 384)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2308, file: !1763, line: 931, baseType: !2331, size: 64, offset: 448)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1763, line: 931, flags: DIFlagFwdDecl)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2308, file: !1763, line: 933, baseType: !1379, size: 64, offset: 512)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2303, file: !1763, line: 1069, baseType: !2306, size: 64, offset: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2303, file: !1763, line: 1070, baseType: !2336, size: 64, offset: 128)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1763, line: 916, baseType: !2338)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1763, line: 891, size: 704, elements: !2339)
!2339 = !{!2340, !2341, !2342, !2344, !2345, !2346, !2347, !2348, !2349}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2338, file: !1763, line: 892, baseType: !2311, size: 320)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2338, file: !1763, line: 896, baseType: !1420, size: 32, offset: 320)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2338, file: !1763, line: 900, baseType: !2343, size: 96, offset: 352)
!2343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1420, size: 96, elements: !1793)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2338, file: !1763, line: 903, baseType: !1380, size: 32, offset: 448)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2338, file: !1763, line: 906, baseType: !1420, size: 32, offset: 480)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2338, file: !1763, line: 909, baseType: !1380, size: 32, offset: 512)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2338, file: !1763, line: 912, baseType: !1380, size: 32, offset: 544)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2338, file: !1763, line: 914, baseType: !1771, size: 64, offset: 576)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2338, file: !1763, line: 915, baseType: !1379, size: 64, offset: 640)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2303, file: !1763, line: 1071, baseType: !2351, size: 64, offset: 192)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1763, line: 920, baseType: !2353)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1763, line: 918, size: 320, elements: !2354)
!2354 = !{!2355}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2353, file: !1763, line: 919, baseType: !2311, size: 320)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2303, file: !1763, line: 1075, baseType: !1380, size: 32, offset: 256)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2303, file: !1763, line: 1077, baseType: !1380, size: 32, offset: 288)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2303, file: !1763, line: 1078, baseType: !1380, size: 32, offset: 320)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2303, file: !1763, line: 1079, baseType: !1488, size: 16, offset: 352)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2303, file: !1763, line: 1082, baseType: !1488, size: 16, offset: 368)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2303, file: !1763, line: 1085, baseType: !1412, size: 8, offset: 384)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2303, file: !1763, line: 1086, baseType: !1412, size: 8, offset: 392)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2303, file: !1763, line: 1087, baseType: !1412, size: 8, offset: 400)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2303, file: !1763, line: 1088, baseType: !1412, size: 8, offset: 408)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2303, file: !1763, line: 1090, baseType: !1380, size: 32, offset: 416)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2303, file: !1763, line: 1093, baseType: !1488, size: 16, offset: 448)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2303, file: !1763, line: 1096, baseType: !1412, size: 8, offset: 464)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2303, file: !1763, line: 1098, baseType: !2369, size: 40, offset: 472)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 40, elements: !2370)
!2370 = !{!2371}
!2371 = !DISubrange(count: 5)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2303, file: !1763, line: 1101, baseType: !2373, size: 832, offset: 512)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1763, line: 836, size: 832, elements: !2374)
!2374 = !{!2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2373, file: !1763, line: 837, baseType: !2311, size: 320)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2373, file: !1763, line: 839, baseType: !1488, size: 16, offset: 320)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2373, file: !1763, line: 839, baseType: !1488, size: 16, offset: 336)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2373, file: !1763, line: 842, baseType: !1488, size: 16, offset: 352)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2373, file: !1763, line: 842, baseType: !1488, size: 16, offset: 368)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2373, file: !1763, line: 843, baseType: !2200, size: 32, offset: 384)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2373, file: !1763, line: 845, baseType: !1420, size: 32, offset: 416)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2373, file: !1763, line: 847, baseType: !1379, size: 64, offset: 448)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2373, file: !1763, line: 848, baseType: !2156, size: 64, offset: 512)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2373, file: !1763, line: 849, baseType: !2156, size: 64, offset: 576)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2373, file: !1763, line: 850, baseType: !2156, size: 64, offset: 640)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2373, file: !1763, line: 851, baseType: !1792, size: 96, offset: 704)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2373, file: !1763, line: 852, baseType: !1380, size: 32, offset: 800)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2303, file: !1763, line: 1104, baseType: !2389, size: 1344, offset: 1344)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1763, line: 867, size: 1344, elements: !2390)
!2390 = !{!2391, !2392, !2393, !2394, !2395, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2389, file: !1763, line: 868, baseType: !1488, size: 16)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2389, file: !1763, line: 869, baseType: !1488, size: 16, offset: 16)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2389, file: !1763, line: 870, baseType: !1488, size: 16, offset: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2389, file: !1763, line: 871, baseType: !1488, size: 16, offset: 48)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2389, file: !1763, line: 873, baseType: !2396, size: 896, offset: 64)
!2396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2397, size: 896, elements: !1618)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1763, line: 864, baseType: !2398)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1763, line: 859, size: 128, elements: !2399)
!2399 = !{!2400, !2401, !2402, !2403, !2404, !2405}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2398, file: !1763, line: 860, baseType: !1488, size: 16)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2398, file: !1763, line: 861, baseType: !1488, size: 16, offset: 16)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2398, file: !1763, line: 861, baseType: !1488, size: 16, offset: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2398, file: !1763, line: 861, baseType: !1488, size: 16, offset: 48)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2398, file: !1763, line: 862, baseType: !1420, size: 32, offset: 64)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2398, file: !1763, line: 863, baseType: !1380, size: 32, offset: 96)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2389, file: !1763, line: 874, baseType: !1379, size: 64, offset: 960)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2389, file: !1763, line: 876, baseType: !1380, size: 32, offset: 1024)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2389, file: !1763, line: 876, baseType: !1380, size: 32, offset: 1056)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2389, file: !1763, line: 878, baseType: !1420, size: 32, offset: 1088)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2389, file: !1763, line: 879, baseType: !1420, size: 32, offset: 1120)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2389, file: !1763, line: 881, baseType: !1420, size: 32, offset: 1152)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2389, file: !1763, line: 881, baseType: !1420, size: 32, offset: 1184)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2389, file: !1763, line: 883, baseType: !1761, size: 64, offset: 1216)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2389, file: !1763, line: 884, baseType: !1771, size: 64, offset: 1280)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2303, file: !1763, line: 1107, baseType: !1380, size: 32, offset: 2688)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2303, file: !1763, line: 1110, baseType: !1380, size: 32, offset: 2720)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2303, file: !1763, line: 1113, baseType: !1488, size: 16, offset: 2752)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2303, file: !1763, line: 1113, baseType: !1488, size: 16, offset: 2768)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2303, file: !1763, line: 1116, baseType: !1412, size: 8, offset: 2784)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2303, file: !1763, line: 1117, baseType: !1804, size: 8, offset: 2792)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2303, file: !1763, line: 1120, baseType: !1488, size: 16, offset: 2800)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2303, file: !1763, line: 1121, baseType: !1380, size: 32, offset: 2816)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2303, file: !1763, line: 1122, baseType: !1380, size: 32, offset: 2848)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2303, file: !1763, line: 1123, baseType: !1380, size: 32, offset: 2880)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2303, file: !1763, line: 1124, baseType: !1380, size: 32, offset: 2912)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2303, file: !1763, line: 1125, baseType: !1380, size: 32, offset: 2944)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2303, file: !1763, line: 1126, baseType: !1380, size: 32, offset: 2976)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2303, file: !1763, line: 1127, baseType: !1380, size: 32, offset: 3008)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2303, file: !1763, line: 1128, baseType: !1380, size: 32, offset: 3040)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2303, file: !1763, line: 1129, baseType: !1380, size: 32, offset: 3072)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2303, file: !1763, line: 1130, baseType: !1380, size: 32, offset: 3104)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2303, file: !1763, line: 1131, baseType: !1488, size: 16, offset: 3136)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2303, file: !1763, line: 1132, baseType: !1412, size: 8, offset: 3152)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2303, file: !1763, line: 1133, baseType: !1412, size: 8, offset: 3160)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2303, file: !1763, line: 1134, baseType: !2292, size: 24, offset: 3168)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2303, file: !1763, line: 1135, baseType: !1412, size: 8, offset: 3192)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2303, file: !1763, line: 1138, baseType: !1771, size: 64, offset: 3200)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2303, file: !1763, line: 1139, baseType: !1412, size: 8, offset: 3264)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2303, file: !1763, line: 1140, baseType: !1412, size: 8, offset: 3272)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2303, file: !1763, line: 1141, baseType: !1412, size: 8, offset: 3280)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2303, file: !1763, line: 1142, baseType: !1412, size: 8, offset: 3288)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2303, file: !1763, line: 1143, baseType: !1412, size: 8, offset: 3296)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2303, file: !1763, line: 1144, baseType: !2444, size: 64, offset: 3304)
!2444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 64, elements: !2173)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2303, file: !1763, line: 1145, baseType: !2444, size: 64, offset: 3368)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2303, file: !1763, line: 1148, baseType: !1412, size: 8, offset: 3432)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2303, file: !1763, line: 1149, baseType: !1412, size: 8, offset: 3440)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2303, file: !1763, line: 1152, baseType: !1412, size: 8, offset: 3448)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2303, file: !1763, line: 1152, baseType: !1412, size: 8, offset: 3456)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2303, file: !1763, line: 1153, baseType: !1412, size: 8, offset: 3464)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2303, file: !1763, line: 1154, baseType: !1488, size: 16, offset: 3472)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2303, file: !1763, line: 1154, baseType: !1488, size: 16, offset: 3488)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2303, file: !1763, line: 1155, baseType: !1488, size: 16, offset: 3504)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2303, file: !1763, line: 1155, baseType: !1488, size: 16, offset: 3520)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2303, file: !1763, line: 1156, baseType: !1412, size: 8, offset: 3536)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2303, file: !1763, line: 1157, baseType: !1412, size: 8, offset: 3544)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2303, file: !1763, line: 1159, baseType: !1412, size: 8, offset: 3552)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2303, file: !1763, line: 1160, baseType: !1412, size: 8, offset: 3560)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2303, file: !1763, line: 1161, baseType: !1412, size: 8, offset: 3568)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2303, file: !1763, line: 1162, baseType: !1412, size: 8, offset: 3576)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2303, file: !1763, line: 1165, baseType: !1420, size: 32, offset: 3584)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2303, file: !1763, line: 1166, baseType: !1420, size: 32, offset: 3616)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2303, file: !1763, line: 1167, baseType: !1420, size: 32, offset: 3648)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2303, file: !1763, line: 1168, baseType: !1420, size: 32, offset: 3680)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2303, file: !1763, line: 1171, baseType: !1488, size: 16, offset: 3712)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2303, file: !1763, line: 1171, baseType: !1488, size: 16, offset: 3728)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2303, file: !1763, line: 1172, baseType: !1420, size: 32, offset: 3744)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2303, file: !1763, line: 1173, baseType: !1380, size: 32, offset: 3776)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2303, file: !1763, line: 1174, baseType: !1380, size: 32, offset: 3808)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2303, file: !1763, line: 1177, baseType: !2471, size: 1024, offset: 3840)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1763, line: 963, size: 1024, elements: !2472)
!2472 = !{!2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2496, !2497}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2471, file: !1763, line: 965, baseType: !1420, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2471, file: !1763, line: 968, baseType: !1380, size: 32, offset: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2471, file: !1763, line: 971, baseType: !1380, size: 32, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2471, file: !1763, line: 974, baseType: !1380, size: 32, offset: 96)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2471, file: !1763, line: 977, baseType: !1792, size: 96, offset: 128)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2471, file: !1763, line: 979, baseType: !1792, size: 96, offset: 224)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2471, file: !1763, line: 982, baseType: !1420, size: 32, offset: 320)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2471, file: !1763, line: 987, baseType: !1656, size: 64, offset: 352)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2471, file: !1763, line: 989, baseType: !1380, size: 32, offset: 416)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2471, file: !1763, line: 994, baseType: !1420, size: 32, offset: 448)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2471, file: !1763, line: 995, baseType: !1420, size: 32, offset: 480)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2471, file: !1763, line: 997, baseType: !1412, size: 8, offset: 512)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2471, file: !1763, line: 998, baseType: !1617, size: 56, offset: 520)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2471, file: !1763, line: 1000, baseType: !1380, size: 32, offset: 576)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2471, file: !1763, line: 1003, baseType: !1656, size: 64, offset: 608)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2471, file: !1763, line: 1006, baseType: !1420, size: 32, offset: 672)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2471, file: !1763, line: 1009, baseType: !1380, size: 32, offset: 704)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2471, file: !1763, line: 1012, baseType: !1656, size: 64, offset: 736)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2471, file: !1763, line: 1015, baseType: !1656, size: 64, offset: 800)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2471, file: !1763, line: 1018, baseType: !1420, size: 32, offset: 864)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2471, file: !1763, line: 1019, baseType: !2494, size: 64, offset: 896)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1763, line: 63, flags: DIFlagFwdDecl)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2471, file: !1763, line: 1023, baseType: !1380, size: 32, offset: 960)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2471, file: !1763, line: 1024, baseType: !1420, size: 32, offset: 992)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2303, file: !1763, line: 1179, baseType: !2499, size: 320, offset: 4864)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1763, line: 1043, size: 320, elements: !2500)
!2500 = !{!2501, !2502, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2499, file: !1763, line: 1044, baseType: !1412, size: 8)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2499, file: !1763, line: 1045, baseType: !2503, size: 16, offset: 8)
!2503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 16, elements: !1559)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2499, file: !1763, line: 1048, baseType: !1412, size: 8, offset: 24)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2499, file: !1763, line: 1049, baseType: !1380, size: 32, offset: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2499, file: !1763, line: 1049, baseType: !1380, size: 32, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2499, file: !1763, line: 1052, baseType: !1380, size: 32, offset: 96)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2499, file: !1763, line: 1052, baseType: !1380, size: 32, offset: 128)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2499, file: !1763, line: 1053, baseType: !1412, size: 8, offset: 160)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2499, file: !1763, line: 1054, baseType: !2292, size: 24, offset: 168)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2499, file: !1763, line: 1057, baseType: !1380, size: 32, offset: 192)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2499, file: !1763, line: 1057, baseType: !1380, size: 32, offset: 224)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2499, file: !1763, line: 1060, baseType: !1380, size: 32, offset: 256)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2499, file: !1763, line: 1060, baseType: !1380, size: 32, offset: 288)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1762, file: !1763, line: 1247, baseType: !2516, size: 64, offset: 2176)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!2517 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1763, line: 60, flags: DIFlagFwdDecl)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1762, file: !1763, line: 1251, baseType: !2519, size: 31872, offset: 2240)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1763, line: 403, size: 31872, elements: !2520)
!2520 = !{!2521, !2593, !2610, !2619, !2639, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2769, !2770, !2771, !2775, !2791, !2792}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2519, file: !1763, line: 404, baseType: !2522, size: 1984)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1763, line: 259, size: 1984, elements: !2523)
!2523 = !{!2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2588}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2522, file: !1763, line: 260, baseType: !1412, size: 8)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2522, file: !1763, line: 263, baseType: !1412, size: 8, offset: 8)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2522, file: !1763, line: 266, baseType: !1412, size: 8, offset: 16)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2522, file: !1763, line: 267, baseType: !1412, size: 8, offset: 24)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2522, file: !1763, line: 269, baseType: !1412, size: 8, offset: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2522, file: !1763, line: 270, baseType: !1412, size: 8, offset: 40)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2522, file: !1763, line: 276, baseType: !1412, size: 8, offset: 48)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2522, file: !1763, line: 279, baseType: !1412, size: 8, offset: 56)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2522, file: !1763, line: 280, baseType: !1488, size: 16, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2522, file: !1763, line: 280, baseType: !1488, size: 16, offset: 80)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2522, file: !1763, line: 281, baseType: !1380, size: 32, offset: 96)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2522, file: !1763, line: 284, baseType: !1412, size: 8, offset: 128)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2522, file: !1763, line: 285, baseType: !1412, size: 8, offset: 136)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2522, file: !1763, line: 287, baseType: !1562, size: 48, offset: 144)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2522, file: !1763, line: 290, baseType: !2539, size: 1280, offset: 192)
!2539 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1980, line: 174, baseType: !2540)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1980, line: 166, size: 1280, elements: !2541)
!2541 = !{!2542, !2543, !2544, !2545, !2546, !2547, !2548, !2587}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2540, file: !1980, line: 167, baseType: !1420, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2540, file: !1980, line: 167, baseType: !1420, size: 32, offset: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2540, file: !1980, line: 168, baseType: !1411, size: 512, offset: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2540, file: !1980, line: 169, baseType: !1411, size: 512, offset: 576)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2540, file: !1980, line: 170, baseType: !1380, size: 32, offset: 1088)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2540, file: !1980, line: 171, baseType: !1380, size: 32, offset: 1120)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2540, file: !1980, line: 172, baseType: !2549, size: 64, offset: 1152)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 64)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1980, line: 72, size: 3072, elements: !2551)
!2551 = !{!2552, !2553, !2554, !2555, !2556, !2557, !2558, !2583, !2584, !2585, !2586}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2550, file: !1980, line: 73, baseType: !1420, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2550, file: !1980, line: 73, baseType: !1420, size: 32, offset: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2550, file: !1980, line: 74, baseType: !1420, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2550, file: !1980, line: 75, baseType: !1420, size: 32, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2550, file: !1980, line: 77, baseType: !1511, size: 128, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2550, file: !1980, line: 77, baseType: !1511, size: 128, offset: 256)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2550, file: !1980, line: 79, baseType: !2559, size: 2304, offset: 384)
!2559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2560, size: 2304, elements: !2217)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1980, line: 67, baseType: !2561)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1980, line: 55, size: 576, elements: !2562)
!2562 = !{!2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2579, !2580, !2581, !2582}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2561, file: !1980, line: 56, baseType: !1488, size: 16)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2561, file: !1980, line: 56, baseType: !1488, size: 16, offset: 16)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2561, file: !1980, line: 58, baseType: !1380, size: 32, offset: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2561, file: !1980, line: 59, baseType: !1380, size: 32, offset: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2561, file: !1980, line: 59, baseType: !1380, size: 32, offset: 96)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2561, file: !1980, line: 60, baseType: !1656, size: 64, offset: 128)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2561, file: !1980, line: 60, baseType: !1656, size: 64, offset: 192)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2561, file: !1980, line: 61, baseType: !2571, size: 64, offset: 256)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1980, line: 47, baseType: !2573)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1980, line: 44, size: 96, elements: !2574)
!2574 = !{!2575, !2576, !2577, !2578}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2573, file: !1980, line: 45, baseType: !1380, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2573, file: !1980, line: 45, baseType: !1380, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2573, file: !1980, line: 46, baseType: !1488, size: 16, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2573, file: !1980, line: 46, baseType: !1488, size: 16, offset: 80)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2561, file: !1980, line: 62, baseType: !2571, size: 64, offset: 320)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2561, file: !1980, line: 64, baseType: !2571, size: 64, offset: 384)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2561, file: !1980, line: 65, baseType: !1656, size: 64, offset: 448)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2561, file: !1980, line: 66, baseType: !1656, size: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2550, file: !1980, line: 80, baseType: !1792, size: 96, offset: 2688)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2550, file: !1980, line: 80, baseType: !1792, size: 96, offset: 2784)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2550, file: !1980, line: 81, baseType: !1792, size: 96, offset: 2880)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2550, file: !1980, line: 83, baseType: !1792, size: 96, offset: 2976)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2540, file: !1980, line: 173, baseType: !1379, size: 64, offset: 1216)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2522, file: !1763, line: 291, baseType: !2589, size: 512, offset: 1472)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1980, line: 178, baseType: !2590)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1980, line: 176, size: 512, elements: !2591)
!2591 = !{!2592}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2590, file: !1980, line: 177, baseType: !1411, size: 512)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2519, file: !1763, line: 406, baseType: !2594, size: 64, offset: 1984)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1763, line: 80, size: 1472, elements: !2596)
!2596 = !{!2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2595, file: !1763, line: 81, baseType: !1379, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2595, file: !1763, line: 82, baseType: !1379, size: 64, offset: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2595, file: !1763, line: 83, baseType: !5, size: 32, offset: 128)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2595, file: !1763, line: 84, baseType: !5, size: 32, offset: 160)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2595, file: !1763, line: 86, baseType: !5, size: 32, offset: 192)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2595, file: !1763, line: 87, baseType: !5, size: 32, offset: 224)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2595, file: !1763, line: 88, baseType: !5, size: 32, offset: 256)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2595, file: !1763, line: 89, baseType: !5, size: 32, offset: 288)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2595, file: !1763, line: 90, baseType: !5, size: 32, offset: 320)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2595, file: !1763, line: 91, baseType: !5, size: 32, offset: 352)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2595, file: !1763, line: 92, baseType: !5, size: 32, offset: 384)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2595, file: !1763, line: 93, baseType: !5, size: 32, offset: 416)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2595, file: !1763, line: 95, baseType: !1503, size: 1024, offset: 448)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2519, file: !1763, line: 407, baseType: !2611, size: 64, offset: 2048)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1763, line: 98, size: 1216, elements: !2613)
!2613 = !{!2614, !2615, !2616, !2617, !2618}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2612, file: !1763, line: 100, baseType: !1379, size: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2612, file: !1763, line: 101, baseType: !1379, size: 64, offset: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2612, file: !1763, line: 103, baseType: !5, size: 32, offset: 128)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2612, file: !1763, line: 104, baseType: !5, size: 32, offset: 160)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2612, file: !1763, line: 106, baseType: !1503, size: 1024, offset: 192)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2519, file: !1763, line: 408, baseType: !2620, size: 512, offset: 2112)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1763, line: 109, size: 512, elements: !2621)
!2621 = !{!2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2620, file: !1763, line: 111, baseType: !1420, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2620, file: !1763, line: 112, baseType: !1420, size: 32, offset: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2620, file: !1763, line: 115, baseType: !1420, size: 32, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2620, file: !1763, line: 116, baseType: !1420, size: 32, offset: 96)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2620, file: !1763, line: 117, baseType: !1420, size: 32, offset: 128)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2620, file: !1763, line: 118, baseType: !1420, size: 32, offset: 160)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2620, file: !1763, line: 119, baseType: !1420, size: 32, offset: 192)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2620, file: !1763, line: 120, baseType: !1420, size: 32, offset: 224)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2620, file: !1763, line: 121, baseType: !1420, size: 32, offset: 256)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2620, file: !1763, line: 122, baseType: !1420, size: 32, offset: 288)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2620, file: !1763, line: 125, baseType: !1420, size: 32, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2620, file: !1763, line: 126, baseType: !1420, size: 32, offset: 352)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2620, file: !1763, line: 127, baseType: !1488, size: 16, offset: 384)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2620, file: !1763, line: 128, baseType: !1488, size: 16, offset: 400)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2620, file: !1763, line: 129, baseType: !1420, size: 32, offset: 416)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2620, file: !1763, line: 130, baseType: !1420, size: 32, offset: 448)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2620, file: !1763, line: 131, baseType: !1420, size: 32, offset: 480)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2519, file: !1763, line: 409, baseType: !2640, size: 576, offset: 2624)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1763, line: 134, size: 576, elements: !2641)
!2641 = !{!2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2640, file: !1763, line: 135, baseType: !1420, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2640, file: !1763, line: 136, baseType: !1420, size: 32, offset: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2640, file: !1763, line: 137, baseType: !1420, size: 32, offset: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2640, file: !1763, line: 138, baseType: !1420, size: 32, offset: 96)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2640, file: !1763, line: 139, baseType: !1420, size: 32, offset: 128)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2640, file: !1763, line: 140, baseType: !1420, size: 32, offset: 160)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2640, file: !1763, line: 141, baseType: !1420, size: 32, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2640, file: !1763, line: 142, baseType: !1420, size: 32, offset: 224)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2640, file: !1763, line: 143, baseType: !1380, size: 32, offset: 256)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2640, file: !1763, line: 144, baseType: !1420, size: 32, offset: 288)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2640, file: !1763, line: 145, baseType: !1420, size: 32, offset: 320)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2640, file: !1763, line: 147, baseType: !1420, size: 32, offset: 352)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2640, file: !1763, line: 148, baseType: !1420, size: 32, offset: 384)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2640, file: !1763, line: 149, baseType: !1420, size: 32, offset: 416)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2640, file: !1763, line: 150, baseType: !1420, size: 32, offset: 448)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2640, file: !1763, line: 151, baseType: !1420, size: 32, offset: 480)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2640, file: !1763, line: 152, baseType: !1734, size: 64, offset: 512)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2519, file: !1763, line: 411, baseType: !1420, size: 32, offset: 3200)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2519, file: !1763, line: 411, baseType: !1420, size: 32, offset: 3232)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2519, file: !1763, line: 411, baseType: !1420, size: 32, offset: 3264)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2519, file: !1763, line: 412, baseType: !1380, size: 32, offset: 3296)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2519, file: !1763, line: 413, baseType: !1420, size: 32, offset: 3328)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2519, file: !1763, line: 413, baseType: !1420, size: 32, offset: 3360)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2519, file: !1763, line: 415, baseType: !1420, size: 32, offset: 3392)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2519, file: !1763, line: 415, baseType: !1420, size: 32, offset: 3424)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2519, file: !1763, line: 416, baseType: !1488, size: 16, offset: 3456)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2519, file: !1763, line: 416, baseType: !1488, size: 16, offset: 3472)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2519, file: !1763, line: 418, baseType: !1380, size: 32, offset: 3488)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2519, file: !1763, line: 418, baseType: !1380, size: 32, offset: 3520)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2519, file: !1763, line: 421, baseType: !1380, size: 32, offset: 3552)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2519, file: !1763, line: 421, baseType: !1380, size: 32, offset: 3584)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2519, file: !1763, line: 421, baseType: !1380, size: 32, offset: 3616)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2519, file: !1763, line: 425, baseType: !1488, size: 16, offset: 3648)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2519, file: !1763, line: 425, baseType: !1488, size: 16, offset: 3664)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2519, file: !1763, line: 425, baseType: !1488, size: 16, offset: 3680)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2519, file: !1763, line: 426, baseType: !1488, size: 16, offset: 3696)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2519, file: !1763, line: 428, baseType: !1488, size: 16, offset: 3712)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2519, file: !1763, line: 428, baseType: !1488, size: 16, offset: 3728)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2519, file: !1763, line: 431, baseType: !1420, size: 32, offset: 3744)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2519, file: !1763, line: 433, baseType: !1488, size: 16, offset: 3776)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2519, file: !1763, line: 435, baseType: !1488, size: 16, offset: 3792)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2519, file: !1763, line: 437, baseType: !1488, size: 16, offset: 3808)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2519, file: !1763, line: 439, baseType: !1488, size: 16, offset: 3824)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2519, file: !1763, line: 441, baseType: !1488, size: 16, offset: 3840)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2519, file: !1763, line: 443, baseType: !1488, size: 16, offset: 3856)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2519, file: !1763, line: 449, baseType: !1420, size: 32, offset: 3872)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2519, file: !1763, line: 453, baseType: !1420, size: 32, offset: 3904)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2519, file: !1763, line: 458, baseType: !1488, size: 16, offset: 3936)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2519, file: !1763, line: 462, baseType: !1488, size: 16, offset: 3952)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2519, file: !1763, line: 467, baseType: !1420, size: 32, offset: 3968)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2519, file: !1763, line: 467, baseType: !1420, size: 32, offset: 4000)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2519, file: !1763, line: 469, baseType: !1488, size: 16, offset: 4032)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2519, file: !1763, line: 469, baseType: !1488, size: 16, offset: 4048)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2519, file: !1763, line: 469, baseType: !1488, size: 16, offset: 4064)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2519, file: !1763, line: 469, baseType: !1488, size: 16, offset: 4080)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2519, file: !1763, line: 474, baseType: !1488, size: 16, offset: 4096)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2519, file: !1763, line: 475, baseType: !1412, size: 8, offset: 4112)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2519, file: !1763, line: 476, baseType: !1412, size: 8, offset: 4120)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2519, file: !1763, line: 481, baseType: !1420, size: 32, offset: 4128)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2519, file: !1763, line: 486, baseType: !1420, size: 32, offset: 4160)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2519, file: !1763, line: 491, baseType: !1420, size: 32, offset: 4192)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2519, file: !1763, line: 496, baseType: !1488, size: 16, offset: 4224)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2519, file: !1763, line: 498, baseType: !1488, size: 16, offset: 4240)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2519, file: !1763, line: 501, baseType: !1488, size: 16, offset: 4256)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2519, file: !1763, line: 502, baseType: !1488, size: 16, offset: 4272)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2519, file: !1763, line: 508, baseType: !1488, size: 16, offset: 4288)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2519, file: !1763, line: 513, baseType: !1488, size: 16, offset: 4304)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2519, file: !1763, line: 515, baseType: !1488, size: 16, offset: 4320)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2519, file: !1763, line: 515, baseType: !1488, size: 16, offset: 4336)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2519, file: !1763, line: 519, baseType: !1511, size: 128, offset: 4352)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2519, file: !1763, line: 519, baseType: !1511, size: 128, offset: 4480)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2519, file: !1763, line: 520, baseType: !1601, size: 128, offset: 4608)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2519, file: !1763, line: 523, baseType: !1389, size: 128, offset: 4736)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2519, file: !1763, line: 524, baseType: !1488, size: 16, offset: 4864)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2519, file: !1763, line: 527, baseType: !1488, size: 16, offset: 4880)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2519, file: !1763, line: 532, baseType: !1380, size: 32, offset: 4896)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2519, file: !1763, line: 532, baseType: !1380, size: 32, offset: 4928)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2519, file: !1763, line: 534, baseType: !1380, size: 32, offset: 4960)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2519, file: !1763, line: 538, baseType: !1380, size: 32, offset: 4992)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2519, file: !1763, line: 542, baseType: !1420, size: 32, offset: 5024)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2519, file: !1763, line: 545, baseType: !1380, size: 32, offset: 5056)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2519, file: !1763, line: 545, baseType: !1380, size: 32, offset: 5088)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2519, file: !1763, line: 545, baseType: !1380, size: 32, offset: 5120)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2519, file: !1763, line: 548, baseType: !1380, size: 32, offset: 5152)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2519, file: !1763, line: 551, baseType: !1488, size: 16, offset: 5184)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2519, file: !1763, line: 551, baseType: !1488, size: 16, offset: 5200)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2519, file: !1763, line: 551, baseType: !1488, size: 16, offset: 5216)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2519, file: !1763, line: 551, baseType: !1488, size: 16, offset: 5232)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2519, file: !1763, line: 552, baseType: !1488, size: 16, offset: 5248)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2519, file: !1763, line: 552, baseType: !1488, size: 16, offset: 5264)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2519, file: !1763, line: 553, baseType: !1380, size: 32, offset: 5280)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2519, file: !1763, line: 553, baseType: !1380, size: 32, offset: 5312)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2519, file: !1763, line: 554, baseType: !1488, size: 16, offset: 5344)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2519, file: !1763, line: 554, baseType: !1488, size: 16, offset: 5360)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2519, file: !1763, line: 555, baseType: !1380, size: 32, offset: 5376)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2519, file: !1763, line: 555, baseType: !1380, size: 32, offset: 5408)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2519, file: !1763, line: 558, baseType: !1717, size: 8192, offset: 5440)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2519, file: !1763, line: 561, baseType: !1420, size: 32, offset: 13632)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2519, file: !1763, line: 562, baseType: !1488, size: 16, offset: 13664)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2519, file: !1763, line: 562, baseType: !1488, size: 16, offset: 13680)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2519, file: !1763, line: 565, baseType: !1934, size: 6144, offset: 13696)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2519, file: !1763, line: 568, baseType: !2216, size: 128, offset: 19840)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2519, file: !1763, line: 569, baseType: !2216, size: 128, offset: 19968)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2519, file: !1763, line: 572, baseType: !1412, size: 8, offset: 20096)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2519, file: !1763, line: 573, baseType: !1412, size: 8, offset: 20104)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2519, file: !1763, line: 574, baseType: !1412, size: 8, offset: 20112)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2519, file: !1763, line: 575, baseType: !2369, size: 40, offset: 20120)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2519, file: !1763, line: 578, baseType: !1420, size: 32, offset: 20160)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2519, file: !1763, line: 579, baseType: !1488, size: 16, offset: 20192)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2519, file: !1763, line: 580, baseType: !1488, size: 16, offset: 20208)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2519, file: !1763, line: 581, baseType: !1380, size: 32, offset: 20224)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2519, file: !1763, line: 582, baseType: !1380, size: 32, offset: 20256)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2519, file: !1763, line: 585, baseType: !1488, size: 16, offset: 20288)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2519, file: !1763, line: 585, baseType: !1488, size: 16, offset: 20304)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2519, file: !1763, line: 586, baseType: !1380, size: 32, offset: 20320)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2519, file: !1763, line: 589, baseType: !1488, size: 16, offset: 20352)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2519, file: !1763, line: 589, baseType: !1488, size: 16, offset: 20368)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2519, file: !1763, line: 590, baseType: !1420, size: 32, offset: 20384)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2519, file: !1763, line: 593, baseType: !1488, size: 16, offset: 20416)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2519, file: !1763, line: 593, baseType: !1488, size: 16, offset: 20432)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2519, file: !1763, line: 594, baseType: !1488, size: 16, offset: 20448)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2519, file: !1763, line: 594, baseType: !1488, size: 16, offset: 20464)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2519, file: !1763, line: 595, baseType: !1380, size: 32, offset: 20480)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2519, file: !1763, line: 596, baseType: !1380, size: 32, offset: 20512)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2519, file: !1763, line: 597, baseType: !2767, size: 64, offset: 20544)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2268, line: 55, flags: DIFlagFwdDecl)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2519, file: !1763, line: 600, baseType: !1420, size: 32, offset: 20608)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2519, file: !1763, line: 601, baseType: !1380, size: 32, offset: 20640)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2519, file: !1763, line: 604, baseType: !2772, size: 256, offset: 20672)
!2772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 256, elements: !2773)
!2773 = !{!2774}
!2774 = !DISubrange(count: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2519, file: !1763, line: 607, baseType: !2776, size: 10880, offset: 20928)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1763, line: 364, size: 10880, elements: !2777)
!2777 = !{!2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2776, file: !1763, line: 365, baseType: !2522, size: 1984)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2776, file: !1763, line: 367, baseType: !1717, size: 8192, offset: 1984)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2776, file: !1763, line: 369, baseType: !1488, size: 16, offset: 10176)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2776, file: !1763, line: 369, baseType: !1488, size: 16, offset: 10192)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2776, file: !1763, line: 370, baseType: !1488, size: 16, offset: 10208)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2776, file: !1763, line: 370, baseType: !1488, size: 16, offset: 10224)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2776, file: !1763, line: 372, baseType: !1380, size: 32, offset: 10240)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2776, file: !1763, line: 373, baseType: !1380, size: 32, offset: 10272)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2776, file: !1763, line: 375, baseType: !2292, size: 24, offset: 10304)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2776, file: !1763, line: 376, baseType: !1412, size: 8, offset: 10328)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2776, file: !1763, line: 378, baseType: !1412, size: 8, offset: 10336)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2776, file: !1763, line: 379, baseType: !2292, size: 24, offset: 10344)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2776, file: !1763, line: 381, baseType: !1411, size: 512, offset: 10368)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2519, file: !1763, line: 609, baseType: !1420, size: 32, offset: 31808)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2519, file: !1763, line: 610, baseType: !1420, size: 32, offset: 31840)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1762, file: !1763, line: 1252, baseType: !2794, size: 256, offset: 34112)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1763, line: 158, size: 256, elements: !2795)
!2795 = !{!2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2794, file: !1763, line: 159, baseType: !1420, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2794, file: !1763, line: 160, baseType: !1380, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2794, file: !1763, line: 161, baseType: !1380, size: 32, offset: 64)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2794, file: !1763, line: 162, baseType: !1380, size: 32, offset: 96)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2794, file: !1763, line: 163, baseType: !1420, size: 32, offset: 128)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2794, file: !1763, line: 164, baseType: !1488, size: 16, offset: 160)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2794, file: !1763, line: 165, baseType: !1488, size: 16, offset: 176)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2794, file: !1763, line: 166, baseType: !1380, size: 32, offset: 192)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2794, file: !1763, line: 167, baseType: !1380, size: 32, offset: 224)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1762, file: !1763, line: 1254, baseType: !1389, size: 128, offset: 34368)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1762, file: !1763, line: 1255, baseType: !1389, size: 128, offset: 34496)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1762, file: !1763, line: 1257, baseType: !1379, size: 64, offset: 34624)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1762, file: !1763, line: 1258, baseType: !1379, size: 64, offset: 34688)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1762, file: !1763, line: 1259, baseType: !1379, size: 64, offset: 34752)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1762, file: !1763, line: 1260, baseType: !1379, size: 64, offset: 34816)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1762, file: !1763, line: 1262, baseType: !1379, size: 64, offset: 34880)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1762, file: !1763, line: 1265, baseType: !2813, size: 64, offset: 34944)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 64)
!2814 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1763, line: 1265, flags: DIFlagFwdDecl)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1762, file: !1763, line: 1266, baseType: !1488, size: 16, offset: 35008)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1762, file: !1763, line: 1267, baseType: !1488, size: 16, offset: 35024)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1762, file: !1763, line: 1270, baseType: !1420, size: 32, offset: 35040)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1762, file: !1763, line: 1271, baseType: !1389, size: 128, offset: 35072)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1762, file: !1763, line: 1274, baseType: !2820, size: 128, offset: 35200)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1763, line: 650, size: 128, elements: !2821)
!2821 = !{!2822, !2823, !2824, !2825, !2826}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2820, file: !1763, line: 651, baseType: !1792, size: 96)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2820, file: !1763, line: 652, baseType: !1412, size: 8, offset: 96)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2820, file: !1763, line: 652, baseType: !1412, size: 8, offset: 104)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2820, file: !1763, line: 652, baseType: !1412, size: 8, offset: 112)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2820, file: !1763, line: 652, baseType: !1412, size: 8, offset: 120)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1762, file: !1763, line: 1275, baseType: !2828, size: 1472, offset: 35328)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1763, line: 676, size: 1472, elements: !2829)
!2829 = !{!2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2842, !2852, !2853, !2854, !2855, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2828, file: !1763, line: 679, baseType: !2820, size: 128)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2828, file: !1763, line: 680, baseType: !1488, size: 16, offset: 128)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2828, file: !1763, line: 680, baseType: !1488, size: 16, offset: 144)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2828, file: !1763, line: 680, baseType: !1488, size: 16, offset: 160)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2828, file: !1763, line: 680, baseType: !1488, size: 16, offset: 176)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2828, file: !1763, line: 681, baseType: !1488, size: 16, offset: 192)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2828, file: !1763, line: 681, baseType: !1488, size: 16, offset: 208)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2828, file: !1763, line: 681, baseType: !1488, size: 16, offset: 224)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2828, file: !1763, line: 681, baseType: !1488, size: 16, offset: 240)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2828, file: !1763, line: 682, baseType: !1488, size: 16, offset: 256)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2828, file: !1763, line: 682, baseType: !2841, size: 48, offset: 272)
!2841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1488, size: 48, elements: !1793)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2828, file: !1763, line: 685, baseType: !2843, size: 192, offset: 320)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1763, line: 633, size: 192, elements: !2844)
!2844 = !{!2845, !2846, !2847, !2848, !2849, !2850, !2851}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2843, file: !1763, line: 634, baseType: !1488, size: 16)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2843, file: !1763, line: 634, baseType: !1488, size: 16, offset: 16)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2843, file: !1763, line: 635, baseType: !1488, size: 16, offset: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2843, file: !1763, line: 635, baseType: !1488, size: 16, offset: 48)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2843, file: !1763, line: 636, baseType: !1380, size: 32, offset: 64)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2843, file: !1763, line: 636, baseType: !1380, size: 32, offset: 96)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2843, file: !1763, line: 637, baseType: !2767, size: 64, offset: 128)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2828, file: !1763, line: 686, baseType: !1488, size: 16, offset: 512)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2828, file: !1763, line: 686, baseType: !1488, size: 16, offset: 528)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2828, file: !1763, line: 687, baseType: !1380, size: 32, offset: 544)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2828, file: !1763, line: 688, baseType: !2856, size: 448, offset: 576)
!2856 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1763, line: 674, baseType: !2857)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1763, line: 659, size: 448, elements: !2858)
!2858 = !{!2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2857, file: !1763, line: 660, baseType: !1380, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2857, file: !1763, line: 661, baseType: !1380, size: 32, offset: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2857, file: !1763, line: 662, baseType: !1380, size: 32, offset: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2857, file: !1763, line: 663, baseType: !1380, size: 32, offset: 96)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2857, file: !1763, line: 664, baseType: !1380, size: 32, offset: 128)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2857, file: !1763, line: 665, baseType: !1380, size: 32, offset: 160)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2857, file: !1763, line: 666, baseType: !1380, size: 32, offset: 192)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2857, file: !1763, line: 667, baseType: !1380, size: 32, offset: 224)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2857, file: !1763, line: 668, baseType: !1380, size: 32, offset: 256)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2857, file: !1763, line: 669, baseType: !1380, size: 32, offset: 288)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2857, file: !1763, line: 670, baseType: !1420, size: 32, offset: 320)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2857, file: !1763, line: 671, baseType: !1380, size: 32, offset: 352)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2857, file: !1763, line: 672, baseType: !1380, size: 32, offset: 384)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2857, file: !1763, line: 673, baseType: !1488, size: 16, offset: 416)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2857, file: !1763, line: 673, baseType: !1488, size: 16, offset: 432)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2828, file: !1763, line: 692, baseType: !1380, size: 32, offset: 1024)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2828, file: !1763, line: 697, baseType: !1380, size: 32, offset: 1056)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2828, file: !1763, line: 703, baseType: !1420, size: 32, offset: 1088)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2828, file: !1763, line: 704, baseType: !1488, size: 16, offset: 1120)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2828, file: !1763, line: 704, baseType: !1488, size: 16, offset: 1136)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2828, file: !1763, line: 705, baseType: !1488, size: 16, offset: 1152)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2828, file: !1763, line: 706, baseType: !1488, size: 16, offset: 1168)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2828, file: !1763, line: 707, baseType: !1488, size: 16, offset: 1184)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2828, file: !1763, line: 708, baseType: !1488, size: 16, offset: 1200)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2828, file: !1763, line: 709, baseType: !1488, size: 16, offset: 1216)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2828, file: !1763, line: 709, baseType: !1488, size: 16, offset: 1232)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2828, file: !1763, line: 709, baseType: !1488, size: 16, offset: 1248)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2828, file: !1763, line: 709, baseType: !1488, size: 16, offset: 1264)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2828, file: !1763, line: 710, baseType: !1488, size: 16, offset: 1280)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2828, file: !1763, line: 711, baseType: !1488, size: 16, offset: 1296)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2828, file: !1763, line: 712, baseType: !1380, size: 32, offset: 1312)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2828, file: !1763, line: 713, baseType: !1380, size: 32, offset: 1344)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2828, file: !1763, line: 713, baseType: !1380, size: 32, offset: 1376)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2828, file: !1763, line: 713, baseType: !1380, size: 32, offset: 1408)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2828, file: !1763, line: 713, baseType: !1380, size: 32, offset: 1440)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1762, file: !1763, line: 1278, baseType: !2895, size: 64, offset: 36800)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1763, line: 1197, size: 64, elements: !2896)
!2896 = !{!2897, !2898, !2899, !2900}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2895, file: !1763, line: 1199, baseType: !1380, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2895, file: !1763, line: 1200, baseType: !1412, size: 8, offset: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2895, file: !1763, line: 1201, baseType: !1412, size: 8, offset: 40)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2895, file: !1763, line: 1202, baseType: !1488, size: 16, offset: 48)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1762, file: !1763, line: 1281, baseType: !1820, size: 64, offset: 36864)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1762, file: !1763, line: 1284, baseType: !2903, size: 192, offset: 36928)
!2903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1763, line: 1208, size: 192, elements: !2904)
!2904 = !{!2905, !2906, !2907, !2908}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2903, file: !1763, line: 1209, baseType: !1792, size: 96)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2903, file: !1763, line: 1210, baseType: !1420, size: 32, offset: 96)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2903, file: !1763, line: 1210, baseType: !1420, size: 32, offset: 128)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2903, file: !1763, line: 1210, baseType: !1420, size: 32, offset: 160)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1762, file: !1763, line: 1287, baseType: !1990, size: 64, offset: 37120)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1762, file: !1763, line: 1289, baseType: !2911, size: 64, offset: 37184)
!2911 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2912, line: 27, baseType: !2913)
!2912 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2913 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2914, line: 45, baseType: !2915)
!2914 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2915 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1762, file: !1763, line: 1290, baseType: !2911, size: 64, offset: 37248)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1762, file: !1763, line: 1293, baseType: !2539, size: 1280, offset: 37312)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1762, file: !1763, line: 1294, baseType: !2589, size: 512, offset: 38592)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1762, file: !1763, line: 1295, baseType: !1979, size: 512, offset: 39104)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1762, file: !1763, line: 1298, baseType: !2921, size: 64, offset: 39616)
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 64)
!2922 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1763, line: 1298, flags: DIFlagFwdDecl)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !1695, file: !22, line: 58, baseType: !1761, size: 64, offset: 1536)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !1695, file: !22, line: 60, baseType: !1420, size: 32, offset: 1600)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1695, file: !22, line: 61, baseType: !1420, size: 32, offset: 1632)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1695, file: !22, line: 63, baseType: !1488, size: 16, offset: 1664)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1695, file: !22, line: 64, baseType: !1488, size: 16, offset: 1680)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1695, file: !22, line: 65, baseType: !1488, size: 16, offset: 1696)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1695, file: !22, line: 66, baseType: !1488, size: 16, offset: 1712)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !1695, file: !22, line: 67, baseType: !1488, size: 16, offset: 1728)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !1695, file: !22, line: 68, baseType: !1488, size: 16, offset: 1744)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !1695, file: !22, line: 69, baseType: !1488, size: 16, offset: 1760)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !1695, file: !22, line: 70, baseType: !1488, size: 16, offset: 1776)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1695, file: !22, line: 71, baseType: !1488, size: 16, offset: 1792)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !1695, file: !22, line: 73, baseType: !1488, size: 16, offset: 1808)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !1695, file: !22, line: 74, baseType: !1488, size: 16, offset: 1824)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1695, file: !22, line: 76, baseType: !1488, size: 16, offset: 1840)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !1695, file: !22, line: 78, baseType: !1680, size: 64, offset: 1856)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1695, file: !22, line: 79, baseType: !1379, size: 64, offset: 1920)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !1687, file: !1688, line: 175, baseType: !1694, size: 64, offset: 256)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !1687, file: !1688, line: 176, baseType: !1411, size: 512, offset: 320)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !1687, file: !1688, line: 178, baseType: !1488, size: 16, offset: 832)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !1687, file: !1688, line: 178, baseType: !1488, size: 16, offset: 848)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1687, file: !1688, line: 178, baseType: !1488, size: 16, offset: 864)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1687, file: !1688, line: 178, baseType: !1488, size: 16, offset: 880)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !1687, file: !1688, line: 179, baseType: !1488, size: 16, offset: 896)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !1687, file: !1688, line: 180, baseType: !1488, size: 16, offset: 912)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1687, file: !1688, line: 181, baseType: !1488, size: 16, offset: 928)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1687, file: !1688, line: 182, baseType: !1488, size: 16, offset: 944)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !1687, file: !1688, line: 183, baseType: !1488, size: 16, offset: 960)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !1687, file: !1688, line: 184, baseType: !1488, size: 16, offset: 976)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !1687, file: !1688, line: 185, baseType: !1488, size: 16, offset: 992)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !1687, file: !1688, line: 186, baseType: !1488, size: 16, offset: 1008)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !1687, file: !1688, line: 188, baseType: !1420, size: 32, offset: 1024)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !1687, file: !1688, line: 190, baseType: !1488, size: 16, offset: 1056)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !1687, file: !1688, line: 191, baseType: !1488, size: 16, offset: 1072)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !1687, file: !1688, line: 194, baseType: !1551, size: 64, offset: 1088)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !1687, file: !1688, line: 196, baseType: !2959, size: 64, offset: 1152)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !1688, line: 55, flags: DIFlagFwdDecl)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !1687, file: !1688, line: 198, baseType: !2962, size: 64, offset: 1216)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !1548, line: 398, size: 448, elements: !2964)
!2964 = !{!2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2963, file: !1548, line: 399, baseType: !2962, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2963, file: !1548, line: 399, baseType: !2962, size: 64, offset: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !2963, file: !1548, line: 400, baseType: !1420, size: 32, offset: 128)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2963, file: !1548, line: 401, baseType: !1420, size: 32, offset: 160)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2963, file: !1548, line: 402, baseType: !1420, size: 32, offset: 192)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2963, file: !1548, line: 403, baseType: !1420, size: 32, offset: 224)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2963, file: !1548, line: 404, baseType: !1420, size: 32, offset: 256)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2963, file: !1548, line: 405, baseType: !1420, size: 32, offset: 288)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2963, file: !1548, line: 407, baseType: !1379, size: 64, offset: 320)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !2963, file: !1548, line: 414, baseType: !1379, size: 64, offset: 384)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !1687, file: !1688, line: 200, baseType: !1420, size: 32, offset: 1280)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !1687, file: !1688, line: 200, baseType: !1420, size: 32, offset: 1312)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !1687, file: !1688, line: 201, baseType: !1379, size: 64, offset: 1344)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1687, file: !1688, line: 203, baseType: !1389, size: 128, offset: 1408)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1687, file: !1688, line: 204, baseType: !1389, size: 128, offset: 1536)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !1687, file: !1688, line: 205, baseType: !1389, size: 128, offset: 1664)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !1687, file: !1688, line: 207, baseType: !1389, size: 128, offset: 1792)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !1687, file: !1688, line: 208, baseType: !1389, size: 128, offset: 1920)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !1681, file: !1548, line: 495, baseType: !1572, size: 64, offset: 192)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1681, file: !1548, line: 496, baseType: !1420, size: 32, offset: 256)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1681, file: !1548, line: 497, baseType: !1379, size: 64, offset: 320)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1681, file: !1548, line: 499, baseType: !1572, size: 64, offset: 384)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1681, file: !1548, line: 500, baseType: !1572, size: 64, offset: 448)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !1681, file: !1548, line: 502, baseType: !1572, size: 64, offset: 512)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !1681, file: !1548, line: 503, baseType: !1572, size: 64, offset: 576)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1681, file: !1548, line: 504, baseType: !1572, size: 64, offset: 640)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !1681, file: !1548, line: 505, baseType: !1420, size: 32, offset: 704)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !1641, file: !22, line: 234, baseType: !1601, size: 128, offset: 1408)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !1641, file: !22, line: 235, baseType: !1601, size: 128, offset: 1536)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !1641, file: !22, line: 236, baseType: !1488, size: 16, offset: 1664)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !1641, file: !22, line: 236, baseType: !1488, size: 16, offset: 1680)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1641, file: !22, line: 238, baseType: !1488, size: 16, offset: 1696)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !1641, file: !22, line: 239, baseType: !1488, size: 16, offset: 1712)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1641, file: !22, line: 240, baseType: !1488, size: 16, offset: 1728)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1641, file: !22, line: 241, baseType: !1488, size: 16, offset: 1744)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !1641, file: !22, line: 243, baseType: !1380, size: 32, offset: 1760)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !1641, file: !22, line: 244, baseType: !1488, size: 16, offset: 1792)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !1641, file: !22, line: 244, baseType: !1488, size: 16, offset: 1808)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !1641, file: !22, line: 246, baseType: !1488, size: 16, offset: 1824)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !1641, file: !22, line: 247, baseType: !1488, size: 16, offset: 1840)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !1641, file: !22, line: 248, baseType: !1488, size: 16, offset: 1856)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !1641, file: !22, line: 249, baseType: !1488, size: 16, offset: 1872)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !1641, file: !22, line: 250, baseType: !1488, size: 16, offset: 1888)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1641, file: !22, line: 251, baseType: !1488, size: 16, offset: 1904)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1641, file: !22, line: 253, baseType: !3010, size: 64, offset: 1920)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !1406, line: 116, size: 1472, elements: !3012)
!3012 = !{!3013, !3014, !3015, !3016, !3062, !3063, !3067, !3189, !3193, !3197, !3198, !3199, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3011, file: !1406, line: 117, baseType: !3010, size: 64)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3011, file: !1406, line: 117, baseType: !3010, size: 64, offset: 64)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !3011, file: !1406, line: 119, baseType: !1420, size: 32, offset: 128)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3011, file: !1406, line: 122, baseType: !3017, size: 64, offset: 192)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 64)
!3018 = !DISubroutineType(types: !3019)
!3019 = !{null, !3020, !1640}
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !1688, line: 128, size: 2816, elements: !3022)
!3022 = !{!3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3041, !3042, !3043, !3044, !3045, !3056, !3057, !3058, !3059, !3060, !3061}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3021, file: !1688, line: 129, baseType: !1698, size: 960)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !3021, file: !1688, line: 131, baseType: !1686, size: 64, offset: 960)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !3021, file: !1688, line: 131, baseType: !1686, size: 64, offset: 1024)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !3021, file: !1688, line: 132, baseType: !1389, size: 128, offset: 1088)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3021, file: !1688, line: 134, baseType: !1420, size: 32, offset: 1216)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !3021, file: !1688, line: 135, baseType: !1488, size: 16, offset: 1248)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !3021, file: !1688, line: 136, baseType: !1488, size: 16, offset: 1264)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !3021, file: !1688, line: 138, baseType: !1389, size: 128, offset: 1280)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3021, file: !1688, line: 140, baseType: !1389, size: 128, offset: 1408)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3021, file: !1688, line: 142, baseType: !3033, size: 320, offset: 1536)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !1688, line: 106, size: 320, elements: !3034)
!3034 = !{!3035, !3036, !3037, !3038, !3039, !3040}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3033, file: !1688, line: 107, baseType: !1389, size: 128)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !3033, file: !1688, line: 108, baseType: !1420, size: 32, offset: 128)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !3033, file: !1688, line: 109, baseType: !1420, size: 32, offset: 160)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3033, file: !1688, line: 110, baseType: !1420, size: 32, offset: 192)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3033, file: !1688, line: 110, baseType: !1420, size: 32, offset: 224)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !3033, file: !1688, line: 111, baseType: !1680, size: 64, offset: 256)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !3021, file: !1688, line: 144, baseType: !1389, size: 128, offset: 1856)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !3021, file: !1688, line: 146, baseType: !1389, size: 128, offset: 1984)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !3021, file: !1688, line: 148, baseType: !1389, size: 128, offset: 2112)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !3021, file: !1688, line: 150, baseType: !1389, size: 128, offset: 2240)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !3021, file: !1688, line: 151, baseType: !3046, size: 64, offset: 2368)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !1688, line: 310, size: 1344, elements: !3048)
!3048 = !{!3049, !3050, !3051, !3052, !3053, !3054, !3055}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3047, file: !1688, line: 311, baseType: !3046, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3047, file: !1688, line: 311, baseType: !3046, size: 64, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3047, file: !1688, line: 313, baseType: !1411, size: 512, offset: 128)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !3047, file: !1688, line: 314, baseType: !1411, size: 512, offset: 640)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !3047, file: !1688, line: 316, baseType: !1389, size: 128, offset: 1152)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !3047, file: !1688, line: 317, baseType: !1420, size: 32, offset: 1280)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3047, file: !1688, line: 317, baseType: !1420, size: 32, offset: 1312)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !3021, file: !1688, line: 152, baseType: !3046, size: 64, offset: 2432)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !3021, file: !1688, line: 153, baseType: !3046, size: 64, offset: 2496)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !3021, file: !1688, line: 155, baseType: !1389, size: 128, offset: 2560)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !3021, file: !1688, line: 156, baseType: !1680, size: 64, offset: 2688)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !3021, file: !1688, line: 158, baseType: !1412, size: 8, offset: 2752)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !3021, file: !1688, line: 159, baseType: !1617, size: 56, offset: 2760)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !3011, file: !1406, line: 124, baseType: !3017, size: 64, offset: 256)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !3011, file: !1406, line: 126, baseType: !3064, size: 64, offset: 320)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{null, !1427, !1640}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !3011, file: !1406, line: 128, baseType: !3068, size: 64, offset: 384)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 64)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{null, !1694, !3071, !1640, !3146}
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 64)
!3072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !22, line: 203, size: 1280, elements: !3073)
!3073 = !{!3074, !3075, !3076, !3093, !3094, !3095, !3096, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3185, !3186, !3187, !3188}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3072, file: !22, line: 204, baseType: !3071, size: 64)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3072, file: !22, line: 204, baseType: !3071, size: 64, offset: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3072, file: !22, line: 206, baseType: !3077, size: 64, offset: 128)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !22, line: 87, baseType: !3079)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !22, line: 82, size: 256, elements: !3080)
!3080 = !{!3081, !3083, !3084, !3085, !3091, !3092}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3079, file: !22, line: 83, baseType: !3082, size: 64)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3079, file: !22, line: 83, baseType: !3082, size: 64, offset: 64)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !3079, file: !22, line: 83, baseType: !3082, size: 64, offset: 128)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3079, file: !22, line: 84, baseType: !3086, size: 32, offset: 192)
!3086 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !1512, line: 43, baseType: !3087)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !1512, line: 41, size: 32, elements: !3088)
!3088 = !{!3089, !3090}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3087, file: !1512, line: 42, baseType: !1488, size: 16)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3087, file: !1512, line: 42, baseType: !1488, size: 16, offset: 16)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3079, file: !22, line: 86, baseType: !1488, size: 16, offset: 224)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3079, file: !22, line: 86, baseType: !1488, size: 16, offset: 240)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3072, file: !22, line: 206, baseType: !3077, size: 64, offset: 192)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3072, file: !22, line: 206, baseType: !3077, size: 64, offset: 256)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3072, file: !22, line: 206, baseType: !3077, size: 64, offset: 320)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !3072, file: !22, line: 207, baseType: !3097, size: 64, offset: 384)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !22, line: 80, baseType: !1695)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !3072, file: !22, line: 209, baseType: !1601, size: 128, offset: 448)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3072, file: !22, line: 211, baseType: !1412, size: 8, offset: 576)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !3072, file: !22, line: 211, baseType: !1412, size: 8, offset: 584)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3072, file: !22, line: 212, baseType: !1488, size: 16, offset: 592)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3072, file: !22, line: 212, baseType: !1488, size: 16, offset: 608)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !3072, file: !22, line: 214, baseType: !1488, size: 16, offset: 624)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3072, file: !22, line: 215, baseType: !1488, size: 16, offset: 640)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3072, file: !22, line: 216, baseType: !1488, size: 16, offset: 656)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !3072, file: !22, line: 217, baseType: !1488, size: 16, offset: 672)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3072, file: !22, line: 219, baseType: !1412, size: 8, offset: 688)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3072, file: !22, line: 219, baseType: !1412, size: 8, offset: 696)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3072, file: !22, line: 221, baseType: !3111, size: 64, offset: 704)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !1406, line: 66, size: 1728, elements: !3113)
!3113 = !{!3114, !3115, !3116, !3117, !3118, !3119, !3133, !3137, !3141, !3142, !3159, !3163, !3167, !3171, !3175, !3176, !3182, !3183, !3184}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3112, file: !1406, line: 67, baseType: !3111, size: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3112, file: !1406, line: 67, baseType: !3111, size: 64, offset: 64)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3112, file: !1406, line: 69, baseType: !1411, size: 512, offset: 128)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3112, file: !1406, line: 70, baseType: !1420, size: 32, offset: 640)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "iconid", scope: !3112, file: !1406, line: 71, baseType: !1420, size: 32, offset: 672)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "new", scope: !3112, file: !1406, line: 74, baseType: !3120, size: 64, offset: 704)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DISubroutineType(types: !3122)
!3122 = !{!3123, !1427}
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 64)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !15, line: 85, size: 448, elements: !3125)
!3125 = !{!3126, !3127, !3128, !3129, !3130, !3131}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3124, file: !15, line: 86, baseType: !3123, size: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3124, file: !15, line: 86, baseType: !3123, size: 64, offset: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3124, file: !15, line: 87, baseType: !1389, size: 128, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3124, file: !15, line: 88, baseType: !1420, size: 32, offset: 256)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !3124, file: !15, line: 89, baseType: !1380, size: 32, offset: 288)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !3124, file: !15, line: 90, baseType: !3132, size: 128, offset: 320)
!3132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1488, size: 128, elements: !2173)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3112, file: !1406, line: 76, baseType: !3134, size: 64, offset: 768)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DISubroutineType(types: !3136)
!3136 = !{null, !3123}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3112, file: !1406, line: 79, baseType: !3138, size: 64, offset: 832)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3139 = !DISubroutineType(types: !3140)
!3140 = !{null, !3020, !3071}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !3112, file: !1406, line: 81, baseType: !3138, size: 64, offset: 896)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !3112, file: !1406, line: 83, baseType: !3143, size: 64, offset: 960)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{null, !1694, !3071, !3146}
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmNotifier", file: !1548, line: 195, size: 512, elements: !3148)
!3148 = !{!3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3147, file: !1548, line: 196, baseType: !3146, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3147, file: !1548, line: 196, baseType: !3146, size: 64, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3147, file: !1548, line: 198, baseType: !3020, size: 64, offset: 128)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !3147, file: !1548, line: 199, baseType: !1686, size: 64, offset: 192)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3147, file: !1548, line: 201, baseType: !1420, size: 32, offset: 256)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !3147, file: !1548, line: 202, baseType: !5, size: 32, offset: 288)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3147, file: !1548, line: 202, baseType: !5, size: 32, offset: 320)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !3147, file: !1548, line: 202, baseType: !5, size: 32, offset: 352)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3147, file: !1548, line: 202, baseType: !5, size: 32, offset: 384)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !3147, file: !1548, line: 204, baseType: !1379, size: 64, offset: 448)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !3112, file: !1406, line: 86, baseType: !3160, size: 64, offset: 1024)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{null, !1427, !3071}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !3112, file: !1406, line: 89, baseType: !3164, size: 64, offset: 1088)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{!3123, !3123}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !3112, file: !1406, line: 92, baseType: !3168, size: 64, offset: 1152)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 64)
!3169 = !DISubroutineType(types: !3170)
!3170 = !{null}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !3112, file: !1406, line: 94, baseType: !3172, size: 64, offset: 1216)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = !DISubroutineType(types: !3174)
!3174 = !{null, !3046}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "dropboxes", scope: !3112, file: !1406, line: 96, baseType: !3168, size: 64, offset: 1280)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3112, file: !1406, line: 99, baseType: !3177, size: 64, offset: 1344)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{!1420, !1427, !1582, !3180}
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 64)
!3181 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContextDataResult", file: !2268, line: 71, flags: DIFlagFwdDecl)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "regiontypes", scope: !3112, file: !1406, line: 102, baseType: !1389, size: 128, offset: 1408)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "toolshelf", scope: !3112, file: !1406, line: 105, baseType: !1389, size: 128, offset: 1536)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !3112, file: !1406, line: 110, baseType: !1420, size: 32, offset: 1664)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !3072, file: !22, line: 223, baseType: !1389, size: 128, offset: 768)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3072, file: !22, line: 224, baseType: !1389, size: 128, offset: 896)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3072, file: !22, line: 225, baseType: !1389, size: 128, offset: 1024)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !3072, file: !22, line: 227, baseType: !1389, size: 128, offset: 1152)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3011, file: !1406, line: 130, baseType: !3190, size: 64, offset: 448)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{null, !1640}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !3011, file: !1406, line: 133, baseType: !3194, size: 64, offset: 512)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!1379, !1379}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !3011, file: !1406, line: 137, baseType: !3168, size: 64, offset: 576)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !3011, file: !1406, line: 139, baseType: !3172, size: 64, offset: 640)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3011, file: !1406, line: 141, baseType: !3200, size: 64, offset: 704)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DISubroutineType(types: !3202)
!3202 = !{null, !1686, !3071, !1640}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3011, file: !1406, line: 144, baseType: !3177, size: 64, offset: 768)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "drawcalls", scope: !3011, file: !1406, line: 147, baseType: !1389, size: 128, offset: 832)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "paneltypes", scope: !3011, file: !1406, line: 150, baseType: !1389, size: 128, offset: 960)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "headertypes", scope: !3011, file: !1406, line: 153, baseType: !1389, size: 128, offset: 1088)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "minsizex", scope: !3011, file: !1406, line: 156, baseType: !1420, size: 32, offset: 1216)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "minsizey", scope: !3011, file: !1406, line: 156, baseType: !1420, size: 32, offset: 1248)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizex", scope: !3011, file: !1406, line: 158, baseType: !1420, size: 32, offset: 1280)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizey", scope: !3011, file: !1406, line: 158, baseType: !1420, size: 32, offset: 1312)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !3011, file: !1406, line: 160, baseType: !1420, size: 32, offset: 1344)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "do_lock", scope: !3011, file: !1406, line: 162, baseType: !1488, size: 16, offset: 1376)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3011, file: !1406, line: 162, baseType: !1488, size: 16, offset: 1392)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "event_cursor", scope: !3011, file: !1406, line: 164, baseType: !1488, size: 16, offset: 1408)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !1641, file: !22, line: 255, baseType: !1389, size: 128, offset: 1984)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !1641, file: !22, line: 256, baseType: !1389, size: 128, offset: 2112)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !1641, file: !22, line: 257, baseType: !1389, size: 128, offset: 2240)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !1641, file: !22, line: 258, baseType: !1389, size: 128, offset: 2368)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !1641, file: !22, line: 259, baseType: !1389, size: 128, offset: 2496)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !1641, file: !22, line: 260, baseType: !1389, size: 128, offset: 2624)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !1641, file: !22, line: 261, baseType: !1389, size: 128, offset: 2752)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !1641, file: !22, line: 263, baseType: !1680, size: 64, offset: 2880)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !1641, file: !22, line: 265, baseType: !1861, size: 64, offset: 2944)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !1641, file: !22, line: 266, baseType: !1379, size: 64, offset: 3008)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "towards_xy", scope: !1637, file: !1384, line: 496, baseType: !1656, size: 64, offset: 64)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "towardstime", scope: !1637, file: !1384, line: 497, baseType: !1572, size: 64, offset: 128)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "dotowards", scope: !1637, file: !1384, line: 498, baseType: !1615, size: 8, offset: 192)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "popup", scope: !1637, file: !1384, line: 500, baseType: !1615, size: 8, offset: 200)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "popup_func", scope: !1637, file: !1384, line: 501, baseType: !1533, size: 64, offset: 256)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "cancel_func", scope: !1637, file: !1384, line: 502, baseType: !3231, size: 64, offset: 320)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{null, !1450, !1379}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "popup_arg", scope: !1637, file: !1384, line: 503, baseType: !1379, size: 64, offset: 384)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "popup_create_vars", scope: !1637, file: !1384, line: 506, baseType: !3236, size: 320, offset: 448)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupBlockCreate", file: !1384, line: 480, size: 320, elements: !3237)
!3237 = !{!3238, !3243, !3249, !3250, !3251}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "create_func", scope: !3236, file: !1384, line: 481, baseType: !3239, size: 64)
!3239 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockCreateFunc", file: !4, line: 380, baseType: !3240)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = !DISubroutineType(types: !3242)
!3242 = !{!1381, !1450, !1640, !1379}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "handle_create_func", scope: !3236, file: !1384, line: 482, baseType: !3244, size: 64, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlockHandleCreateFunc", file: !1384, line: 478, baseType: !3245)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DISubroutineType(types: !3247)
!3247 = !{!1381, !1450, !3248, !1379}
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !3236, file: !1384, line: 483, baseType: !1379, size: 64, offset: 128)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "event_xy", scope: !3236, file: !1384, line: 485, baseType: !1558, size: 64, offset: 192)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "butregion", scope: !3236, file: !1384, line: 488, baseType: !3252, size: 64, offset: 256)
!3252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3253 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !22, line: 267, baseType: !1641)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "scrolltimer", scope: !1637, file: !1384, line: 508, baseType: !1680, size: 64, offset: 768)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "keynav_state", scope: !1637, file: !1384, line: 510, baseType: !3256, size: 96, offset: 832)
!3256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiKeyNavLock", file: !1384, line: 471, size: 96, elements: !3257)
!3257 = !{!3258, !3259}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "is_keynav", scope: !3256, file: !1384, line: 473, baseType: !1615, size: 8)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "event_xy", scope: !3256, file: !1384, line: 475, baseType: !1558, size: 64, offset: 32)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "optype", scope: !1637, file: !1384, line: 513, baseType: !3261, size: 64, offset: 960)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !1548, line: 508, size: 1536, elements: !3263)
!3263 = !{!3264, !3265, !3266, !3267, !3268, !3290, !3294, !3298, !3302, !3303, !3307, !3308, !3309, !3310, !3314, !3315, !3330, !3331, !3335, !3336}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3262, file: !1548, line: 509, baseType: !1582, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3262, file: !1548, line: 510, baseType: !1582, size: 64, offset: 64)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !3262, file: !1548, line: 511, baseType: !1582, size: 64, offset: 128)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3262, file: !1548, line: 512, baseType: !1582, size: 64, offset: 192)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3262, file: !1548, line: 518, baseType: !3269, size: 64, offset: 256)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!1420, !1450, !3272}
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !1688, line: 328, size: 1344, elements: !3274)
!3274 = !{!3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3285, !3286, !3287, !3288, !3289}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3273, file: !1688, line: 329, baseType: !3272, size: 64)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3273, file: !1688, line: 329, baseType: !3272, size: 64, offset: 64)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3273, file: !1688, line: 332, baseType: !1411, size: 512, offset: 128)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3273, file: !1688, line: 333, baseType: !1734, size: 64, offset: 640)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3273, file: !1688, line: 336, baseType: !3261, size: 64, offset: 704)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3273, file: !1688, line: 337, baseType: !1379, size: 64, offset: 768)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !3273, file: !1688, line: 338, baseType: !1379, size: 64, offset: 832)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3273, file: !1688, line: 340, baseType: !1451, size: 64, offset: 896)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3273, file: !1688, line: 341, baseType: !3284, size: 64, offset: 960)
!3284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3273, file: !1688, line: 343, baseType: !1389, size: 128, offset: 1024)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !3273, file: !1688, line: 344, baseType: !3272, size: 64, offset: 1152)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !3273, file: !1688, line: 345, baseType: !1478, size: 64, offset: 1216)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3273, file: !1688, line: 346, baseType: !1488, size: 16, offset: 1280)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3273, file: !1688, line: 346, baseType: !2841, size: 48, offset: 1296)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3262, file: !1548, line: 524, baseType: !3291, size: 64, offset: 320)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{!1615, !1450, !3272}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !3262, file: !1548, line: 530, baseType: !3295, size: 64, offset: 384)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!1420, !1450, !3272, !1545}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3262, file: !1548, line: 531, baseType: !3299, size: 64, offset: 448)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{null, !1450, !3272}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !3262, file: !1548, line: 532, baseType: !3295, size: 64, offset: 512)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3262, file: !1548, line: 536, baseType: !3304, size: 64, offset: 576)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 64)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{!1420, !1450}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !3262, file: !1548, line: 539, baseType: !3299, size: 64, offset: 640)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3262, file: !1548, line: 542, baseType: !1459, size: 64, offset: 704)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !3262, file: !1548, line: 545, baseType: !1739, size: 64, offset: 768)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3262, file: !1548, line: 549, baseType: !3311, size: 64, offset: 832)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !1430, line: 333, baseType: !3313)
!3313 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !1430, line: 39, flags: DIFlagFwdDecl)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3262, file: !1548, line: 552, baseType: !1389, size: 128, offset: 896)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !3262, file: !1548, line: 555, baseType: !3316, size: 64, offset: 1024)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !1688, line: 281, size: 1088, elements: !3318)
!3318 = !{!3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3317, file: !1688, line: 282, baseType: !3316, size: 64)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3317, file: !1688, line: 282, baseType: !3316, size: 64, offset: 64)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3317, file: !1688, line: 284, baseType: !1389, size: 128, offset: 128)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !3317, file: !1688, line: 285, baseType: !1389, size: 128, offset: 256)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3317, file: !1688, line: 287, baseType: !1411, size: 512, offset: 384)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3317, file: !1688, line: 288, baseType: !1488, size: 16, offset: 896)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !3317, file: !1688, line: 289, baseType: !1488, size: 16, offset: 912)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3317, file: !1688, line: 291, baseType: !1488, size: 16, offset: 928)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !3317, file: !1688, line: 292, baseType: !1488, size: 16, offset: 944)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3317, file: !1688, line: 295, baseType: !3304, size: 64, offset: 960)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !3317, file: !1688, line: 296, baseType: !1379, size: 64, offset: 1024)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !3262, file: !1548, line: 559, baseType: !1379, size: 64, offset: 1088)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !3262, file: !1548, line: 560, baseType: !3332, size: 64, offset: 1152)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = !DISubroutineType(types: !3334)
!3334 = !{!1420, !1450, !3261}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3262, file: !1548, line: 563, baseType: !1437, size: 256, offset: 1216)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3262, file: !1548, line: 566, baseType: !1488, size: 16, offset: 1472)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_area", scope: !1637, file: !1384, line: 514, baseType: !3338, size: 64, offset: 1024)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !22, line: 228, baseType: !3072)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_region", scope: !1637, file: !1384, line: 515, baseType: !3252, size: 64, offset: 1088)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !1637, file: !1384, line: 516, baseType: !1420, size: 32, offset: 1152)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "butretval", scope: !1637, file: !1384, line: 519, baseType: !1420, size: 32, offset: 1184)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "menuretval", scope: !1637, file: !1384, line: 520, baseType: !1420, size: 32, offset: 1216)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "retvalue", scope: !1637, file: !1384, line: 521, baseType: !1420, size: 32, offset: 1248)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "retvec", scope: !1637, file: !1384, line: 522, baseType: !2216, size: 128, offset: 1280)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1637, file: !1384, line: 525, baseType: !1420, size: 32, offset: 1408)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "is_grab", scope: !1637, file: !1384, line: 528, baseType: !1615, size: 8, offset: 1440)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "grab_xy_prev", scope: !1637, file: !1384, line: 529, baseType: !1558, size: 64, offset: 1472)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "ui_operator", scope: !1383, file: !1384, line: 389, baseType: !3272, size: 64, offset: 4160)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "evil_C", scope: !1383, file: !1384, line: 392, baseType: !1379, size: 64, offset: 4224)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1383, file: !1384, line: 394, baseType: !3352, size: 64, offset: 4288)
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "_hsv", scope: !1383, file: !1384, line: 395, baseType: !1792, size: 96, offset: 4352)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !1383, file: !1384, line: 397, baseType: !1615, size: 8, offset: 4448)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1383, file: !1384, line: 399, baseType: !1411, size: 512, offset: 4456)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "pie_data", scope: !1383, file: !1384, line: 402, baseType: !3357, size: 448, offset: 4992)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PieMenuData", file: !1384, line: 309, size: 448, elements: !3358)
!3358 = !{!3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "pie_dir", scope: !3357, file: !1384, line: 310, baseType: !1656, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "pie_center_init", scope: !3357, file: !1384, line: 311, baseType: !1656, size: 64, offset: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "pie_center_spawned", scope: !3357, file: !1384, line: 312, baseType: !1656, size: 64, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "last_pos", scope: !3357, file: !1384, line: 313, baseType: !1656, size: 64, offset: 192)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "duration_gesture", scope: !3357, file: !1384, line: 314, baseType: !1572, size: 64, offset: 256)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3357, file: !1384, line: 315, baseType: !1420, size: 32, offset: 320)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3357, file: !1384, line: 316, baseType: !1420, size: 32, offset: 352)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !3357, file: !1384, line: 317, baseType: !1380, size: 32, offset: 384)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = !DIDerivedType(tag: DW_TAG_typedef, name: "PanelCategoryDyn", file: !22, line: 136, baseType: !3369)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PanelCategoryDyn", file: !22, line: 132, size: 768, elements: !3370)
!3370 = !{!3371, !3373, !3374, !3375}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3369, file: !22, line: 133, baseType: !3372, size: 64)
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3369, size: 64)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3369, file: !22, line: 133, baseType: !3372, size: 64, offset: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3369, file: !22, line: 134, baseType: !1411, size: 512, offset: 128)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !3369, file: !22, line: 135, baseType: !1601, size: 128, offset: 640)
!3376 = !{i32 7, !"Dwarf Version", i32 4}
!3377 = !{i32 2, !"Debug Info Version", i32 3}
!3378 = !{i32 1, !"wchar_size", i32 4}
!3379 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3380 = distinct !DISubprogram(name: "uiPanelFindByType", scope: !1, file: !1, line: 210, type: !3381, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{!1401, !3252, !3383}
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DIDerivedType(tag: DW_TAG_typedef, name: "PanelType", file: !1406, line: 191, baseType: !1405)
!3385 = !{}
!3386 = !DILocalVariable(name: "ar", arg: 1, scope: !3380, file: !1, line: 210, type: !3252)
!3387 = !DILocation(line: 210, column: 35, scope: !3380)
!3388 = !DILocalVariable(name: "pt", arg: 2, scope: !3380, file: !1, line: 210, type: !3383)
!3389 = !DILocation(line: 210, column: 50, scope: !3380)
!3390 = !DILocalVariable(name: "pa", scope: !3380, file: !1, line: 212, type: !1396)
!3391 = !DILocation(line: 212, column: 9, scope: !3380)
!3392 = !DILocalVariable(name: "idname", scope: !3380, file: !1, line: 213, type: !1582)
!3393 = !DILocation(line: 213, column: 14, scope: !3380)
!3394 = !DILocation(line: 213, column: 23, scope: !3380)
!3395 = !DILocation(line: 213, column: 27, scope: !3380)
!3396 = !DILocation(line: 225, column: 12, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3380, file: !1, line: 225, column: 2)
!3398 = !DILocation(line: 225, column: 16, scope: !3397)
!3399 = !DILocation(line: 225, column: 23, scope: !3397)
!3400 = !DILocation(line: 225, column: 10, scope: !3397)
!3401 = !DILocation(line: 225, column: 7, scope: !3397)
!3402 = !DILocation(line: 225, column: 30, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3397, file: !1, line: 225, column: 2)
!3404 = !DILocation(line: 225, column: 2, scope: !3397)
!3405 = !DILocation(line: 226, column: 7, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3407, file: !1, line: 226, column: 7)
!3407 = distinct !DILexicalBlock(scope: !3403, file: !1, line: 225, column: 49)
!3408 = !DILocation(line: 226, column: 7, scope: !3407)
!3409 = !DILocation(line: 227, column: 11, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3406, file: !1, line: 226, column: 63)
!3411 = !DILocation(line: 227, column: 4, scope: !3410)
!3412 = !DILocation(line: 229, column: 2, scope: !3407)
!3413 = !DILocation(line: 225, column: 39, scope: !3403)
!3414 = !DILocation(line: 225, column: 43, scope: !3403)
!3415 = !DILocation(line: 225, column: 37, scope: !3403)
!3416 = !DILocation(line: 225, column: 2, scope: !3403)
!3417 = distinct !{!3417, !3404, !3418}
!3418 = !DILocation(line: 229, column: 2, scope: !3397)
!3419 = !DILocation(line: 232, column: 2, scope: !3380)
!3420 = !DILocation(line: 233, column: 1, scope: !3380)
!3421 = distinct !DISubprogram(name: "uiBeginPanel", scope: !1, file: !1, line: 238, type: !3422, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!1401, !3338, !3252, !1381, !3383, !1396, !3424}
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!3425 = !DILocalVariable(name: "sa", arg: 1, scope: !3421, file: !1, line: 238, type: !3338)
!3426 = !DILocation(line: 238, column: 30, scope: !3421)
!3427 = !DILocalVariable(name: "ar", arg: 2, scope: !3421, file: !1, line: 238, type: !3252)
!3428 = !DILocation(line: 238, column: 43, scope: !3421)
!3429 = !DILocalVariable(name: "block", arg: 3, scope: !3421, file: !1, line: 238, type: !1381)
!3430 = !DILocation(line: 238, column: 56, scope: !3421)
!3431 = !DILocalVariable(name: "pt", arg: 4, scope: !3421, file: !1, line: 238, type: !3383)
!3432 = !DILocation(line: 238, column: 74, scope: !3421)
!3433 = !DILocalVariable(name: "pa", arg: 5, scope: !3421, file: !1, line: 238, type: !1396)
!3434 = !DILocation(line: 238, column: 85, scope: !3421)
!3435 = !DILocalVariable(name: "r_open", arg: 6, scope: !3421, file: !1, line: 238, type: !3424)
!3436 = !DILocation(line: 238, column: 95, scope: !3421)
!3437 = !DILocalVariable(name: "palast", scope: !3421, file: !1, line: 240, type: !1396)
!3438 = !DILocation(line: 240, column: 9, scope: !3421)
!3439 = !DILocalVariable(name: "panext", scope: !3421, file: !1, line: 240, type: !1396)
!3440 = !DILocation(line: 240, column: 18, scope: !3421)
!3441 = !DILocalVariable(name: "drawname", scope: !3421, file: !1, line: 241, type: !1582)
!3442 = !DILocation(line: 241, column: 14, scope: !3421)
!3443 = !DILocation(line: 241, column: 25, scope: !3421)
!3444 = !DILocalVariable(name: "idname", scope: !3421, file: !1, line: 242, type: !1582)
!3445 = !DILocation(line: 242, column: 14, scope: !3421)
!3446 = !DILocation(line: 242, column: 23, scope: !3421)
!3447 = !DILocation(line: 242, column: 27, scope: !3421)
!3448 = !DILocalVariable(name: "newpanel", scope: !3421, file: !1, line: 247, type: !3449)
!3449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!3450 = !DILocation(line: 247, column: 13, scope: !3421)
!3451 = !DILocation(line: 247, column: 25, scope: !3421)
!3452 = !DILocation(line: 247, column: 28, scope: !3421)
!3453 = !DILocation(line: 247, column: 24, scope: !3421)
!3454 = !DILocalVariable(name: "align", scope: !3421, file: !1, line: 248, type: !1420)
!3455 = !DILocation(line: 248, column: 6, scope: !3421)
!3456 = !DILocation(line: 248, column: 28, scope: !3421)
!3457 = !DILocation(line: 248, column: 32, scope: !3421)
!3458 = !DILocation(line: 248, column: 14, scope: !3421)
!3459 = !DILocation(line: 250, column: 7, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3421, file: !1, line: 250, column: 6)
!3461 = !DILocation(line: 250, column: 6, scope: !3421)
!3462 = !DILocation(line: 251, column: 14, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 250, column: 17)
!3464 = !DILocation(line: 251, column: 3, scope: !3463)
!3465 = !DILocation(line: 251, column: 7, scope: !3463)
!3466 = !DILocation(line: 251, column: 12, scope: !3463)
!3467 = !DILocation(line: 252, column: 2, scope: !3463)
!3468 = !DILocation(line: 255, column: 8, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 253, column: 7)
!3470 = !DILocation(line: 255, column: 6, scope: !3469)
!3471 = !DILocation(line: 256, column: 14, scope: !3469)
!3472 = !DILocation(line: 256, column: 3, scope: !3469)
!3473 = !DILocation(line: 256, column: 7, scope: !3469)
!3474 = !DILocation(line: 256, column: 12, scope: !3469)
!3475 = !DILocation(line: 257, column: 15, scope: !3469)
!3476 = !DILocation(line: 257, column: 19, scope: !3469)
!3477 = !DILocation(line: 257, column: 30, scope: !3469)
!3478 = !DILocation(line: 257, column: 3, scope: !3469)
!3479 = !DILocation(line: 259, column: 7, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3469, file: !1, line: 259, column: 7)
!3481 = !DILocation(line: 259, column: 11, scope: !3480)
!3482 = !DILocation(line: 259, column: 16, scope: !3480)
!3483 = !DILocation(line: 259, column: 7, scope: !3469)
!3484 = !DILocation(line: 260, column: 8, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3486, file: !1, line: 260, column: 8)
!3486 = distinct !DILexicalBlock(scope: !3480, file: !1, line: 259, column: 38)
!3487 = !DILocation(line: 260, column: 14, scope: !3485)
!3488 = !DILocation(line: 260, column: 8, scope: !3486)
!3489 = !DILocation(line: 261, column: 5, scope: !3485)
!3490 = !DILocation(line: 261, column: 9, scope: !3485)
!3491 = !DILocation(line: 261, column: 14, scope: !3485)
!3492 = !DILocation(line: 263, column: 5, scope: !3485)
!3493 = !DILocation(line: 263, column: 9, scope: !3485)
!3494 = !DILocation(line: 263, column: 14, scope: !3485)
!3495 = !DILocation(line: 264, column: 3, scope: !3486)
!3496 = !DILocation(line: 266, column: 3, scope: !3469)
!3497 = !DILocation(line: 266, column: 7, scope: !3469)
!3498 = !DILocation(line: 266, column: 12, scope: !3469)
!3499 = !DILocation(line: 267, column: 3, scope: !3469)
!3500 = !DILocation(line: 267, column: 7, scope: !3469)
!3501 = !DILocation(line: 267, column: 12, scope: !3469)
!3502 = !DILocation(line: 268, column: 3, scope: !3469)
!3503 = !DILocation(line: 268, column: 7, scope: !3469)
!3504 = !DILocation(line: 268, column: 13, scope: !3469)
!3505 = !DILocation(line: 269, column: 3, scope: !3469)
!3506 = !DILocation(line: 269, column: 7, scope: !3469)
!3507 = !DILocation(line: 269, column: 13, scope: !3469)
!3508 = !DILocation(line: 270, column: 3, scope: !3469)
!3509 = !DILocation(line: 270, column: 7, scope: !3469)
!3510 = !DILocation(line: 270, column: 20, scope: !3469)
!3511 = !DILocation(line: 272, column: 16, scope: !3469)
!3512 = !DILocation(line: 272, column: 20, scope: !3469)
!3513 = !DILocation(line: 272, column: 28, scope: !3469)
!3514 = !DILocation(line: 272, column: 3, scope: !3469)
!3515 = !DILocation(line: 293, column: 15, scope: !3469)
!3516 = !DILocation(line: 293, column: 19, scope: !3469)
!3517 = !DILocation(line: 293, column: 28, scope: !3469)
!3518 = !DILocation(line: 293, column: 3, scope: !3469)
!3519 = !DILocation(line: 298, column: 7, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3421, file: !1, line: 298, column: 6)
!3521 = !DILocation(line: 298, column: 11, scope: !3520)
!3522 = !DILocation(line: 298, column: 16, scope: !3520)
!3523 = !DILocation(line: 298, column: 33, scope: !3520)
!3524 = !DILocation(line: 298, column: 37, scope: !3520)
!3525 = !DILocation(line: 298, column: 41, scope: !3520)
!3526 = !DILocation(line: 298, column: 46, scope: !3520)
!3527 = !DILocation(line: 298, column: 6, scope: !3421)
!3528 = !DILocation(line: 299, column: 3, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3520, file: !1, line: 298, column: 61)
!3530 = !DILocation(line: 299, column: 7, scope: !3529)
!3531 = !DILocation(line: 299, column: 12, scope: !3529)
!3532 = !DILocation(line: 301, column: 3, scope: !3529)
!3533 = !DILocation(line: 301, column: 7, scope: !3529)
!3534 = !DILocation(line: 301, column: 13, scope: !3529)
!3535 = !DILocation(line: 302, column: 3, scope: !3529)
!3536 = !DILocation(line: 302, column: 7, scope: !3529)
!3537 = !DILocation(line: 302, column: 13, scope: !3529)
!3538 = !DILocation(line: 303, column: 2, scope: !3529)
!3539 = !DILocation(line: 305, column: 14, scope: !3421)
!3540 = !DILocation(line: 305, column: 18, scope: !3421)
!3541 = !DILocation(line: 305, column: 28, scope: !3421)
!3542 = !DILocation(line: 305, column: 2, scope: !3421)
!3543 = !DILocation(line: 310, column: 16, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3421, file: !1, line: 310, column: 2)
!3545 = !DILocation(line: 310, column: 20, scope: !3544)
!3546 = !DILocation(line: 310, column: 27, scope: !3544)
!3547 = !DILocation(line: 310, column: 14, scope: !3544)
!3548 = !DILocation(line: 310, column: 7, scope: !3544)
!3549 = !DILocation(line: 310, column: 34, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3544, file: !1, line: 310, column: 2)
!3551 = !DILocation(line: 310, column: 2, scope: !3544)
!3552 = !DILocation(line: 311, column: 7, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3550, file: !1, line: 311, column: 7)
!3554 = !DILocation(line: 311, column: 15, scope: !3553)
!3555 = !DILocation(line: 311, column: 28, scope: !3553)
!3556 = !DILocation(line: 311, column: 7, scope: !3550)
!3557 = !DILocation(line: 312, column: 4, scope: !3553)
!3558 = !DILocation(line: 311, column: 30, scope: !3553)
!3559 = !DILocation(line: 310, column: 51, scope: !3550)
!3560 = !DILocation(line: 310, column: 59, scope: !3550)
!3561 = !DILocation(line: 310, column: 49, scope: !3550)
!3562 = !DILocation(line: 310, column: 2, scope: !3550)
!3563 = distinct !{!3563, !3551, !3564}
!3564 = !DILocation(line: 312, column: 4, scope: !3544)
!3565 = !DILocation(line: 314, column: 6, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3421, file: !1, line: 314, column: 6)
!3567 = !DILocation(line: 314, column: 6, scope: !3421)
!3568 = !DILocation(line: 315, column: 20, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3566, file: !1, line: 314, column: 16)
!3570 = !DILocation(line: 315, column: 19, scope: !3569)
!3571 = !DILocation(line: 315, column: 30, scope: !3569)
!3572 = !DILocation(line: 315, column: 38, scope: !3569)
!3573 = !DILocation(line: 315, column: 48, scope: !3569)
!3574 = !DILocation(line: 315, column: 3, scope: !3569)
!3575 = !DILocation(line: 315, column: 7, scope: !3569)
!3576 = !DILocation(line: 315, column: 17, scope: !3569)
!3577 = !DILocation(line: 317, column: 17, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3569, file: !1, line: 317, column: 3)
!3579 = !DILocation(line: 317, column: 21, scope: !3578)
!3580 = !DILocation(line: 317, column: 28, scope: !3578)
!3581 = !DILocation(line: 317, column: 15, scope: !3578)
!3582 = !DILocation(line: 317, column: 8, scope: !3578)
!3583 = !DILocation(line: 317, column: 35, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3578, file: !1, line: 317, column: 3)
!3585 = !DILocation(line: 317, column: 3, scope: !3578)
!3586 = !DILocation(line: 318, column: 8, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3584, file: !1, line: 318, column: 8)
!3588 = !DILocation(line: 318, column: 18, scope: !3587)
!3589 = !DILocation(line: 318, column: 15, scope: !3587)
!3590 = !DILocation(line: 318, column: 21, scope: !3587)
!3591 = !DILocation(line: 318, column: 24, scope: !3587)
!3592 = !DILocation(line: 318, column: 32, scope: !3587)
!3593 = !DILocation(line: 318, column: 45, scope: !3587)
!3594 = !DILocation(line: 318, column: 49, scope: !3587)
!3595 = !DILocation(line: 318, column: 42, scope: !3587)
!3596 = !DILocation(line: 318, column: 8, scope: !3584)
!3597 = !DILocation(line: 319, column: 5, scope: !3587)
!3598 = !DILocation(line: 319, column: 13, scope: !3587)
!3599 = !DILocation(line: 319, column: 22, scope: !3587)
!3600 = !DILocation(line: 317, column: 52, scope: !3584)
!3601 = !DILocation(line: 317, column: 60, scope: !3584)
!3602 = !DILocation(line: 317, column: 50, scope: !3584)
!3603 = !DILocation(line: 317, column: 3, scope: !3584)
!3604 = distinct !{!3604, !3585, !3605}
!3605 = !DILocation(line: 319, column: 22, scope: !3578)
!3606 = !DILocation(line: 320, column: 2, scope: !3569)
!3607 = !DILocation(line: 322, column: 6, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3421, file: !1, line: 322, column: 6)
!3609 = !DILocation(line: 322, column: 6, scope: !3421)
!3610 = !DILocation(line: 323, column: 3, scope: !3608)
!3611 = !DILocation(line: 323, column: 11, scope: !3608)
!3612 = !DILocation(line: 323, column: 24, scope: !3608)
!3613 = !DILocation(line: 326, column: 17, scope: !3421)
!3614 = !DILocation(line: 326, column: 2, scope: !3421)
!3615 = !DILocation(line: 326, column: 9, scope: !3421)
!3616 = !DILocation(line: 326, column: 15, scope: !3421)
!3617 = !DILocation(line: 327, column: 2, scope: !3421)
!3618 = !DILocation(line: 327, column: 6, scope: !3421)
!3619 = !DILocation(line: 327, column: 19, scope: !3421)
!3620 = !DILocation(line: 329, column: 3, scope: !3421)
!3621 = !DILocation(line: 329, column: 10, scope: !3421)
!3622 = !DILocation(line: 331, column: 6, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3421, file: !1, line: 331, column: 6)
!3624 = !DILocation(line: 331, column: 10, scope: !3623)
!3625 = !DILocation(line: 331, column: 6, scope: !3421)
!3626 = !DILocation(line: 331, column: 27, scope: !3623)
!3627 = !DILocation(line: 331, column: 20, scope: !3623)
!3628 = !DILocation(line: 332, column: 6, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3421, file: !1, line: 332, column: 6)
!3630 = !DILocation(line: 332, column: 10, scope: !3629)
!3631 = !DILocation(line: 332, column: 15, scope: !3629)
!3632 = !DILocation(line: 332, column: 6, scope: !3421)
!3633 = !DILocation(line: 332, column: 36, scope: !3629)
!3634 = !DILocation(line: 332, column: 29, scope: !3629)
!3635 = !DILocation(line: 334, column: 3, scope: !3421)
!3636 = !DILocation(line: 334, column: 10, scope: !3421)
!3637 = !DILocation(line: 336, column: 9, scope: !3421)
!3638 = !DILocation(line: 336, column: 2, scope: !3421)
!3639 = !DILocation(line: 337, column: 1, scope: !3421)
!3640 = distinct !DISubprogram(name: "panel_aligned", scope: !1, file: !1, line: 111, type: !3641, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!3641 = !DISubroutineType(types: !3642)
!3642 = !{!1420, !3338, !3252}
!3643 = !DILocalVariable(name: "sa", arg: 1, scope: !3640, file: !1, line: 111, type: !3338)
!3644 = !DILocation(line: 111, column: 35, scope: !3640)
!3645 = !DILocalVariable(name: "ar", arg: 2, scope: !3640, file: !1, line: 111, type: !3252)
!3646 = !DILocation(line: 111, column: 48, scope: !3640)
!3647 = !DILocation(line: 113, column: 6, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3640, file: !1, line: 113, column: 6)
!3649 = !DILocation(line: 113, column: 10, scope: !3648)
!3650 = !DILocation(line: 113, column: 20, scope: !3648)
!3651 = !DILocation(line: 113, column: 34, scope: !3648)
!3652 = !DILocation(line: 113, column: 37, scope: !3648)
!3653 = !DILocation(line: 113, column: 41, scope: !3648)
!3654 = !DILocation(line: 113, column: 52, scope: !3648)
!3655 = !DILocation(line: 113, column: 6, scope: !3640)
!3656 = !DILocalVariable(name: "sbuts", scope: !3657, file: !1, line: 114, type: !3658)
!3657 = distinct !DILexicalBlock(scope: !3648, file: !1, line: 113, column: 72)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceButs", file: !15, line: 143, baseType: !3660)
!3660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceButs", file: !15, line: 121, size: 2176, elements: !3661)
!3661 = !{!3662, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3660, file: !15, line: 122, baseType: !3663, size: 64)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !15, line: 91, baseType: !3124)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3660, file: !15, line: 122, baseType: !3663, size: 64, offset: 64)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3660, file: !15, line: 123, baseType: !1389, size: 128, offset: 128)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3660, file: !15, line: 124, baseType: !1420, size: 32, offset: 256)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !3660, file: !15, line: 125, baseType: !1380, size: 32, offset: 288)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !3660, file: !15, line: 127, baseType: !3132, size: 128, offset: 320)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !3660, file: !15, line: 129, baseType: !1646, size: 1280, offset: 448)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "mainb", scope: !3660, file: !15, line: 131, baseType: !1488, size: 16, offset: 1728)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "mainbo", scope: !3660, file: !15, line: 131, baseType: !1488, size: 16, offset: 1744)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "mainbuser", scope: !3660, file: !15, line: 131, baseType: !1488, size: 16, offset: 1760)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "re_align", scope: !3660, file: !15, line: 132, baseType: !1488, size: 16, offset: 1776)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3660, file: !15, line: 132, baseType: !1488, size: 16, offset: 1792)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !3660, file: !15, line: 133, baseType: !1488, size: 16, offset: 1808)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "texture_context", scope: !3660, file: !15, line: 135, baseType: !1488, size: 16, offset: 1824)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "texture_context_prev", scope: !3660, file: !15, line: 135, baseType: !1488, size: 16, offset: 1840)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3660, file: !15, line: 136, baseType: !1412, size: 8, offset: 1856)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3660, file: !15, line: 136, baseType: !1617, size: 56, offset: 1864)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !3660, file: !15, line: 138, baseType: !1379, size: 64, offset: 1920)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !3660, file: !15, line: 139, baseType: !1420, size: 32, offset: 1984)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "dataicon", scope: !3660, file: !15, line: 139, baseType: !1420, size: 32, offset: 2016)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "pinid", scope: !3660, file: !15, line: 140, baseType: !1712, size: 64, offset: 2048)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "texuser", scope: !3660, file: !15, line: 142, baseType: !1379, size: 64, offset: 2112)
!3686 = !DILocation(line: 114, column: 14, scope: !3657)
!3687 = !DILocation(line: 114, column: 22, scope: !3657)
!3688 = !DILocation(line: 114, column: 26, scope: !3657)
!3689 = !DILocation(line: 114, column: 36, scope: !3657)
!3690 = !DILocation(line: 115, column: 10, scope: !3657)
!3691 = !DILocation(line: 115, column: 17, scope: !3657)
!3692 = !DILocation(line: 115, column: 3, scope: !3657)
!3693 = !DILocation(line: 117, column: 11, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3648, file: !1, line: 117, column: 11)
!3695 = !DILocation(line: 117, column: 15, scope: !3694)
!3696 = !DILocation(line: 117, column: 25, scope: !3694)
!3697 = !DILocation(line: 117, column: 43, scope: !3694)
!3698 = !DILocation(line: 117, column: 46, scope: !3694)
!3699 = !DILocation(line: 117, column: 50, scope: !3694)
!3700 = !DILocation(line: 117, column: 61, scope: !3694)
!3701 = !DILocation(line: 117, column: 11, scope: !3648)
!3702 = !DILocation(line: 118, column: 3, scope: !3694)
!3703 = !DILocation(line: 119, column: 11, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3694, file: !1, line: 119, column: 11)
!3705 = !DILocation(line: 119, column: 15, scope: !3704)
!3706 = !DILocation(line: 119, column: 25, scope: !3704)
!3707 = !DILocation(line: 119, column: 39, scope: !3704)
!3708 = !DILocation(line: 119, column: 42, scope: !3704)
!3709 = !DILocation(line: 119, column: 46, scope: !3704)
!3710 = !DILocation(line: 119, column: 57, scope: !3704)
!3711 = !DILocation(line: 119, column: 11, scope: !3694)
!3712 = !DILocation(line: 120, column: 3, scope: !3704)
!3713 = !DILocation(line: 121, column: 11, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3704, file: !1, line: 121, column: 11)
!3715 = !DILocation(line: 121, column: 15, scope: !3714)
!3716 = !DILocation(line: 121, column: 25, scope: !3714)
!3717 = !DILocation(line: 121, column: 40, scope: !3714)
!3718 = !DILocation(line: 121, column: 43, scope: !3714)
!3719 = !DILocation(line: 121, column: 47, scope: !3714)
!3720 = !DILocation(line: 121, column: 58, scope: !3714)
!3721 = !DILocation(line: 121, column: 11, scope: !3704)
!3722 = !DILocation(line: 122, column: 3, scope: !3714)
!3723 = !DILocation(line: 123, column: 11, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3714, file: !1, line: 123, column: 11)
!3725 = !DILocation(line: 123, column: 11, scope: !3714)
!3726 = !DILocation(line: 124, column: 3, scope: !3724)
!3727 = !DILocation(line: 126, column: 2, scope: !3640)
!3728 = !DILocation(line: 127, column: 1, scope: !3640)
!3729 = distinct !DISubprogram(name: "uiEndPanel", scope: !1, file: !1, line: 339, type: !3730, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{null, !1381, !1420, !1420}
!3732 = !DILocalVariable(name: "block", arg: 1, scope: !3729, file: !1, line: 339, type: !1381)
!3733 = !DILocation(line: 339, column: 26, scope: !3729)
!3734 = !DILocalVariable(name: "width", arg: 2, scope: !3729, file: !1, line: 339, type: !1420)
!3735 = !DILocation(line: 339, column: 37, scope: !3729)
!3736 = !DILocalVariable(name: "height", arg: 3, scope: !3729, file: !1, line: 339, type: !1420)
!3737 = !DILocation(line: 339, column: 48, scope: !3729)
!3738 = !DILocalVariable(name: "pa", scope: !3729, file: !1, line: 341, type: !1396)
!3739 = !DILocation(line: 341, column: 9, scope: !3729)
!3740 = !DILocation(line: 341, column: 14, scope: !3729)
!3741 = !DILocation(line: 341, column: 21, scope: !3729)
!3742 = !DILocation(line: 343, column: 6, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3729, file: !1, line: 343, column: 6)
!3744 = !DILocation(line: 343, column: 10, scope: !3743)
!3745 = !DILocation(line: 343, column: 23, scope: !3743)
!3746 = !DILocation(line: 343, column: 6, scope: !3729)
!3747 = !DILocation(line: 344, column: 3, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3743, file: !1, line: 343, column: 40)
!3749 = !DILocation(line: 344, column: 7, scope: !3748)
!3750 = !DILocation(line: 344, column: 20, scope: !3748)
!3751 = !DILocation(line: 345, column: 15, scope: !3748)
!3752 = !DILocation(line: 345, column: 3, scope: !3748)
!3753 = !DILocation(line: 345, column: 7, scope: !3748)
!3754 = !DILocation(line: 345, column: 13, scope: !3748)
!3755 = !DILocation(line: 346, column: 15, scope: !3748)
!3756 = !DILocation(line: 346, column: 3, scope: !3748)
!3757 = !DILocation(line: 346, column: 7, scope: !3748)
!3758 = !DILocation(line: 346, column: 13, scope: !3748)
!3759 = !DILocation(line: 347, column: 2, scope: !3748)
!3760 = !DILocation(line: 350, column: 8, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !1, line: 350, column: 7)
!3762 = distinct !DILexicalBlock(scope: !3743, file: !1, line: 348, column: 7)
!3763 = !DILocation(line: 350, column: 34, scope: !3761)
!3764 = !DILocation(line: 350, column: 38, scope: !3761)
!3765 = !DILocation(line: 350, column: 7, scope: !3762)
!3766 = !DILocation(line: 351, column: 4, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3761, file: !1, line: 350, column: 66)
!3768 = !DILocation(line: 351, column: 8, scope: !3767)
!3769 = !DILocation(line: 351, column: 21, scope: !3767)
!3770 = !DILocation(line: 352, column: 8, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3767, file: !1, line: 352, column: 8)
!3772 = !DILocation(line: 352, column: 15, scope: !3771)
!3773 = !DILocation(line: 352, column: 8, scope: !3767)
!3774 = !DILocation(line: 353, column: 17, scope: !3771)
!3775 = !DILocation(line: 353, column: 21, scope: !3771)
!3776 = !DILocation(line: 353, column: 29, scope: !3771)
!3777 = !DILocation(line: 353, column: 27, scope: !3771)
!3778 = !DILocation(line: 353, column: 5, scope: !3771)
!3779 = !DILocation(line: 353, column: 9, scope: !3771)
!3780 = !DILocation(line: 353, column: 14, scope: !3771)
!3781 = !DILocation(line: 354, column: 3, scope: !3767)
!3782 = !DILocation(line: 357, column: 7, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3762, file: !1, line: 357, column: 7)
!3784 = !DILocation(line: 357, column: 13, scope: !3783)
!3785 = !DILocation(line: 357, column: 7, scope: !3762)
!3786 = !DILocation(line: 358, column: 16, scope: !3783)
!3787 = !DILocation(line: 358, column: 4, scope: !3783)
!3788 = !DILocation(line: 358, column: 8, scope: !3783)
!3789 = !DILocation(line: 358, column: 14, scope: !3783)
!3790 = !DILocation(line: 359, column: 7, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3762, file: !1, line: 359, column: 7)
!3792 = !DILocation(line: 359, column: 14, scope: !3791)
!3793 = !DILocation(line: 359, column: 7, scope: !3762)
!3794 = !DILocation(line: 360, column: 16, scope: !3791)
!3795 = !DILocation(line: 360, column: 4, scope: !3791)
!3796 = !DILocation(line: 360, column: 8, scope: !3791)
!3797 = !DILocation(line: 360, column: 14, scope: !3791)
!3798 = !DILocation(line: 362, column: 1, scope: !3729)
!3799 = distinct !DISubprogram(name: "UI_DrawTriIcon", scope: !1, file: !1, line: 404, type: !3800, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{null, !1380, !1380, !1412}
!3802 = !DILocalVariable(name: "x", arg: 1, scope: !3799, file: !1, line: 404, type: !1380)
!3803 = !DILocation(line: 404, column: 27, scope: !3799)
!3804 = !DILocalVariable(name: "y", arg: 2, scope: !3799, file: !1, line: 404, type: !1380)
!3805 = !DILocation(line: 404, column: 36, scope: !3799)
!3806 = !DILocalVariable(name: "dir", arg: 3, scope: !3799, file: !1, line: 404, type: !1412)
!3807 = !DILocation(line: 404, column: 44, scope: !3799)
!3808 = !DILocalVariable(name: "f3", scope: !3799, file: !1, line: 406, type: !1380)
!3809 = !DILocation(line: 406, column: 8, scope: !3799)
!3810 = !DILocation(line: 406, column: 22, scope: !3799)
!3811 = !DILocation(line: 406, column: 20, scope: !3799)
!3812 = !DILocation(line: 406, column: 18, scope: !3799)
!3813 = !DILocation(line: 406, column: 13, scope: !3799)
!3814 = !DILocalVariable(name: "f5", scope: !3799, file: !1, line: 407, type: !1380)
!3815 = !DILocation(line: 407, column: 8, scope: !3799)
!3816 = !DILocation(line: 407, column: 22, scope: !3799)
!3817 = !DILocation(line: 407, column: 20, scope: !3799)
!3818 = !DILocation(line: 407, column: 18, scope: !3799)
!3819 = !DILocation(line: 407, column: 13, scope: !3799)
!3820 = !DILocalVariable(name: "f7", scope: !3799, file: !1, line: 408, type: !1380)
!3821 = !DILocation(line: 408, column: 8, scope: !3799)
!3822 = !DILocation(line: 408, column: 22, scope: !3799)
!3823 = !DILocation(line: 408, column: 20, scope: !3799)
!3824 = !DILocation(line: 408, column: 18, scope: !3799)
!3825 = !DILocation(line: 408, column: 13, scope: !3799)
!3826 = !DILocation(line: 410, column: 6, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3799, file: !1, line: 410, column: 6)
!3828 = !DILocation(line: 410, column: 10, scope: !3827)
!3829 = !DILocation(line: 410, column: 6, scope: !3799)
!3830 = !DILocation(line: 411, column: 21, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3827, file: !1, line: 410, column: 18)
!3832 = !DILocation(line: 411, column: 25, scope: !3831)
!3833 = !DILocation(line: 411, column: 23, scope: !3831)
!3834 = !DILocation(line: 411, column: 29, scope: !3831)
!3835 = !DILocation(line: 411, column: 33, scope: !3831)
!3836 = !DILocation(line: 411, column: 31, scope: !3831)
!3837 = !DILocation(line: 411, column: 37, scope: !3831)
!3838 = !DILocation(line: 411, column: 41, scope: !3831)
!3839 = !DILocation(line: 411, column: 39, scope: !3831)
!3840 = !DILocation(line: 411, column: 45, scope: !3831)
!3841 = !DILocation(line: 411, column: 49, scope: !3831)
!3842 = !DILocation(line: 411, column: 47, scope: !3831)
!3843 = !DILocation(line: 411, column: 53, scope: !3831)
!3844 = !DILocation(line: 411, column: 57, scope: !3831)
!3845 = !DILocation(line: 411, column: 55, scope: !3831)
!3846 = !DILocation(line: 411, column: 61, scope: !3831)
!3847 = !DILocation(line: 411, column: 3, scope: !3831)
!3848 = !DILocation(line: 412, column: 2, scope: !3831)
!3849 = !DILocation(line: 413, column: 11, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3827, file: !1, line: 413, column: 11)
!3851 = !DILocation(line: 413, column: 15, scope: !3850)
!3852 = !DILocation(line: 413, column: 11, scope: !3827)
!3853 = !DILocation(line: 414, column: 21, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3850, file: !1, line: 413, column: 23)
!3855 = !DILocation(line: 414, column: 25, scope: !3854)
!3856 = !DILocation(line: 414, column: 23, scope: !3854)
!3857 = !DILocation(line: 414, column: 29, scope: !3854)
!3858 = !DILocation(line: 414, column: 33, scope: !3854)
!3859 = !DILocation(line: 414, column: 31, scope: !3854)
!3860 = !DILocation(line: 414, column: 37, scope: !3854)
!3861 = !DILocation(line: 414, column: 41, scope: !3854)
!3862 = !DILocation(line: 414, column: 39, scope: !3854)
!3863 = !DILocation(line: 414, column: 45, scope: !3854)
!3864 = !DILocation(line: 414, column: 49, scope: !3854)
!3865 = !DILocation(line: 414, column: 47, scope: !3854)
!3866 = !DILocation(line: 414, column: 53, scope: !3854)
!3867 = !DILocation(line: 414, column: 56, scope: !3854)
!3868 = !DILocation(line: 414, column: 60, scope: !3854)
!3869 = !DILocation(line: 414, column: 58, scope: !3854)
!3870 = !DILocation(line: 414, column: 3, scope: !3854)
!3871 = !DILocation(line: 415, column: 2, scope: !3854)
!3872 = !DILocation(line: 417, column: 21, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3850, file: !1, line: 416, column: 7)
!3874 = !DILocation(line: 417, column: 25, scope: !3873)
!3875 = !DILocation(line: 417, column: 23, scope: !3873)
!3876 = !DILocation(line: 417, column: 29, scope: !3873)
!3877 = !DILocation(line: 417, column: 33, scope: !3873)
!3878 = !DILocation(line: 417, column: 31, scope: !3873)
!3879 = !DILocation(line: 417, column: 37, scope: !3873)
!3880 = !DILocation(line: 417, column: 41, scope: !3873)
!3881 = !DILocation(line: 417, column: 39, scope: !3873)
!3882 = !DILocation(line: 417, column: 45, scope: !3873)
!3883 = !DILocation(line: 417, column: 49, scope: !3873)
!3884 = !DILocation(line: 417, column: 47, scope: !3873)
!3885 = !DILocation(line: 417, column: 53, scope: !3873)
!3886 = !DILocation(line: 417, column: 56, scope: !3873)
!3887 = !DILocation(line: 417, column: 60, scope: !3873)
!3888 = !DILocation(line: 417, column: 58, scope: !3873)
!3889 = !DILocation(line: 417, column: 3, scope: !3873)
!3890 = !DILocation(line: 419, column: 1, scope: !3799)
!3891 = distinct !DISubprogram(name: "ui_draw_aligned_panel", scope: !1, file: !1, line: 557, type: !3892, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!3892 = !DISubroutineType(types: !3893)
!3893 = !{null, !3894, !1381, !3933, !3449}
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3895, size: 64)
!3895 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiStyle", file: !3896, line: 120, baseType: !3897)
!3896 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiStyle", file: !3896, line: 96, size: 1856, elements: !3898)
!3898 = !{!3899, !3901, !3902, !3903, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3897, file: !3896, line: 97, baseType: !3900, size: 64)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3897, file: !3896, line: 97, baseType: !3900, size: 64, offset: 64)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3897, file: !3896, line: 99, baseType: !1411, size: 512, offset: 128)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "paneltitle", scope: !3897, file: !3896, line: 101, baseType: !3904, size: 256, offset: 640)
!3904 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiFontStyle", file: !3896, line: 84, baseType: !3905)
!3905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiFontStyle", file: !3896, line: 73, size: 256, elements: !3906)
!3906 = !{!3907, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918}
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "uifont_id", scope: !3905, file: !3896, line: 74, baseType: !1488, size: 16)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3905, file: !3896, line: 75, baseType: !1488, size: 16, offset: 16)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "kerning", scope: !3905, file: !3896, line: 76, baseType: !1488, size: 16, offset: 32)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3905, file: !3896, line: 77, baseType: !1562, size: 48, offset: 48)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "italic", scope: !3905, file: !3896, line: 78, baseType: !1488, size: 16, offset: 96)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "bold", scope: !3905, file: !3896, line: 78, baseType: !1488, size: 16, offset: 112)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "shadow", scope: !3905, file: !3896, line: 79, baseType: !1488, size: 16, offset: 128)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "shadx", scope: !3905, file: !3896, line: 80, baseType: !1488, size: 16, offset: 144)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "shady", scope: !3905, file: !3896, line: 80, baseType: !1488, size: 16, offset: 160)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3905, file: !3896, line: 81, baseType: !1488, size: 16, offset: 176)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "shadowalpha", scope: !3905, file: !3896, line: 82, baseType: !1380, size: 32, offset: 192)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "shadowcolor", scope: !3905, file: !3896, line: 83, baseType: !1380, size: 32, offset: 224)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "grouplabel", scope: !3897, file: !3896, line: 102, baseType: !3904, size: 256, offset: 896)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "widgetlabel", scope: !3897, file: !3896, line: 103, baseType: !3904, size: 256, offset: 1152)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "widget", scope: !3897, file: !3896, line: 104, baseType: !3904, size: 256, offset: 1408)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "panelzoom", scope: !3897, file: !3896, line: 106, baseType: !1380, size: 32, offset: 1664)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "minlabelchars", scope: !3897, file: !3896, line: 108, baseType: !1488, size: 16, offset: 1696)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "minwidgetchars", scope: !3897, file: !3896, line: 109, baseType: !1488, size: 16, offset: 1712)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "columnspace", scope: !3897, file: !3896, line: 111, baseType: !1488, size: 16, offset: 1728)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "templatespace", scope: !3897, file: !3896, line: 112, baseType: !1488, size: 16, offset: 1744)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "boxspace", scope: !3897, file: !3896, line: 113, baseType: !1488, size: 16, offset: 1760)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "buttonspacex", scope: !3897, file: !3896, line: 114, baseType: !1488, size: 16, offset: 1776)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "buttonspacey", scope: !3897, file: !3896, line: 115, baseType: !1488, size: 16, offset: 1792)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "panelspace", scope: !3897, file: !3896, line: 116, baseType: !1488, size: 16, offset: 1808)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "panelouter", scope: !3897, file: !3896, line: 117, baseType: !1488, size: 16, offset: 1824)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3897, file: !3896, line: 119, baseType: !1488, size: 16, offset: 1840)
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3934, size: 64)
!3934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1601)
!3935 = !DILocalVariable(name: "style", arg: 1, scope: !3891, file: !1, line: 557, type: !3894)
!3936 = !DILocation(line: 557, column: 37, scope: !3891)
!3937 = !DILocalVariable(name: "block", arg: 2, scope: !3891, file: !1, line: 557, type: !1381)
!3938 = !DILocation(line: 557, column: 53, scope: !3891)
!3939 = !DILocalVariable(name: "rect", arg: 3, scope: !3891, file: !1, line: 557, type: !3933)
!3940 = !DILocation(line: 557, column: 72, scope: !3891)
!3941 = !DILocalVariable(name: "show_pin", arg: 4, scope: !3891, file: !1, line: 557, type: !3449)
!3942 = !DILocation(line: 557, column: 89, scope: !3891)
!3943 = !DILocalVariable(name: "panel", scope: !3891, file: !1, line: 559, type: !1396)
!3944 = !DILocation(line: 559, column: 9, scope: !3891)
!3945 = !DILocation(line: 559, column: 17, scope: !3891)
!3946 = !DILocation(line: 559, column: 24, scope: !3891)
!3947 = !DILocalVariable(name: "headrect", scope: !3891, file: !1, line: 560, type: !1601)
!3948 = !DILocation(line: 560, column: 7, scope: !3891)
!3949 = !DILocalVariable(name: "itemrect", scope: !3891, file: !1, line: 561, type: !1511)
!3950 = !DILocation(line: 561, column: 7, scope: !3891)
!3951 = !DILocalVariable(name: "ofsx", scope: !3891, file: !1, line: 562, type: !1420)
!3952 = !DILocation(line: 562, column: 6, scope: !3891)
!3953 = !DILocation(line: 564, column: 6, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3891, file: !1, line: 564, column: 6)
!3955 = !DILocation(line: 564, column: 13, scope: !3954)
!3956 = !DILocation(line: 564, column: 6, scope: !3891)
!3957 = !DILocation(line: 564, column: 23, scope: !3954)
!3958 = !DILocation(line: 565, column: 6, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3891, file: !1, line: 565, column: 6)
!3960 = !DILocation(line: 565, column: 13, scope: !3959)
!3961 = !DILocation(line: 565, column: 18, scope: !3959)
!3962 = !DILocation(line: 565, column: 22, scope: !3959)
!3963 = !DILocation(line: 565, column: 29, scope: !3959)
!3964 = !DILocation(line: 565, column: 35, scope: !3959)
!3965 = !DILocation(line: 565, column: 40, scope: !3959)
!3966 = !DILocation(line: 565, column: 6, scope: !3891)
!3967 = !DILocation(line: 565, column: 58, scope: !3959)
!3968 = !DILocation(line: 569, column: 14, scope: !3891)
!3969 = !DILocation(line: 569, column: 13, scope: !3891)
!3970 = !DILocation(line: 570, column: 27, scope: !3891)
!3971 = !DILocation(line: 570, column: 11, scope: !3891)
!3972 = !DILocation(line: 570, column: 16, scope: !3891)
!3973 = !DILocation(line: 571, column: 27, scope: !3891)
!3974 = !DILocation(line: 571, column: 18, scope: !3891)
!3975 = !DILocation(line: 571, column: 40, scope: !3891)
!3976 = !DILocation(line: 571, column: 53, scope: !3891)
!3977 = !DILocation(line: 571, column: 60, scope: !3891)
!3978 = !DILocation(line: 571, column: 51, scope: !3891)
!3979 = !DILocation(line: 571, column: 67, scope: !3891)
!3980 = !DILocation(line: 571, column: 34, scope: !3891)
!3981 = !DILocation(line: 571, column: 32, scope: !3891)
!3982 = !DILocation(line: 571, column: 11, scope: !3891)
!3983 = !DILocation(line: 571, column: 16, scope: !3891)
!3984 = !DILocalVariable(name: "minx", scope: !3985, file: !1, line: 574, type: !1380)
!3985 = distinct !DILexicalBlock(scope: !3891, file: !1, line: 573, column: 2)
!3986 = !DILocation(line: 574, column: 9, scope: !3985)
!3987 = !DILocation(line: 574, column: 16, scope: !3985)
!3988 = !DILocation(line: 574, column: 22, scope: !3985)
!3989 = !DILocalVariable(name: "maxx", scope: !3985, file: !1, line: 575, type: !1380)
!3990 = !DILocation(line: 575, column: 9, scope: !3985)
!3991 = !DILocation(line: 575, column: 16, scope: !3985)
!3992 = !DILocation(line: 575, column: 22, scope: !3985)
!3993 = !DILocalVariable(name: "y", scope: !3985, file: !1, line: 576, type: !1380)
!3994 = !DILocation(line: 576, column: 9, scope: !3985)
!3995 = !DILocation(line: 576, column: 22, scope: !3985)
!3996 = !DILocation(line: 576, column: 13, scope: !3985)
!3997 = !DILocation(line: 578, column: 3, scope: !3985)
!3998 = !DILocation(line: 580, column: 7, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3985, file: !1, line: 580, column: 7)
!4000 = !DILocation(line: 580, column: 7, scope: !3985)
!4001 = !DILocation(line: 582, column: 4, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3999, file: !1, line: 580, column: 47)
!4003 = !DILocation(line: 583, column: 12, scope: !4002)
!4004 = !DILocation(line: 583, column: 27, scope: !4002)
!4005 = !DILocation(line: 583, column: 32, scope: !4002)
!4006 = !DILocation(line: 583, column: 18, scope: !4002)
!4007 = !DILocation(line: 583, column: 37, scope: !4002)
!4008 = !DILocation(line: 583, column: 43, scope: !4002)
!4009 = !DILocation(line: 583, column: 4, scope: !4002)
!4010 = !DILocation(line: 585, column: 14, scope: !4002)
!4011 = !DILocation(line: 585, column: 20, scope: !4002)
!4012 = !DILocation(line: 585, column: 23, scope: !4002)
!4013 = !DILocation(line: 585, column: 29, scope: !4002)
!4014 = !DILocation(line: 585, column: 4, scope: !4002)
!4015 = !DILocation(line: 586, column: 14, scope: !4002)
!4016 = !DILocation(line: 586, column: 20, scope: !4002)
!4017 = !DILocation(line: 586, column: 23, scope: !4002)
!4018 = !DILocation(line: 586, column: 29, scope: !4002)
!4019 = !DILocation(line: 586, column: 4, scope: !4002)
!4020 = !DILocation(line: 587, column: 3, scope: !4002)
!4021 = !DILocation(line: 588, column: 14, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !3999, file: !1, line: 588, column: 12)
!4023 = !DILocation(line: 588, column: 21, scope: !4022)
!4024 = !DILocation(line: 588, column: 34, scope: !4022)
!4025 = !DILocation(line: 588, column: 12, scope: !3999)
!4026 = !DILocation(line: 590, column: 19, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4022, file: !1, line: 588, column: 48)
!4028 = !DILocation(line: 590, column: 26, scope: !4027)
!4029 = !DILocation(line: 590, column: 17, scope: !4027)
!4030 = !DILocation(line: 590, column: 9, scope: !4027)
!4031 = !DILocation(line: 591, column: 19, scope: !4027)
!4032 = !DILocation(line: 591, column: 26, scope: !4027)
!4033 = !DILocation(line: 591, column: 17, scope: !4027)
!4034 = !DILocation(line: 591, column: 9, scope: !4027)
!4035 = !DILocation(line: 593, column: 4, scope: !4027)
!4036 = !DILocation(line: 594, column: 14, scope: !4027)
!4037 = !DILocation(line: 594, column: 20, scope: !4027)
!4038 = !DILocation(line: 594, column: 23, scope: !4027)
!4039 = !DILocation(line: 594, column: 29, scope: !4027)
!4040 = !DILocation(line: 594, column: 4, scope: !4027)
!4041 = !DILocation(line: 595, column: 4, scope: !4027)
!4042 = !DILocation(line: 596, column: 14, scope: !4027)
!4043 = !DILocation(line: 596, column: 20, scope: !4027)
!4044 = !DILocation(line: 596, column: 22, scope: !4027)
!4045 = !DILocation(line: 596, column: 27, scope: !4027)
!4046 = !DILocation(line: 596, column: 33, scope: !4027)
!4047 = !DILocation(line: 596, column: 35, scope: !4027)
!4048 = !DILocation(line: 596, column: 4, scope: !4027)
!4049 = !DILocation(line: 597, column: 3, scope: !4027)
!4050 = !DILocation(line: 599, column: 3, scope: !3985)
!4051 = !DILocation(line: 605, column: 6, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !3891, file: !1, line: 605, column: 6)
!4053 = !DILocation(line: 605, column: 15, scope: !4052)
!4054 = !DILocation(line: 605, column: 19, scope: !4052)
!4055 = !DILocation(line: 605, column: 26, scope: !4052)
!4056 = !DILocation(line: 605, column: 33, scope: !4052)
!4057 = !DILocation(line: 605, column: 38, scope: !4052)
!4058 = !DILocation(line: 605, column: 6, scope: !3891)
!4059 = !DILocation(line: 610, column: 3, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4052, file: !1, line: 609, column: 2)
!4061 = !DILocation(line: 611, column: 32, scope: !4060)
!4062 = !DILocation(line: 611, column: 23, scope: !4060)
!4063 = !DILocation(line: 611, column: 41, scope: !4060)
!4064 = !DILocation(line: 611, column: 50, scope: !4060)
!4065 = !DILocation(line: 611, column: 60, scope: !4060)
!4066 = !DILocation(line: 611, column: 67, scope: !4060)
!4067 = !DILocation(line: 611, column: 58, scope: !4060)
!4068 = !DILocation(line: 611, column: 37, scope: !4060)
!4069 = !DILocation(line: 611, column: 85, scope: !4060)
!4070 = !DILocation(line: 611, column: 76, scope: !4060)
!4071 = !DILocation(line: 611, column: 100, scope: !4060)
!4072 = !DILocation(line: 611, column: 107, scope: !4060)
!4073 = !DILocation(line: 611, column: 98, scope: !4060)
!4074 = !DILocation(line: 611, column: 90, scope: !4060)
!4075 = !DILocation(line: 612, column: 24, scope: !4060)
!4076 = !DILocation(line: 612, column: 31, scope: !4060)
!4077 = !DILocation(line: 612, column: 36, scope: !4060)
!4078 = !DILocation(line: 612, column: 23, scope: !4060)
!4079 = !DILocation(line: 613, column: 24, scope: !4060)
!4080 = !DILocation(line: 613, column: 31, scope: !4060)
!4081 = !DILocation(line: 613, column: 40, scope: !4060)
!4082 = !DILocation(line: 613, column: 38, scope: !4060)
!4083 = !DILocation(line: 611, column: 3, scope: !4060)
!4084 = !DILocation(line: 614, column: 3, scope: !4060)
!4085 = !DILocation(line: 615, column: 2, scope: !4060)
!4086 = !DILocation(line: 618, column: 8, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !3891, file: !1, line: 618, column: 6)
!4088 = !DILocation(line: 618, column: 15, scope: !4087)
!4089 = !DILocation(line: 618, column: 20, scope: !4087)
!4090 = !DILocation(line: 618, column: 6, scope: !3891)
!4091 = !DILocation(line: 619, column: 32, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4087, file: !1, line: 618, column: 36)
!4093 = !DILocation(line: 619, column: 39, scope: !4092)
!4094 = !DILocation(line: 619, column: 3, scope: !4092)
!4095 = !DILocation(line: 622, column: 28, scope: !4092)
!4096 = !DILocation(line: 622, column: 19, scope: !4092)
!4097 = !DILocation(line: 622, column: 42, scope: !4092)
!4098 = !DILocation(line: 622, column: 49, scope: !4092)
!4099 = !DILocation(line: 622, column: 40, scope: !4092)
!4100 = !DILocation(line: 622, column: 33, scope: !4092)
!4101 = !DILocation(line: 622, column: 12, scope: !4092)
!4102 = !DILocation(line: 622, column: 17, scope: !4092)
!4103 = !DILocation(line: 623, column: 28, scope: !4092)
!4104 = !DILocation(line: 623, column: 35, scope: !4092)
!4105 = !DILocation(line: 623, column: 33, scope: !4092)
!4106 = !DILocation(line: 623, column: 12, scope: !4092)
!4107 = !DILocation(line: 623, column: 17, scope: !4092)
!4108 = !DILocation(line: 624, column: 28, scope: !4092)
!4109 = !DILocation(line: 624, column: 19, scope: !4092)
!4110 = !DILocation(line: 624, column: 12, scope: !4092)
!4111 = !DILocation(line: 624, column: 17, scope: !4092)
!4112 = !DILocation(line: 625, column: 28, scope: !4092)
!4113 = !DILocation(line: 625, column: 19, scope: !4092)
!4114 = !DILocation(line: 625, column: 12, scope: !4092)
!4115 = !DILocation(line: 625, column: 17, scope: !4092)
!4116 = !DILocation(line: 627, column: 3, scope: !4092)
!4117 = !DILocation(line: 628, column: 3, scope: !4092)
!4118 = !DILocation(line: 629, column: 2, scope: !4092)
!4119 = !DILocation(line: 634, column: 6, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !3891, file: !1, line: 634, column: 6)
!4121 = !DILocation(line: 634, column: 13, scope: !4120)
!4122 = !DILocation(line: 634, column: 18, scope: !4120)
!4123 = !DILocation(line: 634, column: 6, scope: !3891)
!4124 = !DILocation(line: 635, column: 2, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4120, file: !1, line: 634, column: 33)
!4126 = !DILocation(line: 636, column: 11, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4120, file: !1, line: 636, column: 11)
!4128 = !DILocation(line: 636, column: 18, scope: !4127)
!4129 = !DILocation(line: 636, column: 23, scope: !4127)
!4130 = !DILocation(line: 636, column: 11, scope: !4120)
!4131 = !DILocation(line: 638, column: 32, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4127, file: !1, line: 636, column: 38)
!4133 = !DILocation(line: 638, column: 39, scope: !4132)
!4134 = !DILocation(line: 638, column: 3, scope: !4132)
!4135 = !DILocation(line: 639, column: 2, scope: !4132)
!4136 = !DILocation(line: 643, column: 7, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4138, file: !1, line: 643, column: 7)
!4138 = distinct !DILexicalBlock(scope: !4127, file: !1, line: 641, column: 7)
!4139 = !DILocation(line: 643, column: 14, scope: !4137)
!4140 = !DILocation(line: 643, column: 19, scope: !4137)
!4141 = !DILocation(line: 643, column: 7, scope: !4138)
!4142 = !DILocation(line: 644, column: 8, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !1, line: 644, column: 8)
!4144 = distinct !DILexicalBlock(scope: !4137, file: !1, line: 643, column: 33)
!4145 = !DILocation(line: 644, column: 15, scope: !4143)
!4146 = !DILocation(line: 644, column: 23, scope: !4143)
!4147 = !DILocation(line: 644, column: 8, scope: !4144)
!4148 = !DILocation(line: 644, column: 39, scope: !4143)
!4149 = !DILocation(line: 645, column: 9, scope: !4143)
!4150 = !DILocation(line: 647, column: 4, scope: !4144)
!4151 = !DILocation(line: 648, column: 23, scope: !4144)
!4152 = !DILocation(line: 648, column: 29, scope: !4144)
!4153 = !DILocation(line: 648, column: 21, scope: !4144)
!4154 = !DILocation(line: 648, column: 42, scope: !4144)
!4155 = !DILocation(line: 648, column: 48, scope: !4144)
!4156 = !DILocation(line: 648, column: 40, scope: !4144)
!4157 = !DILocation(line: 648, column: 61, scope: !4144)
!4158 = !DILocation(line: 648, column: 67, scope: !4144)
!4159 = !DILocation(line: 648, column: 59, scope: !4144)
!4160 = !DILocation(line: 648, column: 89, scope: !4144)
!4161 = !DILocation(line: 648, column: 80, scope: !4144)
!4162 = !DILocation(line: 648, column: 78, scope: !4144)
!4163 = !DILocation(line: 648, column: 94, scope: !4144)
!4164 = !DILocation(line: 648, column: 4, scope: !4144)
!4165 = !DILocation(line: 649, column: 3, scope: !4144)
!4166 = !DILocation(line: 652, column: 7, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4138, file: !1, line: 652, column: 7)
!4168 = !DILocation(line: 652, column: 7, scope: !4138)
!4169 = !DILocation(line: 654, column: 4, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4167, file: !1, line: 652, column: 45)
!4171 = !DILocation(line: 655, column: 4, scope: !4170)
!4172 = !DILocation(line: 656, column: 12, scope: !4170)
!4173 = !DILocation(line: 656, column: 18, scope: !4170)
!4174 = !DILocation(line: 656, column: 24, scope: !4170)
!4175 = !DILocation(line: 656, column: 30, scope: !4170)
!4176 = !DILocation(line: 656, column: 36, scope: !4170)
!4177 = !DILocation(line: 656, column: 42, scope: !4170)
!4178 = !DILocation(line: 656, column: 48, scope: !4170)
!4179 = !DILocation(line: 656, column: 54, scope: !4170)
!4180 = !DILocation(line: 656, column: 4, scope: !4170)
!4181 = !DILocation(line: 657, column: 3, scope: !4170)
!4182 = !DILocation(line: 659, column: 7, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4138, file: !1, line: 659, column: 7)
!4184 = !DILocation(line: 659, column: 14, scope: !4183)
!4185 = !DILocation(line: 659, column: 22, scope: !4183)
!4186 = !DILocation(line: 659, column: 7, scope: !4138)
!4187 = !DILocation(line: 660, column: 30, scope: !4183)
!4188 = !DILocation(line: 660, column: 4, scope: !4183)
!4189 = !DILocation(line: 665, column: 7, scope: !3891)
!4190 = !DILocation(line: 666, column: 6, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !3891, file: !1, line: 666, column: 6)
!4192 = !DILocation(line: 666, column: 13, scope: !4191)
!4193 = !DILocation(line: 666, column: 21, scope: !4191)
!4194 = !DILocation(line: 666, column: 6, scope: !3891)
!4195 = !DILocation(line: 667, column: 3, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4191, file: !1, line: 666, column: 37)
!4197 = !DILocation(line: 668, column: 18, scope: !4196)
!4198 = !DILocation(line: 668, column: 24, scope: !4196)
!4199 = !DILocation(line: 668, column: 29, scope: !4196)
!4200 = !DILocation(line: 668, column: 35, scope: !4196)
!4201 = !DILocation(line: 668, column: 33, scope: !4196)
!4202 = !DILocation(line: 668, column: 41, scope: !4196)
!4203 = !DILocation(line: 668, column: 47, scope: !4196)
!4204 = !DILocation(line: 668, column: 52, scope: !4196)
!4205 = !DILocation(line: 668, column: 3, scope: !4196)
!4206 = !DILocation(line: 669, column: 8, scope: !4196)
!4207 = !DILocation(line: 670, column: 2, scope: !4196)
!4208 = !DILocation(line: 673, column: 2, scope: !3891)
!4209 = !DILocation(line: 676, column: 27, scope: !3891)
!4210 = !DILocation(line: 676, column: 18, scope: !3891)
!4211 = !DILocation(line: 676, column: 41, scope: !3891)
!4212 = !DILocation(line: 676, column: 48, scope: !3891)
!4213 = !DILocation(line: 676, column: 39, scope: !3891)
!4214 = !DILocation(line: 676, column: 32, scope: !3891)
!4215 = !DILocation(line: 676, column: 11, scope: !3891)
!4216 = !DILocation(line: 676, column: 16, scope: !3891)
!4217 = !DILocation(line: 677, column: 27, scope: !3891)
!4218 = !DILocation(line: 677, column: 34, scope: !3891)
!4219 = !DILocation(line: 677, column: 32, scope: !3891)
!4220 = !DILocation(line: 677, column: 11, scope: !3891)
!4221 = !DILocation(line: 677, column: 16, scope: !3891)
!4222 = !DILocation(line: 678, column: 27, scope: !3891)
!4223 = !DILocation(line: 678, column: 18, scope: !3891)
!4224 = !DILocation(line: 678, column: 11, scope: !3891)
!4225 = !DILocation(line: 678, column: 16, scope: !3891)
!4226 = !DILocation(line: 679, column: 27, scope: !3891)
!4227 = !DILocation(line: 679, column: 18, scope: !3891)
!4228 = !DILocation(line: 679, column: 11, scope: !3891)
!4229 = !DILocation(line: 679, column: 16, scope: !3891)
!4230 = !DILocation(line: 681, column: 2, scope: !3891)
!4231 = !DILocation(line: 683, column: 6, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !3891, file: !1, line: 683, column: 6)
!4233 = !DILocation(line: 683, column: 13, scope: !4232)
!4234 = !DILocation(line: 683, column: 18, scope: !4232)
!4235 = !DILocation(line: 683, column: 6, scope: !3891)
!4236 = !DILocation(line: 684, column: 3, scope: !4232)
!4237 = !DILocation(line: 685, column: 11, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4232, file: !1, line: 685, column: 11)
!4239 = !DILocation(line: 685, column: 18, scope: !4238)
!4240 = !DILocation(line: 685, column: 23, scope: !4238)
!4241 = !DILocation(line: 685, column: 11, scope: !4232)
!4242 = !DILocation(line: 686, column: 3, scope: !4238)
!4243 = !DILocation(line: 688, column: 3, scope: !4238)
!4244 = !DILocation(line: 690, column: 8, scope: !3891)
!4245 = !DILocation(line: 691, column: 1, scope: !3891)
!4246 = distinct !DISubprogram(name: "ui_draw_aligned_panel_header", scope: !1, file: !1, line: 524, type: !4247, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!4247 = !DISubroutineType(types: !4248)
!4248 = !{null, !3894, !1381, !3933, !1412}
!4249 = !DILocalVariable(name: "style", arg: 1, scope: !4246, file: !1, line: 524, type: !3894)
!4250 = !DILocation(line: 524, column: 51, scope: !4246)
!4251 = !DILocalVariable(name: "block", arg: 2, scope: !4246, file: !1, line: 524, type: !1381)
!4252 = !DILocation(line: 524, column: 67, scope: !4246)
!4253 = !DILocalVariable(name: "rect", arg: 3, scope: !4246, file: !1, line: 524, type: !3933)
!4254 = !DILocation(line: 524, column: 86, scope: !4246)
!4255 = !DILocalVariable(name: "dir", arg: 4, scope: !4246, file: !1, line: 524, type: !1412)
!4256 = !DILocation(line: 524, column: 97, scope: !4246)
!4257 = !DILocalVariable(name: "panel", scope: !4246, file: !1, line: 526, type: !1396)
!4258 = !DILocation(line: 526, column: 9, scope: !4246)
!4259 = !DILocation(line: 526, column: 17, scope: !4246)
!4260 = !DILocation(line: 526, column: 24, scope: !4246)
!4261 = !DILocalVariable(name: "hrect", scope: !4246, file: !1, line: 527, type: !1601)
!4262 = !DILocation(line: 527, column: 7, scope: !4246)
!4263 = !DILocalVariable(name: "pnl_icons", scope: !4246, file: !1, line: 528, type: !1420)
!4264 = !DILocation(line: 528, column: 6, scope: !4246)
!4265 = !DILocalVariable(name: "activename", scope: !4246, file: !1, line: 529, type: !1582)
!4266 = !DILocation(line: 529, column: 14, scope: !4246)
!4267 = !DILocation(line: 529, column: 27, scope: !4246)
!4268 = !DILocation(line: 529, column: 34, scope: !4246)
!4269 = !DILocation(line: 529, column: 48, scope: !4246)
!4270 = !DILocation(line: 529, column: 55, scope: !4246)
!4271 = !DILocation(line: 529, column: 66, scope: !4246)
!4272 = !DILocation(line: 529, column: 73, scope: !4246)
!4273 = !DILocation(line: 532, column: 6, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4246, file: !1, line: 532, column: 6)
!4275 = !DILocation(line: 532, column: 13, scope: !4274)
!4276 = !DILocation(line: 532, column: 21, scope: !4274)
!4277 = !DILocation(line: 532, column: 6, scope: !4246)
!4278 = !DILocation(line: 533, column: 16, scope: !4274)
!4279 = !DILocation(line: 533, column: 23, scope: !4274)
!4280 = !DILocation(line: 533, column: 38, scope: !4274)
!4281 = !DILocation(line: 533, column: 36, scope: !4274)
!4282 = !DILocation(line: 533, column: 32, scope: !4274)
!4283 = !DILocation(line: 533, column: 47, scope: !4274)
!4284 = !DILocation(line: 533, column: 15, scope: !4274)
!4285 = !DILocation(line: 533, column: 54, scope: !4274)
!4286 = !DILocation(line: 533, column: 61, scope: !4274)
!4287 = !DILocation(line: 533, column: 52, scope: !4274)
!4288 = !DILocation(line: 533, column: 68, scope: !4274)
!4289 = !DILocation(line: 533, column: 13, scope: !4274)
!4290 = !DILocation(line: 533, column: 3, scope: !4274)
!4291 = !DILocation(line: 535, column: 16, scope: !4274)
!4292 = !DILocation(line: 535, column: 23, scope: !4274)
!4293 = !DILocation(line: 535, column: 34, scope: !4274)
!4294 = !DILocation(line: 535, column: 32, scope: !4274)
!4295 = !DILocation(line: 535, column: 43, scope: !4274)
!4296 = !DILocation(line: 535, column: 15, scope: !4274)
!4297 = !DILocation(line: 535, column: 50, scope: !4274)
!4298 = !DILocation(line: 535, column: 57, scope: !4274)
!4299 = !DILocation(line: 535, column: 48, scope: !4274)
!4300 = !DILocation(line: 535, column: 64, scope: !4274)
!4301 = !DILocation(line: 535, column: 13, scope: !4274)
!4302 = !DILocation(line: 539, column: 2, scope: !4246)
!4303 = !DILocation(line: 541, column: 11, scope: !4246)
!4304 = !DILocation(line: 541, column: 10, scope: !4246)
!4305 = !DILocation(line: 542, column: 6, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4246, file: !1, line: 542, column: 6)
!4307 = !DILocation(line: 542, column: 10, scope: !4306)
!4308 = !DILocation(line: 542, column: 6, scope: !4246)
!4309 = !DILocation(line: 543, column: 16, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4306, file: !1, line: 542, column: 18)
!4311 = !DILocation(line: 543, column: 22, scope: !4310)
!4312 = !DILocation(line: 543, column: 29, scope: !4310)
!4313 = !DILocation(line: 543, column: 27, scope: !4310)
!4314 = !DILocation(line: 543, column: 9, scope: !4310)
!4315 = !DILocation(line: 543, column: 14, scope: !4310)
!4316 = !DILocation(line: 544, column: 24, scope: !4310)
!4317 = !DILocation(line: 544, column: 31, scope: !4310)
!4318 = !DILocation(line: 544, column: 22, scope: !4310)
!4319 = !DILocation(line: 544, column: 9, scope: !4310)
!4320 = !DILocation(line: 544, column: 14, scope: !4310)
!4321 = !DILocation(line: 545, column: 20, scope: !4310)
!4322 = !DILocation(line: 545, column: 27, scope: !4310)
!4323 = !DILocation(line: 545, column: 47, scope: !4310)
!4324 = !DILocation(line: 545, column: 3, scope: !4310)
!4325 = !DILocation(line: 546, column: 2, scope: !4310)
!4326 = !DILocation(line: 551, column: 16, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4306, file: !1, line: 547, column: 7)
!4328 = !DILocation(line: 551, column: 22, scope: !4327)
!4329 = !DILocation(line: 551, column: 30, scope: !4327)
!4330 = !DILocation(line: 551, column: 39, scope: !4327)
!4331 = !DILocation(line: 551, column: 29, scope: !4327)
!4332 = !DILocation(line: 551, column: 46, scope: !4327)
!4333 = !DILocation(line: 551, column: 53, scope: !4327)
!4334 = !DILocation(line: 551, column: 44, scope: !4327)
!4335 = !DILocation(line: 551, column: 27, scope: !4327)
!4336 = !DILocation(line: 551, column: 60, scope: !4327)
!4337 = !DILocation(line: 551, column: 9, scope: !4327)
!4338 = !DILocation(line: 551, column: 14, scope: !4327)
!4339 = !DILocation(line: 552, column: 27, scope: !4327)
!4340 = !DILocation(line: 552, column: 34, scope: !4327)
!4341 = !DILocation(line: 552, column: 54, scope: !4327)
!4342 = !DILocation(line: 552, column: 3, scope: !4327)
!4343 = !DILocation(line: 554, column: 1, scope: !4246)
!4344 = distinct !DISubprogram(name: "BLI_rcti_size_y", scope: !4345, file: !4345, line: 106, type: !4346, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!4345 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!1420, !4348}
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4349, size: 64)
!4349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1602)
!4350 = !DILocalVariable(name: "rct", arg: 1, scope: !4344, file: !4345, line: 106, type: !4348)
!4351 = !DILocation(line: 106, column: 53, scope: !4344)
!4352 = !DILocation(line: 106, column: 68, scope: !4344)
!4353 = !DILocation(line: 106, column: 73, scope: !4344)
!4354 = !DILocation(line: 106, column: 80, scope: !4344)
!4355 = !DILocation(line: 106, column: 85, scope: !4344)
!4356 = !DILocation(line: 106, column: 78, scope: !4344)
!4357 = !DILocation(line: 106, column: 60, scope: !4344)
!4358 = distinct !DISubprogram(name: "ui_draw_panel_dragwidget", scope: !1, file: !1, line: 486, type: !4359, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{null, !4361}
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 64)
!4362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1511)
!4363 = !DILocalVariable(name: "rect", arg: 1, scope: !4358, file: !1, line: 486, type: !4361)
!4364 = !DILocation(line: 486, column: 50, scope: !4358)
!4365 = !DILocalVariable(name: "col_back", scope: !4358, file: !1, line: 488, type: !4366)
!4366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 24, elements: !1793)
!4367 = !DILocation(line: 488, column: 16, scope: !4358)
!4368 = !DILocalVariable(name: "col_high", scope: !4358, file: !1, line: 488, type: !4366)
!4369 = !DILocation(line: 488, column: 29, scope: !4358)
!4370 = !DILocalVariable(name: "col_dark", scope: !4358, file: !1, line: 488, type: !4366)
!4371 = !DILocation(line: 488, column: 42, scope: !4358)
!4372 = !DILocalVariable(name: "col_tint", scope: !4358, file: !1, line: 489, type: !4373)
!4373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1420)
!4374 = !DILocation(line: 489, column: 12, scope: !4358)
!4375 = !DILocalVariable(name: "px", scope: !4358, file: !1, line: 491, type: !4373)
!4376 = !DILocation(line: 491, column: 12, scope: !4358)
!4377 = !DILocation(line: 491, column: 24, scope: !4358)
!4378 = !DILocation(line: 491, column: 17, scope: !4358)
!4379 = !DILocalVariable(name: "px_zoom", scope: !4358, file: !1, line: 492, type: !4373)
!4380 = !DILocation(line: 492, column: 12, scope: !4358)
!4381 = !DILocation(line: 492, column: 53, scope: !4358)
!4382 = !DILocation(line: 492, column: 37, scope: !4358)
!4383 = !DILocation(line: 492, column: 59, scope: !4358)
!4384 = !DILocation(line: 492, column: 29, scope: !4358)
!4385 = !DILocation(line: 492, column: 22, scope: !4358)
!4386 = !DILocalVariable(name: "box_margin", scope: !4358, file: !1, line: 494, type: !4373)
!4387 = !DILocation(line: 494, column: 12, scope: !4358)
!4388 = !DILocation(line: 494, column: 48, scope: !4358)
!4389 = !DILocation(line: 494, column: 56, scope: !4358)
!4390 = !DILocation(line: 494, column: 32, scope: !4358)
!4391 = !DILocation(line: 494, column: 66, scope: !4358)
!4392 = !DILocation(line: 494, column: 25, scope: !4358)
!4393 = !DILocalVariable(name: "box_size", scope: !4358, file: !1, line: 495, type: !4373)
!4394 = !DILocation(line: 495, column: 12, scope: !4358)
!4395 = !DILocation(line: 495, column: 55, scope: !4358)
!4396 = !DILocation(line: 495, column: 39, scope: !4358)
!4397 = !DILocation(line: 495, column: 61, scope: !4358)
!4398 = !DILocation(line: 495, column: 71, scope: !4358)
!4399 = !DILocation(line: 495, column: 69, scope: !4358)
!4400 = !DILocation(line: 495, column: 30, scope: !4358)
!4401 = !DILocation(line: 495, column: 76, scope: !4358)
!4402 = !DILocation(line: 495, column: 23, scope: !4358)
!4403 = !DILocalVariable(name: "x_min", scope: !4358, file: !1, line: 497, type: !4373)
!4404 = !DILocation(line: 497, column: 12, scope: !4358)
!4405 = !DILocation(line: 497, column: 20, scope: !4358)
!4406 = !DILocation(line: 497, column: 26, scope: !4358)
!4407 = !DILocalVariable(name: "y_min", scope: !4358, file: !1, line: 498, type: !4373)
!4408 = !DILocation(line: 498, column: 12, scope: !4358)
!4409 = !DILocation(line: 498, column: 20, scope: !4358)
!4410 = !DILocation(line: 498, column: 26, scope: !4358)
!4411 = !DILocalVariable(name: "y_ofs", scope: !4358, file: !1, line: 499, type: !4373)
!4412 = !DILocation(line: 499, column: 12, scope: !4358)
!4413 = !DILocation(line: 499, column: 51, scope: !4358)
!4414 = !DILocation(line: 499, column: 35, scope: !4358)
!4415 = !DILocation(line: 499, column: 57, scope: !4358)
!4416 = !DILocation(line: 499, column: 27, scope: !4358)
!4417 = !DILocation(line: 499, column: 66, scope: !4358)
!4418 = !DILocation(line: 499, column: 20, scope: !4358)
!4419 = !DILocalVariable(name: "x_ofs", scope: !4358, file: !1, line: 500, type: !4373)
!4420 = !DILocation(line: 500, column: 12, scope: !4358)
!4421 = !DILocation(line: 500, column: 20, scope: !4358)
!4422 = !DILocalVariable(name: "i_x", scope: !4358, file: !1, line: 501, type: !1420)
!4423 = !DILocation(line: 501, column: 6, scope: !4358)
!4424 = !DILocalVariable(name: "i_y", scope: !4358, file: !1, line: 501, type: !1420)
!4425 = !DILocation(line: 501, column: 11, scope: !4358)
!4426 = !DILocation(line: 504, column: 23, scope: !4358)
!4427 = !DILocation(line: 504, column: 97, scope: !4358)
!4428 = !DILocation(line: 504, column: 2, scope: !4358)
!4429 = !DILocation(line: 505, column: 26, scope: !4358)
!4430 = !DILocation(line: 505, column: 36, scope: !4358)
!4431 = !DILocation(line: 505, column: 2, scope: !4358)
!4432 = !DILocation(line: 506, column: 26, scope: !4358)
!4433 = !DILocation(line: 506, column: 36, scope: !4358)
!4434 = !DILocation(line: 506, column: 2, scope: !4358)
!4435 = !DILocation(line: 510, column: 11, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4358, file: !1, line: 510, column: 2)
!4437 = !DILocation(line: 510, column: 7, scope: !4436)
!4438 = !DILocation(line: 510, column: 16, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4436, file: !1, line: 510, column: 2)
!4440 = !DILocation(line: 510, column: 20, scope: !4439)
!4441 = !DILocation(line: 510, column: 2, scope: !4436)
!4442 = !DILocation(line: 511, column: 12, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4444, file: !1, line: 511, column: 3)
!4444 = distinct !DILexicalBlock(scope: !4439, file: !1, line: 510, column: 32)
!4445 = !DILocation(line: 511, column: 8, scope: !4443)
!4446 = !DILocation(line: 511, column: 17, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4443, file: !1, line: 511, column: 3)
!4448 = !DILocation(line: 511, column: 21, scope: !4447)
!4449 = !DILocation(line: 511, column: 3, scope: !4443)
!4450 = !DILocalVariable(name: "x_co", scope: !4451, file: !1, line: 512, type: !4373)
!4451 = distinct !DILexicalBlock(scope: !4447, file: !1, line: 511, column: 33)
!4452 = !DILocation(line: 512, column: 14, scope: !4451)
!4453 = !DILocation(line: 512, column: 22, scope: !4451)
!4454 = !DILocation(line: 512, column: 30, scope: !4451)
!4455 = !DILocation(line: 512, column: 28, scope: !4451)
!4456 = !DILocation(line: 512, column: 40, scope: !4451)
!4457 = !DILocation(line: 512, column: 47, scope: !4451)
!4458 = !DILocation(line: 512, column: 58, scope: !4451)
!4459 = !DILocation(line: 512, column: 56, scope: !4451)
!4460 = !DILocation(line: 512, column: 44, scope: !4451)
!4461 = !DILocation(line: 512, column: 37, scope: !4451)
!4462 = !DILocalVariable(name: "y_co", scope: !4451, file: !1, line: 513, type: !4373)
!4463 = !DILocation(line: 513, column: 14, scope: !4451)
!4464 = !DILocation(line: 513, column: 22, scope: !4451)
!4465 = !DILocation(line: 513, column: 30, scope: !4451)
!4466 = !DILocation(line: 513, column: 28, scope: !4451)
!4467 = !DILocation(line: 513, column: 40, scope: !4451)
!4468 = !DILocation(line: 513, column: 47, scope: !4451)
!4469 = !DILocation(line: 513, column: 58, scope: !4451)
!4470 = !DILocation(line: 513, column: 56, scope: !4451)
!4471 = !DILocation(line: 513, column: 44, scope: !4451)
!4472 = !DILocation(line: 513, column: 37, scope: !4451)
!4473 = !DILocation(line: 515, column: 16, scope: !4451)
!4474 = !DILocation(line: 515, column: 4, scope: !4451)
!4475 = !DILocation(line: 516, column: 12, scope: !4451)
!4476 = !DILocation(line: 516, column: 19, scope: !4451)
!4477 = !DILocation(line: 516, column: 17, scope: !4451)
!4478 = !DILocation(line: 516, column: 29, scope: !4451)
!4479 = !DILocation(line: 516, column: 36, scope: !4451)
!4480 = !DILocation(line: 516, column: 34, scope: !4451)
!4481 = !DILocation(line: 516, column: 45, scope: !4451)
!4482 = !DILocation(line: 516, column: 52, scope: !4451)
!4483 = !DILocation(line: 516, column: 59, scope: !4451)
!4484 = !DILocation(line: 516, column: 57, scope: !4451)
!4485 = !DILocation(line: 516, column: 71, scope: !4451)
!4486 = !DILocation(line: 516, column: 69, scope: !4451)
!4487 = !DILocation(line: 516, column: 51, scope: !4451)
!4488 = !DILocation(line: 516, column: 4, scope: !4451)
!4489 = !DILocation(line: 517, column: 16, scope: !4451)
!4490 = !DILocation(line: 517, column: 4, scope: !4451)
!4491 = !DILocation(line: 518, column: 12, scope: !4451)
!4492 = !DILocation(line: 518, column: 19, scope: !4451)
!4493 = !DILocation(line: 518, column: 17, scope: !4451)
!4494 = !DILocation(line: 518, column: 29, scope: !4451)
!4495 = !DILocation(line: 518, column: 35, scope: !4451)
!4496 = !DILocation(line: 518, column: 41, scope: !4451)
!4497 = !DILocation(line: 518, column: 48, scope: !4451)
!4498 = !DILocation(line: 518, column: 46, scope: !4451)
!4499 = !DILocation(line: 518, column: 4, scope: !4451)
!4500 = !DILocation(line: 519, column: 3, scope: !4451)
!4501 = !DILocation(line: 511, column: 29, scope: !4447)
!4502 = !DILocation(line: 511, column: 3, scope: !4447)
!4503 = distinct !{!4503, !4449, !4504}
!4504 = !DILocation(line: 519, column: 3, scope: !4443)
!4505 = !DILocation(line: 520, column: 2, scope: !4444)
!4506 = !DILocation(line: 510, column: 28, scope: !4439)
!4507 = !DILocation(line: 510, column: 2, scope: !4439)
!4508 = distinct !{!4508, !4441, !4509}
!4509 = !DILocation(line: 520, column: 2, scope: !4436)
!4510 = !DILocation(line: 521, column: 1, scope: !4358)
!4511 = distinct !DISubprogram(name: "ui_draw_panel_scalewidget", scope: !1, file: !1, line: 463, type: !4512, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{null, !3933}
!4514 = !DILocalVariable(name: "rect", arg: 1, scope: !4511, file: !1, line: 463, type: !3933)
!4515 = !DILocation(line: 463, column: 51, scope: !4511)
!4516 = !DILocalVariable(name: "xmin", scope: !4511, file: !1, line: 465, type: !1380)
!4517 = !DILocation(line: 465, column: 8, scope: !4511)
!4518 = !DILocalVariable(name: "xmax", scope: !4511, file: !1, line: 465, type: !1380)
!4519 = !DILocation(line: 465, column: 14, scope: !4511)
!4520 = !DILocalVariable(name: "dx", scope: !4511, file: !1, line: 465, type: !1380)
!4521 = !DILocation(line: 465, column: 20, scope: !4511)
!4522 = !DILocalVariable(name: "ymin", scope: !4511, file: !1, line: 466, type: !1380)
!4523 = !DILocation(line: 466, column: 8, scope: !4511)
!4524 = !DILocalVariable(name: "ymax", scope: !4511, file: !1, line: 466, type: !1380)
!4525 = !DILocation(line: 466, column: 14, scope: !4511)
!4526 = !DILocalVariable(name: "dy", scope: !4511, file: !1, line: 466, type: !1380)
!4527 = !DILocation(line: 466, column: 20, scope: !4511)
!4528 = !DILocation(line: 468, column: 9, scope: !4511)
!4529 = !DILocation(line: 468, column: 15, scope: !4511)
!4530 = !DILocation(line: 468, column: 22, scope: !4511)
!4531 = !DILocation(line: 468, column: 20, scope: !4511)
!4532 = !DILocation(line: 468, column: 33, scope: !4511)
!4533 = !DILocation(line: 468, column: 7, scope: !4511)
!4534 = !DILocation(line: 469, column: 9, scope: !4511)
!4535 = !DILocation(line: 469, column: 15, scope: !4511)
!4536 = !DILocation(line: 469, column: 20, scope: !4511)
!4537 = !DILocation(line: 469, column: 7, scope: !4511)
!4538 = !DILocation(line: 470, column: 9, scope: !4511)
!4539 = !DILocation(line: 470, column: 15, scope: !4511)
!4540 = !DILocation(line: 470, column: 20, scope: !4511)
!4541 = !DILocation(line: 470, column: 7, scope: !4511)
!4542 = !DILocation(line: 471, column: 9, scope: !4511)
!4543 = !DILocation(line: 471, column: 15, scope: !4511)
!4544 = !DILocation(line: 471, column: 22, scope: !4511)
!4545 = !DILocation(line: 471, column: 20, scope: !4511)
!4546 = !DILocation(line: 471, column: 33, scope: !4511)
!4547 = !DILocation(line: 471, column: 7, scope: !4511)
!4548 = !DILocation(line: 473, column: 15, scope: !4511)
!4549 = !DILocation(line: 473, column: 22, scope: !4511)
!4550 = !DILocation(line: 473, column: 20, scope: !4511)
!4551 = !DILocation(line: 473, column: 12, scope: !4511)
!4552 = !DILocation(line: 473, column: 5, scope: !4511)
!4553 = !DILocation(line: 474, column: 15, scope: !4511)
!4554 = !DILocation(line: 474, column: 22, scope: !4511)
!4555 = !DILocation(line: 474, column: 20, scope: !4511)
!4556 = !DILocation(line: 474, column: 12, scope: !4511)
!4557 = !DILocation(line: 474, column: 5, scope: !4511)
!4558 = !DILocation(line: 476, column: 2, scope: !4511)
!4559 = !DILocation(line: 477, column: 2, scope: !4511)
!4560 = !DILocation(line: 478, column: 12, scope: !4511)
!4561 = !DILocation(line: 478, column: 18, scope: !4511)
!4562 = !DILocation(line: 478, column: 24, scope: !4511)
!4563 = !DILocation(line: 478, column: 30, scope: !4511)
!4564 = !DILocation(line: 478, column: 2, scope: !4511)
!4565 = !DILocation(line: 479, column: 12, scope: !4511)
!4566 = !DILocation(line: 479, column: 19, scope: !4511)
!4567 = !DILocation(line: 479, column: 17, scope: !4511)
!4568 = !DILocation(line: 479, column: 23, scope: !4511)
!4569 = !DILocation(line: 479, column: 29, scope: !4511)
!4570 = !DILocation(line: 479, column: 35, scope: !4511)
!4571 = !DILocation(line: 479, column: 42, scope: !4511)
!4572 = !DILocation(line: 479, column: 40, scope: !4511)
!4573 = !DILocation(line: 479, column: 2, scope: !4511)
!4574 = !DILocation(line: 481, column: 2, scope: !4511)
!4575 = !DILocation(line: 482, column: 12, scope: !4511)
!4576 = !DILocation(line: 482, column: 18, scope: !4511)
!4577 = !DILocation(line: 482, column: 23, scope: !4511)
!4578 = !DILocation(line: 482, column: 28, scope: !4511)
!4579 = !DILocation(line: 482, column: 34, scope: !4511)
!4580 = !DILocation(line: 482, column: 39, scope: !4511)
!4581 = !DILocation(line: 482, column: 2, scope: !4511)
!4582 = !DILocation(line: 483, column: 12, scope: !4511)
!4583 = !DILocation(line: 483, column: 19, scope: !4511)
!4584 = !DILocation(line: 483, column: 17, scope: !4511)
!4585 = !DILocation(line: 483, column: 23, scope: !4511)
!4586 = !DILocation(line: 483, column: 28, scope: !4511)
!4587 = !DILocation(line: 483, column: 33, scope: !4511)
!4588 = !DILocation(line: 483, column: 39, scope: !4511)
!4589 = !DILocation(line: 483, column: 46, scope: !4511)
!4590 = !DILocation(line: 483, column: 44, scope: !4511)
!4591 = !DILocation(line: 483, column: 49, scope: !4511)
!4592 = !DILocation(line: 483, column: 2, scope: !4511)
!4593 = !DILocation(line: 484, column: 2, scope: !4511)
!4594 = !DILocation(line: 485, column: 1, scope: !4511)
!4595 = distinct !DISubprogram(name: "ui_draw_x_icon", scope: !1, file: !1, line: 454, type: !4596, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!4596 = !DISubroutineType(types: !4597)
!4597 = !{null, !1380, !1380}
!4598 = !DILocalVariable(name: "x", arg: 1, scope: !4595, file: !1, line: 454, type: !1380)
!4599 = !DILocation(line: 454, column: 34, scope: !4595)
!4600 = !DILocalVariable(name: "y", arg: 2, scope: !4595, file: !1, line: 454, type: !1380)
!4601 = !DILocation(line: 454, column: 43, scope: !4595)
!4602 = !DILocation(line: 457, column: 17, scope: !4595)
!4603 = !DILocation(line: 457, column: 20, scope: !4595)
!4604 = !DILocation(line: 457, column: 23, scope: !4595)
!4605 = !DILocation(line: 457, column: 25, scope: !4595)
!4606 = !DILocation(line: 457, column: 35, scope: !4595)
!4607 = !DILocation(line: 457, column: 37, scope: !4595)
!4608 = !DILocation(line: 457, column: 2, scope: !4595)
!4609 = !DILocation(line: 459, column: 1, scope: !4595)
!4610 = distinct !DISubprogram(name: "ui_draw_tria_rect", scope: !1, file: !1, line: 422, type: !4611, scopeLine: 423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!4611 = !DISubroutineType(types: !4612)
!4612 = !{null, !4361, !1412}
!4613 = !DILocalVariable(name: "rect", arg: 1, scope: !4610, file: !1, line: 422, type: !4361)
!4614 = !DILocation(line: 422, column: 43, scope: !4610)
!4615 = !DILocalVariable(name: "dir", arg: 2, scope: !4610, file: !1, line: 422, type: !1412)
!4616 = !DILocation(line: 422, column: 54, scope: !4610)
!4617 = !DILocation(line: 424, column: 6, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4610, file: !1, line: 424, column: 6)
!4619 = !DILocation(line: 424, column: 10, scope: !4618)
!4620 = !DILocation(line: 424, column: 6, scope: !4610)
!4621 = !DILocalVariable(name: "half", scope: !4622, file: !1, line: 425, type: !1380)
!4622 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 424, column: 18)
!4623 = !DILocation(line: 425, column: 9, scope: !4622)
!4624 = !DILocation(line: 425, column: 39, scope: !4622)
!4625 = !DILocation(line: 425, column: 23, scope: !4622)
!4626 = !DILocation(line: 425, column: 21, scope: !4622)
!4627 = !DILocation(line: 426, column: 21, scope: !4622)
!4628 = !DILocation(line: 426, column: 27, scope: !4622)
!4629 = !DILocation(line: 426, column: 33, scope: !4622)
!4630 = !DILocation(line: 426, column: 39, scope: !4622)
!4631 = !DILocation(line: 426, column: 45, scope: !4622)
!4632 = !DILocation(line: 426, column: 51, scope: !4622)
!4633 = !DILocation(line: 426, column: 57, scope: !4622)
!4634 = !DILocation(line: 426, column: 63, scope: !4622)
!4635 = !DILocation(line: 426, column: 69, scope: !4622)
!4636 = !DILocation(line: 426, column: 75, scope: !4622)
!4637 = !DILocation(line: 426, column: 81, scope: !4622)
!4638 = !DILocation(line: 426, column: 87, scope: !4622)
!4639 = !DILocation(line: 426, column: 94, scope: !4622)
!4640 = !DILocation(line: 426, column: 92, scope: !4622)
!4641 = !DILocation(line: 426, column: 3, scope: !4622)
!4642 = !DILocation(line: 427, column: 2, scope: !4622)
!4643 = !DILocalVariable(name: "half", scope: !4644, file: !1, line: 429, type: !1380)
!4644 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 428, column: 7)
!4645 = !DILocation(line: 429, column: 9, scope: !4644)
!4646 = !DILocation(line: 429, column: 39, scope: !4644)
!4647 = !DILocation(line: 429, column: 23, scope: !4644)
!4648 = !DILocation(line: 429, column: 21, scope: !4644)
!4649 = !DILocation(line: 430, column: 21, scope: !4644)
!4650 = !DILocation(line: 430, column: 27, scope: !4644)
!4651 = !DILocation(line: 430, column: 33, scope: !4644)
!4652 = !DILocation(line: 430, column: 39, scope: !4644)
!4653 = !DILocation(line: 430, column: 45, scope: !4644)
!4654 = !DILocation(line: 430, column: 51, scope: !4644)
!4655 = !DILocation(line: 430, column: 57, scope: !4644)
!4656 = !DILocation(line: 430, column: 63, scope: !4644)
!4657 = !DILocation(line: 430, column: 69, scope: !4644)
!4658 = !DILocation(line: 430, column: 75, scope: !4644)
!4659 = !DILocation(line: 430, column: 82, scope: !4644)
!4660 = !DILocation(line: 430, column: 80, scope: !4644)
!4661 = !DILocation(line: 430, column: 88, scope: !4644)
!4662 = !DILocation(line: 430, column: 94, scope: !4644)
!4663 = !DILocation(line: 430, column: 3, scope: !4644)
!4664 = !DILocation(line: 432, column: 1, scope: !4610)
!4665 = distinct !DISubprogram(name: "uiBeginPanels", scope: !1, file: !1, line: 941, type: !4666, scopeLine: 942, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{null, !4668, !3252}
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4670)
!4670 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !2268, line: 69, baseType: !1429)
!4671 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !4665, file: !1, line: 941, type: !4668)
!4672 = !DILocation(line: 941, column: 36, scope: !4665)
!4673 = !DILocalVariable(name: "ar", arg: 2, scope: !4665, file: !1, line: 941, type: !3252)
!4674 = !DILocation(line: 941, column: 56, scope: !4665)
!4675 = !DILocalVariable(name: "pa", scope: !4665, file: !1, line: 943, type: !1396)
!4676 = !DILocation(line: 943, column: 9, scope: !4665)
!4677 = !DILocation(line: 947, column: 12, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4665, file: !1, line: 947, column: 2)
!4679 = !DILocation(line: 947, column: 16, scope: !4678)
!4680 = !DILocation(line: 947, column: 23, scope: !4678)
!4681 = !DILocation(line: 947, column: 10, scope: !4678)
!4682 = !DILocation(line: 947, column: 7, scope: !4678)
!4683 = !DILocation(line: 947, column: 30, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4678, file: !1, line: 947, column: 2)
!4685 = !DILocation(line: 947, column: 2, scope: !4678)
!4686 = !DILocation(line: 948, column: 7, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4688, file: !1, line: 948, column: 7)
!4688 = distinct !DILexicalBlock(scope: !4684, file: !1, line: 947, column: 49)
!4689 = !DILocation(line: 948, column: 11, scope: !4687)
!4690 = !DILocation(line: 948, column: 24, scope: !4687)
!4691 = !DILocation(line: 948, column: 7, scope: !4688)
!4692 = !DILocation(line: 949, column: 4, scope: !4687)
!4693 = !DILocation(line: 949, column: 8, scope: !4687)
!4694 = !DILocation(line: 949, column: 21, scope: !4687)
!4695 = !DILocation(line: 951, column: 4, scope: !4687)
!4696 = !DILocation(line: 951, column: 8, scope: !4687)
!4697 = !DILocation(line: 951, column: 21, scope: !4687)
!4698 = !DILocation(line: 952, column: 2, scope: !4688)
!4699 = !DILocation(line: 947, column: 39, scope: !4684)
!4700 = !DILocation(line: 947, column: 43, scope: !4684)
!4701 = !DILocation(line: 947, column: 37, scope: !4684)
!4702 = !DILocation(line: 947, column: 2, scope: !4684)
!4703 = distinct !{!4703, !4685, !4704}
!4704 = !DILocation(line: 952, column: 2, scope: !4678)
!4705 = !DILocation(line: 953, column: 1, scope: !4665)
!4706 = distinct !DISubprogram(name: "uiEndPanels", scope: !1, file: !1, line: 956, type: !4707, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{null, !4668, !3252, !4709, !4709}
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!4710 = !DILocalVariable(name: "C", arg: 1, scope: !4706, file: !1, line: 956, type: !4668)
!4711 = !DILocation(line: 956, column: 34, scope: !4706)
!4712 = !DILocalVariable(name: "ar", arg: 2, scope: !4706, file: !1, line: 956, type: !3252)
!4713 = !DILocation(line: 956, column: 46, scope: !4706)
!4714 = !DILocalVariable(name: "x", arg: 3, scope: !4706, file: !1, line: 956, type: !4709)
!4715 = !DILocation(line: 956, column: 55, scope: !4706)
!4716 = !DILocalVariable(name: "y", arg: 4, scope: !4706, file: !1, line: 956, type: !4709)
!4717 = !DILocation(line: 956, column: 63, scope: !4706)
!4718 = !DILocalVariable(name: "sa", scope: !4706, file: !1, line: 958, type: !3338)
!4719 = !DILocation(line: 958, column: 11, scope: !4706)
!4720 = !DILocation(line: 958, column: 28, scope: !4706)
!4721 = !DILocation(line: 958, column: 16, scope: !4706)
!4722 = !DILocalVariable(name: "block", scope: !4706, file: !1, line: 959, type: !1381)
!4723 = !DILocation(line: 959, column: 11, scope: !4706)
!4724 = !DILocalVariable(name: "panot", scope: !4706, file: !1, line: 960, type: !1396)
!4725 = !DILocation(line: 960, column: 9, scope: !4706)
!4726 = !DILocalVariable(name: "panew", scope: !4706, file: !1, line: 960, type: !1396)
!4727 = !DILocation(line: 960, column: 17, scope: !4706)
!4728 = !DILocalVariable(name: "patest", scope: !4706, file: !1, line: 960, type: !1396)
!4729 = !DILocation(line: 960, column: 25, scope: !4706)
!4730 = !DILocalVariable(name: "pa", scope: !4706, file: !1, line: 960, type: !1396)
!4731 = !DILocation(line: 960, column: 34, scope: !4706)
!4732 = !DILocalVariable(name: "firstpa", scope: !4706, file: !1, line: 960, type: !1396)
!4733 = !DILocation(line: 960, column: 39, scope: !4706)
!4734 = !DILocation(line: 963, column: 15, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4706, file: !1, line: 963, column: 2)
!4736 = !DILocation(line: 963, column: 19, scope: !4735)
!4737 = !DILocation(line: 963, column: 28, scope: !4735)
!4738 = !DILocation(line: 963, column: 13, scope: !4735)
!4739 = !DILocation(line: 963, column: 7, scope: !4735)
!4740 = !DILocation(line: 963, column: 35, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4735, file: !1, line: 963, column: 2)
!4742 = !DILocation(line: 963, column: 2, scope: !4735)
!4743 = !DILocation(line: 964, column: 7, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4741, file: !1, line: 964, column: 7)
!4745 = !DILocation(line: 964, column: 14, scope: !4744)
!4746 = !DILocation(line: 964, column: 21, scope: !4744)
!4747 = !DILocation(line: 964, column: 24, scope: !4744)
!4748 = !DILocation(line: 964, column: 31, scope: !4744)
!4749 = !DILocation(line: 964, column: 7, scope: !4741)
!4750 = !DILocation(line: 965, column: 26, scope: !4744)
!4751 = !DILocation(line: 965, column: 4, scope: !4744)
!4752 = !DILocation(line: 963, column: 50, scope: !4741)
!4753 = !DILocation(line: 963, column: 57, scope: !4741)
!4754 = !DILocation(line: 963, column: 48, scope: !4741)
!4755 = !DILocation(line: 963, column: 2, scope: !4741)
!4756 = distinct !{!4756, !4742, !4757}
!4757 = !DILocation(line: 965, column: 31, scope: !4735)
!4758 = !DILocation(line: 968, column: 15, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4706, file: !1, line: 968, column: 2)
!4760 = !DILocation(line: 968, column: 19, scope: !4759)
!4761 = !DILocation(line: 968, column: 26, scope: !4759)
!4762 = !DILocation(line: 968, column: 13, scope: !4759)
!4763 = !DILocation(line: 968, column: 7, scope: !4759)
!4764 = !DILocation(line: 968, column: 33, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4759, file: !1, line: 968, column: 2)
!4766 = !DILocation(line: 968, column: 2, scope: !4759)
!4767 = !DILocation(line: 969, column: 8, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !1, line: 969, column: 7)
!4769 = distinct !DILexicalBlock(scope: !4765, file: !1, line: 968, column: 61)
!4770 = !DILocation(line: 969, column: 15, scope: !4768)
!4771 = !DILocation(line: 969, column: 28, scope: !4768)
!4772 = !DILocation(line: 969, column: 42, scope: !4768)
!4773 = !DILocation(line: 969, column: 7, scope: !4769)
!4774 = !DILocation(line: 971, column: 17, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 971, column: 4)
!4776 = distinct !DILexicalBlock(scope: !4768, file: !1, line: 969, column: 48)
!4777 = !DILocation(line: 971, column: 21, scope: !4775)
!4778 = !DILocation(line: 971, column: 28, scope: !4775)
!4779 = !DILocation(line: 971, column: 15, scope: !4775)
!4780 = !DILocation(line: 971, column: 9, scope: !4775)
!4781 = !DILocation(line: 971, column: 35, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4775, file: !1, line: 971, column: 4)
!4783 = !DILocation(line: 971, column: 4, scope: !4775)
!4784 = !DILocation(line: 972, column: 10, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4786, file: !1, line: 972, column: 9)
!4786 = distinct !DILexicalBlock(scope: !4782, file: !1, line: 971, column: 63)
!4787 = !DILocation(line: 972, column: 17, scope: !4785)
!4788 = !DILocation(line: 972, column: 30, scope: !4785)
!4789 = !DILocation(line: 972, column: 9, scope: !4786)
!4790 = !DILocation(line: 973, column: 10, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4792, file: !1, line: 973, column: 10)
!4792 = distinct !DILexicalBlock(scope: !4785, file: !1, line: 972, column: 45)
!4793 = !DILocation(line: 973, column: 17, scope: !4791)
!4794 = !DILocation(line: 973, column: 29, scope: !4791)
!4795 = !DILocation(line: 973, column: 26, scope: !4791)
!4796 = !DILocation(line: 973, column: 10, scope: !4792)
!4797 = !DILocation(line: 974, column: 7, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4791, file: !1, line: 973, column: 36)
!4799 = !DILocation(line: 976, column: 5, scope: !4792)
!4800 = !DILocation(line: 977, column: 4, scope: !4786)
!4801 = !DILocation(line: 971, column: 50, scope: !4782)
!4802 = !DILocation(line: 971, column: 57, scope: !4782)
!4803 = !DILocation(line: 971, column: 48, scope: !4782)
!4804 = !DILocation(line: 971, column: 4, scope: !4782)
!4805 = distinct !{!4805, !4783, !4806}
!4806 = !DILocation(line: 977, column: 4, scope: !4775)
!4807 = !DILocation(line: 979, column: 8, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 979, column: 8)
!4809 = !DILocation(line: 979, column: 8, scope: !4776)
!4810 = !DILocation(line: 980, column: 19, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4812, file: !1, line: 980, column: 5)
!4812 = distinct !DILexicalBlock(scope: !4808, file: !1, line: 979, column: 15)
!4813 = !DILocation(line: 980, column: 23, scope: !4811)
!4814 = !DILocation(line: 980, column: 30, scope: !4811)
!4815 = !DILocation(line: 980, column: 17, scope: !4811)
!4816 = !DILocation(line: 980, column: 10, scope: !4811)
!4817 = !DILocation(line: 980, column: 37, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4811, file: !1, line: 980, column: 5)
!4819 = !DILocation(line: 980, column: 5, scope: !4811)
!4820 = !DILocation(line: 981, column: 10, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4822, file: !1, line: 981, column: 10)
!4822 = distinct !DILexicalBlock(scope: !4818, file: !1, line: 980, column: 68)
!4823 = !DILocation(line: 981, column: 18, scope: !4821)
!4824 = !DILocation(line: 981, column: 30, scope: !4821)
!4825 = !DILocation(line: 981, column: 27, scope: !4821)
!4826 = !DILocation(line: 981, column: 10, scope: !4822)
!4827 = !DILocation(line: 982, column: 26, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4821, file: !1, line: 981, column: 37)
!4829 = !DILocation(line: 982, column: 7, scope: !4828)
!4830 = !DILocation(line: 982, column: 15, scope: !4828)
!4831 = !DILocation(line: 982, column: 24, scope: !4828)
!4832 = !DILocation(line: 983, column: 6, scope: !4828)
!4833 = !DILocation(line: 984, column: 5, scope: !4822)
!4834 = !DILocation(line: 980, column: 54, scope: !4818)
!4835 = !DILocation(line: 980, column: 62, scope: !4818)
!4836 = !DILocation(line: 980, column: 52, scope: !4818)
!4837 = !DILocation(line: 980, column: 5, scope: !4818)
!4838 = distinct !{!4838, !4819, !4839}
!4839 = !DILocation(line: 984, column: 5, scope: !4811)
!4840 = !DILocation(line: 985, column: 23, scope: !4812)
!4841 = !DILocation(line: 985, column: 5, scope: !4812)
!4842 = !DILocation(line: 985, column: 12, scope: !4812)
!4843 = !DILocation(line: 985, column: 21, scope: !4812)
!4844 = !DILocation(line: 986, column: 5, scope: !4812)
!4845 = !DILocation(line: 986, column: 12, scope: !4812)
!4846 = !DILocation(line: 986, column: 21, scope: !4812)
!4847 = !DILocation(line: 987, column: 26, scope: !4812)
!4848 = !DILocation(line: 987, column: 5, scope: !4812)
!4849 = !DILocation(line: 988, column: 4, scope: !4812)
!4850 = !DILocation(line: 989, column: 3, scope: !4776)
!4851 = !DILocation(line: 990, column: 2, scope: !4769)
!4852 = !DILocation(line: 968, column: 48, scope: !4765)
!4853 = !DILocation(line: 968, column: 55, scope: !4765)
!4854 = !DILocation(line: 968, column: 46, scope: !4765)
!4855 = !DILocation(line: 968, column: 2, scope: !4765)
!4856 = distinct !{!4856, !4766, !4857}
!4857 = !DILocation(line: 990, column: 2, scope: !4759)
!4858 = !DILocation(line: 993, column: 22, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4706, file: !1, line: 993, column: 6)
!4860 = !DILocation(line: 993, column: 26, scope: !4859)
!4861 = !DILocation(line: 993, column: 6, scope: !4859)
!4862 = !DILocation(line: 993, column: 6, scope: !4706)
!4863 = !DILocation(line: 995, column: 7, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !1, line: 995, column: 7)
!4865 = distinct !DILexicalBlock(scope: !4859, file: !1, line: 993, column: 36)
!4866 = !DILocation(line: 995, column: 7, scope: !4865)
!4867 = !DILocation(line: 996, column: 25, scope: !4864)
!4868 = !DILocation(line: 996, column: 28, scope: !4864)
!4869 = !DILocation(line: 996, column: 4, scope: !4864)
!4870 = !DILocation(line: 998, column: 21, scope: !4864)
!4871 = !DILocation(line: 998, column: 25, scope: !4864)
!4872 = !DILocation(line: 998, column: 4, scope: !4864)
!4873 = !DILocation(line: 999, column: 2, scope: !4865)
!4874 = !DILocation(line: 1002, column: 10, scope: !4706)
!4875 = !DILocation(line: 1003, column: 15, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4706, file: !1, line: 1003, column: 2)
!4877 = !DILocation(line: 1003, column: 19, scope: !4876)
!4878 = !DILocation(line: 1003, column: 28, scope: !4876)
!4879 = !DILocation(line: 1003, column: 13, scope: !4876)
!4880 = !DILocation(line: 1003, column: 7, scope: !4876)
!4881 = !DILocation(line: 1003, column: 35, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4876, file: !1, line: 1003, column: 2)
!4883 = !DILocation(line: 1003, column: 2, scope: !4876)
!4884 = !DILocation(line: 1004, column: 7, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4882, file: !1, line: 1004, column: 7)
!4886 = !DILocation(line: 1004, column: 14, scope: !4885)
!4887 = !DILocation(line: 1004, column: 21, scope: !4885)
!4888 = !DILocation(line: 1004, column: 24, scope: !4885)
!4889 = !DILocation(line: 1004, column: 31, scope: !4885)
!4890 = !DILocation(line: 1004, column: 7, scope: !4882)
!4891 = !DILocation(line: 1005, column: 9, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4885, file: !1, line: 1005, column: 8)
!4893 = !DILocation(line: 1005, column: 17, scope: !4892)
!4894 = !DILocation(line: 1005, column: 20, scope: !4892)
!4895 = !DILocation(line: 1005, column: 27, scope: !4892)
!4896 = !DILocation(line: 1005, column: 34, scope: !4892)
!4897 = !DILocation(line: 1005, column: 46, scope: !4892)
!4898 = !DILocation(line: 1005, column: 55, scope: !4892)
!4899 = !DILocation(line: 1005, column: 44, scope: !4892)
!4900 = !DILocation(line: 1005, column: 8, scope: !4885)
!4901 = !DILocation(line: 1006, column: 15, scope: !4892)
!4902 = !DILocation(line: 1006, column: 22, scope: !4892)
!4903 = !DILocation(line: 1006, column: 13, scope: !4892)
!4904 = !DILocation(line: 1006, column: 5, scope: !4892)
!4905 = !DILocation(line: 1003, column: 50, scope: !4882)
!4906 = !DILocation(line: 1003, column: 57, scope: !4882)
!4907 = !DILocation(line: 1003, column: 48, scope: !4882)
!4908 = !DILocation(line: 1003, column: 2, scope: !4882)
!4909 = distinct !{!4909, !4883, !4910}
!4910 = !DILocation(line: 1006, column: 22, scope: !4876)
!4911 = !DILocation(line: 1008, column: 6, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4706, file: !1, line: 1008, column: 6)
!4913 = !DILocation(line: 1008, column: 6, scope: !4706)
!4914 = !DILocation(line: 1009, column: 3, scope: !4912)
!4915 = !DILocation(line: 1009, column: 12, scope: !4912)
!4916 = !DILocation(line: 1009, column: 25, scope: !4912)
!4917 = !DILocation(line: 1012, column: 17, scope: !4706)
!4918 = !DILocation(line: 1012, column: 21, scope: !4706)
!4919 = !DILocation(line: 1012, column: 25, scope: !4706)
!4920 = !DILocation(line: 1012, column: 28, scope: !4706)
!4921 = !DILocation(line: 1012, column: 2, scope: !4706)
!4922 = !DILocation(line: 1013, column: 1, scope: !4706)
!4923 = distinct !DISubprogram(name: "ui_offset_panel_block", scope: !1, file: !1, line: 364, type: !4924, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{null, !1381}
!4926 = !DILocalVariable(name: "block", arg: 1, scope: !4923, file: !1, line: 364, type: !1381)
!4927 = !DILocation(line: 364, column: 44, scope: !4923)
!4928 = !DILocalVariable(name: "style", scope: !4923, file: !1, line: 366, type: !3894)
!4929 = !DILocation(line: 366, column: 11, scope: !4923)
!4930 = !DILocation(line: 366, column: 19, scope: !4923)
!4931 = !DILocalVariable(name: "but", scope: !4923, file: !1, line: 367, type: !4932)
!4932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4933, size: 64)
!4933 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBut", file: !4, line: 82, baseType: !4934)
!4934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiBut", file: !1384, line: 195, size: 8000, elements: !4935)
!4935 = !{!4936, !4938, !4939, !4940, !4941, !4943, !4945, !4946, !4947, !4948, !4949, !4950, !4951, !4952, !4953, !4954, !4955, !4956, !4960, !4961, !4962, !4963, !4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4972, !4973, !4974, !4982, !4987, !4988, !4996, !4997, !5002, !5003, !5004, !5020, !5021, !5022, !5023, !5025, !5026, !5027, !5029, !5030, !5031, !5032, !5033, !5034, !5039, !5040, !5042, !5043, !5044, !5045, !5046, !5047, !5048, !5049, !5050, !5051, !5054, !5055, !5058, !5059, !5060, !5062, !5063, !5064, !5065}
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4934, file: !1384, line: 196, baseType: !4937, size: 64)
!4937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4934, size: 64)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4934, file: !1384, line: 196, baseType: !4937, size: 64, offset: 64)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4934, file: !1384, line: 197, baseType: !1420, size: 32, offset: 128)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !4934, file: !1384, line: 197, baseType: !1420, size: 32, offset: 160)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4934, file: !1384, line: 198, baseType: !4942, size: 32, offset: 192)
!4942 = !DIDerivedType(tag: DW_TAG_typedef, name: "eButType", file: !4, line: 282, baseType: !1090)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "pointype", scope: !4934, file: !1384, line: 199, baseType: !4944, size: 32, offset: 224)
!4944 = !DIDerivedType(tag: DW_TAG_typedef, name: "eButPointerType", file: !4, line: 230, baseType: !1136)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !4934, file: !1384, line: 200, baseType: !1488, size: 16, offset: 256)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "bitnr", scope: !4934, file: !1384, line: 200, baseType: !1488, size: 16, offset: 272)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !4934, file: !1384, line: 200, baseType: !1488, size: 16, offset: 288)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "strwidth", scope: !4934, file: !1384, line: 200, baseType: !1488, size: 16, offset: 304)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "alignnr", scope: !4934, file: !1384, line: 200, baseType: !1488, size: 16, offset: 320)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !4934, file: !1384, line: 201, baseType: !1488, size: 16, offset: 336)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4934, file: !1384, line: 201, baseType: !1488, size: 16, offset: 352)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "selsta", scope: !4934, file: !1384, line: 201, baseType: !1488, size: 16, offset: 368)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !4934, file: !1384, line: 201, baseType: !1488, size: 16, offset: 384)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4934, file: !1384, line: 203, baseType: !1861, size: 64, offset: 448)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "strdata", scope: !4934, file: !1384, line: 204, baseType: !1503, size: 1024, offset: 512)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "drawstr", scope: !4934, file: !1384, line: 205, baseType: !4957, size: 3200, offset: 1536)
!4957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 3200, elements: !4958)
!4958 = !{!4959}
!4959 = !DISubrange(count: 400)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !4934, file: !1384, line: 207, baseType: !1511, size: 128, offset: 4736)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !4934, file: !1384, line: 209, baseType: !1861, size: 64, offset: 4864)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "hardmin", scope: !4934, file: !1384, line: 210, baseType: !1380, size: 32, offset: 4928)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "hardmax", scope: !4934, file: !1384, line: 210, baseType: !1380, size: 32, offset: 4960)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "softmin", scope: !4934, file: !1384, line: 210, baseType: !1380, size: 32, offset: 4992)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "softmax", scope: !4934, file: !1384, line: 210, baseType: !1380, size: 32, offset: 5024)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !4934, file: !1384, line: 222, baseType: !1380, size: 32, offset: 5056)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !4934, file: !1384, line: 230, baseType: !1380, size: 32, offset: 5088)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !4934, file: !1384, line: 232, baseType: !2322, size: 32, offset: 5120)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4934, file: !1384, line: 234, baseType: !1522, size: 64, offset: 5184)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg1", scope: !4934, file: !1384, line: 235, baseType: !1379, size: 64, offset: 5248)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "func_arg2", scope: !4934, file: !1384, line: 236, baseType: !1379, size: 64, offset: 5312)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "funcN", scope: !4934, file: !1384, line: 238, baseType: !1529, size: 64, offset: 5376)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "func_argN", scope: !4934, file: !1384, line: 239, baseType: !1379, size: 64, offset: 5440)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4934, file: !1384, line: 241, baseType: !4975, size: 64, offset: 5504)
!4975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4976, size: 64)
!4976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bContextStore", file: !2268, line: 84, size: 320, elements: !4977)
!4977 = !{!4978, !4979, !4980, !4981}
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4976, file: !2268, line: 85, baseType: !4975, size: 64)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4976, file: !2268, line: 85, baseType: !4975, size: 64, offset: 64)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !4976, file: !2268, line: 87, baseType: !1389, size: 128, offset: 128)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4976, file: !2268, line: 88, baseType: !1615, size: 8, offset: 256)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "autocomplete_func", scope: !4934, file: !1384, line: 243, baseType: !4983, size: 64, offset: 5568)
!4983 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButCompleteFunc", file: !4, line: 339, baseType: !4984)
!4984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4985, size: 64)
!4985 = !DISubroutineType(types: !4986)
!4986 = !{!1420, !1450, !1861, !1379}
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "autofunc_arg", scope: !4934, file: !1384, line: 244, baseType: !1379, size: 64, offset: 5632)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "search_func", scope: !4934, file: !1384, line: 246, baseType: !4989, size: 64, offset: 5696)
!4989 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButSearchFunc", file: !4, line: 340, baseType: !4990)
!4990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4991, size: 64)
!4991 = !DISubroutineType(types: !4992)
!4992 = !{null, !1427, !1379, !1582, !4993}
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4994, size: 64)
!4994 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiSearchItems", file: !4, line: 334, baseType: !4995)
!4995 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiSearchItems", file: !4, line: 334, flags: DIFlagFwdDecl)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "search_arg", scope: !4934, file: !1384, line: 247, baseType: !1379, size: 64, offset: 5760)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "rename_func", scope: !4934, file: !1384, line: 249, baseType: !4998, size: 64, offset: 5824)
!4998 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiButHandleRenameFunc", file: !4, line: 337, baseType: !4999)
!4999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5000, size: 64)
!5000 = !DISubroutineType(types: !5001)
!5001 = !{null, !1450, !1379, !1861}
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "rename_arg1", scope: !4934, file: !1384, line: 250, baseType: !1379, size: 64, offset: 5888)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "rename_orig", scope: !4934, file: !1384, line: 251, baseType: !1379, size: 64, offset: 5952)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4934, file: !1384, line: 253, baseType: !5005, size: 64, offset: 6016)
!5005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5006, size: 64)
!5006 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLink", file: !1384, line: 193, baseType: !5007)
!5007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1384, line: 184, size: 384, elements: !5008)
!5008 = !{!5009, !5011, !5013, !5015, !5016, !5017, !5018, !5019}
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !5007, file: !1384, line: 185, baseType: !5010, size: 64)
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "ppoin", scope: !5007, file: !1384, line: 186, baseType: !5012, size: 64, offset: 64)
!5012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5010, size: 64)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "totlink", scope: !5007, file: !1384, line: 187, baseType: !5014, size: 64, offset: 128)
!5014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "maxlink", scope: !5007, file: !1384, line: 189, baseType: !1488, size: 16, offset: 192)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5007, file: !1384, line: 189, baseType: !1488, size: 16, offset: 208)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "fromcode", scope: !5007, file: !1384, line: 190, baseType: !1488, size: 16, offset: 224)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "tocode", scope: !5007, file: !1384, line: 190, baseType: !1488, size: 16, offset: 240)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !5007, file: !1384, line: 192, baseType: !1389, size: 128, offset: 256)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "linkto", scope: !4934, file: !1384, line: 254, baseType: !2200, size: 32, offset: 6080)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "tip", scope: !4934, file: !1384, line: 256, baseType: !1582, size: 64, offset: 6144)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "lockstr", scope: !4934, file: !1384, line: 256, baseType: !1582, size: 64, offset: 6208)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !4934, file: !1384, line: 258, baseType: !5024, size: 32, offset: 6272)
!5024 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIFIconID", file: !31, line: 44, baseType: !226)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4934, file: !1384, line: 259, baseType: !1615, size: 8, offset: 6304)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !4934, file: !1384, line: 260, baseType: !1412, size: 8, offset: 6312)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "pie_dir", scope: !4934, file: !1384, line: 261, baseType: !5028, size: 8, offset: 6320)
!5028 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4934, file: !1384, line: 262, baseType: !1412, size: 8, offset: 6328)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "unit_type", scope: !4934, file: !1384, line: 263, baseType: !1615, size: 8, offset: 6336)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "modifier_key", scope: !4934, file: !1384, line: 264, baseType: !1488, size: 16, offset: 6352)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "iconadd", scope: !4934, file: !1384, line: 265, baseType: !1488, size: 16, offset: 6368)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "block_create_func", scope: !4934, file: !1384, line: 268, baseType: !3239, size: 64, offset: 6400)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "menu_create_func", scope: !4934, file: !1384, line: 271, baseType: !5035, size: 64, offset: 6464)
!5035 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiMenuCreateFunc", file: !4, line: 345, baseType: !5036)
!5036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5037, size: 64)
!5037 = !DISubroutineType(types: !5038)
!5038 = !{null, !1450, !1478, !1379}
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "rnapoin", scope: !4934, file: !1384, line: 274, baseType: !1452, size: 192, offset: 6528)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "rnaprop", scope: !4934, file: !1384, line: 275, baseType: !5041, size: 64, offset: 6720)
!5041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "rnaindex", scope: !4934, file: !1384, line: 276, baseType: !1420, size: 32, offset: 6784)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "rnasearchpoin", scope: !4934, file: !1384, line: 278, baseType: !1452, size: 192, offset: 6848)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "rnasearchprop", scope: !4934, file: !1384, line: 279, baseType: !5041, size: 64, offset: 7040)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "optype", scope: !4934, file: !1384, line: 282, baseType: !3261, size: 64, offset: 7104)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "opptr", scope: !4934, file: !1384, line: 283, baseType: !1451, size: 64, offset: 7168)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !4934, file: !1384, line: 284, baseType: !1488, size: 16, offset: 7232)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "menu_key", scope: !4934, file: !1384, line: 285, baseType: !1615, size: 8, offset: 7248)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "dragtype", scope: !4934, file: !1384, line: 288, baseType: !1412, size: 8, offset: 7256)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "dragpoin", scope: !4934, file: !1384, line: 289, baseType: !1379, size: 64, offset: 7296)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "imb", scope: !4934, file: !1384, line: 290, baseType: !5052, size: 64, offset: 7360)
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5053, size: 64)
!5053 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1980, line: 136, flags: DIFlagFwdDecl)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "imb_scale", scope: !4934, file: !1384, line: 291, baseType: !1380, size: 32, offset: 7424)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4934, file: !1384, line: 294, baseType: !5056, size: 64, offset: 7488)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5057, size: 64)
!5057 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiHandleButtonData", file: !1384, line: 43, flags: DIFlagFwdDecl)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "custom_data", scope: !4934, file: !1384, line: 297, baseType: !1379, size: 64, offset: 7552)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "editstr", scope: !4934, file: !1384, line: 299, baseType: !1861, size: 64, offset: 7616)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "editval", scope: !4934, file: !1384, line: 300, baseType: !5061, size: 64, offset: 7680)
!5061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "editvec", scope: !4934, file: !1384, line: 301, baseType: !1673, size: 64, offset: 7744)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "editcoba", scope: !4934, file: !1384, line: 302, baseType: !1379, size: 64, offset: 7808)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "editcumap", scope: !4934, file: !1384, line: 303, baseType: !1379, size: 64, offset: 7872)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4934, file: !1384, line: 306, baseType: !1381, size: 64, offset: 7936)
!5066 = !DILocation(line: 367, column: 9, scope: !4923)
!5067 = !DILocalVariable(name: "ofsy", scope: !4923, file: !1, line: 368, type: !1420)
!5068 = !DILocation(line: 368, column: 6, scope: !4923)
!5069 = !DILocation(line: 371, column: 18, scope: !4923)
!5070 = !DILocation(line: 371, column: 2, scope: !4923)
!5071 = !DILocation(line: 373, column: 9, scope: !4923)
!5072 = !DILocation(line: 373, column: 16, scope: !4923)
!5073 = !DILocation(line: 373, column: 23, scope: !4923)
!5074 = !DILocation(line: 373, column: 31, scope: !4923)
!5075 = !DILocation(line: 373, column: 38, scope: !4923)
!5076 = !DILocation(line: 373, column: 29, scope: !4923)
!5077 = !DILocation(line: 373, column: 7, scope: !4923)
!5078 = !DILocation(line: 375, column: 13, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !4923, file: !1, line: 375, column: 2)
!5080 = !DILocation(line: 375, column: 20, scope: !5079)
!5081 = !DILocation(line: 375, column: 28, scope: !5079)
!5082 = !DILocation(line: 375, column: 11, scope: !5079)
!5083 = !DILocation(line: 375, column: 7, scope: !5079)
!5084 = !DILocation(line: 375, column: 35, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5079, file: !1, line: 375, column: 2)
!5086 = !DILocation(line: 375, column: 2, scope: !5079)
!5087 = !DILocation(line: 376, column: 21, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5085, file: !1, line: 375, column: 57)
!5089 = !DILocation(line: 376, column: 3, scope: !5088)
!5090 = !DILocation(line: 376, column: 8, scope: !5088)
!5091 = !DILocation(line: 376, column: 13, scope: !5088)
!5092 = !DILocation(line: 376, column: 18, scope: !5088)
!5093 = !DILocation(line: 377, column: 21, scope: !5088)
!5094 = !DILocation(line: 377, column: 3, scope: !5088)
!5095 = !DILocation(line: 377, column: 8, scope: !5088)
!5096 = !DILocation(line: 377, column: 13, scope: !5088)
!5097 = !DILocation(line: 377, column: 18, scope: !5088)
!5098 = !DILocation(line: 378, column: 2, scope: !5088)
!5099 = !DILocation(line: 375, column: 46, scope: !5085)
!5100 = !DILocation(line: 375, column: 51, scope: !5085)
!5101 = !DILocation(line: 375, column: 44, scope: !5085)
!5102 = !DILocation(line: 375, column: 2, scope: !5085)
!5103 = distinct !{!5103, !5086, !5104}
!5104 = !DILocation(line: 378, column: 2, scope: !5079)
!5105 = !DILocation(line: 380, column: 21, scope: !4923)
!5106 = !DILocation(line: 380, column: 28, scope: !4923)
!5107 = !DILocation(line: 380, column: 35, scope: !4923)
!5108 = !DILocation(line: 380, column: 2, scope: !4923)
!5109 = !DILocation(line: 380, column: 9, scope: !4923)
!5110 = !DILocation(line: 380, column: 14, scope: !4923)
!5111 = !DILocation(line: 380, column: 19, scope: !4923)
!5112 = !DILocation(line: 381, column: 21, scope: !4923)
!5113 = !DILocation(line: 381, column: 28, scope: !4923)
!5114 = !DILocation(line: 381, column: 35, scope: !4923)
!5115 = !DILocation(line: 381, column: 2, scope: !4923)
!5116 = !DILocation(line: 381, column: 9, scope: !4923)
!5117 = !DILocation(line: 381, column: 14, scope: !4923)
!5118 = !DILocation(line: 381, column: 19, scope: !4923)
!5119 = !DILocation(line: 382, column: 21, scope: !4923)
!5120 = !DILocation(line: 382, column: 28, scope: !4923)
!5121 = !DILocation(line: 382, column: 33, scope: !4923)
!5122 = !DILocation(line: 382, column: 38, scope: !4923)
!5123 = !DILocation(line: 382, column: 2, scope: !4923)
!5124 = !DILocation(line: 382, column: 9, scope: !4923)
!5125 = !DILocation(line: 382, column: 14, scope: !4923)
!5126 = !DILocation(line: 382, column: 19, scope: !4923)
!5127 = !DILocation(line: 383, column: 1, scope: !4923)
!5128 = distinct !DISubprogram(name: "panels_re_align", scope: !1, file: !1, line: 129, type: !5129, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!1420, !3338, !3252, !5131}
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!5132 = !DILocalVariable(name: "sa", arg: 1, scope: !5128, file: !1, line: 129, type: !3338)
!5133 = !DILocation(line: 129, column: 37, scope: !5128)
!5134 = !DILocalVariable(name: "ar", arg: 2, scope: !5128, file: !1, line: 129, type: !3252)
!5135 = !DILocation(line: 129, column: 50, scope: !5128)
!5136 = !DILocalVariable(name: "r_pa", arg: 3, scope: !5128, file: !1, line: 129, type: !5131)
!5137 = !DILocation(line: 129, column: 62, scope: !5128)
!5138 = !DILocalVariable(name: "pa", scope: !5128, file: !1, line: 131, type: !1396)
!5139 = !DILocation(line: 131, column: 9, scope: !5128)
!5140 = !DILocalVariable(name: "active", scope: !5128, file: !1, line: 132, type: !1420)
!5141 = !DILocation(line: 132, column: 6, scope: !5128)
!5142 = !DILocation(line: 134, column: 3, scope: !5128)
!5143 = !DILocation(line: 134, column: 8, scope: !5128)
!5144 = !DILocation(line: 136, column: 6, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5128, file: !1, line: 136, column: 6)
!5146 = !DILocation(line: 136, column: 10, scope: !5145)
!5147 = !DILocation(line: 136, column: 20, scope: !5145)
!5148 = !DILocation(line: 136, column: 34, scope: !5145)
!5149 = !DILocation(line: 136, column: 37, scope: !5145)
!5150 = !DILocation(line: 136, column: 41, scope: !5145)
!5151 = !DILocation(line: 136, column: 52, scope: !5145)
!5152 = !DILocation(line: 136, column: 6, scope: !5128)
!5153 = !DILocalVariable(name: "sbuts", scope: !5154, file: !1, line: 137, type: !3658)
!5154 = distinct !DILexicalBlock(scope: !5145, file: !1, line: 136, column: 72)
!5155 = !DILocation(line: 137, column: 14, scope: !5154)
!5156 = !DILocation(line: 137, column: 22, scope: !5154)
!5157 = !DILocation(line: 137, column: 26, scope: !5154)
!5158 = !DILocation(line: 137, column: 36, scope: !5154)
!5159 = !DILocation(line: 139, column: 7, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5154, file: !1, line: 139, column: 7)
!5161 = !DILocation(line: 139, column: 14, scope: !5160)
!5162 = !DILocation(line: 139, column: 7, scope: !5154)
!5163 = !DILocation(line: 140, column: 8, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5160, file: !1, line: 140, column: 8)
!5165 = !DILocation(line: 140, column: 15, scope: !5164)
!5166 = !DILocation(line: 140, column: 24, scope: !5164)
!5167 = !DILocation(line: 140, column: 27, scope: !5164)
!5168 = !DILocation(line: 140, column: 34, scope: !5164)
!5169 = !DILocation(line: 140, column: 44, scope: !5164)
!5170 = !DILocation(line: 140, column: 51, scope: !5164)
!5171 = !DILocation(line: 140, column: 41, scope: !5164)
!5172 = !DILocation(line: 140, column: 8, scope: !5160)
!5173 = !DILocation(line: 141, column: 5, scope: !5164)
!5174 = !DILocation(line: 142, column: 2, scope: !5154)
!5175 = !DILocation(line: 143, column: 11, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5145, file: !1, line: 143, column: 11)
!5177 = !DILocation(line: 143, column: 15, scope: !5176)
!5178 = !DILocation(line: 143, column: 25, scope: !5176)
!5179 = !DILocation(line: 143, column: 40, scope: !5176)
!5180 = !DILocation(line: 143, column: 43, scope: !5176)
!5181 = !DILocation(line: 143, column: 47, scope: !5176)
!5182 = !DILocation(line: 143, column: 58, scope: !5176)
!5183 = !DILocation(line: 143, column: 11, scope: !5145)
!5184 = !DILocation(line: 144, column: 3, scope: !5176)
!5185 = !DILocation(line: 145, column: 11, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5176, file: !1, line: 145, column: 11)
!5187 = !DILocation(line: 145, column: 15, scope: !5186)
!5188 = !DILocation(line: 145, column: 25, scope: !5186)
!5189 = !DILocation(line: 145, column: 39, scope: !5186)
!5190 = !DILocation(line: 145, column: 42, scope: !5186)
!5191 = !DILocation(line: 145, column: 46, scope: !5186)
!5192 = !DILocation(line: 145, column: 57, scope: !5186)
!5193 = !DILocation(line: 145, column: 11, scope: !5176)
!5194 = !DILocation(line: 146, column: 3, scope: !5186)
!5195 = !DILocation(line: 149, column: 12, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5128, file: !1, line: 149, column: 2)
!5197 = !DILocation(line: 149, column: 16, scope: !5196)
!5198 = !DILocation(line: 149, column: 23, scope: !5196)
!5199 = !DILocation(line: 149, column: 10, scope: !5196)
!5200 = !DILocation(line: 149, column: 7, scope: !5196)
!5201 = !DILocation(line: 149, column: 30, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5196, file: !1, line: 149, column: 2)
!5203 = !DILocation(line: 149, column: 2, scope: !5196)
!5204 = !DILocation(line: 150, column: 8, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5206, file: !1, line: 150, column: 7)
!5206 = distinct !DILexicalBlock(scope: !5202, file: !1, line: 149, column: 49)
!5207 = !DILocation(line: 150, column: 12, scope: !5205)
!5208 = !DILocation(line: 150, column: 25, scope: !5205)
!5209 = !DILocation(line: 150, column: 43, scope: !5205)
!5210 = !DILocation(line: 150, column: 48, scope: !5205)
!5211 = !DILocation(line: 150, column: 52, scope: !5205)
!5212 = !DILocation(line: 150, column: 65, scope: !5205)
!5213 = !DILocation(line: 150, column: 7, scope: !5206)
!5214 = !DILocation(line: 151, column: 4, scope: !5205)
!5215 = !DILocation(line: 152, column: 9, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5206, file: !1, line: 152, column: 7)
!5217 = !DILocation(line: 152, column: 13, scope: !5216)
!5218 = !DILocation(line: 152, column: 26, scope: !5216)
!5219 = !DILocation(line: 152, column: 44, scope: !5216)
!5220 = !DILocation(line: 152, column: 48, scope: !5216)
!5221 = !DILocation(line: 152, column: 52, scope: !5216)
!5222 = !DILocation(line: 152, column: 65, scope: !5216)
!5223 = !DILocation(line: 152, column: 7, scope: !5206)
!5224 = !DILocation(line: 153, column: 4, scope: !5216)
!5225 = !DILocation(line: 154, column: 7, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5206, file: !1, line: 154, column: 7)
!5227 = !DILocation(line: 154, column: 11, scope: !5226)
!5228 = !DILocation(line: 154, column: 7, scope: !5206)
!5229 = !DILocation(line: 155, column: 11, scope: !5226)
!5230 = !DILocation(line: 155, column: 4, scope: !5226)
!5231 = !DILocation(line: 156, column: 2, scope: !5206)
!5232 = !DILocation(line: 149, column: 39, scope: !5202)
!5233 = !DILocation(line: 149, column: 43, scope: !5202)
!5234 = !DILocation(line: 149, column: 37, scope: !5202)
!5235 = !DILocation(line: 149, column: 2, scope: !5202)
!5236 = distinct !{!5236, !5203, !5237}
!5237 = !DILocation(line: 156, column: 2, scope: !5196)
!5238 = !DILocation(line: 159, column: 12, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5128, file: !1, line: 159, column: 2)
!5240 = !DILocation(line: 159, column: 16, scope: !5239)
!5241 = !DILocation(line: 159, column: 23, scope: !5239)
!5242 = !DILocation(line: 159, column: 10, scope: !5239)
!5243 = !DILocation(line: 159, column: 7, scope: !5239)
!5244 = !DILocation(line: 159, column: 30, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5239, file: !1, line: 159, column: 2)
!5246 = !DILocation(line: 159, column: 2, scope: !5239)
!5247 = !DILocation(line: 160, column: 7, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5249, file: !1, line: 160, column: 7)
!5249 = distinct !DILexicalBlock(scope: !5245, file: !1, line: 159, column: 49)
!5250 = !DILocation(line: 160, column: 11, scope: !5248)
!5251 = !DILocation(line: 160, column: 24, scope: !5248)
!5252 = !DILocation(line: 160, column: 7, scope: !5249)
!5253 = !DILocation(line: 161, column: 9, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5255, file: !1, line: 161, column: 8)
!5255 = distinct !DILexicalBlock(scope: !5248, file: !1, line: 160, column: 42)
!5256 = !DILocation(line: 161, column: 8, scope: !5255)
!5257 = !DILocation(line: 162, column: 13, scope: !5254)
!5258 = !DILocation(line: 162, column: 6, scope: !5254)
!5259 = !DILocation(line: 162, column: 11, scope: !5254)
!5260 = !DILocation(line: 162, column: 5, scope: !5254)
!5261 = !DILocation(line: 163, column: 4, scope: !5255)
!5262 = !DILocation(line: 165, column: 2, scope: !5249)
!5263 = !DILocation(line: 159, column: 39, scope: !5245)
!5264 = !DILocation(line: 159, column: 43, scope: !5245)
!5265 = !DILocation(line: 159, column: 37, scope: !5245)
!5266 = !DILocation(line: 159, column: 2, scope: !5245)
!5267 = distinct !{!5267, !5246, !5268}
!5268 = !DILocation(line: 165, column: 2, scope: !5239)
!5269 = !DILocation(line: 167, column: 2, scope: !5128)
!5270 = !DILocation(line: 168, column: 1, scope: !5128)
!5271 = distinct !DISubprogram(name: "panel_activate_state", scope: !1, file: !1, line: 1900, type: !5272, scopeLine: 1901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!5272 = !DISubroutineType(types: !5273)
!5273 = !{null, !4668, !1396, !5274}
!5274 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiHandlePanelState", file: !1, line: 91, baseType: !1083)
!5275 = !DILocalVariable(name: "C", arg: 1, scope: !5271, file: !1, line: 1900, type: !4668)
!5276 = !DILocation(line: 1900, column: 50, scope: !5271)
!5277 = !DILocalVariable(name: "pa", arg: 2, scope: !5271, file: !1, line: 1900, type: !1396)
!5278 = !DILocation(line: 1900, column: 60, scope: !5271)
!5279 = !DILocalVariable(name: "state", arg: 3, scope: !5271, file: !1, line: 1900, type: !5274)
!5280 = !DILocation(line: 1900, column: 83, scope: !5271)
!5281 = !DILocalVariable(name: "data", scope: !5271, file: !1, line: 1902, type: !5282)
!5282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5283, size: 64)
!5283 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiHandlePanelData", file: !1, line: 104, baseType: !5284)
!5284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiHandlePanelData", file: !1, line: 93, size: 384, elements: !5285)
!5285 = !{!5286, !5287, !5290, !5291, !5292, !5293, !5294, !5295, !5296}
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5284, file: !1, line: 94, baseType: !5274, size: 32)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !5284, file: !1, line: 97, baseType: !5288, size: 64, offset: 64)
!5288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5289, size: 64)
!5289 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmTimer", file: !1548, line: 506, baseType: !1681)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "starttime", scope: !5284, file: !1, line: 98, baseType: !1572, size: 64, offset: 128)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "startx", scope: !5284, file: !1, line: 101, baseType: !1420, size: 32, offset: 192)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "starty", scope: !5284, file: !1, line: 101, baseType: !1420, size: 32, offset: 224)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "startofsx", scope: !5284, file: !1, line: 102, baseType: !1420, size: 32, offset: 256)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "startofsy", scope: !5284, file: !1, line: 102, baseType: !1420, size: 32, offset: 288)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "startsizex", scope: !5284, file: !1, line: 103, baseType: !1420, size: 32, offset: 320)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "startsizey", scope: !5284, file: !1, line: 103, baseType: !1420, size: 32, offset: 352)
!5297 = !DILocation(line: 1902, column: 21, scope: !5271)
!5298 = !DILocation(line: 1902, column: 28, scope: !5271)
!5299 = !DILocation(line: 1902, column: 32, scope: !5271)
!5300 = !DILocalVariable(name: "win", scope: !5271, file: !1, line: 1903, type: !5301)
!5301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5302, size: 64)
!5302 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !1688, line: 209, baseType: !1687)
!5303 = !DILocation(line: 1903, column: 12, scope: !5271)
!5304 = !DILocation(line: 1903, column: 32, scope: !5271)
!5305 = !DILocation(line: 1903, column: 18, scope: !5271)
!5306 = !DILocalVariable(name: "ar", scope: !5271, file: !1, line: 1904, type: !3252)
!5307 = !DILocation(line: 1904, column: 11, scope: !5271)
!5308 = !DILocation(line: 1904, column: 30, scope: !5271)
!5309 = !DILocation(line: 1904, column: 16, scope: !5271)
!5310 = !DILocation(line: 1906, column: 6, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5271, file: !1, line: 1906, column: 6)
!5312 = !DILocation(line: 1906, column: 11, scope: !5311)
!5313 = !DILocation(line: 1906, column: 14, scope: !5311)
!5314 = !DILocation(line: 1906, column: 20, scope: !5311)
!5315 = !DILocation(line: 1906, column: 29, scope: !5311)
!5316 = !DILocation(line: 1906, column: 26, scope: !5311)
!5317 = !DILocation(line: 1906, column: 6, scope: !5271)
!5318 = !DILocation(line: 1907, column: 3, scope: !5311)
!5319 = !DILocation(line: 1909, column: 6, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5271, file: !1, line: 1909, column: 6)
!5321 = !DILocation(line: 1909, column: 12, scope: !5320)
!5322 = !DILocation(line: 1909, column: 32, scope: !5320)
!5323 = !DILocation(line: 1909, column: 35, scope: !5320)
!5324 = !DILocation(line: 1909, column: 41, scope: !5320)
!5325 = !DILocation(line: 1909, column: 6, scope: !5271)
!5326 = !DILocation(line: 1910, column: 7, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5328, file: !1, line: 1910, column: 7)
!5328 = distinct !DILexicalBlock(scope: !5320, file: !1, line: 1909, column: 67)
!5329 = !DILocation(line: 1910, column: 12, scope: !5327)
!5330 = !DILocation(line: 1910, column: 15, scope: !5327)
!5331 = !DILocation(line: 1910, column: 21, scope: !5327)
!5332 = !DILocation(line: 1910, column: 27, scope: !5327)
!5333 = !DILocation(line: 1910, column: 7, scope: !5328)
!5334 = !DILocation(line: 1918, column: 24, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5327, file: !1, line: 1910, column: 53)
!5336 = !DILocation(line: 1918, column: 4, scope: !5335)
!5337 = !DILocation(line: 1919, column: 3, scope: !5335)
!5338 = !DILocation(line: 1921, column: 3, scope: !5328)
!5339 = !DILocation(line: 1921, column: 7, scope: !5328)
!5340 = !DILocation(line: 1921, column: 12, scope: !5328)
!5341 = !DILocation(line: 1922, column: 2, scope: !5328)
!5342 = !DILocation(line: 1924, column: 3, scope: !5320)
!5343 = !DILocation(line: 1924, column: 7, scope: !5320)
!5344 = !DILocation(line: 1924, column: 12, scope: !5320)
!5345 = !DILocation(line: 1926, column: 6, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5271, file: !1, line: 1926, column: 6)
!5347 = !DILocation(line: 1926, column: 11, scope: !5346)
!5348 = !DILocation(line: 1926, column: 14, scope: !5346)
!5349 = !DILocation(line: 1926, column: 20, scope: !5346)
!5350 = !DILocation(line: 1926, column: 6, scope: !5271)
!5351 = !DILocation(line: 1927, column: 40, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5346, file: !1, line: 1926, column: 31)
!5353 = !DILocation(line: 1927, column: 25, scope: !5352)
!5354 = !DILocation(line: 1927, column: 44, scope: !5352)
!5355 = !DILocation(line: 1927, column: 49, scope: !5352)
!5356 = !DILocation(line: 1927, column: 55, scope: !5352)
!5357 = !DILocation(line: 1927, column: 3, scope: !5352)
!5358 = !DILocation(line: 1928, column: 3, scope: !5352)
!5359 = !DILocation(line: 1928, column: 9, scope: !5352)
!5360 = !DILocation(line: 1928, column: 19, scope: !5352)
!5361 = !DILocation(line: 1929, column: 2, scope: !5352)
!5362 = !DILocation(line: 1931, column: 6, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5271, file: !1, line: 1931, column: 6)
!5364 = !DILocation(line: 1931, column: 12, scope: !5363)
!5365 = !DILocation(line: 1931, column: 6, scope: !5271)
!5366 = !DILocation(line: 1932, column: 3, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5363, file: !1, line: 1931, column: 33)
!5368 = !DILocation(line: 1932, column: 13, scope: !5367)
!5369 = !DILocation(line: 1933, column: 3, scope: !5367)
!5370 = !DILocation(line: 1933, column: 7, scope: !5367)
!5371 = !DILocation(line: 1933, column: 18, scope: !5367)
!5372 = !DILocation(line: 1935, column: 31, scope: !5367)
!5373 = !DILocation(line: 1935, column: 36, scope: !5367)
!5374 = !DILocation(line: 1935, column: 94, scope: !5367)
!5375 = !DILocation(line: 1935, column: 3, scope: !5367)
!5376 = !DILocation(line: 1936, column: 2, scope: !5367)
!5377 = !DILocation(line: 1938, column: 8, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5379, file: !1, line: 1938, column: 7)
!5379 = distinct !DILexicalBlock(scope: !5363, file: !1, line: 1937, column: 7)
!5380 = !DILocation(line: 1938, column: 7, scope: !5379)
!5381 = !DILocation(line: 1939, column: 11, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5378, file: !1, line: 1938, column: 14)
!5383 = !DILocation(line: 1939, column: 9, scope: !5382)
!5384 = !DILocation(line: 1940, column: 21, scope: !5382)
!5385 = !DILocation(line: 1940, column: 4, scope: !5382)
!5386 = !DILocation(line: 1940, column: 8, scope: !5382)
!5387 = !DILocation(line: 1940, column: 19, scope: !5382)
!5388 = !DILocation(line: 1942, column: 28, scope: !5382)
!5389 = !DILocation(line: 1942, column: 32, scope: !5382)
!5390 = !DILocation(line: 1942, column: 37, scope: !5382)
!5391 = !DILocation(line: 1942, column: 95, scope: !5382)
!5392 = !DILocation(line: 1942, column: 4, scope: !5382)
!5393 = !DILocation(line: 1943, column: 3, scope: !5382)
!5394 = !DILocation(line: 1945, column: 7, scope: !5395)
!5395 = distinct !DILexicalBlock(scope: !5379, file: !1, line: 1945, column: 7)
!5396 = !DILocation(line: 1945, column: 7, scope: !5379)
!5397 = !DILocation(line: 1946, column: 56, scope: !5395)
!5398 = !DILocation(line: 1946, column: 41, scope: !5395)
!5399 = !DILocation(line: 1946, column: 60, scope: !5395)
!5400 = !DILocation(line: 1946, column: 22, scope: !5395)
!5401 = !DILocation(line: 1946, column: 4, scope: !5395)
!5402 = !DILocation(line: 1946, column: 10, scope: !5395)
!5403 = !DILocation(line: 1946, column: 20, scope: !5395)
!5404 = !DILocation(line: 1948, column: 17, scope: !5379)
!5405 = !DILocation(line: 1948, column: 3, scope: !5379)
!5406 = !DILocation(line: 1948, column: 9, scope: !5379)
!5407 = !DILocation(line: 1948, column: 15, scope: !5379)
!5408 = !DILocation(line: 1949, column: 18, scope: !5379)
!5409 = !DILocation(line: 1949, column: 23, scope: !5379)
!5410 = !DILocation(line: 1949, column: 35, scope: !5379)
!5411 = !DILocation(line: 1949, column: 3, scope: !5379)
!5412 = !DILocation(line: 1949, column: 9, scope: !5379)
!5413 = !DILocation(line: 1949, column: 16, scope: !5379)
!5414 = !DILocation(line: 1950, column: 18, scope: !5379)
!5415 = !DILocation(line: 1950, column: 23, scope: !5379)
!5416 = !DILocation(line: 1950, column: 35, scope: !5379)
!5417 = !DILocation(line: 1950, column: 3, scope: !5379)
!5418 = !DILocation(line: 1950, column: 9, scope: !5379)
!5419 = !DILocation(line: 1950, column: 16, scope: !5379)
!5420 = !DILocation(line: 1951, column: 21, scope: !5379)
!5421 = !DILocation(line: 1951, column: 25, scope: !5379)
!5422 = !DILocation(line: 1951, column: 3, scope: !5379)
!5423 = !DILocation(line: 1951, column: 9, scope: !5379)
!5424 = !DILocation(line: 1951, column: 19, scope: !5379)
!5425 = !DILocation(line: 1952, column: 21, scope: !5379)
!5426 = !DILocation(line: 1952, column: 25, scope: !5379)
!5427 = !DILocation(line: 1952, column: 3, scope: !5379)
!5428 = !DILocation(line: 1952, column: 9, scope: !5379)
!5429 = !DILocation(line: 1952, column: 19, scope: !5379)
!5430 = !DILocation(line: 1953, column: 22, scope: !5379)
!5431 = !DILocation(line: 1953, column: 26, scope: !5379)
!5432 = !DILocation(line: 1953, column: 3, scope: !5379)
!5433 = !DILocation(line: 1953, column: 9, scope: !5379)
!5434 = !DILocation(line: 1953, column: 20, scope: !5379)
!5435 = !DILocation(line: 1954, column: 22, scope: !5379)
!5436 = !DILocation(line: 1954, column: 26, scope: !5379)
!5437 = !DILocation(line: 1954, column: 3, scope: !5379)
!5438 = !DILocation(line: 1954, column: 9, scope: !5379)
!5439 = !DILocation(line: 1954, column: 20, scope: !5379)
!5440 = !DILocation(line: 1955, column: 21, scope: !5379)
!5441 = !DILocation(line: 1955, column: 3, scope: !5379)
!5442 = !DILocation(line: 1955, column: 9, scope: !5379)
!5443 = !DILocation(line: 1955, column: 19, scope: !5379)
!5444 = !DILocation(line: 1958, column: 23, scope: !5271)
!5445 = !DILocation(line: 1958, column: 2, scope: !5271)
!5446 = !DILocation(line: 1959, column: 1, scope: !5271)
!5447 = distinct !DISubprogram(name: "uiAlignPanelStep", scope: !1, file: !1, line: 779, type: !5448, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!5448 = !DISubroutineType(types: !5449)
!5449 = !{!1615, !3338, !3252, !5450, !3449}
!5450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1380)
!5451 = !DILocalVariable(name: "sa", arg: 1, scope: !5447, file: !1, line: 779, type: !3338)
!5452 = !DILocation(line: 779, column: 39, scope: !5447)
!5453 = !DILocalVariable(name: "ar", arg: 2, scope: !5447, file: !1, line: 779, type: !3252)
!5454 = !DILocation(line: 779, column: 52, scope: !5447)
!5455 = !DILocalVariable(name: "fac", arg: 3, scope: !5447, file: !1, line: 779, type: !5450)
!5456 = !DILocation(line: 779, column: 68, scope: !5447)
!5457 = !DILocalVariable(name: "drag", arg: 4, scope: !5447, file: !1, line: 779, type: !3449)
!5458 = !DILocation(line: 779, column: 84, scope: !5447)
!5459 = !DILocalVariable(name: "pa", scope: !5447, file: !1, line: 781, type: !1396)
!5460 = !DILocation(line: 781, column: 9, scope: !5447)
!5461 = !DILocalVariable(name: "ps", scope: !5447, file: !1, line: 782, type: !5462)
!5462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5463, size: 64)
!5463 = !DIDerivedType(tag: DW_TAG_typedef, name: "PanelSort", file: !1, line: 730, baseType: !5464)
!5464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PanelSort", file: !1, line: 728, size: 128, elements: !5465)
!5465 = !{!5466, !5467}
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !5464, file: !1, line: 729, baseType: !1396, size: 64)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !5464, file: !1, line: 729, baseType: !1396, size: 64, offset: 64)
!5468 = !DILocation(line: 782, column: 13, scope: !5447)
!5469 = !DILocalVariable(name: "panelsort", scope: !5447, file: !1, line: 782, type: !5462)
!5470 = !DILocation(line: 782, column: 18, scope: !5447)
!5471 = !DILocalVariable(name: "psnext", scope: !5447, file: !1, line: 782, type: !5462)
!5472 = !DILocation(line: 782, column: 30, scope: !5447)
!5473 = !DILocalVariable(name: "a", scope: !5447, file: !1, line: 783, type: !1420)
!5474 = !DILocation(line: 783, column: 6, scope: !5447)
!5475 = !DILocalVariable(name: "tot", scope: !5447, file: !1, line: 783, type: !1420)
!5476 = !DILocation(line: 783, column: 9, scope: !5447)
!5477 = !DILocalVariable(name: "done", scope: !5447, file: !1, line: 784, type: !1615)
!5478 = !DILocation(line: 784, column: 7, scope: !5447)
!5479 = !DILocalVariable(name: "align", scope: !5447, file: !1, line: 785, type: !1420)
!5480 = !DILocation(line: 785, column: 6, scope: !5447)
!5481 = !DILocation(line: 785, column: 28, scope: !5447)
!5482 = !DILocation(line: 785, column: 32, scope: !5447)
!5483 = !DILocation(line: 785, column: 14, scope: !5447)
!5484 = !DILocalVariable(name: "has_category_tabs", scope: !5447, file: !1, line: 786, type: !1615)
!5485 = !DILocation(line: 786, column: 7, scope: !5447)
!5486 = !DILocation(line: 786, column: 56, scope: !5447)
!5487 = !DILocation(line: 786, column: 27, scope: !5447)
!5488 = !DILocation(line: 789, column: 12, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5447, file: !1, line: 789, column: 2)
!5490 = !DILocation(line: 789, column: 16, scope: !5489)
!5491 = !DILocation(line: 789, column: 23, scope: !5489)
!5492 = !DILocation(line: 789, column: 10, scope: !5489)
!5493 = !DILocation(line: 789, column: 7, scope: !5489)
!5494 = !DILocation(line: 789, column: 30, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5489, file: !1, line: 789, column: 2)
!5496 = !DILocation(line: 789, column: 2, scope: !5489)
!5497 = !DILocation(line: 790, column: 8, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5495, file: !1, line: 790, column: 7)
!5499 = !DILocation(line: 790, column: 12, scope: !5498)
!5500 = !DILocation(line: 790, column: 25, scope: !5498)
!5501 = !DILocation(line: 790, column: 39, scope: !5498)
!5502 = !DILocation(line: 790, column: 42, scope: !5498)
!5503 = !DILocation(line: 790, column: 46, scope: !5498)
!5504 = !DILocation(line: 790, column: 55, scope: !5498)
!5505 = !DILocation(line: 790, column: 7, scope: !5495)
!5506 = !DILocation(line: 791, column: 7, scope: !5498)
!5507 = !DILocation(line: 791, column: 4, scope: !5498)
!5508 = !DILocation(line: 790, column: 58, scope: !5498)
!5509 = !DILocation(line: 789, column: 39, scope: !5495)
!5510 = !DILocation(line: 789, column: 43, scope: !5495)
!5511 = !DILocation(line: 789, column: 37, scope: !5495)
!5512 = !DILocation(line: 789, column: 2, scope: !5495)
!5513 = distinct !{!5513, !5496, !5514}
!5514 = !DILocation(line: 791, column: 7, scope: !5489)
!5515 = !DILocation(line: 793, column: 6, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5447, file: !1, line: 793, column: 6)
!5517 = !DILocation(line: 793, column: 10, scope: !5516)
!5518 = !DILocation(line: 793, column: 6, scope: !5447)
!5519 = !DILocation(line: 793, column: 16, scope: !5516)
!5520 = !DILocation(line: 796, column: 12, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5447, file: !1, line: 796, column: 2)
!5522 = !DILocation(line: 796, column: 16, scope: !5521)
!5523 = !DILocation(line: 796, column: 23, scope: !5521)
!5524 = !DILocation(line: 796, column: 10, scope: !5521)
!5525 = !DILocation(line: 796, column: 7, scope: !5521)
!5526 = !DILocation(line: 796, column: 30, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5521, file: !1, line: 796, column: 2)
!5528 = !DILocation(line: 796, column: 2, scope: !5521)
!5529 = !DILocation(line: 797, column: 8, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5531, file: !1, line: 797, column: 7)
!5531 = distinct !DILexicalBlock(scope: !5527, file: !1, line: 796, column: 49)
!5532 = !DILocation(line: 797, column: 12, scope: !5530)
!5533 = !DILocation(line: 797, column: 25, scope: !5530)
!5534 = !DILocation(line: 797, column: 39, scope: !5530)
!5535 = !DILocation(line: 797, column: 42, scope: !5530)
!5536 = !DILocation(line: 797, column: 46, scope: !5530)
!5537 = !DILocation(line: 797, column: 55, scope: !5530)
!5538 = !DILocation(line: 797, column: 7, scope: !5531)
!5539 = !DILocation(line: 798, column: 9, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5541, file: !1, line: 798, column: 8)
!5541 = distinct !DILexicalBlock(scope: !5530, file: !1, line: 797, column: 64)
!5542 = !DILocation(line: 798, column: 13, scope: !5540)
!5543 = !DILocation(line: 798, column: 18, scope: !5540)
!5544 = !DILocation(line: 798, column: 33, scope: !5540)
!5545 = !DILocation(line: 798, column: 37, scope: !5540)
!5546 = !DILocation(line: 798, column: 43, scope: !5540)
!5547 = !DILocation(line: 798, column: 8, scope: !5541)
!5548 = !DILocation(line: 799, column: 5, scope: !5540)
!5549 = !DILocation(line: 799, column: 9, scope: !5540)
!5550 = !DILocation(line: 799, column: 14, scope: !5540)
!5551 = !DILocation(line: 800, column: 14, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5540, file: !1, line: 800, column: 13)
!5553 = !DILocation(line: 800, column: 18, scope: !5552)
!5554 = !DILocation(line: 800, column: 23, scope: !5552)
!5555 = !DILocation(line: 800, column: 38, scope: !5552)
!5556 = !DILocation(line: 800, column: 42, scope: !5552)
!5557 = !DILocation(line: 800, column: 48, scope: !5552)
!5558 = !DILocation(line: 800, column: 13, scope: !5540)
!5559 = !DILocation(line: 801, column: 5, scope: !5552)
!5560 = !DILocation(line: 801, column: 9, scope: !5552)
!5561 = !DILocation(line: 801, column: 14, scope: !5552)
!5562 = !DILocation(line: 802, column: 3, scope: !5541)
!5563 = !DILocation(line: 803, column: 2, scope: !5531)
!5564 = !DILocation(line: 796, column: 39, scope: !5527)
!5565 = !DILocation(line: 796, column: 43, scope: !5527)
!5566 = !DILocation(line: 796, column: 37, scope: !5527)
!5567 = !DILocation(line: 796, column: 2, scope: !5527)
!5568 = distinct !{!5568, !5528, !5569}
!5569 = !DILocation(line: 803, column: 2, scope: !5521)
!5570 = !DILocation(line: 806, column: 14, scope: !5447)
!5571 = !DILocation(line: 806, column: 26, scope: !5447)
!5572 = !DILocation(line: 806, column: 30, scope: !5447)
!5573 = !DILocation(line: 806, column: 12, scope: !5447)
!5574 = !DILocation(line: 808, column: 7, scope: !5447)
!5575 = !DILocation(line: 808, column: 5, scope: !5447)
!5576 = !DILocation(line: 809, column: 12, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5447, file: !1, line: 809, column: 2)
!5578 = !DILocation(line: 809, column: 16, scope: !5577)
!5579 = !DILocation(line: 809, column: 23, scope: !5577)
!5580 = !DILocation(line: 809, column: 10, scope: !5577)
!5581 = !DILocation(line: 809, column: 7, scope: !5577)
!5582 = !DILocation(line: 809, column: 30, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5577, file: !1, line: 809, column: 2)
!5584 = !DILocation(line: 809, column: 2, scope: !5577)
!5585 = !DILocation(line: 810, column: 8, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5587, file: !1, line: 810, column: 7)
!5587 = distinct !DILexicalBlock(scope: !5583, file: !1, line: 809, column: 49)
!5588 = !DILocation(line: 810, column: 12, scope: !5586)
!5589 = !DILocation(line: 810, column: 25, scope: !5586)
!5590 = !DILocation(line: 810, column: 39, scope: !5586)
!5591 = !DILocation(line: 810, column: 42, scope: !5586)
!5592 = !DILocation(line: 810, column: 46, scope: !5586)
!5593 = !DILocation(line: 810, column: 55, scope: !5586)
!5594 = !DILocation(line: 810, column: 7, scope: !5587)
!5595 = !DILocation(line: 811, column: 13, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5586, file: !1, line: 810, column: 64)
!5597 = !DILocation(line: 811, column: 27, scope: !5596)
!5598 = !DILocation(line: 811, column: 4, scope: !5596)
!5599 = !DILocation(line: 811, column: 8, scope: !5596)
!5600 = !DILocation(line: 811, column: 11, scope: !5596)
!5601 = !DILocation(line: 812, column: 15, scope: !5596)
!5602 = !DILocation(line: 812, column: 4, scope: !5596)
!5603 = !DILocation(line: 812, column: 8, scope: !5596)
!5604 = !DILocation(line: 812, column: 13, scope: !5596)
!5605 = !DILocation(line: 813, column: 6, scope: !5596)
!5606 = !DILocation(line: 814, column: 3, scope: !5596)
!5607 = !DILocation(line: 815, column: 2, scope: !5587)
!5608 = !DILocation(line: 809, column: 39, scope: !5583)
!5609 = !DILocation(line: 809, column: 43, scope: !5583)
!5610 = !DILocation(line: 809, column: 37, scope: !5583)
!5611 = !DILocation(line: 809, column: 2, scope: !5583)
!5612 = distinct !{!5612, !5584, !5613}
!5613 = !DILocation(line: 815, column: 2, scope: !5577)
!5614 = !DILocation(line: 817, column: 6, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5447, file: !1, line: 817, column: 6)
!5616 = !DILocation(line: 817, column: 6, scope: !5447)
!5617 = !DILocation(line: 819, column: 7, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5619, file: !1, line: 819, column: 7)
!5619 = distinct !DILexicalBlock(scope: !5615, file: !1, line: 817, column: 12)
!5620 = !DILocation(line: 819, column: 13, scope: !5618)
!5621 = !DILocation(line: 819, column: 7, scope: !5619)
!5622 = !DILocation(line: 820, column: 10, scope: !5618)
!5623 = !DILocation(line: 820, column: 21, scope: !5618)
!5624 = !DILocation(line: 820, column: 4, scope: !5618)
!5625 = !DILocation(line: 822, column: 10, scope: !5618)
!5626 = !DILocation(line: 822, column: 21, scope: !5618)
!5627 = !DILocation(line: 822, column: 4, scope: !5618)
!5628 = !DILocation(line: 824, column: 13, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5619, file: !1, line: 824, column: 3)
!5630 = !DILocation(line: 824, column: 11, scope: !5629)
!5631 = !DILocation(line: 824, column: 26, scope: !5629)
!5632 = !DILocation(line: 824, column: 8, scope: !5629)
!5633 = !DILocation(line: 824, column: 31, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5629, file: !1, line: 824, column: 3)
!5635 = !DILocation(line: 824, column: 35, scope: !5634)
!5636 = !DILocation(line: 824, column: 33, scope: !5634)
!5637 = !DILocation(line: 824, column: 3, scope: !5629)
!5638 = !DILocation(line: 825, column: 26, scope: !5634)
!5639 = !DILocation(line: 825, column: 4, scope: !5634)
!5640 = !DILocation(line: 825, column: 8, scope: !5634)
!5641 = !DILocation(line: 825, column: 14, scope: !5634)
!5642 = !DILocation(line: 825, column: 24, scope: !5634)
!5643 = !DILocation(line: 824, column: 41, scope: !5634)
!5644 = !DILocation(line: 824, column: 47, scope: !5634)
!5645 = !DILocation(line: 824, column: 3, scope: !5634)
!5646 = distinct !{!5646, !5637, !5647}
!5647 = !DILocation(line: 825, column: 26, scope: !5629)
!5648 = !DILocation(line: 826, column: 2, scope: !5619)
!5649 = !DILocation(line: 829, column: 9, scope: !5615)
!5650 = !DILocation(line: 829, column: 20, scope: !5615)
!5651 = !DILocation(line: 829, column: 3, scope: !5615)
!5652 = !DILocation(line: 832, column: 7, scope: !5447)
!5653 = !DILocation(line: 832, column: 5, scope: !5447)
!5654 = !DILocation(line: 833, column: 2, scope: !5447)
!5655 = !DILocation(line: 833, column: 6, scope: !5447)
!5656 = !DILocation(line: 833, column: 10, scope: !5447)
!5657 = !DILocation(line: 833, column: 15, scope: !5447)
!5658 = !DILocation(line: 834, column: 35, scope: !5447)
!5659 = !DILocation(line: 834, column: 39, scope: !5447)
!5660 = !DILocation(line: 834, column: 18, scope: !5447)
!5661 = !DILocation(line: 834, column: 17, scope: !5447)
!5662 = !DILocation(line: 834, column: 2, scope: !5447)
!5663 = !DILocation(line: 834, column: 6, scope: !5447)
!5664 = !DILocation(line: 834, column: 10, scope: !5447)
!5665 = !DILocation(line: 834, column: 15, scope: !5447)
!5666 = !DILocation(line: 836, column: 6, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5447, file: !1, line: 836, column: 6)
!5668 = !DILocation(line: 836, column: 6, scope: !5447)
!5669 = !DILocation(line: 837, column: 7, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5671, file: !1, line: 837, column: 7)
!5671 = distinct !DILexicalBlock(scope: !5667, file: !1, line: 836, column: 25)
!5672 = !DILocation(line: 837, column: 13, scope: !5670)
!5673 = !DILocation(line: 837, column: 7, scope: !5671)
!5674 = !DILocation(line: 838, column: 20, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5670, file: !1, line: 837, column: 30)
!5676 = !DILocation(line: 838, column: 4, scope: !5675)
!5677 = !DILocation(line: 838, column: 8, scope: !5675)
!5678 = !DILocation(line: 838, column: 12, scope: !5675)
!5679 = !DILocation(line: 838, column: 17, scope: !5675)
!5680 = !DILocation(line: 839, column: 3, scope: !5675)
!5681 = !DILocation(line: 840, column: 2, scope: !5671)
!5682 = !DILocation(line: 842, column: 9, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5447, file: !1, line: 842, column: 2)
!5684 = !DILocation(line: 842, column: 7, scope: !5683)
!5685 = !DILocation(line: 842, column: 14, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5683, file: !1, line: 842, column: 2)
!5687 = !DILocation(line: 842, column: 18, scope: !5686)
!5688 = !DILocation(line: 842, column: 22, scope: !5686)
!5689 = !DILocation(line: 842, column: 16, scope: !5686)
!5690 = !DILocation(line: 842, column: 2, scope: !5683)
!5691 = !DILocation(line: 843, column: 12, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5686, file: !1, line: 842, column: 38)
!5693 = !DILocation(line: 843, column: 15, scope: !5692)
!5694 = !DILocation(line: 843, column: 10, scope: !5692)
!5695 = !DILocation(line: 845, column: 7, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5692, file: !1, line: 845, column: 7)
!5697 = !DILocation(line: 845, column: 13, scope: !5696)
!5698 = !DILocation(line: 845, column: 7, scope: !5692)
!5699 = !DILocation(line: 846, column: 23, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5696, file: !1, line: 845, column: 30)
!5701 = !DILocation(line: 846, column: 27, scope: !5700)
!5702 = !DILocation(line: 846, column: 31, scope: !5700)
!5703 = !DILocation(line: 846, column: 4, scope: !5700)
!5704 = !DILocation(line: 846, column: 12, scope: !5700)
!5705 = !DILocation(line: 846, column: 16, scope: !5700)
!5706 = !DILocation(line: 846, column: 21, scope: !5700)
!5707 = !DILocation(line: 847, column: 43, scope: !5700)
!5708 = !DILocation(line: 847, column: 47, scope: !5700)
!5709 = !DILocation(line: 847, column: 23, scope: !5700)
!5710 = !DILocation(line: 847, column: 70, scope: !5700)
!5711 = !DILocation(line: 847, column: 78, scope: !5700)
!5712 = !DILocation(line: 847, column: 53, scope: !5700)
!5713 = !DILocation(line: 847, column: 51, scope: !5700)
!5714 = !DILocation(line: 847, column: 4, scope: !5700)
!5715 = !DILocation(line: 847, column: 12, scope: !5700)
!5716 = !DILocation(line: 847, column: 16, scope: !5700)
!5717 = !DILocation(line: 847, column: 21, scope: !5700)
!5718 = !DILocation(line: 848, column: 3, scope: !5700)
!5719 = !DILocation(line: 850, column: 43, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5696, file: !1, line: 849, column: 8)
!5721 = !DILocation(line: 850, column: 47, scope: !5720)
!5722 = !DILocation(line: 850, column: 23, scope: !5720)
!5723 = !DILocation(line: 850, column: 4, scope: !5720)
!5724 = !DILocation(line: 850, column: 12, scope: !5720)
!5725 = !DILocation(line: 850, column: 16, scope: !5720)
!5726 = !DILocation(line: 850, column: 21, scope: !5720)
!5727 = !DILocation(line: 851, column: 23, scope: !5720)
!5728 = !DILocation(line: 851, column: 27, scope: !5720)
!5729 = !DILocation(line: 851, column: 31, scope: !5720)
!5730 = !DILocation(line: 851, column: 55, scope: !5720)
!5731 = !DILocation(line: 851, column: 59, scope: !5720)
!5732 = !DILocation(line: 851, column: 38, scope: !5720)
!5733 = !DILocation(line: 851, column: 36, scope: !5720)
!5734 = !DILocation(line: 851, column: 82, scope: !5720)
!5735 = !DILocation(line: 851, column: 90, scope: !5720)
!5736 = !DILocation(line: 851, column: 65, scope: !5720)
!5737 = !DILocation(line: 851, column: 63, scope: !5720)
!5738 = !DILocation(line: 851, column: 4, scope: !5720)
!5739 = !DILocation(line: 851, column: 12, scope: !5720)
!5740 = !DILocation(line: 851, column: 16, scope: !5720)
!5741 = !DILocation(line: 851, column: 21, scope: !5720)
!5742 = !DILocation(line: 853, column: 2, scope: !5692)
!5743 = !DILocation(line: 842, column: 28, scope: !5686)
!5744 = !DILocation(line: 842, column: 34, scope: !5686)
!5745 = !DILocation(line: 842, column: 2, scope: !5686)
!5746 = distinct !{!5746, !5690, !5747}
!5747 = !DILocation(line: 853, column: 2, scope: !5683)
!5748 = !DILocation(line: 856, column: 7, scope: !5447)
!5749 = !DILocation(line: 857, column: 7, scope: !5447)
!5750 = !DILocation(line: 857, column: 5, scope: !5447)
!5751 = !DILocation(line: 858, column: 9, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5447, file: !1, line: 858, column: 2)
!5753 = !DILocation(line: 858, column: 7, scope: !5752)
!5754 = !DILocation(line: 858, column: 14, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5752, file: !1, line: 858, column: 2)
!5756 = !DILocation(line: 858, column: 18, scope: !5755)
!5757 = !DILocation(line: 858, column: 16, scope: !5755)
!5758 = !DILocation(line: 858, column: 2, scope: !5752)
!5759 = !DILocation(line: 859, column: 8, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5761, file: !1, line: 859, column: 7)
!5761 = distinct !DILexicalBlock(scope: !5755, file: !1, line: 858, column: 34)
!5762 = !DILocation(line: 859, column: 12, scope: !5760)
!5763 = !DILocation(line: 859, column: 16, scope: !5760)
!5764 = !DILocation(line: 859, column: 21, scope: !5760)
!5765 = !DILocation(line: 859, column: 35, scope: !5760)
!5766 = !DILocation(line: 859, column: 7, scope: !5761)
!5767 = !DILocation(line: 860, column: 9, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5769, file: !1, line: 860, column: 8)
!5769 = distinct !DILexicalBlock(scope: !5760, file: !1, line: 859, column: 41)
!5770 = !DILocation(line: 860, column: 13, scope: !5768)
!5771 = !DILocation(line: 860, column: 19, scope: !5768)
!5772 = !DILocation(line: 860, column: 27, scope: !5768)
!5773 = !DILocation(line: 860, column: 31, scope: !5768)
!5774 = !DILocation(line: 860, column: 35, scope: !5768)
!5775 = !DILocation(line: 860, column: 24, scope: !5768)
!5776 = !DILocation(line: 860, column: 41, scope: !5768)
!5777 = !DILocation(line: 860, column: 45, scope: !5768)
!5778 = !DILocation(line: 860, column: 49, scope: !5768)
!5779 = !DILocation(line: 860, column: 55, scope: !5768)
!5780 = !DILocation(line: 860, column: 63, scope: !5768)
!5781 = !DILocation(line: 860, column: 67, scope: !5768)
!5782 = !DILocation(line: 860, column: 71, scope: !5768)
!5783 = !DILocation(line: 860, column: 60, scope: !5768)
!5784 = !DILocation(line: 860, column: 8, scope: !5769)
!5785 = !DILocation(line: 861, column: 30, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5768, file: !1, line: 860, column: 78)
!5787 = !DILocation(line: 861, column: 43, scope: !5786)
!5788 = !DILocation(line: 861, column: 47, scope: !5786)
!5789 = !DILocation(line: 861, column: 51, scope: !5786)
!5790 = !DILocation(line: 861, column: 36, scope: !5786)
!5791 = !DILocation(line: 861, column: 34, scope: !5786)
!5792 = !DILocation(line: 861, column: 66, scope: !5786)
!5793 = !DILocation(line: 861, column: 64, scope: !5786)
!5794 = !DILocation(line: 861, column: 80, scope: !5786)
!5795 = !DILocation(line: 861, column: 84, scope: !5786)
!5796 = !DILocation(line: 861, column: 90, scope: !5786)
!5797 = !DILocation(line: 861, column: 73, scope: !5786)
!5798 = !DILocation(line: 861, column: 71, scope: !5786)
!5799 = !DILocation(line: 861, column: 56, scope: !5786)
!5800 = !DILocation(line: 861, column: 22, scope: !5786)
!5801 = !DILocation(line: 861, column: 5, scope: !5786)
!5802 = !DILocation(line: 861, column: 9, scope: !5786)
!5803 = !DILocation(line: 861, column: 15, scope: !5786)
!5804 = !DILocation(line: 861, column: 20, scope: !5786)
!5805 = !DILocation(line: 862, column: 30, scope: !5786)
!5806 = !DILocation(line: 862, column: 43, scope: !5786)
!5807 = !DILocation(line: 862, column: 47, scope: !5786)
!5808 = !DILocation(line: 862, column: 51, scope: !5786)
!5809 = !DILocation(line: 862, column: 36, scope: !5786)
!5810 = !DILocation(line: 862, column: 34, scope: !5786)
!5811 = !DILocation(line: 862, column: 66, scope: !5786)
!5812 = !DILocation(line: 862, column: 64, scope: !5786)
!5813 = !DILocation(line: 862, column: 80, scope: !5786)
!5814 = !DILocation(line: 862, column: 84, scope: !5786)
!5815 = !DILocation(line: 862, column: 90, scope: !5786)
!5816 = !DILocation(line: 862, column: 73, scope: !5786)
!5817 = !DILocation(line: 862, column: 71, scope: !5786)
!5818 = !DILocation(line: 862, column: 56, scope: !5786)
!5819 = !DILocation(line: 862, column: 22, scope: !5786)
!5820 = !DILocation(line: 862, column: 5, scope: !5786)
!5821 = !DILocation(line: 862, column: 9, scope: !5786)
!5822 = !DILocation(line: 862, column: 15, scope: !5786)
!5823 = !DILocation(line: 862, column: 20, scope: !5786)
!5824 = !DILocation(line: 863, column: 10, scope: !5786)
!5825 = !DILocation(line: 864, column: 4, scope: !5786)
!5826 = !DILocation(line: 865, column: 3, scope: !5769)
!5827 = !DILocation(line: 866, column: 2, scope: !5761)
!5828 = !DILocation(line: 858, column: 24, scope: !5755)
!5829 = !DILocation(line: 858, column: 30, scope: !5755)
!5830 = !DILocation(line: 858, column: 2, scope: !5755)
!5831 = distinct !{!5831, !5758, !5832}
!5832 = !DILocation(line: 866, column: 2, scope: !5752)
!5833 = !DILocation(line: 869, column: 12, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5447, file: !1, line: 869, column: 2)
!5835 = !DILocation(line: 869, column: 16, scope: !5834)
!5836 = !DILocation(line: 869, column: 23, scope: !5834)
!5837 = !DILocation(line: 869, column: 10, scope: !5834)
!5838 = !DILocation(line: 869, column: 7, scope: !5834)
!5839 = !DILocation(line: 869, column: 30, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5834, file: !1, line: 869, column: 2)
!5841 = !DILocation(line: 869, column: 2, scope: !5834)
!5842 = !DILocation(line: 870, column: 7, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5840, file: !1, line: 870, column: 7)
!5844 = !DILocation(line: 870, column: 11, scope: !5843)
!5845 = !DILocation(line: 870, column: 20, scope: !5843)
!5846 = !DILocation(line: 870, column: 24, scope: !5843)
!5847 = !DILocation(line: 870, column: 28, scope: !5843)
!5848 = !DILocation(line: 870, column: 41, scope: !5843)
!5849 = !DILocation(line: 870, column: 7, scope: !5840)
!5850 = !DILocation(line: 871, column: 25, scope: !5843)
!5851 = !DILocation(line: 871, column: 29, scope: !5843)
!5852 = !DILocation(line: 871, column: 33, scope: !5843)
!5853 = !DILocation(line: 871, column: 4, scope: !5843)
!5854 = !DILocation(line: 870, column: 53, scope: !5843)
!5855 = !DILocation(line: 869, column: 39, scope: !5840)
!5856 = !DILocation(line: 869, column: 43, scope: !5840)
!5857 = !DILocation(line: 869, column: 37, scope: !5840)
!5858 = !DILocation(line: 869, column: 2, scope: !5840)
!5859 = distinct !{!5859, !5841, !5860}
!5860 = !DILocation(line: 871, column: 41, scope: !5834)
!5861 = !DILocation(line: 874, column: 12, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5447, file: !1, line: 874, column: 2)
!5863 = !DILocation(line: 874, column: 10, scope: !5862)
!5864 = !DILocation(line: 874, column: 25, scope: !5862)
!5865 = !DILocation(line: 874, column: 7, scope: !5862)
!5866 = !DILocation(line: 874, column: 30, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5862, file: !1, line: 874, column: 2)
!5868 = !DILocation(line: 874, column: 34, scope: !5867)
!5869 = !DILocation(line: 874, column: 32, scope: !5867)
!5870 = !DILocation(line: 874, column: 2, scope: !5862)
!5871 = !DILocation(line: 875, column: 3, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5867, file: !1, line: 874, column: 50)
!5873 = !DILocation(line: 875, column: 13, scope: !5872)
!5874 = !DILocation(line: 875, column: 17, scope: !5872)
!5875 = !DILocation(line: 876, column: 2, scope: !5872)
!5876 = !DILocation(line: 874, column: 40, scope: !5867)
!5877 = !DILocation(line: 874, column: 46, scope: !5867)
!5878 = !DILocation(line: 874, column: 2, scope: !5867)
!5879 = distinct !{!5879, !5870, !5880}
!5880 = !DILocation(line: 876, column: 2, scope: !5862)
!5881 = !DILocation(line: 877, column: 2, scope: !5447)
!5882 = !DILocation(line: 877, column: 12, scope: !5447)
!5883 = !DILocation(line: 879, column: 9, scope: !5447)
!5884 = !DILocation(line: 879, column: 2, scope: !5447)
!5885 = !DILocation(line: 880, column: 1, scope: !5447)
!5886 = distinct !DISubprogram(name: "ui_panels_size", scope: !1, file: !1, line: 882, type: !5887, scopeLine: 883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!5887 = !DISubroutineType(types: !5888)
!5888 = !{null, !3338, !3252, !4709, !4709}
!5889 = !DILocalVariable(name: "sa", arg: 1, scope: !5886, file: !1, line: 882, type: !3338)
!5890 = !DILocation(line: 882, column: 37, scope: !5886)
!5891 = !DILocalVariable(name: "ar", arg: 2, scope: !5886, file: !1, line: 882, type: !3252)
!5892 = !DILocation(line: 882, column: 50, scope: !5886)
!5893 = !DILocalVariable(name: "x", arg: 3, scope: !5886, file: !1, line: 882, type: !4709)
!5894 = !DILocation(line: 882, column: 59, scope: !5886)
!5895 = !DILocalVariable(name: "y", arg: 4, scope: !5886, file: !1, line: 882, type: !4709)
!5896 = !DILocation(line: 882, column: 67, scope: !5886)
!5897 = !DILocalVariable(name: "pa", scope: !5886, file: !1, line: 884, type: !1396)
!5898 = !DILocation(line: 884, column: 9, scope: !5886)
!5899 = !DILocalVariable(name: "align", scope: !5886, file: !1, line: 885, type: !1420)
!5900 = !DILocation(line: 885, column: 6, scope: !5886)
!5901 = !DILocation(line: 885, column: 28, scope: !5886)
!5902 = !DILocation(line: 885, column: 32, scope: !5886)
!5903 = !DILocation(line: 885, column: 14, scope: !5886)
!5904 = !DILocalVariable(name: "sizex", scope: !5886, file: !1, line: 886, type: !1420)
!5905 = !DILocation(line: 886, column: 6, scope: !5886)
!5906 = !DILocalVariable(name: "sizey", scope: !5886, file: !1, line: 887, type: !1420)
!5907 = !DILocation(line: 887, column: 6, scope: !5886)
!5908 = !DILocation(line: 890, column: 12, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5886, file: !1, line: 890, column: 2)
!5910 = !DILocation(line: 890, column: 16, scope: !5909)
!5911 = !DILocation(line: 890, column: 23, scope: !5909)
!5912 = !DILocation(line: 890, column: 10, scope: !5909)
!5913 = !DILocation(line: 890, column: 7, scope: !5909)
!5914 = !DILocation(line: 890, column: 30, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5909, file: !1, line: 890, column: 2)
!5916 = !DILocation(line: 890, column: 2, scope: !5909)
!5917 = !DILocation(line: 891, column: 7, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5919, file: !1, line: 891, column: 7)
!5919 = distinct !DILexicalBlock(scope: !5915, file: !1, line: 890, column: 49)
!5920 = !DILocation(line: 891, column: 11, scope: !5918)
!5921 = !DILocation(line: 891, column: 24, scope: !5918)
!5922 = !DILocation(line: 891, column: 7, scope: !5919)
!5923 = !DILocalVariable(name: "pa_sizex", scope: !5924, file: !1, line: 892, type: !1420)
!5924 = distinct !DILexicalBlock(scope: !5918, file: !1, line: 891, column: 38)
!5925 = !DILocation(line: 892, column: 8, scope: !5924)
!5926 = !DILocalVariable(name: "pa_sizey", scope: !5924, file: !1, line: 892, type: !1420)
!5927 = !DILocation(line: 892, column: 18, scope: !5924)
!5928 = !DILocation(line: 894, column: 8, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5924, file: !1, line: 894, column: 8)
!5930 = !DILocation(line: 894, column: 14, scope: !5929)
!5931 = !DILocation(line: 894, column: 8, scope: !5924)
!5932 = !DILocation(line: 895, column: 16, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5929, file: !1, line: 894, column: 31)
!5934 = !DILocation(line: 895, column: 20, scope: !5933)
!5935 = !DILocation(line: 895, column: 27, scope: !5933)
!5936 = !DILocation(line: 895, column: 31, scope: !5933)
!5937 = !DILocation(line: 895, column: 25, scope: !5933)
!5938 = !DILocation(line: 895, column: 14, scope: !5933)
!5939 = !DILocation(line: 896, column: 36, scope: !5933)
!5940 = !DILocation(line: 896, column: 16, scope: !5933)
!5941 = !DILocation(line: 896, column: 14, scope: !5933)
!5942 = !DILocation(line: 897, column: 4, scope: !5933)
!5943 = !DILocation(line: 899, column: 36, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5929, file: !1, line: 898, column: 9)
!5945 = !DILocation(line: 899, column: 16, scope: !5944)
!5946 = !DILocation(line: 899, column: 42, scope: !5944)
!5947 = !DILocation(line: 899, column: 46, scope: !5944)
!5948 = !DILocation(line: 899, column: 40, scope: !5944)
!5949 = !DILocation(line: 899, column: 14, scope: !5944)
!5950 = !DILocation(line: 900, column: 16, scope: !5944)
!5951 = !DILocation(line: 900, column: 20, scope: !5944)
!5952 = !DILocation(line: 900, column: 44, scope: !5944)
!5953 = !DILocation(line: 900, column: 27, scope: !5944)
!5954 = !DILocation(line: 900, column: 25, scope: !5944)
!5955 = !DILocation(line: 900, column: 14, scope: !5944)
!5956 = !DILocation(line: 903, column: 19, scope: !5924)
!5957 = !DILocation(line: 903, column: 26, scope: !5924)
!5958 = !DILocation(line: 903, column: 12, scope: !5924)
!5959 = !DILocation(line: 903, column: 10, scope: !5924)
!5960 = !DILocation(line: 904, column: 19, scope: !5924)
!5961 = !DILocation(line: 904, column: 26, scope: !5924)
!5962 = !DILocation(line: 904, column: 12, scope: !5924)
!5963 = !DILocation(line: 904, column: 10, scope: !5924)
!5964 = !DILocation(line: 905, column: 3, scope: !5924)
!5965 = !DILocation(line: 906, column: 2, scope: !5919)
!5966 = !DILocation(line: 890, column: 39, scope: !5915)
!5967 = !DILocation(line: 890, column: 43, scope: !5915)
!5968 = !DILocation(line: 890, column: 37, scope: !5915)
!5969 = !DILocation(line: 890, column: 2, scope: !5915)
!5970 = distinct !{!5970, !5916, !5971}
!5971 = !DILocation(line: 906, column: 2, scope: !5909)
!5972 = !DILocation(line: 908, column: 6, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5886, file: !1, line: 908, column: 6)
!5974 = !DILocation(line: 908, column: 12, scope: !5973)
!5975 = !DILocation(line: 908, column: 6, scope: !5886)
!5976 = !DILocation(line: 909, column: 9, scope: !5973)
!5977 = !DILocation(line: 909, column: 3, scope: !5973)
!5978 = !DILocation(line: 910, column: 6, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5886, file: !1, line: 910, column: 6)
!5980 = !DILocation(line: 910, column: 12, scope: !5979)
!5981 = !DILocation(line: 910, column: 6, scope: !5886)
!5982 = !DILocation(line: 911, column: 9, scope: !5979)
!5983 = !DILocation(line: 911, column: 3, scope: !5979)
!5984 = !DILocation(line: 913, column: 7, scope: !5886)
!5985 = !DILocation(line: 913, column: 3, scope: !5886)
!5986 = !DILocation(line: 913, column: 5, scope: !5886)
!5987 = !DILocation(line: 914, column: 7, scope: !5886)
!5988 = !DILocation(line: 914, column: 3, scope: !5886)
!5989 = !DILocation(line: 914, column: 5, scope: !5886)
!5990 = !DILocation(line: 915, column: 1, scope: !5886)
!5991 = distinct !DISubprogram(name: "uiDrawPanels", scope: !1, file: !1, line: 1015, type: !4666, scopeLine: 1016, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!5992 = !DILocalVariable(name: "C", arg: 1, scope: !5991, file: !1, line: 1015, type: !4668)
!5993 = !DILocation(line: 1015, column: 35, scope: !5991)
!5994 = !DILocalVariable(name: "ar", arg: 2, scope: !5991, file: !1, line: 1015, type: !3252)
!5995 = !DILocation(line: 1015, column: 47, scope: !5991)
!5996 = !DILocalVariable(name: "block", scope: !5991, file: !1, line: 1017, type: !1381)
!5997 = !DILocation(line: 1017, column: 11, scope: !5991)
!5998 = !DILocation(line: 1019, column: 2, scope: !5991)
!5999 = !DILocation(line: 1022, column: 15, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5991, file: !1, line: 1022, column: 2)
!6001 = !DILocation(line: 1022, column: 19, scope: !6000)
!6002 = !DILocation(line: 1022, column: 28, scope: !6000)
!6003 = !DILocation(line: 1022, column: 13, scope: !6000)
!6004 = !DILocation(line: 1022, column: 7, scope: !6000)
!6005 = !DILocation(line: 1022, column: 35, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6000, file: !1, line: 1022, column: 2)
!6007 = !DILocation(line: 1022, column: 2, scope: !6000)
!6008 = !DILocation(line: 1023, column: 7, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6010, file: !1, line: 1023, column: 7)
!6010 = distinct !DILexicalBlock(scope: !6006, file: !1, line: 1022, column: 63)
!6011 = !DILocation(line: 1023, column: 14, scope: !6009)
!6012 = !DILocation(line: 1023, column: 21, scope: !6009)
!6013 = !DILocation(line: 1023, column: 24, scope: !6009)
!6014 = !DILocation(line: 1023, column: 31, scope: !6009)
!6015 = !DILocation(line: 1023, column: 37, scope: !6009)
!6016 = !DILocation(line: 1023, column: 42, scope: !6009)
!6017 = !DILocation(line: 1023, column: 49, scope: !6009)
!6018 = !DILocation(line: 1023, column: 56, scope: !6009)
!6019 = !DILocation(line: 1023, column: 61, scope: !6009)
!6020 = !DILocation(line: 1023, column: 7, scope: !6010)
!6021 = !DILocation(line: 1024, column: 16, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6009, file: !1, line: 1023, column: 76)
!6023 = !DILocation(line: 1024, column: 19, scope: !6022)
!6024 = !DILocation(line: 1024, column: 4, scope: !6022)
!6025 = !DILocation(line: 1025, column: 3, scope: !6022)
!6026 = !DILocation(line: 1026, column: 2, scope: !6010)
!6027 = !DILocation(line: 1022, column: 50, scope: !6006)
!6028 = !DILocation(line: 1022, column: 57, scope: !6006)
!6029 = !DILocation(line: 1022, column: 48, scope: !6006)
!6030 = !DILocation(line: 1022, column: 2, scope: !6006)
!6031 = distinct !{!6031, !6007, !6032}
!6032 = !DILocation(line: 1026, column: 2, scope: !6000)
!6033 = !DILocation(line: 1028, column: 15, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !5991, file: !1, line: 1028, column: 2)
!6035 = !DILocation(line: 1028, column: 19, scope: !6034)
!6036 = !DILocation(line: 1028, column: 28, scope: !6034)
!6037 = !DILocation(line: 1028, column: 13, scope: !6034)
!6038 = !DILocation(line: 1028, column: 7, scope: !6034)
!6039 = !DILocation(line: 1028, column: 35, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6034, file: !1, line: 1028, column: 2)
!6041 = !DILocation(line: 1028, column: 2, scope: !6034)
!6042 = !DILocation(line: 1029, column: 7, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6044, file: !1, line: 1029, column: 7)
!6044 = distinct !DILexicalBlock(scope: !6040, file: !1, line: 1028, column: 63)
!6045 = !DILocation(line: 1029, column: 14, scope: !6043)
!6046 = !DILocation(line: 1029, column: 21, scope: !6043)
!6047 = !DILocation(line: 1029, column: 24, scope: !6043)
!6048 = !DILocation(line: 1029, column: 31, scope: !6043)
!6049 = !DILocation(line: 1029, column: 37, scope: !6043)
!6050 = !DILocation(line: 1029, column: 41, scope: !6043)
!6051 = !DILocation(line: 1029, column: 48, scope: !6043)
!6052 = !DILocation(line: 1029, column: 55, scope: !6043)
!6053 = !DILocation(line: 1029, column: 60, scope: !6043)
!6054 = !DILocation(line: 1029, column: 7, scope: !6044)
!6055 = !DILocation(line: 1030, column: 16, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6043, file: !1, line: 1029, column: 75)
!6057 = !DILocation(line: 1030, column: 19, scope: !6056)
!6058 = !DILocation(line: 1030, column: 4, scope: !6056)
!6059 = !DILocation(line: 1031, column: 3, scope: !6056)
!6060 = !DILocation(line: 1032, column: 2, scope: !6044)
!6061 = !DILocation(line: 1028, column: 50, scope: !6040)
!6062 = !DILocation(line: 1028, column: 57, scope: !6040)
!6063 = !DILocation(line: 1028, column: 48, scope: !6040)
!6064 = !DILocation(line: 1028, column: 2, scope: !6040)
!6065 = distinct !{!6065, !6041, !6066}
!6066 = !DILocation(line: 1032, column: 2, scope: !6034)
!6067 = !DILocation(line: 1033, column: 1, scope: !5991)
!6068 = distinct !DISubprogram(name: "uiScalePanels", scope: !1, file: !1, line: 1035, type: !6069, scopeLine: 1036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!6069 = !DISubroutineType(types: !6070)
!6070 = !{null, !3252, !1380}
!6071 = !DILocalVariable(name: "ar", arg: 1, scope: !6068, file: !1, line: 1035, type: !3252)
!6072 = !DILocation(line: 1035, column: 29, scope: !6068)
!6073 = !DILocalVariable(name: "new_width", arg: 2, scope: !6068, file: !1, line: 1035, type: !1380)
!6074 = !DILocation(line: 1035, column: 39, scope: !6068)
!6075 = !DILocalVariable(name: "block", scope: !6068, file: !1, line: 1037, type: !1381)
!6076 = !DILocation(line: 1037, column: 11, scope: !6068)
!6077 = !DILocalVariable(name: "but", scope: !6068, file: !1, line: 1038, type: !4932)
!6078 = !DILocation(line: 1038, column: 9, scope: !6068)
!6079 = !DILocation(line: 1040, column: 15, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6068, file: !1, line: 1040, column: 2)
!6081 = !DILocation(line: 1040, column: 19, scope: !6080)
!6082 = !DILocation(line: 1040, column: 28, scope: !6080)
!6083 = !DILocation(line: 1040, column: 13, scope: !6080)
!6084 = !DILocation(line: 1040, column: 7, scope: !6080)
!6085 = !DILocation(line: 1040, column: 35, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6080, file: !1, line: 1040, column: 2)
!6087 = !DILocation(line: 1040, column: 2, scope: !6080)
!6088 = !DILocation(line: 1041, column: 7, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6090, file: !1, line: 1041, column: 7)
!6090 = distinct !DILexicalBlock(scope: !6086, file: !1, line: 1040, column: 63)
!6091 = !DILocation(line: 1041, column: 14, scope: !6089)
!6092 = !DILocation(line: 1041, column: 7, scope: !6090)
!6093 = !DILocalVariable(name: "fac", scope: !6094, file: !1, line: 1042, type: !1380)
!6094 = distinct !DILexicalBlock(scope: !6089, file: !1, line: 1041, column: 21)
!6095 = !DILocation(line: 1042, column: 10, scope: !6094)
!6096 = !DILocation(line: 1042, column: 16, scope: !6094)
!6097 = !DILocation(line: 1042, column: 35, scope: !6094)
!6098 = !DILocation(line: 1042, column: 42, scope: !6094)
!6099 = !DILocation(line: 1042, column: 49, scope: !6094)
!6100 = !DILocation(line: 1042, column: 28, scope: !6094)
!6101 = !DILocation(line: 1042, column: 26, scope: !6094)
!6102 = !DILocation(line: 1043, column: 26, scope: !6094)
!6103 = !DILocation(line: 1043, column: 4, scope: !6094)
!6104 = !DILocation(line: 1044, column: 26, scope: !6094)
!6105 = !DILocation(line: 1044, column: 4, scope: !6094)
!6106 = !DILocation(line: 1044, column: 11, scope: !6094)
!6107 = !DILocation(line: 1044, column: 18, scope: !6094)
!6108 = !DILocation(line: 1044, column: 24, scope: !6094)
!6109 = !DILocation(line: 1046, column: 15, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6094, file: !1, line: 1046, column: 4)
!6111 = !DILocation(line: 1046, column: 22, scope: !6110)
!6112 = !DILocation(line: 1046, column: 30, scope: !6110)
!6113 = !DILocation(line: 1046, column: 13, scope: !6110)
!6114 = !DILocation(line: 1046, column: 9, scope: !6110)
!6115 = !DILocation(line: 1046, column: 37, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6110, file: !1, line: 1046, column: 4)
!6117 = !DILocation(line: 1046, column: 4, scope: !6110)
!6118 = !DILocation(line: 1047, column: 23, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6116, file: !1, line: 1046, column: 59)
!6120 = !DILocation(line: 1047, column: 5, scope: !6119)
!6121 = !DILocation(line: 1047, column: 10, scope: !6119)
!6122 = !DILocation(line: 1047, column: 15, scope: !6119)
!6123 = !DILocation(line: 1047, column: 20, scope: !6119)
!6124 = !DILocation(line: 1048, column: 23, scope: !6119)
!6125 = !DILocation(line: 1048, column: 5, scope: !6119)
!6126 = !DILocation(line: 1048, column: 10, scope: !6119)
!6127 = !DILocation(line: 1048, column: 15, scope: !6119)
!6128 = !DILocation(line: 1048, column: 20, scope: !6119)
!6129 = !DILocation(line: 1049, column: 4, scope: !6119)
!6130 = !DILocation(line: 1046, column: 48, scope: !6116)
!6131 = !DILocation(line: 1046, column: 53, scope: !6116)
!6132 = !DILocation(line: 1046, column: 46, scope: !6116)
!6133 = !DILocation(line: 1046, column: 4, scope: !6116)
!6134 = distinct !{!6134, !6117, !6135}
!6135 = !DILocation(line: 1049, column: 4, scope: !6110)
!6136 = !DILocation(line: 1050, column: 3, scope: !6094)
!6137 = !DILocation(line: 1051, column: 2, scope: !6090)
!6138 = !DILocation(line: 1040, column: 50, scope: !6086)
!6139 = !DILocation(line: 1040, column: 57, scope: !6086)
!6140 = !DILocation(line: 1040, column: 48, scope: !6086)
!6141 = !DILocation(line: 1040, column: 2, scope: !6086)
!6142 = distinct !{!6142, !6087, !6143}
!6143 = !DILocation(line: 1051, column: 2, scope: !6080)
!6144 = !DILocation(line: 1052, column: 1, scope: !6068)
!6145 = distinct !DISubprogram(name: "UI_panel_category_is_visible", scope: !1, file: !1, line: 1227, type: !6146, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!6146 = !DISubroutineType(types: !6147)
!6147 = !{!1615, !3252}
!6148 = !DILocalVariable(name: "ar", arg: 1, scope: !6145, file: !1, line: 1227, type: !3252)
!6149 = !DILocation(line: 1227, column: 44, scope: !6145)
!6150 = !DILocation(line: 1230, column: 9, scope: !6145)
!6151 = !DILocation(line: 1230, column: 13, scope: !6145)
!6152 = !DILocation(line: 1230, column: 29, scope: !6145)
!6153 = !DILocation(line: 1230, column: 35, scope: !6145)
!6154 = !DILocation(line: 1230, column: 38, scope: !6145)
!6155 = !DILocation(line: 1230, column: 42, scope: !6145)
!6156 = !DILocation(line: 1230, column: 58, scope: !6145)
!6157 = !DILocation(line: 1230, column: 67, scope: !6145)
!6158 = !DILocation(line: 1230, column: 71, scope: !6145)
!6159 = !DILocation(line: 1230, column: 87, scope: !6145)
!6160 = !DILocation(line: 1230, column: 64, scope: !6145)
!6161 = !DILocation(line: 0, scope: !6145)
!6162 = !DILocation(line: 1230, column: 2, scope: !6145)
!6163 = distinct !DISubprogram(name: "UI_panel_category_find", scope: !1, file: !1, line: 1233, type: !6164, scopeLine: 1234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!6164 = !DISubroutineType(types: !6165)
!6165 = !{!3372, !3252, !1582}
!6166 = !DILocalVariable(name: "ar", arg: 1, scope: !6163, file: !1, line: 1233, type: !3252)
!6167 = !DILocation(line: 1233, column: 51, scope: !6163)
!6168 = !DILocalVariable(name: "idname", arg: 2, scope: !6163, file: !1, line: 1233, type: !1582)
!6169 = !DILocation(line: 1233, column: 67, scope: !6163)
!6170 = !DILocation(line: 1235, column: 25, scope: !6163)
!6171 = !DILocation(line: 1235, column: 29, scope: !6163)
!6172 = !DILocation(line: 1235, column: 46, scope: !6163)
!6173 = !DILocation(line: 1235, column: 9, scope: !6163)
!6174 = !DILocation(line: 1235, column: 2, scope: !6163)
!6175 = distinct !DISubprogram(name: "UI_panel_category_active_find", scope: !1, file: !1, line: 1238, type: !6176, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!6176 = !DISubroutineType(types: !6177)
!6177 = !{!6178, !3252, !1582}
!6178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6179, size: 64)
!6179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PanelCategoryStack", file: !22, line: 139, size: 640, elements: !6180)
!6180 = !{!6181, !6182, !6183}
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6179, file: !22, line: 140, baseType: !6178, size: 64)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6179, file: !22, line: 140, baseType: !6178, size: 64, offset: 64)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !6179, file: !22, line: 141, baseType: !1411, size: 512, offset: 128)
!6184 = !DILocalVariable(name: "ar", arg: 1, scope: !6175, file: !1, line: 1238, type: !3252)
!6185 = !DILocation(line: 1238, column: 60, scope: !6175)
!6186 = !DILocalVariable(name: "idname", arg: 2, scope: !6175, file: !1, line: 1238, type: !1582)
!6187 = !DILocation(line: 1238, column: 76, scope: !6175)
!6188 = !DILocation(line: 1240, column: 25, scope: !6175)
!6189 = !DILocation(line: 1240, column: 29, scope: !6175)
!6190 = !DILocation(line: 1240, column: 53, scope: !6175)
!6191 = !DILocation(line: 1240, column: 9, scope: !6175)
!6192 = !DILocation(line: 1240, column: 2, scope: !6175)
!6193 = distinct !DISubprogram(name: "UI_panel_category_active_get", scope: !1, file: !1, line: 1243, type: !6194, scopeLine: 1244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!6194 = !DISubroutineType(types: !6195)
!6195 = !{!1582, !3252, !1615}
!6196 = !DILocalVariable(name: "ar", arg: 1, scope: !6193, file: !1, line: 1243, type: !3252)
!6197 = !DILocation(line: 1243, column: 51, scope: !6193)
!6198 = !DILocalVariable(name: "set_fallback", arg: 2, scope: !6193, file: !1, line: 1243, type: !1615)
!6199 = !DILocation(line: 1243, column: 60, scope: !6193)
!6200 = !DILocalVariable(name: "pc_act", scope: !6193, file: !1, line: 1245, type: !6201)
!6201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6202, size: 64)
!6202 = !DIDerivedType(tag: DW_TAG_typedef, name: "PanelCategoryStack", file: !22, line: 142, baseType: !6179)
!6203 = !DILocation(line: 1245, column: 22, scope: !6193)
!6204 = !DILocation(line: 1247, column: 16, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6193, file: !1, line: 1247, column: 2)
!6206 = !DILocation(line: 1247, column: 20, scope: !6205)
!6207 = !DILocation(line: 1247, column: 43, scope: !6205)
!6208 = !DILocation(line: 1247, column: 14, scope: !6205)
!6209 = !DILocation(line: 1247, column: 7, scope: !6205)
!6210 = !DILocation(line: 1247, column: 50, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6205, file: !1, line: 1247, column: 2)
!6212 = !DILocation(line: 1247, column: 2, scope: !6205)
!6213 = !DILocation(line: 1248, column: 30, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6215, file: !1, line: 1248, column: 7)
!6215 = distinct !DILexicalBlock(scope: !6211, file: !1, line: 1247, column: 81)
!6216 = !DILocation(line: 1248, column: 34, scope: !6214)
!6217 = !DILocation(line: 1248, column: 42, scope: !6214)
!6218 = !DILocation(line: 1248, column: 7, scope: !6214)
!6219 = !DILocation(line: 1248, column: 7, scope: !6215)
!6220 = !DILocation(line: 1249, column: 11, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6214, file: !1, line: 1248, column: 51)
!6222 = !DILocation(line: 1249, column: 19, scope: !6221)
!6223 = !DILocation(line: 1249, column: 4, scope: !6221)
!6224 = !DILocation(line: 1251, column: 2, scope: !6215)
!6225 = !DILocation(line: 1247, column: 67, scope: !6211)
!6226 = !DILocation(line: 1247, column: 75, scope: !6211)
!6227 = !DILocation(line: 1247, column: 65, scope: !6211)
!6228 = !DILocation(line: 1247, column: 2, scope: !6211)
!6229 = distinct !{!6229, !6212, !6230}
!6230 = !DILocation(line: 1251, column: 2, scope: !6205)
!6231 = !DILocation(line: 1253, column: 6, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6193, file: !1, line: 1253, column: 6)
!6233 = !DILocation(line: 1253, column: 6, scope: !6193)
!6234 = !DILocalVariable(name: "pc_dyn", scope: !6235, file: !1, line: 1254, type: !3367)
!6235 = distinct !DILexicalBlock(scope: !6232, file: !1, line: 1253, column: 20)
!6236 = !DILocation(line: 1254, column: 21, scope: !6235)
!6237 = !DILocation(line: 1254, column: 30, scope: !6235)
!6238 = !DILocation(line: 1254, column: 34, scope: !6235)
!6239 = !DILocation(line: 1254, column: 50, scope: !6235)
!6240 = !DILocation(line: 1255, column: 7, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6235, file: !1, line: 1255, column: 7)
!6242 = !DILocation(line: 1255, column: 7, scope: !6235)
!6243 = !DILocation(line: 1256, column: 33, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6241, file: !1, line: 1255, column: 15)
!6245 = !DILocation(line: 1256, column: 37, scope: !6244)
!6246 = !DILocation(line: 1256, column: 45, scope: !6244)
!6247 = !DILocation(line: 1256, column: 4, scope: !6244)
!6248 = !DILocation(line: 1257, column: 11, scope: !6244)
!6249 = !DILocation(line: 1257, column: 19, scope: !6244)
!6250 = !DILocation(line: 1257, column: 4, scope: !6244)
!6251 = !DILocation(line: 1259, column: 2, scope: !6235)
!6252 = !DILocation(line: 1261, column: 2, scope: !6193)
!6253 = !DILocation(line: 1262, column: 1, scope: !6193)
!6254 = distinct !DISubprogram(name: "UI_panel_category_active_set", scope: !1, file: !1, line: 1264, type: !6255, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!6255 = !DISubroutineType(types: !6256)
!6256 = !{null, !3252, !1582}
!6257 = !DILocalVariable(name: "ar", arg: 1, scope: !6254, file: !1, line: 1264, type: !3252)
!6258 = !DILocation(line: 1264, column: 44, scope: !6254)
!6259 = !DILocalVariable(name: "idname", arg: 2, scope: !6254, file: !1, line: 1264, type: !1582)
!6260 = !DILocation(line: 1264, column: 60, scope: !6254)
!6261 = !DILocalVariable(name: "lb", scope: !6254, file: !1, line: 1266, type: !1877)
!6262 = !DILocation(line: 1266, column: 12, scope: !6254)
!6263 = !DILocation(line: 1266, column: 18, scope: !6254)
!6264 = !DILocation(line: 1266, column: 22, scope: !6254)
!6265 = !DILocalVariable(name: "pc_act", scope: !6254, file: !1, line: 1267, type: !6201)
!6266 = !DILocation(line: 1267, column: 22, scope: !6254)
!6267 = !DILocation(line: 1267, column: 61, scope: !6254)
!6268 = !DILocation(line: 1267, column: 65, scope: !6254)
!6269 = !DILocation(line: 1267, column: 31, scope: !6254)
!6270 = !DILocation(line: 1269, column: 6, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6254, file: !1, line: 1269, column: 6)
!6272 = !DILocation(line: 1269, column: 6, scope: !6254)
!6273 = !DILocation(line: 1270, column: 15, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6271, file: !1, line: 1269, column: 14)
!6275 = !DILocation(line: 1270, column: 19, scope: !6274)
!6276 = !DILocation(line: 1270, column: 3, scope: !6274)
!6277 = !DILocation(line: 1271, column: 2, scope: !6274)
!6278 = !DILocation(line: 1273, column: 12, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6271, file: !1, line: 1272, column: 7)
!6280 = !DILocation(line: 1273, column: 10, scope: !6279)
!6281 = !DILocation(line: 1274, column: 15, scope: !6279)
!6282 = !DILocation(line: 1274, column: 23, scope: !6279)
!6283 = !DILocation(line: 1274, column: 31, scope: !6279)
!6284 = !DILocation(line: 1274, column: 3, scope: !6279)
!6285 = !DILocation(line: 1277, column: 14, scope: !6254)
!6286 = !DILocation(line: 1277, column: 18, scope: !6254)
!6287 = !DILocation(line: 1277, column: 2, scope: !6254)
!6288 = !DILocalVariable(name: "pc_act_next", scope: !6289, file: !1, line: 1284, type: !6201)
!6289 = distinct !DILexicalBlock(scope: !6254, file: !1, line: 1283, column: 2)
!6290 = !DILocation(line: 1284, column: 23, scope: !6289)
!6291 = !DILocation(line: 1286, column: 17, scope: !6289)
!6292 = !DILocation(line: 1286, column: 25, scope: !6289)
!6293 = !DILocation(line: 1286, column: 15, scope: !6289)
!6294 = !DILocation(line: 1287, column: 3, scope: !6289)
!6295 = !DILocation(line: 1287, column: 20, scope: !6289)
!6296 = !DILocation(line: 1287, column: 18, scope: !6289)
!6297 = !DILocation(line: 1288, column: 18, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6289, file: !1, line: 1287, column: 34)
!6299 = !DILocation(line: 1288, column: 26, scope: !6298)
!6300 = !DILocation(line: 1288, column: 16, scope: !6298)
!6301 = !DILocation(line: 1289, column: 25, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6298, file: !1, line: 1289, column: 8)
!6303 = !DILocation(line: 1289, column: 29, scope: !6302)
!6304 = !DILocation(line: 1289, column: 35, scope: !6302)
!6305 = !DILocation(line: 1289, column: 47, scope: !6302)
!6306 = !DILocation(line: 1289, column: 55, scope: !6302)
!6307 = !DILocation(line: 1289, column: 9, scope: !6302)
!6308 = !DILocation(line: 1289, column: 8, scope: !6298)
!6309 = !DILocation(line: 1290, column: 17, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6302, file: !1, line: 1289, column: 95)
!6311 = !DILocation(line: 1290, column: 21, scope: !6310)
!6312 = !DILocation(line: 1290, column: 5, scope: !6310)
!6313 = !DILocation(line: 1291, column: 4, scope: !6310)
!6314 = distinct !{!6314, !6294, !6315}
!6315 = !DILocation(line: 1292, column: 3, scope: !6289)
!6316 = !DILocation(line: 1294, column: 1, scope: !6254)
!6317 = distinct !DISubprogram(name: "UI_panel_category_find_mouse_over_ex", scope: !1, file: !1, line: 1296, type: !6318, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!6318 = !DISubroutineType(types: !6319)
!6319 = !{!3372, !3252, !4373, !4373}
!6320 = !DILocalVariable(name: "ar", arg: 1, scope: !6317, file: !1, line: 1296, type: !3252)
!6321 = !DILocation(line: 1296, column: 65, scope: !6317)
!6322 = !DILocalVariable(name: "x", arg: 2, scope: !6317, file: !1, line: 1296, type: !4373)
!6323 = !DILocation(line: 1296, column: 79, scope: !6317)
!6324 = !DILocalVariable(name: "y", arg: 3, scope: !6317, file: !1, line: 1296, type: !4373)
!6325 = !DILocation(line: 1296, column: 92, scope: !6317)
!6326 = !DILocalVariable(name: "ptd", scope: !6317, file: !1, line: 1298, type: !3367)
!6327 = !DILocation(line: 1298, column: 20, scope: !6317)
!6328 = !DILocation(line: 1300, column: 13, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6317, file: !1, line: 1300, column: 2)
!6330 = !DILocation(line: 1300, column: 17, scope: !6329)
!6331 = !DILocation(line: 1300, column: 33, scope: !6329)
!6332 = !DILocation(line: 1300, column: 11, scope: !6329)
!6333 = !DILocation(line: 1300, column: 7, scope: !6329)
!6334 = !DILocation(line: 1300, column: 40, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6329, file: !1, line: 1300, column: 2)
!6336 = !DILocation(line: 1300, column: 2, scope: !6329)
!6337 = !DILocation(line: 1301, column: 26, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !1, line: 1301, column: 7)
!6339 = distinct !DILexicalBlock(scope: !6335, file: !1, line: 1300, column: 62)
!6340 = !DILocation(line: 1301, column: 31, scope: !6338)
!6341 = !DILocation(line: 1301, column: 37, scope: !6338)
!6342 = !DILocation(line: 1301, column: 40, scope: !6338)
!6343 = !DILocation(line: 1301, column: 7, scope: !6338)
!6344 = !DILocation(line: 1301, column: 7, scope: !6339)
!6345 = !DILocation(line: 1302, column: 11, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6338, file: !1, line: 1301, column: 44)
!6347 = !DILocation(line: 1302, column: 4, scope: !6346)
!6348 = !DILocation(line: 1304, column: 2, scope: !6339)
!6349 = !DILocation(line: 1300, column: 51, scope: !6335)
!6350 = !DILocation(line: 1300, column: 56, scope: !6335)
!6351 = !DILocation(line: 1300, column: 49, scope: !6335)
!6352 = !DILocation(line: 1300, column: 2, scope: !6335)
!6353 = distinct !{!6353, !6336, !6354}
!6354 = !DILocation(line: 1304, column: 2, scope: !6329)
!6355 = !DILocation(line: 1306, column: 2, scope: !6317)
!6356 = !DILocation(line: 1307, column: 1, scope: !6317)
!6357 = distinct !DISubprogram(name: "UI_panel_category_find_mouse_over", scope: !1, file: !1, line: 1309, type: !6358, scopeLine: 1310, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!6358 = !DISubroutineType(types: !6359)
!6359 = !{!3372, !3252, !6360}
!6360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6361, size: 64)
!6361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6362)
!6362 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !1548, line: 460, baseType: !1547)
!6363 = !DILocalVariable(name: "ar", arg: 1, scope: !6357, file: !1, line: 1309, type: !3252)
!6364 = !DILocation(line: 1309, column: 62, scope: !6357)
!6365 = !DILocalVariable(name: "event", arg: 2, scope: !6357, file: !1, line: 1309, type: !6360)
!6366 = !DILocation(line: 1309, column: 81, scope: !6357)
!6367 = !DILocation(line: 1311, column: 46, scope: !6357)
!6368 = !DILocation(line: 1311, column: 50, scope: !6357)
!6369 = !DILocation(line: 1311, column: 57, scope: !6357)
!6370 = !DILocation(line: 1311, column: 66, scope: !6357)
!6371 = !DILocation(line: 1311, column: 73, scope: !6357)
!6372 = !DILocation(line: 1311, column: 9, scope: !6357)
!6373 = !DILocation(line: 1311, column: 2, scope: !6357)
!6374 = distinct !DISubprogram(name: "UI_panel_category_add", scope: !1, file: !1, line: 1315, type: !6255, scopeLine: 1316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!6375 = !DILocalVariable(name: "ar", arg: 1, scope: !6374, file: !1, line: 1315, type: !3252)
!6376 = !DILocation(line: 1315, column: 37, scope: !6374)
!6377 = !DILocalVariable(name: "name", arg: 2, scope: !6374, file: !1, line: 1315, type: !1582)
!6378 = !DILocation(line: 1315, column: 53, scope: !6374)
!6379 = !DILocalVariable(name: "pc_dyn", scope: !6374, file: !1, line: 1317, type: !3367)
!6380 = !DILocation(line: 1317, column: 20, scope: !6374)
!6381 = !DILocation(line: 1317, column: 29, scope: !6374)
!6382 = !DILocation(line: 1318, column: 15, scope: !6374)
!6383 = !DILocation(line: 1318, column: 19, scope: !6374)
!6384 = !DILocation(line: 1318, column: 36, scope: !6374)
!6385 = !DILocation(line: 1318, column: 2, scope: !6374)
!6386 = !DILocation(line: 1320, column: 14, scope: !6374)
!6387 = !DILocation(line: 1320, column: 22, scope: !6374)
!6388 = !DILocation(line: 1320, column: 30, scope: !6374)
!6389 = !DILocation(line: 1320, column: 2, scope: !6374)
!6390 = !DILocation(line: 1323, column: 1, scope: !6374)
!6391 = distinct !DISubprogram(name: "UI_panel_category_clear_all", scope: !1, file: !1, line: 1325, type: !6392, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!6392 = !DISubroutineType(types: !6393)
!6393 = !{null, !3252}
!6394 = !DILocalVariable(name: "ar", arg: 1, scope: !6391, file: !1, line: 1325, type: !3252)
!6395 = !DILocation(line: 1325, column: 43, scope: !6391)
!6396 = !DILocation(line: 1327, column: 17, scope: !6391)
!6397 = !DILocation(line: 1327, column: 21, scope: !6391)
!6398 = !DILocation(line: 1327, column: 2, scope: !6391)
!6399 = !DILocation(line: 1328, column: 1, scope: !6391)
!6400 = distinct !DISubprogram(name: "UI_panel_category_draw_all", scope: !1, file: !1, line: 1418, type: !6255, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!6401 = !DILocalVariable(name: "ar", arg: 1, scope: !6400, file: !1, line: 1418, type: !3252)
!6402 = !DILocation(line: 1418, column: 42, scope: !6400)
!6403 = !DILocalVariable(name: "category_id_active", arg: 2, scope: !6400, file: !1, line: 1418, type: !1582)
!6404 = !DILocation(line: 1418, column: 58, scope: !6400)
!6405 = !DILocalVariable(name: "v2d", scope: !6400, file: !1, line: 1422, type: !6406)
!6406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!6407 = !DILocation(line: 1422, column: 10, scope: !6400)
!6408 = !DILocation(line: 1422, column: 17, scope: !6400)
!6409 = !DILocation(line: 1422, column: 21, scope: !6400)
!6410 = !DILocalVariable(name: "style", scope: !6400, file: !1, line: 1423, type: !3894)
!6411 = !DILocation(line: 1423, column: 11, scope: !6400)
!6412 = !DILocation(line: 1423, column: 19, scope: !6400)
!6413 = !DILocalVariable(name: "fstyle", scope: !6400, file: !1, line: 1424, type: !6414)
!6414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6415, size: 64)
!6415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3904)
!6416 = !DILocation(line: 1424, column: 21, scope: !6400)
!6417 = !DILocation(line: 1424, column: 31, scope: !6400)
!6418 = !DILocation(line: 1424, column: 38, scope: !6400)
!6419 = !DILocalVariable(name: "fontid", scope: !6400, file: !1, line: 1425, type: !4373)
!6420 = !DILocation(line: 1425, column: 12, scope: !6400)
!6421 = !DILocation(line: 1425, column: 21, scope: !6400)
!6422 = !DILocation(line: 1425, column: 29, scope: !6400)
!6423 = !DILocalVariable(name: "fstyle_points", scope: !6400, file: !1, line: 1426, type: !1488)
!6424 = !DILocation(line: 1426, column: 8, scope: !6400)
!6425 = !DILocation(line: 1426, column: 24, scope: !6400)
!6426 = !DILocation(line: 1426, column: 32, scope: !6400)
!6427 = !DILocalVariable(name: "pc_dyn", scope: !6400, file: !1, line: 1428, type: !3367)
!6428 = !DILocation(line: 1428, column: 20, scope: !6400)
!6429 = !DILocalVariable(name: "aspect", scope: !6400, file: !1, line: 1429, type: !5450)
!6430 = !DILocation(line: 1429, column: 14, scope: !6400)
!6431 = !DILocation(line: 1429, column: 35, scope: !6400)
!6432 = !DILocation(line: 1429, column: 39, scope: !6400)
!6433 = !DILocation(line: 1429, column: 48, scope: !6400)
!6434 = !DILocation(line: 1429, column: 24, scope: !6400)
!6435 = !DILocation(line: 1429, column: 56, scope: !6400)
!6436 = !DILocalVariable(name: "zoom", scope: !6400, file: !1, line: 1430, type: !5450)
!6437 = !DILocation(line: 1430, column: 14, scope: !6400)
!6438 = !DILocation(line: 1430, column: 28, scope: !6400)
!6439 = !DILocation(line: 1430, column: 26, scope: !6400)
!6440 = !DILocalVariable(name: "px", scope: !6400, file: !1, line: 1431, type: !4373)
!6441 = !DILocation(line: 1431, column: 12, scope: !6400)
!6442 = !DILocation(line: 1431, column: 37, scope: !6400)
!6443 = !DILocation(line: 1431, column: 27, scope: !6400)
!6444 = !DILocation(line: 1431, column: 17, scope: !6400)
!6445 = !DILocalVariable(name: "category_tabs_width", scope: !6400, file: !1, line: 1432, type: !4373)
!6446 = !DILocation(line: 1432, column: 12, scope: !6400)
!6447 = !DILocation(line: 1432, column: 42, scope: !6400)
!6448 = !DILocation(line: 1432, column: 75, scope: !6400)
!6449 = !DILocation(line: 1432, column: 73, scope: !6400)
!6450 = !DILocation(line: 1432, column: 34, scope: !6400)
!6451 = !DILocalVariable(name: "dpi_fac", scope: !6400, file: !1, line: 1433, type: !5450)
!6452 = !DILocation(line: 1433, column: 14, scope: !6400)
!6453 = !DILocation(line: 1433, column: 24, scope: !6400)
!6454 = !DILocalVariable(name: "tab_v_pad_text", scope: !6400, file: !1, line: 1434, type: !4373)
!6455 = !DILocation(line: 1434, column: 12, scope: !6400)
!6456 = !DILocation(line: 1434, column: 44, scope: !6400)
!6457 = !DILocation(line: 1434, column: 47, scope: !6400)
!6458 = !DILocation(line: 1434, column: 43, scope: !6400)
!6459 = !DILocation(line: 1434, column: 54, scope: !6400)
!6460 = !DILocation(line: 1434, column: 52, scope: !6400)
!6461 = !DILocation(line: 1434, column: 40, scope: !6400)
!6462 = !DILocation(line: 1434, column: 66, scope: !6400)
!6463 = !DILocation(line: 1434, column: 64, scope: !6400)
!6464 = !DILocation(line: 1434, column: 29, scope: !6400)
!6465 = !DILocalVariable(name: "tab_v_pad", scope: !6400, file: !1, line: 1435, type: !4373)
!6466 = !DILocation(line: 1435, column: 12, scope: !6400)
!6467 = !DILocation(line: 1435, column: 42, scope: !6400)
!6468 = !DILocation(line: 1435, column: 40, scope: !6400)
!6469 = !DILocation(line: 1435, column: 38, scope: !6400)
!6470 = !DILocation(line: 1435, column: 47, scope: !6400)
!6471 = !DILocation(line: 1435, column: 45, scope: !6400)
!6472 = !DILocation(line: 1435, column: 35, scope: !6400)
!6473 = !DILocation(line: 1435, column: 59, scope: !6400)
!6474 = !DILocation(line: 1435, column: 57, scope: !6400)
!6475 = !DILocation(line: 1435, column: 24, scope: !6400)
!6476 = !DILocalVariable(name: "tab_curve_radius", scope: !6400, file: !1, line: 1436, type: !5450)
!6477 = !DILocation(line: 1436, column: 14, scope: !6400)
!6478 = !DILocation(line: 1436, column: 35, scope: !6400)
!6479 = !DILocation(line: 1436, column: 38, scope: !6400)
!6480 = !DILocation(line: 1436, column: 34, scope: !6400)
!6481 = !DILocation(line: 1436, column: 45, scope: !6400)
!6482 = !DILocation(line: 1436, column: 43, scope: !6400)
!6483 = !DILocation(line: 1436, column: 56, scope: !6400)
!6484 = !DILocation(line: 1436, column: 54, scope: !6400)
!6485 = !DILocalVariable(name: "roundboxtype", scope: !6400, file: !1, line: 1437, type: !4373)
!6486 = !DILocation(line: 1437, column: 12, scope: !6400)
!6487 = !DILocalVariable(name: "is_alpha", scope: !6400, file: !1, line: 1438, type: !1615)
!6488 = !DILocation(line: 1438, column: 7, scope: !6400)
!6489 = !DILocalVariable(name: "do_scaletabs", scope: !6400, file: !1, line: 1439, type: !1615)
!6490 = !DILocation(line: 1439, column: 7, scope: !6400)
!6491 = !DILocalVariable(name: "scaletabs", scope: !6400, file: !1, line: 1443, type: !1380)
!6492 = !DILocation(line: 1443, column: 8, scope: !6400)
!6493 = !DILocalVariable(name: "rct_xmin", scope: !6400, file: !1, line: 1445, type: !4373)
!6494 = !DILocation(line: 1445, column: 12, scope: !6400)
!6495 = !DILocation(line: 1445, column: 23, scope: !6400)
!6496 = !DILocation(line: 1445, column: 28, scope: !6400)
!6497 = !DILocation(line: 1445, column: 33, scope: !6400)
!6498 = !DILocation(line: 1445, column: 38, scope: !6400)
!6499 = !DILocalVariable(name: "rct_xmax", scope: !6400, file: !1, line: 1446, type: !4373)
!6500 = !DILocation(line: 1446, column: 12, scope: !6400)
!6501 = !DILocation(line: 1446, column: 23, scope: !6400)
!6502 = !DILocation(line: 1446, column: 28, scope: !6400)
!6503 = !DILocation(line: 1446, column: 33, scope: !6400)
!6504 = !DILocation(line: 1446, column: 40, scope: !6400)
!6505 = !DILocation(line: 1446, column: 38, scope: !6400)
!6506 = !DILocalVariable(name: "text_v_ofs", scope: !6400, file: !1, line: 1447, type: !4373)
!6507 = !DILocation(line: 1447, column: 12, scope: !6400)
!6508 = !DILocation(line: 1447, column: 26, scope: !6400)
!6509 = !DILocation(line: 1447, column: 37, scope: !6400)
!6510 = !DILocation(line: 1447, column: 35, scope: !6400)
!6511 = !DILocation(line: 1447, column: 25, scope: !6400)
!6512 = !DILocation(line: 1447, column: 47, scope: !6400)
!6513 = !DILocalVariable(name: "y_ofs", scope: !6400, file: !1, line: 1449, type: !1420)
!6514 = !DILocation(line: 1449, column: 6, scope: !6400)
!6515 = !DILocation(line: 1449, column: 14, scope: !6400)
!6516 = !DILocalVariable(name: "theme_col_back", scope: !6400, file: !1, line: 1452, type: !2322)
!6517 = !DILocation(line: 1452, column: 16, scope: !6400)
!6518 = !DILocalVariable(name: "theme_col_text", scope: !6400, file: !1, line: 1453, type: !4366)
!6519 = !DILocation(line: 1453, column: 16, scope: !6400)
!6520 = !DILocalVariable(name: "theme_col_text_hi", scope: !6400, file: !1, line: 1454, type: !4366)
!6521 = !DILocation(line: 1454, column: 16, scope: !6400)
!6522 = !DILocalVariable(name: "theme_col_tab_bg", scope: !6400, file: !1, line: 1457, type: !2322)
!6523 = !DILocation(line: 1457, column: 16, scope: !6400)
!6524 = !DILocalVariable(name: "theme_col_tab_active", scope: !6400, file: !1, line: 1458, type: !4366)
!6525 = !DILocation(line: 1458, column: 16, scope: !6400)
!6526 = !DILocalVariable(name: "theme_col_tab_inactive", scope: !6400, file: !1, line: 1459, type: !4366)
!6527 = !DILocation(line: 1459, column: 16, scope: !6400)
!6528 = !DILocalVariable(name: "theme_col_tab_outline", scope: !6400, file: !1, line: 1462, type: !4366)
!6529 = !DILocation(line: 1462, column: 16, scope: !6400)
!6530 = !DILocalVariable(name: "theme_col_tab_divider", scope: !6400, file: !1, line: 1463, type: !4366)
!6531 = !DILocation(line: 1463, column: 16, scope: !6400)
!6532 = !DILocalVariable(name: "theme_col_tab_highlight", scope: !6400, file: !1, line: 1464, type: !4366)
!6533 = !DILocation(line: 1464, column: 16, scope: !6400)
!6534 = !DILocalVariable(name: "theme_col_tab_highlight_inactive", scope: !6400, file: !1, line: 1465, type: !4366)
!6535 = !DILocation(line: 1465, column: 16, scope: !6400)
!6536 = !DILocation(line: 1469, column: 32, scope: !6400)
!6537 = !DILocation(line: 1469, column: 2, scope: !6400)
!6538 = !DILocation(line: 1470, column: 32, scope: !6400)
!6539 = !DILocation(line: 1470, column: 2, scope: !6400)
!6540 = !DILocation(line: 1471, column: 35, scope: !6400)
!6541 = !DILocation(line: 1471, column: 2, scope: !6400)
!6542 = !DILocation(line: 1473, column: 36, scope: !6400)
!6543 = !DILocation(line: 1473, column: 2, scope: !6400)
!6544 = !DILocation(line: 1474, column: 38, scope: !6400)
!6545 = !DILocation(line: 1474, column: 2, scope: !6400)
!6546 = !DILocation(line: 1475, column: 40, scope: !6400)
!6547 = !DILocation(line: 1475, column: 2, scope: !6400)
!6548 = !DILocation(line: 1476, column: 39, scope: !6400)
!6549 = !DILocation(line: 1476, column: 2, scope: !6400)
!6550 = !DILocation(line: 1478, column: 23, scope: !6400)
!6551 = !DILocation(line: 1478, column: 46, scope: !6400)
!6552 = !DILocation(line: 1478, column: 62, scope: !6400)
!6553 = !DILocation(line: 1478, column: 2, scope: !6400)
!6554 = !DILocation(line: 1479, column: 23, scope: !6400)
!6555 = !DILocation(line: 1479, column: 48, scope: !6400)
!6556 = !DILocation(line: 1479, column: 64, scope: !6400)
!6557 = !DILocation(line: 1479, column: 2, scope: !6400)
!6558 = !DILocation(line: 1480, column: 23, scope: !6400)
!6559 = !DILocation(line: 1480, column: 57, scope: !6400)
!6560 = !DILocation(line: 1480, column: 81, scope: !6400)
!6561 = !DILocation(line: 1480, column: 2, scope: !6400)
!6562 = !DILocation(line: 1482, column: 14, scope: !6400)
!6563 = !DILocation(line: 1482, column: 18, scope: !6400)
!6564 = !DILocation(line: 1482, column: 26, scope: !6400)
!6565 = !DILocation(line: 1482, column: 30, scope: !6400)
!6566 = !DILocation(line: 1482, column: 48, scope: !6400)
!6567 = !DILocation(line: 0, scope: !6400)
!6568 = !DILocation(line: 1482, column: 13, scope: !6400)
!6569 = !DILocation(line: 1482, column: 11, scope: !6400)
!6570 = !DILocation(line: 1484, column: 6, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6400, file: !1, line: 1484, column: 6)
!6572 = !DILocation(line: 1484, column: 14, scope: !6571)
!6573 = !DILocation(line: 1484, column: 22, scope: !6571)
!6574 = !DILocation(line: 1484, column: 6, scope: !6400)
!6575 = !DILocation(line: 1485, column: 14, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6571, file: !1, line: 1484, column: 28)
!6577 = !DILocation(line: 1485, column: 22, scope: !6576)
!6578 = !DILocation(line: 1485, column: 3, scope: !6576)
!6579 = !DILocation(line: 1486, column: 2, scope: !6576)
!6580 = !DILocation(line: 1488, column: 13, scope: !6400)
!6581 = !DILocation(line: 1488, column: 2, scope: !6400)
!6582 = !DILocation(line: 1489, column: 15, scope: !6400)
!6583 = !DILocation(line: 1489, column: 2, scope: !6400)
!6584 = !DILocation(line: 1491, column: 31, scope: !6400)
!6585 = !DILocation(line: 1491, column: 43, scope: !6400)
!6586 = !DILocation(line: 1491, column: 53, scope: !6400)
!6587 = !DILocation(line: 1491, column: 38, scope: !6400)
!6588 = !DILocation(line: 1491, column: 2, scope: !6400)
!6589 = !DILocation(line: 1492, column: 11, scope: !6400)
!6590 = !DILocation(line: 1492, column: 19, scope: !6400)
!6591 = !DILocation(line: 1492, column: 36, scope: !6400)
!6592 = !DILocation(line: 1492, column: 2, scope: !6400)
!6593 = !DILocation(line: 1494, column: 13, scope: !6400)
!6594 = !DILocation(line: 1494, column: 2, scope: !6400)
!6595 = !DILocation(line: 1495, column: 13, scope: !6400)
!6596 = !DILocation(line: 1495, column: 2, scope: !6400)
!6597 = !DILocation(line: 1496, column: 20, scope: !6400)
!6598 = !DILocation(line: 1496, column: 2, scope: !6400)
!6599 = !DILocation(line: 1502, column: 16, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6400, file: !1, line: 1502, column: 2)
!6601 = !DILocation(line: 1502, column: 20, scope: !6600)
!6602 = !DILocation(line: 1502, column: 36, scope: !6600)
!6603 = !DILocation(line: 1502, column: 14, scope: !6600)
!6604 = !DILocation(line: 1502, column: 7, scope: !6600)
!6605 = !DILocation(line: 1502, column: 43, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6600, file: !1, line: 1502, column: 2)
!6607 = !DILocation(line: 1502, column: 2, scope: !6600)
!6608 = !DILocalVariable(name: "rct", scope: !6609, file: !1, line: 1503, type: !1600)
!6609 = distinct !DILexicalBlock(scope: !6606, file: !1, line: 1502, column: 74)
!6610 = !DILocation(line: 1503, column: 9, scope: !6609)
!6611 = !DILocation(line: 1503, column: 16, scope: !6609)
!6612 = !DILocation(line: 1503, column: 24, scope: !6609)
!6613 = !DILocalVariable(name: "category_id", scope: !6609, file: !1, line: 1504, type: !1582)
!6614 = !DILocation(line: 1504, column: 15, scope: !6609)
!6615 = !DILocation(line: 1504, column: 29, scope: !6609)
!6616 = !DILocation(line: 1504, column: 37, scope: !6609)
!6617 = !DILocalVariable(name: "category_id_draw", scope: !6609, file: !1, line: 1505, type: !1582)
!6618 = !DILocation(line: 1505, column: 15, scope: !6609)
!6619 = !DILocation(line: 1505, column: 34, scope: !6609)
!6620 = !DILocalVariable(name: "category_width", scope: !6609, file: !1, line: 1506, type: !4373)
!6621 = !DILocation(line: 1506, column: 13, scope: !6609)
!6622 = !DILocation(line: 1506, column: 40, scope: !6609)
!6623 = !DILocation(line: 1506, column: 48, scope: !6609)
!6624 = !DILocation(line: 1506, column: 30, scope: !6609)
!6625 = !DILocation(line: 1508, column: 15, scope: !6609)
!6626 = !DILocation(line: 1508, column: 3, scope: !6609)
!6627 = !DILocation(line: 1508, column: 8, scope: !6609)
!6628 = !DILocation(line: 1508, column: 13, scope: !6609)
!6629 = !DILocation(line: 1509, column: 15, scope: !6609)
!6630 = !DILocation(line: 1509, column: 3, scope: !6609)
!6631 = !DILocation(line: 1509, column: 8, scope: !6609)
!6632 = !DILocation(line: 1509, column: 13, scope: !6609)
!6633 = !DILocation(line: 1511, column: 15, scope: !6609)
!6634 = !DILocation(line: 1511, column: 20, scope: !6609)
!6635 = !DILocation(line: 1511, column: 25, scope: !6609)
!6636 = !DILocation(line: 1511, column: 33, scope: !6609)
!6637 = !DILocation(line: 1511, column: 41, scope: !6609)
!6638 = !DILocation(line: 1511, column: 39, scope: !6609)
!6639 = !DILocation(line: 1511, column: 59, scope: !6609)
!6640 = !DILocation(line: 1511, column: 74, scope: !6609)
!6641 = !DILocation(line: 1511, column: 56, scope: !6609)
!6642 = !DILocation(line: 1511, column: 30, scope: !6609)
!6643 = !DILocation(line: 1511, column: 3, scope: !6609)
!6644 = !DILocation(line: 1511, column: 8, scope: !6609)
!6645 = !DILocation(line: 1511, column: 13, scope: !6609)
!6646 = !DILocation(line: 1512, column: 15, scope: !6609)
!6647 = !DILocation(line: 1512, column: 20, scope: !6609)
!6648 = !DILocation(line: 1512, column: 25, scope: !6609)
!6649 = !DILocation(line: 1512, column: 33, scope: !6609)
!6650 = !DILocation(line: 1512, column: 30, scope: !6609)
!6651 = !DILocation(line: 1512, column: 3, scope: !6609)
!6652 = !DILocation(line: 1512, column: 8, scope: !6609)
!6653 = !DILocation(line: 1512, column: 13, scope: !6609)
!6654 = !DILocation(line: 1514, column: 12, scope: !6609)
!6655 = !DILocation(line: 1514, column: 29, scope: !6609)
!6656 = !DILocation(line: 1514, column: 27, scope: !6609)
!6657 = !DILocation(line: 1514, column: 42, scope: !6609)
!6658 = !DILocation(line: 1514, column: 57, scope: !6609)
!6659 = !DILocation(line: 1514, column: 39, scope: !6609)
!6660 = !DILocation(line: 1514, column: 9, scope: !6609)
!6661 = !DILocation(line: 1515, column: 2, scope: !6609)
!6662 = !DILocation(line: 1502, column: 60, scope: !6606)
!6663 = !DILocation(line: 1502, column: 68, scope: !6606)
!6664 = !DILocation(line: 1502, column: 58, scope: !6606)
!6665 = !DILocation(line: 1502, column: 2, scope: !6606)
!6666 = distinct !{!6666, !6607, !6667}
!6667 = !DILocation(line: 1515, column: 2, scope: !6600)
!6668 = !DILocation(line: 1517, column: 6, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6400, file: !1, line: 1517, column: 6)
!6670 = !DILocation(line: 1517, column: 31, scope: !6669)
!6671 = !DILocation(line: 1517, column: 36, scope: !6669)
!6672 = !DILocation(line: 1517, column: 14, scope: !6669)
!6673 = !DILocation(line: 1517, column: 12, scope: !6669)
!6674 = !DILocation(line: 1517, column: 6, scope: !6400)
!6675 = !DILocation(line: 1518, column: 39, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6669, file: !1, line: 1517, column: 43)
!6677 = !DILocation(line: 1518, column: 44, scope: !6676)
!6678 = !DILocation(line: 1518, column: 22, scope: !6676)
!6679 = !DILocation(line: 1518, column: 15, scope: !6676)
!6680 = !DILocation(line: 1518, column: 59, scope: !6676)
!6681 = !DILocation(line: 1518, column: 52, scope: !6676)
!6682 = !DILocation(line: 1518, column: 50, scope: !6676)
!6683 = !DILocation(line: 1518, column: 13, scope: !6676)
!6684 = !DILocation(line: 1520, column: 17, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6676, file: !1, line: 1520, column: 3)
!6686 = !DILocation(line: 1520, column: 21, scope: !6685)
!6687 = !DILocation(line: 1520, column: 37, scope: !6685)
!6688 = !DILocation(line: 1520, column: 15, scope: !6685)
!6689 = !DILocation(line: 1520, column: 8, scope: !6685)
!6690 = !DILocation(line: 1520, column: 44, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6685, file: !1, line: 1520, column: 3)
!6692 = !DILocation(line: 1520, column: 3, scope: !6685)
!6693 = !DILocalVariable(name: "rct", scope: !6694, file: !1, line: 1521, type: !1600)
!6694 = distinct !DILexicalBlock(scope: !6691, file: !1, line: 1520, column: 75)
!6695 = !DILocation(line: 1521, column: 10, scope: !6694)
!6696 = !DILocation(line: 1521, column: 17, scope: !6694)
!6697 = !DILocation(line: 1521, column: 25, scope: !6694)
!6698 = !DILocation(line: 1522, column: 18, scope: !6694)
!6699 = !DILocation(line: 1522, column: 23, scope: !6694)
!6700 = !DILocation(line: 1522, column: 30, scope: !6694)
!6701 = !DILocation(line: 1522, column: 35, scope: !6694)
!6702 = !DILocation(line: 1522, column: 40, scope: !6694)
!6703 = !DILocation(line: 1522, column: 28, scope: !6694)
!6704 = !DILocation(line: 1522, column: 17, scope: !6694)
!6705 = !DILocation(line: 1522, column: 48, scope: !6694)
!6706 = !DILocation(line: 1522, column: 46, scope: !6694)
!6707 = !DILocation(line: 1522, column: 61, scope: !6694)
!6708 = !DILocation(line: 1522, column: 66, scope: !6694)
!6709 = !DILocation(line: 1522, column: 71, scope: !6694)
!6710 = !DILocation(line: 1522, column: 59, scope: !6694)
!6711 = !DILocation(line: 1522, column: 16, scope: !6694)
!6712 = !DILocation(line: 1522, column: 4, scope: !6694)
!6713 = !DILocation(line: 1522, column: 9, scope: !6694)
!6714 = !DILocation(line: 1522, column: 14, scope: !6694)
!6715 = !DILocation(line: 1523, column: 18, scope: !6694)
!6716 = !DILocation(line: 1523, column: 23, scope: !6694)
!6717 = !DILocation(line: 1523, column: 30, scope: !6694)
!6718 = !DILocation(line: 1523, column: 35, scope: !6694)
!6719 = !DILocation(line: 1523, column: 40, scope: !6694)
!6720 = !DILocation(line: 1523, column: 28, scope: !6694)
!6721 = !DILocation(line: 1523, column: 17, scope: !6694)
!6722 = !DILocation(line: 1523, column: 48, scope: !6694)
!6723 = !DILocation(line: 1523, column: 46, scope: !6694)
!6724 = !DILocation(line: 1523, column: 61, scope: !6694)
!6725 = !DILocation(line: 1523, column: 66, scope: !6694)
!6726 = !DILocation(line: 1523, column: 71, scope: !6694)
!6727 = !DILocation(line: 1523, column: 59, scope: !6694)
!6728 = !DILocation(line: 1523, column: 16, scope: !6694)
!6729 = !DILocation(line: 1523, column: 4, scope: !6694)
!6730 = !DILocation(line: 1523, column: 9, scope: !6694)
!6731 = !DILocation(line: 1523, column: 14, scope: !6694)
!6732 = !DILocation(line: 1524, column: 3, scope: !6694)
!6733 = !DILocation(line: 1520, column: 61, scope: !6691)
!6734 = !DILocation(line: 1520, column: 69, scope: !6691)
!6735 = !DILocation(line: 1520, column: 59, scope: !6691)
!6736 = !DILocation(line: 1520, column: 3, scope: !6691)
!6737 = distinct !{!6737, !6692, !6738}
!6738 = !DILocation(line: 1524, column: 3, scope: !6685)
!6739 = !DILocation(line: 1526, column: 16, scope: !6676)
!6740 = !DILocation(line: 1527, column: 2, scope: !6676)
!6741 = !DILocation(line: 1531, column: 2, scope: !6400)
!6742 = !DILocation(line: 1534, column: 6, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6400, file: !1, line: 1534, column: 6)
!6744 = !DILocation(line: 1534, column: 6, scope: !6400)
!6745 = !DILocation(line: 1535, column: 3, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6743, file: !1, line: 1534, column: 16)
!6747 = !DILocation(line: 1536, column: 15, scope: !6746)
!6748 = !DILocation(line: 1536, column: 3, scope: !6746)
!6749 = !DILocation(line: 1537, column: 2, scope: !6746)
!6750 = !DILocation(line: 1539, column: 15, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6743, file: !1, line: 1538, column: 7)
!6752 = !DILocation(line: 1539, column: 3, scope: !6751)
!6753 = !DILocation(line: 1542, column: 10, scope: !6400)
!6754 = !DILocation(line: 1542, column: 15, scope: !6400)
!6755 = !DILocation(line: 1542, column: 20, scope: !6400)
!6756 = !DILocation(line: 1542, column: 26, scope: !6400)
!6757 = !DILocation(line: 1542, column: 31, scope: !6400)
!6758 = !DILocation(line: 1542, column: 36, scope: !6400)
!6759 = !DILocation(line: 1542, column: 42, scope: !6400)
!6760 = !DILocation(line: 1542, column: 47, scope: !6400)
!6761 = !DILocation(line: 1542, column: 52, scope: !6400)
!6762 = !DILocation(line: 1542, column: 59, scope: !6400)
!6763 = !DILocation(line: 1542, column: 57, scope: !6400)
!6764 = !DILocation(line: 1542, column: 80, scope: !6400)
!6765 = !DILocation(line: 1542, column: 85, scope: !6400)
!6766 = !DILocation(line: 1542, column: 90, scope: !6400)
!6767 = !DILocation(line: 1542, column: 2, scope: !6400)
!6768 = !DILocation(line: 1544, column: 6, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6400, file: !1, line: 1544, column: 6)
!6770 = !DILocation(line: 1544, column: 6, scope: !6400)
!6771 = !DILocation(line: 1545, column: 3, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6769, file: !1, line: 1544, column: 16)
!6773 = !DILocation(line: 1546, column: 2, scope: !6772)
!6774 = !DILocation(line: 1548, column: 16, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6400, file: !1, line: 1548, column: 2)
!6776 = !DILocation(line: 1548, column: 20, scope: !6775)
!6777 = !DILocation(line: 1548, column: 36, scope: !6775)
!6778 = !DILocation(line: 1548, column: 14, scope: !6775)
!6779 = !DILocation(line: 1548, column: 7, scope: !6775)
!6780 = !DILocation(line: 1548, column: 43, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6775, file: !1, line: 1548, column: 2)
!6782 = !DILocation(line: 1548, column: 2, scope: !6775)
!6783 = !DILocalVariable(name: "rct", scope: !6784, file: !1, line: 1549, type: !3933)
!6784 = distinct !DILexicalBlock(scope: !6781, file: !1, line: 1548, column: 74)
!6785 = !DILocation(line: 1549, column: 15, scope: !6784)
!6786 = !DILocation(line: 1549, column: 22, scope: !6784)
!6787 = !DILocation(line: 1549, column: 30, scope: !6784)
!6788 = !DILocalVariable(name: "category_id", scope: !6784, file: !1, line: 1550, type: !1582)
!6789 = !DILocation(line: 1550, column: 15, scope: !6784)
!6790 = !DILocation(line: 1550, column: 29, scope: !6784)
!6791 = !DILocation(line: 1550, column: 37, scope: !6784)
!6792 = !DILocalVariable(name: "category_id_draw", scope: !6784, file: !1, line: 1551, type: !1582)
!6793 = !DILocation(line: 1551, column: 15, scope: !6784)
!6794 = !DILocation(line: 1551, column: 34, scope: !6784)
!6795 = !DILocalVariable(name: "category_width", scope: !6784, file: !1, line: 1552, type: !1420)
!6796 = !DILocation(line: 1552, column: 7, scope: !6784)
!6797 = !DILocation(line: 1552, column: 40, scope: !6784)
!6798 = !DILocation(line: 1552, column: 24, scope: !6784)
!6799 = !DILocation(line: 1552, column: 48, scope: !6784)
!6800 = !DILocation(line: 1552, column: 63, scope: !6784)
!6801 = !DILocation(line: 1552, column: 45, scope: !6784)
!6802 = !DILocalVariable(name: "category_draw_len", scope: !6784, file: !1, line: 1553, type: !6803)
!6803 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !6804, line: 46, baseType: !2915)
!6804 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!6805 = !DILocation(line: 1553, column: 10, scope: !6784)
!6806 = !DILocalVariable(name: "is_active", scope: !6784, file: !1, line: 1556, type: !3449)
!6807 = !DILocation(line: 1556, column: 14, scope: !6784)
!6808 = !DILocation(line: 1556, column: 26, scope: !6784)
!6809 = !DILocation(line: 1564, column: 3, scope: !6784)
!6810 = !DILocation(line: 1570, column: 16, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6784, file: !1, line: 1569, column: 3)
!6812 = !DILocation(line: 1570, column: 28, scope: !6811)
!6813 = !DILocation(line: 1570, column: 51, scope: !6811)
!6814 = !DILocation(line: 1570, column: 4, scope: !6811)
!6815 = !DILocation(line: 1571, column: 43, scope: !6811)
!6816 = !DILocation(line: 1571, column: 48, scope: !6811)
!6817 = !DILocation(line: 1571, column: 54, scope: !6811)
!6818 = !DILocation(line: 1571, column: 59, scope: !6811)
!6819 = !DILocation(line: 1571, column: 65, scope: !6811)
!6820 = !DILocation(line: 1571, column: 70, scope: !6811)
!6821 = !DILocation(line: 1571, column: 76, scope: !6811)
!6822 = !DILocation(line: 1571, column: 81, scope: !6811)
!6823 = !DILocation(line: 1572, column: 31, scope: !6811)
!6824 = !DILocation(line: 1572, column: 50, scope: !6811)
!6825 = !DILocation(line: 1572, column: 48, scope: !6811)
!6826 = !DILocation(line: 1571, column: 4, scope: !6811)
!6827 = !DILocation(line: 1575, column: 16, scope: !6811)
!6828 = !DILocation(line: 1575, column: 4, scope: !6811)
!6829 = !DILocation(line: 1576, column: 4, scope: !6811)
!6830 = !DILocation(line: 1577, column: 46, scope: !6811)
!6831 = !DILocation(line: 1577, column: 51, scope: !6811)
!6832 = !DILocation(line: 1577, column: 58, scope: !6811)
!6833 = !DILocation(line: 1577, column: 56, scope: !6811)
!6834 = !DILocation(line: 1577, column: 62, scope: !6811)
!6835 = !DILocation(line: 1577, column: 67, scope: !6811)
!6836 = !DILocation(line: 1577, column: 74, scope: !6811)
!6837 = !DILocation(line: 1577, column: 72, scope: !6811)
!6838 = !DILocation(line: 1577, column: 78, scope: !6811)
!6839 = !DILocation(line: 1577, column: 83, scope: !6811)
!6840 = !DILocation(line: 1577, column: 90, scope: !6811)
!6841 = !DILocation(line: 1577, column: 88, scope: !6811)
!6842 = !DILocation(line: 1577, column: 94, scope: !6811)
!6843 = !DILocation(line: 1577, column: 99, scope: !6811)
!6844 = !DILocation(line: 1577, column: 106, scope: !6811)
!6845 = !DILocation(line: 1577, column: 104, scope: !6811)
!6846 = !DILocation(line: 1578, column: 31, scope: !6811)
!6847 = !DILocation(line: 1577, column: 4, scope: !6811)
!6848 = !DILocation(line: 1580, column: 4, scope: !6811)
!6849 = !DILocation(line: 1581, column: 16, scope: !6811)
!6850 = !DILocation(line: 1581, column: 28, scope: !6811)
!6851 = !DILocation(line: 1581, column: 54, scope: !6811)
!6852 = !DILocation(line: 1581, column: 4, scope: !6811)
!6853 = !DILocation(line: 1582, column: 46, scope: !6811)
!6854 = !DILocation(line: 1582, column: 51, scope: !6811)
!6855 = !DILocation(line: 1582, column: 57, scope: !6811)
!6856 = !DILocation(line: 1582, column: 62, scope: !6811)
!6857 = !DILocation(line: 1582, column: 68, scope: !6811)
!6858 = !DILocation(line: 1582, column: 73, scope: !6811)
!6859 = !DILocation(line: 1582, column: 79, scope: !6811)
!6860 = !DILocation(line: 1582, column: 84, scope: !6811)
!6861 = !DILocation(line: 1583, column: 31, scope: !6811)
!6862 = !DILocation(line: 1584, column: 31, scope: !6811)
!6863 = !DILocation(line: 1584, column: 43, scope: !6811)
!6864 = !DILocation(line: 1584, column: 60, scope: !6811)
!6865 = !DILocation(line: 1582, column: 4, scope: !6811)
!6866 = !DILocation(line: 1585, column: 4, scope: !6811)
!6867 = !DILocation(line: 1587, column: 4, scope: !6811)
!6868 = !DILocation(line: 1591, column: 8, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6784, file: !1, line: 1591, column: 7)
!6870 = !DILocation(line: 1591, column: 7, scope: !6784)
!6871 = !DILocation(line: 1592, column: 16, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6869, file: !1, line: 1591, column: 19)
!6873 = !DILocation(line: 1592, column: 4, scope: !6872)
!6874 = !DILocation(line: 1593, column: 12, scope: !6872)
!6875 = !DILocation(line: 1593, column: 17, scope: !6872)
!6876 = !DILocation(line: 1593, column: 22, scope: !6872)
!6877 = !DILocation(line: 1593, column: 29, scope: !6872)
!6878 = !DILocation(line: 1593, column: 27, scope: !6872)
!6879 = !DILocation(line: 1593, column: 51, scope: !6872)
!6880 = !DILocation(line: 1593, column: 49, scope: !6872)
!6881 = !DILocation(line: 1594, column: 12, scope: !6872)
!6882 = !DILocation(line: 1594, column: 17, scope: !6872)
!6883 = !DILocation(line: 1594, column: 24, scope: !6872)
!6884 = !DILocation(line: 1594, column: 22, scope: !6872)
!6885 = !DILocation(line: 1595, column: 12, scope: !6872)
!6886 = !DILocation(line: 1595, column: 17, scope: !6872)
!6887 = !DILocation(line: 1595, column: 22, scope: !6872)
!6888 = !DILocation(line: 1595, column: 29, scope: !6872)
!6889 = !DILocation(line: 1595, column: 27, scope: !6872)
!6890 = !DILocation(line: 1596, column: 12, scope: !6872)
!6891 = !DILocation(line: 1596, column: 17, scope: !6872)
!6892 = !DILocation(line: 1596, column: 24, scope: !6872)
!6893 = !DILocation(line: 1596, column: 22, scope: !6872)
!6894 = !DILocation(line: 1593, column: 4, scope: !6872)
!6895 = !DILocation(line: 1597, column: 3, scope: !6872)
!6896 = !DILocation(line: 1599, column: 7, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6784, file: !1, line: 1599, column: 7)
!6898 = !DILocation(line: 1599, column: 7, scope: !6784)
!6899 = !DILocation(line: 1600, column: 44, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6897, file: !1, line: 1599, column: 21)
!6901 = !DILocation(line: 1600, column: 52, scope: !6900)
!6902 = !DILocation(line: 1600, column: 70, scope: !6900)
!6903 = !DILocation(line: 1601, column: 44, scope: !6900)
!6904 = !DILocation(line: 1600, column: 24, scope: !6900)
!6905 = !DILocation(line: 1600, column: 22, scope: !6900)
!6906 = !DILocation(line: 1602, column: 3, scope: !6900)
!6907 = !DILocation(line: 1604, column: 16, scope: !6784)
!6908 = !DILocation(line: 1604, column: 24, scope: !6784)
!6909 = !DILocation(line: 1604, column: 29, scope: !6784)
!6910 = !DILocation(line: 1604, column: 36, scope: !6784)
!6911 = !DILocation(line: 1604, column: 34, scope: !6784)
!6912 = !DILocation(line: 1604, column: 48, scope: !6784)
!6913 = !DILocation(line: 1604, column: 53, scope: !6784)
!6914 = !DILocation(line: 1604, column: 60, scope: !6784)
!6915 = !DILocation(line: 1604, column: 58, scope: !6784)
!6916 = !DILocation(line: 1604, column: 3, scope: !6784)
!6917 = !DILocation(line: 1609, column: 15, scope: !6784)
!6918 = !DILocation(line: 1609, column: 3, scope: !6784)
!6919 = !DILocation(line: 1612, column: 12, scope: !6784)
!6920 = !DILocation(line: 1612, column: 20, scope: !6784)
!6921 = !DILocation(line: 1612, column: 38, scope: !6784)
!6922 = !DILocation(line: 1612, column: 3, scope: !6784)
!6923 = !DILocation(line: 1614, column: 3, scope: !6784)
!6924 = !DILocation(line: 1617, column: 7, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6784, file: !1, line: 1617, column: 7)
!6926 = !DILocation(line: 1617, column: 15, scope: !6925)
!6927 = !DILocation(line: 1617, column: 20, scope: !6925)
!6928 = !DILocation(line: 1617, column: 7, scope: !6784)
!6929 = !DILocation(line: 1618, column: 16, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6925, file: !1, line: 1617, column: 29)
!6931 = !DILocation(line: 1618, column: 4, scope: !6930)
!6932 = !DILocation(line: 1619, column: 12, scope: !6930)
!6933 = !DILocation(line: 1619, column: 17, scope: !6930)
!6934 = !DILocation(line: 1619, column: 22, scope: !6930)
!6935 = !DILocation(line: 1619, column: 29, scope: !6930)
!6936 = !DILocation(line: 1619, column: 27, scope: !6930)
!6937 = !DILocation(line: 1619, column: 51, scope: !6930)
!6938 = !DILocation(line: 1619, column: 49, scope: !6930)
!6939 = !DILocation(line: 1620, column: 12, scope: !6930)
!6940 = !DILocation(line: 1620, column: 17, scope: !6930)
!6941 = !DILocation(line: 1620, column: 24, scope: !6930)
!6942 = !DILocation(line: 1620, column: 22, scope: !6930)
!6943 = !DILocation(line: 1621, column: 12, scope: !6930)
!6944 = !DILocation(line: 1621, column: 17, scope: !6930)
!6945 = !DILocation(line: 1621, column: 22, scope: !6930)
!6946 = !DILocation(line: 1621, column: 29, scope: !6930)
!6947 = !DILocation(line: 1621, column: 27, scope: !6930)
!6948 = !DILocation(line: 1622, column: 12, scope: !6930)
!6949 = !DILocation(line: 1622, column: 17, scope: !6930)
!6950 = !DILocation(line: 1622, column: 22, scope: !6930)
!6951 = !DILocation(line: 1619, column: 4, scope: !6930)
!6952 = !DILocation(line: 1623, column: 3, scope: !6930)
!6953 = !DILocation(line: 1624, column: 7, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6784, file: !1, line: 1624, column: 7)
!6955 = !DILocation(line: 1624, column: 15, scope: !6954)
!6956 = !DILocation(line: 1624, column: 20, scope: !6954)
!6957 = !DILocation(line: 1624, column: 7, scope: !6784)
!6958 = !DILocation(line: 1625, column: 16, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6954, file: !1, line: 1624, column: 29)
!6960 = !DILocation(line: 1625, column: 4, scope: !6959)
!6961 = !DILocation(line: 1626, column: 12, scope: !6959)
!6962 = !DILocation(line: 1626, column: 17, scope: !6959)
!6963 = !DILocation(line: 1626, column: 22, scope: !6959)
!6964 = !DILocation(line: 1626, column: 29, scope: !6959)
!6965 = !DILocation(line: 1626, column: 27, scope: !6959)
!6966 = !DILocation(line: 1626, column: 51, scope: !6959)
!6967 = !DILocation(line: 1626, column: 49, scope: !6959)
!6968 = !DILocation(line: 1628, column: 12, scope: !6959)
!6969 = !DILocation(line: 1628, column: 17, scope: !6959)
!6970 = !DILocation(line: 1628, column: 22, scope: !6959)
!6971 = !DILocation(line: 1628, column: 29, scope: !6959)
!6972 = !DILocation(line: 1628, column: 27, scope: !6959)
!6973 = !DILocation(line: 1629, column: 12, scope: !6959)
!6974 = !DILocation(line: 1629, column: 17, scope: !6959)
!6975 = !DILocation(line: 1626, column: 4, scope: !6959)
!6976 = !DILocation(line: 1630, column: 3, scope: !6959)
!6977 = !DILocation(line: 1646, column: 23, scope: !6784)
!6978 = !DILocation(line: 1646, column: 28, scope: !6784)
!6979 = !DILocation(line: 1646, column: 33, scope: !6784)
!6980 = !DILocation(line: 1646, column: 3, scope: !6784)
!6981 = !DILocation(line: 1646, column: 11, scope: !6784)
!6982 = !DILocation(line: 1646, column: 16, scope: !6784)
!6983 = !DILocation(line: 1646, column: 21, scope: !6784)
!6984 = !DILocation(line: 1647, column: 2, scope: !6784)
!6985 = !DILocation(line: 1548, column: 60, scope: !6781)
!6986 = !DILocation(line: 1548, column: 68, scope: !6781)
!6987 = !DILocation(line: 1548, column: 58, scope: !6781)
!6988 = !DILocation(line: 1548, column: 2, scope: !6781)
!6989 = distinct !{!6989, !6782, !6990}
!6990 = !DILocation(line: 1647, column: 2, scope: !6775)
!6991 = !DILocation(line: 1649, column: 2, scope: !6400)
!6992 = !DILocation(line: 1651, column: 14, scope: !6400)
!6993 = !DILocation(line: 1651, column: 2, scope: !6400)
!6994 = !DILocation(line: 1653, column: 14, scope: !6400)
!6995 = !DILocation(line: 1653, column: 2, scope: !6400)
!6996 = !DILocation(line: 1655, column: 6, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6400, file: !1, line: 1655, column: 6)
!6998 = !DILocation(line: 1655, column: 14, scope: !6997)
!6999 = !DILocation(line: 1655, column: 22, scope: !6997)
!7000 = !DILocation(line: 1655, column: 6, scope: !6400)
!7001 = !DILocation(line: 1656, column: 15, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6997, file: !1, line: 1655, column: 28)
!7003 = !DILocation(line: 1656, column: 23, scope: !7002)
!7004 = !DILocation(line: 1656, column: 3, scope: !7002)
!7005 = !DILocation(line: 1657, column: 2, scope: !7002)
!7006 = !DILocation(line: 1660, column: 1, scope: !6400)
!7007 = distinct !DISubprogram(name: "max_ii", scope: !7008, file: !7008, line: 215, type: !7009, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!7008 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7009 = !DISubroutineType(types: !7010)
!7010 = !{!1420, !1420, !1420}
!7011 = !DILocalVariable(name: "a", arg: 1, scope: !7007, file: !7008, line: 215, type: !1420)
!7012 = !DILocation(line: 215, column: 24, scope: !7007)
!7013 = !DILocalVariable(name: "b", arg: 2, scope: !7007, file: !7008, line: 215, type: !1420)
!7014 = !DILocation(line: 215, column: 31, scope: !7007)
!7015 = !DILocation(line: 217, column: 10, scope: !7007)
!7016 = !DILocation(line: 217, column: 14, scope: !7007)
!7017 = !DILocation(line: 217, column: 12, scope: !7007)
!7018 = !DILocation(line: 217, column: 9, scope: !7007)
!7019 = !DILocation(line: 217, column: 19, scope: !7007)
!7020 = !DILocation(line: 217, column: 23, scope: !7007)
!7021 = !DILocation(line: 217, column: 2, scope: !7007)
!7022 = distinct !DISubprogram(name: "iroundf", scope: !7008, file: !7008, line: 163, type: !7023, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!7023 = !DISubroutineType(types: !7024)
!7024 = !{!1420, !1380}
!7025 = !DILocalVariable(name: "a", arg: 1, scope: !7022, file: !7008, line: 163, type: !1380)
!7026 = !DILocation(line: 163, column: 27, scope: !7022)
!7027 = !DILocation(line: 165, column: 21, scope: !7022)
!7028 = !DILocation(line: 165, column: 23, scope: !7022)
!7029 = !DILocation(line: 165, column: 14, scope: !7022)
!7030 = !DILocation(line: 165, column: 9, scope: !7022)
!7031 = !DILocation(line: 165, column: 2, scope: !7022)
!7032 = distinct !DISubprogram(name: "ui_panel_category_draw_tab", scope: !1, file: !1, line: 1331, type: !7033, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!7033 = !DISubroutineType(types: !7034)
!7034 = !{null, !1420, !1380, !1380, !1380, !1380, !1380, !1420, !3449, !3449, !7035}
!7035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!7036 = !DILocalVariable(name: "mode", arg: 1, scope: !7032, file: !1, line: 1331, type: !1420)
!7037 = !DILocation(line: 1331, column: 44, scope: !7032)
!7038 = !DILocalVariable(name: "minx", arg: 2, scope: !7032, file: !1, line: 1331, type: !1380)
!7039 = !DILocation(line: 1331, column: 56, scope: !7032)
!7040 = !DILocalVariable(name: "miny", arg: 3, scope: !7032, file: !1, line: 1331, type: !1380)
!7041 = !DILocation(line: 1331, column: 68, scope: !7032)
!7042 = !DILocalVariable(name: "maxx", arg: 4, scope: !7032, file: !1, line: 1331, type: !1380)
!7043 = !DILocation(line: 1331, column: 80, scope: !7032)
!7044 = !DILocalVariable(name: "maxy", arg: 5, scope: !7032, file: !1, line: 1331, type: !1380)
!7045 = !DILocation(line: 1331, column: 92, scope: !7032)
!7046 = !DILocalVariable(name: "rad", arg: 6, scope: !7032, file: !1, line: 1331, type: !1380)
!7047 = !DILocation(line: 1331, column: 104, scope: !7032)
!7048 = !DILocalVariable(name: "roundboxtype", arg: 7, scope: !7032, file: !1, line: 1332, type: !1420)
!7049 = !DILocation(line: 1332, column: 44, scope: !7032)
!7050 = !DILocalVariable(name: "use_highlight", arg: 8, scope: !7032, file: !1, line: 1333, type: !3449)
!7051 = !DILocation(line: 1333, column: 51, scope: !7032)
!7052 = !DILocalVariable(name: "use_shadow", arg: 9, scope: !7032, file: !1, line: 1333, type: !3449)
!7053 = !DILocation(line: 1333, column: 77, scope: !7032)
!7054 = !DILocalVariable(name: "highlight_fade", arg: 10, scope: !7032, file: !1, line: 1334, type: !7035)
!7055 = !DILocation(line: 1334, column: 60, scope: !7032)
!7056 = !DILocalVariable(name: "vec", scope: !7032, file: !1, line: 1336, type: !2104)
!7057 = !DILocation(line: 1336, column: 8, scope: !7032)
!7058 = !DILocalVariable(name: "a", scope: !7032, file: !1, line: 1341, type: !1420)
!7059 = !DILocation(line: 1341, column: 6, scope: !7032)
!7060 = !DILocation(line: 1344, column: 9, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7032, file: !1, line: 1344, column: 2)
!7062 = !DILocation(line: 1344, column: 7, scope: !7061)
!7063 = !DILocation(line: 1344, column: 14, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7061, file: !1, line: 1344, column: 2)
!7065 = !DILocation(line: 1344, column: 16, scope: !7064)
!7066 = !DILocation(line: 1344, column: 2, scope: !7061)
!7067 = !DILocation(line: 1345, column: 17, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7064, file: !1, line: 1344, column: 26)
!7069 = !DILocation(line: 1345, column: 13, scope: !7068)
!7070 = !DILocation(line: 1345, column: 21, scope: !7068)
!7071 = !DILocation(line: 1345, column: 3, scope: !7068)
!7072 = !DILocation(line: 1346, column: 2, scope: !7068)
!7073 = !DILocation(line: 1344, column: 22, scope: !7064)
!7074 = !DILocation(line: 1344, column: 2, scope: !7064)
!7075 = distinct !{!7075, !7066, !7076}
!7076 = !DILocation(line: 1346, column: 2, scope: !7061)
!7077 = !DILocation(line: 1348, column: 10, scope: !7032)
!7078 = !DILocation(line: 1348, column: 2, scope: !7032)
!7079 = !DILocation(line: 1351, column: 6, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7032, file: !1, line: 1351, column: 6)
!7081 = !DILocation(line: 1351, column: 6, scope: !7032)
!7082 = !DILocation(line: 1352, column: 7, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !1, line: 1352, column: 7)
!7084 = distinct !DILexicalBlock(scope: !7080, file: !1, line: 1351, column: 21)
!7085 = !DILocation(line: 1352, column: 20, scope: !7083)
!7086 = !DILocation(line: 1352, column: 7, scope: !7084)
!7087 = !DILocation(line: 1353, column: 15, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7083, file: !1, line: 1352, column: 40)
!7089 = !DILocation(line: 1353, column: 21, scope: !7088)
!7090 = !DILocation(line: 1353, column: 28, scope: !7088)
!7091 = !DILocation(line: 1353, column: 26, scope: !7088)
!7092 = !DILocation(line: 1353, column: 4, scope: !7088)
!7093 = !DILocation(line: 1354, column: 11, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7088, file: !1, line: 1354, column: 4)
!7095 = !DILocation(line: 1354, column: 9, scope: !7094)
!7096 = !DILocation(line: 1354, column: 16, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7094, file: !1, line: 1354, column: 4)
!7098 = !DILocation(line: 1354, column: 18, scope: !7097)
!7099 = !DILocation(line: 1354, column: 4, scope: !7094)
!7100 = !DILocation(line: 1355, column: 16, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7097, file: !1, line: 1354, column: 28)
!7102 = !DILocation(line: 1355, column: 27, scope: !7101)
!7103 = !DILocation(line: 1355, column: 23, scope: !7101)
!7104 = !DILocation(line: 1355, column: 21, scope: !7101)
!7105 = !DILocation(line: 1355, column: 34, scope: !7101)
!7106 = !DILocation(line: 1355, column: 41, scope: !7101)
!7107 = !DILocation(line: 1355, column: 39, scope: !7101)
!7108 = !DILocation(line: 1355, column: 51, scope: !7101)
!7109 = !DILocation(line: 1355, column: 47, scope: !7101)
!7110 = !DILocation(line: 1355, column: 45, scope: !7101)
!7111 = !DILocation(line: 1355, column: 5, scope: !7101)
!7112 = !DILocation(line: 1356, column: 4, scope: !7101)
!7113 = !DILocation(line: 1354, column: 24, scope: !7097)
!7114 = !DILocation(line: 1354, column: 4, scope: !7097)
!7115 = distinct !{!7115, !7099, !7116}
!7116 = !DILocation(line: 1356, column: 4, scope: !7094)
!7117 = !DILocation(line: 1357, column: 15, scope: !7088)
!7118 = !DILocation(line: 1357, column: 22, scope: !7088)
!7119 = !DILocation(line: 1357, column: 20, scope: !7088)
!7120 = !DILocation(line: 1357, column: 27, scope: !7088)
!7121 = !DILocation(line: 1357, column: 4, scope: !7088)
!7122 = !DILocation(line: 1358, column: 3, scope: !7088)
!7123 = !DILocation(line: 1360, column: 15, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7083, file: !1, line: 1359, column: 8)
!7125 = !DILocation(line: 1360, column: 21, scope: !7124)
!7126 = !DILocation(line: 1360, column: 4, scope: !7124)
!7127 = !DILocation(line: 1364, column: 7, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7084, file: !1, line: 1364, column: 7)
!7129 = !DILocation(line: 1364, column: 20, scope: !7128)
!7130 = !DILocation(line: 1364, column: 7, scope: !7084)
!7131 = !DILocation(line: 1365, column: 15, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7128, file: !1, line: 1364, column: 39)
!7133 = !DILocation(line: 1365, column: 22, scope: !7132)
!7134 = !DILocation(line: 1365, column: 20, scope: !7132)
!7135 = !DILocation(line: 1365, column: 27, scope: !7132)
!7136 = !DILocation(line: 1365, column: 4, scope: !7132)
!7137 = !DILocation(line: 1366, column: 11, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7132, file: !1, line: 1366, column: 4)
!7139 = !DILocation(line: 1366, column: 9, scope: !7138)
!7140 = !DILocation(line: 1366, column: 16, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7138, file: !1, line: 1366, column: 4)
!7142 = !DILocation(line: 1366, column: 18, scope: !7141)
!7143 = !DILocation(line: 1366, column: 4, scope: !7138)
!7144 = !DILocation(line: 1367, column: 16, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7141, file: !1, line: 1366, column: 28)
!7146 = !DILocation(line: 1367, column: 23, scope: !7145)
!7147 = !DILocation(line: 1367, column: 21, scope: !7145)
!7148 = !DILocation(line: 1367, column: 33, scope: !7145)
!7149 = !DILocation(line: 1367, column: 29, scope: !7145)
!7150 = !DILocation(line: 1367, column: 27, scope: !7145)
!7151 = !DILocation(line: 1367, column: 40, scope: !7145)
!7152 = !DILocation(line: 1367, column: 51, scope: !7145)
!7153 = !DILocation(line: 1367, column: 47, scope: !7145)
!7154 = !DILocation(line: 1367, column: 45, scope: !7145)
!7155 = !DILocation(line: 1367, column: 5, scope: !7145)
!7156 = !DILocation(line: 1368, column: 4, scope: !7145)
!7157 = !DILocation(line: 1366, column: 24, scope: !7141)
!7158 = !DILocation(line: 1366, column: 4, scope: !7141)
!7159 = distinct !{!7159, !7143, !7160}
!7160 = !DILocation(line: 1368, column: 4, scope: !7138)
!7161 = !DILocation(line: 1369, column: 15, scope: !7132)
!7162 = !DILocation(line: 1369, column: 21, scope: !7132)
!7163 = !DILocation(line: 1369, column: 28, scope: !7132)
!7164 = !DILocation(line: 1369, column: 26, scope: !7132)
!7165 = !DILocation(line: 1369, column: 4, scope: !7132)
!7166 = !DILocation(line: 1370, column: 3, scope: !7132)
!7167 = !DILocation(line: 1372, column: 15, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7128, file: !1, line: 1371, column: 8)
!7169 = !DILocation(line: 1372, column: 21, scope: !7168)
!7170 = !DILocation(line: 1372, column: 4, scope: !7168)
!7171 = !DILocation(line: 1374, column: 2, scope: !7084)
!7172 = !DILocation(line: 1376, column: 6, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7032, file: !1, line: 1376, column: 6)
!7174 = !DILocation(line: 1376, column: 20, scope: !7173)
!7175 = !DILocation(line: 1376, column: 24, scope: !7173)
!7176 = !DILocation(line: 1376, column: 6, scope: !7032)
!7177 = !DILocation(line: 1377, column: 7, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !1, line: 1377, column: 7)
!7179 = distinct !DILexicalBlock(scope: !7173, file: !1, line: 1376, column: 36)
!7180 = !DILocation(line: 1377, column: 7, scope: !7179)
!7181 = !DILocation(line: 1378, column: 16, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7178, file: !1, line: 1377, column: 23)
!7183 = !DILocation(line: 1378, column: 4, scope: !7182)
!7184 = !DILocation(line: 1379, column: 3, scope: !7182)
!7185 = !DILocation(line: 1380, column: 14, scope: !7179)
!7186 = !DILocation(line: 1380, column: 20, scope: !7179)
!7187 = !DILocation(line: 1380, column: 27, scope: !7179)
!7188 = !DILocation(line: 1380, column: 25, scope: !7179)
!7189 = !DILocation(line: 1380, column: 3, scope: !7179)
!7190 = !DILocation(line: 1381, column: 3, scope: !7179)
!7191 = !DILocation(line: 1382, column: 3, scope: !7179)
!7192 = !DILocation(line: 1386, column: 6, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7032, file: !1, line: 1386, column: 6)
!7194 = !DILocation(line: 1386, column: 19, scope: !7193)
!7195 = !DILocation(line: 1386, column: 6, scope: !7032)
!7196 = !DILocation(line: 1387, column: 14, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7193, file: !1, line: 1386, column: 41)
!7198 = !DILocation(line: 1387, column: 20, scope: !7197)
!7199 = !DILocation(line: 1387, column: 27, scope: !7197)
!7200 = !DILocation(line: 1387, column: 25, scope: !7197)
!7201 = !DILocation(line: 1387, column: 3, scope: !7197)
!7202 = !DILocation(line: 1388, column: 10, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7197, file: !1, line: 1388, column: 3)
!7204 = !DILocation(line: 1388, column: 8, scope: !7203)
!7205 = !DILocation(line: 1388, column: 15, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7203, file: !1, line: 1388, column: 3)
!7207 = !DILocation(line: 1388, column: 17, scope: !7206)
!7208 = !DILocation(line: 1388, column: 3, scope: !7203)
!7209 = !DILocation(line: 1389, column: 15, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7206, file: !1, line: 1388, column: 27)
!7211 = !DILocation(line: 1389, column: 26, scope: !7210)
!7212 = !DILocation(line: 1389, column: 22, scope: !7210)
!7213 = !DILocation(line: 1389, column: 20, scope: !7210)
!7214 = !DILocation(line: 1389, column: 33, scope: !7210)
!7215 = !DILocation(line: 1389, column: 40, scope: !7210)
!7216 = !DILocation(line: 1389, column: 38, scope: !7210)
!7217 = !DILocation(line: 1389, column: 50, scope: !7210)
!7218 = !DILocation(line: 1389, column: 46, scope: !7210)
!7219 = !DILocation(line: 1389, column: 44, scope: !7210)
!7220 = !DILocation(line: 1389, column: 4, scope: !7210)
!7221 = !DILocation(line: 1390, column: 3, scope: !7210)
!7222 = !DILocation(line: 1388, column: 23, scope: !7206)
!7223 = !DILocation(line: 1388, column: 3, scope: !7206)
!7224 = distinct !{!7224, !7208, !7225}
!7225 = !DILocation(line: 1390, column: 3, scope: !7203)
!7226 = !DILocation(line: 1391, column: 14, scope: !7197)
!7227 = !DILocation(line: 1391, column: 21, scope: !7197)
!7228 = !DILocation(line: 1391, column: 19, scope: !7197)
!7229 = !DILocation(line: 1391, column: 26, scope: !7197)
!7230 = !DILocation(line: 1391, column: 3, scope: !7197)
!7231 = !DILocation(line: 1392, column: 2, scope: !7197)
!7232 = !DILocation(line: 1394, column: 14, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7193, file: !1, line: 1393, column: 7)
!7234 = !DILocation(line: 1394, column: 20, scope: !7233)
!7235 = !DILocation(line: 1394, column: 3, scope: !7233)
!7236 = !DILocation(line: 1399, column: 6, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7032, file: !1, line: 1399, column: 6)
!7238 = !DILocation(line: 1399, column: 19, scope: !7237)
!7239 = !DILocation(line: 1399, column: 6, scope: !7032)
!7240 = !DILocation(line: 1400, column: 14, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7237, file: !1, line: 1399, column: 42)
!7242 = !DILocation(line: 1400, column: 21, scope: !7241)
!7243 = !DILocation(line: 1400, column: 19, scope: !7241)
!7244 = !DILocation(line: 1400, column: 26, scope: !7241)
!7245 = !DILocation(line: 1400, column: 3, scope: !7241)
!7246 = !DILocation(line: 1401, column: 10, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7241, file: !1, line: 1401, column: 3)
!7248 = !DILocation(line: 1401, column: 8, scope: !7247)
!7249 = !DILocation(line: 1401, column: 15, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7247, file: !1, line: 1401, column: 3)
!7251 = !DILocation(line: 1401, column: 17, scope: !7250)
!7252 = !DILocation(line: 1401, column: 3, scope: !7247)
!7253 = !DILocation(line: 1402, column: 15, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7250, file: !1, line: 1401, column: 27)
!7255 = !DILocation(line: 1402, column: 22, scope: !7254)
!7256 = !DILocation(line: 1402, column: 20, scope: !7254)
!7257 = !DILocation(line: 1402, column: 32, scope: !7254)
!7258 = !DILocation(line: 1402, column: 28, scope: !7254)
!7259 = !DILocation(line: 1402, column: 26, scope: !7254)
!7260 = !DILocation(line: 1402, column: 39, scope: !7254)
!7261 = !DILocation(line: 1402, column: 50, scope: !7254)
!7262 = !DILocation(line: 1402, column: 46, scope: !7254)
!7263 = !DILocation(line: 1402, column: 44, scope: !7254)
!7264 = !DILocation(line: 1402, column: 4, scope: !7254)
!7265 = !DILocation(line: 1403, column: 3, scope: !7254)
!7266 = !DILocation(line: 1401, column: 23, scope: !7250)
!7267 = !DILocation(line: 1401, column: 3, scope: !7250)
!7268 = distinct !{!7268, !7252, !7269}
!7269 = !DILocation(line: 1403, column: 3, scope: !7247)
!7270 = !DILocation(line: 1404, column: 14, scope: !7241)
!7271 = !DILocation(line: 1404, column: 20, scope: !7241)
!7272 = !DILocation(line: 1404, column: 27, scope: !7241)
!7273 = !DILocation(line: 1404, column: 25, scope: !7241)
!7274 = !DILocation(line: 1404, column: 3, scope: !7241)
!7275 = !DILocation(line: 1405, column: 2, scope: !7241)
!7276 = !DILocation(line: 1407, column: 14, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7237, file: !1, line: 1406, column: 7)
!7278 = !DILocation(line: 1407, column: 20, scope: !7277)
!7279 = !DILocation(line: 1407, column: 3, scope: !7277)
!7280 = !DILocation(line: 1410, column: 2, scope: !7032)
!7281 = !DILocation(line: 1411, column: 1, scope: !7032)
!7282 = distinct !DISubprogram(name: "ui_handler_panel_region", scope: !1, file: !1, line: 1665, type: !7283, scopeLine: 1666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!7283 = !DISubroutineType(types: !7284)
!7284 = !{!1420, !7285, !6360, !3252}
!7285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!7286 = !DILocalVariable(name: "C", arg: 1, scope: !7282, file: !1, line: 1665, type: !7285)
!7287 = !DILocation(line: 1665, column: 39, scope: !7282)
!7288 = !DILocalVariable(name: "event", arg: 2, scope: !7282, file: !1, line: 1665, type: !6360)
!7289 = !DILocation(line: 1665, column: 57, scope: !7282)
!7290 = !DILocalVariable(name: "ar", arg: 3, scope: !7282, file: !1, line: 1665, type: !3252)
!7291 = !DILocation(line: 1665, column: 73, scope: !7282)
!7292 = !DILocalVariable(name: "block", scope: !7282, file: !1, line: 1667, type: !1381)
!7293 = !DILocation(line: 1667, column: 11, scope: !7282)
!7294 = !DILocalVariable(name: "pa", scope: !7282, file: !1, line: 1668, type: !1396)
!7295 = !DILocation(line: 1668, column: 9, scope: !7282)
!7296 = !DILocalVariable(name: "retval", scope: !7282, file: !1, line: 1669, type: !1420)
!7297 = !DILocation(line: 1669, column: 6, scope: !7282)
!7298 = !DILocalVariable(name: "mx", scope: !7282, file: !1, line: 1669, type: !1420)
!7299 = !DILocation(line: 1669, column: 14, scope: !7282)
!7300 = !DILocalVariable(name: "my", scope: !7282, file: !1, line: 1669, type: !1420)
!7301 = !DILocation(line: 1669, column: 18, scope: !7282)
!7302 = !DILocalVariable(name: "has_category_tabs", scope: !7282, file: !1, line: 1670, type: !1615)
!7303 = !DILocation(line: 1670, column: 7, scope: !7282)
!7304 = !DILocation(line: 1670, column: 56, scope: !7282)
!7305 = !DILocation(line: 1670, column: 27, scope: !7282)
!7306 = !DILocation(line: 1672, column: 9, scope: !7282)
!7307 = !DILocation(line: 1674, column: 6, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7282, file: !1, line: 1674, column: 6)
!7309 = !DILocation(line: 1674, column: 6, scope: !7282)
!7310 = !DILocation(line: 1675, column: 7, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7312, file: !1, line: 1675, column: 7)
!7312 = distinct !DILexicalBlock(scope: !7308, file: !1, line: 1674, column: 25)
!7313 = !DILocation(line: 1675, column: 14, scope: !7311)
!7314 = !DILocation(line: 1675, column: 18, scope: !7311)
!7315 = !DILocation(line: 1675, column: 7, scope: !7312)
!7316 = !DILocation(line: 1676, column: 8, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7318, file: !1, line: 1676, column: 8)
!7318 = distinct !DILexicalBlock(scope: !7311, file: !1, line: 1675, column: 31)
!7319 = !DILocation(line: 1676, column: 15, scope: !7317)
!7320 = !DILocation(line: 1676, column: 20, scope: !7317)
!7321 = !DILocation(line: 1676, column: 8, scope: !7318)
!7322 = !DILocalVariable(name: "pc_dyn", scope: !7323, file: !1, line: 1677, type: !3367)
!7323 = distinct !DILexicalBlock(scope: !7317, file: !1, line: 1676, column: 34)
!7324 = !DILocation(line: 1677, column: 23, scope: !7323)
!7325 = !DILocation(line: 1677, column: 66, scope: !7323)
!7326 = !DILocation(line: 1677, column: 70, scope: !7323)
!7327 = !DILocation(line: 1677, column: 32, scope: !7323)
!7328 = !DILocation(line: 1678, column: 9, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7323, file: !1, line: 1678, column: 9)
!7330 = !DILocation(line: 1678, column: 9, scope: !7323)
!7331 = !DILocation(line: 1679, column: 35, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7329, file: !1, line: 1678, column: 17)
!7333 = !DILocation(line: 1679, column: 39, scope: !7332)
!7334 = !DILocation(line: 1679, column: 47, scope: !7332)
!7335 = !DILocation(line: 1679, column: 6, scope: !7332)
!7336 = !DILocation(line: 1680, column: 27, scope: !7332)
!7337 = !DILocation(line: 1680, column: 6, scope: !7332)
!7338 = !DILocation(line: 1683, column: 24, scope: !7332)
!7339 = !DILocation(line: 1683, column: 28, scope: !7332)
!7340 = !DILocation(line: 1683, column: 6, scope: !7332)
!7341 = !DILocation(line: 1685, column: 13, scope: !7332)
!7342 = !DILocation(line: 1686, column: 5, scope: !7332)
!7343 = !DILocation(line: 1687, column: 4, scope: !7323)
!7344 = !DILocation(line: 1688, column: 13, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7317, file: !1, line: 1688, column: 13)
!7346 = !DILocation(line: 1688, column: 13, scope: !7317)
!7347 = !DILocation(line: 1692, column: 9, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7349, file: !1, line: 1692, column: 9)
!7349 = distinct !DILexicalBlock(scope: !7345, file: !1, line: 1688, column: 62)
!7350 = !DILocation(line: 1692, column: 16, scope: !7348)
!7351 = !DILocation(line: 1692, column: 21, scope: !7348)
!7352 = !DILocation(line: 1692, column: 25, scope: !7348)
!7353 = !DILocation(line: 1692, column: 32, scope: !7348)
!7354 = !DILocation(line: 1692, column: 63, scope: !7348)
!7355 = !DILocation(line: 1692, column: 67, scope: !7348)
!7356 = !DILocation(line: 1692, column: 83, scope: !7348)
!7357 = !DILocation(line: 1692, column: 43, scope: !7348)
!7358 = !DILocation(line: 1692, column: 91, scope: !7348)
!7359 = !DILocation(line: 1692, column: 96, scope: !7348)
!7360 = !DILocation(line: 1692, column: 40, scope: !7348)
!7361 = !DILocation(line: 1692, column: 9, scope: !7349)
!7362 = !DILocalVariable(name: "category", scope: !7363, file: !1, line: 1693, type: !1582)
!7363 = distinct !DILexicalBlock(scope: !7348, file: !1, line: 1692, column: 103)
!7364 = !DILocation(line: 1693, column: 18, scope: !7363)
!7365 = !DILocation(line: 1693, column: 58, scope: !7363)
!7366 = !DILocation(line: 1693, column: 29, scope: !7363)
!7367 = !DILocation(line: 1694, column: 10, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7363, file: !1, line: 1694, column: 10)
!7369 = !DILocation(line: 1694, column: 10, scope: !7363)
!7370 = !DILocalVariable(name: "pc_dyn", scope: !7371, file: !1, line: 1695, type: !3367)
!7371 = distinct !DILexicalBlock(scope: !7368, file: !1, line: 1694, column: 28)
!7372 = !DILocation(line: 1695, column: 25, scope: !7371)
!7373 = !DILocation(line: 1695, column: 57, scope: !7371)
!7374 = !DILocation(line: 1695, column: 61, scope: !7371)
!7375 = !DILocation(line: 1695, column: 34, scope: !7371)
!7376 = !DILocation(line: 1696, column: 11, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7371, file: !1, line: 1696, column: 11)
!7378 = !DILocation(line: 1696, column: 11, scope: !7371)
!7379 = !DILocation(line: 1697, column: 18, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7377, file: !1, line: 1696, column: 27)
!7381 = !DILocation(line: 1697, column: 25, scope: !7380)
!7382 = !DILocation(line: 1697, column: 30, scope: !7380)
!7383 = !DILocation(line: 1697, column: 17, scope: !7380)
!7384 = !DILocation(line: 1697, column: 51, scope: !7380)
!7385 = !DILocation(line: 1697, column: 59, scope: !7380)
!7386 = !DILocation(line: 1697, column: 66, scope: !7380)
!7387 = !DILocation(line: 1697, column: 74, scope: !7380)
!7388 = !DILocation(line: 1697, column: 15, scope: !7380)
!7389 = !DILocation(line: 1698, column: 12, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7380, file: !1, line: 1698, column: 12)
!7391 = !DILocation(line: 1698, column: 12, scope: !7380)
!7392 = !DILocation(line: 1701, column: 38, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7390, file: !1, line: 1698, column: 20)
!7394 = !DILocation(line: 1701, column: 42, scope: !7393)
!7395 = !DILocation(line: 1701, column: 50, scope: !7393)
!7396 = !DILocation(line: 1701, column: 9, scope: !7393)
!7397 = !DILocation(line: 1702, column: 30, scope: !7393)
!7398 = !DILocation(line: 1702, column: 9, scope: !7393)
!7399 = !DILocation(line: 1703, column: 8, scope: !7393)
!7400 = !DILocation(line: 1704, column: 7, scope: !7380)
!7401 = !DILocation(line: 1705, column: 6, scope: !7371)
!7402 = !DILocation(line: 1706, column: 13, scope: !7363)
!7403 = !DILocation(line: 1707, column: 5, scope: !7363)
!7404 = !DILocation(line: 1708, column: 4, scope: !7349)
!7405 = !DILocation(line: 1709, column: 3, scope: !7318)
!7406 = !DILocation(line: 1710, column: 2, scope: !7312)
!7407 = !DILocation(line: 1712, column: 6, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7282, file: !1, line: 1712, column: 6)
!7409 = !DILocation(line: 1712, column: 13, scope: !7408)
!7410 = !DILocation(line: 1712, column: 6, scope: !7282)
!7411 = !DILocation(line: 1713, column: 10, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7408, file: !1, line: 1712, column: 37)
!7413 = !DILocation(line: 1713, column: 3, scope: !7412)
!7414 = !DILocation(line: 1716, column: 15, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7282, file: !1, line: 1716, column: 2)
!7416 = !DILocation(line: 1716, column: 19, scope: !7415)
!7417 = !DILocation(line: 1716, column: 28, scope: !7415)
!7418 = !DILocation(line: 1716, column: 13, scope: !7415)
!7419 = !DILocation(line: 1716, column: 7, scope: !7415)
!7420 = !DILocation(line: 1716, column: 34, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7415, file: !1, line: 1716, column: 2)
!7422 = !DILocation(line: 1716, column: 2, scope: !7415)
!7423 = !DILocalVariable(name: "inside", scope: !7424, file: !1, line: 1717, type: !1615)
!7424 = distinct !DILexicalBlock(scope: !7421, file: !1, line: 1716, column: 62)
!7425 = !DILocation(line: 1717, column: 8, scope: !7424)
!7426 = !DILocalVariable(name: "inside_header", scope: !7424, file: !1, line: 1717, type: !1615)
!7427 = !DILocation(line: 1717, column: 24, scope: !7424)
!7428 = !DILocalVariable(name: "inside_scale", scope: !7424, file: !1, line: 1717, type: !1615)
!7429 = !DILocation(line: 1717, column: 47, scope: !7424)
!7430 = !DILocation(line: 1719, column: 8, scope: !7424)
!7431 = !DILocation(line: 1719, column: 15, scope: !7424)
!7432 = !DILocation(line: 1719, column: 6, scope: !7424)
!7433 = !DILocation(line: 1720, column: 8, scope: !7424)
!7434 = !DILocation(line: 1720, column: 15, scope: !7424)
!7435 = !DILocation(line: 1720, column: 6, scope: !7424)
!7436 = !DILocation(line: 1721, column: 22, scope: !7424)
!7437 = !DILocation(line: 1721, column: 26, scope: !7424)
!7438 = !DILocation(line: 1721, column: 3, scope: !7424)
!7439 = !DILocation(line: 1724, column: 8, scope: !7424)
!7440 = !DILocation(line: 1724, column: 15, scope: !7424)
!7441 = !DILocation(line: 1724, column: 6, scope: !7424)
!7442 = !DILocation(line: 1726, column: 8, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7424, file: !1, line: 1726, column: 7)
!7444 = !DILocation(line: 1726, column: 11, scope: !7443)
!7445 = !DILocation(line: 1726, column: 14, scope: !7443)
!7446 = !DILocation(line: 1726, column: 18, scope: !7443)
!7447 = !DILocation(line: 1726, column: 27, scope: !7443)
!7448 = !DILocation(line: 1726, column: 7, scope: !7424)
!7449 = !DILocation(line: 1727, column: 4, scope: !7443)
!7450 = !DILocation(line: 1728, column: 7, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7424, file: !1, line: 1728, column: 7)
!7452 = !DILocation(line: 1728, column: 11, scope: !7451)
!7453 = !DILocation(line: 1728, column: 16, scope: !7451)
!7454 = !DILocation(line: 1728, column: 19, scope: !7451)
!7455 = !DILocation(line: 1728, column: 23, scope: !7451)
!7456 = !DILocation(line: 1728, column: 29, scope: !7451)
!7457 = !DILocation(line: 1728, column: 34, scope: !7451)
!7458 = !DILocation(line: 1728, column: 7, scope: !7424)
!7459 = !DILocation(line: 1729, column: 4, scope: !7451)
!7460 = !DILocation(line: 1732, column: 7, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7424, file: !1, line: 1732, column: 7)
!7462 = !DILocation(line: 1732, column: 11, scope: !7461)
!7463 = !DILocation(line: 1732, column: 16, scope: !7461)
!7464 = !DILocation(line: 1732, column: 7, scope: !7424)
!7465 = !DILocation(line: 1733, column: 8, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7467, file: !1, line: 1733, column: 8)
!7467 = distinct !DILexicalBlock(scope: !7461, file: !1, line: 1732, column: 31)
!7468 = !DILocation(line: 1733, column: 15, scope: !7466)
!7469 = !DILocation(line: 1733, column: 20, scope: !7466)
!7470 = !DILocation(line: 1733, column: 28, scope: !7466)
!7471 = !DILocation(line: 1733, column: 25, scope: !7466)
!7472 = !DILocation(line: 1733, column: 31, scope: !7466)
!7473 = !DILocation(line: 1733, column: 34, scope: !7466)
!7474 = !DILocation(line: 1733, column: 41, scope: !7466)
!7475 = !DILocation(line: 1733, column: 46, scope: !7466)
!7476 = !DILocation(line: 1733, column: 53, scope: !7466)
!7477 = !DILocation(line: 1733, column: 51, scope: !7466)
!7478 = !DILocation(line: 1733, column: 67, scope: !7466)
!7479 = !DILocation(line: 1733, column: 64, scope: !7466)
!7480 = !DILocation(line: 1733, column: 8, scope: !7467)
!7481 = !DILocation(line: 1734, column: 19, scope: !7466)
!7482 = !DILocation(line: 1734, column: 5, scope: !7466)
!7483 = !DILocation(line: 1735, column: 3, scope: !7467)
!7484 = !DILocation(line: 1736, column: 12, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7461, file: !1, line: 1736, column: 12)
!7486 = !DILocation(line: 1736, column: 19, scope: !7485)
!7487 = !DILocation(line: 1736, column: 24, scope: !7485)
!7488 = !DILocation(line: 1736, column: 31, scope: !7485)
!7489 = !DILocation(line: 1736, column: 29, scope: !7485)
!7490 = !DILocation(line: 1736, column: 34, scope: !7485)
!7491 = !DILocation(line: 1736, column: 37, scope: !7485)
!7492 = !DILocation(line: 1736, column: 44, scope: !7485)
!7493 = !DILocation(line: 1736, column: 49, scope: !7485)
!7494 = !DILocation(line: 1736, column: 56, scope: !7485)
!7495 = !DILocation(line: 1736, column: 54, scope: !7485)
!7496 = !DILocation(line: 1736, column: 12, scope: !7461)
!7497 = !DILocation(line: 1738, column: 3, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7485, file: !1, line: 1736, column: 60)
!7499 = !DILocation(line: 1739, column: 13, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7485, file: !1, line: 1739, column: 12)
!7501 = !DILocation(line: 1739, column: 20, scope: !7500)
!7502 = !DILocation(line: 1739, column: 25, scope: !7500)
!7503 = !DILocation(line: 1739, column: 33, scope: !7500)
!7504 = !DILocation(line: 1739, column: 30, scope: !7500)
!7505 = !DILocation(line: 1739, column: 37, scope: !7500)
!7506 = !DILocation(line: 1739, column: 41, scope: !7500)
!7507 = !DILocation(line: 1739, column: 48, scope: !7500)
!7508 = !DILocation(line: 1739, column: 53, scope: !7500)
!7509 = !DILocation(line: 1739, column: 60, scope: !7500)
!7510 = !DILocation(line: 1739, column: 58, scope: !7500)
!7511 = !DILocation(line: 1739, column: 74, scope: !7500)
!7512 = !DILocation(line: 1739, column: 71, scope: !7500)
!7513 = !DILocation(line: 1739, column: 12, scope: !7485)
!7514 = !DILocation(line: 1740, column: 18, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7500, file: !1, line: 1739, column: 79)
!7516 = !DILocation(line: 1741, column: 3, scope: !7515)
!7517 = !DILocation(line: 1742, column: 14, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7500, file: !1, line: 1742, column: 12)
!7519 = !DILocation(line: 1742, column: 18, scope: !7518)
!7520 = !DILocation(line: 1742, column: 23, scope: !7518)
!7521 = !DILocation(line: 1742, column: 12, scope: !7500)
!7522 = !DILocation(line: 1744, column: 8, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7524, file: !1, line: 1744, column: 8)
!7524 = distinct !DILexicalBlock(scope: !7518, file: !1, line: 1742, column: 39)
!7525 = !DILocation(line: 1744, column: 12, scope: !7523)
!7526 = !DILocation(line: 1744, column: 20, scope: !7523)
!7527 = !DILocation(line: 1744, column: 8, scope: !7524)
!7528 = !DILocation(line: 1745, column: 9, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7530, file: !1, line: 1745, column: 9)
!7530 = distinct !DILexicalBlock(scope: !7523, file: !1, line: 1744, column: 36)
!7531 = !DILocation(line: 1745, column: 16, scope: !7529)
!7532 = !DILocation(line: 1745, column: 21, scope: !7529)
!7533 = !DILocation(line: 1745, column: 28, scope: !7529)
!7534 = !DILocation(line: 1745, column: 26, scope: !7529)
!7535 = !DILocation(line: 1745, column: 42, scope: !7529)
!7536 = !DILocation(line: 1745, column: 39, scope: !7529)
!7537 = !DILocation(line: 1745, column: 9, scope: !7530)
!7538 = !DILocation(line: 1746, column: 10, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7529, file: !1, line: 1746, column: 10)
!7540 = !DILocation(line: 1746, column: 17, scope: !7539)
!7541 = !DILocation(line: 1746, column: 22, scope: !7539)
!7542 = !DILocation(line: 1746, column: 29, scope: !7539)
!7543 = !DILocation(line: 1746, column: 27, scope: !7539)
!7544 = !DILocation(line: 1746, column: 43, scope: !7539)
!7545 = !DILocation(line: 1746, column: 40, scope: !7539)
!7546 = !DILocation(line: 1746, column: 10, scope: !7529)
!7547 = !DILocation(line: 1747, column: 20, scope: !7539)
!7548 = !DILocation(line: 1747, column: 7, scope: !7539)
!7549 = !DILocation(line: 1748, column: 4, scope: !7530)
!7550 = !DILocation(line: 1749, column: 8, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7524, file: !1, line: 1749, column: 8)
!7552 = !DILocation(line: 1749, column: 15, scope: !7551)
!7553 = !DILocation(line: 1749, column: 20, scope: !7551)
!7554 = !DILocation(line: 1749, column: 28, scope: !7551)
!7555 = !DILocation(line: 1749, column: 25, scope: !7551)
!7556 = !DILocation(line: 1749, column: 31, scope: !7551)
!7557 = !DILocation(line: 1749, column: 34, scope: !7551)
!7558 = !DILocation(line: 1749, column: 41, scope: !7551)
!7559 = !DILocation(line: 1749, column: 46, scope: !7551)
!7560 = !DILocation(line: 1749, column: 54, scope: !7551)
!7561 = !DILocation(line: 1749, column: 51, scope: !7551)
!7562 = !DILocation(line: 1749, column: 8, scope: !7524)
!7563 = !DILocation(line: 1750, column: 9, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7551, file: !1, line: 1750, column: 9)
!7565 = !DILocation(line: 1750, column: 16, scope: !7564)
!7566 = !DILocation(line: 1750, column: 21, scope: !7564)
!7567 = !DILocation(line: 1750, column: 29, scope: !7564)
!7568 = !DILocation(line: 1750, column: 26, scope: !7564)
!7569 = !DILocation(line: 1750, column: 32, scope: !7564)
!7570 = !DILocation(line: 1750, column: 35, scope: !7564)
!7571 = !DILocation(line: 1750, column: 42, scope: !7564)
!7572 = !DILocation(line: 1750, column: 47, scope: !7564)
!7573 = !DILocation(line: 1750, column: 54, scope: !7564)
!7574 = !DILocation(line: 1750, column: 52, scope: !7564)
!7575 = !DILocation(line: 1750, column: 68, scope: !7564)
!7576 = !DILocation(line: 1750, column: 65, scope: !7564)
!7577 = !DILocation(line: 1750, column: 9, scope: !7551)
!7578 = !DILocation(line: 1751, column: 13, scope: !7564)
!7579 = !DILocation(line: 1751, column: 6, scope: !7564)
!7580 = !DILocation(line: 1752, column: 3, scope: !7524)
!7581 = !DILocation(line: 1755, column: 8, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7424, file: !1, line: 1755, column: 7)
!7583 = !DILocation(line: 1755, column: 15, scope: !7582)
!7584 = !DILocation(line: 1755, column: 18, scope: !7582)
!7585 = !DILocation(line: 1755, column: 33, scope: !7582)
!7586 = !DILocation(line: 1755, column: 36, scope: !7582)
!7587 = !DILocation(line: 1755, column: 43, scope: !7582)
!7588 = !DILocation(line: 1755, column: 47, scope: !7582)
!7589 = !DILocation(line: 1755, column: 7, scope: !7424)
!7590 = !DILocation(line: 1756, column: 8, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !1, line: 1756, column: 8)
!7592 = distinct !DILexicalBlock(scope: !7582, file: !1, line: 1755, column: 60)
!7593 = !DILocation(line: 1756, column: 15, scope: !7591)
!7594 = !DILocation(line: 1756, column: 20, scope: !7591)
!7595 = !DILocation(line: 1756, column: 28, scope: !7591)
!7596 = !DILocation(line: 1756, column: 32, scope: !7591)
!7597 = !DILocation(line: 1756, column: 8, scope: !7592)
!7598 = !DILocation(line: 1758, column: 9, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !1, line: 1758, column: 9)
!7600 = distinct !DILexicalBlock(scope: !7591, file: !1, line: 1756, column: 105)
!7601 = !DILocation(line: 1758, column: 13, scope: !7599)
!7602 = !DILocation(line: 1758, column: 18, scope: !7599)
!7603 = !DILocation(line: 1758, column: 9, scope: !7600)
!7604 = !DILocation(line: 1759, column: 11, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7606, file: !1, line: 1759, column: 10)
!7606 = distinct !DILexicalBlock(scope: !7599, file: !1, line: 1758, column: 33)
!7607 = !DILocation(line: 1759, column: 18, scope: !7605)
!7608 = !DILocation(line: 1759, column: 23, scope: !7605)
!7609 = !DILocation(line: 1759, column: 31, scope: !7605)
!7610 = !DILocation(line: 1759, column: 28, scope: !7605)
!7611 = !DILocation(line: 1759, column: 35, scope: !7605)
!7612 = !DILocation(line: 1759, column: 39, scope: !7605)
!7613 = !DILocation(line: 1759, column: 46, scope: !7605)
!7614 = !DILocation(line: 1759, column: 51, scope: !7605)
!7615 = !DILocation(line: 1759, column: 58, scope: !7605)
!7616 = !DILocation(line: 1759, column: 56, scope: !7605)
!7617 = !DILocation(line: 1759, column: 72, scope: !7605)
!7618 = !DILocation(line: 1759, column: 69, scope: !7605)
!7619 = !DILocation(line: 1759, column: 10, scope: !7606)
!7620 = !DILocation(line: 1760, column: 30, scope: !7605)
!7621 = !DILocation(line: 1760, column: 33, scope: !7605)
!7622 = !DILocation(line: 1760, column: 40, scope: !7605)
!7623 = !DILocation(line: 1760, column: 44, scope: !7605)
!7624 = !DILocation(line: 1760, column: 48, scope: !7605)
!7625 = !DILocation(line: 1760, column: 55, scope: !7605)
!7626 = !DILocation(line: 1760, column: 61, scope: !7605)
!7627 = !DILocation(line: 1760, column: 68, scope: !7605)
!7628 = !DILocation(line: 1760, column: 74, scope: !7605)
!7629 = !DILocation(line: 1760, column: 81, scope: !7605)
!7630 = !DILocation(line: 1760, column: 7, scope: !7605)
!7631 = !DILocation(line: 1761, column: 5, scope: !7606)
!7632 = !DILocation(line: 1763, column: 29, scope: !7599)
!7633 = !DILocation(line: 1763, column: 32, scope: !7599)
!7634 = !DILocation(line: 1763, column: 39, scope: !7599)
!7635 = !DILocation(line: 1763, column: 43, scope: !7599)
!7636 = !DILocation(line: 1763, column: 47, scope: !7599)
!7637 = !DILocation(line: 1763, column: 54, scope: !7599)
!7638 = !DILocation(line: 1763, column: 60, scope: !7599)
!7639 = !DILocation(line: 1763, column: 67, scope: !7599)
!7640 = !DILocation(line: 1763, column: 73, scope: !7599)
!7641 = !DILocation(line: 1763, column: 80, scope: !7599)
!7642 = !DILocation(line: 1763, column: 6, scope: !7599)
!7643 = !DILocation(line: 1765, column: 12, scope: !7600)
!7644 = !DILocation(line: 1766, column: 5, scope: !7600)
!7645 = !DILocation(line: 1768, column: 3, scope: !7592)
!7646 = !DILocation(line: 1771, column: 27, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7424, file: !1, line: 1771, column: 7)
!7648 = !DILocation(line: 1771, column: 7, scope: !7647)
!7649 = !DILocation(line: 1771, column: 7, scope: !7424)
!7650 = !DILocation(line: 1772, column: 4, scope: !7647)
!7651 = !DILocation(line: 1774, column: 7, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7424, file: !1, line: 1774, column: 7)
!7653 = !DILocation(line: 1774, column: 14, scope: !7652)
!7654 = !DILocation(line: 1774, column: 17, scope: !7652)
!7655 = !DILocation(line: 1774, column: 7, scope: !7424)
!7656 = !DILocation(line: 1776, column: 8, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !1, line: 1776, column: 8)
!7658 = distinct !DILexicalBlock(scope: !7652, file: !1, line: 1774, column: 32)
!7659 = !DILocation(line: 1776, column: 15, scope: !7657)
!7660 = !DILocation(line: 1776, column: 19, scope: !7657)
!7661 = !DILocation(line: 1776, column: 8, scope: !7658)
!7662 = !DILocation(line: 1779, column: 9, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !1, line: 1779, column: 9)
!7664 = distinct !DILexicalBlock(scope: !7657, file: !1, line: 1776, column: 32)
!7665 = !DILocation(line: 1779, column: 9, scope: !7664)
!7666 = !DILocation(line: 1780, column: 10, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7668, file: !1, line: 1780, column: 10)
!7668 = distinct !DILexicalBlock(scope: !7663, file: !1, line: 1779, column: 46)
!7669 = !DILocation(line: 1780, column: 10, scope: !7668)
!7670 = !DILocation(line: 1781, column: 30, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7667, file: !1, line: 1780, column: 25)
!7672 = !DILocation(line: 1781, column: 33, scope: !7671)
!7673 = !DILocation(line: 1781, column: 40, scope: !7671)
!7674 = !DILocation(line: 1781, column: 44, scope: !7671)
!7675 = !DILocation(line: 1781, column: 56, scope: !7671)
!7676 = !DILocation(line: 1781, column: 63, scope: !7671)
!7677 = !DILocation(line: 1781, column: 69, scope: !7671)
!7678 = !DILocation(line: 1781, column: 76, scope: !7671)
!7679 = !DILocation(line: 1781, column: 7, scope: !7671)
!7680 = !DILocation(line: 1782, column: 14, scope: !7671)
!7681 = !DILocation(line: 1783, column: 7, scope: !7671)
!7682 = !DILocation(line: 1785, column: 5, scope: !7668)
!7683 = !DILocation(line: 1786, column: 14, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7663, file: !1, line: 1786, column: 14)
!7685 = !DILocation(line: 1786, column: 21, scope: !7684)
!7686 = !DILocation(line: 1786, column: 26, scope: !7684)
!7687 = !DILocation(line: 1786, column: 14, scope: !7663)
!7688 = !DILocation(line: 1788, column: 13, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7684, file: !1, line: 1786, column: 40)
!7690 = !DILocation(line: 1790, column: 10, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7689, file: !1, line: 1790, column: 10)
!7692 = !DILocation(line: 1790, column: 10, scope: !7689)
!7693 = !DILocation(line: 1791, column: 30, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7691, file: !1, line: 1790, column: 25)
!7695 = !DILocation(line: 1791, column: 33, scope: !7694)
!7696 = !DILocation(line: 1791, column: 40, scope: !7694)
!7697 = !DILocation(line: 1791, column: 44, scope: !7694)
!7698 = !DILocation(line: 1791, column: 51, scope: !7694)
!7699 = !DILocation(line: 1791, column: 58, scope: !7694)
!7700 = !DILocation(line: 1791, column: 64, scope: !7694)
!7701 = !DILocation(line: 1791, column: 71, scope: !7694)
!7702 = !DILocation(line: 1791, column: 7, scope: !7694)
!7703 = !DILocation(line: 1792, column: 14, scope: !7694)
!7704 = !DILocation(line: 1793, column: 7, scope: !7694)
!7705 = !DILocation(line: 1795, column: 15, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7691, file: !1, line: 1795, column: 15)
!7707 = !DILocation(line: 1795, column: 28, scope: !7706)
!7708 = !DILocation(line: 1795, column: 33, scope: !7706)
!7709 = !DILocation(line: 1795, column: 37, scope: !7706)
!7710 = !DILocation(line: 1795, column: 42, scope: !7706)
!7711 = !DILocation(line: 1795, column: 15, scope: !7691)
!7712 = !DILocation(line: 1796, column: 28, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7706, file: !1, line: 1795, column: 57)
!7714 = !DILocation(line: 1796, column: 31, scope: !7713)
!7715 = !DILocation(line: 1796, column: 7, scope: !7713)
!7716 = !DILocation(line: 1797, column: 14, scope: !7713)
!7717 = !DILocation(line: 1798, column: 7, scope: !7713)
!7718 = !DILocation(line: 1801, column: 5, scope: !7689)
!7719 = !DILocation(line: 1802, column: 14, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7684, file: !1, line: 1802, column: 14)
!7721 = !DILocation(line: 1802, column: 21, scope: !7720)
!7722 = !DILocation(line: 1802, column: 26, scope: !7720)
!7723 = !DILocation(line: 1802, column: 14, scope: !7684)
!7724 = !DILocation(line: 1803, column: 10, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !1, line: 1803, column: 10)
!7726 = distinct !DILexicalBlock(scope: !7720, file: !1, line: 1802, column: 41)
!7727 = !DILocation(line: 1803, column: 10, scope: !7726)
!7728 = !DILocation(line: 1804, column: 21, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7725, file: !1, line: 1803, column: 25)
!7730 = !DILocation(line: 1804, column: 24, scope: !7729)
!7731 = !DILocation(line: 1804, column: 28, scope: !7729)
!7732 = !DILocation(line: 1804, column: 35, scope: !7729)
!7733 = !DILocation(line: 1804, column: 7, scope: !7729)
!7734 = !DILocation(line: 1805, column: 14, scope: !7729)
!7735 = !DILocation(line: 1806, column: 7, scope: !7729)
!7736 = !DILocation(line: 1808, column: 5, scope: !7726)
!7737 = !DILocation(line: 1809, column: 14, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7720, file: !1, line: 1809, column: 14)
!7739 = !DILocation(line: 1809, column: 21, scope: !7738)
!7740 = !DILocation(line: 1809, column: 26, scope: !7738)
!7741 = !DILocation(line: 1809, column: 14, scope: !7720)
!7742 = !DILocation(line: 1818, column: 5, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7738, file: !1, line: 1809, column: 37)
!7744 = !DILocation(line: 1819, column: 14, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7738, file: !1, line: 1819, column: 14)
!7746 = !DILocation(line: 1819, column: 21, scope: !7745)
!7747 = !DILocation(line: 1819, column: 26, scope: !7745)
!7748 = !DILocation(line: 1819, column: 40, scope: !7745)
!7749 = !DILocation(line: 1819, column: 43, scope: !7745)
!7750 = !DILocation(line: 1819, column: 50, scope: !7745)
!7751 = !DILocation(line: 1819, column: 55, scope: !7745)
!7752 = !DILocation(line: 1819, column: 14, scope: !7738)
!7753 = !DILocation(line: 1847, column: 5, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7745, file: !1, line: 1819, column: 68)
!7755 = !DILocation(line: 1848, column: 4, scope: !7664)
!7756 = !DILocation(line: 1849, column: 3, scope: !7658)
!7757 = !DILocation(line: 1850, column: 2, scope: !7424)
!7758 = !DILocation(line: 1716, column: 49, scope: !7421)
!7759 = !DILocation(line: 1716, column: 56, scope: !7421)
!7760 = !DILocation(line: 1716, column: 47, scope: !7421)
!7761 = !DILocation(line: 1716, column: 2, scope: !7421)
!7762 = distinct !{!7762, !7422, !7763}
!7763 = !DILocation(line: 1850, column: 2, scope: !7415)
!7764 = !DILocation(line: 1852, column: 9, scope: !7282)
!7765 = !DILocation(line: 1852, column: 2, scope: !7282)
!7766 = !DILocation(line: 1853, column: 1, scope: !7282)
!7767 = distinct !DISubprogram(name: "ui_handle_panel_header", scope: !1, file: !1, line: 1130, type: !7768, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!7768 = !DISubroutineType(types: !7769)
!7769 = !{null, !4668, !1381, !1420, !1420, !1420, !1488, !1488}
!7770 = !DILocalVariable(name: "C", arg: 1, scope: !7767, file: !1, line: 1130, type: !4668)
!7771 = !DILocation(line: 1130, column: 52, scope: !7767)
!7772 = !DILocalVariable(name: "block", arg: 2, scope: !7767, file: !1, line: 1130, type: !1381)
!7773 = !DILocation(line: 1130, column: 64, scope: !7767)
!7774 = !DILocalVariable(name: "mx", arg: 3, scope: !7767, file: !1, line: 1130, type: !1420)
!7775 = !DILocation(line: 1130, column: 75, scope: !7767)
!7776 = !DILocalVariable(name: "my", arg: 4, scope: !7767, file: !1, line: 1130, type: !1420)
!7777 = !DILocation(line: 1130, column: 83, scope: !7767)
!7778 = !DILocalVariable(name: "event", arg: 5, scope: !7767, file: !1, line: 1130, type: !1420)
!7779 = !DILocation(line: 1130, column: 91, scope: !7767)
!7780 = !DILocalVariable(name: "ctrl", arg: 6, scope: !7767, file: !1, line: 1130, type: !1488)
!7781 = !DILocation(line: 1130, column: 104, scope: !7767)
!7782 = !DILocalVariable(name: "shift", arg: 7, scope: !7767, file: !1, line: 1130, type: !1488)
!7783 = !DILocation(line: 1130, column: 116, scope: !7767)
!7784 = !DILocalVariable(name: "sa", scope: !7767, file: !1, line: 1132, type: !3338)
!7785 = !DILocation(line: 1132, column: 11, scope: !7767)
!7786 = !DILocation(line: 1132, column: 28, scope: !7767)
!7787 = !DILocation(line: 1132, column: 16, scope: !7767)
!7788 = !DILocalVariable(name: "ar", scope: !7767, file: !1, line: 1133, type: !3252)
!7789 = !DILocation(line: 1133, column: 11, scope: !7767)
!7790 = !DILocation(line: 1133, column: 30, scope: !7767)
!7791 = !DILocation(line: 1133, column: 16, scope: !7767)
!7792 = !DILocalVariable(name: "pa", scope: !7767, file: !1, line: 1134, type: !1396)
!7793 = !DILocation(line: 1134, column: 9, scope: !7767)
!7794 = !DILocalVariable(name: "show_pin", scope: !7767, file: !1, line: 1136, type: !3449)
!7795 = !DILocation(line: 1136, column: 13, scope: !7767)
!7796 = !DILocation(line: 1136, column: 53, scope: !7767)
!7797 = !DILocation(line: 1136, column: 24, scope: !7767)
!7798 = !DILocation(line: 1136, column: 57, scope: !7767)
!7799 = !DILocation(line: 1136, column: 61, scope: !7767)
!7800 = !DILocation(line: 1136, column: 68, scope: !7767)
!7801 = !DILocation(line: 1136, column: 75, scope: !7767)
!7802 = !DILocation(line: 1136, column: 80, scope: !7767)
!7803 = !DILocation(line: 0, scope: !7767)
!7804 = !DILocalVariable(name: "align", scope: !7767, file: !1, line: 1141, type: !1420)
!7805 = !DILocation(line: 1141, column: 6, scope: !7767)
!7806 = !DILocation(line: 1141, column: 28, scope: !7767)
!7807 = !DILocation(line: 1141, column: 32, scope: !7767)
!7808 = !DILocation(line: 1141, column: 14, scope: !7767)
!7809 = !DILocalVariable(name: "button", scope: !7767, file: !1, line: 1141, type: !1420)
!7810 = !DILocation(line: 1141, column: 37, scope: !7767)
!7811 = !DILocalVariable(name: "rect_drag", scope: !7767, file: !1, line: 1143, type: !1511)
!7812 = !DILocation(line: 1143, column: 7, scope: !7767)
!7813 = !DILocalVariable(name: "rect_pin", scope: !7767, file: !1, line: 1143, type: !1511)
!7814 = !DILocation(line: 1143, column: 18, scope: !7767)
!7815 = !DILocalVariable(name: "rect_leftmost", scope: !7767, file: !1, line: 1144, type: !1380)
!7816 = !DILocation(line: 1144, column: 8, scope: !7767)
!7817 = !DILocation(line: 1148, column: 14, scope: !7767)
!7818 = !DILocation(line: 1148, column: 21, scope: !7767)
!7819 = !DILocation(line: 1149, column: 19, scope: !7767)
!7820 = !DILocation(line: 1149, column: 26, scope: !7767)
!7821 = !DILocation(line: 1149, column: 31, scope: !7767)
!7822 = !DILocation(line: 1149, column: 39, scope: !7767)
!7823 = !DILocation(line: 1149, column: 48, scope: !7767)
!7824 = !DILocation(line: 1149, column: 36, scope: !7767)
!7825 = !DILocation(line: 1149, column: 12, scope: !7767)
!7826 = !DILocation(line: 1149, column: 17, scope: !7767)
!7827 = !DILocation(line: 1150, column: 13, scope: !7767)
!7828 = !DILocation(line: 1151, column: 6, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7767, file: !1, line: 1151, column: 6)
!7830 = !DILocation(line: 1151, column: 6, scope: !7767)
!7831 = !DILocation(line: 1152, column: 34, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7829, file: !1, line: 1151, column: 16)
!7833 = !DILocation(line: 1152, column: 33, scope: !7832)
!7834 = !DILocation(line: 1152, column: 3, scope: !7832)
!7835 = !DILocation(line: 1153, column: 2, scope: !7832)
!7836 = !DILocation(line: 1154, column: 27, scope: !7767)
!7837 = !DILocation(line: 1154, column: 16, scope: !7767)
!7838 = !DILocation(line: 1161, column: 6, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7767, file: !1, line: 1161, column: 6)
!7840 = !DILocation(line: 1161, column: 12, scope: !7839)
!7841 = !DILocation(line: 1161, column: 6, scope: !7767)
!7842 = !DILocation(line: 1162, column: 10, scope: !7839)
!7843 = !DILocation(line: 1162, column: 3, scope: !7839)
!7844 = !DILocation(line: 1163, column: 11, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7839, file: !1, line: 1163, column: 11)
!7846 = !DILocation(line: 1163, column: 17, scope: !7845)
!7847 = !DILocation(line: 1163, column: 11, scope: !7839)
!7848 = !DILocation(line: 1164, column: 10, scope: !7845)
!7849 = !DILocation(line: 1164, column: 3, scope: !7845)
!7850 = !DILocation(line: 1165, column: 11, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7845, file: !1, line: 1165, column: 11)
!7852 = !DILocation(line: 1165, column: 45, scope: !7851)
!7853 = !DILocation(line: 1165, column: 48, scope: !7851)
!7854 = !DILocation(line: 1165, column: 11, scope: !7845)
!7855 = !DILocation(line: 1166, column: 3, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7851, file: !1, line: 1165, column: 55)
!7857 = !DILocation(line: 1166, column: 10, scope: !7856)
!7858 = !DILocation(line: 1166, column: 17, scope: !7856)
!7859 = !DILocation(line: 1166, column: 22, scope: !7856)
!7860 = !DILocation(line: 1167, column: 10, scope: !7856)
!7861 = !DILocation(line: 1168, column: 2, scope: !7856)
!7862 = !DILocation(line: 1169, column: 11, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7851, file: !1, line: 1169, column: 11)
!7864 = !DILocation(line: 1169, column: 18, scope: !7863)
!7865 = !DILocation(line: 1169, column: 25, scope: !7863)
!7866 = !DILocation(line: 1169, column: 30, scope: !7863)
!7867 = !DILocation(line: 1169, column: 11, scope: !7851)
!7868 = !DILocation(line: 1170, column: 7, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7870, file: !1, line: 1170, column: 7)
!7870 = distinct !DILexicalBlock(scope: !7863, file: !1, line: 1169, column: 45)
!7871 = !DILocation(line: 1170, column: 13, scope: !7869)
!7872 = !DILocation(line: 1170, column: 20, scope: !7869)
!7873 = !DILocation(line: 1170, column: 25, scope: !7869)
!7874 = !DILocation(line: 1170, column: 10, scope: !7869)
!7875 = !DILocation(line: 1170, column: 7, scope: !7870)
!7876 = !DILocation(line: 1170, column: 38, scope: !7869)
!7877 = !DILocation(line: 1170, column: 31, scope: !7869)
!7878 = !DILocation(line: 1171, column: 2, scope: !7870)
!7879 = !DILocation(line: 1172, column: 11, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7863, file: !1, line: 1172, column: 11)
!7881 = !DILocation(line: 1172, column: 18, scope: !7880)
!7882 = !DILocation(line: 1172, column: 25, scope: !7880)
!7883 = !DILocation(line: 1172, column: 33, scope: !7880)
!7884 = !DILocation(line: 1172, column: 11, scope: !7863)
!7885 = !DILocation(line: 1174, column: 7, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7887, file: !1, line: 1174, column: 7)
!7887 = distinct !DILexicalBlock(scope: !7880, file: !1, line: 1172, column: 49)
!7888 = !DILocation(line: 1174, column: 13, scope: !7886)
!7889 = !DILocation(line: 1174, column: 20, scope: !7886)
!7890 = !DILocation(line: 1174, column: 25, scope: !7886)
!7891 = !DILocation(line: 1174, column: 30, scope: !7886)
!7892 = !DILocation(line: 1174, column: 36, scope: !7886)
!7893 = !DILocation(line: 1174, column: 34, scope: !7886)
!7894 = !DILocation(line: 1174, column: 10, scope: !7886)
!7895 = !DILocation(line: 1174, column: 7, scope: !7887)
!7896 = !DILocation(line: 1174, column: 53, scope: !7886)
!7897 = !DILocation(line: 1174, column: 46, scope: !7886)
!7898 = !DILocation(line: 1176, column: 2, scope: !7887)
!7899 = !DILocation(line: 1177, column: 11, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7880, file: !1, line: 1177, column: 11)
!7901 = !DILocation(line: 1177, column: 16, scope: !7900)
!7902 = !DILocation(line: 1177, column: 14, scope: !7900)
!7903 = !DILocation(line: 1177, column: 11, scope: !7880)
!7904 = !DILocation(line: 1178, column: 10, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7900, file: !1, line: 1177, column: 31)
!7906 = !DILocation(line: 1179, column: 2, scope: !7905)
!7907 = !DILocation(line: 1181, column: 6, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7767, file: !1, line: 1181, column: 6)
!7909 = !DILocation(line: 1181, column: 6, scope: !7767)
!7910 = !DILocation(line: 1182, column: 7, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !1, line: 1182, column: 7)
!7912 = distinct !DILexicalBlock(scope: !7908, file: !1, line: 1181, column: 14)
!7913 = !DILocation(line: 1182, column: 14, scope: !7911)
!7914 = !DILocation(line: 1182, column: 7, scope: !7912)
!7915 = !DILocation(line: 1183, column: 25, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7911, file: !1, line: 1182, column: 20)
!7917 = !DILocation(line: 1183, column: 4, scope: !7916)
!7918 = !DILocation(line: 1184, column: 3, scope: !7916)
!7919 = !DILocation(line: 1186, column: 8, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !1, line: 1186, column: 8)
!7921 = distinct !DILexicalBlock(scope: !7911, file: !1, line: 1185, column: 8)
!7922 = !DILocation(line: 1186, column: 8, scope: !7921)
!7923 = !DILocation(line: 1187, column: 25, scope: !7920)
!7924 = !DILocation(line: 1187, column: 29, scope: !7920)
!7925 = !DILocation(line: 1187, column: 33, scope: !7920)
!7926 = !DILocation(line: 1187, column: 40, scope: !7920)
!7927 = !DILocation(line: 1187, column: 5, scope: !7920)
!7928 = !DILocation(line: 1189, column: 8, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7921, file: !1, line: 1189, column: 8)
!7930 = !DILocation(line: 1189, column: 15, scope: !7929)
!7931 = !DILocation(line: 1189, column: 22, scope: !7929)
!7932 = !DILocation(line: 1189, column: 27, scope: !7929)
!7933 = !DILocation(line: 1189, column: 8, scope: !7921)
!7934 = !DILocation(line: 1190, column: 5, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7929, file: !1, line: 1189, column: 41)
!7936 = !DILocation(line: 1190, column: 12, scope: !7935)
!7937 = !DILocation(line: 1190, column: 19, scope: !7935)
!7938 = !DILocation(line: 1190, column: 24, scope: !7935)
!7939 = !DILocation(line: 1192, column: 9, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7935, file: !1, line: 1192, column: 9)
!7941 = !DILocation(line: 1192, column: 16, scope: !7940)
!7942 = !DILocation(line: 1192, column: 23, scope: !7940)
!7943 = !DILocation(line: 1192, column: 28, scope: !7940)
!7944 = !DILocation(line: 1192, column: 9, scope: !7935)
!7945 = !DILocation(line: 1193, column: 6, scope: !7940)
!7946 = !DILocation(line: 1193, column: 13, scope: !7940)
!7947 = !DILocation(line: 1193, column: 20, scope: !7940)
!7948 = !DILocation(line: 1193, column: 25, scope: !7940)
!7949 = !DILocation(line: 1194, column: 4, scope: !7935)
!7950 = !DILocation(line: 1195, column: 13, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7929, file: !1, line: 1195, column: 13)
!7952 = !DILocation(line: 1195, column: 19, scope: !7951)
!7953 = !DILocation(line: 1195, column: 13, scope: !7929)
!7954 = !DILocation(line: 1196, column: 5, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7951, file: !1, line: 1195, column: 38)
!7956 = !DILocation(line: 1196, column: 12, scope: !7955)
!7957 = !DILocation(line: 1196, column: 19, scope: !7955)
!7958 = !DILocation(line: 1196, column: 24, scope: !7955)
!7959 = !DILocation(line: 1197, column: 4, scope: !7955)
!7960 = !DILocation(line: 1200, column: 5, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7951, file: !1, line: 1198, column: 9)
!7962 = !DILocation(line: 1200, column: 12, scope: !7961)
!7963 = !DILocation(line: 1200, column: 19, scope: !7961)
!7964 = !DILocation(line: 1200, column: 24, scope: !7961)
!7965 = !DILocation(line: 1201, column: 9, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7961, file: !1, line: 1201, column: 9)
!7967 = !DILocation(line: 1201, column: 16, scope: !7966)
!7968 = !DILocation(line: 1201, column: 23, scope: !7966)
!7969 = !DILocation(line: 1201, column: 28, scope: !7966)
!7970 = !DILocation(line: 1201, column: 9, scope: !7961)
!7971 = !DILocation(line: 1202, column: 28, scope: !7966)
!7972 = !DILocation(line: 1202, column: 35, scope: !7966)
!7973 = !DILocation(line: 1202, column: 42, scope: !7966)
!7974 = !DILocation(line: 1202, column: 27, scope: !7966)
!7975 = !DILocation(line: 1202, column: 6, scope: !7966)
!7976 = !DILocation(line: 1202, column: 13, scope: !7966)
!7977 = !DILocation(line: 1202, column: 20, scope: !7966)
!7978 = !DILocation(line: 1202, column: 25, scope: !7966)
!7979 = !DILocation(line: 1205, column: 14, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7921, file: !1, line: 1205, column: 4)
!7981 = !DILocation(line: 1205, column: 18, scope: !7980)
!7982 = !DILocation(line: 1205, column: 25, scope: !7980)
!7983 = !DILocation(line: 1205, column: 12, scope: !7980)
!7984 = !DILocation(line: 1205, column: 9, scope: !7980)
!7985 = !DILocation(line: 1205, column: 32, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7980, file: !1, line: 1205, column: 4)
!7987 = !DILocation(line: 1205, column: 4, scope: !7980)
!7988 = !DILocation(line: 1206, column: 9, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7990, file: !1, line: 1206, column: 9)
!7990 = distinct !DILexicalBlock(scope: !7986, file: !1, line: 1205, column: 51)
!7991 = !DILocation(line: 1206, column: 13, scope: !7989)
!7992 = !DILocation(line: 1206, column: 25, scope: !7989)
!7993 = !DILocation(line: 1206, column: 32, scope: !7989)
!7994 = !DILocation(line: 1206, column: 22, scope: !7989)
!7995 = !DILocation(line: 1206, column: 9, scope: !7990)
!7996 = !DILocation(line: 1207, column: 10, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !1, line: 1207, column: 10)
!7998 = distinct !DILexicalBlock(scope: !7989, file: !1, line: 1206, column: 39)
!7999 = !DILocation(line: 1207, column: 17, scope: !7997)
!8000 = !DILocation(line: 1207, column: 24, scope: !7997)
!8001 = !DILocation(line: 1207, column: 29, scope: !7997)
!8002 = !DILocation(line: 1207, column: 10, scope: !7998)
!8003 = !DILocation(line: 1207, column: 43, scope: !7997)
!8004 = !DILocation(line: 1207, column: 47, scope: !7997)
!8005 = !DILocation(line: 1207, column: 52, scope: !7997)
!8006 = !DILocation(line: 1208, column: 11, scope: !7997)
!8007 = !DILocation(line: 1208, column: 15, scope: !7997)
!8008 = !DILocation(line: 1208, column: 20, scope: !7997)
!8009 = !DILocation(line: 1209, column: 5, scope: !7998)
!8010 = !DILocation(line: 1210, column: 4, scope: !7990)
!8011 = !DILocation(line: 1205, column: 41, scope: !7986)
!8012 = !DILocation(line: 1205, column: 45, scope: !7986)
!8013 = !DILocation(line: 1205, column: 39, scope: !7986)
!8014 = !DILocation(line: 1205, column: 4, scope: !7986)
!8015 = distinct !{!8015, !7987, !8016}
!8016 = !DILocation(line: 1210, column: 4, scope: !7980)
!8017 = !DILocation(line: 1213, column: 7, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !7912, file: !1, line: 1213, column: 7)
!8019 = !DILocation(line: 1213, column: 7, scope: !7912)
!8020 = !DILocation(line: 1214, column: 25, scope: !8018)
!8021 = !DILocation(line: 1214, column: 28, scope: !8018)
!8022 = !DILocation(line: 1214, column: 35, scope: !8018)
!8023 = !DILocation(line: 1214, column: 4, scope: !8018)
!8024 = !DILocation(line: 1216, column: 25, scope: !8018)
!8025 = !DILocation(line: 1216, column: 4, scope: !8018)
!8026 = !DILocation(line: 1217, column: 2, scope: !7912)
!8027 = !DILocation(line: 1218, column: 40, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !7908, file: !1, line: 1218, column: 11)
!8029 = !DILocation(line: 1218, column: 11, scope: !8028)
!8030 = !DILocation(line: 1218, column: 11, scope: !7908)
!8031 = !DILocation(line: 1219, column: 24, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8028, file: !1, line: 1218, column: 45)
!8033 = !DILocation(line: 1219, column: 27, scope: !8032)
!8034 = !DILocation(line: 1219, column: 34, scope: !8032)
!8035 = !DILocation(line: 1219, column: 3, scope: !8032)
!8036 = !DILocation(line: 1220, column: 2, scope: !8032)
!8037 = !DILocation(line: 1221, column: 11, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8028, file: !1, line: 1221, column: 11)
!8039 = !DILocation(line: 1221, column: 20, scope: !8038)
!8040 = !DILocation(line: 1221, column: 51, scope: !8038)
!8041 = !DILocation(line: 1221, column: 23, scope: !8038)
!8042 = !DILocation(line: 1221, column: 11, scope: !8028)
!8043 = !DILocation(line: 1222, column: 3, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8038, file: !1, line: 1221, column: 56)
!8045 = !DILocation(line: 1222, column: 10, scope: !8044)
!8046 = !DILocation(line: 1222, column: 17, scope: !8044)
!8047 = !DILocation(line: 1222, column: 22, scope: !8044)
!8048 = !DILocation(line: 1223, column: 24, scope: !8044)
!8049 = !DILocation(line: 1223, column: 3, scope: !8044)
!8050 = !DILocation(line: 1224, column: 2, scope: !8044)
!8051 = !DILocation(line: 1225, column: 1, scope: !7767)
!8052 = distinct !DISubprogram(name: "BLI_rctf_size_y", scope: !4345, file: !4345, line: 108, type: !8053, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8053 = !DISubroutineType(types: !8054)
!8054 = !{!1380, !8055}
!8055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8056, size: 64)
!8056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1513)
!8057 = !DILocalVariable(name: "rct", arg: 1, scope: !8052, file: !4345, line: 108, type: !8055)
!8058 = !DILocation(line: 108, column: 53, scope: !8052)
!8059 = !DILocation(line: 108, column: 68, scope: !8052)
!8060 = !DILocation(line: 108, column: 73, scope: !8052)
!8061 = !DILocation(line: 108, column: 80, scope: !8052)
!8062 = !DILocation(line: 108, column: 85, scope: !8052)
!8063 = !DILocation(line: 108, column: 78, scope: !8052)
!8064 = !DILocation(line: 108, column: 60, scope: !8052)
!8065 = distinct !DISubprogram(name: "ui_draw_anti_x", scope: !1, file: !1, line: 434, type: !8066, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8066 = !DISubroutineType(types: !8067)
!8067 = !{null, !1380, !1380, !1380, !1380}
!8068 = !DILocalVariable(name: "x1", arg: 1, scope: !8065, file: !1, line: 434, type: !1380)
!8069 = !DILocation(line: 434, column: 34, scope: !8065)
!8070 = !DILocalVariable(name: "y1", arg: 2, scope: !8065, file: !1, line: 434, type: !1380)
!8071 = !DILocation(line: 434, column: 44, scope: !8065)
!8072 = !DILocalVariable(name: "x2", arg: 3, scope: !8065, file: !1, line: 434, type: !1380)
!8073 = !DILocation(line: 434, column: 54, scope: !8065)
!8074 = !DILocalVariable(name: "y2", arg: 4, scope: !8065, file: !1, line: 434, type: !1380)
!8075 = !DILocation(line: 434, column: 64, scope: !8065)
!8076 = !DILocation(line: 438, column: 2, scope: !8065)
!8077 = !DILocation(line: 439, column: 2, scope: !8065)
!8078 = !DILocation(line: 441, column: 2, scope: !8065)
!8079 = !DILocation(line: 443, column: 12, scope: !8065)
!8080 = !DILocation(line: 443, column: 16, scope: !8065)
!8081 = !DILocation(line: 443, column: 20, scope: !8065)
!8082 = !DILocation(line: 443, column: 24, scope: !8065)
!8083 = !DILocation(line: 443, column: 2, scope: !8065)
!8084 = !DILocation(line: 444, column: 12, scope: !8065)
!8085 = !DILocation(line: 444, column: 16, scope: !8065)
!8086 = !DILocation(line: 444, column: 20, scope: !8065)
!8087 = !DILocation(line: 444, column: 24, scope: !8065)
!8088 = !DILocation(line: 444, column: 2, scope: !8065)
!8089 = !DILocation(line: 446, column: 2, scope: !8065)
!8090 = !DILocation(line: 448, column: 2, scope: !8065)
!8091 = !DILocation(line: 449, column: 2, scope: !8065)
!8092 = !DILocation(line: 451, column: 1, scope: !8065)
!8093 = distinct !DISubprogram(name: "BLI_rctf_size_x", scope: !4345, file: !4345, line: 107, type: !8053, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8094 = !DILocalVariable(name: "rct", arg: 1, scope: !8093, file: !4345, line: 107, type: !8055)
!8095 = !DILocation(line: 107, column: 53, scope: !8093)
!8096 = !DILocation(line: 107, column: 68, scope: !8093)
!8097 = !DILocation(line: 107, column: 73, scope: !8093)
!8098 = !DILocation(line: 107, column: 80, scope: !8093)
!8099 = !DILocation(line: 107, column: 85, scope: !8093)
!8100 = !DILocation(line: 107, column: 78, scope: !8093)
!8101 = !DILocation(line: 107, column: 60, scope: !8093)
!8102 = distinct !DISubprogram(name: "find_highest_panel", scope: !1, file: !1, line: 751, type: !8103, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8103 = !DISubroutineType(types: !8104)
!8104 = !{!1420, !8105, !8105}
!8105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8106, size: 64)
!8106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!8107 = !DILocalVariable(name: "a1", arg: 1, scope: !8102, file: !1, line: 751, type: !8105)
!8108 = !DILocation(line: 751, column: 43, scope: !8102)
!8109 = !DILocalVariable(name: "a2", arg: 2, scope: !8102, file: !1, line: 751, type: !8105)
!8110 = !DILocation(line: 751, column: 59, scope: !8102)
!8111 = !DILocalVariable(name: "ps1", scope: !8102, file: !1, line: 753, type: !8112)
!8112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8113, size: 64)
!8113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5463)
!8114 = !DILocation(line: 753, column: 19, scope: !8102)
!8115 = !DILocation(line: 753, column: 25, scope: !8102)
!8116 = !DILocalVariable(name: "ps2", scope: !8102, file: !1, line: 753, type: !8112)
!8117 = !DILocation(line: 753, column: 30, scope: !8102)
!8118 = !DILocation(line: 753, column: 36, scope: !8102)
!8119 = !DILocation(line: 757, column: 6, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8102, file: !1, line: 757, column: 6)
!8121 = !DILocation(line: 757, column: 11, scope: !8120)
!8122 = !DILocation(line: 757, column: 15, scope: !8120)
!8123 = !DILocation(line: 757, column: 27, scope: !8120)
!8124 = !DILocation(line: 757, column: 32, scope: !8120)
!8125 = !DILocation(line: 757, column: 36, scope: !8120)
!8126 = !DILocation(line: 757, column: 25, scope: !8120)
!8127 = !DILocation(line: 757, column: 46, scope: !8120)
!8128 = !DILocation(line: 757, column: 49, scope: !8120)
!8129 = !DILocation(line: 757, column: 54, scope: !8120)
!8130 = !DILocation(line: 757, column: 58, scope: !8120)
!8131 = !DILocation(line: 757, column: 64, scope: !8120)
!8132 = !DILocation(line: 757, column: 69, scope: !8120)
!8133 = !DILocation(line: 757, column: 6, scope: !8102)
!8134 = !DILocation(line: 757, column: 86, scope: !8120)
!8135 = !DILocation(line: 759, column: 6, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8102, file: !1, line: 759, column: 6)
!8137 = !DILocation(line: 759, column: 11, scope: !8136)
!8138 = !DILocation(line: 759, column: 15, scope: !8136)
!8139 = !DILocation(line: 759, column: 22, scope: !8136)
!8140 = !DILocation(line: 759, column: 27, scope: !8136)
!8141 = !DILocation(line: 759, column: 31, scope: !8136)
!8142 = !DILocation(line: 759, column: 20, scope: !8136)
!8143 = !DILocation(line: 759, column: 39, scope: !8136)
!8144 = !DILocation(line: 759, column: 44, scope: !8136)
!8145 = !DILocation(line: 759, column: 48, scope: !8136)
!8146 = !DILocation(line: 759, column: 55, scope: !8136)
!8147 = !DILocation(line: 759, column: 60, scope: !8136)
!8148 = !DILocation(line: 759, column: 64, scope: !8136)
!8149 = !DILocation(line: 759, column: 53, scope: !8136)
!8150 = !DILocation(line: 759, column: 37, scope: !8136)
!8151 = !DILocation(line: 759, column: 6, scope: !8102)
!8152 = !DILocation(line: 759, column: 71, scope: !8136)
!8153 = !DILocation(line: 760, column: 11, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8136, file: !1, line: 760, column: 11)
!8155 = !DILocation(line: 760, column: 16, scope: !8154)
!8156 = !DILocation(line: 760, column: 20, scope: !8154)
!8157 = !DILocation(line: 760, column: 27, scope: !8154)
!8158 = !DILocation(line: 760, column: 32, scope: !8154)
!8159 = !DILocation(line: 760, column: 36, scope: !8154)
!8160 = !DILocation(line: 760, column: 25, scope: !8154)
!8161 = !DILocation(line: 760, column: 44, scope: !8154)
!8162 = !DILocation(line: 760, column: 49, scope: !8154)
!8163 = !DILocation(line: 760, column: 53, scope: !8154)
!8164 = !DILocation(line: 760, column: 60, scope: !8154)
!8165 = !DILocation(line: 760, column: 65, scope: !8154)
!8166 = !DILocation(line: 760, column: 69, scope: !8154)
!8167 = !DILocation(line: 760, column: 58, scope: !8154)
!8168 = !DILocation(line: 760, column: 42, scope: !8154)
!8169 = !DILocation(line: 760, column: 11, scope: !8136)
!8170 = !DILocation(line: 760, column: 76, scope: !8154)
!8171 = !DILocation(line: 761, column: 11, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8154, file: !1, line: 761, column: 11)
!8173 = !DILocation(line: 761, column: 16, scope: !8172)
!8174 = !DILocation(line: 761, column: 20, scope: !8172)
!8175 = !DILocation(line: 761, column: 32, scope: !8172)
!8176 = !DILocation(line: 761, column: 37, scope: !8172)
!8177 = !DILocation(line: 761, column: 41, scope: !8172)
!8178 = !DILocation(line: 761, column: 30, scope: !8172)
!8179 = !DILocation(line: 761, column: 11, scope: !8154)
!8180 = !DILocation(line: 761, column: 52, scope: !8172)
!8181 = !DILocation(line: 762, column: 11, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8172, file: !1, line: 762, column: 11)
!8183 = !DILocation(line: 762, column: 16, scope: !8182)
!8184 = !DILocation(line: 762, column: 20, scope: !8182)
!8185 = !DILocation(line: 762, column: 32, scope: !8182)
!8186 = !DILocation(line: 762, column: 37, scope: !8182)
!8187 = !DILocation(line: 762, column: 41, scope: !8182)
!8188 = !DILocation(line: 762, column: 30, scope: !8182)
!8189 = !DILocation(line: 762, column: 11, scope: !8172)
!8190 = !DILocation(line: 762, column: 52, scope: !8182)
!8191 = !DILocation(line: 764, column: 2, scope: !8102)
!8192 = !DILocation(line: 765, column: 1, scope: !8102)
!8193 = distinct !DISubprogram(name: "find_leftmost_panel", scope: !1, file: !1, line: 738, type: !8103, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8194 = !DILocalVariable(name: "a1", arg: 1, scope: !8193, file: !1, line: 738, type: !8105)
!8195 = !DILocation(line: 738, column: 44, scope: !8193)
!8196 = !DILocalVariable(name: "a2", arg: 2, scope: !8193, file: !1, line: 738, type: !8105)
!8197 = !DILocation(line: 738, column: 60, scope: !8193)
!8198 = !DILocalVariable(name: "ps1", scope: !8193, file: !1, line: 740, type: !8112)
!8199 = !DILocation(line: 740, column: 19, scope: !8193)
!8200 = !DILocation(line: 740, column: 25, scope: !8193)
!8201 = !DILocalVariable(name: "ps2", scope: !8193, file: !1, line: 740, type: !8112)
!8202 = !DILocation(line: 740, column: 30, scope: !8193)
!8203 = !DILocation(line: 740, column: 36, scope: !8193)
!8204 = !DILocation(line: 742, column: 6, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8193, file: !1, line: 742, column: 6)
!8206 = !DILocation(line: 742, column: 11, scope: !8205)
!8207 = !DILocation(line: 742, column: 15, scope: !8205)
!8208 = !DILocation(line: 742, column: 22, scope: !8205)
!8209 = !DILocation(line: 742, column: 27, scope: !8205)
!8210 = !DILocation(line: 742, column: 31, scope: !8205)
!8211 = !DILocation(line: 742, column: 20, scope: !8205)
!8212 = !DILocation(line: 742, column: 6, scope: !8193)
!8213 = !DILocation(line: 742, column: 37, scope: !8205)
!8214 = !DILocation(line: 743, column: 11, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8205, file: !1, line: 743, column: 11)
!8216 = !DILocation(line: 743, column: 16, scope: !8215)
!8217 = !DILocation(line: 743, column: 20, scope: !8215)
!8218 = !DILocation(line: 743, column: 27, scope: !8215)
!8219 = !DILocation(line: 743, column: 32, scope: !8215)
!8220 = !DILocation(line: 743, column: 36, scope: !8215)
!8221 = !DILocation(line: 743, column: 25, scope: !8215)
!8222 = !DILocation(line: 743, column: 11, scope: !8205)
!8223 = !DILocation(line: 743, column: 42, scope: !8215)
!8224 = !DILocation(line: 744, column: 11, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8215, file: !1, line: 744, column: 11)
!8226 = !DILocation(line: 744, column: 16, scope: !8225)
!8227 = !DILocation(line: 744, column: 20, scope: !8225)
!8228 = !DILocation(line: 744, column: 32, scope: !8225)
!8229 = !DILocation(line: 744, column: 37, scope: !8225)
!8230 = !DILocation(line: 744, column: 41, scope: !8225)
!8231 = !DILocation(line: 744, column: 30, scope: !8225)
!8232 = !DILocation(line: 744, column: 11, scope: !8215)
!8233 = !DILocation(line: 744, column: 52, scope: !8225)
!8234 = !DILocation(line: 745, column: 11, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8225, file: !1, line: 745, column: 11)
!8236 = !DILocation(line: 745, column: 16, scope: !8235)
!8237 = !DILocation(line: 745, column: 20, scope: !8235)
!8238 = !DILocation(line: 745, column: 32, scope: !8235)
!8239 = !DILocation(line: 745, column: 37, scope: !8235)
!8240 = !DILocation(line: 745, column: 41, scope: !8235)
!8241 = !DILocation(line: 745, column: 30, scope: !8235)
!8242 = !DILocation(line: 745, column: 11, scope: !8225)
!8243 = !DILocation(line: 745, column: 52, scope: !8235)
!8244 = !DILocation(line: 747, column: 2, scope: !8193)
!8245 = !DILocation(line: 748, column: 1, scope: !8193)
!8246 = distinct !DISubprogram(name: "compare_panel", scope: !1, file: !1, line: 767, type: !8103, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8247 = !DILocalVariable(name: "a1", arg: 1, scope: !8246, file: !1, line: 767, type: !8105)
!8248 = !DILocation(line: 767, column: 38, scope: !8246)
!8249 = !DILocalVariable(name: "a2", arg: 2, scope: !8246, file: !1, line: 767, type: !8105)
!8250 = !DILocation(line: 767, column: 54, scope: !8246)
!8251 = !DILocalVariable(name: "ps1", scope: !8246, file: !1, line: 769, type: !8112)
!8252 = !DILocation(line: 769, column: 19, scope: !8246)
!8253 = !DILocation(line: 769, column: 25, scope: !8246)
!8254 = !DILocalVariable(name: "ps2", scope: !8246, file: !1, line: 769, type: !8112)
!8255 = !DILocation(line: 769, column: 30, scope: !8246)
!8256 = !DILocation(line: 769, column: 36, scope: !8246)
!8257 = !DILocation(line: 771, column: 6, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8246, file: !1, line: 771, column: 6)
!8259 = !DILocation(line: 771, column: 11, scope: !8258)
!8260 = !DILocation(line: 771, column: 15, scope: !8258)
!8261 = !DILocation(line: 771, column: 27, scope: !8258)
!8262 = !DILocation(line: 771, column: 32, scope: !8258)
!8263 = !DILocation(line: 771, column: 36, scope: !8258)
!8264 = !DILocation(line: 771, column: 25, scope: !8258)
!8265 = !DILocation(line: 771, column: 6, scope: !8246)
!8266 = !DILocation(line: 771, column: 47, scope: !8258)
!8267 = !DILocation(line: 772, column: 11, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8258, file: !1, line: 772, column: 11)
!8269 = !DILocation(line: 772, column: 16, scope: !8268)
!8270 = !DILocation(line: 772, column: 20, scope: !8268)
!8271 = !DILocation(line: 772, column: 32, scope: !8268)
!8272 = !DILocation(line: 772, column: 37, scope: !8268)
!8273 = !DILocation(line: 772, column: 41, scope: !8268)
!8274 = !DILocation(line: 772, column: 30, scope: !8268)
!8275 = !DILocation(line: 772, column: 11, scope: !8258)
!8276 = !DILocation(line: 772, column: 52, scope: !8268)
!8277 = !DILocation(line: 774, column: 2, scope: !8246)
!8278 = !DILocation(line: 775, column: 1, scope: !8246)
!8279 = distinct !DISubprogram(name: "get_panel_size_y", scope: !1, file: !1, line: 703, type: !8280, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8280 = !DISubroutineType(types: !8281)
!8281 = !{!1420, !1396}
!8282 = !DILocalVariable(name: "pa", arg: 1, scope: !8279, file: !1, line: 703, type: !1396)
!8283 = !DILocation(line: 703, column: 36, scope: !8279)
!8284 = !DILocation(line: 705, column: 6, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8279, file: !1, line: 705, column: 6)
!8286 = !DILocation(line: 705, column: 10, scope: !8285)
!8287 = !DILocation(line: 705, column: 15, scope: !8285)
!8288 = !DILocation(line: 705, column: 19, scope: !8285)
!8289 = !DILocation(line: 705, column: 23, scope: !8285)
!8290 = !DILocation(line: 705, column: 29, scope: !8285)
!8291 = !DILocation(line: 705, column: 34, scope: !8285)
!8292 = !DILocation(line: 705, column: 6, scope: !8279)
!8293 = !DILocation(line: 706, column: 10, scope: !8285)
!8294 = !DILocation(line: 706, column: 14, scope: !8285)
!8295 = !DILocation(line: 706, column: 3, scope: !8285)
!8296 = !DILocation(line: 708, column: 9, scope: !8279)
!8297 = !DILocation(line: 708, column: 22, scope: !8279)
!8298 = !DILocation(line: 708, column: 26, scope: !8279)
!8299 = !DILocation(line: 708, column: 20, scope: !8279)
!8300 = !DILocation(line: 708, column: 2, scope: !8279)
!8301 = !DILocation(line: 709, column: 1, scope: !8279)
!8302 = distinct !DISubprogram(name: "get_panel_real_ofsy", scope: !1, file: !1, line: 713, type: !8280, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8303 = !DILocalVariable(name: "pa", arg: 1, scope: !8302, file: !1, line: 713, type: !1396)
!8304 = !DILocation(line: 713, column: 39, scope: !8302)
!8305 = !DILocation(line: 715, column: 6, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8302, file: !1, line: 715, column: 6)
!8307 = !DILocation(line: 715, column: 10, scope: !8306)
!8308 = !DILocation(line: 715, column: 15, scope: !8306)
!8309 = !DILocation(line: 715, column: 6, scope: !8302)
!8310 = !DILocation(line: 715, column: 37, scope: !8306)
!8311 = !DILocation(line: 715, column: 41, scope: !8306)
!8312 = !DILocation(line: 715, column: 48, scope: !8306)
!8313 = !DILocation(line: 715, column: 52, scope: !8306)
!8314 = !DILocation(line: 715, column: 46, scope: !8306)
!8315 = !DILocation(line: 715, column: 30, scope: !8306)
!8316 = !DILocation(line: 716, column: 11, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8306, file: !1, line: 716, column: 11)
!8318 = !DILocation(line: 716, column: 15, scope: !8317)
!8319 = !DILocation(line: 716, column: 24, scope: !8317)
!8320 = !DILocation(line: 716, column: 28, scope: !8317)
!8321 = !DILocation(line: 716, column: 32, scope: !8317)
!8322 = !DILocation(line: 716, column: 42, scope: !8317)
!8323 = !DILocation(line: 716, column: 47, scope: !8317)
!8324 = !DILocation(line: 716, column: 11, scope: !8306)
!8325 = !DILocation(line: 716, column: 70, scope: !8317)
!8326 = !DILocation(line: 716, column: 74, scope: !8317)
!8327 = !DILocation(line: 716, column: 81, scope: !8317)
!8328 = !DILocation(line: 716, column: 85, scope: !8317)
!8329 = !DILocation(line: 716, column: 79, scope: !8317)
!8330 = !DILocation(line: 716, column: 63, scope: !8317)
!8331 = !DILocation(line: 717, column: 11, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8317, file: !1, line: 717, column: 11)
!8333 = !DILocation(line: 717, column: 15, scope: !8332)
!8334 = !DILocation(line: 717, column: 11, scope: !8317)
!8335 = !DILocation(line: 717, column: 32, scope: !8332)
!8336 = !DILocation(line: 717, column: 36, scope: !8332)
!8337 = !DILocation(line: 717, column: 46, scope: !8332)
!8338 = !DILocation(line: 717, column: 25, scope: !8332)
!8339 = !DILocation(line: 718, column: 14, scope: !8332)
!8340 = !DILocation(line: 718, column: 18, scope: !8332)
!8341 = !DILocation(line: 718, column: 7, scope: !8332)
!8342 = !DILocation(line: 719, column: 1, scope: !8302)
!8343 = distinct !DISubprogram(name: "get_panel_real_ofsx", scope: !1, file: !1, line: 721, type: !8280, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8344 = !DILocalVariable(name: "pa", arg: 1, scope: !8343, file: !1, line: 721, type: !1396)
!8345 = !DILocation(line: 721, column: 39, scope: !8343)
!8346 = !DILocation(line: 723, column: 6, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8343, file: !1, line: 723, column: 6)
!8348 = !DILocation(line: 723, column: 10, scope: !8347)
!8349 = !DILocation(line: 723, column: 15, scope: !8347)
!8350 = !DILocation(line: 723, column: 6, scope: !8343)
!8351 = !DILocation(line: 723, column: 37, scope: !8347)
!8352 = !DILocation(line: 723, column: 41, scope: !8347)
!8353 = !DILocation(line: 723, column: 65, scope: !8347)
!8354 = !DILocation(line: 723, column: 48, scope: !8347)
!8355 = !DILocation(line: 723, column: 46, scope: !8347)
!8356 = !DILocation(line: 723, column: 30, scope: !8347)
!8357 = !DILocation(line: 724, column: 11, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8347, file: !1, line: 724, column: 11)
!8359 = !DILocation(line: 724, column: 15, scope: !8358)
!8360 = !DILocation(line: 724, column: 24, scope: !8358)
!8361 = !DILocation(line: 724, column: 28, scope: !8358)
!8362 = !DILocation(line: 724, column: 32, scope: !8358)
!8363 = !DILocation(line: 724, column: 42, scope: !8358)
!8364 = !DILocation(line: 724, column: 47, scope: !8358)
!8365 = !DILocation(line: 724, column: 11, scope: !8347)
!8366 = !DILocation(line: 724, column: 70, scope: !8358)
!8367 = !DILocation(line: 724, column: 74, scope: !8358)
!8368 = !DILocation(line: 724, column: 98, scope: !8358)
!8369 = !DILocation(line: 724, column: 81, scope: !8358)
!8370 = !DILocation(line: 724, column: 79, scope: !8358)
!8371 = !DILocation(line: 724, column: 63, scope: !8358)
!8372 = !DILocation(line: 725, column: 14, scope: !8358)
!8373 = !DILocation(line: 725, column: 18, scope: !8358)
!8374 = !DILocation(line: 725, column: 25, scope: !8358)
!8375 = !DILocation(line: 725, column: 29, scope: !8358)
!8376 = !DILocation(line: 725, column: 23, scope: !8358)
!8377 = !DILocation(line: 725, column: 7, scope: !8358)
!8378 = !DILocation(line: 726, column: 1, scope: !8343)
!8379 = distinct !DISubprogram(name: "ui_panel_copy_offset", scope: !1, file: !1, line: 196, type: !8380, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{null, !1396, !1396}
!8382 = !DILocalVariable(name: "pa", arg: 1, scope: !8379, file: !1, line: 196, type: !1396)
!8383 = !DILocation(line: 196, column: 41, scope: !8379)
!8384 = !DILocalVariable(name: "papar", arg: 2, scope: !8379, file: !1, line: 196, type: !1396)
!8385 = !DILocation(line: 196, column: 52, scope: !8379)
!8386 = !DILocation(line: 200, column: 13, scope: !8379)
!8387 = !DILocation(line: 200, column: 20, scope: !8379)
!8388 = !DILocation(line: 200, column: 2, scope: !8379)
!8389 = !DILocation(line: 200, column: 6, scope: !8379)
!8390 = !DILocation(line: 200, column: 11, scope: !8379)
!8391 = !DILocation(line: 201, column: 13, scope: !8379)
!8392 = !DILocation(line: 201, column: 20, scope: !8379)
!8393 = !DILocation(line: 201, column: 27, scope: !8379)
!8394 = !DILocation(line: 201, column: 34, scope: !8379)
!8395 = !DILocation(line: 201, column: 25, scope: !8379)
!8396 = !DILocation(line: 201, column: 42, scope: !8379)
!8397 = !DILocation(line: 201, column: 46, scope: !8379)
!8398 = !DILocation(line: 201, column: 40, scope: !8379)
!8399 = !DILocation(line: 201, column: 2, scope: !8379)
!8400 = !DILocation(line: 201, column: 6, scope: !8379)
!8401 = !DILocation(line: 201, column: 11, scope: !8379)
!8402 = !DILocation(line: 202, column: 1, scope: !8379)
!8403 = distinct !DISubprogram(name: "get_panel_header", scope: !1, file: !1, line: 695, type: !8280, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8404 = !DILocalVariable(name: "pa", arg: 1, scope: !8403, file: !1, line: 695, type: !1396)
!8405 = !DILocation(line: 695, column: 36, scope: !8403)
!8406 = !DILocation(line: 697, column: 6, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8403, file: !1, line: 697, column: 6)
!8408 = !DILocation(line: 697, column: 10, scope: !8407)
!8409 = !DILocation(line: 697, column: 15, scope: !8407)
!8410 = !DILocation(line: 697, column: 19, scope: !8407)
!8411 = !DILocation(line: 697, column: 23, scope: !8407)
!8412 = !DILocation(line: 697, column: 29, scope: !8407)
!8413 = !DILocation(line: 697, column: 34, scope: !8407)
!8414 = !DILocation(line: 697, column: 6, scope: !8403)
!8415 = !DILocation(line: 698, column: 3, scope: !8407)
!8416 = !DILocation(line: 700, column: 9, scope: !8403)
!8417 = !DILocation(line: 700, column: 2, scope: !8403)
!8418 = !DILocation(line: 701, column: 1, scope: !8403)
!8419 = distinct !DISubprogram(name: "min_ii", scope: !7008, file: !7008, line: 211, type: !7009, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8420 = !DILocalVariable(name: "a", arg: 1, scope: !8419, file: !7008, line: 211, type: !1420)
!8421 = !DILocation(line: 211, column: 24, scope: !8419)
!8422 = !DILocalVariable(name: "b", arg: 2, scope: !8419, file: !7008, line: 211, type: !1420)
!8423 = !DILocation(line: 211, column: 31, scope: !8419)
!8424 = !DILocation(line: 213, column: 10, scope: !8419)
!8425 = !DILocation(line: 213, column: 14, scope: !8419)
!8426 = !DILocation(line: 213, column: 12, scope: !8419)
!8427 = !DILocation(line: 213, column: 9, scope: !8419)
!8428 = !DILocation(line: 213, column: 19, scope: !8419)
!8429 = !DILocation(line: 213, column: 23, scope: !8419)
!8430 = !DILocation(line: 213, column: 2, scope: !8419)
!8431 = distinct !DISubprogram(name: "mul_v2_fl", scope: !8432, file: !8432, line: 380, type: !8433, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8432 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8433 = !DISubroutineType(types: !8434)
!8434 = !{null, !1673, !1380}
!8435 = !DILocalVariable(name: "r", arg: 1, scope: !8431, file: !8432, line: 380, type: !1673)
!8436 = !DILocation(line: 380, column: 30, scope: !8431)
!8437 = !DILocalVariable(name: "f", arg: 2, scope: !8431, file: !8432, line: 380, type: !1380)
!8438 = !DILocation(line: 380, column: 42, scope: !8431)
!8439 = !DILocation(line: 382, column: 10, scope: !8431)
!8440 = !DILocation(line: 382, column: 2, scope: !8431)
!8441 = !DILocation(line: 382, column: 7, scope: !8431)
!8442 = !DILocation(line: 383, column: 10, scope: !8431)
!8443 = !DILocation(line: 383, column: 2, scope: !8431)
!8444 = !DILocation(line: 383, column: 7, scope: !8431)
!8445 = !DILocation(line: 384, column: 1, scope: !8431)
!8446 = distinct !DISubprogram(name: "panels_collapse_all", scope: !1, file: !1, line: 172, type: !8447, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8447 = !DISubroutineType(types: !8448)
!8448 = !{null, !3338, !3252, !8449}
!8449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8450, size: 64)
!8450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1397)
!8451 = !DILocalVariable(name: "sa", arg: 1, scope: !8446, file: !1, line: 172, type: !3338)
!8452 = !DILocation(line: 172, column: 42, scope: !8446)
!8453 = !DILocalVariable(name: "ar", arg: 2, scope: !8446, file: !1, line: 172, type: !3252)
!8454 = !DILocation(line: 172, column: 55, scope: !8446)
!8455 = !DILocalVariable(name: "from_pa", arg: 3, scope: !8446, file: !1, line: 172, type: !8449)
!8456 = !DILocation(line: 172, column: 72, scope: !8446)
!8457 = !DILocalVariable(name: "has_category_tabs", scope: !8446, file: !1, line: 174, type: !3449)
!8458 = !DILocation(line: 174, column: 13, scope: !8446)
!8459 = !DILocation(line: 174, column: 62, scope: !8446)
!8460 = !DILocation(line: 174, column: 33, scope: !8446)
!8461 = !DILocalVariable(name: "category", scope: !8446, file: !1, line: 175, type: !1582)
!8462 = !DILocation(line: 175, column: 14, scope: !8446)
!8463 = !DILocation(line: 175, column: 25, scope: !8446)
!8464 = !DILocation(line: 175, column: 74, scope: !8446)
!8465 = !DILocation(line: 175, column: 45, scope: !8446)
!8466 = !DILocalVariable(name: "flag", scope: !8446, file: !1, line: 176, type: !4373)
!8467 = !DILocation(line: 176, column: 12, scope: !8446)
!8468 = !DILocation(line: 176, column: 35, scope: !8446)
!8469 = !DILocation(line: 176, column: 39, scope: !8446)
!8470 = !DILocation(line: 176, column: 21, scope: !8446)
!8471 = !DILocation(line: 176, column: 43, scope: !8446)
!8472 = !DILocation(line: 176, column: 20, scope: !8446)
!8473 = !DILocalVariable(name: "from_pt", scope: !8446, file: !1, line: 177, type: !8474)
!8474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8475, size: 64)
!8475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3384)
!8476 = !DILocation(line: 177, column: 19, scope: !8446)
!8477 = !DILocation(line: 177, column: 29, scope: !8446)
!8478 = !DILocation(line: 177, column: 38, scope: !8446)
!8479 = !DILocalVariable(name: "pa", scope: !8446, file: !1, line: 178, type: !1396)
!8480 = !DILocation(line: 178, column: 9, scope: !8446)
!8481 = !DILocation(line: 180, column: 12, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8446, file: !1, line: 180, column: 2)
!8483 = !DILocation(line: 180, column: 16, scope: !8482)
!8484 = !DILocation(line: 180, column: 23, scope: !8482)
!8485 = !DILocation(line: 180, column: 10, scope: !8482)
!8486 = !DILocation(line: 180, column: 7, scope: !8482)
!8487 = !DILocation(line: 180, column: 30, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8482, file: !1, line: 180, column: 2)
!8489 = !DILocation(line: 180, column: 2, scope: !8482)
!8490 = !DILocalVariable(name: "pt", scope: !8491, file: !1, line: 181, type: !3383)
!8491 = distinct !DILexicalBlock(scope: !8488, file: !1, line: 180, column: 49)
!8492 = !DILocation(line: 181, column: 14, scope: !8491)
!8493 = !DILocation(line: 181, column: 19, scope: !8491)
!8494 = !DILocation(line: 181, column: 23, scope: !8491)
!8495 = !DILocation(line: 184, column: 7, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8491, file: !1, line: 184, column: 7)
!8497 = !DILocation(line: 184, column: 10, scope: !8496)
!8498 = !DILocation(line: 184, column: 13, scope: !8496)
!8499 = !DILocation(line: 184, column: 21, scope: !8496)
!8500 = !DILocation(line: 184, column: 26, scope: !8496)
!8501 = !DILocation(line: 184, column: 30, scope: !8496)
!8502 = !DILocation(line: 184, column: 35, scope: !8496)
!8503 = !DILocation(line: 184, column: 7, scope: !8491)
!8504 = !DILocation(line: 185, column: 9, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !1, line: 185, column: 8)
!8506 = distinct !DILexicalBlock(scope: !8496, file: !1, line: 184, column: 53)
!8507 = !DILocation(line: 185, column: 13, scope: !8505)
!8508 = !DILocation(line: 185, column: 24, scope: !8505)
!8509 = !DILocation(line: 185, column: 28, scope: !8505)
!8510 = !DILocation(line: 185, column: 37, scope: !8505)
!8511 = !DILocation(line: 185, column: 48, scope: !8505)
!8512 = !DILocation(line: 185, column: 51, scope: !8505)
!8513 = !DILocation(line: 185, column: 8, scope: !8506)
!8514 = !DILocation(line: 186, column: 10, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8516, file: !1, line: 186, column: 9)
!8516 = distinct !DILexicalBlock(scope: !8505, file: !1, line: 185, column: 89)
!8517 = !DILocation(line: 186, column: 14, scope: !8515)
!8518 = !DILocation(line: 186, column: 19, scope: !8515)
!8519 = !DILocation(line: 186, column: 30, scope: !8515)
!8520 = !DILocation(line: 186, column: 34, scope: !8515)
!8521 = !DILocation(line: 186, column: 43, scope: !8515)
!8522 = !DILocation(line: 186, column: 47, scope: !8515)
!8523 = !DILocation(line: 186, column: 51, scope: !8515)
!8524 = !DILocation(line: 186, column: 63, scope: !8515)
!8525 = !DILocation(line: 186, column: 66, scope: !8515)
!8526 = !DILocation(line: 186, column: 9, scope: !8516)
!8527 = !DILocation(line: 187, column: 6, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8515, file: !1, line: 186, column: 97)
!8529 = !DILocation(line: 187, column: 10, scope: !8528)
!8530 = !DILocation(line: 187, column: 15, scope: !8528)
!8531 = !DILocation(line: 188, column: 18, scope: !8528)
!8532 = !DILocation(line: 188, column: 6, scope: !8528)
!8533 = !DILocation(line: 188, column: 10, scope: !8528)
!8534 = !DILocation(line: 188, column: 15, scope: !8528)
!8535 = !DILocation(line: 189, column: 5, scope: !8528)
!8536 = !DILocation(line: 190, column: 4, scope: !8516)
!8537 = !DILocation(line: 191, column: 3, scope: !8506)
!8538 = !DILocation(line: 192, column: 2, scope: !8491)
!8539 = !DILocation(line: 180, column: 39, scope: !8488)
!8540 = !DILocation(line: 180, column: 43, scope: !8488)
!8541 = !DILocation(line: 180, column: 37, scope: !8488)
!8542 = !DILocation(line: 180, column: 2, scope: !8488)
!8543 = distinct !{!8543, !8489, !8544}
!8544 = !DILocation(line: 192, column: 2, scope: !8482)
!8545 = !DILocation(line: 193, column: 1, scope: !8446)
!8546 = distinct !DISubprogram(name: "check_panel_overlap", scope: !1, file: !1, line: 1056, type: !8547, scopeLine: 1057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8547 = !DISubroutineType(types: !8548)
!8548 = !{null, !3252, !1396}
!8549 = !DILocalVariable(name: "ar", arg: 1, scope: !8546, file: !1, line: 1056, type: !3252)
!8550 = !DILocation(line: 1056, column: 42, scope: !8546)
!8551 = !DILocalVariable(name: "panel", arg: 2, scope: !8546, file: !1, line: 1056, type: !1396)
!8552 = !DILocation(line: 1056, column: 53, scope: !8546)
!8553 = !DILocalVariable(name: "pa", scope: !8546, file: !1, line: 1058, type: !1396)
!8554 = !DILocation(line: 1058, column: 9, scope: !8546)
!8555 = !DILocation(line: 1062, column: 12, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8546, file: !1, line: 1062, column: 2)
!8557 = !DILocation(line: 1062, column: 16, scope: !8556)
!8558 = !DILocation(line: 1062, column: 23, scope: !8556)
!8559 = !DILocation(line: 1062, column: 10, scope: !8556)
!8560 = !DILocation(line: 1062, column: 7, scope: !8556)
!8561 = !DILocation(line: 1062, column: 30, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8556, file: !1, line: 1062, column: 2)
!8563 = !DILocation(line: 1062, column: 2, scope: !8556)
!8564 = !DILocation(line: 1063, column: 3, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8562, file: !1, line: 1062, column: 49)
!8566 = !DILocation(line: 1063, column: 7, scope: !8565)
!8567 = !DILocation(line: 1063, column: 12, scope: !8565)
!8568 = !DILocation(line: 1064, column: 7, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8565, file: !1, line: 1064, column: 7)
!8570 = !DILocation(line: 1064, column: 13, scope: !8569)
!8571 = !DILocation(line: 1064, column: 17, scope: !8569)
!8572 = !DILocation(line: 1064, column: 23, scope: !8569)
!8573 = !DILocation(line: 1064, column: 20, scope: !8569)
!8574 = !DILocation(line: 1064, column: 7, scope: !8565)
!8575 = !DILocation(line: 1065, column: 8, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8577, file: !1, line: 1065, column: 8)
!8577 = distinct !DILexicalBlock(scope: !8569, file: !1, line: 1064, column: 31)
!8578 = !DILocation(line: 1065, column: 12, scope: !8576)
!8579 = !DILocation(line: 1065, column: 21, scope: !8576)
!8580 = !DILocation(line: 1065, column: 29, scope: !8576)
!8581 = !DILocation(line: 1065, column: 33, scope: !8576)
!8582 = !DILocation(line: 1065, column: 37, scope: !8576)
!8583 = !DILocation(line: 1065, column: 50, scope: !8576)
!8584 = !DILocation(line: 1065, column: 8, scope: !8577)
!8585 = !DILocalVariable(name: "safex", scope: !8586, file: !1, line: 1066, type: !1380)
!8586 = distinct !DILexicalBlock(scope: !8576, file: !1, line: 1065, column: 65)
!8587 = !DILocation(line: 1066, column: 11, scope: !8586)
!8588 = !DILocalVariable(name: "safey", scope: !8586, file: !1, line: 1066, type: !1380)
!8589 = !DILocation(line: 1066, column: 24, scope: !8586)
!8590 = !DILocation(line: 1068, column: 9, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8586, file: !1, line: 1068, column: 9)
!8592 = !DILocation(line: 1068, column: 13, scope: !8591)
!8593 = !DILocation(line: 1068, column: 18, scope: !8591)
!8594 = !DILocation(line: 1068, column: 9, scope: !8586)
!8595 = !DILocation(line: 1068, column: 39, scope: !8591)
!8596 = !DILocation(line: 1068, column: 33, scope: !8591)
!8597 = !DILocation(line: 1069, column: 14, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8591, file: !1, line: 1069, column: 14)
!8599 = !DILocation(line: 1069, column: 18, scope: !8598)
!8600 = !DILocation(line: 1069, column: 23, scope: !8598)
!8601 = !DILocation(line: 1069, column: 14, scope: !8591)
!8602 = !DILocation(line: 1069, column: 44, scope: !8598)
!8603 = !DILocation(line: 1069, column: 38, scope: !8598)
!8604 = !DILocation(line: 1070, column: 14, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8598, file: !1, line: 1070, column: 14)
!8606 = !DILocation(line: 1070, column: 21, scope: !8605)
!8607 = !DILocation(line: 1070, column: 26, scope: !8605)
!8608 = !DILocation(line: 1070, column: 14, scope: !8598)
!8609 = !DILocation(line: 1070, column: 47, scope: !8605)
!8610 = !DILocation(line: 1070, column: 41, scope: !8605)
!8611 = !DILocation(line: 1071, column: 14, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8605, file: !1, line: 1071, column: 14)
!8613 = !DILocation(line: 1071, column: 21, scope: !8612)
!8614 = !DILocation(line: 1071, column: 26, scope: !8612)
!8615 = !DILocation(line: 1071, column: 14, scope: !8605)
!8616 = !DILocation(line: 1071, column: 47, scope: !8612)
!8617 = !DILocation(line: 1071, column: 41, scope: !8612)
!8618 = !DILocation(line: 1073, column: 9, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8586, file: !1, line: 1073, column: 9)
!8620 = !DILocation(line: 1073, column: 13, scope: !8619)
!8621 = !DILocation(line: 1073, column: 20, scope: !8619)
!8622 = !DILocation(line: 1073, column: 27, scope: !8619)
!8623 = !DILocation(line: 1073, column: 34, scope: !8619)
!8624 = !DILocation(line: 1073, column: 42, scope: !8619)
!8625 = !DILocation(line: 1073, column: 49, scope: !8619)
!8626 = !DILocation(line: 1073, column: 40, scope: !8619)
!8627 = !DILocation(line: 1073, column: 32, scope: !8619)
!8628 = !DILocation(line: 1073, column: 18, scope: !8619)
!8629 = !DILocation(line: 1073, column: 9, scope: !8586)
!8630 = !DILocation(line: 1074, column: 10, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8619, file: !1, line: 1074, column: 10)
!8632 = !DILocation(line: 1074, column: 14, scope: !8631)
!8633 = !DILocation(line: 1074, column: 21, scope: !8631)
!8634 = !DILocation(line: 1074, column: 25, scope: !8631)
!8635 = !DILocation(line: 1074, column: 19, scope: !8631)
!8636 = !DILocation(line: 1074, column: 33, scope: !8631)
!8637 = !DILocation(line: 1074, column: 40, scope: !8631)
!8638 = !DILocation(line: 1074, column: 55, scope: !8631)
!8639 = !DILocation(line: 1074, column: 53, scope: !8631)
!8640 = !DILocation(line: 1074, column: 64, scope: !8631)
!8641 = !DILocation(line: 1074, column: 71, scope: !8631)
!8642 = !DILocation(line: 1074, column: 62, scope: !8631)
!8643 = !DILocation(line: 1074, column: 45, scope: !8631)
!8644 = !DILocation(line: 1074, column: 31, scope: !8631)
!8645 = !DILocation(line: 1074, column: 10, scope: !8619)
!8646 = !DILocation(line: 1075, column: 11, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8631, file: !1, line: 1075, column: 11)
!8648 = !DILocation(line: 1075, column: 15, scope: !8647)
!8649 = !DILocation(line: 1075, column: 22, scope: !8647)
!8650 = !DILocation(line: 1075, column: 29, scope: !8647)
!8651 = !DILocation(line: 1075, column: 36, scope: !8647)
!8652 = !DILocation(line: 1075, column: 44, scope: !8647)
!8653 = !DILocation(line: 1075, column: 51, scope: !8647)
!8654 = !DILocation(line: 1075, column: 42, scope: !8647)
!8655 = !DILocation(line: 1075, column: 34, scope: !8647)
!8656 = !DILocation(line: 1075, column: 20, scope: !8647)
!8657 = !DILocation(line: 1075, column: 11, scope: !8631)
!8658 = !DILocation(line: 1076, column: 12, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8647, file: !1, line: 1076, column: 12)
!8660 = !DILocation(line: 1076, column: 16, scope: !8659)
!8661 = !DILocation(line: 1076, column: 23, scope: !8659)
!8662 = !DILocation(line: 1076, column: 27, scope: !8659)
!8663 = !DILocation(line: 1076, column: 21, scope: !8659)
!8664 = !DILocation(line: 1076, column: 35, scope: !8659)
!8665 = !DILocation(line: 1076, column: 42, scope: !8659)
!8666 = !DILocation(line: 1076, column: 57, scope: !8659)
!8667 = !DILocation(line: 1076, column: 55, scope: !8659)
!8668 = !DILocation(line: 1076, column: 66, scope: !8659)
!8669 = !DILocation(line: 1076, column: 73, scope: !8659)
!8670 = !DILocation(line: 1076, column: 64, scope: !8659)
!8671 = !DILocation(line: 1076, column: 47, scope: !8659)
!8672 = !DILocation(line: 1076, column: 33, scope: !8659)
!8673 = !DILocation(line: 1076, column: 12, scope: !8647)
!8674 = !DILocation(line: 1077, column: 9, scope: !8659)
!8675 = !DILocation(line: 1077, column: 13, scope: !8659)
!8676 = !DILocation(line: 1077, column: 18, scope: !8659)
!8677 = !DILocation(line: 1078, column: 4, scope: !8586)
!8678 = !DILocation(line: 1079, column: 3, scope: !8577)
!8679 = !DILocation(line: 1080, column: 2, scope: !8565)
!8680 = !DILocation(line: 1062, column: 39, scope: !8562)
!8681 = !DILocation(line: 1062, column: 43, scope: !8562)
!8682 = !DILocation(line: 1062, column: 37, scope: !8562)
!8683 = !DILocation(line: 1062, column: 2, scope: !8562)
!8684 = distinct !{!8684, !8563, !8685}
!8685 = !DILocation(line: 1080, column: 2, scope: !8556)
!8686 = !DILocation(line: 1081, column: 1, scope: !8546)
!8687 = distinct !DISubprogram(name: "ui_handler_panel", scope: !1, file: !1, line: 1858, type: !8688, scopeLine: 1859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8688 = !DISubroutineType(types: !8689)
!8689 = !{!1420, !7285, !6360, !1379}
!8690 = !DILocalVariable(name: "C", arg: 1, scope: !8687, file: !1, line: 1858, type: !7285)
!8691 = !DILocation(line: 1858, column: 39, scope: !8687)
!8692 = !DILocalVariable(name: "event", arg: 2, scope: !8687, file: !1, line: 1858, type: !6360)
!8693 = !DILocation(line: 1858, column: 57, scope: !8687)
!8694 = !DILocalVariable(name: "userdata", arg: 3, scope: !8687, file: !1, line: 1858, type: !1379)
!8695 = !DILocation(line: 1858, column: 70, scope: !8687)
!8696 = !DILocalVariable(name: "panel", scope: !8687, file: !1, line: 1860, type: !1396)
!8697 = !DILocation(line: 1860, column: 9, scope: !8687)
!8698 = !DILocation(line: 1860, column: 17, scope: !8687)
!8699 = !DILocalVariable(name: "data", scope: !8687, file: !1, line: 1861, type: !5282)
!8700 = !DILocation(line: 1861, column: 21, scope: !8687)
!8701 = !DILocation(line: 1861, column: 28, scope: !8687)
!8702 = !DILocation(line: 1861, column: 35, scope: !8687)
!8703 = !DILocation(line: 1864, column: 6, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8687, file: !1, line: 1864, column: 6)
!8705 = !DILocation(line: 1864, column: 13, scope: !8704)
!8706 = !DILocation(line: 1864, column: 18, scope: !8704)
!8707 = !DILocation(line: 1864, column: 31, scope: !8704)
!8708 = !DILocation(line: 1864, column: 34, scope: !8704)
!8709 = !DILocation(line: 1864, column: 41, scope: !8704)
!8710 = !DILocation(line: 1864, column: 45, scope: !8704)
!8711 = !DILocation(line: 1864, column: 6, scope: !8687)
!8712 = !DILocalVariable(name: "sa", scope: !8713, file: !1, line: 1865, type: !3338)
!8713 = distinct !DILexicalBlock(scope: !8704, file: !1, line: 1864, column: 58)
!8714 = !DILocation(line: 1865, column: 12, scope: !8713)
!8715 = !DILocation(line: 1865, column: 29, scope: !8713)
!8716 = !DILocation(line: 1865, column: 17, scope: !8713)
!8717 = !DILocalVariable(name: "ar", scope: !8713, file: !1, line: 1866, type: !3252)
!8718 = !DILocation(line: 1866, column: 12, scope: !8713)
!8719 = !DILocation(line: 1866, column: 31, scope: !8713)
!8720 = !DILocation(line: 1866, column: 17, scope: !8713)
!8721 = !DILocalVariable(name: "align", scope: !8713, file: !1, line: 1867, type: !1420)
!8722 = !DILocation(line: 1867, column: 7, scope: !8713)
!8723 = !DILocation(line: 1867, column: 29, scope: !8713)
!8724 = !DILocation(line: 1867, column: 33, scope: !8713)
!8725 = !DILocation(line: 1867, column: 15, scope: !8713)
!8726 = !DILocation(line: 1869, column: 7, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8713, file: !1, line: 1869, column: 7)
!8728 = !DILocation(line: 1869, column: 7, scope: !8713)
!8729 = !DILocation(line: 1870, column: 25, scope: !8727)
!8730 = !DILocation(line: 1870, column: 28, scope: !8727)
!8731 = !DILocation(line: 1870, column: 4, scope: !8727)
!8732 = !DILocation(line: 1872, column: 25, scope: !8727)
!8733 = !DILocation(line: 1872, column: 28, scope: !8727)
!8734 = !DILocation(line: 1872, column: 4, scope: !8727)
!8735 = !DILocation(line: 1873, column: 2, scope: !8713)
!8736 = !DILocation(line: 1874, column: 11, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8704, file: !1, line: 1874, column: 11)
!8738 = !DILocation(line: 1874, column: 18, scope: !8737)
!8739 = !DILocation(line: 1874, column: 23, scope: !8737)
!8740 = !DILocation(line: 1874, column: 11, scope: !8704)
!8741 = !DILocation(line: 1875, column: 7, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !1, line: 1875, column: 7)
!8743 = distinct !DILexicalBlock(scope: !8737, file: !1, line: 1874, column: 37)
!8744 = !DILocation(line: 1875, column: 13, scope: !8742)
!8745 = !DILocation(line: 1875, column: 19, scope: !8742)
!8746 = !DILocation(line: 1875, column: 7, scope: !8743)
!8747 = !DILocation(line: 1876, column: 15, scope: !8742)
!8748 = !DILocation(line: 1876, column: 18, scope: !8742)
!8749 = !DILocation(line: 1876, column: 25, scope: !8742)
!8750 = !DILocation(line: 1876, column: 4, scope: !8742)
!8751 = !DILocation(line: 1877, column: 2, scope: !8743)
!8752 = !DILocation(line: 1878, column: 11, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8737, file: !1, line: 1878, column: 11)
!8754 = !DILocation(line: 1878, column: 18, scope: !8753)
!8755 = !DILocation(line: 1878, column: 23, scope: !8753)
!8756 = !DILocation(line: 1878, column: 32, scope: !8753)
!8757 = !DILocation(line: 1878, column: 35, scope: !8753)
!8758 = !DILocation(line: 1878, column: 42, scope: !8753)
!8759 = !DILocation(line: 1878, column: 56, scope: !8753)
!8760 = !DILocation(line: 1878, column: 62, scope: !8753)
!8761 = !DILocation(line: 1878, column: 53, scope: !8753)
!8762 = !DILocation(line: 1878, column: 11, scope: !8737)
!8763 = !DILocation(line: 1879, column: 7, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !1, line: 1879, column: 7)
!8765 = distinct !DILexicalBlock(scope: !8753, file: !1, line: 1878, column: 73)
!8766 = !DILocation(line: 1879, column: 13, scope: !8764)
!8767 = !DILocation(line: 1879, column: 19, scope: !8764)
!8768 = !DILocation(line: 1879, column: 7, scope: !8765)
!8769 = !DILocation(line: 1880, column: 18, scope: !8764)
!8770 = !DILocation(line: 1880, column: 21, scope: !8764)
!8771 = !DILocation(line: 1880, column: 4, scope: !8764)
!8772 = !DILocation(line: 1881, column: 12, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8764, file: !1, line: 1881, column: 12)
!8774 = !DILocation(line: 1881, column: 18, scope: !8773)
!8775 = !DILocation(line: 1881, column: 24, scope: !8773)
!8776 = !DILocation(line: 1881, column: 12, scope: !8764)
!8777 = !DILocation(line: 1882, column: 15, scope: !8773)
!8778 = !DILocation(line: 1882, column: 18, scope: !8773)
!8779 = !DILocation(line: 1882, column: 25, scope: !8773)
!8780 = !DILocation(line: 1882, column: 4, scope: !8773)
!8781 = !DILocation(line: 1883, column: 2, scope: !8765)
!8782 = !DILocation(line: 1885, column: 9, scope: !8687)
!8783 = !DILocation(line: 1885, column: 16, scope: !8687)
!8784 = !DILocation(line: 1885, column: 7, scope: !8687)
!8785 = !DILocation(line: 1887, column: 6, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8687, file: !1, line: 1887, column: 6)
!8787 = !DILocation(line: 1887, column: 11, scope: !8786)
!8788 = !DILocation(line: 1887, column: 14, scope: !8786)
!8789 = !DILocation(line: 1887, column: 20, scope: !8786)
!8790 = !DILocation(line: 1887, column: 26, scope: !8786)
!8791 = !DILocation(line: 1887, column: 6, scope: !8687)
!8792 = !DILocation(line: 1888, column: 3, scope: !8786)
!8793 = !DILocation(line: 1890, column: 3, scope: !8786)
!8794 = !DILocation(line: 1891, column: 1, scope: !8687)
!8795 = distinct !DISubprogram(name: "ui_handler_remove_panel", scope: !1, file: !1, line: 1893, type: !8796, scopeLine: 1894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8796 = !DISubroutineType(types: !8797)
!8797 = !{null, !7285, !1379}
!8798 = !DILocalVariable(name: "C", arg: 1, scope: !8795, file: !1, line: 1893, type: !7285)
!8799 = !DILocation(line: 1893, column: 47, scope: !8795)
!8800 = !DILocalVariable(name: "userdata", arg: 2, scope: !8795, file: !1, line: 1893, type: !1379)
!8801 = !DILocation(line: 1893, column: 56, scope: !8795)
!8802 = !DILocalVariable(name: "pa", scope: !8795, file: !1, line: 1895, type: !1396)
!8803 = !DILocation(line: 1895, column: 9, scope: !8795)
!8804 = !DILocation(line: 1895, column: 14, scope: !8795)
!8805 = !DILocation(line: 1897, column: 23, scope: !8795)
!8806 = !DILocation(line: 1897, column: 26, scope: !8795)
!8807 = !DILocation(line: 1897, column: 2, scope: !8795)
!8808 = !DILocation(line: 1898, column: 1, scope: !8795)
!8809 = distinct !DISubprogram(name: "ui_do_drag", scope: !1, file: !1, line: 1085, type: !8810, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8810 = !DISubroutineType(types: !8811)
!8811 = !{null, !4668, !6360, !1396}
!8812 = !DILocalVariable(name: "C", arg: 1, scope: !8809, file: !1, line: 1085, type: !4668)
!8813 = !DILocation(line: 1085, column: 40, scope: !8809)
!8814 = !DILocalVariable(name: "event", arg: 2, scope: !8809, file: !1, line: 1085, type: !6360)
!8815 = !DILocation(line: 1085, column: 58, scope: !8809)
!8816 = !DILocalVariable(name: "panel", arg: 3, scope: !8809, file: !1, line: 1085, type: !1396)
!8817 = !DILocation(line: 1085, column: 72, scope: !8809)
!8818 = !DILocalVariable(name: "data", scope: !8809, file: !1, line: 1087, type: !5282)
!8819 = !DILocation(line: 1087, column: 21, scope: !8809)
!8820 = !DILocation(line: 1087, column: 28, scope: !8809)
!8821 = !DILocation(line: 1087, column: 35, scope: !8809)
!8822 = !DILocalVariable(name: "sa", scope: !8809, file: !1, line: 1088, type: !3338)
!8823 = !DILocation(line: 1088, column: 11, scope: !8809)
!8824 = !DILocation(line: 1088, column: 28, scope: !8809)
!8825 = !DILocation(line: 1088, column: 16, scope: !8809)
!8826 = !DILocalVariable(name: "ar", scope: !8809, file: !1, line: 1089, type: !3252)
!8827 = !DILocation(line: 1089, column: 11, scope: !8809)
!8828 = !DILocation(line: 1089, column: 30, scope: !8809)
!8829 = !DILocation(line: 1089, column: 16, scope: !8809)
!8830 = !DILocalVariable(name: "align", scope: !8809, file: !1, line: 1090, type: !1488)
!8831 = !DILocation(line: 1090, column: 8, scope: !8809)
!8832 = !DILocation(line: 1090, column: 30, scope: !8809)
!8833 = !DILocation(line: 1090, column: 34, scope: !8809)
!8834 = !DILocation(line: 1090, column: 16, scope: !8809)
!8835 = !DILocalVariable(name: "dx", scope: !8809, file: !1, line: 1090, type: !1488)
!8836 = !DILocation(line: 1090, column: 39, scope: !8809)
!8837 = !DILocalVariable(name: "dy", scope: !8809, file: !1, line: 1090, type: !1488)
!8838 = !DILocation(line: 1090, column: 47, scope: !8809)
!8839 = !DILocation(line: 1093, column: 28, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8809, file: !1, line: 1093, column: 6)
!8841 = !DILocation(line: 1093, column: 32, scope: !8840)
!8842 = !DILocation(line: 1093, column: 41, scope: !8840)
!8843 = !DILocation(line: 1093, column: 48, scope: !8840)
!8844 = !DILocation(line: 1093, column: 7, scope: !8840)
!8845 = !DILocation(line: 1093, column: 6, scope: !8809)
!8846 = !DILocation(line: 1094, column: 3, scope: !8840)
!8847 = !DILocation(line: 1096, column: 8, scope: !8809)
!8848 = !DILocation(line: 1096, column: 15, scope: !8809)
!8849 = !DILocation(line: 1096, column: 19, scope: !8809)
!8850 = !DILocation(line: 1096, column: 25, scope: !8809)
!8851 = !DILocation(line: 1096, column: 17, scope: !8809)
!8852 = !DILocation(line: 1096, column: 37, scope: !8809)
!8853 = !DILocation(line: 1096, column: 46, scope: !8809)
!8854 = !DILocation(line: 1096, column: 35, scope: !8809)
!8855 = !DILocation(line: 1096, column: 33, scope: !8809)
!8856 = !DILocation(line: 1096, column: 7, scope: !8809)
!8857 = !DILocation(line: 1096, column: 5, scope: !8809)
!8858 = !DILocation(line: 1097, column: 8, scope: !8809)
!8859 = !DILocation(line: 1097, column: 15, scope: !8809)
!8860 = !DILocation(line: 1097, column: 19, scope: !8809)
!8861 = !DILocation(line: 1097, column: 25, scope: !8809)
!8862 = !DILocation(line: 1097, column: 17, scope: !8809)
!8863 = !DILocation(line: 1097, column: 37, scope: !8809)
!8864 = !DILocation(line: 1097, column: 46, scope: !8809)
!8865 = !DILocation(line: 1097, column: 35, scope: !8809)
!8866 = !DILocation(line: 1097, column: 33, scope: !8809)
!8867 = !DILocation(line: 1097, column: 7, scope: !8809)
!8868 = !DILocation(line: 1097, column: 5, scope: !8809)
!8869 = !DILocation(line: 1099, column: 32, scope: !8809)
!8870 = !DILocation(line: 1099, column: 36, scope: !8809)
!8871 = !DILocation(line: 1099, column: 40, scope: !8809)
!8872 = !DILocation(line: 1099, column: 15, scope: !8809)
!8873 = !DILocation(line: 1099, column: 71, scope: !8809)
!8874 = !DILocation(line: 1099, column: 75, scope: !8809)
!8875 = !DILocation(line: 1099, column: 54, scope: !8809)
!8876 = !DILocation(line: 1099, column: 47, scope: !8809)
!8877 = !DILocation(line: 1099, column: 45, scope: !8809)
!8878 = !DILocation(line: 1099, column: 5, scope: !8809)
!8879 = !DILocation(line: 1100, column: 32, scope: !8809)
!8880 = !DILocation(line: 1100, column: 36, scope: !8809)
!8881 = !DILocation(line: 1100, column: 40, scope: !8809)
!8882 = !DILocation(line: 1100, column: 15, scope: !8809)
!8883 = !DILocation(line: 1100, column: 71, scope: !8809)
!8884 = !DILocation(line: 1100, column: 75, scope: !8809)
!8885 = !DILocation(line: 1100, column: 54, scope: !8809)
!8886 = !DILocation(line: 1100, column: 47, scope: !8809)
!8887 = !DILocation(line: 1100, column: 45, scope: !8809)
!8888 = !DILocation(line: 1100, column: 5, scope: !8809)
!8889 = !DILocation(line: 1102, column: 6, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8809, file: !1, line: 1102, column: 6)
!8891 = !DILocation(line: 1102, column: 12, scope: !8890)
!8892 = !DILocation(line: 1102, column: 18, scope: !8890)
!8893 = !DILocation(line: 1102, column: 6, scope: !8809)
!8894 = !DILocation(line: 1103, column: 18, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8890, file: !1, line: 1102, column: 45)
!8896 = !DILocation(line: 1103, column: 3, scope: !8895)
!8897 = !DILocation(line: 1103, column: 10, scope: !8895)
!8898 = !DILocation(line: 1103, column: 16, scope: !8895)
!8899 = !DILocation(line: 1105, column: 7, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8895, file: !1, line: 1105, column: 7)
!8901 = !DILocation(line: 1105, column: 13, scope: !8900)
!8902 = !DILocation(line: 1105, column: 26, scope: !8900)
!8903 = !DILocation(line: 1105, column: 24, scope: !8900)
!8904 = !DILocation(line: 1105, column: 29, scope: !8900)
!8905 = !DILocation(line: 1105, column: 7, scope: !8895)
!8906 = !DILocation(line: 1106, column: 26, scope: !8900)
!8907 = !DILocation(line: 1106, column: 32, scope: !8900)
!8908 = !DILocation(line: 1106, column: 24, scope: !8900)
!8909 = !DILocation(line: 1106, column: 9, scope: !8900)
!8910 = !DILocation(line: 1106, column: 7, scope: !8900)
!8911 = !DILocation(line: 1106, column: 4, scope: !8900)
!8912 = !DILocation(line: 1108, column: 18, scope: !8895)
!8913 = !DILocation(line: 1108, column: 24, scope: !8895)
!8914 = !DILocation(line: 1108, column: 37, scope: !8895)
!8915 = !DILocation(line: 1108, column: 35, scope: !8895)
!8916 = !DILocation(line: 1108, column: 3, scope: !8895)
!8917 = !DILocation(line: 1108, column: 10, scope: !8895)
!8918 = !DILocation(line: 1108, column: 16, scope: !8895)
!8919 = !DILocation(line: 1109, column: 17, scope: !8895)
!8920 = !DILocation(line: 1109, column: 23, scope: !8895)
!8921 = !DILocation(line: 1109, column: 35, scope: !8895)
!8922 = !DILocation(line: 1109, column: 33, scope: !8895)
!8923 = !DILocation(line: 1109, column: 3, scope: !8895)
!8924 = !DILocation(line: 1109, column: 10, scope: !8895)
!8925 = !DILocation(line: 1109, column: 15, scope: !8895)
!8926 = !DILocation(line: 1110, column: 2, scope: !8895)
!8927 = !DILocation(line: 1113, column: 3, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8890, file: !1, line: 1111, column: 7)
!8929 = !DILocation(line: 1113, column: 10, scope: !8928)
!8930 = !DILocation(line: 1113, column: 15, scope: !8928)
!8931 = !DILocation(line: 1115, column: 17, scope: !8928)
!8932 = !DILocation(line: 1115, column: 23, scope: !8928)
!8933 = !DILocation(line: 1115, column: 35, scope: !8928)
!8934 = !DILocation(line: 1115, column: 33, scope: !8928)
!8935 = !DILocation(line: 1115, column: 3, scope: !8928)
!8936 = !DILocation(line: 1115, column: 10, scope: !8928)
!8937 = !DILocation(line: 1115, column: 15, scope: !8928)
!8938 = !DILocation(line: 1116, column: 17, scope: !8928)
!8939 = !DILocation(line: 1116, column: 23, scope: !8928)
!8940 = !DILocation(line: 1116, column: 35, scope: !8928)
!8941 = !DILocation(line: 1116, column: 33, scope: !8928)
!8942 = !DILocation(line: 1116, column: 3, scope: !8928)
!8943 = !DILocation(line: 1116, column: 10, scope: !8928)
!8944 = !DILocation(line: 1116, column: 15, scope: !8928)
!8945 = !DILocation(line: 1117, column: 23, scope: !8928)
!8946 = !DILocation(line: 1117, column: 27, scope: !8928)
!8947 = !DILocation(line: 1117, column: 3, scope: !8928)
!8948 = !DILocation(line: 1119, column: 7, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8928, file: !1, line: 1119, column: 7)
!8950 = !DILocation(line: 1119, column: 7, scope: !8928)
!8951 = !DILocation(line: 1119, column: 31, scope: !8949)
!8952 = !DILocation(line: 1119, column: 35, scope: !8949)
!8953 = !DILocation(line: 1119, column: 14, scope: !8949)
!8954 = !DILocation(line: 1122, column: 23, scope: !8809)
!8955 = !DILocation(line: 1122, column: 2, scope: !8809)
!8956 = !DILocation(line: 1123, column: 1, scope: !8809)
!8957 = distinct !DISubprogram(name: "ui_do_animate", scope: !1, file: !1, line: 917, type: !8958, scopeLine: 918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!8958 = !DISubroutineType(types: !8959)
!8959 = !{null, !4668, !1396}
!8960 = !DILocalVariable(name: "C", arg: 1, scope: !8957, file: !1, line: 917, type: !4668)
!8961 = !DILocation(line: 917, column: 43, scope: !8957)
!8962 = !DILocalVariable(name: "panel", arg: 2, scope: !8957, file: !1, line: 917, type: !1396)
!8963 = !DILocation(line: 917, column: 53, scope: !8957)
!8964 = !DILocalVariable(name: "data", scope: !8957, file: !1, line: 919, type: !5282)
!8965 = !DILocation(line: 919, column: 21, scope: !8957)
!8966 = !DILocation(line: 919, column: 28, scope: !8957)
!8967 = !DILocation(line: 919, column: 35, scope: !8957)
!8968 = !DILocalVariable(name: "sa", scope: !8957, file: !1, line: 920, type: !3338)
!8969 = !DILocation(line: 920, column: 11, scope: !8957)
!8970 = !DILocation(line: 920, column: 28, scope: !8957)
!8971 = !DILocation(line: 920, column: 16, scope: !8957)
!8972 = !DILocalVariable(name: "ar", scope: !8957, file: !1, line: 921, type: !3252)
!8973 = !DILocation(line: 921, column: 11, scope: !8957)
!8974 = !DILocation(line: 921, column: 30, scope: !8957)
!8975 = !DILocation(line: 921, column: 16, scope: !8957)
!8976 = !DILocalVariable(name: "fac", scope: !8957, file: !1, line: 922, type: !1380)
!8977 = !DILocation(line: 922, column: 8, scope: !8957)
!8978 = !DILocation(line: 924, column: 9, scope: !8957)
!8979 = !DILocation(line: 924, column: 37, scope: !8957)
!8980 = !DILocation(line: 924, column: 43, scope: !8957)
!8981 = !DILocation(line: 924, column: 35, scope: !8957)
!8982 = !DILocation(line: 924, column: 54, scope: !8957)
!8983 = !DILocation(line: 924, column: 8, scope: !8957)
!8984 = !DILocation(line: 924, column: 6, scope: !8957)
!8985 = !DILocation(line: 925, column: 21, scope: !8957)
!8986 = !DILocation(line: 925, column: 15, scope: !8957)
!8987 = !DILocation(line: 925, column: 8, scope: !8957)
!8988 = !DILocation(line: 925, column: 6, scope: !8957)
!8989 = !DILocation(line: 928, column: 23, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8957, file: !1, line: 928, column: 6)
!8991 = !DILocation(line: 928, column: 27, scope: !8990)
!8992 = !DILocation(line: 928, column: 31, scope: !8990)
!8993 = !DILocation(line: 928, column: 6, scope: !8990)
!8994 = !DILocation(line: 928, column: 6, scope: !8957)
!8995 = !DILocation(line: 929, column: 24, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8990, file: !1, line: 928, column: 44)
!8997 = !DILocation(line: 929, column: 3, scope: !8996)
!8998 = !DILocation(line: 930, column: 2, scope: !8996)
!8999 = !DILocation(line: 932, column: 7, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8990, file: !1, line: 931, column: 7)
!9001 = !DILocation(line: 935, column: 6, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8957, file: !1, line: 935, column: 6)
!9003 = !DILocation(line: 935, column: 10, scope: !9002)
!9004 = !DILocation(line: 935, column: 6, scope: !8957)
!9005 = !DILocation(line: 936, column: 24, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9002, file: !1, line: 935, column: 19)
!9007 = !DILocation(line: 936, column: 27, scope: !9006)
!9008 = !DILocation(line: 936, column: 3, scope: !9006)
!9009 = !DILocation(line: 937, column: 3, scope: !9006)
!9010 = !DILocation(line: 939, column: 1, scope: !8957)
!9011 = distinct !DISubprogram(name: "BLI_rcti_size_x", scope: !4345, file: !4345, line: 105, type: !4346, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!9012 = !DILocalVariable(name: "rct", arg: 1, scope: !9011, file: !4345, line: 105, type: !4348)
!9013 = !DILocation(line: 105, column: 53, scope: !9011)
!9014 = !DILocation(line: 105, column: 68, scope: !9011)
!9015 = !DILocation(line: 105, column: 73, scope: !9011)
!9016 = !DILocation(line: 105, column: 80, scope: !9011)
!9017 = !DILocation(line: 105, column: 85, scope: !9011)
!9018 = !DILocation(line: 105, column: 78, scope: !9011)
!9019 = !DILocation(line: 105, column: 60, scope: !9011)
!9020 = distinct !DISubprogram(name: "min_ff", scope: !7008, file: !7008, line: 202, type: !9021, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !3385)
!9021 = !DISubroutineType(types: !9022)
!9022 = !{!1380, !1380, !1380}
!9023 = !DILocalVariable(name: "a", arg: 1, scope: !9020, file: !7008, line: 202, type: !1380)
!9024 = !DILocation(line: 202, column: 28, scope: !9020)
!9025 = !DILocalVariable(name: "b", arg: 2, scope: !9020, file: !7008, line: 202, type: !1380)
!9026 = !DILocation(line: 202, column: 37, scope: !9020)
!9027 = !DILocation(line: 204, column: 10, scope: !9020)
!9028 = !DILocation(line: 204, column: 14, scope: !9020)
!9029 = !DILocation(line: 204, column: 12, scope: !9020)
!9030 = !DILocation(line: 204, column: 9, scope: !9020)
!9031 = !DILocation(line: 204, column: 19, scope: !9020)
!9032 = !DILocation(line: 204, column: 23, scope: !9020)
!9033 = !DILocation(line: 204, column: 2, scope: !9020)
