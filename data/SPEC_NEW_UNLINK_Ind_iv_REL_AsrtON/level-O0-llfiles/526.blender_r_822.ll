; ModuleID = 'blender/source/blender/editors/mesh/editmesh_tools.c'
source_filename = "blender/source/blender/editors/mesh/editmesh_tools.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.StructRNA = type opaque
%struct.BMAllocTemplate = type { i32, i32, i32, i32 }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.bContext = type opaque
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.uiLayout = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.PropertyRNA = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BLI_mempool = type opaque
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.EdgeRingOpSubdProps = type { i32, i32, float, i32, float }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.BMIter = type { %union.anon.0, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.0 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type { i16, i16, i16, i16, float*, [2 x double], i8 }
%struct.SmoothView3DStore = type opaque
%struct.BMElem = type { %struct.BMHeader }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type { %struct.ID, %struct.AnimData*, %struct.KeyBlock*, [32 x i8], i32, i32, %struct.ListBase, %struct.Ipo*, %struct.ID*, i16, i16, i16, i16, float, i32 }
%struct.KeyBlock = type { %struct.KeyBlock*, %struct.KeyBlock*, float, float, i16, i16, i16, i16, i32, i32, i8*, [64 x i8], [64 x i8], float, float }
%struct.MSelect = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoop = type { i32, i32 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.MirrorModifierData = type { %struct.ModifierData, i16, i16, float, %struct.Object* }
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.BMEditSelection = type { %struct.BMEditSelection*, %struct.BMEditSelection*, %struct.BMElem*, i8 }
%struct.CollectionPropertyIterator = type { %struct.PointerRNA, %struct.PointerRNA, %struct.PropertyRNA*, %union.anon.1, i32, i32, %struct.PointerRNA, i32 }
%union.anon.1 = type { %struct.ArrayIterator }
%struct.ArrayIterator = type { i8*, i8*, i8*, i32, i32, i32 (%struct.CollectionPropertyIterator*, i8*)* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.CollectionPointerLink = type { %struct.CollectionPointerLink*, %struct.CollectionPointerLink*, %struct.PointerRNA }
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.ImagePool = type opaque
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%union.anon.2 = type { i8* }
%struct.BMWalker = type { i8, void (%struct.BMWalker*, i8*)*, i8* (%struct.BMWalker*)*, i8* (%struct.BMWalker*)*, i32, i32, i32, i32, %struct.BMesh*, %struct.BLI_mempool*, %struct.ListBase, i16, i16, i16, i32, %struct.GSet*, %struct.GSet*, i32 }
%struct.GSet = type opaque
%struct.BMEdgeLoopStore = type opaque
%struct.LinkData = type { %struct.LinkData*, %struct.LinkData*, i8* }
%struct.SortPointerByFloat = type { float, i8* }
%struct.BMElemSort = type { float, i32 }
%struct.RNG = type opaque

@.str = private unnamed_addr constant [10 x i8] c"Subdivide\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"Subdivide selected edges\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"MESH_OT_subdivide\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"number_cuts\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"Number of Cuts\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"smoothness\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"Smoothness\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"Smoothness factor\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"quadtri\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"Quad/Tri Mode\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"Tries to prevent ngons\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"quadcorner\00", align 1
@prop_mesh_cornervert_types = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.380, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.381, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.382, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.383, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.384, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.385, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.386, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.387, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !0
@.str.13 = private unnamed_addr constant [17 x i8] c"Quad Corner Type\00", align 1
@.str.14 = private unnamed_addr constant [84 x i8] c"How to subdivide quad corners (anything other than Straight Cut will prevent ngons)\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"fractal\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"Fractal\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"Fractal randomness factor\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"fractal_along_normal\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"Along Normal\00", align 1
@.str.20 = private unnamed_addr constant [45 x i8] c"Apply fractal displacement along normal only\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"seed\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"Random Seed\00", align 1
@.str.23 = private unnamed_addr constant [37 x i8] c"Seed for the random number generator\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"Subdivide Edge-Ring\00", align 1
@.str.25 = private unnamed_addr constant [27 x i8] c"MESH_OT_subdivide_edgering\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"Un-Subdivide\00", align 1
@.str.27 = private unnamed_addr constant [35 x i8] c"UnSubdivide selected edges & faces\00", align 1
@.str.28 = private unnamed_addr constant [20 x i8] c"MESH_OT_unsubdivide\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"iterations\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"Iterations\00", align 1
@.str.31 = private unnamed_addr constant [31 x i8] c"Number of times to unsubdivide\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.33 = private unnamed_addr constant [41 x i8] c"Delete selected vertices, edges or faces\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"MESH_OT_delete\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@prop_mesh_delete_types = internal global [6 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.313, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.314, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.315, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.408, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.409, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.410, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.411, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !4053
@.str.36 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.37 = private unnamed_addr constant [35 x i8] c"Method used for deleting mesh data\00", align 1
@.str.38 = private unnamed_addr constant [13 x i8] c"Delete Loose\00", align 1
@.str.39 = private unnamed_addr constant [38 x i8] c"Delete loose vertices, edges or faces\00", align 1
@.str.40 = private unnamed_addr constant [21 x i8] c"MESH_OT_delete_loose\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"use_verts\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"Vertices\00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"Remove loose vertices\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"use_edges\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"Edges\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"Remove loose edges\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"use_faces\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"Faces\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"Remove loose faces\00", align 1
@.str.50 = private unnamed_addr constant [14 x i8] c"Edge Collapse\00", align 1
@.str.51 = private unnamed_addr constant [24 x i8] c"Collapse selected edges\00", align 1
@.str.52 = private unnamed_addr constant [22 x i8] c"MESH_OT_edge_collapse\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"Make Edge/Face\00", align 1
@.str.54 = private unnamed_addr constant [32 x i8] c"Add an edge or face to selected\00", align 1
@.str.55 = private unnamed_addr constant [22 x i8] c"MESH_OT_edge_face_add\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"Mark Seam\00", align 1
@.str.57 = private unnamed_addr constant [18 x i8] c"MESH_OT_mark_seam\00", align 1
@.str.58 = private unnamed_addr constant [34 x i8] c"(Un)mark selected edges as a seam\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"Clear\00", align 1
@.str.61 = private unnamed_addr constant [11 x i8] c"Mark Sharp\00", align 1
@.str.62 = private unnamed_addr constant [19 x i8] c"MESH_OT_mark_sharp\00", align 1
@.str.63 = private unnamed_addr constant [33 x i8] c"(Un)mark selected edges as sharp\00", align 1
@.str.64 = private unnamed_addr constant [77 x i8] c"Consider vertices instead of edges to select which edges to (un)tag as sharp\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"Vertex Connect\00", align 1
@.str.66 = private unnamed_addr constant [21 x i8] c"MESH_OT_vert_connect\00", align 1
@.str.67 = private unnamed_addr constant [67 x i8] c"Connect 2 vertices of a face by an edge, splitting the face in two\00", align 1
@.str.68 = private unnamed_addr constant [23 x i8] c"Split Non-Planar Faces\00", align 1
@.str.69 = private unnamed_addr constant [31 x i8] c"MESH_OT_vert_connect_nonplanar\00", align 1
@.str.70 = private unnamed_addr constant [55 x i8] c"Split non-planar faces that exceed the angle threshold\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"angle_limit\00", align 1
@.str.72 = private unnamed_addr constant [10 x i8] c"Max Angle\00", align 1
@.str.73 = private unnamed_addr constant [12 x i8] c"Angle limit\00", align 1
@.str.74 = private unnamed_addr constant [11 x i8] c"Edge Split\00", align 1
@.str.75 = private unnamed_addr constant [19 x i8] c"MESH_OT_edge_split\00", align 1
@.str.76 = private unnamed_addr constant [66 x i8] c"Split selected edges so that each neighbor face gets its own copy\00", align 1
@.str.77 = private unnamed_addr constant [10 x i8] c"Duplicate\00", align 1
@.str.78 = private unnamed_addr constant [44 x i8] c"Duplicate selected vertices, edges or faces\00", align 1
@.str.79 = private unnamed_addr constant [18 x i8] c"MESH_OT_duplicate\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.81 = private unnamed_addr constant [5 x i8] c"Mode\00", align 1
@.str.82 = private unnamed_addr constant [13 x i8] c"Flip Normals\00", align 1
@.str.83 = private unnamed_addr constant [70 x i8] c"Flip the direction of selected faces' normals (and of their vertices)\00", align 1
@.str.84 = private unnamed_addr constant [21 x i8] c"MESH_OT_flip_normals\00", align 1
@.str.85 = private unnamed_addr constant [21 x i8] c"Rotate Selected Edge\00", align 1
@.str.86 = private unnamed_addr constant [40 x i8] c"Rotate selected edge or adjoining faces\00", align 1
@.str.87 = private unnamed_addr constant [20 x i8] c"MESH_OT_edge_rotate\00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c"use_ccw\00", align 1
@.str.89 = private unnamed_addr constant [18 x i8] c"Counter Clockwise\00", align 1
@.str.90 = private unnamed_addr constant [15 x i8] c"Hide Selection\00", align 1
@.str.91 = private unnamed_addr constant [13 x i8] c"MESH_OT_hide\00", align 1
@.str.92 = private unnamed_addr constant [43 x i8] c"Hide (un)selected vertices, edges or faces\00", align 1
@.str.93 = private unnamed_addr constant [11 x i8] c"unselected\00", align 1
@.str.94 = private unnamed_addr constant [11 x i8] c"Unselected\00", align 1
@.str.95 = private unnamed_addr constant [37 x i8] c"Hide unselected rather than selected\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"Reveal Hidden\00", align 1
@.str.97 = private unnamed_addr constant [15 x i8] c"MESH_OT_reveal\00", align 1
@.str.98 = private unnamed_addr constant [44 x i8] c"Reveal all hidden vertices, edges and faces\00", align 1
@.str.99 = private unnamed_addr constant [24 x i8] c"Make Normals Consistent\00", align 1
@.str.100 = private unnamed_addr constant [69 x i8] c"Make face and vertex normals point either outside or inside the mesh\00", align 1
@.str.101 = private unnamed_addr constant [32 x i8] c"MESH_OT_normals_make_consistent\00", align 1
@.str.102 = private unnamed_addr constant [7 x i8] c"inside\00", align 1
@.str.103 = private unnamed_addr constant [7 x i8] c"Inside\00", align 1
@.str.104 = private unnamed_addr constant [14 x i8] c"Smooth Vertex\00", align 1
@.str.105 = private unnamed_addr constant [36 x i8] c"Flatten angles of selected vertices\00", align 1
@.str.106 = private unnamed_addr constant [24 x i8] c"MESH_OT_vertices_smooth\00", align 1
@.str.107 = private unnamed_addr constant [7 x i8] c"factor\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"Smoothing\00", align 1
@.str.109 = private unnamed_addr constant [17 x i8] c"Smoothing factor\00", align 1
@.str.110 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@.str.111 = private unnamed_addr constant [7 x i8] c"Repeat\00", align 1
@.str.112 = private unnamed_addr constant [35 x i8] c"Number of times to smooth the mesh\00", align 1
@.str.113 = private unnamed_addr constant [6 x i8] c"xaxis\00", align 1
@.str.114 = private unnamed_addr constant [7 x i8] c"X-Axis\00", align 1
@.str.115 = private unnamed_addr constant [24 x i8] c"Smooth along the X axis\00", align 1
@.str.116 = private unnamed_addr constant [6 x i8] c"yaxis\00", align 1
@.str.117 = private unnamed_addr constant [7 x i8] c"Y-Axis\00", align 1
@.str.118 = private unnamed_addr constant [24 x i8] c"Smooth along the Y axis\00", align 1
@.str.119 = private unnamed_addr constant [6 x i8] c"zaxis\00", align 1
@.str.120 = private unnamed_addr constant [7 x i8] c"Z-Axis\00", align 1
@.str.121 = private unnamed_addr constant [24 x i8] c"Smooth along the Z axis\00", align 1
@.str.122 = private unnamed_addr constant [24 x i8] c"Laplacian Smooth Vertex\00", align 1
@.str.123 = private unnamed_addr constant [38 x i8] c"Laplacian smooth of selected vertices\00", align 1
@.str.124 = private unnamed_addr constant [34 x i8] c"MESH_OT_vertices_smooth_laplacian\00", align 1
@.str.125 = private unnamed_addr constant [40 x i8] c"Number of iterations to smooth the mesh\00", align 1
@.str.126 = private unnamed_addr constant [14 x i8] c"lambda_factor\00", align 1
@.str.127 = private unnamed_addr constant [14 x i8] c"Lambda factor\00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"lambda_border\00", align 1
@.str.129 = private unnamed_addr constant [24 x i8] c"Lambda factor in border\00", align 1
@.str.130 = private unnamed_addr constant [6 x i8] c"use_x\00", align 1
@.str.131 = private unnamed_addr constant [14 x i8] c"Smooth X Axis\00", align 1
@.str.132 = private unnamed_addr constant [27 x i8] c"Smooth object along X axis\00", align 1
@.str.133 = private unnamed_addr constant [6 x i8] c"use_y\00", align 1
@.str.134 = private unnamed_addr constant [14 x i8] c"Smooth Y Axis\00", align 1
@.str.135 = private unnamed_addr constant [27 x i8] c"Smooth object along Y axis\00", align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"use_z\00", align 1
@.str.137 = private unnamed_addr constant [14 x i8] c"Smooth Z Axis\00", align 1
@.str.138 = private unnamed_addr constant [27 x i8] c"Smooth object along Z axis\00", align 1
@.str.139 = private unnamed_addr constant [16 x i8] c"preserve_volume\00", align 1
@.str.140 = private unnamed_addr constant [16 x i8] c"Preserve Volume\00", align 1
@.str.141 = private unnamed_addr constant [39 x i8] c"Apply volume preservation after smooth\00", align 1
@.str.142 = private unnamed_addr constant [13 x i8] c"Shade Smooth\00", align 1
@.str.143 = private unnamed_addr constant [44 x i8] c"Display faces smooth (using vertex normals)\00", align 1
@.str.144 = private unnamed_addr constant [27 x i8] c"MESH_OT_faces_shade_smooth\00", align 1
@.str.145 = private unnamed_addr constant [11 x i8] c"Shade Flat\00", align 1
@.str.146 = private unnamed_addr constant [19 x i8] c"Display faces flat\00", align 1
@.str.147 = private unnamed_addr constant [25 x i8] c"MESH_OT_faces_shade_flat\00", align 1
@.str.148 = private unnamed_addr constant [11 x i8] c"Rotate UVs\00", align 1
@.str.149 = private unnamed_addr constant [19 x i8] c"MESH_OT_uvs_rotate\00", align 1
@.str.150 = private unnamed_addr constant [35 x i8] c"Rotate UV coordinates inside faces\00", align 1
@.str.151 = private unnamed_addr constant [12 x i8] c"Reverse UVs\00", align 1
@.str.152 = private unnamed_addr constant [20 x i8] c"MESH_OT_uvs_reverse\00", align 1
@.str.153 = private unnamed_addr constant [46 x i8] c"Flip direction of UV coordinates inside faces\00", align 1
@.str.154 = private unnamed_addr constant [14 x i8] c"Rotate Colors\00", align 1
@.str.155 = private unnamed_addr constant [22 x i8] c"MESH_OT_colors_rotate\00", align 1
@.str.156 = private unnamed_addr constant [34 x i8] c"Rotate vertex colors inside faces\00", align 1
@.str.157 = private unnamed_addr constant [15 x i8] c"Reverse Colors\00", align 1
@.str.158 = private unnamed_addr constant [23 x i8] c"MESH_OT_colors_reverse\00", align 1
@.str.159 = private unnamed_addr constant [45 x i8] c"Flip direction of vertex colors inside faces\00", align 1
@.str.160 = private unnamed_addr constant [6 x i8] c"Merge\00", align 1
@.str.161 = private unnamed_addr constant [24 x i8] c"Merge selected vertices\00", align 1
@.str.162 = private unnamed_addr constant [14 x i8] c"MESH_OT_merge\00", align 1
@merge_type_items = internal global [6 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.439, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.440, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.441, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.442, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.443, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.444, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.445, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.446, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.447, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.448, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !4056
@.str.163 = private unnamed_addr constant [20 x i8] c"Merge method to use\00", align 1
@.str.164 = private unnamed_addr constant [4 x i8] c"uvs\00", align 1
@.str.165 = private unnamed_addr constant [4 x i8] c"UVs\00", align 1
@.str.166 = private unnamed_addr constant [28 x i8] c"Move UVs according to merge\00", align 1
@.str.167 = private unnamed_addr constant [15 x i8] c"Remove Doubles\00", align 1
@.str.168 = private unnamed_addr constant [26 x i8] c"Remove duplicate vertices\00", align 1
@.str.169 = private unnamed_addr constant [23 x i8] c"MESH_OT_remove_doubles\00", align 1
@.str.170 = private unnamed_addr constant [10 x i8] c"threshold\00", align 1
@.str.171 = private unnamed_addr constant [15 x i8] c"Merge Distance\00", align 1
@.str.172 = private unnamed_addr constant [43 x i8] c"Minimum distance between elements to merge\00", align 1
@.str.173 = private unnamed_addr constant [15 x i8] c"use_unselected\00", align 1
@.str.174 = private unnamed_addr constant [44 x i8] c"Merge selected to other unselected vertices\00", align 1
@.str.175 = private unnamed_addr constant [16 x i8] c"Shape Propagate\00", align 1
@.str.176 = private unnamed_addr constant [56 x i8] c"Apply selected vertex locations to all other shape keys\00", align 1
@.str.177 = private unnamed_addr constant [31 x i8] c"MESH_OT_shape_propagate_to_all\00", align 1
@.str.178 = private unnamed_addr constant [17 x i8] c"Blend From Shape\00", align 1
@.str.179 = private unnamed_addr constant [32 x i8] c"Blend in shape from a shape key\00", align 1
@.str.180 = private unnamed_addr constant [25 x i8] c"MESH_OT_blend_from_shape\00", align 1
@.str.181 = private unnamed_addr constant [6 x i8] c"shape\00", align 1
@DummyRNA_NULL_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.182 = private unnamed_addr constant [6 x i8] c"Shape\00", align 1
@.str.183 = private unnamed_addr constant [30 x i8] c"Shape key to use for blending\00", align 1
@.str.184 = private unnamed_addr constant [6 x i8] c"blend\00", align 1
@.str.185 = private unnamed_addr constant [6 x i8] c"Blend\00", align 1
@.str.186 = private unnamed_addr constant [16 x i8] c"Blending factor\00", align 1
@.str.187 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.188 = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@.str.189 = private unnamed_addr constant [37 x i8] c"Add rather than blend between shapes\00", align 1
@.str.190 = private unnamed_addr constant [9 x i8] c"Solidify\00", align 1
@.str.191 = private unnamed_addr constant [64 x i8] c"Create a solid skin by extruding, compensating for sharp angles\00", align 1
@.str.192 = private unnamed_addr constant [17 x i8] c"MESH_OT_solidify\00", align 1
@.str.193 = private unnamed_addr constant [10 x i8] c"thickness\00", align 1
@.str.194 = private unnamed_addr constant [10 x i8] c"Knife Cut\00", align 1
@.str.195 = private unnamed_addr constant [40 x i8] c"Cut selected edges and faces into parts\00", align 1
@.str.196 = private unnamed_addr constant [18 x i8] c"MESH_OT_knife_cut\00", align 1
@knife_items = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.468, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.469, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.470, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.471, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.472, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.473, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !4058
@.str.197 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@RNA_OperatorMousePath = external dso_local global %struct.StructRNA, align 1
@.str.198 = private unnamed_addr constant [7 x i8] c"cursor\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"Cursor\00", align 1
@.str.200 = private unnamed_addr constant [9 x i8] c"Separate\00", align 1
@.str.201 = private unnamed_addr constant [43 x i8] c"Separate selected geometry into a new mesh\00", align 1
@.str.202 = private unnamed_addr constant [17 x i8] c"MESH_OT_separate\00", align 1
@prop_separate_types = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.304, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.478, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.301, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.479, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.480, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !4060
@.str.203 = private unnamed_addr constant [5 x i8] c"Fill\00", align 1
@.str.204 = private unnamed_addr constant [13 x i8] c"MESH_OT_fill\00", align 1
@.str.205 = private unnamed_addr constant [37 x i8] c"Fill a selected edge loop with faces\00", align 1
@.str.206 = private unnamed_addr constant [11 x i8] c"use_beauty\00", align 1
@.str.207 = private unnamed_addr constant [7 x i8] c"Beauty\00", align 1
@.str.208 = private unnamed_addr constant [32 x i8] c"Use best triangulation division\00", align 1
@.str.209 = private unnamed_addr constant [10 x i8] c"Grid Fill\00", align 1
@.str.210 = private unnamed_addr constant [25 x i8] c"Fill grid from two loops\00", align 1
@.str.211 = private unnamed_addr constant [18 x i8] c"MESH_OT_fill_grid\00", align 1
@.str.212 = private unnamed_addr constant [5 x i8] c"span\00", align 1
@.str.213 = private unnamed_addr constant [5 x i8] c"Span\00", align 1
@.str.214 = private unnamed_addr constant [32 x i8] c"Number of sides (zero disables)\00", align 1
@.str.215 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.216 = private unnamed_addr constant [7 x i8] c"Offset\00", align 1
@.str.217 = private unnamed_addr constant [18 x i8] c"use_interp_simple\00", align 1
@.str.218 = private unnamed_addr constant [16 x i8] c"Simple Blending\00", align 1
@.str.219 = private unnamed_addr constant [11 x i8] c"Fill Holes\00", align 1
@.str.220 = private unnamed_addr constant [19 x i8] c"MESH_OT_fill_holes\00", align 1
@.str.221 = private unnamed_addr constant [36 x i8] c"Fill in holes (boundary edge loops)\00", align 1
@.str.222 = private unnamed_addr constant [6 x i8] c"sides\00", align 1
@.str.223 = private unnamed_addr constant [6 x i8] c"Sides\00", align 1
@.str.224 = private unnamed_addr constant [64 x i8] c"Number of sides in hole required to fill (zero fills all holes)\00", align 1
@.str.225 = private unnamed_addr constant [15 x i8] c"Beautify Faces\00", align 1
@.str.226 = private unnamed_addr constant [22 x i8] c"MESH_OT_beautify_fill\00", align 1
@.str.227 = private unnamed_addr constant [61 x i8] c"Rearrange some faces to try to get less degenerated geometry\00", align 1
@MESH_OT_poke.poke_center_modes = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.228, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.230, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.231, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.233, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.234, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.236, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3764
@.str.228 = private unnamed_addr constant [14 x i8] c"MEAN_WEIGHTED\00", align 1
@.str.229 = private unnamed_addr constant [14 x i8] c"Weighted Mean\00", align 1
@.str.230 = private unnamed_addr constant [26 x i8] c"Weighted Mean Face Center\00", align 1
@.str.231 = private unnamed_addr constant [5 x i8] c"MEAN\00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"Mean\00", align 1
@.str.233 = private unnamed_addr constant [17 x i8] c"Mean Face Center\00", align 1
@.str.234 = private unnamed_addr constant [7 x i8] c"BOUNDS\00", align 1
@.str.235 = private unnamed_addr constant [7 x i8] c"Bounds\00", align 1
@.str.236 = private unnamed_addr constant [19 x i8] c"Face Bounds Center\00", align 1
@.str.237 = private unnamed_addr constant [11 x i8] c"Poke Faces\00", align 1
@.str.238 = private unnamed_addr constant [13 x i8] c"MESH_OT_poke\00", align 1
@.str.239 = private unnamed_addr constant [24 x i8] c"Split a face into a fan\00", align 1
@.str.240 = private unnamed_addr constant [12 x i8] c"Poke Offset\00", align 1
@.str.241 = private unnamed_addr constant [20 x i8] c"use_relative_offset\00", align 1
@.str.242 = private unnamed_addr constant [16 x i8] c"Offset Relative\00", align 1
@.str.243 = private unnamed_addr constant [41 x i8] c"Scale the offset by surrounding geometry\00", align 1
@.str.244 = private unnamed_addr constant [12 x i8] c"center_mode\00", align 1
@.str.245 = private unnamed_addr constant [12 x i8] c"Poke Center\00", align 1
@.str.246 = private unnamed_addr constant [29 x i8] c"Poke Face Center Calculation\00", align 1
@.str.247 = private unnamed_addr constant [18 x i8] c"Triangulate Faces\00", align 1
@.str.248 = private unnamed_addr constant [30 x i8] c"MESH_OT_quads_convert_to_tris\00", align 1
@.str.249 = private unnamed_addr constant [27 x i8] c"Triangulate selected faces\00", align 1
@.str.250 = private unnamed_addr constant [12 x i8] c"quad_method\00", align 1
@modifier_triangulate_quad_method_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.251 = private unnamed_addr constant [12 x i8] c"Quad Method\00", align 1
@.str.252 = private unnamed_addr constant [46 x i8] c"Method for splitting the quads into triangles\00", align 1
@.str.253 = private unnamed_addr constant [12 x i8] c"ngon_method\00", align 1
@modifier_triangulate_ngon_method_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.254 = private unnamed_addr constant [15 x i8] c"Polygon Method\00", align 1
@.str.255 = private unnamed_addr constant [49 x i8] c"Method for splitting the polygons into triangles\00", align 1
@.str.256 = private unnamed_addr constant [14 x i8] c"Tris to Quads\00", align 1
@.str.257 = private unnamed_addr constant [30 x i8] c"MESH_OT_tris_convert_to_quads\00", align 1
@.str.258 = private unnamed_addr constant [26 x i8] c"Join triangles into quads\00", align 1
@.str.259 = private unnamed_addr constant [18 x i8] c"Dissolve Vertices\00", align 1
@.str.260 = private unnamed_addr constant [38 x i8] c"Dissolve verts, merge edges and faces\00", align 1
@.str.261 = private unnamed_addr constant [23 x i8] c"MESH_OT_dissolve_verts\00", align 1
@.str.262 = private unnamed_addr constant [15 x i8] c"Dissolve Edges\00", align 1
@.str.263 = private unnamed_addr constant [30 x i8] c"Dissolve edges, merging faces\00", align 1
@.str.264 = private unnamed_addr constant [23 x i8] c"MESH_OT_dissolve_edges\00", align 1
@.str.265 = private unnamed_addr constant [15 x i8] c"Dissolve Faces\00", align 1
@.str.266 = private unnamed_addr constant [15 x i8] c"Dissolve faces\00", align 1
@.str.267 = private unnamed_addr constant [23 x i8] c"MESH_OT_dissolve_faces\00", align 1
@.str.268 = private unnamed_addr constant [19 x i8] c"Dissolve Selection\00", align 1
@.str.269 = private unnamed_addr constant [46 x i8] c"Dissolve geometry based on the selection mode\00", align 1
@.str.270 = private unnamed_addr constant [22 x i8] c"MESH_OT_dissolve_mode\00", align 1
@.str.271 = private unnamed_addr constant [17 x i8] c"Limited Dissolve\00", align 1
@.str.272 = private unnamed_addr constant [25 x i8] c"MESH_OT_dissolve_limited\00", align 1
@.str.273 = private unnamed_addr constant [80 x i8] c"Dissolve selected edges and verts, limited by the angle of surrounding geometry\00", align 1
@.str.274 = private unnamed_addr constant [24 x i8] c"use_dissolve_boundaries\00", align 1
@.str.275 = private unnamed_addr constant [15 x i8] c"All Boundaries\00", align 1
@.str.276 = private unnamed_addr constant [48 x i8] c"Dissolve all vertices inbetween face boundaries\00", align 1
@.str.277 = private unnamed_addr constant [8 x i8] c"delimit\00", align 1
@mesh_delimit_mode_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.278 = private unnamed_addr constant [8 x i8] c"Delimit\00", align 1
@.str.279 = private unnamed_addr constant [27 x i8] c"Delimit dissolve operation\00", align 1
@.str.280 = private unnamed_addr constant [20 x i8] c"Degenerate Dissolve\00", align 1
@.str.281 = private unnamed_addr constant [28 x i8] c"MESH_OT_dissolve_degenerate\00", align 1
@.str.282 = private unnamed_addr constant [47 x i8] c"Dissolve zero area faces and zero length edges\00", align 1
@.str.283 = private unnamed_addr constant [17 x i8] c"Delete Edge Loop\00", align 1
@.str.284 = private unnamed_addr constant [54 x i8] c"Delete an edge loop by merging the faces on each side\00", align 1
@.str.285 = private unnamed_addr constant [24 x i8] c"MESH_OT_delete_edgeloop\00", align 1
@.str.286 = private unnamed_addr constant [15 x i8] c"use_face_split\00", align 1
@.str.287 = private unnamed_addr constant [11 x i8] c"Face Split\00", align 1
@.str.288 = private unnamed_addr constant [56 x i8] c"Split off face corners to maintain surrounding geometry\00", align 1
@.str.289 = private unnamed_addr constant [6 x i8] c"Split\00", align 1
@.str.290 = private unnamed_addr constant [14 x i8] c"MESH_OT_split\00", align 1
@.str.291 = private unnamed_addr constant [63 x i8] c"Split off selected geometry from connected unselected geometry\00", align 1
@MESH_OT_sort_elements.type_items = internal global [8 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.292, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.294, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.295, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.297, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.298, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.299, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.300, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.301, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.303, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.304, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8], [142 x i8]* @.str.306, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.307, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.309, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.310, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.312, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !4038
@.str.292 = private unnamed_addr constant [11 x i8] c"VIEW_ZAXIS\00", align 1
@.str.293 = private unnamed_addr constant [12 x i8] c"View Z Axis\00", align 1
@.str.294 = private unnamed_addr constant [68 x i8] c"Sort selected elements from farthest to nearest one in current view\00", align 1
@.str.295 = private unnamed_addr constant [11 x i8] c"VIEW_XAXIS\00", align 1
@.str.296 = private unnamed_addr constant [12 x i8] c"View X Axis\00", align 1
@.str.297 = private unnamed_addr constant [62 x i8] c"Sort selected elements from left to right one in current view\00", align 1
@.str.298 = private unnamed_addr constant [16 x i8] c"CURSOR_DISTANCE\00", align 1
@.str.299 = private unnamed_addr constant [16 x i8] c"Cursor Distance\00", align 1
@.str.300 = private unnamed_addr constant [63 x i8] c"Sort selected elements from nearest to farthest from 3D cursor\00", align 1
@.str.301 = private unnamed_addr constant [9 x i8] c"MATERIAL\00", align 1
@.str.302 = private unnamed_addr constant [9 x i8] c"Material\00", align 1
@.str.303 = private unnamed_addr constant [78 x i8] c"Sort selected elements from smallest to greatest material index (faces only!)\00", align 1
@.str.304 = private unnamed_addr constant [9 x i8] c"SELECTED\00", align 1
@.str.305 = private unnamed_addr constant [9 x i8] c"Selected\00", align 1
@.str.306 = private unnamed_addr constant [142 x i8] c"Move all selected elements in first places, preserving their relative order (WARNING: this will affect unselected elements' indices as well!)\00", align 1
@.str.307 = private unnamed_addr constant [10 x i8] c"RANDOMIZE\00", align 1
@.str.308 = private unnamed_addr constant [10 x i8] c"Randomize\00", align 1
@.str.309 = private unnamed_addr constant [37 x i8] c"Randomize order of selected elements\00", align 1
@.str.310 = private unnamed_addr constant [8 x i8] c"REVERSE\00", align 1
@.str.311 = private unnamed_addr constant [8 x i8] c"Reverse\00", align 1
@.str.312 = private unnamed_addr constant [43 x i8] c"Reverse current order of selected elements\00", align 1
@MESH_OT_sort_elements.elem_items = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.313, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.314, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.315, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !4042
@.str.313 = private unnamed_addr constant [5 x i8] c"VERT\00", align 1
@.str.314 = private unnamed_addr constant [5 x i8] c"EDGE\00", align 1
@.str.315 = private unnamed_addr constant [5 x i8] c"FACE\00", align 1
@.str.316 = private unnamed_addr constant [19 x i8] c"Sort Mesh Elements\00", align 1
@.str.317 = private unnamed_addr constant [80 x i8] c"The order of selected vertices/edges/faces is modified, based on a given method\00", align 1
@.str.318 = private unnamed_addr constant [22 x i8] c"MESH_OT_sort_elements\00", align 1
@.str.319 = private unnamed_addr constant [39 x i8] c"Type of re-ordering operation to apply\00", align 1
@.str.320 = private unnamed_addr constant [9 x i8] c"elements\00", align 1
@.str.321 = private unnamed_addr constant [9 x i8] c"Elements\00", align 1
@.str.322 = private unnamed_addr constant [56 x i8] c"Which elements to affect (vertices, edges and/or faces)\00", align 1
@.str.323 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.324 = private unnamed_addr constant [27 x i8] c"Reverse the sorting effect\00", align 1
@.str.325 = private unnamed_addr constant [5 x i8] c"Seed\00", align 1
@.str.326 = private unnamed_addr constant [33 x i8] c"Seed for random-based operations\00", align 1
@.str.327 = private unnamed_addr constant [6 x i8] c"Noise\00", align 1
@.str.328 = private unnamed_addr constant [44 x i8] c"Use vertex coordinate as texture coordinate\00", align 1
@.str.329 = private unnamed_addr constant [14 x i8] c"MESH_OT_noise\00", align 1
@.str.330 = private unnamed_addr constant [7 x i8] c"Factor\00", align 1
@MESH_OT_bridge_edge_loops.type_items = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.331, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.332, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.333, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.334, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.335, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.336, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !4044
@.str.331 = private unnamed_addr constant [7 x i8] c"SINGLE\00", align 1
@.str.332 = private unnamed_addr constant [10 x i8] c"Open Loop\00", align 1
@.str.333 = private unnamed_addr constant [7 x i8] c"CLOSED\00", align 1
@.str.334 = private unnamed_addr constant [12 x i8] c"Closed Loop\00", align 1
@.str.335 = private unnamed_addr constant [6 x i8] c"PAIRS\00", align 1
@.str.336 = private unnamed_addr constant [11 x i8] c"Loop Pairs\00", align 1
@.str.337 = private unnamed_addr constant [18 x i8] c"Bridge Edge Loops\00", align 1
@.str.338 = private unnamed_addr constant [42 x i8] c"Make faces between two or more edge loops\00", align 1
@.str.339 = private unnamed_addr constant [26 x i8] c"MESH_OT_bridge_edge_loops\00", align 1
@.str.340 = private unnamed_addr constant [14 x i8] c"Connect Loops\00", align 1
@.str.341 = private unnamed_addr constant [34 x i8] c"Method of bridging multiple loops\00", align 1
@.str.342 = private unnamed_addr constant [10 x i8] c"use_merge\00", align 1
@.str.343 = private unnamed_addr constant [33 x i8] c"Merge rather than creating faces\00", align 1
@.str.344 = private unnamed_addr constant [13 x i8] c"merge_factor\00", align 1
@.str.345 = private unnamed_addr constant [13 x i8] c"Merge Factor\00", align 1
@.str.346 = private unnamed_addr constant [13 x i8] c"twist_offset\00", align 1
@.str.347 = private unnamed_addr constant [6 x i8] c"Twist\00", align 1
@.str.348 = private unnamed_addr constant [30 x i8] c"Twist offset for closed loops\00", align 1
@.str.349 = private unnamed_addr constant [11 x i8] c"Wire Frame\00", align 1
@.str.350 = private unnamed_addr constant [18 x i8] c"MESH_OT_wireframe\00", align 1
@.str.351 = private unnamed_addr constant [37 x i8] c"Create a solid wire-frame from faces\00", align 1
@.str.352 = private unnamed_addr constant [13 x i8] c"use_boundary\00", align 1
@.str.353 = private unnamed_addr constant [9 x i8] c"Boundary\00", align 1
@.str.354 = private unnamed_addr constant [22 x i8] c"Inset face boundaries\00", align 1
@.str.355 = private unnamed_addr constant [16 x i8] c"use_even_offset\00", align 1
@.str.356 = private unnamed_addr constant [12 x i8] c"Offset Even\00", align 1
@.str.357 = private unnamed_addr constant [45 x i8] c"Scale the offset to give more even thickness\00", align 1
@.str.358 = private unnamed_addr constant [12 x i8] c"use_replace\00", align 1
@.str.359 = private unnamed_addr constant [8 x i8] c"Replace\00", align 1
@.str.360 = private unnamed_addr constant [22 x i8] c"Remove original faces\00", align 1
@.str.361 = private unnamed_addr constant [10 x i8] c"Thickness\00", align 1
@.str.362 = private unnamed_addr constant [11 x i8] c"use_crease\00", align 1
@.str.363 = private unnamed_addr constant [7 x i8] c"Crease\00", align 1
@.str.364 = private unnamed_addr constant [38 x i8] c"Crease hub edges for improved subsurf\00", align 1
@.str.365 = private unnamed_addr constant [14 x i8] c"crease_weight\00", align 1
@.str.366 = private unnamed_addr constant [14 x i8] c"Crease weight\00", align 1
@.str.367 = private unnamed_addr constant [11 x i8] c"Symmetrize\00", align 1
@.str.368 = private unnamed_addr constant [60 x i8] c"Enforce symmetry (both form and topological) across an axis\00", align 1
@.str.369 = private unnamed_addr constant [19 x i8] c"MESH_OT_symmetrize\00", align 1
@.str.370 = private unnamed_addr constant [10 x i8] c"direction\00", align 1
@symmetrize_direction_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.371 = private unnamed_addr constant [10 x i8] c"Direction\00", align 1
@.str.372 = private unnamed_addr constant [32 x i8] c"Which sides to copy from and to\00", align 1
@.str.373 = private unnamed_addr constant [10 x i8] c"Threshold\00", align 1
@.str.374 = private unnamed_addr constant [17 x i8] c"Snap to Symmetry\00", align 1
@.str.375 = private unnamed_addr constant [46 x i8] c"Snap vertex pairs to their mirrored locations\00", align 1
@.str.376 = private unnamed_addr constant [22 x i8] c"MESH_OT_symmetry_snap\00", align 1
@.str.377 = private unnamed_addr constant [11 x i8] c"use_center\00", align 1
@.str.378 = private unnamed_addr constant [7 x i8] c"Center\00", align 1
@.str.379 = private unnamed_addr constant [34 x i8] c"Snap mid verts to the axis center\00", align 1
@.str.380 = private unnamed_addr constant [10 x i8] c"INNERVERT\00", align 1
@.str.381 = private unnamed_addr constant [11 x i8] c"Inner Vert\00", align 1
@.str.382 = private unnamed_addr constant [5 x i8] c"PATH\00", align 1
@.str.383 = private unnamed_addr constant [5 x i8] c"Path\00", align 1
@.str.384 = private unnamed_addr constant [13 x i8] c"STRAIGHT_CUT\00", align 1
@.str.385 = private unnamed_addr constant [13 x i8] c"Straight Cut\00", align 1
@.str.386 = private unnamed_addr constant [4 x i8] c"FAN\00", align 1
@.str.387 = private unnamed_addr constant [4 x i8] c"Fan\00", align 1
@.str.388 = private unnamed_addr constant [103 x i8] c"subdivide_edgering edges=%he interp_mode=%i cuts=%i smooth=%f profile_shape=%i profile_shape_factor=%f\00", align 1
@.str.389 = private unnamed_addr constant [14 x i8] c"interpolation\00", align 1
@.str.390 = private unnamed_addr constant [14 x i8] c"profile_shape\00", align 1
@.str.391 = private unnamed_addr constant [21 x i8] c"profile_shape_factor\00", align 1
@mesh_operator_edgering_props.prop_subd_edgering_types = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.392, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.393, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.382, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.394, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.395, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.396, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !4047
@.str.392 = private unnamed_addr constant [7 x i8] c"LINEAR\00", align 1
@.str.393 = private unnamed_addr constant [7 x i8] c"Linear\00", align 1
@.str.394 = private unnamed_addr constant [11 x i8] c"Blend Path\00", align 1
@.str.395 = private unnamed_addr constant [8 x i8] c"SURFACE\00", align 1
@.str.396 = private unnamed_addr constant [14 x i8] c"Blend Surface\00", align 1
@.str.397 = private unnamed_addr constant [14 x i8] c"Interpolation\00", align 1
@.str.398 = private unnamed_addr constant [21 x i8] c"Interpolation method\00", align 1
@.str.399 = private unnamed_addr constant [15 x i8] c"Profile Factor\00", align 1
@proportional_falloff_curve_only_items = external dso_local global [0 x %struct.EnumPropertyItem], align 8
@.str.400 = private unnamed_addr constant [14 x i8] c"Profile Shape\00", align 1
@.str.401 = private unnamed_addr constant [21 x i8] c"Shape of the profile\00", align 1
@.str.402 = private unnamed_addr constant [6 x i8] c"Curve\00", align 1
@.str.403 = private unnamed_addr constant [36 x i8] c"unsubdivide verts=%hv iterations=%i\00", align 1
@.str.404 = private unnamed_addr constant [27 x i8] c"delete geom=%hv context=%i\00", align 1
@.str.405 = private unnamed_addr constant [27 x i8] c"delete geom=%he context=%i\00", align 1
@.str.406 = private unnamed_addr constant [27 x i8] c"delete geom=%hf context=%i\00", align 1
@.str.407 = private unnamed_addr constant [28 x i8] c"delete geom=%hef context=%i\00", align 1
@.str.408 = private unnamed_addr constant [10 x i8] c"EDGE_FACE\00", align 1
@.str.409 = private unnamed_addr constant [19 x i8] c"Only Edges & Faces\00", align 1
@.str.410 = private unnamed_addr constant [10 x i8] c"ONLY_FACE\00", align 1
@.str.411 = private unnamed_addr constant [11 x i8] c"Only Faces\00", align 1
@.str.412 = private unnamed_addr constant [41 x i8] c"Removed: %d vertices, %d edges, %d faces\00", align 1
@.str.413 = private unnamed_addr constant [19 x i8] c"collapse edges=%he\00", align 1
@.str.414 = private unnamed_addr constant [53 x i8] c"contextual_create geom=%hfev mat_nr=%i use_smooth=%b\00", align 1
@.str.415 = private unnamed_addr constant [10 x i8] c"faces.out\00", align 1
@.str.416 = private unnamed_addr constant [10 x i8] c"edges.out\00", align 1
@.str.417 = private unnamed_addr constant [64 x i8] c"connect_vert_pair verts=%hv verts_exclude=%hv faces_exclude=%hf\00", align 1
@.str.418 = private unnamed_addr constant [62 x i8] c"connect_verts verts=%hv faces_exclude=%hf check_degenerate=%b\00", align 1
@.str.419 = private unnamed_addr constant [49 x i8] c"connect_verts_nonplanar faces=%hf angle_limit=%f\00", align 1
@.str.420 = private unnamed_addr constant [22 x i8] c"split_edges edges=%he\00", align 1
@.str.421 = private unnamed_addr constant [43 x i8] c"duplicate geom=%hvef use_select_history=%b\00", align 1
@.str.422 = private unnamed_addr constant [9 x i8] c"geom.out\00", align 1
@.str.423 = private unnamed_addr constant [24 x i8] c"reverse_faces faces=%hf\00", align 1
@.str.424 = private unnamed_addr constant [58 x i8] c"Select edges or face pairs for edge loops to rotate about\00", align 1
@.str.425 = private unnamed_addr constant [54 x i8] c"Could not find any selected edges that can be rotated\00", align 1
@.str.426 = private unnamed_addr constant [34 x i8] c"rotate_edges edges=%he use_ccw=%b\00", align 1
@.str.427 = private unnamed_addr constant [6 x i8] c"edges\00", align 1
@.str.428 = private unnamed_addr constant [30 x i8] c"recalc_face_normals faces=%hf\00", align 1
@.str.429 = private unnamed_addr constant [138 x i8] c"smooth_vert verts=%hv factor=%f mirror_clip_x=%b mirror_clip_y=%b mirror_clip_z=%b clip_dist=%f use_axis_x=%b use_axis_y=%b use_axis_z=%b\00", align 1
@.str.430 = private unnamed_addr constant [42 x i8] c"Selected faces must be triangles or quads\00", align 1
@.str.431 = private unnamed_addr constant [112 x i8] c"smooth_laplacian_vert verts=%hv lambda_factor=%f lambda_border=%f use_x=%b use_y=%b use_z=%b preserve_volume=%b\00", align 1
@.str.432 = private unnamed_addr constant [32 x i8] c"rotate_uvs faces=%hf use_ccw=%b\00", align 1
@.str.433 = private unnamed_addr constant [22 x i8] c"reverse_uvs faces=%hf\00", align 1
@.str.434 = private unnamed_addr constant [35 x i8] c"rotate_colors faces=%hf use_ccw=%b\00", align 1
@.str.435 = private unnamed_addr constant [25 x i8] c"reverse_colors faces=%hf\00", align 1
@.str.436 = private unnamed_addr constant [32 x i8] c"average_vert_facedata verts=%hv\00", align 1
@.str.437 = private unnamed_addr constant [33 x i8] c"pointmerge verts=%hv merge_co=%v\00", align 1
@.str.438 = private unnamed_addr constant [43 x i8] c"pointmerge_facedata verts=%hv vert_snap=%e\00", align 1
@.str.439 = private unnamed_addr constant [6 x i8] c"FIRST\00", align 1
@.str.440 = private unnamed_addr constant [9 x i8] c"At First\00", align 1
@.str.441 = private unnamed_addr constant [5 x i8] c"LAST\00", align 1
@.str.442 = private unnamed_addr constant [8 x i8] c"At Last\00", align 1
@.str.443 = private unnamed_addr constant [7 x i8] c"CENTER\00", align 1
@.str.444 = private unnamed_addr constant [10 x i8] c"At Center\00", align 1
@.str.445 = private unnamed_addr constant [7 x i8] c"CURSOR\00", align 1
@.str.446 = private unnamed_addr constant [10 x i8] c"At Cursor\00", align 1
@.str.447 = private unnamed_addr constant [9 x i8] c"COLLAPSE\00", align 1
@.str.448 = private unnamed_addr constant [9 x i8] c"Collapse\00", align 1
@.str.449 = private unnamed_addr constant [28 x i8] c"automerge verts=%hv dist=%f\00", align 1
@.str.450 = private unnamed_addr constant [31 x i8] c"find_doubles verts=%hv dist=%f\00", align 1
@.str.451 = private unnamed_addr constant [24 x i8] c"weld_verts targetmap=%S\00", align 1
@.str.452 = private unnamed_addr constant [14 x i8] c"targetmap.out\00", align 1
@.str.453 = private unnamed_addr constant [20 x i8] c"Removed %d vertices\00", align 1
@.str.454 = private unnamed_addr constant [30 x i8] c"Mesh does not have shape keys\00", align 1
@.str.455 = private unnamed_addr constant [11 x i8] c"key_blocks\00", align 1
@.str.456 = private unnamed_addr constant [31 x i8] c"solidify geom=%hf thickness=%f\00", align 1
@.str.457 = private unnamed_addr constant [5 x i8] c"geom\00", align 1
@.str.458 = private unnamed_addr constant [36 x i8] c"No edges are selected to operate on\00", align 1
@.str.459 = private unnamed_addr constant [21 x i8] c"Mouse path too short\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@__func__.edbm_knife_cut_exec = private unnamed_addr constant [20 x i8] c"edbm_knife_cut_exec\00", align 1
@.str.460 = private unnamed_addr constant [4 x i8] c"loc\00", align 1
@.str.461 = private unnamed_addr constant [16 x i8] c"subdivide_edges\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.462 = private unnamed_addr constant [14 x i8] c"edge_percents\00", align 1
@.str.463 = private unnamed_addr constant [5 x i8] c"cuts\00", align 1
@.str.464 = private unnamed_addr constant [17 x i8] c"quad_corner_type\00", align 1
@.str.465 = private unnamed_addr constant [16 x i8] c"use_single_edge\00", align 1
@.str.466 = private unnamed_addr constant [14 x i8] c"use_grid_fill\00", align 1
@.str.467 = private unnamed_addr constant [7 x i8] c"radius\00", align 1
@.str.468 = private unnamed_addr constant [6 x i8] c"EXACT\00", align 1
@.str.469 = private unnamed_addr constant [6 x i8] c"Exact\00", align 1
@.str.470 = private unnamed_addr constant [10 x i8] c"MIDPOINTS\00", align 1
@.str.471 = private unnamed_addr constant [10 x i8] c"Midpoints\00", align 1
@.str.472 = private unnamed_addr constant [9 x i8] c"MULTICUT\00", align 1
@.str.473 = private unnamed_addr constant [9 x i8] c"Multicut\00", align 1
@.str.474 = private unnamed_addr constant [17 x i8] c"Nothing selected\00", align 1
@.str.475 = private unnamed_addr constant [39 x i8] c"Selection not supported in object mode\00", align 1
@bm_mesh_allocsize_default = external dso_local constant %struct.BMAllocTemplate, align 4
@CD_MASK_BMESH = external dso_local constant i64, align 8
@.str.476 = private unnamed_addr constant [29 x i8] c"duplicate geom=%hvef dest=%p\00", align 1
@.str.477 = private unnamed_addr constant [29 x i8] c"delete geom=%hvef context=%i\00", align 1
@.str.478 = private unnamed_addr constant [10 x i8] c"Selection\00", align 1
@.str.479 = private unnamed_addr constant [12 x i8] c"By Material\00", align 1
@.str.480 = private unnamed_addr constant [6 x i8] c"LOOSE\00", align 1
@.str.481 = private unnamed_addr constant [15 x i8] c"By loose parts\00", align 1
@.str.482 = private unnamed_addr constant [38 x i8] c"triangle_fill edges=%he use_beauty=%b\00", align 1
@.str.483 = private unnamed_addr constant [65 x i8] c"grid_fill edges=%he mat_nr=%i use_smooth=%b use_interp_simple=%b\00", align 1
@__func__.edbm_fill_grid_prepare = private unnamed_addr constant [23 x i8] c"edbm_fill_grid_prepare\00", align 1
@.str.484 = private unnamed_addr constant [30 x i8] c"holes_fill edges=%he sides=%i\00", align 1
@.str.485 = private unnamed_addr constant [34 x i8] c"beautify_fill faces=%hf edges=%he\00", align 1
@.str.486 = private unnamed_addr constant [63 x i8] c"poke faces=%hf offset=%f use_relative_offset=%b center_mode=%i\00", align 1
@.str.487 = private unnamed_addr constant [10 x i8] c"verts.out\00", align 1
@.str.488 = private unnamed_addr constant [52 x i8] c"triangulate faces=%hf quad_method=%i ngon_method=%i\00", align 1
@.str.489 = private unnamed_addr constant [6 x i8] c"limit\00", align 1
@.str.490 = private unnamed_addr constant [6 x i8] c"sharp\00", align 1
@.str.491 = private unnamed_addr constant [6 x i8] c"vcols\00", align 1
@.str.492 = private unnamed_addr constant [10 x i8] c"materials\00", align 1
@.str.493 = private unnamed_addr constant [88 x i8] c"join_triangles faces=%hf limit=%f cmp_sharp=%b cmp_uvs=%b cmp_vcols=%b cmp_materials=%b\00", align 1
@.str.494 = private unnamed_addr constant [12 x i8] c"Angle Limit\00", align 1
@.str.495 = private unnamed_addr constant [12 x i8] c"Compare UVs\00", align 1
@.str.496 = private unnamed_addr constant [14 x i8] c"Compare VCols\00", align 1
@.str.497 = private unnamed_addr constant [14 x i8] c"Compare Sharp\00", align 1
@.str.498 = private unnamed_addr constant [18 x i8] c"Compare Materials\00", align 1
@.str.499 = private unnamed_addr constant [18 x i8] c"use_boundary_tear\00", align 1
@.str.500 = private unnamed_addr constant [64 x i8] c"dissolve_verts verts=%hv use_face_split=%b use_boundary_tear=%b\00", align 1
@.str.501 = private unnamed_addr constant [14 x i8] c"Tear Boundary\00", align 1
@.str.502 = private unnamed_addr constant [48 x i8] c"Split off face corners instead of merging faces\00", align 1
@.str.503 = private unnamed_addr constant [56 x i8] c"dissolve_edges edges=%he use_verts=%b use_face_split=%b\00", align 1
@.str.504 = private unnamed_addr constant [15 x i8] c"Dissolve Verts\00", align 1
@.str.505 = private unnamed_addr constant [28 x i8] c"Dissolve remaining vertices\00", align 1
@.str.506 = private unnamed_addr constant [11 x i8] c"region.out\00", align 1
@.str.507 = private unnamed_addr constant [38 x i8] c"dissolve_faces faces=%hf use_verts=%b\00", align 1
@.str.508 = private unnamed_addr constant [88 x i8] c"dissolve_limit edges=%he verts=%hv angle_limit=%f use_dissolve_boundaries=%b delimit=%i\00", align 1
@.str.509 = private unnamed_addr constant [38 x i8] c"dissolve_degenerate edges=%he dist=%f\00", align 1
@.str.510 = private unnamed_addr constant [35 x i8] c"split geom=%hvef use_only_faces=%b\00", align 1
@.str.511 = private unnamed_addr constant [41 x i8] c"View not found, cannot sort by view axis\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.512 = private unnamed_addr constant [24 x i8] c"sort_bmelem vert pblock\00", align 1
@.str.513 = private unnamed_addr constant [24 x i8] c"sort_bmelem vert sblock\00", align 1
@.str.514 = private unnamed_addr constant [24 x i8] c"sort_bmelem edge pblock\00", align 1
@.str.515 = private unnamed_addr constant [24 x i8] c"sort_bmelem edge sblock\00", align 1
@.str.516 = private unnamed_addr constant [24 x i8] c"sort_bmelem face pblock\00", align 1
@.str.517 = private unnamed_addr constant [24 x i8] c"sort_bmelem face sblock\00", align 1
@.str.518 = private unnamed_addr constant [22 x i8] c"sort_bmelem vert tbuf\00", align 1
@.str.519 = private unnamed_addr constant [21 x i8] c"sort_bmelem vert map\00", align 1
@.str.520 = private unnamed_addr constant [22 x i8] c"sort_bmelem edge tbuf\00", align 1
@.str.521 = private unnamed_addr constant [21 x i8] c"sort_bmelem edge map\00", align 1
@.str.522 = private unnamed_addr constant [22 x i8] c"sort_bmelem face tbuf\00", align 1
@.str.523 = private unnamed_addr constant [21 x i8] c"sort_bmelem face map\00", align 1
@.str.524 = private unnamed_addr constant [16 x i8] c"sort_bmelem map\00", align 1
@.str.525 = private unnamed_addr constant [41 x i8] c"Mesh has no material or texture assigned\00", align 1
@__func__.edbm_bridge_edge_loops_exec = private unnamed_addr constant [28 x i8] c"edbm_bridge_edge_loops_exec\00", align 1
@.str.526 = private unnamed_addr constant [95 x i8] c"bridge_loops edges=%he use_pairs=%b use_cyclic=%b use_merge=%b merge_factor=%f twist_offset=%i\00", align 1
@.str.527 = private unnamed_addr constant [102 x i8] c"subdivide_edgering edges=%S interp_mode=%i cuts=%i smooth=%f profile_shape=%i profile_shape_factor=%f\00", align 1
@.str.528 = private unnamed_addr constant [147 x i8] c"wireframe faces=%hf use_replace=%b use_boundary=%b use_even_offset=%b use_relative_offset=%b use_crease=%b crease_weight=%f thickness=%f offset=%f\00", align 1
@.str.529 = private unnamed_addr constant [44 x i8] c"symmetrize input=%hvef direction=%i dist=%f\00", align 1
@__func__.mesh_symmetry_snap_exec = private unnamed_addr constant [24 x i8] c"mesh_symmetry_snap_exec\00", align 1
@.str.530 = private unnamed_addr constant [53 x i8] c"%d already symmetrical, %d pairs mirrored, %d failed\00", align 1
@.str.531 = private unnamed_addr constant [42 x i8] c"%d already symmetrical, %d pairs mirrored\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_subdivide(%struct.wmOperatorType* %ot) #0 !dbg !4067 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4068, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !4070, metadata !DIExpression()), !dbg !4071
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4072
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4073
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8** %name, align 8, !dbg !4074
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4075
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !4076
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i8** %description, align 8, !dbg !4077
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4078
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !4079
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8** %idname, align 8, !dbg !4080
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4081
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4082
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_subdivide_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4083
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4084
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4085
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !4086
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4087
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4088
  store i16 3, i16* %flag, align 8, !dbg !4089
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4090
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !4091
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4091
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !4090
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 1, i32 2147483647, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 10), !dbg !4092
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !4093
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4094
  call void @RNA_def_property_flag(%struct.PropertyRNA* %9, i32 268435456), !dbg !4095
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4096
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !4097
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !4097
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !4096
  %call2 = call %struct.PropertyRNA* @RNA_def_float(i8* %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), float 0.000000e+00, float 0.000000e+00, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), float 0.000000e+00, float 1.000000e+00), !dbg !4098
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4099
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 11, !dbg !4100
  %14 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !4100
  %15 = bitcast %struct.StructRNA* %14 to i8*, !dbg !4099
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0)), !dbg !4101
  %16 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4102
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %16, i32 0, i32 11, !dbg !4103
  %17 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !4103
  %18 = bitcast %struct.StructRNA* %17 to i8*, !dbg !4102
  %call6 = call %struct.PropertyRNA* @RNA_def_enum(i8* %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @prop_mesh_cornervert_types, i64 0, i64 0), i32 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.14, i64 0, i64 0)), !dbg !4104
  %19 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4105
  %srna7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %19, i32 0, i32 11, !dbg !4106
  %20 = load %struct.StructRNA*, %struct.StructRNA** %srna7, align 8, !dbg !4106
  %21 = bitcast %struct.StructRNA* %20 to i8*, !dbg !4105
  %call8 = call %struct.PropertyRNA* @RNA_def_float(i8* %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), float 0.000000e+00, float 0.000000e+00, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0), float 0.000000e+00, float 1.000000e+03), !dbg !4107
  %22 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4108
  %srna9 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %22, i32 0, i32 11, !dbg !4109
  %23 = load %struct.StructRNA*, %struct.StructRNA** %srna9, align 8, !dbg !4109
  %24 = bitcast %struct.StructRNA* %23 to i8*, !dbg !4108
  %call10 = call %struct.PropertyRNA* @RNA_def_float(i8* %24, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.20, i64 0, i64 0), float 0.000000e+00, float 1.000000e+00), !dbg !4110
  %25 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4111
  %srna11 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %25, i32 0, i32 11, !dbg !4112
  %26 = load %struct.StructRNA*, %struct.StructRNA** %srna11, align 8, !dbg !4112
  %27 = bitcast %struct.StructRNA* %26 to i8*, !dbg !4111
  %call12 = call %struct.PropertyRNA* @RNA_def_int(i8* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i32 0, i32 0, i32 10000, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.23, i64 0, i64 0), i32 0, i32 50), !dbg !4113
  ret void, !dbg !4114
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_subdivide_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4115 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %cuts = alloca i32, align 4
  %smooth = alloca float, align 4
  %fractal = alloca float, align 4
  %along_normal = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4122, metadata !DIExpression()), !dbg !4123
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4124, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4126, metadata !DIExpression()), !dbg !4129
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4130
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4131
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4129
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4132, metadata !DIExpression()), !dbg !4135
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4136
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !4137
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !4135
  call void @llvm.dbg.declare(metadata i32* %cuts, metadata !4138, metadata !DIExpression()), !dbg !4139
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4140
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !4141
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4141
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)), !dbg !4142
  store i32 %call2, i32* %cuts, align 4, !dbg !4139
  call void @llvm.dbg.declare(metadata float* %smooth, metadata !4143, metadata !DIExpression()), !dbg !4144
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4145
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !4146
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !4146
  %call4 = call float @RNA_float_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)), !dbg !4147
  %mul = fmul float 0x3FD2B020C0000000, %call4, !dbg !4148
  store float %mul, float* %smooth, align 4, !dbg !4144
  call void @llvm.dbg.declare(metadata float* %fractal, metadata !4149, metadata !DIExpression()), !dbg !4151
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4152
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !4153
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !4153
  %call6 = call float @RNA_float_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0)), !dbg !4154
  %div = fdiv float %call6, 2.500000e+00, !dbg !4155
  store float %div, float* %fractal, align 4, !dbg !4151
  call void @llvm.dbg.declare(metadata float* %along_normal, metadata !4156, metadata !DIExpression()), !dbg !4157
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4158
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !4159
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !4159
  %call8 = call float @RNA_float_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)), !dbg !4160
  store float %call8, float* %along_normal, align 4, !dbg !4157
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4161
  %ptr9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !4163
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr9, align 8, !dbg !4163
  %call10 = call i32 @RNA_boolean_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)), !dbg !4164
  %tobool = icmp ne i32 %call10, 0, !dbg !4164
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4165

land.lhs.true:                                    ; preds = %entry
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4166
  %ptr11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 7, !dbg !4167
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr11, align 8, !dbg !4167
  %call12 = call i32 @RNA_enum_get(%struct.PointerRNA* %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)), !dbg !4168
  %cmp = icmp eq i32 %call12, 3, !dbg !4169
  br i1 %cmp, label %if.then, label %if.end, !dbg !4170

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4171
  %ptr13 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 7, !dbg !4173
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr13, align 8, !dbg !4173
  call void @RNA_enum_set(%struct.PointerRNA* %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i32 0), !dbg !4174
  br label %if.end, !dbg !4175

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4176
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !4177
  %17 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4177
  %18 = load float, float* %smooth, align 4, !dbg !4178
  %19 = load float, float* %fractal, align 4, !dbg !4179
  %20 = load float, float* %along_normal, align 4, !dbg !4180
  %21 = load i32, i32* %cuts, align 4, !dbg !4181
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4182
  %ptr14 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 7, !dbg !4183
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr14, align 8, !dbg !4183
  %call15 = call i32 @RNA_enum_get(%struct.PointerRNA* %23, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)), !dbg !4184
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4185
  %ptr16 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %24, i32 0, i32 7, !dbg !4186
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr16, align 8, !dbg !4186
  %call17 = call i32 @RNA_boolean_get(%struct.PointerRNA* %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)), !dbg !4187
  %conv = trunc i32 %call17 to i16, !dbg !4187
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4188
  %ptr18 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %26, i32 0, i32 7, !dbg !4189
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr18, align 8, !dbg !4189
  %call19 = call i32 @RNA_int_get(%struct.PointerRNA* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0)), !dbg !4190
  call void @BM_mesh_esubdivide(%struct.BMesh* %17, i8 zeroext 1, float %18, i16 signext 2, i8 zeroext 0, float %19, float %20, i32 %21, i32 1, i32 %call15, i16 signext %conv, i16 signext 1, i16 signext 0, i32 %call19), !dbg !4191
  %28 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4192
  call void @EDBM_update_generic(%struct.BMEditMesh* %28, i8 zeroext 1, i8 zeroext 1), !dbg !4193
  ret i32 4, !dbg !4194
}

declare dso_local i32 @ED_operator_editmesh(%struct.bContext*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_int(i8*, i8*, i32, i32, i32, i8*, i8*, i32, i32) #2

declare dso_local void @RNA_def_property_flag(%struct.PropertyRNA*, i32) #2

declare dso_local %struct.PropertyRNA* @RNA_def_float(i8*, i8*, float, float, float, i8*, i8*, float, float) #2

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_subdivide_edgering(%struct.wmOperatorType* %ot) #0 !dbg !4195 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4196, metadata !DIExpression()), !dbg !4197
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4198
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4199
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0), i8** %name, align 8, !dbg !4200
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4201
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !4202
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i8** %description, align 8, !dbg !4203
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4204
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !4205
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8** %idname, align 8, !dbg !4206
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4207
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4208
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_subdivide_edge_ring_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4209
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4210
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4211
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !4212
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4213
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4214
  store i16 3, i16* %flag, align 8, !dbg !4215
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4216
  call void @mesh_operator_edgering_props(%struct.wmOperatorType* %6, i32 10), !dbg !4217
  ret void, !dbg !4218
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_subdivide_edge_ring_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4219 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %op_props = alloca %struct.EdgeRingOpSubdProps, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4220, metadata !DIExpression()), !dbg !4221
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4222, metadata !DIExpression()), !dbg !4223
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4224, metadata !DIExpression()), !dbg !4225
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4226
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4227
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4225
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4228, metadata !DIExpression()), !dbg !4229
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4230
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !4231
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !4229
  call void @llvm.dbg.declare(metadata %struct.EdgeRingOpSubdProps* %op_props, metadata !4232, metadata !DIExpression()), !dbg !4240
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4241
  call void @mesh_operator_edgering_props_get(%struct.wmOperator* %2, %struct.EdgeRingOpSubdProps* %op_props), !dbg !4242
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4243
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4245
  %interp_mode = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %op_props, i32 0, i32 0, !dbg !4246
  %5 = load i32, i32* %interp_mode, align 4, !dbg !4246
  %cuts = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %op_props, i32 0, i32 1, !dbg !4247
  %6 = load i32, i32* %cuts, align 4, !dbg !4247
  %smooth = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %op_props, i32 0, i32 2, !dbg !4248
  %7 = load float, float* %smooth, align 4, !dbg !4248
  %conv = fpext float %7 to double, !dbg !4249
  %profile_shape = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %op_props, i32 0, i32 3, !dbg !4250
  %8 = load i32, i32* %profile_shape, align 4, !dbg !4250
  %profile_shape_factor = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %op_props, i32 0, i32 4, !dbg !4251
  %9 = load float, float* %profile_shape_factor, align 4, !dbg !4251
  %conv2 = fpext float %9 to double, !dbg !4252
  %call3 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %3, %struct.wmOperator* %4, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.388, i64 0, i64 0), i32 1, i32 %5, i32 %6, double %conv, i32 %8, double %conv2), !dbg !4253
  %tobool = icmp ne i8 %call3, 0, !dbg !4253
  br i1 %tobool, label %if.end, label %if.then, !dbg !4254

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4255
  br label %return, !dbg !4255

if.end:                                           ; preds = %entry
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4257
  call void @EDBM_update_generic(%struct.BMEditMesh* %10, i8 zeroext 1, i8 zeroext 1), !dbg !4258
  store i32 4, i32* %retval, align 4, !dbg !4259
  br label %return, !dbg !4259

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !4260
  ret i32 %11, !dbg !4260
}

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_operator_edgering_props(%struct.wmOperatorType* %ot, i32 %cuts_default) #0 !dbg !4049 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %cuts_default.addr = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4261, metadata !DIExpression()), !dbg !4262
  store i32 %cuts_default, i32* %cuts_default.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cuts_default.addr, metadata !4263, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !4265, metadata !DIExpression()), !dbg !4266
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4267
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !4268
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4268
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !4267
  %3 = load i32, i32* %cuts_default.addr, align 4, !dbg !4269
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i32 %3, i32 0, i32 2147483647, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i32 0, i32 64), !dbg !4270
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !4271
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4272
  call void @RNA_def_property_flag(%struct.PropertyRNA* %4, i32 268435456), !dbg !4273
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4274
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !4275
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !4275
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !4274
  %call2 = call %struct.PropertyRNA* @RNA_def_enum(i8* %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.389, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @mesh_operator_edgering_props.prop_subd_edgering_types, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.397, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.398, i64 0, i64 0)), !dbg !4276
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4277
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !4278
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !4278
  %10 = bitcast %struct.StructRNA* %9 to i8*, !dbg !4277
  %call4 = call %struct.PropertyRNA* @RNA_def_float(i8* %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), float 1.000000e+00, float 0.000000e+00, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), float 0.000000e+00, float 2.000000e+00), !dbg !4279
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4280
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 11, !dbg !4281
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !4281
  %13 = bitcast %struct.StructRNA* %12 to i8*, !dbg !4280
  %call6 = call %struct.PropertyRNA* @RNA_def_float(i8* %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.391, i64 0, i64 0), float 0.000000e+00, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.399, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), float -2.000000e+00, float 2.000000e+00), !dbg !4282
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4283
  %srna7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 11, !dbg !4284
  %15 = load %struct.StructRNA*, %struct.StructRNA** %srna7, align 8, !dbg !4284
  %16 = bitcast %struct.StructRNA* %15 to i8*, !dbg !4283
  %call8 = call %struct.PropertyRNA* @RNA_def_property(i8* %16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.390, i64 0, i64 0), i32 4, i32 0), !dbg !4285
  store %struct.PropertyRNA* %call8, %struct.PropertyRNA** %prop, align 8, !dbg !4286
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4287
  call void @RNA_def_property_enum_items(%struct.PropertyRNA* %17, %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @proportional_falloff_curve_only_items, i64 0, i64 0)), !dbg !4288
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4289
  call void @RNA_def_property_enum_default(%struct.PropertyRNA* %18, i32 0), !dbg !4290
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4291
  call void @RNA_def_property_ui_text(%struct.PropertyRNA* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.400, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.401, i64 0, i64 0)), !dbg !4292
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4293
  call void @RNA_def_property_translation_context(%struct.PropertyRNA* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.402, i64 0, i64 0)), !dbg !4294
  ret void, !dbg !4295
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_unsubdivide(%struct.wmOperatorType* %ot) #0 !dbg !4296 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4297, metadata !DIExpression()), !dbg !4298
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4299
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4300
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8** %name, align 8, !dbg !4301
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4302
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !4303
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27, i64 0, i64 0), i8** %description, align 8, !dbg !4304
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4305
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !4306
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.28, i64 0, i64 0), i8** %idname, align 8, !dbg !4307
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4308
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4309
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_unsubdivide_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4310
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4311
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4312
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !4313
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4314
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4315
  store i16 3, i16* %flag, align 8, !dbg !4316
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4317
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !4318
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4318
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !4317
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i32 2, i32 1, i32 2147483647, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.31, i64 0, i64 0), i32 1, i32 100), !dbg !4319
  ret void, !dbg !4320
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_unsubdivide_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4321 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %iterations = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4322, metadata !DIExpression()), !dbg !4323
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4324, metadata !DIExpression()), !dbg !4325
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4326, metadata !DIExpression()), !dbg !4327
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4328
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4329
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4327
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4330, metadata !DIExpression()), !dbg !4331
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4332
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !4333
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !4331
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !4334, metadata !DIExpression()), !dbg !4336
  call void @llvm.dbg.declare(metadata i32* %iterations, metadata !4337, metadata !DIExpression()), !dbg !4338
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4339
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !4340
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4340
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0)), !dbg !4341
  store i32 %call2, i32* %iterations, align 4, !dbg !4338
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4342
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4343
  %6 = load i32, i32* %iterations, align 4, !dbg !4344
  %call3 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %4, %struct.BMOperator* %bmop, %struct.wmOperator* %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.403, i64 0, i64 0), i32 1, i32 %6), !dbg !4345
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4346
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !4347
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4347
  call void @BMO_op_exec(%struct.BMesh* %8, %struct.BMOperator* %bmop), !dbg !4348
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4349
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4351
  %call4 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %9, %struct.BMOperator* %bmop, %struct.wmOperator* %10, i8 zeroext 1), !dbg !4352
  %tobool = icmp ne i8 %call4, 0, !dbg !4352
  br i1 %tobool, label %if.end, label %if.then, !dbg !4353

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4354
  br label %return, !dbg !4354

if.end:                                           ; preds = %entry
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4356
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 12, !dbg !4358
  %12 = load i16, i16* %selectmode, align 4, !dbg !4358
  %conv = sext i16 %12 to i32, !dbg !4356
  %and = and i32 %conv, 1, !dbg !4359
  %cmp = icmp eq i32 %and, 0, !dbg !4360
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !4361

if.then6:                                         ; preds = %if.end
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4362
  call void @EDBM_selectmode_flush_ex(%struct.BMEditMesh* %13, i16 signext 1), !dbg !4364
  br label %if.end7, !dbg !4365

if.end7:                                          ; preds = %if.then6, %if.end
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4366
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %14), !dbg !4367
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4368
  call void @EDBM_update_generic(%struct.BMEditMesh* %15, i8 zeroext 1, i8 zeroext 1), !dbg !4369
  store i32 4, i32* %retval, align 4, !dbg !4370
  br label %return, !dbg !4370

return:                                           ; preds = %if.end7, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !4371
  ret i32 %16, !dbg !4371
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @EMBM_project_snap_verts(%struct.bContext* %C, %struct.ARegion* %ar, %struct.BMEditMesh* %em) #0 !dbg !4372 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %obedit = alloca %struct.Object*, align 8
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %mval = alloca [2 x float], align 4
  %co_proj = alloca [3 x float], align 4
  %no_dummy = alloca [3 x float], align 4
  %dist_px_dummy = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4445, metadata !DIExpression()), !dbg !4446
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !4447, metadata !DIExpression()), !dbg !4448
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !4449, metadata !DIExpression()), !dbg !4450
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4451, metadata !DIExpression()), !dbg !4452
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4453
  %ob = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 14, !dbg !4454
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !4454
  store %struct.Object* %1, %struct.Object** %obedit, align 8, !dbg !4452
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !4455, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !4544, metadata !DIExpression()), !dbg !4545
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4546
  %3 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4547
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %3, i32 0, i32 30, !dbg !4548
  %4 = load i8*, i8** %regiondata, align 8, !dbg !4548
  %5 = bitcast i8* %4 to %struct.RegionView3D*, !dbg !4547
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %2, %struct.RegionView3D* %5), !dbg !4549
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !4550
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !4550
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4550
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %7, i8 zeroext 1, i8* null), !dbg !4550
  %8 = bitcast i8* %call to %struct.BMVert*, !dbg !4550
  store %struct.BMVert* %8, %struct.BMVert** %eve, align 8, !dbg !4550
  br label %for.cond, !dbg !4550

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4552
  %tobool = icmp ne %struct.BMVert* %9, null, !dbg !4550
  br i1 %tobool, label %for.body, label %for.end, !dbg !4550

for.body:                                         ; preds = %for.cond
  %10 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4554
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %10, i32 0, i32 0, !dbg !4554
  %call1 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !4554
  %tobool2 = icmp ne i8 %call1, 0, !dbg !4554
  br i1 %tobool2, label %if.then, label %if.end17, !dbg !4557

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata [2 x float]* %mval, metadata !4558, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.declare(metadata [3 x float]* %co_proj, metadata !4561, metadata !DIExpression()), !dbg !4562
  call void @llvm.dbg.declare(metadata [3 x float]* %no_dummy, metadata !4563, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.declare(metadata float* %dist_px_dummy, metadata !4565, metadata !DIExpression()), !dbg !4566
  %11 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !4567
  %12 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4569
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %12, i32 0, i32 2, !dbg !4570
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4569
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !4571
  %call4 = call i32 @ED_view3d_project_float_object(%struct.ARegion* %11, float* %arraydecay, float* %arraydecay3, i32 0), !dbg !4572
  %cmp = icmp eq i32 %call4, 0, !dbg !4573
  br i1 %cmp, label %if.then5, label %if.end16, !dbg !4574

if.then5:                                         ; preds = %if.then
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4575
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %mval, i64 0, i64 0, !dbg !4578
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %co_proj, i64 0, i64 0, !dbg !4579
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %no_dummy, i64 0, i64 0, !dbg !4580
  %call9 = call zeroext i8 @snapObjectsContext(%struct.bContext* %13, float* %arraydecay6, float* %dist_px_dummy, float* %arraydecay7, float* %arraydecay8, i32 2), !dbg !4581
  %tobool10 = icmp ne i8 %call9, 0, !dbg !4581
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !4582

if.then11:                                        ; preds = %if.then5
  %14 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !4583
  %co12 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %14, i32 0, i32 2, !dbg !4585
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %co12, i64 0, i64 0, !dbg !4583
  %15 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4586
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 50, !dbg !4587
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !4586
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co_proj, i64 0, i64 0, !dbg !4588
  call void @mul_v3_m4v3(float* %arraydecay13, [4 x float]* %arraydecay14, float* %arraydecay15), !dbg !4589
  br label %if.end, !dbg !4590

if.end:                                           ; preds = %if.then11, %if.then5
  br label %if.end16, !dbg !4591

if.end16:                                         ; preds = %if.end, %if.then
  br label %if.end17, !dbg !4592

if.end17:                                         ; preds = %if.end16, %for.body
  br label %for.inc, !dbg !4593

for.inc:                                          ; preds = %if.end17
  %call18 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4552
  %16 = bitcast i8* %call18 to %struct.BMVert*, !dbg !4552
  store %struct.BMVert* %16, %struct.BMVert** %eve, align 8, !dbg !4552
  br label %for.cond, !dbg !4552, !llvm.loop !4594

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4596
}

declare dso_local void @ED_view3d_init_mats_rv3d(%struct.Object*, %struct.RegionView3D*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !4597 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !4602, metadata !DIExpression()), !dbg !4603
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !4604, metadata !DIExpression()), !dbg !4605
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !4606, metadata !DIExpression()), !dbg !4607
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4608, metadata !DIExpression()), !dbg !4609
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4610
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !4610
  %2 = load i8, i8* %itype.addr, align 1, !dbg !4610
  %3 = load i8*, i8** %data.addr, align 8, !dbg !4610
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !4610
  %tobool = icmp ne i8 %call, 0, !dbg !4610
  br i1 %tobool, label %if.then, label %if.else, !dbg !4612

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4613
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !4615
  store i8* %call1, i8** %retval, align 8, !dbg !4616
  br label %return, !dbg !4616

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !4617
  br label %return, !dbg !4617

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !4619
  ret i8* %5, !dbg !4619
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !4620 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !4626, metadata !DIExpression()), !dbg !4627
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !4628, metadata !DIExpression()), !dbg !4629
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !4630
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !4631
  %1 = load i8, i8* %hflag1, align 1, !dbg !4631
  %conv = zext i8 %1 to i32, !dbg !4630
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !4632
  %conv2 = zext i8 %2 to i32, !dbg !4632
  %and = and i32 %conv, %conv2, !dbg !4633
  %conv3 = trunc i32 %and to i8, !dbg !4630
  ret i8 %conv3, !dbg !4634
}

declare dso_local i32 @ED_view3d_project_float_object(%struct.ARegion*, float*, float*, i32) #2

declare dso_local zeroext i8 @snapObjectsContext(%struct.bContext*, float*, float*, float*, float*, i32) #2

declare dso_local void @mul_v3_m4v3(float*, [4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !4635 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !4638, metadata !DIExpression()), !dbg !4639
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4640
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !4641
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !4641
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !4642
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !4642
  %call = call i8* %1(i8* %3), !dbg !4640
  ret i8* %call, !dbg !4643
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_delete(%struct.wmOperatorType* %ot) #0 !dbg !4644 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4645, metadata !DIExpression()), !dbg !4646
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4647
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4648
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0), i8** %name, align 8, !dbg !4649
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4650
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !4651
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.33, i64 0, i64 0), i8** %description, align 8, !dbg !4652
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4653
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !4654
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i64 0, i64 0), i8** %idname, align 8, !dbg !4655
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4656
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !4657
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4658
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4659
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4660
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_delete_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4661
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4662
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !4663
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !4664
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4665
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !4666
  store i16 3, i16* %flag, align 8, !dbg !4667
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4668
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !4669
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4669
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !4668
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @prop_mesh_delete_types, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.37, i64 0, i64 0)), !dbg !4670
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4671
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !4672
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !4673
  ret void, !dbg !4674
}

declare dso_local i32 @WM_menu_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_delete_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4675 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %type = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4676, metadata !DIExpression()), !dbg !4677
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4678, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4680, metadata !DIExpression()), !dbg !4681
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4682
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4683
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4681
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4684, metadata !DIExpression()), !dbg !4685
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4686
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !4687
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !4685
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4688, metadata !DIExpression()), !dbg !4689
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4690
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !4691
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4691
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0)), !dbg !4692
  store i32 %call2, i32* %type, align 4, !dbg !4689
  %4 = load i32, i32* %type, align 4, !dbg !4693
  %cmp = icmp eq i32 %4, 0, !dbg !4695
  br i1 %cmp, label %if.then, label %if.else, !dbg !4696

if.then:                                          ; preds = %entry
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4697
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4700
  %call3 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %5, %struct.wmOperator* %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.404, i64 0, i64 0), i32 1, i32 1), !dbg !4701
  %tobool = icmp ne i8 %call3, 0, !dbg !4701
  br i1 %tobool, label %if.end, label %if.then4, !dbg !4702

if.then4:                                         ; preds = %if.then
  store i32 2, i32* %retval, align 4, !dbg !4703
  br label %return, !dbg !4703

if.end:                                           ; preds = %if.then
  br label %if.end36, !dbg !4704

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %type, align 4, !dbg !4705
  %cmp5 = icmp eq i32 %7, 1, !dbg !4707
  br i1 %cmp5, label %if.then6, label %if.else11, !dbg !4708

if.then6:                                         ; preds = %if.else
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4709
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4712
  %call7 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %8, %struct.wmOperator* %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.405, i64 0, i64 0), i32 1, i32 2), !dbg !4713
  %tobool8 = icmp ne i8 %call7, 0, !dbg !4713
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !4714

if.then9:                                         ; preds = %if.then6
  store i32 2, i32* %retval, align 4, !dbg !4715
  br label %return, !dbg !4715

if.end10:                                         ; preds = %if.then6
  br label %if.end35, !dbg !4716

if.else11:                                        ; preds = %if.else
  %10 = load i32, i32* %type, align 4, !dbg !4717
  %cmp12 = icmp eq i32 %10, 2, !dbg !4719
  br i1 %cmp12, label %if.then13, label %if.else18, !dbg !4720

if.then13:                                        ; preds = %if.else11
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4721
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4724
  %call14 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %11, %struct.wmOperator* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.406, i64 0, i64 0), i32 1, i32 5), !dbg !4725
  %tobool15 = icmp ne i8 %call14, 0, !dbg !4725
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !4726

if.then16:                                        ; preds = %if.then13
  store i32 2, i32* %retval, align 4, !dbg !4727
  br label %return, !dbg !4727

if.end17:                                         ; preds = %if.then13
  br label %if.end34, !dbg !4728

if.else18:                                        ; preds = %if.else11
  %13 = load i32, i32* %type, align 4, !dbg !4729
  %cmp19 = icmp eq i32 %13, 3, !dbg !4731
  br i1 %cmp19, label %if.then20, label %if.else25, !dbg !4732

if.then20:                                        ; preds = %if.else18
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4733
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4736
  %call21 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %14, %struct.wmOperator* %15, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.407, i64 0, i64 0), i32 1, i32 4), !dbg !4737
  %tobool22 = icmp ne i8 %call21, 0, !dbg !4737
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !4738

if.then23:                                        ; preds = %if.then20
  store i32 2, i32* %retval, align 4, !dbg !4739
  br label %return, !dbg !4739

if.end24:                                         ; preds = %if.then20
  br label %if.end33, !dbg !4740

if.else25:                                        ; preds = %if.else18
  %16 = load i32, i32* %type, align 4, !dbg !4741
  %cmp26 = icmp eq i32 %16, 4, !dbg !4743
  br i1 %cmp26, label %if.then27, label %if.end32, !dbg !4744

if.then27:                                        ; preds = %if.else25
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4745
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4748
  %call28 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %17, %struct.wmOperator* %18, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.406, i64 0, i64 0), i32 1, i32 3), !dbg !4749
  %tobool29 = icmp ne i8 %call28, 0, !dbg !4749
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !4750

if.then30:                                        ; preds = %if.then27
  store i32 2, i32* %retval, align 4, !dbg !4751
  br label %return, !dbg !4751

if.end31:                                         ; preds = %if.then27
  br label %if.end32, !dbg !4753

if.end32:                                         ; preds = %if.end31, %if.else25
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end24
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end17
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end10
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4754
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %19, i8 zeroext 1), !dbg !4755
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4756
  call void @EDBM_update_generic(%struct.BMEditMesh* %20, i8 zeroext 1, i8 zeroext 1), !dbg !4757
  store i32 4, i32* %retval, align 4, !dbg !4758
  br label %return, !dbg !4758

return:                                           ; preds = %if.end36, %if.then30, %if.then23, %if.then16, %if.then9, %if.then4
  %21 = load i32, i32* %retval, align 4, !dbg !4759
  ret i32 %21, !dbg !4759
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_delete_loose(%struct.wmOperatorType* %ot) #0 !dbg !4760 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4761, metadata !DIExpression()), !dbg !4762
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4763
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4764
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i64 0, i64 0), i8** %name, align 8, !dbg !4765
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4766
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !4767
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.39, i64 0, i64 0), i8** %description, align 8, !dbg !4768
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4769
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !4770
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40, i64 0, i64 0), i8** %idname, align 8, !dbg !4771
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4772
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4773
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_delete_loose_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4774
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4775
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4776
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !4777
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4778
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4779
  store i16 3, i16* %flag, align 8, !dbg !4780
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4781
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !4782
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4782
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !4781
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i64 0, i64 0)), !dbg !4783
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4784
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !4785
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !4785
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !4784
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i64 0, i64 0)), !dbg !4786
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4787
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !4788
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !4788
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !4787
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i64 0, i64 0)), !dbg !4789
  ret void, !dbg !4790
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_delete_loose_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4791 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %use_verts = alloca i8, align 1
  %use_edges = alloca i8, align 1
  %use_faces = alloca i8, align 1
  %totelem = alloca [3 x i32], align 4
  %f = alloca %struct.BMFace*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %v = alloca %struct.BMVert*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4792, metadata !DIExpression()), !dbg !4793
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4794, metadata !DIExpression()), !dbg !4795
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4796, metadata !DIExpression()), !dbg !4797
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4798
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4799
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4797
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4800, metadata !DIExpression()), !dbg !4801
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4802
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !4803
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !4801
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !4804, metadata !DIExpression()), !dbg !4805
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4806
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !4807
  %3 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !4807
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !4805
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !4808, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.declare(metadata i8* %use_verts, metadata !4810, metadata !DIExpression()), !dbg !4812
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4813
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !4814
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4814
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0)), !dbg !4815
  %tobool = icmp ne i32 %call3, 0, !dbg !4815
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4816

land.rhs:                                         ; preds = %entry
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4817
  %totvertsel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 4, !dbg !4818
  %7 = load i32, i32* %totvertsel, align 8, !dbg !4818
  %tobool4 = icmp ne i32 %7, 0, !dbg !4816
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %tobool4, %land.rhs ], !dbg !4819
  %land.ext = zext i1 %8 to i32, !dbg !4816
  %conv = trunc i32 %land.ext to i8, !dbg !4820
  store i8 %conv, i8* %use_verts, align 1, !dbg !4812
  call void @llvm.dbg.declare(metadata i8* %use_edges, metadata !4821, metadata !DIExpression()), !dbg !4822
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4823
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !4824
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !4824
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i64 0, i64 0)), !dbg !4825
  %tobool7 = icmp ne i32 %call6, 0, !dbg !4825
  br i1 %tobool7, label %land.rhs8, label %land.end10, !dbg !4826

land.rhs8:                                        ; preds = %land.end
  %11 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4827
  %totedgesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %11, i32 0, i32 5, !dbg !4828
  %12 = load i32, i32* %totedgesel, align 4, !dbg !4828
  %tobool9 = icmp ne i32 %12, 0, !dbg !4826
  br label %land.end10

land.end10:                                       ; preds = %land.rhs8, %land.end
  %13 = phi i1 [ false, %land.end ], [ %tobool9, %land.rhs8 ], !dbg !4819
  %land.ext11 = zext i1 %13 to i32, !dbg !4826
  %conv12 = trunc i32 %land.ext11 to i8, !dbg !4829
  store i8 %conv12, i8* %use_edges, align 1, !dbg !4822
  call void @llvm.dbg.declare(metadata i8* %use_faces, metadata !4830, metadata !DIExpression()), !dbg !4831
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4832
  %ptr13 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 7, !dbg !4833
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr13, align 8, !dbg !4833
  %call14 = call i32 @RNA_boolean_get(%struct.PointerRNA* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0)), !dbg !4834
  %tobool15 = icmp ne i32 %call14, 0, !dbg !4834
  br i1 %tobool15, label %land.rhs16, label %land.end18, !dbg !4835

land.rhs16:                                       ; preds = %land.end10
  %16 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4836
  %totfacesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %16, i32 0, i32 6, !dbg !4837
  %17 = load i32, i32* %totfacesel, align 8, !dbg !4837
  %tobool17 = icmp ne i32 %17, 0, !dbg !4835
  br label %land.end18

land.end18:                                       ; preds = %land.rhs16, %land.end10
  %18 = phi i1 [ false, %land.end10 ], [ %tobool17, %land.rhs16 ], !dbg !4819
  %land.ext19 = zext i1 %18 to i32, !dbg !4835
  %conv20 = trunc i32 %land.ext19 to i8, !dbg !4838
  store i8 %conv20, i8* %use_faces, align 1, !dbg !4831
  call void @llvm.dbg.declare(metadata [3 x i32]* %totelem, metadata !4839, metadata !DIExpression()), !dbg !4841
  %arrayinit.begin = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !4842
  %19 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4843
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %19, i32 0, i32 0, !dbg !4844
  %20 = load i32, i32* %totvert, align 8, !dbg !4844
  store i32 %20, i32* %arrayinit.begin, align 4, !dbg !4842
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !4842
  %21 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4845
  %totedge = getelementptr inbounds %struct.BMesh, %struct.BMesh* %21, i32 0, i32 1, !dbg !4846
  %22 = load i32, i32* %totedge, align 4, !dbg !4846
  store i32 %22, i32* %arrayinit.element, align 4, !dbg !4842
  %arrayinit.element21 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1, !dbg !4842
  %23 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4847
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %23, i32 0, i32 3, !dbg !4848
  %24 = load i32, i32* %totface, align 4, !dbg !4848
  store i32 %24, i32* %arrayinit.element21, align 4, !dbg !4842
  %25 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4849
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %25, i8 zeroext 11, i8 zeroext 16, i8 zeroext 0), !dbg !4850
  %26 = load i8, i8* %use_faces, align 1, !dbg !4851
  %tobool22 = icmp ne i8 %26, 0, !dbg !4851
  br i1 %tobool22, label %if.then, label %if.end32, !dbg !4853

if.then:                                          ; preds = %land.end18
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !4854, metadata !DIExpression()), !dbg !4856
  %27 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4857
  %call23 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %27, i8 zeroext 3, i8* null), !dbg !4857
  %28 = bitcast i8* %call23 to %struct.BMFace*, !dbg !4857
  store %struct.BMFace* %28, %struct.BMFace** %f, align 8, !dbg !4857
  br label %for.cond, !dbg !4857

for.cond:                                         ; preds = %for.inc, %if.then
  %29 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4859
  %tobool24 = icmp ne %struct.BMFace* %29, null, !dbg !4857
  br i1 %tobool24, label %for.body, label %for.end, !dbg !4857

for.body:                                         ; preds = %for.cond
  %30 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4861
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %30, i32 0, i32 0, !dbg !4861
  %call25 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !4861
  %tobool26 = icmp ne i8 %call25, 0, !dbg !4861
  br i1 %tobool26, label %if.then27, label %if.end, !dbg !4864

if.then27:                                        ; preds = %for.body
  %31 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4865
  %head28 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %31, i32 0, i32 0, !dbg !4865
  %32 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4865
  %call29 = call zeroext i8 @bm_face_is_loose(%struct.BMFace* %32), !dbg !4865
  %conv30 = zext i8 %call29 to i32, !dbg !4865
  call void @_bm_elem_flag_set(%struct.BMHeader* %head28, i8 zeroext 16, i32 %conv30), !dbg !4865
  br label %if.end, !dbg !4867

if.end:                                           ; preds = %if.then27, %for.body
  br label %for.inc, !dbg !4868

for.inc:                                          ; preds = %if.end
  %call31 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4859
  %33 = bitcast i8* %call31 to %struct.BMFace*, !dbg !4859
  store %struct.BMFace* %33, %struct.BMFace** %f, align 8, !dbg !4859
  br label %for.cond, !dbg !4859, !llvm.loop !4869

for.end:                                          ; preds = %for.cond
  %34 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4871
  call void @BM_mesh_delete_hflag_context(%struct.BMesh* %34, i8 zeroext 16, i32 5), !dbg !4872
  br label %if.end32, !dbg !4873

if.end32:                                         ; preds = %for.end, %land.end18
  %35 = load i8, i8* %use_edges, align 1, !dbg !4874
  %tobool33 = icmp ne i8 %35, 0, !dbg !4874
  br i1 %tobool33, label %if.then34, label %if.end50, !dbg !4876

if.then34:                                        ; preds = %if.end32
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !4877, metadata !DIExpression()), !dbg !4879
  %36 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4880
  %call35 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %36, i8 zeroext 2, i8* null), !dbg !4880
  %37 = bitcast i8* %call35 to %struct.BMEdge*, !dbg !4880
  store %struct.BMEdge* %37, %struct.BMEdge** %e, align 8, !dbg !4880
  br label %for.cond36, !dbg !4880

for.cond36:                                       ; preds = %for.inc47, %if.then34
  %38 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4882
  %tobool37 = icmp ne %struct.BMEdge* %38, null, !dbg !4880
  br i1 %tobool37, label %for.body38, label %for.end49, !dbg !4880

for.body38:                                       ; preds = %for.cond36
  %39 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4884
  %head39 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %39, i32 0, i32 0, !dbg !4884
  %call40 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head39, i8 zeroext 1), !dbg !4884
  %tobool41 = icmp ne i8 %call40, 0, !dbg !4884
  br i1 %tobool41, label %if.then42, label %if.end46, !dbg !4887

if.then42:                                        ; preds = %for.body38
  %40 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4888
  %head43 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %40, i32 0, i32 0, !dbg !4888
  %41 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !4888
  %call44 = call zeroext i8 @BM_edge_is_wire(%struct.BMEdge* %41), !dbg !4888
  %conv45 = zext i8 %call44 to i32, !dbg !4888
  call void @_bm_elem_flag_set(%struct.BMHeader* %head43, i8 zeroext 16, i32 %conv45), !dbg !4888
  br label %if.end46, !dbg !4890

if.end46:                                         ; preds = %if.then42, %for.body38
  br label %for.inc47, !dbg !4891

for.inc47:                                        ; preds = %if.end46
  %call48 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4882
  %42 = bitcast i8* %call48 to %struct.BMEdge*, !dbg !4882
  store %struct.BMEdge* %42, %struct.BMEdge** %e, align 8, !dbg !4882
  br label %for.cond36, !dbg !4882, !llvm.loop !4892

for.end49:                                        ; preds = %for.cond36
  %43 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4894
  call void @BM_mesh_delete_hflag_context(%struct.BMesh* %43, i8 zeroext 16, i32 2), !dbg !4895
  br label %if.end50, !dbg !4896

if.end50:                                         ; preds = %for.end49, %if.end32
  %44 = load i8, i8* %use_verts, align 1, !dbg !4897
  %tobool51 = icmp ne i8 %44, 0, !dbg !4897
  br i1 %tobool51, label %if.then52, label %if.end68, !dbg !4899

if.then52:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !4900, metadata !DIExpression()), !dbg !4902
  %45 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4903
  %call53 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %45, i8 zeroext 1, i8* null), !dbg !4903
  %46 = bitcast i8* %call53 to %struct.BMVert*, !dbg !4903
  store %struct.BMVert* %46, %struct.BMVert** %v, align 8, !dbg !4903
  br label %for.cond54, !dbg !4903

for.cond54:                                       ; preds = %for.inc65, %if.then52
  %47 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4905
  %tobool55 = icmp ne %struct.BMVert* %47, null, !dbg !4903
  br i1 %tobool55, label %for.body56, label %for.end67, !dbg !4903

for.body56:                                       ; preds = %for.cond54
  %48 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4907
  %head57 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %48, i32 0, i32 0, !dbg !4907
  %call58 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head57, i8 zeroext 1), !dbg !4907
  %tobool59 = icmp ne i8 %call58, 0, !dbg !4907
  br i1 %tobool59, label %if.then60, label %if.end64, !dbg !4910

if.then60:                                        ; preds = %for.body56
  %49 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4911
  %head61 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %49, i32 0, i32 0, !dbg !4911
  %50 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4911
  %e62 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %50, i32 0, i32 4, !dbg !4911
  %51 = load %struct.BMEdge*, %struct.BMEdge** %e62, align 8, !dbg !4911
  %cmp = icmp eq %struct.BMEdge* %51, null, !dbg !4911
  %conv63 = zext i1 %cmp to i32, !dbg !4911
  call void @_bm_elem_flag_set(%struct.BMHeader* %head61, i8 zeroext 16, i32 %conv63), !dbg !4911
  br label %if.end64, !dbg !4913

if.end64:                                         ; preds = %if.then60, %for.body56
  br label %for.inc65, !dbg !4914

for.inc65:                                        ; preds = %if.end64
  %call66 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4905
  %52 = bitcast i8* %call66 to %struct.BMVert*, !dbg !4905
  store %struct.BMVert* %52, %struct.BMVert** %v, align 8, !dbg !4905
  br label %for.cond54, !dbg !4905, !llvm.loop !4915

for.end67:                                        ; preds = %for.cond54
  %53 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4917
  call void @BM_mesh_delete_hflag_context(%struct.BMesh* %53, i8 zeroext 16, i32 1), !dbg !4918
  br label %if.end68, !dbg !4919

if.end68:                                         ; preds = %for.end67, %if.end50
  %54 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4920
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %54, i8 zeroext 1), !dbg !4921
  %55 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4922
  call void @EDBM_update_generic(%struct.BMEditMesh* %55, i8 zeroext 1, i8 zeroext 1), !dbg !4923
  %56 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4924
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %56, i32 0, i32 8, !dbg !4925
  %57 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !4925
  %58 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4926
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !4927
  call void @edbm_report_delete_info(%struct.ReportList* %57, %struct.BMesh* %58, i32* %arraydecay), !dbg !4928
  ret i32 4, !dbg !4929
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_edge_collapse(%struct.wmOperatorType* %ot) #0 !dbg !4930 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4931, metadata !DIExpression()), !dbg !4932
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4933
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4934
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i64 0, i64 0), i8** %name, align 8, !dbg !4935
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4936
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !4937
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51, i64 0, i64 0), i8** %description, align 8, !dbg !4938
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4939
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !4940
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.52, i64 0, i64 0), i8** %idname, align 8, !dbg !4941
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4942
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4943
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_collapse_edge_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4944
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4945
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4946
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !4947
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4948
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4949
  store i16 3, i16* %flag, align 8, !dbg !4950
  ret void, !dbg !4951
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_collapse_edge_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4952 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4953, metadata !DIExpression()), !dbg !4954
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4955, metadata !DIExpression()), !dbg !4956
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !4957, metadata !DIExpression()), !dbg !4958
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4959
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !4960
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !4958
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4961, metadata !DIExpression()), !dbg !4962
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !4963
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !4964
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !4962
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4965
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4967
  %call2 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %2, %struct.wmOperator* %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.413, i64 0, i64 0), i32 1), !dbg !4968
  %tobool = icmp ne i8 %call2, 0, !dbg !4968
  br i1 %tobool, label %if.end, label %if.then, !dbg !4969

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !4970
  br label %return, !dbg !4970

if.end:                                           ; preds = %entry
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4971
  call void @EDBM_update_generic(%struct.BMEditMesh* %4, i8 zeroext 1, i8 zeroext 1), !dbg !4972
  store i32 4, i32* %retval, align 4, !dbg !4973
  br label %return, !dbg !4973

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !4974
  ret i32 %5, !dbg !4974
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_edge_face_add(%struct.wmOperatorType* %ot) #0 !dbg !4975 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4976, metadata !DIExpression()), !dbg !4977
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4978
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !4979
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i64 0, i64 0), i8** %name, align 8, !dbg !4980
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4981
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !4982
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.54, i64 0, i64 0), i8** %description, align 8, !dbg !4983
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4984
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !4985
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.55, i64 0, i64 0), i8** %idname, align 8, !dbg !4986
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4987
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !4988
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_add_edge_face_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4989
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4990
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !4991
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !4992
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4993
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !4994
  store i16 3, i16* %flag, align 8, !dbg !4995
  ret void, !dbg !4996
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_add_edge_face_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4997 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %use_smooth = alloca i16, align 2
  %totedge_orig = alloca i32, align 4
  %totface_orig = alloca i32, align 4
  %ele_desel = alloca %struct.BMElem*, align 8
  %ele_desel_face = alloca %struct.BMFace*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4998, metadata !DIExpression()), !dbg !4999
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5000, metadata !DIExpression()), !dbg !5001
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !5002, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5004, metadata !DIExpression()), !dbg !5005
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5006
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5007
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5005
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5008, metadata !DIExpression()), !dbg !5009
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5010
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5011
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5009
  call void @llvm.dbg.declare(metadata i16* %use_smooth, metadata !5012, metadata !DIExpression()), !dbg !5014
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5015
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !5016
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5016
  %call2 = call i32 @edbm_add_edge_face__smooth_get(%struct.BMesh* %3), !dbg !5017
  %conv = trunc i32 %call2 to i16, !dbg !5017
  store i16 %conv, i16* %use_smooth, align 2, !dbg !5014
  call void @llvm.dbg.declare(metadata i32* %totedge_orig, metadata !5018, metadata !DIExpression()), !dbg !5019
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5020
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !5021
  %5 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !5021
  %totedge = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 1, !dbg !5022
  %6 = load i32, i32* %totedge, align 4, !dbg !5022
  store i32 %6, i32* %totedge_orig, align 4, !dbg !5019
  call void @llvm.dbg.declare(metadata i32* %totface_orig, metadata !5023, metadata !DIExpression()), !dbg !5024
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5025
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !5026
  %8 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !5026
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %8, i32 0, i32 3, !dbg !5027
  %9 = load i32, i32* %totface, align 4, !dbg !5027
  store i32 %9, i32* %totface_orig, align 4, !dbg !5024
  call void @llvm.dbg.declare(metadata %struct.BMElem** %ele_desel, metadata !5028, metadata !DIExpression()), !dbg !5029
  call void @llvm.dbg.declare(metadata %struct.BMFace** %ele_desel_face, metadata !5030, metadata !DIExpression()), !dbg !5031
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5032
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !5033
  %11 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !5033
  %call6 = call %struct.BMElem* @edbm_add_edge_face_exec__tricky_extend_sel(%struct.BMesh* %11), !dbg !5034
  store %struct.BMElem* %call6, %struct.BMElem** %ele_desel, align 8, !dbg !5035
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5036
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5038
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5039
  %mat_nr = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 13, !dbg !5040
  %15 = load i16, i16* %mat_nr, align 2, !dbg !5040
  %conv7 = sext i16 %15 to i32, !dbg !5039
  %16 = load i16, i16* %use_smooth, align 2, !dbg !5041
  %conv8 = sext i16 %16 to i32, !dbg !5041
  %call9 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %12, %struct.BMOperator* %bmop, %struct.wmOperator* %13, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.414, i64 0, i64 0), i32 1, i32 %conv7, i32 %conv8), !dbg !5042
  %tobool = icmp ne i8 %call9, 0, !dbg !5042
  br i1 %tobool, label %if.end, label %if.then, !dbg !5043

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5044
  br label %return, !dbg !5044

if.end:                                           ; preds = %entry
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5046
  %bm10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %17, i32 0, i32 0, !dbg !5047
  %18 = load %struct.BMesh*, %struct.BMesh** %bm10, align 8, !dbg !5047
  call void @BMO_op_exec(%struct.BMesh* %18, %struct.BMOperator* %bmop), !dbg !5048
  %19 = load i32, i32* %totedge_orig, align 4, !dbg !5049
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5051
  %bm11 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %20, i32 0, i32 0, !dbg !5052
  %21 = load %struct.BMesh*, %struct.BMesh** %bm11, align 8, !dbg !5052
  %totedge12 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %21, i32 0, i32 1, !dbg !5053
  %22 = load i32, i32* %totedge12, align 4, !dbg !5053
  %cmp = icmp eq i32 %19, %22, !dbg !5054
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !5055

land.lhs.true:                                    ; preds = %if.end
  %23 = load i32, i32* %totface_orig, align 4, !dbg !5056
  %24 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5057
  %bm14 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %24, i32 0, i32 0, !dbg !5058
  %25 = load %struct.BMesh*, %struct.BMesh** %bm14, align 8, !dbg !5058
  %totface15 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %25, i32 0, i32 3, !dbg !5059
  %26 = load i32, i32* %totface15, align 4, !dbg !5059
  %cmp16 = icmp eq i32 %23, %26, !dbg !5060
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !5061

if.then18:                                        ; preds = %land.lhs.true
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5062
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5064
  %call19 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %27, %struct.BMOperator* %bmop, %struct.wmOperator* %28, i8 zeroext 1), !dbg !5065
  store i32 2, i32* %retval, align 4, !dbg !5066
  br label %return, !dbg !5066

if.end20:                                         ; preds = %land.lhs.true, %if.end
  %29 = load %struct.BMElem*, %struct.BMElem** %ele_desel, align 8, !dbg !5067
  %tobool21 = icmp ne %struct.BMElem* %29, null, !dbg !5067
  br i1 %tobool21, label %land.lhs.true22, label %if.else, !dbg !5069

land.lhs.true22:                                  ; preds = %if.end20
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !5070
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !5071
  %call23 = call i32 @BMO_slot_buffer_count(%struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0)), !dbg !5072
  %cmp24 = icmp eq i32 %call23, 1, !dbg !5073
  br i1 %cmp24, label %land.lhs.true26, label %if.else, !dbg !5074

land.lhs.true26:                                  ; preds = %land.lhs.true22
  %slots_out27 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !5075
  %arraydecay28 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out27, i64 0, i64 0, !dbg !5076
  %call29 = call i8* @BMO_slot_buffer_get_first(%struct.BMOpSlot* %arraydecay28, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0)), !dbg !5077
  %30 = bitcast i8* %call29 to %struct.BMFace*, !dbg !5077
  store %struct.BMFace* %30, %struct.BMFace** %ele_desel_face, align 8, !dbg !5078
  %tobool30 = icmp ne %struct.BMFace* %30, null, !dbg !5078
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !5079

if.then31:                                        ; preds = %land.lhs.true26
  %31 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5080
  %bm32 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %31, i32 0, i32 0, !dbg !5082
  %32 = load %struct.BMesh*, %struct.BMesh** %bm32, align 8, !dbg !5082
  %33 = load %struct.BMElem*, %struct.BMElem** %ele_desel, align 8, !dbg !5083
  %34 = load %struct.BMFace*, %struct.BMFace** %ele_desel_face, align 8, !dbg !5084
  call void @edbm_add_edge_face_exec__tricky_finalize_sel(%struct.BMesh* %32, %struct.BMElem* %33, %struct.BMFace* %34), !dbg !5085
  br label %if.end39, !dbg !5086

if.else:                                          ; preds = %land.lhs.true26, %land.lhs.true22, %if.end20
  %35 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5087
  %bm33 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %35, i32 0, i32 0, !dbg !5089
  %36 = load %struct.BMesh*, %struct.BMesh** %bm33, align 8, !dbg !5089
  %slots_out34 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !5090
  %arraydecay35 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out34, i64 0, i64 0, !dbg !5091
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %36, %struct.BMOpSlot* %arraydecay35, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0), i8 zeroext 8, i8 zeroext 1, i8 zeroext 1), !dbg !5092
  %37 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5093
  %bm36 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %37, i32 0, i32 0, !dbg !5094
  %38 = load %struct.BMesh*, %struct.BMesh** %bm36, align 8, !dbg !5094
  %slots_out37 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !5095
  %arraydecay38 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out37, i64 0, i64 0, !dbg !5096
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %38, %struct.BMOpSlot* %arraydecay38, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.416, i64 0, i64 0), i8 zeroext 2, i8 zeroext 1, i8 zeroext 1), !dbg !5097
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then31
  %39 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5098
  %40 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5100
  %call40 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %39, %struct.BMOperator* %bmop, %struct.wmOperator* %40, i8 zeroext 1), !dbg !5101
  %tobool41 = icmp ne i8 %call40, 0, !dbg !5101
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !5102

if.then42:                                        ; preds = %if.end39
  store i32 2, i32* %retval, align 4, !dbg !5103
  br label %return, !dbg !5103

if.end43:                                         ; preds = %if.end39
  %41 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5105
  call void @EDBM_update_generic(%struct.BMEditMesh* %41, i8 zeroext 1, i8 zeroext 1), !dbg !5106
  store i32 4, i32* %retval, align 4, !dbg !5107
  br label %return, !dbg !5107

return:                                           ; preds = %if.end43, %if.then42, %if.then18, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !5108
  ret i32 %42, !dbg !5108
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_mark_seam(%struct.wmOperatorType* %ot) #0 !dbg !5109 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5110, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5112, metadata !DIExpression()), !dbg !5113
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5114
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5115
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0), i8** %name, align 8, !dbg !5116
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5117
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5118
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i64 0, i64 0), i8** %idname, align 8, !dbg !5119
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5120
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5121
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.58, i64 0, i64 0), i8** %description, align 8, !dbg !5122
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5123
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5124
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_mark_seam_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5125
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5126
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5127
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5128
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5129
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5130
  store i16 3, i16* %flag, align 8, !dbg !5131
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5132
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5133
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5133
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5132
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !5134
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5135
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5136
  call void @RNA_def_property_flag(%struct.PropertyRNA* %9, i32 268435456), !dbg !5137
  ret void, !dbg !5138
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_mark_seam_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5139 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %obedit = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %clear = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5140, metadata !DIExpression()), !dbg !5141
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5142, metadata !DIExpression()), !dbg !5143
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5144, metadata !DIExpression()), !dbg !5147
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5148
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !5149
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !5147
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5150, metadata !DIExpression()), !dbg !5151
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5152
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !5153
  store %struct.Object* %call1, %struct.Object** %obedit, align 8, !dbg !5151
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5154, metadata !DIExpression()), !dbg !5155
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5156
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !5157
  %3 = load i8*, i8** %data, align 8, !dbg !5157
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !5158
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !5155
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5159, metadata !DIExpression()), !dbg !5160
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5161
  %call2 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %5), !dbg !5162
  store %struct.BMEditMesh* %call2, %struct.BMEditMesh** %em, align 8, !dbg !5160
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !5163, metadata !DIExpression()), !dbg !5164
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5165
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !5166
  %7 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !5166
  store %struct.BMesh* %7, %struct.BMesh** %bm, align 8, !dbg !5164
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !5167, metadata !DIExpression()), !dbg !5168
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5169, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.declare(metadata i8* %clear, metadata !5171, metadata !DIExpression()), !dbg !5172
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5173
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !5174
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5174
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0)), !dbg !5175
  %conv = trunc i32 %call4 to i8, !dbg !5175
  store i8 %conv, i8* %clear, align 1, !dbg !5172
  %10 = load i8, i8* %clear, align 1, !dbg !5176
  %conv5 = zext i8 %10 to i32, !dbg !5176
  %cmp = icmp eq i32 %conv5, 0, !dbg !5178
  br i1 %cmp, label %if.then, label %if.end, !dbg !5179

if.then:                                          ; preds = %entry
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5180
  %drawflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 36, !dbg !5182
  %12 = load i32, i32* %drawflag, align 8, !dbg !5183
  %or = or i32 %12, 128, !dbg !5183
  store i32 %or, i32* %drawflag, align 8, !dbg !5183
  br label %if.end, !dbg !5184

if.end:                                           ; preds = %if.then, %entry
  %13 = load i8, i8* %clear, align 1, !dbg !5185
  %tobool = icmp ne i8 %13, 0, !dbg !5185
  br i1 %tobool, label %if.then7, label %if.else, !dbg !5187

if.then7:                                         ; preds = %if.end
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5188
  %call8 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %14, i8 zeroext 2, i8* null), !dbg !5188
  %15 = bitcast i8* %call8 to %struct.BMEdge*, !dbg !5188
  store %struct.BMEdge* %15, %struct.BMEdge** %eed, align 8, !dbg !5188
  br label %for.cond, !dbg !5188

for.cond:                                         ; preds = %for.inc, %if.then7
  %16 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5191
  %tobool9 = icmp ne %struct.BMEdge* %16, null, !dbg !5188
  br i1 %tobool9, label %for.body, label %for.end, !dbg !5188

for.body:                                         ; preds = %for.cond
  %17 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5193
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %17, i32 0, i32 0, !dbg !5193
  %call10 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !5193
  %tobool11 = icmp ne i8 %call10, 0, !dbg !5193
  br i1 %tobool11, label %lor.lhs.false, label %if.then16, !dbg !5196

lor.lhs.false:                                    ; preds = %for.body
  %18 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5197
  %head12 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %18, i32 0, i32 0, !dbg !5197
  %call13 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head12, i8 zeroext 2), !dbg !5197
  %conv14 = zext i8 %call13 to i32, !dbg !5197
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !5197
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !5198

if.then16:                                        ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !5199

if.end17:                                         ; preds = %lor.lhs.false
  %19 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5200
  %head18 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %19, i32 0, i32 0, !dbg !5200
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head18, i8 zeroext 4), !dbg !5200
  br label %for.inc, !dbg !5201

for.inc:                                          ; preds = %if.end17, %if.then16
  %call19 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5191
  %20 = bitcast i8* %call19 to %struct.BMEdge*, !dbg !5191
  store %struct.BMEdge* %20, %struct.BMEdge** %eed, align 8, !dbg !5191
  br label %for.cond, !dbg !5191, !llvm.loop !5202

for.end:                                          ; preds = %for.cond
  br label %if.end38, !dbg !5204

if.else:                                          ; preds = %if.end
  %21 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5205
  %call20 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %21, i8 zeroext 2, i8* null), !dbg !5205
  %22 = bitcast i8* %call20 to %struct.BMEdge*, !dbg !5205
  store %struct.BMEdge* %22, %struct.BMEdge** %eed, align 8, !dbg !5205
  br label %for.cond21, !dbg !5205

for.cond21:                                       ; preds = %for.inc35, %if.else
  %23 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5208
  %tobool22 = icmp ne %struct.BMEdge* %23, null, !dbg !5205
  br i1 %tobool22, label %for.body23, label %for.end37, !dbg !5205

for.body23:                                       ; preds = %for.cond21
  %24 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5210
  %head24 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %24, i32 0, i32 0, !dbg !5210
  %call25 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head24, i8 zeroext 1), !dbg !5210
  %tobool26 = icmp ne i8 %call25, 0, !dbg !5210
  br i1 %tobool26, label %lor.lhs.false27, label %if.then32, !dbg !5213

lor.lhs.false27:                                  ; preds = %for.body23
  %25 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5214
  %head28 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %25, i32 0, i32 0, !dbg !5214
  %call29 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head28, i8 zeroext 2), !dbg !5214
  %conv30 = zext i8 %call29 to i32, !dbg !5214
  %tobool31 = icmp ne i32 %conv30, 0, !dbg !5214
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !5215

if.then32:                                        ; preds = %lor.lhs.false27, %for.body23
  br label %for.inc35, !dbg !5216

if.end33:                                         ; preds = %lor.lhs.false27
  %26 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5217
  %head34 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %26, i32 0, i32 0, !dbg !5217
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head34, i8 zeroext 4), !dbg !5217
  br label %for.inc35, !dbg !5218

for.inc35:                                        ; preds = %if.end33, %if.then32
  %call36 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5208
  %27 = bitcast i8* %call36 to %struct.BMEdge*, !dbg !5208
  store %struct.BMEdge* %27, %struct.BMEdge** %eed, align 8, !dbg !5208
  br label %for.cond21, !dbg !5208, !llvm.loop !5219

for.end37:                                        ; preds = %for.cond21
  br label %if.end38

if.end38:                                         ; preds = %for.end37, %for.end
  %28 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5221
  %29 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5222
  call void @ED_uvedit_live_unwrap(%struct.Scene* %28, %struct.Object* %29), !dbg !5223
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5224
  call void @EDBM_update_generic(%struct.BMEditMesh* %30, i8 zeroext 1, i8 zeroext 0), !dbg !5225
  ret i32 4, !dbg !5226
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_mark_sharp(%struct.wmOperatorType* %ot) #0 !dbg !5227 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5228, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5230, metadata !DIExpression()), !dbg !5231
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5232
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5233
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i64 0, i64 0), i8** %name, align 8, !dbg !5234
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5235
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5236
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0), i8** %idname, align 8, !dbg !5237
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5238
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5239
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.63, i64 0, i64 0), i8** %description, align 8, !dbg !5240
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5241
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5242
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_mark_sharp_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5243
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5244
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5245
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5246
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5247
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5248
  store i16 3, i16* %flag, align 8, !dbg !5249
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5250
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5251
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5251
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5250
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !5252
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5253
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5254
  call void @RNA_def_property_flag(%struct.PropertyRNA* %9, i32 268435456), !dbg !5255
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5256
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !5257
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !5257
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !5256
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.64, i64 0, i64 0)), !dbg !5258
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !5259
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5260
  call void @RNA_def_property_flag(%struct.PropertyRNA* %13, i32 268435456), !dbg !5261
  ret void, !dbg !5262
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_mark_sharp_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5263 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %clear = alloca i8, align 1
  %use_verts = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5264, metadata !DIExpression()), !dbg !5265
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5266, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5268, metadata !DIExpression()), !dbg !5269
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5270
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5271
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5269
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5272, metadata !DIExpression()), !dbg !5273
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5274
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !5275
  %2 = load i8*, i8** %data, align 8, !dbg !5275
  %3 = bitcast i8* %2 to %struct.Mesh*, !dbg !5276
  store %struct.Mesh* %3, %struct.Mesh** %me, align 8, !dbg !5273
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5277, metadata !DIExpression()), !dbg !5278
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5279
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %4), !dbg !5280
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5278
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !5281, metadata !DIExpression()), !dbg !5282
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5283
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !5284
  %6 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !5284
  store %struct.BMesh* %6, %struct.BMesh** %bm, align 8, !dbg !5282
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !5285, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5287, metadata !DIExpression()), !dbg !5288
  call void @llvm.dbg.declare(metadata i8* %clear, metadata !5289, metadata !DIExpression()), !dbg !5290
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5291
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !5292
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5292
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i64 0, i64 0)), !dbg !5293
  %conv = trunc i32 %call3 to i8, !dbg !5293
  store i8 %conv, i8* %clear, align 1, !dbg !5290
  call void @llvm.dbg.declare(metadata i8* %use_verts, metadata !5294, metadata !DIExpression()), !dbg !5295
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5296
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !5297
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !5297
  %call5 = call i32 @RNA_boolean_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0)), !dbg !5298
  %conv6 = trunc i32 %call5 to i8, !dbg !5298
  store i8 %conv6, i8* %use_verts, align 1, !dbg !5295
  %11 = load i8, i8* %clear, align 1, !dbg !5299
  %conv7 = zext i8 %11 to i32, !dbg !5299
  %cmp = icmp eq i32 %conv7, 0, !dbg !5301
  br i1 %cmp, label %if.then, label %if.end, !dbg !5302

if.then:                                          ; preds = %entry
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5303
  %drawflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 36, !dbg !5305
  %13 = load i32, i32* %drawflag, align 8, !dbg !5306
  %or = or i32 %13, 256, !dbg !5306
  store i32 %or, i32* %drawflag, align 8, !dbg !5306
  br label %if.end, !dbg !5307

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5308
  %call9 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %14, i8 zeroext 2, i8* null), !dbg !5308
  %15 = bitcast i8* %call9 to %struct.BMEdge*, !dbg !5308
  store %struct.BMEdge* %15, %struct.BMEdge** %eed, align 8, !dbg !5308
  br label %for.cond, !dbg !5308

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5310
  %tobool = icmp ne %struct.BMEdge* %16, null, !dbg !5308
  br i1 %tobool, label %for.body, label %for.end, !dbg !5308

for.body:                                         ; preds = %for.cond
  %17 = load i8, i8* %use_verts, align 1, !dbg !5312
  %tobool10 = icmp ne i8 %17, 0, !dbg !5312
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !5315

if.then11:                                        ; preds = %for.body
  %18 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5316
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %18, i32 0, i32 2, !dbg !5316
  %19 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !5316
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %19, i32 0, i32 0, !dbg !5316
  %call12 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !5316
  %conv13 = zext i8 %call12 to i32, !dbg !5316
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !5316
  br i1 %tobool14, label %if.end20, label %lor.lhs.false, !dbg !5319

lor.lhs.false:                                    ; preds = %if.then11
  %20 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5320
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %20, i32 0, i32 3, !dbg !5320
  %21 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !5320
  %head15 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 0, !dbg !5320
  %call16 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head15, i8 zeroext 1), !dbg !5320
  %conv17 = zext i8 %call16 to i32, !dbg !5320
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !5320
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !5321

if.then19:                                        ; preds = %lor.lhs.false
  br label %for.inc, !dbg !5322

if.end20:                                         ; preds = %lor.lhs.false, %if.then11
  br label %if.end26, !dbg !5324

if.else:                                          ; preds = %for.body
  %22 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5325
  %head21 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %22, i32 0, i32 0, !dbg !5325
  %call22 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head21, i8 zeroext 1), !dbg !5325
  %tobool23 = icmp ne i8 %call22, 0, !dbg !5325
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !5327

if.then24:                                        ; preds = %if.else
  br label %for.inc, !dbg !5328

if.end25:                                         ; preds = %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end20
  %23 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5330
  %head27 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %23, i32 0, i32 0, !dbg !5330
  %24 = load i8, i8* %clear, align 1, !dbg !5330
  %conv28 = zext i8 %24 to i32, !dbg !5330
  call void @_bm_elem_flag_set(%struct.BMHeader* %head27, i8 zeroext 8, i32 %conv28), !dbg !5330
  br label %for.inc, !dbg !5331

for.inc:                                          ; preds = %if.end26, %if.then24, %if.then19
  %call29 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5310
  %25 = bitcast i8* %call29 to %struct.BMEdge*, !dbg !5310
  store %struct.BMEdge* %25, %struct.BMEdge** %eed, align 8, !dbg !5310
  br label %for.cond, !dbg !5310, !llvm.loop !5332

for.end:                                          ; preds = %for.cond
  %26 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5334
  call void @EDBM_update_generic(%struct.BMEditMesh* %26, i8 zeroext 1, i8 zeroext 0), !dbg !5335
  ret i32 4, !dbg !5336
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_vert_connect(%struct.wmOperatorType* %ot) #0 !dbg !5337 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5338, metadata !DIExpression()), !dbg !5339
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5340
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5341
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i64 0, i64 0), i8** %name, align 8, !dbg !5342
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5343
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5344
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.66, i64 0, i64 0), i8** %idname, align 8, !dbg !5345
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5346
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5347
  store i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.67, i64 0, i64 0), i8** %description, align 8, !dbg !5348
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5349
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5350
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_vert_connect_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5351
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5352
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5353
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5354
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5355
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5356
  store i16 3, i16* %flag, align 8, !dbg !5357
  ret void, !dbg !5358
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_vert_connect_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5359 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %is_pair = alloca i8, align 1
  %len = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5360, metadata !DIExpression()), !dbg !5361
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5362, metadata !DIExpression()), !dbg !5363
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5364, metadata !DIExpression()), !dbg !5365
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5366
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5367
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5365
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5368, metadata !DIExpression()), !dbg !5369
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5370
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5371
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5369
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !5372, metadata !DIExpression()), !dbg !5373
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5374
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !5375
  %3 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !5375
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !5373
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !5376, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.declare(metadata i8* %is_pair, metadata !5378, metadata !DIExpression()), !dbg !5379
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5380
  %totvertsel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 4, !dbg !5381
  %5 = load i32, i32* %totvertsel, align 8, !dbg !5381
  %cmp = icmp eq i32 %5, 2, !dbg !5382
  %conv = zext i1 %cmp to i32, !dbg !5382
  %conv3 = trunc i32 %conv to i8, !dbg !5383
  store i8 %conv3, i8* %is_pair, align 1, !dbg !5379
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5384, metadata !DIExpression()), !dbg !5385
  %6 = load i8, i8* %is_pair, align 1, !dbg !5386
  %tobool = icmp ne i8 %6, 0, !dbg !5386
  br i1 %tobool, label %if.then, label %if.else, !dbg !5388

if.then:                                          ; preds = %entry
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5389
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5392
  %call4 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %7, %struct.BMOperator* %bmop, %struct.wmOperator* %8, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.417, i64 0, i64 0), i32 1, i32 2, i32 2), !dbg !5393
  %tobool5 = icmp ne i8 %call4, 0, !dbg !5393
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !5394

if.then6:                                         ; preds = %if.then
  store i32 2, i32* %retval, align 4, !dbg !5395
  br label %return, !dbg !5395

if.end:                                           ; preds = %if.then
  br label %if.end11, !dbg !5397

if.else:                                          ; preds = %entry
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5398
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5401
  %call7 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %9, %struct.BMOperator* %bmop, %struct.wmOperator* %10, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.418, i64 0, i64 0), i32 1, i32 2, i32 1), !dbg !5402
  %tobool8 = icmp ne i8 %call7, 0, !dbg !5402
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !5403

if.then9:                                         ; preds = %if.else
  store i32 2, i32* %retval, align 4, !dbg !5404
  br label %return, !dbg !5404

if.end10:                                         ; preds = %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end
  %11 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5406
  call void @BMO_op_exec(%struct.BMesh* %11, %struct.BMOperator* %bmop), !dbg !5407
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !5408
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !5409
  %call12 = call %struct.BMOpSlot* @BMO_slot_get(%struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.416, i64 0, i64 0)), !dbg !5410
  %len13 = getelementptr inbounds %struct.BMOpSlot, %struct.BMOpSlot* %call12, i32 0, i32 3, !dbg !5411
  %12 = load i32, i32* %len13, align 8, !dbg !5411
  store i32 %12, i32* %len, align 4, !dbg !5412
  %13 = load i32, i32* %len, align 4, !dbg !5413
  %tobool14 = icmp ne i32 %13, 0, !dbg !5413
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !5415

if.then15:                                        ; preds = %if.end11
  %14 = load i8, i8* %is_pair, align 1, !dbg !5416
  %tobool16 = icmp ne i8 %14, 0, !dbg !5416
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !5419

if.then17:                                        ; preds = %if.then15
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5420
  %bm18 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !5422
  %16 = load %struct.BMesh*, %struct.BMesh** %bm18, align 8, !dbg !5422
  %slots_out19 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !5423
  %arraydecay20 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out19, i64 0, i64 0, !dbg !5424
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %16, %struct.BMOpSlot* %arraydecay20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.416, i64 0, i64 0), i8 zeroext 2, i8 zeroext 1, i8 zeroext 1), !dbg !5425
  br label %if.end21, !dbg !5426

if.end21:                                         ; preds = %if.then17, %if.then15
  br label %if.end22, !dbg !5427

if.end22:                                         ; preds = %if.end21, %if.end11
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5428
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5430
  %call23 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %17, %struct.BMOperator* %bmop, %struct.wmOperator* %18, i8 zeroext 1), !dbg !5431
  %tobool24 = icmp ne i8 %call23, 0, !dbg !5431
  br i1 %tobool24, label %if.else26, label %if.then25, !dbg !5432

if.then25:                                        ; preds = %if.end22
  store i32 2, i32* %retval, align 4, !dbg !5433
  br label %return, !dbg !5433

if.else26:                                        ; preds = %if.end22
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5435
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %19), !dbg !5437
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5438
  call void @EDBM_update_generic(%struct.BMEditMesh* %20, i8 zeroext 1, i8 zeroext 1), !dbg !5439
  %21 = load i32, i32* %len, align 4, !dbg !5440
  %tobool27 = icmp ne i32 %21, 0, !dbg !5440
  %22 = zext i1 %tobool27 to i64, !dbg !5440
  %cond = select i1 %tobool27, i32 4, i32 2, !dbg !5440
  store i32 %cond, i32* %retval, align 4, !dbg !5441
  br label %return, !dbg !5441

return:                                           ; preds = %if.else26, %if.then25, %if.then9, %if.then6
  %23 = load i32, i32* %retval, align 4, !dbg !5442
  ret i32 %23, !dbg !5442
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_vert_connect_nonplanar(%struct.wmOperatorType* %ot) #0 !dbg !5443 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5444, metadata !DIExpression()), !dbg !5445
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5446, metadata !DIExpression()), !dbg !5447
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5448
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5449
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.68, i64 0, i64 0), i8** %name, align 8, !dbg !5450
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5451
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5452
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.69, i64 0, i64 0), i8** %idname, align 8, !dbg !5453
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5454
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5455
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.70, i64 0, i64 0), i8** %description, align 8, !dbg !5456
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5457
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5458
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_vert_connect_nonplaner_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5459
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5460
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5461
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5462
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5463
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5464
  store i16 3, i16* %flag, align 8, !dbg !5465
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5466
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5467
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5467
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5466
  %call = call %struct.PropertyRNA* @RNA_def_float_rotation(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0), i32 0, float* null, float 0.000000e+00, float 0x400921FB60000000, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.73, i64 0, i64 0), float 0.000000e+00, float 0x400921FB60000000), !dbg !5468
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5469
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5470
  call void @RNA_def_property_float_default(%struct.PropertyRNA* %9, float 0x3FB6571840000000), !dbg !5471
  ret void, !dbg !5472
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_vert_connect_nonplaner_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5473 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %angle_limit = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5474, metadata !DIExpression()), !dbg !5475
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5476, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5478, metadata !DIExpression()), !dbg !5479
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5480
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5481
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5479
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5482, metadata !DIExpression()), !dbg !5483
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5484
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5485
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5483
  call void @llvm.dbg.declare(metadata float* %angle_limit, metadata !5486, metadata !DIExpression()), !dbg !5487
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5488
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !5489
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5489
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)), !dbg !5490
  store float %call2, float* %angle_limit, align 4, !dbg !5487
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5491
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5493
  %6 = load float, float* %angle_limit, align 4, !dbg !5494
  %conv = fpext float %6 to double, !dbg !5494
  %call3 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, i8, i8*, ...) @EDBM_op_call_and_selectf(%struct.BMEditMesh* %4, %struct.wmOperator* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0), i8 zeroext 1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.419, i64 0, i64 0), i32 1, double %conv), !dbg !5495
  %tobool = icmp ne i8 %call3, 0, !dbg !5495
  br i1 %tobool, label %if.end, label %if.then, !dbg !5496

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5497
  br label %return, !dbg !5497

if.end:                                           ; preds = %entry
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5499
  call void @EDBM_update_generic(%struct.BMEditMesh* %7, i8 zeroext 1, i8 zeroext 1), !dbg !5500
  store i32 4, i32* %retval, align 4, !dbg !5501
  br label %return, !dbg !5501

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !5502
  ret i32 %8, !dbg !5502
}

declare dso_local %struct.PropertyRNA* @RNA_def_float_rotation(i8*, i8*, i32, float*, float, float, i8*, i8*, float, float) #2

declare dso_local void @RNA_def_property_float_default(%struct.PropertyRNA*, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_edge_split(%struct.wmOperatorType* %ot) #0 !dbg !5503 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5504, metadata !DIExpression()), !dbg !5505
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5506
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5507
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i64 0, i64 0), i8** %name, align 8, !dbg !5508
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5509
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5510
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75, i64 0, i64 0), i8** %idname, align 8, !dbg !5511
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5512
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5513
  store i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.76, i64 0, i64 0), i8** %description, align 8, !dbg !5514
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5515
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5516
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_edge_split_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5517
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5518
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5519
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5520
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5521
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5522
  store i16 3, i16* %flag, align 8, !dbg !5523
  ret void, !dbg !5524
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_edge_split_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5525 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5526, metadata !DIExpression()), !dbg !5527
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5528, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5530, metadata !DIExpression()), !dbg !5531
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5532
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5533
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5531
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5534, metadata !DIExpression()), !dbg !5535
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5536
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5537
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5535
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5538
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5540
  %call2 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, i8, i8*, ...) @EDBM_op_call_and_selectf(%struct.BMEditMesh* %2, %struct.wmOperator* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.416, i64 0, i64 0), i8 zeroext 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.420, i64 0, i64 0), i32 1), !dbg !5541
  %tobool = icmp ne i8 %call2, 0, !dbg !5541
  br i1 %tobool, label %if.end, label %if.then, !dbg !5542

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5543
  br label %return, !dbg !5543

if.end:                                           ; preds = %entry
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5545
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 12, !dbg !5547
  %5 = load i16, i16* %selectmode, align 4, !dbg !5547
  %conv = sext i16 %5 to i32, !dbg !5545
  %cmp = icmp eq i32 %conv, 4, !dbg !5548
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !5549

if.then4:                                         ; preds = %if.end
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5550
  call void @EDBM_select_flush(%struct.BMEditMesh* %6), !dbg !5552
  br label %if.end5, !dbg !5553

if.end5:                                          ; preds = %if.then4, %if.end
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5554
  call void @EDBM_update_generic(%struct.BMEditMesh* %7, i8 zeroext 1, i8 zeroext 1), !dbg !5555
  store i32 4, i32* %retval, align 4, !dbg !5556
  br label %return, !dbg !5556

return:                                           ; preds = %if.end5, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !5557
  ret i32 %8, !dbg !5557
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_duplicate(%struct.wmOperatorType* %ot) #0 !dbg !5558 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5559, metadata !DIExpression()), !dbg !5560
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5561
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5562
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i64 0, i64 0), i8** %name, align 8, !dbg !5563
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5564
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5565
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.78, i64 0, i64 0), i8** %description, align 8, !dbg !5566
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5567
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5568
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i64 0, i64 0), i8** %idname, align 8, !dbg !5569
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5570
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !5571
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @edbm_duplicate_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !5572
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5573
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !5574
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_duplicate_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5575
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5576
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !5577
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5578
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5579
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5580
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5580
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5579
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i64 0, i64 0), i32 1, i32 0, i32 2147483647, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i32 0, i32 2147483647), !dbg !5581
  ret void, !dbg !5582
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_duplicate_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !5583 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5589, metadata !DIExpression()), !dbg !5590
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5591, metadata !DIExpression()), !dbg !5592
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !5593, metadata !DIExpression()), !dbg !5594
  call void @WM_cursor_wait(i8 zeroext 1), !dbg !5595
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5596
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5597
  %call = call i32 @edbm_duplicate_exec(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !5598
  call void @WM_cursor_wait(i8 zeroext 0), !dbg !5599
  ret i32 4, !dbg !5600
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_duplicate_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5601 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %_bm_prev_selected = alloca %struct.ListBase, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5602, metadata !DIExpression()), !dbg !5603
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5604, metadata !DIExpression()), !dbg !5605
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5606, metadata !DIExpression()), !dbg !5607
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5608
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5609
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !5607
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5610, metadata !DIExpression()), !dbg !5611
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5612
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5613
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5611
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !5614, metadata !DIExpression()), !dbg !5615
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5616
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !5617
  %3 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !5617
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !5615
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !5618, metadata !DIExpression()), !dbg !5619
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5620
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5621
  %call3 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %4, %struct.BMOperator* %bmop, %struct.wmOperator* %5, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.421, i64 0, i64 0), i32 1, i32 1), !dbg !5622
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5623
  call void @BMO_op_exec(%struct.BMesh* %6, %struct.BMOperator* %bmop), !dbg !5624
  call void @llvm.dbg.declare(metadata %struct.ListBase* %_bm_prev_selected, metadata !5625, metadata !DIExpression()), !dbg !5627
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5627
  %selected = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 32, !dbg !5627
  %8 = bitcast %struct.ListBase* %_bm_prev_selected to i8*, !dbg !5627
  %9 = bitcast %struct.ListBase* %selected to i8*, !dbg !5627
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false), !dbg !5627
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5627
  %selected4 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 32, !dbg !5627
  call void @BLI_listbase_clear(%struct.ListBase* %selected4), !dbg !5627
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5628
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %11, i8 zeroext 1), !dbg !5629
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5630
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !5631
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !5632
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %12, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.422, i64 0, i64 0), i8 zeroext 11, i8 zeroext 1, i8 zeroext 1), !dbg !5633
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5634
  %selected5 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %13, i32 0, i32 32, !dbg !5634
  %14 = bitcast %struct.ListBase* %selected5 to i8*, !dbg !5634
  %15 = bitcast %struct.ListBase* %_bm_prev_selected to i8*, !dbg !5634
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false), !dbg !5634
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5635
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5637
  %call6 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %16, %struct.BMOperator* %bmop, %struct.wmOperator* %17, i8 zeroext 1), !dbg !5638
  %tobool = icmp ne i8 %call6, 0, !dbg !5638
  br i1 %tobool, label %if.end, label %if.then, !dbg !5639

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5640
  br label %return, !dbg !5640

if.end:                                           ; preds = %entry
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5642
  call void @EDBM_update_generic(%struct.BMEditMesh* %18, i8 zeroext 1, i8 zeroext 1), !dbg !5643
  store i32 4, i32* %retval, align 4, !dbg !5644
  br label %return, !dbg !5644

return:                                           ; preds = %if.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !5645
  ret i32 %19, !dbg !5645
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_flip_normals(%struct.wmOperatorType* %ot) #0 !dbg !5646 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5647, metadata !DIExpression()), !dbg !5648
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5649
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5650
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i64 0, i64 0), i8** %name, align 8, !dbg !5651
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5652
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5653
  store i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.83, i64 0, i64 0), i8** %description, align 8, !dbg !5654
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5655
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5656
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.84, i64 0, i64 0), i8** %idname, align 8, !dbg !5657
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5658
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5659
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_flip_normals_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5660
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5661
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5662
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5663
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5664
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5665
  store i16 3, i16* %flag, align 8, !dbg !5666
  ret void, !dbg !5667
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_flip_normals_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5668 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5669, metadata !DIExpression()), !dbg !5670
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5671, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5673, metadata !DIExpression()), !dbg !5674
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5675
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5676
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5674
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5677, metadata !DIExpression()), !dbg !5678
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5679
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5680
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5678
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5681
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5683
  %call2 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %2, %struct.wmOperator* %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.423, i64 0, i64 0), i32 1), !dbg !5684
  %tobool = icmp ne i8 %call2, 0, !dbg !5684
  br i1 %tobool, label %if.end, label %if.then, !dbg !5685

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5686
  br label %return, !dbg !5686

if.end:                                           ; preds = %entry
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5687
  call void @EDBM_update_generic(%struct.BMEditMesh* %4, i8 zeroext 1, i8 zeroext 0), !dbg !5688
  store i32 4, i32* %retval, align 4, !dbg !5689
  br label %return, !dbg !5689

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !5690
  ret i32 %5, !dbg !5690
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_edge_rotate(%struct.wmOperatorType* %ot) #0 !dbg !5691 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5692, metadata !DIExpression()), !dbg !5693
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5694
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5695
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.85, i64 0, i64 0), i8** %name, align 8, !dbg !5696
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5697
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5698
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.86, i64 0, i64 0), i8** %description, align 8, !dbg !5699
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5700
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5701
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.87, i64 0, i64 0), i8** %idname, align 8, !dbg !5702
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5703
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5704
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_edge_rotate_selected_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5705
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5706
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5707
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5708
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5709
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5710
  store i16 3, i16* %flag, align 8, !dbg !5711
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5712
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5713
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5713
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5712
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !5714
  ret void, !dbg !5715
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_edge_rotate_selected_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5716 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %use_ccw = alloca i8, align 1
  %tot = alloca i32, align 4
  %fa = alloca %struct.BMFace*, align 8
  %fb = alloca %struct.BMFace*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5717, metadata !DIExpression()), !dbg !5718
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5719, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5721, metadata !DIExpression()), !dbg !5722
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5723
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5724
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5722
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5725, metadata !DIExpression()), !dbg !5726
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5727
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5728
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5726
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !5729, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !5731, metadata !DIExpression()), !dbg !5732
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5733, metadata !DIExpression()), !dbg !5734
  call void @llvm.dbg.declare(metadata i8* %use_ccw, metadata !5735, metadata !DIExpression()), !dbg !5736
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5737
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !5738
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5738
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0)), !dbg !5739
  %conv = trunc i32 %call2 to i8, !dbg !5739
  store i8 %conv, i8* %use_ccw, align 1, !dbg !5736
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !5740, metadata !DIExpression()), !dbg !5741
  store i32 0, i32* %tot, align 4, !dbg !5741
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5742
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !5744
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5744
  %totedgesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 5, !dbg !5745
  %6 = load i32, i32* %totedgesel, align 4, !dbg !5745
  %cmp = icmp eq i32 %6, 0, !dbg !5746
  br i1 %cmp, label %if.then, label %if.end, !dbg !5747

if.then:                                          ; preds = %entry
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5748
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 8, !dbg !5750
  %8 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !5750
  call void @BKE_report(%struct.ReportList* %8, i32 32, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.424, i64 0, i64 0)), !dbg !5751
  store i32 2, i32* %retval, align 4, !dbg !5752
  br label %return, !dbg !5752

if.end:                                           ; preds = %entry
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5753
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !5753
  %10 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !5753
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %10, i8 zeroext 2, i8* null), !dbg !5753
  %11 = bitcast i8* %call5 to %struct.BMEdge*, !dbg !5753
  store %struct.BMEdge* %11, %struct.BMEdge** %eed, align 8, !dbg !5753
  br label %for.cond, !dbg !5753

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5755
  %tobool = icmp ne %struct.BMEdge* %12, null, !dbg !5753
  br i1 %tobool, label %for.body, label %for.end, !dbg !5753

for.body:                                         ; preds = %for.cond
  %13 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5757
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %13, i32 0, i32 0, !dbg !5757
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !5757
  %14 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5759
  %head6 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %14, i32 0, i32 0, !dbg !5759
  %call7 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head6, i8 zeroext 1), !dbg !5759
  %tobool8 = icmp ne i8 %call7, 0, !dbg !5759
  br i1 %tobool8, label %if.then9, label %if.end25, !dbg !5761

if.then9:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BMFace** %fa, metadata !5762, metadata !DIExpression()), !dbg !5764
  call void @llvm.dbg.declare(metadata %struct.BMFace** %fb, metadata !5765, metadata !DIExpression()), !dbg !5766
  %15 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5767
  %call10 = call zeroext i8 @BM_edge_face_pair(%struct.BMEdge* %15, %struct.BMFace** %fa, %struct.BMFace** %fb), !dbg !5769
  %tobool11 = icmp ne i8 %call10, 0, !dbg !5769
  br i1 %tobool11, label %if.then12, label %if.end24, !dbg !5770

if.then12:                                        ; preds = %if.then9
  %16 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !5771
  %head13 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %16, i32 0, i32 0, !dbg !5771
  %call14 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head13, i8 zeroext 1), !dbg !5771
  %conv15 = zext i8 %call14 to i32, !dbg !5771
  %17 = load %struct.BMFace*, %struct.BMFace** %fb, align 8, !dbg !5774
  %head16 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %17, i32 0, i32 0, !dbg !5774
  %call17 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head16, i8 zeroext 1), !dbg !5774
  %conv18 = zext i8 %call17 to i32, !dbg !5774
  %cmp19 = icmp eq i32 %conv15, %conv18, !dbg !5775
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !5776

if.then21:                                        ; preds = %if.then12
  %18 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !5777
  %head22 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %18, i32 0, i32 0, !dbg !5777
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head22, i8 zeroext 16), !dbg !5777
  %19 = load i32, i32* %tot, align 4, !dbg !5779
  %inc = add nsw i32 %19, 1, !dbg !5779
  store i32 %inc, i32* %tot, align 4, !dbg !5779
  br label %if.end23, !dbg !5780

if.end23:                                         ; preds = %if.then21, %if.then12
  br label %if.end24, !dbg !5781

if.end24:                                         ; preds = %if.end23, %if.then9
  br label %if.end25, !dbg !5782

if.end25:                                         ; preds = %if.end24, %for.body
  br label %for.inc, !dbg !5783

for.inc:                                          ; preds = %if.end25
  %call26 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5755
  %20 = bitcast i8* %call26 to %struct.BMEdge*, !dbg !5755
  store %struct.BMEdge* %20, %struct.BMEdge** %eed, align 8, !dbg !5755
  br label %for.cond, !dbg !5755, !llvm.loop !5784

for.end:                                          ; preds = %for.cond
  %21 = load i32, i32* %tot, align 4, !dbg !5786
  %cmp27 = icmp eq i32 %21, 0, !dbg !5788
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !5789

if.then29:                                        ; preds = %for.end
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5790
  %reports30 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 8, !dbg !5792
  %23 = load %struct.ReportList*, %struct.ReportList** %reports30, align 8, !dbg !5792
  call void @BKE_report(%struct.ReportList* %23, i32 32, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.425, i64 0, i64 0)), !dbg !5793
  store i32 2, i32* %retval, align 4, !dbg !5794
  br label %return, !dbg !5794

if.end31:                                         ; preds = %for.end
  %24 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5795
  %25 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5796
  %26 = load i8, i8* %use_ccw, align 1, !dbg !5797
  %conv32 = zext i8 %26 to i32, !dbg !5797
  %call33 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %24, %struct.BMOperator* %bmop, %struct.wmOperator* %25, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.426, i64 0, i64 0), i32 16, i32 %conv32), !dbg !5798
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5799
  %bm34 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 0, !dbg !5800
  %28 = load %struct.BMesh*, %struct.BMesh** %bm34, align 8, !dbg !5800
  %slots_in = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 0, !dbg !5801
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_in, i64 0, i64 0, !dbg !5802
  call void @BMO_slot_buffer_hflag_disable(%struct.BMesh* %28, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.427, i64 0, i64 0), i8 zeroext 2, i8 zeroext 1, i8 zeroext 1), !dbg !5803
  %29 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5804
  %bm35 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %29, i32 0, i32 0, !dbg !5805
  %30 = load %struct.BMesh*, %struct.BMesh** %bm35, align 8, !dbg !5805
  call void @BMO_op_exec(%struct.BMesh* %30, %struct.BMOperator* %bmop), !dbg !5806
  %31 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5807
  %bm36 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %31, i32 0, i32 0, !dbg !5808
  %32 = load %struct.BMesh*, %struct.BMesh** %bm36, align 8, !dbg !5808
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !5809
  %arraydecay37 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !5810
  call void @BMO_slot_buffer_hflag_disable(%struct.BMesh* %32, %struct.BMOpSlot* %arraydecay37, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.416, i64 0, i64 0), i8 zeroext 2, i8 zeroext 2, i8 zeroext 1), !dbg !5811
  %33 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5812
  %bm38 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %33, i32 0, i32 0, !dbg !5813
  %34 = load %struct.BMesh*, %struct.BMesh** %bm38, align 8, !dbg !5813
  %slots_out39 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !5814
  %arraydecay40 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out39, i64 0, i64 0, !dbg !5815
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %34, %struct.BMOpSlot* %arraydecay40, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.416, i64 0, i64 0), i8 zeroext 2, i8 zeroext 1, i8 zeroext 1), !dbg !5816
  %35 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5817
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %35), !dbg !5818
  %36 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5819
  %37 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5821
  %call41 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %36, %struct.BMOperator* %bmop, %struct.wmOperator* %37, i8 zeroext 1), !dbg !5822
  %tobool42 = icmp ne i8 %call41, 0, !dbg !5822
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !5823

if.then43:                                        ; preds = %if.end31
  store i32 2, i32* %retval, align 4, !dbg !5824
  br label %return, !dbg !5824

if.end44:                                         ; preds = %if.end31
  %38 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5826
  call void @EDBM_update_generic(%struct.BMEditMesh* %38, i8 zeroext 1, i8 zeroext 1), !dbg !5827
  store i32 4, i32* %retval, align 4, !dbg !5828
  br label %return, !dbg !5828

return:                                           ; preds = %if.end44, %if.then43, %if.then29, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !5829
  ret i32 %39, !dbg !5829
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_hide(%struct.wmOperatorType* %ot) #0 !dbg !5830 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5831, metadata !DIExpression()), !dbg !5832
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5833
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5834
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.90, i64 0, i64 0), i8** %name, align 8, !dbg !5835
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5836
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5837
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.91, i64 0, i64 0), i8** %idname, align 8, !dbg !5838
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5839
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5840
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.92, i64 0, i64 0), i8** %description, align 8, !dbg !5841
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5842
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5843
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_hide_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5844
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5845
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5846
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5847
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5848
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5849
  store i16 3, i16* %flag, align 8, !dbg !5850
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5851
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5852
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5852
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5851
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.93, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.95, i64 0, i64 0)), !dbg !5853
  ret void, !dbg !5854
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_hide_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5855 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5856, metadata !DIExpression()), !dbg !5857
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5858, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5860, metadata !DIExpression()), !dbg !5861
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5862
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5863
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5861
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5864, metadata !DIExpression()), !dbg !5865
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5866
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5867
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5865
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5868
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5869
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !5870
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5870
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.93, i64 0, i64 0)), !dbg !5871
  %conv = trunc i32 %call2 to i8, !dbg !5871
  call void @EDBM_mesh_hide(%struct.BMEditMesh* %2, i8 zeroext %conv), !dbg !5872
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5873
  call void @EDBM_update_generic(%struct.BMEditMesh* %5, i8 zeroext 1, i8 zeroext 0), !dbg !5874
  ret i32 4, !dbg !5875
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_reveal(%struct.wmOperatorType* %ot) #0 !dbg !5876 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5877, metadata !DIExpression()), !dbg !5878
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5879
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5880
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i64 0, i64 0), i8** %name, align 8, !dbg !5881
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5882
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !5883
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i64 0, i64 0), i8** %idname, align 8, !dbg !5884
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5885
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !5886
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.98, i64 0, i64 0), i8** %description, align 8, !dbg !5887
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5888
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5889
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_reveal_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5890
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5891
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5892
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5893
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5894
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5895
  store i16 3, i16* %flag, align 8, !dbg !5896
  ret void, !dbg !5897
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_reveal_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !5898 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5899, metadata !DIExpression()), !dbg !5900
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !5901, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5903, metadata !DIExpression()), !dbg !5904
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5905
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5906
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5904
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5907, metadata !DIExpression()), !dbg !5908
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5909
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5910
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5908
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5911
  call void @EDBM_mesh_reveal(%struct.BMEditMesh* %2), !dbg !5912
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5913
  call void @EDBM_update_generic(%struct.BMEditMesh* %3, i8 zeroext 1, i8 zeroext 0), !dbg !5914
  ret i32 4, !dbg !5915
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_normals_make_consistent(%struct.wmOperatorType* %ot) #0 !dbg !5916 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5917, metadata !DIExpression()), !dbg !5918
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5919
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5920
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.99, i64 0, i64 0), i8** %name, align 8, !dbg !5921
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5922
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5923
  store i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.100, i64 0, i64 0), i8** %description, align 8, !dbg !5924
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5925
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5926
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.101, i64 0, i64 0), i8** %idname, align 8, !dbg !5927
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5928
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5929
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_normals_make_consistent_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5930
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5931
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5932
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5933
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5934
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5935
  store i16 3, i16* %flag, align 8, !dbg !5936
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5937
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5938
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5938
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5937
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !5939
  ret void, !dbg !5940
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_normals_make_consistent_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5941 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5942, metadata !DIExpression()), !dbg !5943
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5944, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !5946, metadata !DIExpression()), !dbg !5947
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5948
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !5949
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !5947
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5950, metadata !DIExpression()), !dbg !5951
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !5952
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !5953
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !5951
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5954
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5956
  %call2 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %2, %struct.wmOperator* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.428, i64 0, i64 0), i32 1), !dbg !5957
  %tobool = icmp ne i8 %call2, 0, !dbg !5957
  br i1 %tobool, label %if.end, label %if.then, !dbg !5958

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5959
  br label %return, !dbg !5959

if.end:                                           ; preds = %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5960
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !5962
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5962
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i64 0, i64 0)), !dbg !5963
  %tobool4 = icmp ne i32 %call3, 0, !dbg !5963
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !5964

if.then5:                                         ; preds = %if.end
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5965
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5966
  %call6 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %6, %struct.wmOperator* %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.423, i64 0, i64 0), i32 1), !dbg !5967
  br label %if.end7, !dbg !5967

if.end7:                                          ; preds = %if.then5, %if.end
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5968
  call void @EDBM_update_generic(%struct.BMEditMesh* %8, i8 zeroext 1, i8 zeroext 0), !dbg !5969
  store i32 4, i32* %retval, align 4, !dbg !5970
  br label %return, !dbg !5970

return:                                           ; preds = %if.end7, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !5971
  ret i32 %9, !dbg !5971
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_vertices_smooth(%struct.wmOperatorType* %ot) #0 !dbg !5972 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5973, metadata !DIExpression()), !dbg !5974
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5975
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !5976
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.104, i64 0, i64 0), i8** %name, align 8, !dbg !5977
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5978
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !5979
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.105, i64 0, i64 0), i8** %description, align 8, !dbg !5980
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5981
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !5982
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.106, i64 0, i64 0), i8** %idname, align 8, !dbg !5983
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5984
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !5985
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_do_smooth_vertex_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5986
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5987
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !5988
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !5989
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5990
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !5991
  store i16 3, i16* %flag, align 8, !dbg !5992
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5993
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !5994
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5994
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !5993
  %call = call %struct.PropertyRNA* @RNA_def_float(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i64 0, i64 0), float 5.000000e-01, float -1.000000e+01, float 1.000000e+01, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.109, i64 0, i64 0), float 0.000000e+00, float 1.000000e+00), !dbg !5995
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5996
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !5997
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !5997
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !5996
  %call2 = call %struct.PropertyRNA* @RNA_def_int(i8* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i64 0, i64 0), i32 1, i32 1, i32 1000, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.112, i64 0, i64 0), i32 1, i32 100), !dbg !5998
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5999
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !6000
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !6000
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !5999
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.115, i64 0, i64 0)), !dbg !6001
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6002
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !6003
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !6003
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !6002
  %call6 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.118, i64 0, i64 0)), !dbg !6004
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6005
  %srna7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 11, !dbg !6006
  %19 = load %struct.StructRNA*, %struct.StructRNA** %srna7, align 8, !dbg !6006
  %20 = bitcast %struct.StructRNA* %19 to i8*, !dbg !6005
  %call8 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.121, i64 0, i64 0)), !dbg !6007
  ret void, !dbg !6008
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_do_smooth_vertex_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6009 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %mirrx = alloca i8, align 1
  %mirry = alloca i8, align 1
  %mirrz = alloca i8, align 1
  %i = alloca i32, align 4
  %repeat = alloca i32, align 4
  %clip_dist = alloca float, align 4
  %fac = alloca float, align 4
  %use_topology = alloca i8, align 1
  %xaxis = alloca i8, align 1
  %yaxis = alloca i8, align 1
  %zaxis = alloca i8, align 1
  %mmd = alloca %struct.MirrorModifierData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6010, metadata !DIExpression()), !dbg !6011
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6012, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6014, metadata !DIExpression()), !dbg !6015
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6016
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !6017
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !6015
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6018, metadata !DIExpression()), !dbg !6019
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6020
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !6021
  %2 = load i8*, i8** %data, align 8, !dbg !6021
  %3 = bitcast i8* %2 to %struct.Mesh*, !dbg !6020
  store %struct.Mesh* %3, %struct.Mesh** %me, align 8, !dbg !6019
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6022, metadata !DIExpression()), !dbg !6023
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6024
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %4), !dbg !6025
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !6023
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !6026, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.declare(metadata i8* %mirrx, metadata !6029, metadata !DIExpression()), !dbg !6030
  store i8 0, i8* %mirrx, align 1, !dbg !6030
  call void @llvm.dbg.declare(metadata i8* %mirry, metadata !6031, metadata !DIExpression()), !dbg !6032
  store i8 0, i8* %mirry, align 1, !dbg !6032
  call void @llvm.dbg.declare(metadata i8* %mirrz, metadata !6033, metadata !DIExpression()), !dbg !6034
  store i8 0, i8* %mirrz, align 1, !dbg !6034
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6035, metadata !DIExpression()), !dbg !6036
  call void @llvm.dbg.declare(metadata i32* %repeat, metadata !6037, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.declare(metadata float* %clip_dist, metadata !6039, metadata !DIExpression()), !dbg !6040
  store float 0.000000e+00, float* %clip_dist, align 4, !dbg !6040
  call void @llvm.dbg.declare(metadata float* %fac, metadata !6041, metadata !DIExpression()), !dbg !6042
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6043
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !6044
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6044
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i64 0, i64 0)), !dbg !6045
  store float %call2, float* %fac, align 4, !dbg !6042
  call void @llvm.dbg.declare(metadata i8* %use_topology, metadata !6046, metadata !DIExpression()), !dbg !6047
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6048
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 46, !dbg !6049
  %8 = load i8, i8* %editflag, align 1, !dbg !6049
  %conv = zext i8 %8 to i32, !dbg !6048
  %and = and i32 %conv, 16, !dbg !6050
  %cmp = icmp ne i32 %and, 0, !dbg !6051
  %conv3 = zext i1 %cmp to i32, !dbg !6051
  %conv4 = trunc i32 %conv3 to i8, !dbg !6052
  store i8 %conv4, i8* %use_topology, align 1, !dbg !6047
  call void @llvm.dbg.declare(metadata i8* %xaxis, metadata !6053, metadata !DIExpression()), !dbg !6054
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6055
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !6056
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !6056
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i64 0, i64 0)), !dbg !6057
  %conv7 = trunc i32 %call6 to i8, !dbg !6057
  store i8 %conv7, i8* %xaxis, align 1, !dbg !6054
  call void @llvm.dbg.declare(metadata i8* %yaxis, metadata !6058, metadata !DIExpression()), !dbg !6059
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6060
  %ptr8 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 7, !dbg !6061
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr8, align 8, !dbg !6061
  %call9 = call i32 @RNA_boolean_get(%struct.PointerRNA* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i64 0, i64 0)), !dbg !6062
  %conv10 = trunc i32 %call9 to i8, !dbg !6062
  store i8 %conv10, i8* %yaxis, align 1, !dbg !6059
  call void @llvm.dbg.declare(metadata i8* %zaxis, metadata !6063, metadata !DIExpression()), !dbg !6064
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6065
  %ptr11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 7, !dbg !6066
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr11, align 8, !dbg !6066
  %call12 = call i32 @RNA_boolean_get(%struct.PointerRNA* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0)), !dbg !6067
  %conv13 = trunc i32 %call12 to i8, !dbg !6067
  store i8 %conv13, i8* %zaxis, align 1, !dbg !6064
  %15 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6068
  %data14 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 19, !dbg !6070
  %16 = load i8*, i8** %data14, align 8, !dbg !6070
  %17 = bitcast i8* %16 to %struct.Mesh*, !dbg !6071
  %editflag15 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 46, !dbg !6072
  %18 = load i8, i8* %editflag15, align 1, !dbg !6072
  %conv16 = zext i8 %18 to i32, !dbg !6073
  %and17 = and i32 %conv16, 1, !dbg !6074
  %tobool = icmp ne i32 %and17, 0, !dbg !6074
  br i1 %tobool, label %if.then, label %if.end, !dbg !6075

if.then:                                          ; preds = %entry
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6076
  %20 = load i8, i8* %use_topology, align 1, !dbg !6078
  call void @EDBM_verts_mirror_cache_begin(%struct.BMEditMesh* %19, i32 0, i8 zeroext 0, i8 zeroext 1, i8 zeroext %20), !dbg !6079
  br label %if.end, !dbg !6080

if.end:                                           ; preds = %if.then, %entry
  %21 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6081
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 26, !dbg !6083
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !6084
  %22 = load i8*, i8** %first, align 8, !dbg !6084
  %23 = bitcast i8* %22 to %struct.ModifierData*, !dbg !6081
  store %struct.ModifierData* %23, %struct.ModifierData** %md, align 8, !dbg !6085
  br label %for.cond, !dbg !6086

for.cond:                                         ; preds = %for.inc, %if.end
  %24 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6087
  %tobool18 = icmp ne %struct.ModifierData* %24, null, !dbg !6089
  br i1 %tobool18, label %for.body, label %for.end, !dbg !6089

for.body:                                         ; preds = %for.cond
  %25 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6090
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %25, i32 0, i32 2, !dbg !6093
  %26 = load i32, i32* %type, align 8, !dbg !6093
  %cmp19 = icmp eq i32 %26, 5, !dbg !6094
  br i1 %cmp19, label %land.lhs.true, label %if.end47, !dbg !6095

land.lhs.true:                                    ; preds = %for.body
  %27 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6096
  %mode = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %27, i32 0, i32 3, !dbg !6097
  %28 = load i32, i32* %mode, align 4, !dbg !6097
  %and21 = and i32 %28, 1, !dbg !6098
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6098
  br i1 %tobool22, label %if.then23, label %if.end47, !dbg !6099

if.then23:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.MirrorModifierData** %mmd, metadata !6100, metadata !DIExpression()), !dbg !6102
  %29 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6103
  %30 = bitcast %struct.ModifierData* %29 to %struct.MirrorModifierData*, !dbg !6104
  store %struct.MirrorModifierData* %30, %struct.MirrorModifierData** %mmd, align 8, !dbg !6102
  %31 = load %struct.MirrorModifierData*, %struct.MirrorModifierData** %mmd, align 8, !dbg !6105
  %flag = getelementptr inbounds %struct.MirrorModifierData, %struct.MirrorModifierData* %31, i32 0, i32 2, !dbg !6107
  %32 = load i16, i16* %flag, align 2, !dbg !6107
  %conv24 = sext i16 %32 to i32, !dbg !6105
  %and25 = and i32 %conv24, 1, !dbg !6108
  %tobool26 = icmp ne i32 %and25, 0, !dbg !6108
  br i1 %tobool26, label %if.then27, label %if.end46, !dbg !6109

if.then27:                                        ; preds = %if.then23
  %33 = load %struct.MirrorModifierData*, %struct.MirrorModifierData** %mmd, align 8, !dbg !6110
  %flag28 = getelementptr inbounds %struct.MirrorModifierData, %struct.MirrorModifierData* %33, i32 0, i32 2, !dbg !6113
  %34 = load i16, i16* %flag28, align 2, !dbg !6113
  %conv29 = sext i16 %34 to i32, !dbg !6110
  %and30 = and i32 %conv29, 8, !dbg !6114
  %tobool31 = icmp ne i32 %and30, 0, !dbg !6114
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !6115

if.then32:                                        ; preds = %if.then27
  store i8 1, i8* %mirrx, align 1, !dbg !6116
  br label %if.end33, !dbg !6117

if.end33:                                         ; preds = %if.then32, %if.then27
  %35 = load %struct.MirrorModifierData*, %struct.MirrorModifierData** %mmd, align 8, !dbg !6118
  %flag34 = getelementptr inbounds %struct.MirrorModifierData, %struct.MirrorModifierData* %35, i32 0, i32 2, !dbg !6120
  %36 = load i16, i16* %flag34, align 2, !dbg !6120
  %conv35 = sext i16 %36 to i32, !dbg !6118
  %and36 = and i32 %conv35, 16, !dbg !6121
  %tobool37 = icmp ne i32 %and36, 0, !dbg !6121
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !6122

if.then38:                                        ; preds = %if.end33
  store i8 1, i8* %mirry, align 1, !dbg !6123
  br label %if.end39, !dbg !6124

if.end39:                                         ; preds = %if.then38, %if.end33
  %37 = load %struct.MirrorModifierData*, %struct.MirrorModifierData** %mmd, align 8, !dbg !6125
  %flag40 = getelementptr inbounds %struct.MirrorModifierData, %struct.MirrorModifierData* %37, i32 0, i32 2, !dbg !6127
  %38 = load i16, i16* %flag40, align 2, !dbg !6127
  %conv41 = sext i16 %38 to i32, !dbg !6125
  %and42 = and i32 %conv41, 32, !dbg !6128
  %tobool43 = icmp ne i32 %and42, 0, !dbg !6128
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !6129

if.then44:                                        ; preds = %if.end39
  store i8 1, i8* %mirrz, align 1, !dbg !6130
  br label %if.end45, !dbg !6131

if.end45:                                         ; preds = %if.then44, %if.end39
  %39 = load %struct.MirrorModifierData*, %struct.MirrorModifierData** %mmd, align 8, !dbg !6132
  %tolerance = getelementptr inbounds %struct.MirrorModifierData, %struct.MirrorModifierData* %39, i32 0, i32 3, !dbg !6133
  %40 = load float, float* %tolerance, align 4, !dbg !6133
  store float %40, float* %clip_dist, align 4, !dbg !6134
  br label %if.end46, !dbg !6135

if.end46:                                         ; preds = %if.end45, %if.then23
  br label %if.end47, !dbg !6136

if.end47:                                         ; preds = %if.end46, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6137

for.inc:                                          ; preds = %if.end47
  %41 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6138
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %41, i32 0, i32 0, !dbg !6139
  %42 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !6139
  store %struct.ModifierData* %42, %struct.ModifierData** %md, align 8, !dbg !6140
  br label %for.cond, !dbg !6141, !llvm.loop !6142

for.end:                                          ; preds = %for.cond
  %43 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6144
  %ptr48 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %43, i32 0, i32 7, !dbg !6145
  %44 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr48, align 8, !dbg !6145
  %call49 = call i32 @RNA_int_get(%struct.PointerRNA* %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i64 0, i64 0)), !dbg !6146
  store i32 %call49, i32* %repeat, align 4, !dbg !6147
  %45 = load i32, i32* %repeat, align 4, !dbg !6148
  %tobool50 = icmp ne i32 %45, 0, !dbg !6148
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !6150

if.then51:                                        ; preds = %for.end
  store i32 1, i32* %repeat, align 4, !dbg !6151
  br label %if.end52, !dbg !6152

if.end52:                                         ; preds = %if.then51, %for.end
  store i32 0, i32* %i, align 4, !dbg !6153
  br label %for.cond53, !dbg !6155

for.cond53:                                       ; preds = %for.inc69, %if.end52
  %46 = load i32, i32* %i, align 4, !dbg !6156
  %47 = load i32, i32* %repeat, align 4, !dbg !6158
  %cmp54 = icmp slt i32 %46, %47, !dbg !6159
  br i1 %cmp54, label %for.body56, label %for.end70, !dbg !6160

for.body56:                                       ; preds = %for.cond53
  %48 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6161
  %49 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6164
  %50 = load float, float* %fac, align 4, !dbg !6165
  %conv57 = fpext float %50 to double, !dbg !6165
  %51 = load i8, i8* %mirrx, align 1, !dbg !6166
  %conv58 = zext i8 %51 to i32, !dbg !6166
  %52 = load i8, i8* %mirry, align 1, !dbg !6167
  %conv59 = zext i8 %52 to i32, !dbg !6167
  %53 = load i8, i8* %mirrz, align 1, !dbg !6168
  %conv60 = zext i8 %53 to i32, !dbg !6168
  %54 = load float, float* %clip_dist, align 4, !dbg !6169
  %conv61 = fpext float %54 to double, !dbg !6169
  %55 = load i8, i8* %xaxis, align 1, !dbg !6170
  %conv62 = zext i8 %55 to i32, !dbg !6170
  %56 = load i8, i8* %yaxis, align 1, !dbg !6171
  %conv63 = zext i8 %56 to i32, !dbg !6171
  %57 = load i8, i8* %zaxis, align 1, !dbg !6172
  %conv64 = zext i8 %57 to i32, !dbg !6172
  %call65 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %48, %struct.wmOperator* %49, i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str.429, i64 0, i64 0), i32 1, double %conv57, i32 %conv58, i32 %conv59, i32 %conv60, double %conv61, i32 %conv62, i32 %conv63, i32 %conv64), !dbg !6173
  %tobool66 = icmp ne i8 %call65, 0, !dbg !6173
  br i1 %tobool66, label %if.end68, label %if.then67, !dbg !6174

if.then67:                                        ; preds = %for.body56
  store i32 2, i32* %retval, align 4, !dbg !6175
  br label %return, !dbg !6175

if.end68:                                         ; preds = %for.body56
  br label %for.inc69, !dbg !6177

for.inc69:                                        ; preds = %if.end68
  %58 = load i32, i32* %i, align 4, !dbg !6178
  %inc = add nsw i32 %58, 1, !dbg !6178
  store i32 %inc, i32* %i, align 4, !dbg !6178
  br label %for.cond53, !dbg !6179, !llvm.loop !6180

for.end70:                                        ; preds = %for.cond53
  %59 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6182
  %data71 = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 19, !dbg !6184
  %60 = load i8*, i8** %data71, align 8, !dbg !6184
  %61 = bitcast i8* %60 to %struct.Mesh*, !dbg !6185
  %editflag72 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %61, i32 0, i32 46, !dbg !6186
  %62 = load i8, i8* %editflag72, align 1, !dbg !6186
  %conv73 = zext i8 %62 to i32, !dbg !6187
  %and74 = and i32 %conv73, 1, !dbg !6188
  %tobool75 = icmp ne i32 %and74, 0, !dbg !6188
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !6189

if.then76:                                        ; preds = %for.end70
  %63 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6190
  call void @EDBM_verts_mirror_apply(%struct.BMEditMesh* %63, i32 1, i32 0), !dbg !6192
  %64 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6193
  call void @EDBM_verts_mirror_cache_end(%struct.BMEditMesh* %64), !dbg !6194
  br label %if.end77, !dbg !6195

if.end77:                                         ; preds = %if.then76, %for.end70
  %65 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6196
  call void @EDBM_update_generic(%struct.BMEditMesh* %65, i8 zeroext 1, i8 zeroext 0), !dbg !6197
  store i32 4, i32* %retval, align 4, !dbg !6198
  br label %return, !dbg !6198

return:                                           ; preds = %if.end77, %if.then67
  %66 = load i32, i32* %retval, align 4, !dbg !6199
  ret i32 %66, !dbg !6199
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_vertices_smooth_laplacian(%struct.wmOperatorType* %ot) #0 !dbg !6200 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6201, metadata !DIExpression()), !dbg !6202
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6203
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6204
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.122, i64 0, i64 0), i8** %name, align 8, !dbg !6205
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6206
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6207
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.123, i64 0, i64 0), i8** %description, align 8, !dbg !6208
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6209
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6210
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.124, i64 0, i64 0), i8** %idname, align 8, !dbg !6211
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6212
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6213
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_do_smooth_laplacian_vertex_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6214
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6215
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6216
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !6217
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6218
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6219
  store i16 3, i16* %flag, align 8, !dbg !6220
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6221
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6222
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6222
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6221
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i64 0, i64 0), i32 1, i32 1, i32 200, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 200), !dbg !6223
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6224
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !6225
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !6225
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !6224
  %call2 = call %struct.PropertyRNA* @RNA_def_float(i8* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.126, i64 0, i64 0), float 0x3F0A36E2E0000000, float 0x3E7AD7F2A0000000, float 1.000000e+03, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), float 0x3E7AD7F2A0000000, float 1.000000e+03), !dbg !6226
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6227
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !6228
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !6228
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !6227
  %call4 = call %struct.PropertyRNA* @RNA_def_float(i8* %14, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i64 0, i64 0), float 0x3F0A36E2E0000000, float 0x3E7AD7F2A0000000, float 1.000000e+03, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), float 0x3E7AD7F2A0000000, float 1.000000e+03), !dbg !6229
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6230
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !6231
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !6231
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !6230
  %call6 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.132, i64 0, i64 0)), !dbg !6232
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6233
  %srna7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 11, !dbg !6234
  %19 = load %struct.StructRNA*, %struct.StructRNA** %srna7, align 8, !dbg !6234
  %20 = bitcast %struct.StructRNA* %19 to i8*, !dbg !6233
  %call8 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.135, i64 0, i64 0)), !dbg !6235
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6236
  %srna9 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 11, !dbg !6237
  %22 = load %struct.StructRNA*, %struct.StructRNA** %srna9, align 8, !dbg !6237
  %23 = bitcast %struct.StructRNA* %22 to i8*, !dbg !6236
  %call10 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.138, i64 0, i64 0)), !dbg !6238
  %24 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6239
  %srna11 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %24, i32 0, i32 11, !dbg !6240
  %25 = load %struct.StructRNA*, %struct.StructRNA** %srna11, align 8, !dbg !6240
  %26 = bitcast %struct.StructRNA* %25 to i8*, !dbg !6239
  %call12 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %26, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.139, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.141, i64 0, i64 0)), !dbg !6241
  ret void, !dbg !6242
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_do_smooth_laplacian_vertex_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6243 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %me = alloca %struct.Mesh*, align 8
  %use_topology = alloca i8, align 1
  %usex = alloca i8, align 1
  %usey = alloca i8, align 1
  %usez = alloca i8, align 1
  %preserve_volume = alloca i8, align 1
  %i = alloca i32, align 4
  %repeat = alloca i32, align 4
  %lambda_factor = alloca float, align 4
  %lambda_border = alloca float, align 4
  %fiter = alloca %struct.BMIter, align 8
  %f = alloca %struct.BMFace*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6244, metadata !DIExpression()), !dbg !6245
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6246, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6248, metadata !DIExpression()), !dbg !6249
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6250
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !6251
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !6249
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6252, metadata !DIExpression()), !dbg !6253
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6254
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !6255
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !6253
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !6256, metadata !DIExpression()), !dbg !6257
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6258
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !6259
  %3 = load i8*, i8** %data, align 8, !dbg !6259
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !6258
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !6257
  call void @llvm.dbg.declare(metadata i8* %use_topology, metadata !6260, metadata !DIExpression()), !dbg !6261
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !6262
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 46, !dbg !6263
  %6 = load i8, i8* %editflag, align 1, !dbg !6263
  %conv = zext i8 %6 to i32, !dbg !6262
  %and = and i32 %conv, 16, !dbg !6264
  %cmp = icmp ne i32 %and, 0, !dbg !6265
  %conv2 = zext i1 %cmp to i32, !dbg !6265
  %conv3 = trunc i32 %conv2 to i8, !dbg !6266
  store i8 %conv3, i8* %use_topology, align 1, !dbg !6261
  call void @llvm.dbg.declare(metadata i8* %usex, metadata !6267, metadata !DIExpression()), !dbg !6268
  store i8 1, i8* %usex, align 1, !dbg !6268
  call void @llvm.dbg.declare(metadata i8* %usey, metadata !6269, metadata !DIExpression()), !dbg !6270
  store i8 1, i8* %usey, align 1, !dbg !6270
  call void @llvm.dbg.declare(metadata i8* %usez, metadata !6271, metadata !DIExpression()), !dbg !6272
  store i8 1, i8* %usez, align 1, !dbg !6272
  call void @llvm.dbg.declare(metadata i8* %preserve_volume, metadata !6273, metadata !DIExpression()), !dbg !6274
  store i8 1, i8* %preserve_volume, align 1, !dbg !6274
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6275, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.declare(metadata i32* %repeat, metadata !6277, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.declare(metadata float* %lambda_factor, metadata !6279, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.declare(metadata float* %lambda_border, metadata !6281, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.declare(metadata %struct.BMIter* %fiter, metadata !6283, metadata !DIExpression()), !dbg !6284
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !6285, metadata !DIExpression()), !dbg !6286
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6287
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !6287
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6287
  %call4 = call i8* @BM_iter_new(%struct.BMIter* %fiter, %struct.BMesh* %8, i8 zeroext 3, i8* null), !dbg !6287
  %9 = bitcast i8* %call4 to %struct.BMFace*, !dbg !6287
  store %struct.BMFace* %9, %struct.BMFace** %f, align 8, !dbg !6287
  br label %for.cond, !dbg !6287

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6289
  %tobool = icmp ne %struct.BMFace* %10, null, !dbg !6287
  br i1 %tobool, label %for.body, label %for.end, !dbg !6287

for.body:                                         ; preds = %for.cond
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6291
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %11, i32 0, i32 0, !dbg !6291
  %call5 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !6291
  %tobool6 = icmp ne i8 %call5, 0, !dbg !6291
  br i1 %tobool6, label %if.then, label %if.end10, !dbg !6294

if.then:                                          ; preds = %for.body
  %12 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6295
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %12, i32 0, i32 3, !dbg !6298
  %13 = load i32, i32* %len, align 8, !dbg !6298
  %cmp7 = icmp sgt i32 %13, 4, !dbg !6299
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !6300

if.then9:                                         ; preds = %if.then
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6301
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 8, !dbg !6303
  %15 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !6303
  call void @BKE_report(%struct.ReportList* %15, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.430, i64 0, i64 0)), !dbg !6304
  store i32 2, i32* %retval, align 4, !dbg !6305
  br label %return, !dbg !6305

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !6306

if.end10:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !6307

for.inc:                                          ; preds = %if.end10
  %call11 = call i8* @BM_iter_step(%struct.BMIter* %fiter), !dbg !6289
  %16 = bitcast i8* %call11 to %struct.BMFace*, !dbg !6289
  store %struct.BMFace* %16, %struct.BMFace** %f, align 8, !dbg !6289
  br label %for.cond, !dbg !6289, !llvm.loop !6308

for.end:                                          ; preds = %for.cond
  %17 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6310
  %data12 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 19, !dbg !6312
  %18 = load i8*, i8** %data12, align 8, !dbg !6312
  %19 = bitcast i8* %18 to %struct.Mesh*, !dbg !6313
  %editflag13 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 46, !dbg !6314
  %20 = load i8, i8* %editflag13, align 1, !dbg !6314
  %conv14 = zext i8 %20 to i32, !dbg !6315
  %and15 = and i32 %conv14, 1, !dbg !6316
  %tobool16 = icmp ne i32 %and15, 0, !dbg !6316
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !6317

if.then17:                                        ; preds = %for.end
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6318
  %22 = load i8, i8* %use_topology, align 1, !dbg !6320
  call void @EDBM_verts_mirror_cache_begin(%struct.BMEditMesh* %21, i32 0, i8 zeroext 0, i8 zeroext 1, i8 zeroext %22), !dbg !6321
  br label %if.end18, !dbg !6322

if.end18:                                         ; preds = %if.then17, %for.end
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6323
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %23, i32 0, i32 7, !dbg !6324
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6324
  %call19 = call i32 @RNA_int_get(%struct.PointerRNA* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i64 0, i64 0)), !dbg !6325
  store i32 %call19, i32* %repeat, align 4, !dbg !6326
  %25 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6327
  %ptr20 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %25, i32 0, i32 7, !dbg !6328
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr20, align 8, !dbg !6328
  %call21 = call float @RNA_float_get(%struct.PointerRNA* %26, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.126, i64 0, i64 0)), !dbg !6329
  store float %call21, float* %lambda_factor, align 4, !dbg !6330
  %27 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6331
  %ptr22 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %27, i32 0, i32 7, !dbg !6332
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr22, align 8, !dbg !6332
  %call23 = call float @RNA_float_get(%struct.PointerRNA* %28, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i64 0, i64 0)), !dbg !6333
  store float %call23, float* %lambda_border, align 4, !dbg !6334
  %29 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6335
  %ptr24 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %29, i32 0, i32 7, !dbg !6336
  %30 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr24, align 8, !dbg !6336
  %call25 = call i32 @RNA_boolean_get(%struct.PointerRNA* %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i64 0, i64 0)), !dbg !6337
  %conv26 = trunc i32 %call25 to i8, !dbg !6337
  store i8 %conv26, i8* %usex, align 1, !dbg !6338
  %31 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6339
  %ptr27 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %31, i32 0, i32 7, !dbg !6340
  %32 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr27, align 8, !dbg !6340
  %call28 = call i32 @RNA_boolean_get(%struct.PointerRNA* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i64 0, i64 0)), !dbg !6341
  %conv29 = trunc i32 %call28 to i8, !dbg !6341
  store i8 %conv29, i8* %usey, align 1, !dbg !6342
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6343
  %ptr30 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %33, i32 0, i32 7, !dbg !6344
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr30, align 8, !dbg !6344
  %call31 = call i32 @RNA_boolean_get(%struct.PointerRNA* %34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i64 0, i64 0)), !dbg !6345
  %conv32 = trunc i32 %call31 to i8, !dbg !6345
  store i8 %conv32, i8* %usez, align 1, !dbg !6346
  %35 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6347
  %ptr33 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %35, i32 0, i32 7, !dbg !6348
  %36 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr33, align 8, !dbg !6348
  %call34 = call i32 @RNA_boolean_get(%struct.PointerRNA* %36, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.139, i64 0, i64 0)), !dbg !6349
  %conv35 = trunc i32 %call34 to i8, !dbg !6349
  store i8 %conv35, i8* %preserve_volume, align 1, !dbg !6350
  %37 = load i32, i32* %repeat, align 4, !dbg !6351
  %tobool36 = icmp ne i32 %37, 0, !dbg !6351
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !6353

if.then37:                                        ; preds = %if.end18
  store i32 1, i32* %repeat, align 4, !dbg !6354
  br label %if.end38, !dbg !6355

if.end38:                                         ; preds = %if.then37, %if.end18
  store i32 0, i32* %i, align 4, !dbg !6356
  br label %for.cond39, !dbg !6358

for.cond39:                                       ; preds = %for.inc53, %if.end38
  %38 = load i32, i32* %i, align 4, !dbg !6359
  %39 = load i32, i32* %repeat, align 4, !dbg !6361
  %cmp40 = icmp slt i32 %38, %39, !dbg !6362
  br i1 %cmp40, label %for.body42, label %for.end54, !dbg !6363

for.body42:                                       ; preds = %for.cond39
  %40 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6364
  %41 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6367
  %42 = load float, float* %lambda_factor, align 4, !dbg !6368
  %conv43 = fpext float %42 to double, !dbg !6368
  %43 = load float, float* %lambda_border, align 4, !dbg !6369
  %conv44 = fpext float %43 to double, !dbg !6369
  %44 = load i8, i8* %usex, align 1, !dbg !6370
  %conv45 = zext i8 %44 to i32, !dbg !6370
  %45 = load i8, i8* %usey, align 1, !dbg !6371
  %conv46 = zext i8 %45 to i32, !dbg !6371
  %46 = load i8, i8* %usez, align 1, !dbg !6372
  %conv47 = zext i8 %46 to i32, !dbg !6372
  %47 = load i8, i8* %preserve_volume, align 1, !dbg !6373
  %conv48 = zext i8 %47 to i32, !dbg !6373
  %call49 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %40, %struct.wmOperator* %41, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.431, i64 0, i64 0), i32 1, double %conv43, double %conv44, i32 %conv45, i32 %conv46, i32 %conv47, i32 %conv48), !dbg !6374
  %tobool50 = icmp ne i8 %call49, 0, !dbg !6374
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !6375

if.then51:                                        ; preds = %for.body42
  store i32 2, i32* %retval, align 4, !dbg !6376
  br label %return, !dbg !6376

if.end52:                                         ; preds = %for.body42
  br label %for.inc53, !dbg !6378

for.inc53:                                        ; preds = %if.end52
  %48 = load i32, i32* %i, align 4, !dbg !6379
  %inc = add nsw i32 %48, 1, !dbg !6379
  store i32 %inc, i32* %i, align 4, !dbg !6379
  br label %for.cond39, !dbg !6380, !llvm.loop !6381

for.end54:                                        ; preds = %for.cond39
  %49 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6383
  %data55 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 19, !dbg !6385
  %50 = load i8*, i8** %data55, align 8, !dbg !6385
  %51 = bitcast i8* %50 to %struct.Mesh*, !dbg !6386
  %editflag56 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %51, i32 0, i32 46, !dbg !6387
  %52 = load i8, i8* %editflag56, align 1, !dbg !6387
  %conv57 = zext i8 %52 to i32, !dbg !6388
  %and58 = and i32 %conv57, 1, !dbg !6389
  %tobool59 = icmp ne i32 %and58, 0, !dbg !6389
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !6390

if.then60:                                        ; preds = %for.end54
  %53 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6391
  call void @EDBM_verts_mirror_apply(%struct.BMEditMesh* %53, i32 1, i32 0), !dbg !6393
  %54 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6394
  call void @EDBM_verts_mirror_cache_end(%struct.BMEditMesh* %54), !dbg !6395
  br label %if.end61, !dbg !6396

if.end61:                                         ; preds = %if.then60, %for.end54
  %55 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6397
  call void @EDBM_update_generic(%struct.BMEditMesh* %55, i8 zeroext 1, i8 zeroext 0), !dbg !6398
  store i32 4, i32* %retval, align 4, !dbg !6399
  br label %return, !dbg !6399

return:                                           ; preds = %if.end61, %if.then51, %if.then9
  %56 = load i32, i32* %retval, align 4, !dbg !6400
  ret i32 %56, !dbg !6400
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_faces_shade_smooth(%struct.wmOperatorType* %ot) #0 !dbg !6401 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6402, metadata !DIExpression()), !dbg !6403
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6404
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6405
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.142, i64 0, i64 0), i8** %name, align 8, !dbg !6406
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6407
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6408
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.143, i64 0, i64 0), i8** %description, align 8, !dbg !6409
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6410
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6411
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.144, i64 0, i64 0), i8** %idname, align 8, !dbg !6412
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6413
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6414
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_faces_shade_smooth_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6415
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6416
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6417
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !6418
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6419
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6420
  store i16 3, i16* %flag, align 8, !dbg !6421
  ret void, !dbg !6422
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_faces_shade_smooth_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6423 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6424, metadata !DIExpression()), !dbg !6425
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6426, metadata !DIExpression()), !dbg !6427
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6428, metadata !DIExpression()), !dbg !6429
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6430
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !6431
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !6429
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6432, metadata !DIExpression()), !dbg !6433
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6434
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !6435
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !6433
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6436
  call void @mesh_set_smooth_faces(%struct.BMEditMesh* %2, i16 signext 1), !dbg !6437
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6438
  call void @EDBM_update_generic(%struct.BMEditMesh* %3, i8 zeroext 0, i8 zeroext 0), !dbg !6439
  ret i32 4, !dbg !6440
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_faces_shade_flat(%struct.wmOperatorType* %ot) #0 !dbg !6441 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6442, metadata !DIExpression()), !dbg !6443
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6444
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6445
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.145, i64 0, i64 0), i8** %name, align 8, !dbg !6446
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6447
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6448
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.146, i64 0, i64 0), i8** %description, align 8, !dbg !6449
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6450
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6451
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.147, i64 0, i64 0), i8** %idname, align 8, !dbg !6452
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6453
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6454
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_faces_shade_flat_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6455
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6456
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6457
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !6458
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6459
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6460
  store i16 3, i16* %flag, align 8, !dbg !6461
  ret void, !dbg !6462
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_faces_shade_flat_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !6463 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6464, metadata !DIExpression()), !dbg !6465
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !6466, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6468, metadata !DIExpression()), !dbg !6469
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6470
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !6471
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !6469
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6472, metadata !DIExpression()), !dbg !6473
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6474
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !6475
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !6473
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6476
  call void @mesh_set_smooth_faces(%struct.BMEditMesh* %2, i16 signext 0), !dbg !6477
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6478
  call void @EDBM_update_generic(%struct.BMEditMesh* %3, i8 zeroext 0, i8 zeroext 0), !dbg !6479
  ret i32 4, !dbg !6480
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_uvs_rotate(%struct.wmOperatorType* %ot) #0 !dbg !6481 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6482, metadata !DIExpression()), !dbg !6483
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6484
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6485
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.148, i64 0, i64 0), i8** %name, align 8, !dbg !6486
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6487
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6488
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.149, i64 0, i64 0), i8** %idname, align 8, !dbg !6489
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6490
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6491
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.150, i64 0, i64 0), i8** %description, align 8, !dbg !6492
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6493
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6494
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_rotate_uvs_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6495
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6496
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6497
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !6498
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6499
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6500
  store i16 3, i16* %flag, align 8, !dbg !6501
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6502
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6503
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6503
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6502
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !6504
  ret void, !dbg !6505
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_rotate_uvs_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6506 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %use_ccw = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6507, metadata !DIExpression()), !dbg !6508
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6509, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6511, metadata !DIExpression()), !dbg !6512
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6513
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !6514
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !6512
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6515, metadata !DIExpression()), !dbg !6516
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6517
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !6518
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !6516
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !6519, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.declare(metadata i8* %use_ccw, metadata !6521, metadata !DIExpression()), !dbg !6522
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6523
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !6524
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6524
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0)), !dbg !6525
  %conv = trunc i32 %call2 to i8, !dbg !6525
  store i8 %conv, i8* %use_ccw, align 1, !dbg !6522
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6526
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6527
  %6 = load i8, i8* %use_ccw, align 1, !dbg !6528
  %conv3 = zext i8 %6 to i32, !dbg !6528
  %call4 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %4, %struct.BMOperator* %bmop, %struct.wmOperator* %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.432, i64 0, i64 0), i32 1, i32 %conv3), !dbg !6529
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6530
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !6531
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6531
  call void @BMO_op_exec(%struct.BMesh* %8, %struct.BMOperator* %bmop), !dbg !6532
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6533
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6535
  %call5 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %9, %struct.BMOperator* %bmop, %struct.wmOperator* %10, i8 zeroext 1), !dbg !6536
  %tobool = icmp ne i8 %call5, 0, !dbg !6536
  br i1 %tobool, label %if.end, label %if.then, !dbg !6537

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !6538
  br label %return, !dbg !6538

if.end:                                           ; preds = %entry
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6540
  call void @EDBM_update_generic(%struct.BMEditMesh* %11, i8 zeroext 0, i8 zeroext 0), !dbg !6541
  store i32 4, i32* %retval, align 4, !dbg !6542
  br label %return, !dbg !6542

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !6543
  ret i32 %12, !dbg !6543
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_uvs_reverse(%struct.wmOperatorType* %ot) #0 !dbg !6544 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6545, metadata !DIExpression()), !dbg !6546
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6547
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6548
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.151, i64 0, i64 0), i8** %name, align 8, !dbg !6549
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6550
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6551
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.152, i64 0, i64 0), i8** %idname, align 8, !dbg !6552
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6553
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6554
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.153, i64 0, i64 0), i8** %description, align 8, !dbg !6555
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6556
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6557
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_reverse_uvs_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6558
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6559
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6560
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !6561
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6562
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6563
  store i16 3, i16* %flag, align 8, !dbg !6564
  ret void, !dbg !6565
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_reverse_uvs_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6566 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6567, metadata !DIExpression()), !dbg !6568
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6569, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6571, metadata !DIExpression()), !dbg !6572
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6573
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !6574
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !6572
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6575, metadata !DIExpression()), !dbg !6576
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6577
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !6578
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !6576
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !6579, metadata !DIExpression()), !dbg !6580
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6581
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6582
  %call2 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %2, %struct.BMOperator* %bmop, %struct.wmOperator* %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.433, i64 0, i64 0), i32 1), !dbg !6583
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6584
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !6585
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6585
  call void @BMO_op_exec(%struct.BMesh* %5, %struct.BMOperator* %bmop), !dbg !6586
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6587
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6589
  %call3 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %6, %struct.BMOperator* %bmop, %struct.wmOperator* %7, i8 zeroext 1), !dbg !6590
  %tobool = icmp ne i8 %call3, 0, !dbg !6590
  br i1 %tobool, label %if.end, label %if.then, !dbg !6591

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !6592
  br label %return, !dbg !6592

if.end:                                           ; preds = %entry
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6594
  call void @EDBM_update_generic(%struct.BMEditMesh* %8, i8 zeroext 0, i8 zeroext 0), !dbg !6595
  store i32 4, i32* %retval, align 4, !dbg !6596
  br label %return, !dbg !6596

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !6597
  ret i32 %9, !dbg !6597
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_colors_rotate(%struct.wmOperatorType* %ot) #0 !dbg !6598 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6599, metadata !DIExpression()), !dbg !6600
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6601
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6602
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.154, i64 0, i64 0), i8** %name, align 8, !dbg !6603
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6604
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6605
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.155, i64 0, i64 0), i8** %idname, align 8, !dbg !6606
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6607
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6608
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.156, i64 0, i64 0), i8** %description, align 8, !dbg !6609
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6610
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6611
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_rotate_colors_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6612
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6613
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6614
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !6615
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6616
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6617
  store i16 3, i16* %flag, align 8, !dbg !6618
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6619
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !6620
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6620
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !6619
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !6621
  ret void, !dbg !6622
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_rotate_colors_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6623 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %use_ccw = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6624, metadata !DIExpression()), !dbg !6625
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6626, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6628, metadata !DIExpression()), !dbg !6629
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6630
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !6631
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !6629
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6632, metadata !DIExpression()), !dbg !6633
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6634
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !6635
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !6633
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !6636, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.declare(metadata i8* %use_ccw, metadata !6638, metadata !DIExpression()), !dbg !6639
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6640
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !6641
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6641
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0)), !dbg !6642
  %conv = trunc i32 %call2 to i8, !dbg !6642
  store i8 %conv, i8* %use_ccw, align 1, !dbg !6639
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6643
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6644
  %6 = load i8, i8* %use_ccw, align 1, !dbg !6645
  %conv3 = zext i8 %6 to i32, !dbg !6645
  %call4 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %4, %struct.BMOperator* %bmop, %struct.wmOperator* %5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.434, i64 0, i64 0), i32 1, i32 %conv3), !dbg !6646
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6647
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !6648
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6648
  call void @BMO_op_exec(%struct.BMesh* %8, %struct.BMOperator* %bmop), !dbg !6649
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6650
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6652
  %call5 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %9, %struct.BMOperator* %bmop, %struct.wmOperator* %10, i8 zeroext 1), !dbg !6653
  %tobool = icmp ne i8 %call5, 0, !dbg !6653
  br i1 %tobool, label %if.end, label %if.then, !dbg !6654

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !6655
  br label %return, !dbg !6655

if.end:                                           ; preds = %entry
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6657
  call void @EDBM_update_generic(%struct.BMEditMesh* %11, i8 zeroext 0, i8 zeroext 0), !dbg !6658
  store i32 4, i32* %retval, align 4, !dbg !6659
  br label %return, !dbg !6659

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !6660
  ret i32 %12, !dbg !6660
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_colors_reverse(%struct.wmOperatorType* %ot) #0 !dbg !6661 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6662, metadata !DIExpression()), !dbg !6663
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6664
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6665
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.157, i64 0, i64 0), i8** %name, align 8, !dbg !6666
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6667
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !6668
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.158, i64 0, i64 0), i8** %idname, align 8, !dbg !6669
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6670
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !6671
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.159, i64 0, i64 0), i8** %description, align 8, !dbg !6672
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6673
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6674
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_reverse_colors_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6675
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6676
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !6677
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !6678
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6679
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !6680
  store i16 3, i16* %flag, align 8, !dbg !6681
  ret void, !dbg !6682
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_reverse_colors_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6683 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6684, metadata !DIExpression()), !dbg !6685
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6686, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !6688, metadata !DIExpression()), !dbg !6689
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6690
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !6691
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !6689
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6692, metadata !DIExpression()), !dbg !6693
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6694
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !6695
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !6693
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !6696, metadata !DIExpression()), !dbg !6697
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6698
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6699
  %call2 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %2, %struct.BMOperator* %bmop, %struct.wmOperator* %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.435, i64 0, i64 0), i32 1), !dbg !6700
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6701
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !6702
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6702
  call void @BMO_op_exec(%struct.BMesh* %5, %struct.BMOperator* %bmop), !dbg !6703
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6704
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6706
  %call3 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %6, %struct.BMOperator* %bmop, %struct.wmOperator* %7, i8 zeroext 1), !dbg !6707
  %tobool = icmp ne i8 %call3, 0, !dbg !6707
  br i1 %tobool, label %if.end, label %if.then, !dbg !6708

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !6709
  br label %return, !dbg !6709

if.end:                                           ; preds = %entry
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6711
  call void @EDBM_update_generic(%struct.BMEditMesh* %8, i8 zeroext 0, i8 zeroext 0), !dbg !6712
  store i32 4, i32* %retval, align 4, !dbg !6713
  br label %return, !dbg !6713

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !6714
  ret i32 %9, !dbg !6714
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_merge(%struct.wmOperatorType* %ot) #0 !dbg !6715 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6716, metadata !DIExpression()), !dbg !6717
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6718
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !6719
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.160, i64 0, i64 0), i8** %name, align 8, !dbg !6720
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6721
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !6722
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.161, i64 0, i64 0), i8** %description, align 8, !dbg !6723
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6724
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !6725
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.162, i64 0, i64 0), i8** %idname, align 8, !dbg !6726
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6727
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !6728
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_merge_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6729
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6730
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !6731
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !6732
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6733
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !6734
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !6735
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6736
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !6737
  store i16 3, i16* %flag, align 8, !dbg !6738
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6739
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !6740
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6740
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !6739
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @merge_type_items, i64 0, i64 0), i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.163, i64 0, i64 0)), !dbg !6741
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6742
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !6743
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !6744
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6745
  %prop1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 13, !dbg !6746
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop1, align 8, !dbg !6746
  call void @RNA_def_enum_funcs(%struct.PropertyRNA* %12, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* @merge_type_itemf), !dbg !6747
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6748
  %srna2 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 11, !dbg !6749
  %14 = load %struct.StructRNA*, %struct.StructRNA** %srna2, align 8, !dbg !6749
  %15 = bitcast %struct.StructRNA* %14 to i8*, !dbg !6748
  %call3 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.164, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.165, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.166, i64 0, i64 0)), !dbg !6750
  ret void, !dbg !6751
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_merge_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6752 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %type = alloca i32, align 4
  %uvs = alloca i8, align 1
  %ok = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6753, metadata !DIExpression()), !dbg !6754
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6755, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6757, metadata !DIExpression()), !dbg !6758
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6759
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !6760
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !6758
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !6761, metadata !DIExpression()), !dbg !6855
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6856
  %call1 = call %struct.View3D* @CTX_wm_view3d(%struct.bContext* %1), !dbg !6857
  store %struct.View3D* %call1, %struct.View3D** %v3d, align 8, !dbg !6855
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6858, metadata !DIExpression()), !dbg !6859
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6860
  %call2 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %2), !dbg !6861
  store %struct.Object* %call2, %struct.Object** %obedit, align 8, !dbg !6859
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6862, metadata !DIExpression()), !dbg !6863
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6864
  %call3 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %3), !dbg !6865
  store %struct.BMEditMesh* %call3, %struct.BMEditMesh** %em, align 8, !dbg !6863
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6866, metadata !DIExpression()), !dbg !6867
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6868
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !6869
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6869
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0)), !dbg !6870
  store i32 %call4, i32* %type, align 4, !dbg !6867
  call void @llvm.dbg.declare(metadata i8* %uvs, metadata !6871, metadata !DIExpression()), !dbg !6872
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6873
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !6874
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !6874
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.164, i64 0, i64 0)), !dbg !6875
  %conv = trunc i32 %call6 to i8, !dbg !6875
  store i8 %conv, i8* %uvs, align 1, !dbg !6872
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !6876, metadata !DIExpression()), !dbg !6877
  store i8 0, i8* %ok, align 1, !dbg !6877
  %8 = load i32, i32* %type, align 4, !dbg !6878
  switch i32 %8, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb8
    i32 1, label %sw.bb10
    i32 6, label %sw.bb12
    i32 5, label %sw.bb14
  ], !dbg !6879

sw.bb:                                            ; preds = %entry
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6880
  %10 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6882
  %11 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !6883
  %12 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6884
  %13 = load i8, i8* %uvs, align 1, !dbg !6885
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6886
  %call7 = call zeroext i8 @merge_target(%struct.BMEditMesh* %9, %struct.Scene* %10, %struct.View3D* %11, %struct.Object* %12, i8 zeroext 0, i8 zeroext %13, %struct.wmOperator* %14), !dbg !6887
  store i8 %call7, i8* %ok, align 1, !dbg !6888
  br label %sw.epilog, !dbg !6889

sw.bb8:                                           ; preds = %entry
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6890
  %16 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6891
  %17 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !6892
  %18 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6893
  %19 = load i8, i8* %uvs, align 1, !dbg !6894
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6895
  %call9 = call zeroext i8 @merge_target(%struct.BMEditMesh* %15, %struct.Scene* %16, %struct.View3D* %17, %struct.Object* %18, i8 zeroext 1, i8 zeroext %19, %struct.wmOperator* %20), !dbg !6896
  store i8 %call9, i8* %ok, align 1, !dbg !6897
  br label %sw.epilog, !dbg !6898

sw.bb10:                                          ; preds = %entry
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6899
  %22 = load i8, i8* %uvs, align 1, !dbg !6900
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6901
  %call11 = call zeroext i8 @merge_firstlast(%struct.BMEditMesh* %21, i8 zeroext 0, i8 zeroext %22, %struct.wmOperator* %23), !dbg !6902
  store i8 %call11, i8* %ok, align 1, !dbg !6903
  br label %sw.epilog, !dbg !6904

sw.bb12:                                          ; preds = %entry
  %24 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6905
  %25 = load i8, i8* %uvs, align 1, !dbg !6906
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6907
  %call13 = call zeroext i8 @merge_firstlast(%struct.BMEditMesh* %24, i8 zeroext 1, i8 zeroext %25, %struct.wmOperator* %26), !dbg !6908
  store i8 %call13, i8* %ok, align 1, !dbg !6909
  br label %sw.epilog, !dbg !6910

sw.bb14:                                          ; preds = %entry
  store i8 1, i8* %ok, align 1, !dbg !6911
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6912
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6914
  %call15 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %27, %struct.wmOperator* %28, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.413, i64 0, i64 0), i32 1), !dbg !6915
  %tobool = icmp ne i8 %call15, 0, !dbg !6915
  br i1 %tobool, label %if.end, label %if.then, !dbg !6916

if.then:                                          ; preds = %sw.bb14
  store i8 0, i8* %ok, align 1, !dbg !6917
  br label %if.end, !dbg !6918

if.end:                                           ; preds = %if.then, %sw.bb14
  br label %sw.epilog, !dbg !6919

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !6920

sw.epilog:                                        ; preds = %sw.default, %if.end, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb
  %29 = load i8, i8* %ok, align 1, !dbg !6921
  %tobool16 = icmp ne i8 %29, 0, !dbg !6921
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !6923

if.then17:                                        ; preds = %sw.epilog
  store i32 2, i32* %retval, align 4, !dbg !6924
  br label %return, !dbg !6924

if.end18:                                         ; preds = %sw.epilog
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6926
  call void @EDBM_update_generic(%struct.BMEditMesh* %30, i8 zeroext 1, i8 zeroext 1), !dbg !6927
  store i32 4, i32* %retval, align 4, !dbg !6928
  br label %return, !dbg !6928

return:                                           ; preds = %if.end18, %if.then17
  %31 = load i32, i32* %retval, align 4, !dbg !6929
  ret i32 %31, !dbg !6929
}

declare dso_local void @RNA_def_enum_funcs(%struct.PropertyRNA*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.EnumPropertyItem* @merge_type_itemf(%struct.bContext* %C, %struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !6930 {
entry:
  %retval = alloca %struct.EnumPropertyItem*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  %obedit = alloca %struct.Object*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %totitem = alloca i32, align 4
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6937, metadata !DIExpression()), !dbg !6938
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !6939, metadata !DIExpression()), !dbg !6940
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !6941, metadata !DIExpression()), !dbg !6942
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !6943, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !6945, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !6947, metadata !DIExpression()), !dbg !6948
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item, align 8, !dbg !6948
  call void @llvm.dbg.declare(metadata i32* %totitem, metadata !6949, metadata !DIExpression()), !dbg !6950
  store i32 0, i32* %totitem, align 4, !dbg !6950
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6951
  %tobool = icmp ne %struct.bContext* %0, null, !dbg !6951
  br i1 %tobool, label %if.end, label %if.then, !dbg !6953

if.then:                                          ; preds = %entry
  store %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @merge_type_items, i64 0, i64 0), %struct.EnumPropertyItem** %retval, align 8, !dbg !6954
  br label %return, !dbg !6954

if.end:                                           ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6955
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !6956
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !6957
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6958
  %tobool1 = icmp ne %struct.Object* %2, null, !dbg !6958
  br i1 %tobool1, label %land.lhs.true, label %if.end60, !dbg !6960

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6961
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !6962
  %4 = load i16, i16* %type, align 8, !dbg !6962
  %conv = sext i16 %4 to i32, !dbg !6961
  %cmp = icmp eq i32 %conv, 1, !dbg !6963
  br i1 %cmp, label %if.then3, label %if.end60, !dbg !6964

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !6965, metadata !DIExpression()), !dbg !6967
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !6968
  %call4 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %5), !dbg !6969
  store %struct.BMEditMesh* %call4, %struct.BMEditMesh** %em, align 8, !dbg !6967
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6970
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 12, !dbg !6972
  %7 = load i16, i16* %selectmode, align 4, !dbg !6972
  %conv5 = sext i16 %7 to i32, !dbg !6970
  %and = and i32 %conv5, 1, !dbg !6973
  %tobool6 = icmp ne i32 %and, 0, !dbg !6973
  br i1 %tobool6, label %if.then7, label %if.end59, !dbg !6974

if.then7:                                         ; preds = %if.then3
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6975
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !6978
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6978
  %selected = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 32, !dbg !6979
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected, i32 0, i32 0, !dbg !6980
  %10 = load i8*, i8** %first, align 8, !dbg !6980
  %tobool8 = icmp ne i8* %10, null, !dbg !6975
  br i1 %tobool8, label %land.lhs.true9, label %if.else, !dbg !6981

land.lhs.true9:                                   ; preds = %if.then7
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6982
  %bm10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 0, !dbg !6983
  %12 = load %struct.BMesh*, %struct.BMesh** %bm10, align 8, !dbg !6983
  %selected11 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %12, i32 0, i32 32, !dbg !6984
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected11, i32 0, i32 1, !dbg !6985
  %13 = load i8*, i8** %last, align 8, !dbg !6985
  %tobool12 = icmp ne i8* %13, null, !dbg !6982
  br i1 %tobool12, label %land.lhs.true13, label %if.else, !dbg !6986

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6987
  %bm14 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !6988
  %15 = load %struct.BMesh*, %struct.BMesh** %bm14, align 8, !dbg !6988
  %selected15 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 32, !dbg !6989
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected15, i32 0, i32 0, !dbg !6990
  %16 = load i8*, i8** %first16, align 8, !dbg !6990
  %17 = bitcast i8* %16 to %struct.BMEditSelection*, !dbg !6991
  %htype = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %17, i32 0, i32 3, !dbg !6992
  %18 = load i8, i8* %htype, align 8, !dbg !6992
  %conv17 = zext i8 %18 to i32, !dbg !6993
  %cmp18 = icmp eq i32 %conv17, 1, !dbg !6994
  br i1 %cmp18, label %land.lhs.true20, label %if.else, !dbg !6995

land.lhs.true20:                                  ; preds = %land.lhs.true13
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6996
  %bm21 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %19, i32 0, i32 0, !dbg !6997
  %20 = load %struct.BMesh*, %struct.BMesh** %bm21, align 8, !dbg !6997
  %selected22 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %20, i32 0, i32 32, !dbg !6998
  %last23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected22, i32 0, i32 1, !dbg !6999
  %21 = load i8*, i8** %last23, align 8, !dbg !6999
  %22 = bitcast i8* %21 to %struct.BMEditSelection*, !dbg !7000
  %htype24 = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %22, i32 0, i32 3, !dbg !7001
  %23 = load i8, i8* %htype24, align 8, !dbg !7001
  %conv25 = zext i8 %23 to i32, !dbg !7002
  %cmp26 = icmp eq i32 %conv25, 1, !dbg !7003
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !7004

if.then28:                                        ; preds = %land.lhs.true20
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @merge_type_items, i64 0, i64 0), i32 6), !dbg !7005
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @merge_type_items, i64 0, i64 0), i32 1), !dbg !7007
  br label %if.end58, !dbg !7008

if.else:                                          ; preds = %land.lhs.true20, %land.lhs.true13, %land.lhs.true9, %if.then7
  %24 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7009
  %bm29 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %24, i32 0, i32 0, !dbg !7011
  %25 = load %struct.BMesh*, %struct.BMesh** %bm29, align 8, !dbg !7011
  %selected30 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %25, i32 0, i32 32, !dbg !7012
  %first31 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected30, i32 0, i32 0, !dbg !7013
  %26 = load i8*, i8** %first31, align 8, !dbg !7013
  %tobool32 = icmp ne i8* %26, null, !dbg !7009
  br i1 %tobool32, label %land.lhs.true33, label %if.else42, !dbg !7014

land.lhs.true33:                                  ; preds = %if.else
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7015
  %bm34 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 0, !dbg !7016
  %28 = load %struct.BMesh*, %struct.BMesh** %bm34, align 8, !dbg !7016
  %selected35 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %28, i32 0, i32 32, !dbg !7017
  %first36 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected35, i32 0, i32 0, !dbg !7018
  %29 = load i8*, i8** %first36, align 8, !dbg !7018
  %30 = bitcast i8* %29 to %struct.BMEditSelection*, !dbg !7019
  %htype37 = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %30, i32 0, i32 3, !dbg !7020
  %31 = load i8, i8* %htype37, align 8, !dbg !7020
  %conv38 = zext i8 %31 to i32, !dbg !7021
  %cmp39 = icmp eq i32 %conv38, 1, !dbg !7022
  br i1 %cmp39, label %if.then41, label %if.else42, !dbg !7023

if.then41:                                        ; preds = %land.lhs.true33
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @merge_type_items, i64 0, i64 0), i32 6), !dbg !7024
  br label %if.end57, !dbg !7026

if.else42:                                        ; preds = %land.lhs.true33, %if.else
  %32 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7027
  %bm43 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %32, i32 0, i32 0, !dbg !7029
  %33 = load %struct.BMesh*, %struct.BMesh** %bm43, align 8, !dbg !7029
  %selected44 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %33, i32 0, i32 32, !dbg !7030
  %last45 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected44, i32 0, i32 1, !dbg !7031
  %34 = load i8*, i8** %last45, align 8, !dbg !7031
  %tobool46 = icmp ne i8* %34, null, !dbg !7027
  br i1 %tobool46, label %land.lhs.true47, label %if.end56, !dbg !7032

land.lhs.true47:                                  ; preds = %if.else42
  %35 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7033
  %bm48 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %35, i32 0, i32 0, !dbg !7034
  %36 = load %struct.BMesh*, %struct.BMesh** %bm48, align 8, !dbg !7034
  %selected49 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %36, i32 0, i32 32, !dbg !7035
  %last50 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected49, i32 0, i32 1, !dbg !7036
  %37 = load i8*, i8** %last50, align 8, !dbg !7036
  %38 = bitcast i8* %37 to %struct.BMEditSelection*, !dbg !7037
  %htype51 = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %38, i32 0, i32 3, !dbg !7038
  %39 = load i8, i8* %htype51, align 8, !dbg !7038
  %conv52 = zext i8 %39 to i32, !dbg !7039
  %cmp53 = icmp eq i32 %conv52, 1, !dbg !7040
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !7041

if.then55:                                        ; preds = %land.lhs.true47
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @merge_type_items, i64 0, i64 0), i32 1), !dbg !7042
  br label %if.end56, !dbg !7044

if.end56:                                         ; preds = %if.then55, %land.lhs.true47, %if.else42
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then41
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then28
  br label %if.end59, !dbg !7045

if.end59:                                         ; preds = %if.end58, %if.then3
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @merge_type_items, i64 0, i64 0), i32 3), !dbg !7046
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @merge_type_items, i64 0, i64 0), i32 4), !dbg !7047
  call void @RNA_enum_items_add_value(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @merge_type_items, i64 0, i64 0), i32 5), !dbg !7048
  call void @RNA_enum_item_end(%struct.EnumPropertyItem** %item, i32* %totitem), !dbg !7049
  %40 = load i8*, i8** %r_free.addr, align 8, !dbg !7050
  store i8 1, i8* %40, align 1, !dbg !7051
  %41 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !7052
  store %struct.EnumPropertyItem* %41, %struct.EnumPropertyItem** %retval, align 8, !dbg !7053
  br label %return, !dbg !7053

if.end60:                                         ; preds = %land.lhs.true, %if.end
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %retval, align 8, !dbg !7054
  br label %return, !dbg !7054

return:                                           ; preds = %if.end60, %if.end59, %if.then
  %42 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %retval, align 8, !dbg !7055
  ret %struct.EnumPropertyItem* %42, !dbg !7055
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_remove_doubles(%struct.wmOperatorType* %ot) #0 !dbg !7056 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7057, metadata !DIExpression()), !dbg !7058
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7059
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7060
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.167, i64 0, i64 0), i8** %name, align 8, !dbg !7061
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7062
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7063
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.168, i64 0, i64 0), i8** %description, align 8, !dbg !7064
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7065
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7066
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.169, i64 0, i64 0), i8** %idname, align 8, !dbg !7067
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7068
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7069
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_remove_doubles_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7070
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7071
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7072
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !7073
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7074
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7075
  store i16 3, i16* %flag, align 8, !dbg !7076
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7077
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7078
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7078
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7077
  %call = call %struct.PropertyRNA* @RNA_def_float(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i64 0, i64 0), float 0x3F1A36E2E0000000, float 0x3EB0C6F7A0000000, float 5.000000e+01, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.171, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.172, i64 0, i64 0), float 0x3EE4F8B580000000, float 1.000000e+01), !dbg !7079
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7080
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !7081
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !7081
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !7080
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.173, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.174, i64 0, i64 0)), !dbg !7082
  ret void, !dbg !7083
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_remove_doubles_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7084 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %threshold = alloca float, align 4
  %use_unselected = alloca i8, align 1
  %totvert_orig = alloca i32, align 4
  %count = alloca i32, align 4
  %htype_select = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7085, metadata !DIExpression()), !dbg !7086
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7087, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7089, metadata !DIExpression()), !dbg !7090
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7091
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7092
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7090
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7093, metadata !DIExpression()), !dbg !7094
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7095
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !7096
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !7094
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !7097, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !7099, metadata !DIExpression()), !dbg !7100
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7101
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !7102
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7102
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i64 0, i64 0)), !dbg !7103
  store float %call2, float* %threshold, align 4, !dbg !7100
  call void @llvm.dbg.declare(metadata i8* %use_unselected, metadata !7104, metadata !DIExpression()), !dbg !7105
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7106
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !7107
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !7107
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.173, i64 0, i64 0)), !dbg !7108
  %conv = trunc i32 %call4 to i8, !dbg !7108
  store i8 %conv, i8* %use_unselected, align 1, !dbg !7105
  call void @llvm.dbg.declare(metadata i32* %totvert_orig, metadata !7109, metadata !DIExpression()), !dbg !7110
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7111
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !7112
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7112
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 0, !dbg !7113
  %8 = load i32, i32* %totvert, align 8, !dbg !7113
  store i32 %8, i32* %totvert_orig, align 4, !dbg !7110
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7114, metadata !DIExpression()), !dbg !7115
  call void @llvm.dbg.declare(metadata i8* %htype_select, metadata !7116, metadata !DIExpression()), !dbg !7117
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7118
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 12, !dbg !7120
  %10 = load i16, i16* %selectmode, align 4, !dbg !7120
  %conv5 = sext i16 %10 to i32, !dbg !7118
  %and = and i32 %conv5, 1, !dbg !7121
  %tobool = icmp ne i32 %and, 0, !dbg !7121
  br i1 %tobool, label %if.then, label %if.else, !dbg !7122

if.then:                                          ; preds = %entry
  store i8 1, i8* %htype_select, align 1, !dbg !7123
  br label %if.end12, !dbg !7124

if.else:                                          ; preds = %entry
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7125
  %selectmode6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 12, !dbg !7127
  %12 = load i16, i16* %selectmode6, align 4, !dbg !7127
  %conv7 = sext i16 %12 to i32, !dbg !7125
  %and8 = and i32 %conv7, 2, !dbg !7128
  %tobool9 = icmp ne i32 %and8, 0, !dbg !7128
  br i1 %tobool9, label %if.then10, label %if.else11, !dbg !7129

if.then10:                                        ; preds = %if.else
  store i8 2, i8* %htype_select, align 1, !dbg !7130
  br label %if.end, !dbg !7131

if.else11:                                        ; preds = %if.else
  store i8 8, i8* %htype_select, align 1, !dbg !7132
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then10
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7133
  %bm13 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !7134
  %14 = load %struct.BMesh*, %struct.BMesh** %bm13, align 8, !dbg !7134
  %15 = load i8, i8* %htype_select, align 1, !dbg !7135
  call void @BM_mesh_elem_hflag_enable_test(%struct.BMesh* %14, i8 zeroext %15, i8 zeroext 16, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1), !dbg !7136
  %16 = load i8, i8* %use_unselected, align 1, !dbg !7137
  %tobool14 = icmp ne i8 %16, 0, !dbg !7137
  br i1 %tobool14, label %if.then15, label %if.else23, !dbg !7139

if.then15:                                        ; preds = %if.end12
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7140
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7142
  %19 = load float, float* %threshold, align 4, !dbg !7143
  %conv16 = fpext float %19 to double, !dbg !7143
  %call17 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %17, %struct.BMOperator* %bmop, %struct.wmOperator* %18, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.449, i64 0, i64 0), i32 1, double %conv16), !dbg !7144
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7145
  %bm18 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %20, i32 0, i32 0, !dbg !7146
  %21 = load %struct.BMesh*, %struct.BMesh** %bm18, align 8, !dbg !7146
  call void @BMO_op_exec(%struct.BMesh* %21, %struct.BMOperator* %bmop), !dbg !7147
  %22 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7148
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7150
  %call19 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %22, %struct.BMOperator* %bmop, %struct.wmOperator* %23, i8 zeroext 1), !dbg !7151
  %tobool20 = icmp ne i8 %call19, 0, !dbg !7151
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !7152

if.then21:                                        ; preds = %if.then15
  store i32 2, i32* %retval, align 4, !dbg !7153
  br label %return, !dbg !7153

if.end22:                                         ; preds = %if.then15
  br label %if.end36, !dbg !7155

if.else23:                                        ; preds = %if.end12
  %24 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7156
  %25 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7158
  %26 = load float, float* %threshold, align 4, !dbg !7159
  %conv24 = fpext float %26 to double, !dbg !7159
  %call25 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %24, %struct.BMOperator* %bmop, %struct.wmOperator* %25, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.450, i64 0, i64 0), i32 1, double %conv24), !dbg !7160
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7161
  %bm26 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 0, !dbg !7162
  %28 = load %struct.BMesh*, %struct.BMesh** %bm26, align 8, !dbg !7162
  call void @BMO_op_exec(%struct.BMesh* %28, %struct.BMOperator* %bmop), !dbg !7163
  %29 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7164
  %30 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7166
  %call27 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %29, %struct.wmOperator* %30, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.451, i64 0, i64 0), %struct.BMOperator* %bmop, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.452, i64 0, i64 0)), !dbg !7167
  %tobool28 = icmp ne i8 %call27, 0, !dbg !7167
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !7168

if.then29:                                        ; preds = %if.else23
  %31 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7169
  %bm30 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %31, i32 0, i32 0, !dbg !7171
  %32 = load %struct.BMesh*, %struct.BMesh** %bm30, align 8, !dbg !7171
  call void @BMO_op_finish(%struct.BMesh* %32, %struct.BMOperator* %bmop), !dbg !7172
  store i32 2, i32* %retval, align 4, !dbg !7173
  br label %return, !dbg !7173

if.end31:                                         ; preds = %if.else23
  %33 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7174
  %34 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7176
  %call32 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %33, %struct.BMOperator* %bmop, %struct.wmOperator* %34, i8 zeroext 1), !dbg !7177
  %tobool33 = icmp ne i8 %call32, 0, !dbg !7177
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !7178

if.then34:                                        ; preds = %if.end31
  store i32 2, i32* %retval, align 4, !dbg !7179
  br label %return, !dbg !7179

if.end35:                                         ; preds = %if.end31
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end22
  %35 = load i32, i32* %totvert_orig, align 4, !dbg !7181
  %36 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7182
  %bm37 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %36, i32 0, i32 0, !dbg !7183
  %37 = load %struct.BMesh*, %struct.BMesh** %bm37, align 8, !dbg !7183
  %totvert38 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %37, i32 0, i32 0, !dbg !7184
  %38 = load i32, i32* %totvert38, align 8, !dbg !7184
  %sub = sub nsw i32 %35, %38, !dbg !7185
  store i32 %sub, i32* %count, align 4, !dbg !7186
  %39 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7187
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %39, i32 0, i32 8, !dbg !7188
  %40 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !7188
  %41 = load i32, i32* %count, align 4, !dbg !7189
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %40, i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.453, i64 0, i64 0), i32 %41), !dbg !7190
  %42 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7191
  %bm39 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %42, i32 0, i32 0, !dbg !7192
  %43 = load %struct.BMesh*, %struct.BMesh** %bm39, align 8, !dbg !7192
  %44 = load i8, i8* %htype_select, align 1, !dbg !7193
  call void @BM_mesh_elem_hflag_enable_test(%struct.BMesh* %43, i8 zeroext %44, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, i8 zeroext 16), !dbg !7194
  %45 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7195
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %45), !dbg !7196
  %46 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7197
  call void @EDBM_update_generic(%struct.BMEditMesh* %46, i8 zeroext 1, i8 zeroext 1), !dbg !7198
  store i32 4, i32* %retval, align 4, !dbg !7199
  br label %return, !dbg !7199

return:                                           ; preds = %if.end36, %if.then34, %if.then29, %if.then21
  %47 = load i32, i32* %retval, align 4, !dbg !7200
  ret i32 %47, !dbg !7200
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_shape_propagate_to_all(%struct.wmOperatorType* %ot) #0 !dbg !7201 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7202, metadata !DIExpression()), !dbg !7203
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7204
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7205
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.175, i64 0, i64 0), i8** %name, align 8, !dbg !7206
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7207
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7208
  store i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.176, i64 0, i64 0), i8** %description, align 8, !dbg !7209
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7210
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7211
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.177, i64 0, i64 0), i8** %idname, align 8, !dbg !7212
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7213
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7214
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_shape_propagate_to_all_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7215
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7216
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7217
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !7218
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7219
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7220
  store i16 3, i16* %flag, align 8, !dbg !7221
  ret void, !dbg !7222
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_shape_propagate_to_all_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7223 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7224, metadata !DIExpression()), !dbg !7225
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7226, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7228, metadata !DIExpression()), !dbg !7229
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7230
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7231
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7229
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !7232, metadata !DIExpression()), !dbg !7233
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7234
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !7235
  %2 = load i8*, i8** %data, align 8, !dbg !7235
  %3 = bitcast i8* %2 to %struct.Mesh*, !dbg !7234
  store %struct.Mesh* %3, %struct.Mesh** %me, align 8, !dbg !7233
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7236, metadata !DIExpression()), !dbg !7237
  %4 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7238
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 20, !dbg !7239
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !7239
  store %struct.BMEditMesh* %5, %struct.BMEditMesh** %em, align 8, !dbg !7237
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7240
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7241
  call void @shape_propagate(%struct.BMEditMesh* %6, %struct.wmOperator* %7), !dbg !7242
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7243
  call void @EDBM_update_generic(%struct.BMEditMesh* %8, i8 zeroext 0, i8 zeroext 0), !dbg !7244
  ret i32 4, !dbg !7245
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_blend_from_shape(%struct.wmOperatorType* %ot) #0 !dbg !7246 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7247, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7249, metadata !DIExpression()), !dbg !7250
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7251
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7252
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.178, i64 0, i64 0), i8** %name, align 8, !dbg !7253
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7254
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7255
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.179, i64 0, i64 0), i8** %description, align 8, !dbg !7256
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7257
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7258
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.180, i64 0, i64 0), i8** %idname, align 8, !dbg !7259
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7260
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7261
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_blend_from_shape_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7262
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7263
  %ui = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 10, !dbg !7264
  store void (%struct.bContext*, %struct.wmOperator*)* @edbm_blend_from_shape_ui, void (%struct.bContext*, %struct.wmOperator*)** %ui, align 8, !dbg !7265
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7266
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !7267
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !7268
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7269
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !7270
  store i16 3, i16* %flag, align 8, !dbg !7271
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7272
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !7273
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7273
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !7272
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @DummyRNA_NULL_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.182, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.183, i64 0, i64 0)), !dbg !7274
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !7275
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7276
  call void @RNA_def_enum_funcs(%struct.PropertyRNA* %10, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* @shape_itemf), !dbg !7277
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7278
  call void @RNA_def_property_flag(%struct.PropertyRNA* %11, i32 536870912), !dbg !7279
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7280
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !7281
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !7281
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !7280
  %call2 = call %struct.PropertyRNA* @RNA_def_float(i8* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.184, i64 0, i64 0), float 1.000000e+00, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.185, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.186, i64 0, i64 0), float -2.000000e+00, float 2.000000e+00), !dbg !7282
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7283
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !7284
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !7284
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !7283
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.187, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.188, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.189, i64 0, i64 0)), !dbg !7285
  ret void, !dbg !7286
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_blend_from_shape_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7287 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %key = alloca %struct.Key*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %co = alloca [3 x float], align 4
  %sco = alloca float*, align 8
  %totshape = alloca i32, align 4
  %blend = alloca float, align 4
  %shape = alloca i32, align 4
  %use_add = alloca i8, align 1
  %rco = alloca float*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7288, metadata !DIExpression()), !dbg !7289
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7290, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7292, metadata !DIExpression()), !dbg !7293
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7294
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7295
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7293
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !7296, metadata !DIExpression()), !dbg !7297
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7298
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !7299
  %2 = load i8*, i8** %data, align 8, !dbg !7299
  %3 = bitcast i8* %2 to %struct.Mesh*, !dbg !7298
  store %struct.Mesh* %3, %struct.Mesh** %me, align 8, !dbg !7297
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !7300, metadata !DIExpression()), !dbg !7303
  %4 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7304
  %key1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 4, !dbg !7305
  %5 = load %struct.Key*, %struct.Key** %key1, align 8, !dbg !7305
  store %struct.Key* %5, %struct.Key** %key, align 8, !dbg !7303
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !7306, metadata !DIExpression()), !dbg !7307
  store %struct.KeyBlock* null, %struct.KeyBlock** %kb, align 8, !dbg !7307
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7308, metadata !DIExpression()), !dbg !7309
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7310
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 20, !dbg !7311
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !7311
  store %struct.BMEditMesh* %7, %struct.BMEditMesh** %em, align 8, !dbg !7309
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !7312, metadata !DIExpression()), !dbg !7313
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7314, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !7316, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.declare(metadata float** %sco, metadata !7318, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.declare(metadata i32* %totshape, metadata !7320, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.declare(metadata float* %blend, metadata !7322, metadata !DIExpression()), !dbg !7323
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7324
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !7325
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7325
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.184, i64 0, i64 0)), !dbg !7326
  store float %call2, float* %blend, align 4, !dbg !7323
  call void @llvm.dbg.declare(metadata i32* %shape, metadata !7327, metadata !DIExpression()), !dbg !7328
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7329
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !7330
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !7330
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i64 0, i64 0)), !dbg !7331
  store i32 %call4, i32* %shape, align 4, !dbg !7328
  call void @llvm.dbg.declare(metadata i8* %use_add, metadata !7332, metadata !DIExpression()), !dbg !7333
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7334
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 7, !dbg !7335
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !7335
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.187, i64 0, i64 0)), !dbg !7336
  %conv = trunc i32 %call6 to i8, !dbg !7336
  store i8 %conv, i8* %use_add, align 1, !dbg !7333
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7337
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !7338
  %15 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7338
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 24, !dbg !7339
  %call7 = call i32 @CustomData_number_of_layers(%struct.CustomData* %vdata, i32 28), !dbg !7340
  store i32 %call7, i32* %totshape, align 4, !dbg !7341
  %16 = load i32, i32* %totshape, align 4, !dbg !7342
  %cmp = icmp eq i32 %16, 0, !dbg !7344
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7345

lor.lhs.false:                                    ; preds = %entry
  %17 = load i32, i32* %shape, align 4, !dbg !7346
  %cmp9 = icmp slt i32 %17, 0, !dbg !7347
  br i1 %cmp9, label %if.then, label %lor.lhs.false11, !dbg !7348

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %18 = load i32, i32* %shape, align 4, !dbg !7349
  %19 = load i32, i32* %totshape, align 4, !dbg !7350
  %cmp12 = icmp sge i32 %18, %19, !dbg !7351
  br i1 %cmp12, label %if.then, label %if.end, !dbg !7352

if.then:                                          ; preds = %lor.lhs.false11, %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !7353
  br label %return, !dbg !7353

if.end:                                           ; preds = %lor.lhs.false11
  %20 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !7354
  %tobool = icmp ne %struct.Key* %20, null, !dbg !7354
  br i1 %tobool, label %if.then14, label %if.end16, !dbg !7356

if.then14:                                        ; preds = %if.end
  %21 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !7357
  %block = getelementptr inbounds %struct.Key, %struct.Key* %21, i32 0, i32 6, !dbg !7359
  %22 = load i32, i32* %shape, align 4, !dbg !7360
  %call15 = call i8* @BLI_findlink(%struct.ListBase* %block, i32 %22), !dbg !7361
  %23 = bitcast i8* %call15 to %struct.KeyBlock*, !dbg !7361
  store %struct.KeyBlock* %23, %struct.KeyBlock** %kb, align 8, !dbg !7362
  br label %if.end16, !dbg !7363

if.end16:                                         ; preds = %if.then14, %if.end
  %24 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7364
  %bm17 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %24, i32 0, i32 0, !dbg !7364
  %25 = load %struct.BMesh*, %struct.BMesh** %bm17, align 8, !dbg !7364
  %call18 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %25, i8 zeroext 1, i8* null), !dbg !7364
  %26 = bitcast i8* %call18 to %struct.BMVert*, !dbg !7364
  store %struct.BMVert* %26, %struct.BMVert** %eve, align 8, !dbg !7364
  br label %for.cond, !dbg !7364

for.cond:                                         ; preds = %for.inc, %if.end16
  %27 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7366
  %tobool19 = icmp ne %struct.BMVert* %27, null, !dbg !7364
  br i1 %tobool19, label %for.body, label %for.end, !dbg !7364

for.body:                                         ; preds = %for.cond
  %28 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7368
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %28, i32 0, i32 0, !dbg !7368
  %call20 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !7368
  %tobool21 = icmp ne i8 %call20, 0, !dbg !7368
  br i1 %tobool21, label %lor.lhs.false22, label %if.then27, !dbg !7371

lor.lhs.false22:                                  ; preds = %for.body
  %29 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7372
  %head23 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %29, i32 0, i32 0, !dbg !7372
  %call24 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head23, i8 zeroext 2), !dbg !7372
  %conv25 = zext i8 %call24 to i32, !dbg !7372
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !7372
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !7373

if.then27:                                        ; preds = %lor.lhs.false22, %for.body
  br label %for.inc, !dbg !7374

if.end28:                                         ; preds = %lor.lhs.false22
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7375
  %bm29 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %30, i32 0, i32 0, !dbg !7376
  %31 = load %struct.BMesh*, %struct.BMesh** %bm29, align 8, !dbg !7376
  %vdata30 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %31, i32 0, i32 24, !dbg !7377
  %32 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7378
  %head31 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %32, i32 0, i32 0, !dbg !7379
  %data32 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head31, i32 0, i32 0, !dbg !7380
  %33 = load i8*, i8** %data32, align 8, !dbg !7380
  %34 = load i32, i32* %shape, align 4, !dbg !7381
  %call33 = call i8* @CustomData_bmesh_get_n(%struct.CustomData* %vdata30, i8* %33, i32 28, i32 %34), !dbg !7382
  %35 = bitcast i8* %call33 to float*, !dbg !7382
  store float* %35, float** %sco, align 8, !dbg !7383
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7384
  %36 = load float*, float** %sco, align 8, !dbg !7385
  call void @copy_v3_v3(float* %arraydecay, float* %36), !dbg !7386
  %37 = load i8, i8* %use_add, align 1, !dbg !7387
  %tobool34 = icmp ne i8 %37, 0, !dbg !7387
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !7389

if.then35:                                        ; preds = %if.end28
  %38 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !7390
  %tobool36 = icmp ne %struct.KeyBlock* %38, null, !dbg !7390
  br i1 %tobool36, label %if.then37, label %if.end46, !dbg !7393

if.then37:                                        ; preds = %if.then35
  call void @llvm.dbg.declare(metadata float** %rco, metadata !7394, metadata !DIExpression()), !dbg !7397
  %39 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7398
  %bm38 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %39, i32 0, i32 0, !dbg !7399
  %40 = load %struct.BMesh*, %struct.BMesh** %bm38, align 8, !dbg !7399
  %vdata39 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %40, i32 0, i32 24, !dbg !7400
  %41 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7401
  %head40 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %41, i32 0, i32 0, !dbg !7402
  %data41 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head40, i32 0, i32 0, !dbg !7403
  %42 = load i8*, i8** %data41, align 8, !dbg !7403
  %43 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !7404
  %relative = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %43, i32 0, i32 6, !dbg !7405
  %44 = load i16, i16* %relative, align 4, !dbg !7405
  %conv42 = sext i16 %44 to i32, !dbg !7404
  %call43 = call i8* @CustomData_bmesh_get_n(%struct.CustomData* %vdata39, i8* %42, i32 28, i32 %conv42), !dbg !7406
  %45 = bitcast i8* %call43 to float*, !dbg !7406
  store float* %45, float** %rco, align 8, !dbg !7397
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7407
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7408
  %46 = load float*, float** %rco, align 8, !dbg !7409
  call void @sub_v3_v3v3(float* %arraydecay44, float* %arraydecay45, float* %46), !dbg !7410
  br label %if.end46, !dbg !7411

if.end46:                                         ; preds = %if.then37, %if.then35
  %47 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7412
  %co47 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %47, i32 0, i32 2, !dbg !7413
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %co47, i64 0, i64 0, !dbg !7412
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7414
  %48 = load float, float* %blend, align 4, !dbg !7415
  call void @madd_v3_v3fl(float* %arraydecay48, float* %arraydecay49, float %48), !dbg !7416
  br label %if.end55, !dbg !7417

if.else:                                          ; preds = %if.end28
  %49 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7418
  %co50 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %49, i32 0, i32 2, !dbg !7420
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %co50, i64 0, i64 0, !dbg !7418
  %50 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7421
  %co52 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %50, i32 0, i32 2, !dbg !7422
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %co52, i64 0, i64 0, !dbg !7421
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7423
  %51 = load float, float* %blend, align 4, !dbg !7424
  call void @interp_v3_v3v3(float* %arraydecay51, float* %arraydecay53, float* %arraydecay54, float %51), !dbg !7425
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.end46
  br label %for.inc, !dbg !7426

for.inc:                                          ; preds = %if.end55, %if.then27
  %call56 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7366
  %52 = bitcast i8* %call56 to %struct.BMVert*, !dbg !7366
  store %struct.BMVert* %52, %struct.BMVert** %eve, align 8, !dbg !7366
  br label %for.cond, !dbg !7366, !llvm.loop !7427

for.end:                                          ; preds = %for.cond
  %53 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7429
  call void @EDBM_update_generic(%struct.BMEditMesh* %53, i8 zeroext 1, i8 zeroext 0), !dbg !7430
  store i32 4, i32* %retval, align 4, !dbg !7431
  br label %return, !dbg !7431

return:                                           ; preds = %for.end, %if.then
  %54 = load i32, i32* %retval, align 4, !dbg !7432
  ret i32 %54, !dbg !7432
}

; Function Attrs: noinline nounwind uwtable
define internal void @edbm_blend_from_shape_ui(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7433 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  %obedit = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %ptr_key = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7436, metadata !DIExpression()), !dbg !7437
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7438, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !7440, metadata !DIExpression()), !dbg !7444
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7445
  %layout1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 11, !dbg !7446
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout1, align 8, !dbg !7446
  store %struct.uiLayout* %1, %struct.uiLayout** %layout, align 8, !dbg !7444
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !7447, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7449, metadata !DIExpression()), !dbg !7450
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7451
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %2), !dbg !7452
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7450
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !7453, metadata !DIExpression()), !dbg !7454
  %3 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7455
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !7456
  %4 = load i8*, i8** %data, align 8, !dbg !7456
  %5 = bitcast i8* %4 to %struct.Mesh*, !dbg !7455
  store %struct.Mesh* %5, %struct.Mesh** %me, align 8, !dbg !7454
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr_key, metadata !7457, metadata !DIExpression()), !dbg !7458
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7459
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 4, !dbg !7460
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !7460
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !7461
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7461
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7462
  %properties = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 3, !dbg !7463
  %10 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !7463
  %11 = bitcast %struct.IDProperty* %10 to i8*, !dbg !7462
  call void @RNA_pointer_create(%struct.ID* null, %struct.StructRNA* %8, i8* %11, %struct.PointerRNA* %ptr), !dbg !7464
  %12 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7465
  %key = getelementptr inbounds %struct.Mesh, %struct.Mesh* %12, i32 0, i32 4, !dbg !7466
  %13 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !7466
  %14 = bitcast %struct.Key* %13 to %struct.ID*, !dbg !7467
  call void @RNA_id_pointer_create(%struct.ID* %14, %struct.PointerRNA* %ptr_key), !dbg !7468
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7469
  call void @uiItemPointerR(%struct.uiLayout* %15, %struct.PointerRNA* %ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i64 0, i64 0), %struct.PointerRNA* %ptr_key, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.455, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i32 176), !dbg !7470
  %16 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7471
  call void @uiItemR(%struct.uiLayout* %16, %struct.PointerRNA* %ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.184, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7472
  %17 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !7473
  call void @uiItemR(%struct.uiLayout* %17, %struct.PointerRNA* %ptr, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.187, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !7474
  ret void, !dbg !7475
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.EnumPropertyItem* @shape_itemf(%struct.bContext* %C, %struct.PointerRNA* %UNUSED_ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !7476 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %totitem = alloca i32, align 4
  %tmp = alloca %struct.EnumPropertyItem, align 8
  %a = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7477, metadata !DIExpression()), !dbg !7478
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !7479, metadata !DIExpression()), !dbg !7480
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !7481, metadata !DIExpression()), !dbg !7482
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !7483, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7485, metadata !DIExpression()), !dbg !7486
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7487
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7488
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7486
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7489, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !7491, metadata !DIExpression()), !dbg !7492
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item, align 8, !dbg !7492
  call void @llvm.dbg.declare(metadata i32* %totitem, metadata !7493, metadata !DIExpression()), !dbg !7494
  store i32 0, i32* %totitem, align 4, !dbg !7494
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7495
  %tobool = icmp ne %struct.Object* %1, null, !dbg !7495
  br i1 %tobool, label %land.lhs.true, label %if.end32, !dbg !7497

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7498
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !7499
  %3 = load i16, i16* %type, align 8, !dbg !7499
  %conv = sext i16 %3 to i32, !dbg !7498
  %cmp = icmp eq i32 %conv, 1, !dbg !7500
  br i1 %cmp, label %land.lhs.true2, label %if.end32, !dbg !7501

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7502
  %call3 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %4), !dbg !7503
  store %struct.BMEditMesh* %call3, %struct.BMEditMesh** %em, align 8, !dbg !7504
  %tobool4 = icmp ne %struct.BMEditMesh* %call3, null, !dbg !7504
  br i1 %tobool4, label %land.lhs.true5, label %if.end32, !dbg !7505

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7506
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !7507
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7507
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 24, !dbg !7508
  %call6 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %vdata, i32 28), !dbg !7509
  %conv7 = zext i8 %call6 to i32, !dbg !7509
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !7509
  br i1 %tobool8, label %if.then, label %if.end32, !dbg !7510

if.then:                                          ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem* %tmp, metadata !7511, metadata !DIExpression()), !dbg !7513
  %7 = bitcast %struct.EnumPropertyItem* %tmp to i8*, !dbg !7513
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 40, i1 false), !dbg !7513
  %8 = bitcast i8* %7 to %struct.EnumPropertyItem*, !dbg !7513
  %9 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %8, i32 0, i32 1, !dbg !7513
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0), i8** %9, align 8, !dbg !7513
  %10 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %8, i32 0, i32 3, !dbg !7513
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0), i8** %10, align 8, !dbg !7513
  %11 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %8, i32 0, i32 4, !dbg !7513
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0), i8** %11, align 8, !dbg !7513
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7514, metadata !DIExpression()), !dbg !7515
  store i32 0, i32* %a, align 4, !dbg !7516
  br label %for.cond, !dbg !7518

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %a, align 4, !dbg !7519
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7521
  %bm9 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !7522
  %14 = load %struct.BMesh*, %struct.BMesh** %bm9, align 8, !dbg !7522
  %vdata10 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %14, i32 0, i32 24, !dbg !7523
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %vdata10, i32 0, i32 2, !dbg !7524
  %15 = load i32, i32* %totlayer, align 4, !dbg !7524
  %cmp11 = icmp slt i32 %12, %15, !dbg !7525
  br i1 %cmp11, label %for.body, label %for.end, !dbg !7526

for.body:                                         ; preds = %for.cond
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7527
  %bm13 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !7530
  %17 = load %struct.BMesh*, %struct.BMesh** %bm13, align 8, !dbg !7530
  %vdata14 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %17, i32 0, i32 24, !dbg !7531
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %vdata14, i32 0, i32 0, !dbg !7532
  %18 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !7532
  %19 = load i32, i32* %a, align 4, !dbg !7533
  %idxprom = sext i32 %19 to i64, !dbg !7527
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %18, i64 %idxprom, !dbg !7527
  %type15 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx, i32 0, i32 0, !dbg !7534
  %20 = load i32, i32* %type15, align 8, !dbg !7534
  %cmp16 = icmp ne i32 %20, 28, !dbg !7535
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !7536

if.then18:                                        ; preds = %for.body
  br label %for.inc, !dbg !7537

if.end:                                           ; preds = %for.body
  %21 = load i32, i32* %totitem, align 4, !dbg !7538
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %tmp, i32 0, i32 0, !dbg !7539
  store i32 %21, i32* %value, align 8, !dbg !7540
  %22 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7541
  %bm19 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %22, i32 0, i32 0, !dbg !7542
  %23 = load %struct.BMesh*, %struct.BMesh** %bm19, align 8, !dbg !7542
  %vdata20 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %23, i32 0, i32 24, !dbg !7543
  %layers21 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %vdata20, i32 0, i32 0, !dbg !7544
  %24 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers21, align 8, !dbg !7544
  %25 = load i32, i32* %a, align 4, !dbg !7545
  %idxprom22 = sext i32 %25 to i64, !dbg !7541
  %arrayidx23 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %24, i64 %idxprom22, !dbg !7541
  %name = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx23, i32 0, i32 8, !dbg !7546
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !7541
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %tmp, i32 0, i32 1, !dbg !7547
  store i8* %arraydecay, i8** %identifier, align 8, !dbg !7548
  %26 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7549
  %bm24 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %26, i32 0, i32 0, !dbg !7550
  %27 = load %struct.BMesh*, %struct.BMesh** %bm24, align 8, !dbg !7550
  %vdata25 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %27, i32 0, i32 24, !dbg !7551
  %layers26 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %vdata25, i32 0, i32 0, !dbg !7552
  %28 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers26, align 8, !dbg !7552
  %29 = load i32, i32* %a, align 4, !dbg !7553
  %idxprom27 = sext i32 %29 to i64, !dbg !7549
  %arrayidx28 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %28, i64 %idxprom27, !dbg !7549
  %name29 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx28, i32 0, i32 8, !dbg !7554
  %arraydecay30 = getelementptr inbounds [64 x i8], [64 x i8]* %name29, i64 0, i64 0, !dbg !7549
  %name31 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %tmp, i32 0, i32 3, !dbg !7555
  store i8* %arraydecay30, i8** %name31, align 8, !dbg !7556
  call void @RNA_enum_item_add(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* %tmp), !dbg !7557
  br label %for.inc, !dbg !7558

for.inc:                                          ; preds = %if.end, %if.then18
  %30 = load i32, i32* %a, align 4, !dbg !7559
  %inc = add nsw i32 %30, 1, !dbg !7559
  store i32 %inc, i32* %a, align 4, !dbg !7559
  br label %for.cond, !dbg !7560, !llvm.loop !7561

for.end:                                          ; preds = %for.cond
  br label %if.end32, !dbg !7563

if.end32:                                         ; preds = %for.end, %land.lhs.true5, %land.lhs.true2, %land.lhs.true, %entry
  call void @RNA_enum_item_end(%struct.EnumPropertyItem** %item, i32* %totitem), !dbg !7564
  %31 = load i8*, i8** %r_free.addr, align 8, !dbg !7565
  store i8 1, i8* %31, align 1, !dbg !7566
  %32 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !7567
  ret %struct.EnumPropertyItem* %32, !dbg !7568
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_solidify(%struct.wmOperatorType* %ot) #0 !dbg !7569 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7570, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7572, metadata !DIExpression()), !dbg !7573
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7574
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7575
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.190, i64 0, i64 0), i8** %name, align 8, !dbg !7576
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7577
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7578
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.191, i64 0, i64 0), i8** %description, align 8, !dbg !7579
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7580
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7581
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.192, i64 0, i64 0), i8** %idname, align 8, !dbg !7582
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7583
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !7584
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_solidify_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7585
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7586
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !7587
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !7588
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7589
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !7590
  store i16 3, i16* %flag, align 8, !dbg !7591
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7592
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !7593
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7593
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !7592
  %call = call %struct.PropertyRNA* @RNA_def_float(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.193, i64 0, i64 0), float 0x3F847AE140000000, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.193, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), float -1.000000e+01, float 1.000000e+01), !dbg !7594
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !7595
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7596
  call void @RNA_def_property_ui_range(%struct.PropertyRNA* %9, double -1.000000e+01, double 1.000000e+01, double 1.000000e-01, i32 4), !dbg !7597
  ret void, !dbg !7598
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_solidify_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7599 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %thickness = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7600, metadata !DIExpression()), !dbg !7601
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7602, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7604, metadata !DIExpression()), !dbg !7605
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7606
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7607
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7605
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !7608, metadata !DIExpression()), !dbg !7609
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7610
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !7611
  %2 = load i8*, i8** %data, align 8, !dbg !7611
  %3 = bitcast i8* %2 to %struct.Mesh*, !dbg !7610
  store %struct.Mesh* %3, %struct.Mesh** %me, align 8, !dbg !7609
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7612, metadata !DIExpression()), !dbg !7613
  %4 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !7614
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %4, i32 0, i32 20, !dbg !7615
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !7615
  store %struct.BMEditMesh* %5, %struct.BMEditMesh** %em, align 8, !dbg !7613
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !7616, metadata !DIExpression()), !dbg !7617
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7618
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !7619
  %7 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !7619
  store %struct.BMesh* %7, %struct.BMesh** %bm, align 8, !dbg !7617
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !7620, metadata !DIExpression()), !dbg !7621
  call void @llvm.dbg.declare(metadata float* %thickness, metadata !7622, metadata !DIExpression()), !dbg !7623
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7624
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !7625
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7625
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.193, i64 0, i64 0)), !dbg !7626
  store float %call2, float* %thickness, align 4, !dbg !7623
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7627
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7629
  %12 = load float, float* %thickness, align 4, !dbg !7630
  %conv = fpext float %12 to double, !dbg !7630
  %call3 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %10, %struct.BMOperator* %bmop, %struct.wmOperator* %11, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.456, i64 0, i64 0), i32 1, double %conv), !dbg !7631
  %tobool = icmp ne i8 %call3, 0, !dbg !7631
  br i1 %tobool, label %if.end, label %if.then, !dbg !7632

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !7633
  br label %return, !dbg !7633

if.end:                                           ; preds = %entry
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7635
  %slots_in = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 0, !dbg !7636
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_in, i64 0, i64 0, !dbg !7637
  call void @BMO_slot_buffer_hflag_disable(%struct.BMesh* %13, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.457, i64 0, i64 0), i8 zeroext 8, i8 zeroext 1, i8 zeroext 1), !dbg !7638
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7639
  call void @BMO_op_exec(%struct.BMesh* %14, %struct.BMOperator* %bmop), !dbg !7640
  %15 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7641
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !7642
  %arraydecay4 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !7643
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %15, %struct.BMOpSlot* %arraydecay4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.422, i64 0, i64 0), i8 zeroext 8, i8 zeroext 1, i8 zeroext 1), !dbg !7644
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7645
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7647
  %call5 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %16, %struct.BMOperator* %bmop, %struct.wmOperator* %17, i8 zeroext 1), !dbg !7648
  %tobool6 = icmp ne i8 %call5, 0, !dbg !7648
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !7649

if.then7:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !7650
  br label %return, !dbg !7650

if.end8:                                          ; preds = %if.end
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7652
  call void @EDBM_update_generic(%struct.BMEditMesh* %18, i8 zeroext 1, i8 zeroext 1), !dbg !7653
  store i32 4, i32* %retval, align 4, !dbg !7654
  br label %return, !dbg !7654

return:                                           ; preds = %if.end8, %if.then7, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !7655
  ret i32 %19, !dbg !7655
}

declare dso_local void @RNA_def_property_ui_range(%struct.PropertyRNA*, double, double, double, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_knife_cut(%struct.wmOperatorType* %ot) #0 !dbg !7656 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !7657, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7659, metadata !DIExpression()), !dbg !7660
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7661
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !7662
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.194, i64 0, i64 0), i8** %name, align 8, !dbg !7663
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7664
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !7665
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.195, i64 0, i64 0), i8** %description, align 8, !dbg !7666
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7667
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !7668
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.196, i64 0, i64 0), i8** %idname, align 8, !dbg !7669
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7670
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !7671
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_gesture_lines_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !7672
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7673
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !7674
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_gesture_lines_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !7675
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7676
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 4, !dbg !7677
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_knife_cut_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7678
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7679
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 9, !dbg !7680
  store i32 (%struct.bContext*)* @EDBM_view3d_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !7681
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7682
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 19, !dbg !7683
  store i16 3, i16* %flag, align 8, !dbg !7684
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7685
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !7686
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !7686
  %10 = bitcast %struct.StructRNA* %9 to i8*, !dbg !7685
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @knife_items, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !7687
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7688
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 11, !dbg !7689
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !7689
  %13 = bitcast %struct.StructRNA* %12 to i8*, !dbg !7688
  %call2 = call %struct.PropertyRNA* @RNA_def_property(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i64 0, i64 0), i32 6, i32 0), !dbg !7690
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !7691
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7692
  call void @RNA_def_property_struct_runtime(%struct.PropertyRNA* %14, %struct.StructRNA* @RNA_OperatorMousePath), !dbg !7693
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !7694
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !7695
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !7695
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !7694
  %call4 = call %struct.PropertyRNA* @RNA_def_int(i8* %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.198, i64 0, i64 0), i32 9, i32 0, i32 2147483647, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.199, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), i32 0, i32 2147483647), !dbg !7696
  ret void, !dbg !7697
}

declare dso_local i32 @WM_gesture_lines_invoke(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

declare dso_local i32 @WM_gesture_lines_modal(%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_knife_cut_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7698 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %bv = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %be = alloca %struct.BMEdge*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %isect = alloca float, align 4
  %len = alloca i32, align 4
  %isected = alloca i32, align 4
  %i = alloca i32, align 4
  %numcuts = alloca i16, align 2
  %mode = alloca i16, align 2
  %slot_edge_percents = alloca %struct.BMOpSlot*, align 8
  %screen_vert_coords = alloca [2 x float]*, align 8
  %sco = alloca [2 x float]*, align 8
  %mouse_path = alloca [2 x float]*, align 8
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %itemptr = alloca %struct.PointerRNA, align 8
  %is_cut = alloca i8, align 1
  %sco_a = alloca float*, align 8
  %sco_b = alloca float*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7699, metadata !DIExpression()), !dbg !7700
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7701, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !7703, metadata !DIExpression()), !dbg !7704
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7705
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !7706
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !7704
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7707, metadata !DIExpression()), !dbg !7708
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7709
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !7710
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !7708
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !7711, metadata !DIExpression()), !dbg !7712
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7713
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !7714
  %3 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !7714
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !7712
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !7715, metadata !DIExpression()), !dbg !7716
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7717
  %call3 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %4), !dbg !7718
  store %struct.ARegion* %call3, %struct.ARegion** %ar, align 8, !dbg !7716
  call void @llvm.dbg.declare(metadata %struct.BMVert** %bv, metadata !7719, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !7721, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %be, metadata !7723, metadata !DIExpression()), !dbg !7724
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !7725, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.declare(metadata float* %isect, metadata !7727, metadata !DIExpression()), !dbg !7728
  store float 0.000000e+00, float* %isect, align 4, !dbg !7728
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7729, metadata !DIExpression()), !dbg !7730
  store i32 0, i32* %len, align 4, !dbg !7730
  call void @llvm.dbg.declare(metadata i32* %isected, metadata !7731, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7733, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.declare(metadata i16* %numcuts, metadata !7735, metadata !DIExpression()), !dbg !7736
  store i16 1, i16* %numcuts, align 2, !dbg !7736
  call void @llvm.dbg.declare(metadata i16* %mode, metadata !7737, metadata !DIExpression()), !dbg !7738
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7739
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !7740
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7740
  %call4 = call i32 @RNA_int_get(%struct.PointerRNA* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0)), !dbg !7741
  %conv = trunc i32 %call4 to i16, !dbg !7741
  store i16 %conv, i16* %mode, align 2, !dbg !7738
  call void @llvm.dbg.declare(metadata %struct.BMOpSlot** %slot_edge_percents, metadata !7742, metadata !DIExpression()), !dbg !7745
  call void @llvm.dbg.declare(metadata [2 x float]** %screen_vert_coords, metadata !7746, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.declare(metadata [2 x float]** %sco, metadata !7749, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.declare(metadata [2 x float]** %mouse_path, metadata !7751, metadata !DIExpression()), !dbg !7752
  %7 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7753
  %cmp = icmp eq %struct.Object* null, %7, !dbg !7753
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7753

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7753
  %cmp6 = icmp eq %struct.ARegion* null, %8, !dbg !7753
  br i1 %cmp6, label %if.then, label %lor.lhs.false8, !dbg !7753

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7753
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %9, i32 0, i32 30, !dbg !7753
  %10 = load i8*, i8** %regiondata, align 8, !dbg !7753
  %cmp9 = icmp eq i8* null, %10, !dbg !7753
  br i1 %cmp9, label %if.then, label %if.end, !dbg !7755

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !7756
  br label %return, !dbg !7756

if.end:                                           ; preds = %lor.lhs.false8
  %11 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7757
  %totvertsel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %11, i32 0, i32 4, !dbg !7759
  %12 = load i32, i32* %totvertsel, align 8, !dbg !7759
  %cmp11 = icmp slt i32 %12, 2, !dbg !7760
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !7761

if.then13:                                        ; preds = %if.end
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7762
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 8, !dbg !7764
  %14 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !7764
  call void @BKE_report(%struct.ReportList* %14, i32 32, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.458, i64 0, i64 0)), !dbg !7765
  store i32 2, i32* %retval, align 4, !dbg !7766
  br label %return, !dbg !7766

if.end14:                                         ; preds = %if.end
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7767
  %ptr15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 7, !dbg !7768
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr15, align 8, !dbg !7768
  %call16 = call i32 @RNA_collection_length(%struct.PointerRNA* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i64 0, i64 0)), !dbg !7769
  store i32 %call16, i32* %len, align 4, !dbg !7770
  %17 = load i32, i32* %len, align 4, !dbg !7771
  %cmp17 = icmp slt i32 %17, 2, !dbg !7773
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !7774

if.then19:                                        ; preds = %if.end14
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7775
  %reports20 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %18, i32 0, i32 8, !dbg !7777
  %19 = load %struct.ReportList*, %struct.ReportList** %reports20, align 8, !dbg !7777
  call void @BKE_report(%struct.ReportList* %19, i32 32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.459, i64 0, i64 0)), !dbg !7778
  store i32 2, i32* %retval, align 4, !dbg !7779
  br label %return, !dbg !7779

if.end21:                                         ; preds = %if.end14
  %20 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7780
  %21 = load i32, i32* %len, align 4, !dbg !7781
  %conv22 = sext i32 %21 to i64, !dbg !7781
  %mul = mul i64 %conv22, 8, !dbg !7782
  %call23 = call i8* %20(i64 %mul, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.edbm_knife_cut_exec, i64 0, i64 0)), !dbg !7780
  %22 = bitcast i8* %call23 to [2 x float]*, !dbg !7780
  store [2 x float]* %22, [2 x float]** %mouse_path, align 8, !dbg !7783
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !7784, metadata !DIExpression()), !dbg !7827
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7828
  %ptr24 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %23, i32 0, i32 7, !dbg !7828
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr24, align 8, !dbg !7828
  call void @RNA_collection_begin(%struct.PointerRNA* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i64 0, i64 0), %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !7828
  br label %for.cond, !dbg !7828

for.cond:                                         ; preds = %for.inc, %if.end21
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !7830
  %25 = load i32, i32* %valid, align 8, !dbg !7830
  %tobool = icmp ne i32 %25, 0, !dbg !7828
  br i1 %tobool, label %for.body, label %for.end, !dbg !7828

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr, metadata !7832, metadata !DIExpression()), !dbg !7834
  %ptr25 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !7834
  %26 = bitcast %struct.PointerRNA* %itemptr to i8*, !dbg !7834
  %27 = bitcast %struct.PointerRNA* %ptr25 to i8*, !dbg !7834
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false), !dbg !7834
  %28 = load [2 x float]*, [2 x float]** %mouse_path, align 8, !dbg !7835
  %29 = load i32, i32* %len, align 4, !dbg !7837
  %idxprom = sext i32 %29 to i64, !dbg !7835
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %28, i64 %idxprom, !dbg !7835
  %30 = bitcast [2 x float]* %arrayidx to float*, !dbg !7838
  call void @RNA_float_get_array(%struct.PointerRNA* %itemptr, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.460, i64 0, i64 0), float* %30), !dbg !7839
  br label %for.inc, !dbg !7840

for.inc:                                          ; preds = %for.body
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !7830
  br label %for.cond, !dbg !7830, !llvm.loop !7841

for.end:                                          ; preds = %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !7843
  %31 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !7844
  %32 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7845
  %regiondata26 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %32, i32 0, i32 30, !dbg !7846
  %33 = load i8*, i8** %regiondata26, align 8, !dbg !7846
  %34 = bitcast i8* %33 to %struct.RegionView3D*, !dbg !7845
  call void @ED_view3d_init_mats_rv3d(%struct.Object* %31, %struct.RegionView3D* %34), !dbg !7847
  %35 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7848
  %36 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7849
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %36, i32 0, i32 0, !dbg !7850
  %37 = load i32, i32* %totvert, align 8, !dbg !7850
  %conv27 = sext i32 %37 to i64, !dbg !7849
  %mul28 = mul i64 %conv27, 4, !dbg !7851
  %mul29 = mul i64 %mul28, 2, !dbg !7852
  %call30 = call i8* %35(i64 %mul29, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.edbm_knife_cut_exec, i64 0, i64 0)), !dbg !7848
  %38 = bitcast i8* %call30 to [2 x float]*, !dbg !7848
  store [2 x float]* %38, [2 x float]** %sco, align 8, !dbg !7853
  store [2 x float]* %38, [2 x float]** %screen_vert_coords, align 8, !dbg !7854
  %39 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7855
  %call31 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %39, i8 zeroext 1, i8* null), !dbg !7855
  %40 = bitcast i8* %call31 to %struct.BMVert*, !dbg !7855
  store %struct.BMVert* %40, %struct.BMVert** %bv, align 8, !dbg !7855
  store i32 0, i32* %i, align 4, !dbg !7855
  br label %for.cond32, !dbg !7855

for.cond32:                                       ; preds = %for.inc42, %for.end
  %41 = load %struct.BMVert*, %struct.BMVert** %bv, align 8, !dbg !7857
  %tobool33 = icmp ne %struct.BMVert* %41, null, !dbg !7855
  br i1 %tobool33, label %for.body34, label %for.end44, !dbg !7855

for.body34:                                       ; preds = %for.cond32
  %42 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7859
  %43 = load %struct.BMVert*, %struct.BMVert** %bv, align 8, !dbg !7862
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %43, i32 0, i32 2, !dbg !7863
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7862
  %44 = load [2 x float]*, [2 x float]** %sco, align 8, !dbg !7864
  %arraydecay35 = getelementptr inbounds [2 x float], [2 x float]* %44, i64 0, i64 0, !dbg !7865
  %call36 = call i32 @ED_view3d_project_float_object(%struct.ARegion* %42, float* %arraydecay, float* %arraydecay35, i32 4), !dbg !7866
  %cmp37 = icmp ne i32 %call36, 0, !dbg !7867
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !7868

if.then39:                                        ; preds = %for.body34
  %45 = load [2 x float]*, [2 x float]** %sco, align 8, !dbg !7869
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %45, i64 0, i64 0, !dbg !7871
  call void @copy_v2_fl(float* %arraydecay40, float 0x47EFFFFFE0000000), !dbg !7872
  br label %if.end41, !dbg !7873

if.end41:                                         ; preds = %if.then39, %for.body34
  %46 = load %struct.BMVert*, %struct.BMVert** %bv, align 8, !dbg !7874
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %46, i32 0, i32 0, !dbg !7874
  %47 = load i32, i32* %i, align 4, !dbg !7874
  call void @_bm_elem_index_set(%struct.BMHeader* %head, i32 %47), !dbg !7874
  %48 = load [2 x float]*, [2 x float]** %sco, align 8, !dbg !7875
  %incdec.ptr = getelementptr inbounds [2 x float], [2 x float]* %48, i32 1, !dbg !7875
  store [2 x float]* %incdec.ptr, [2 x float]** %sco, align 8, !dbg !7875
  br label %for.inc42, !dbg !7876

for.inc42:                                        ; preds = %if.end41
  %call43 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7857
  %49 = bitcast i8* %call43 to %struct.BMVert*, !dbg !7857
  store %struct.BMVert* %49, %struct.BMVert** %bv, align 8, !dbg !7857
  %50 = load i32, i32* %i, align 4, !dbg !7857
  %inc = add nsw i32 %50, 1, !dbg !7857
  store i32 %inc, i32* %i, align 4, !dbg !7857
  br label %for.cond32, !dbg !7857, !llvm.loop !7877

for.end44:                                        ; preds = %for.cond32
  %51 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7879
  %elem_index_dirty = getelementptr inbounds %struct.BMesh, %struct.BMesh* %51, i32 0, i32 7, !dbg !7880
  %52 = load i8, i8* %elem_index_dirty, align 4, !dbg !7881
  %conv45 = zext i8 %52 to i32, !dbg !7881
  %and = and i32 %conv45, -2, !dbg !7881
  %conv46 = trunc i32 %and to i8, !dbg !7881
  store i8 %conv46, i8* %elem_index_dirty, align 4, !dbg !7881
  %53 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7882
  %54 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7884
  %call47 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %53, %struct.BMOperator* %bmop, %struct.wmOperator* %54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.461, i64 0, i64 0)), !dbg !7885
  %tobool48 = icmp ne i8 %call47, 0, !dbg !7885
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !7886

if.then49:                                        ; preds = %for.end44
  %55 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7887
  %56 = load [2 x float]*, [2 x float]** %mouse_path, align 8, !dbg !7889
  %57 = bitcast [2 x float]* %56 to i8*, !dbg !7889
  call void %55(i8* %57), !dbg !7887
  %58 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7890
  %59 = load [2 x float]*, [2 x float]** %screen_vert_coords, align 8, !dbg !7891
  %60 = bitcast [2 x float]* %59 to i8*, !dbg !7891
  call void %58(i8* %60), !dbg !7890
  store i32 2, i32* %retval, align 4, !dbg !7892
  br label %return, !dbg !7892

if.end50:                                         ; preds = %for.end44
  %slots_in = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 0, !dbg !7893
  %arraydecay51 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_in, i64 0, i64 0, !dbg !7894
  %call52 = call %struct.BMOpSlot* @BMO_slot_get(%struct.BMOpSlot* %arraydecay51, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.462, i64 0, i64 0)), !dbg !7895
  store %struct.BMOpSlot* %call52, %struct.BMOpSlot** %slot_edge_percents, align 8, !dbg !7896
  %61 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7897
  %call53 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %61, i8 zeroext 2, i8* null), !dbg !7897
  %62 = bitcast i8* %call53 to %struct.BMEdge*, !dbg !7897
  store %struct.BMEdge* %62, %struct.BMEdge** %be, align 8, !dbg !7897
  br label %for.cond54, !dbg !7897

for.cond54:                                       ; preds = %for.inc96, %if.end50
  %63 = load %struct.BMEdge*, %struct.BMEdge** %be, align 8, !dbg !7899
  %tobool55 = icmp ne %struct.BMEdge* %63, null, !dbg !7897
  br i1 %tobool55, label %for.body56, label %for.end98, !dbg !7897

for.body56:                                       ; preds = %for.cond54
  call void @llvm.dbg.declare(metadata i8* %is_cut, metadata !7901, metadata !DIExpression()), !dbg !7903
  store i8 0, i8* %is_cut, align 1, !dbg !7903
  %64 = load %struct.BMEdge*, %struct.BMEdge** %be, align 8, !dbg !7904
  %head57 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %64, i32 0, i32 0, !dbg !7904
  %call58 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head57, i8 zeroext 1), !dbg !7904
  %tobool59 = icmp ne i8 %call58, 0, !dbg !7904
  br i1 %tobool59, label %if.then60, label %if.end94, !dbg !7906

if.then60:                                        ; preds = %for.body56
  call void @llvm.dbg.declare(metadata float** %sco_a, metadata !7907, metadata !DIExpression()), !dbg !7909
  %65 = load [2 x float]*, [2 x float]** %screen_vert_coords, align 8, !dbg !7910
  %66 = load %struct.BMEdge*, %struct.BMEdge** %be, align 8, !dbg !7911
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %66, i32 0, i32 2, !dbg !7911
  %67 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !7911
  %head61 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %67, i32 0, i32 0, !dbg !7911
  %call62 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head61), !dbg !7911
  %idxprom63 = sext i32 %call62 to i64, !dbg !7910
  %arrayidx64 = getelementptr inbounds [2 x float], [2 x float]* %65, i64 %idxprom63, !dbg !7910
  %arraydecay65 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx64, i64 0, i64 0, !dbg !7910
  store float* %arraydecay65, float** %sco_a, align 8, !dbg !7909
  call void @llvm.dbg.declare(metadata float** %sco_b, metadata !7912, metadata !DIExpression()), !dbg !7913
  %68 = load [2 x float]*, [2 x float]** %screen_vert_coords, align 8, !dbg !7914
  %69 = load %struct.BMEdge*, %struct.BMEdge** %be, align 8, !dbg !7915
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %69, i32 0, i32 3, !dbg !7915
  %70 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !7915
  %head66 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %70, i32 0, i32 0, !dbg !7915
  %call67 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head66), !dbg !7915
  %idxprom68 = sext i32 %call67 to i64, !dbg !7914
  %arrayidx69 = getelementptr inbounds [2 x float], [2 x float]* %68, i64 %idxprom68, !dbg !7914
  %arraydecay70 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx69, i64 0, i64 0, !dbg !7914
  store float* %arraydecay70, float** %sco_b, align 8, !dbg !7913
  %71 = load float*, float** %sco_a, align 8, !dbg !7916
  %arrayidx71 = getelementptr inbounds float, float* %71, i64 0, !dbg !7916
  %72 = load float, float* %arrayidx71, align 4, !dbg !7916
  %cmp72 = fcmp une float %72, 0x47EFFFFFE0000000, !dbg !7918
  br i1 %cmp72, label %land.lhs.true, label %if.end93, !dbg !7919

land.lhs.true:                                    ; preds = %if.then60
  %73 = load float*, float** %sco_b, align 8, !dbg !7920
  %arrayidx74 = getelementptr inbounds float, float* %73, i64 0, !dbg !7920
  %74 = load float, float* %arrayidx74, align 4, !dbg !7920
  %cmp75 = fcmp une float %74, 0x47EFFFFFE0000000, !dbg !7921
  br i1 %cmp75, label %if.then77, label %if.end93, !dbg !7922

if.then77:                                        ; preds = %land.lhs.true
  %75 = load float*, float** %sco_a, align 8, !dbg !7923
  %76 = load float*, float** %sco_b, align 8, !dbg !7925
  %77 = load [2 x float]*, [2 x float]** %mouse_path, align 8, !dbg !7926
  %78 = load i32, i32* %len, align 4, !dbg !7927
  %79 = load i16, i16* %mode, align 2, !dbg !7928
  %conv78 = trunc i16 %79 to i8, !dbg !7928
  %call79 = call float @bm_edge_seg_isect(float* %75, float* %76, [2 x float]* %77, i32 %78, i8 zeroext %conv78, i32* %isected), !dbg !7929
  store float %call79, float* %isect, align 4, !dbg !7930
  %80 = load float, float* %isect, align 4, !dbg !7931
  %cmp80 = fcmp une float %80, 0.000000e+00, !dbg !7933
  br i1 %cmp80, label %if.then82, label %if.end92, !dbg !7934

if.then82:                                        ; preds = %if.then77
  %81 = load i16, i16* %mode, align 2, !dbg !7935
  %conv83 = sext i16 %81 to i32, !dbg !7935
  %cmp84 = icmp ne i32 %conv83, 3, !dbg !7938
  br i1 %cmp84, label %land.lhs.true86, label %if.end91, !dbg !7939

land.lhs.true86:                                  ; preds = %if.then82
  %82 = load i16, i16* %mode, align 2, !dbg !7940
  %conv87 = sext i16 %82 to i32, !dbg !7940
  %cmp88 = icmp ne i32 %conv87, 2, !dbg !7941
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !7942

if.then90:                                        ; preds = %land.lhs.true86
  %83 = load %struct.BMOpSlot*, %struct.BMOpSlot** %slot_edge_percents, align 8, !dbg !7943
  %84 = load %struct.BMEdge*, %struct.BMEdge** %be, align 8, !dbg !7945
  %85 = bitcast %struct.BMEdge* %84 to i8*, !dbg !7945
  %86 = load float, float* %isect, align 4, !dbg !7946
  call void @BMO_slot_map_float_insert(%struct.BMOperator* %bmop, %struct.BMOpSlot* %83, i8* %85, float %86), !dbg !7947
  br label %if.end91, !dbg !7948

if.end91:                                         ; preds = %if.then90, %land.lhs.true86, %if.then82
  br label %if.end92, !dbg !7949

if.end92:                                         ; preds = %if.end91, %if.then77
  br label %if.end93, !dbg !7950

if.end93:                                         ; preds = %if.end92, %land.lhs.true, %if.then60
  br label %if.end94, !dbg !7951

if.end94:                                         ; preds = %if.end93, %for.body56
  %87 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7952
  %88 = load %struct.BMEdge*, %struct.BMEdge** %be, align 8, !dbg !7952
  %oflags = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %88, i32 0, i32 1, !dbg !7952
  %89 = load %struct.BMFlagLayer*, %struct.BMFlagLayer** %oflags, align 8, !dbg !7952
  %90 = load i8, i8* %is_cut, align 1, !dbg !7952
  %conv95 = zext i8 %90 to i32, !dbg !7952
  call void @_bmo_elem_flag_set(%struct.BMesh* %87, %struct.BMFlagLayer* %89, i16 signext 1, i32 %conv95), !dbg !7952
  br label %for.inc96, !dbg !7953

for.inc96:                                        ; preds = %if.end94
  %call97 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !7899
  %91 = bitcast i8* %call97 to %struct.BMEdge*, !dbg !7899
  store %struct.BMEdge* %91, %struct.BMEdge** %be, align 8, !dbg !7899
  br label %for.cond54, !dbg !7899, !llvm.loop !7954

for.end98:                                        ; preds = %for.cond54
  %92 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7956
  %93 = load [2 x float]*, [2 x float]** %screen_vert_coords, align 8, !dbg !7957
  %94 = bitcast [2 x float]* %93 to i8*, !dbg !7957
  call void %92(i8* %94), !dbg !7956
  %95 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7958
  %96 = load [2 x float]*, [2 x float]** %mouse_path, align 8, !dbg !7959
  %97 = bitcast [2 x float]* %96 to i8*, !dbg !7959
  call void %95(i8* %97), !dbg !7958
  %98 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7960
  %slots_in99 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 0, !dbg !7961
  %arraydecay100 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_in99, i64 0, i64 0, !dbg !7962
  call void @BMO_slot_buffer_from_enabled_flag(%struct.BMesh* %98, %struct.BMOperator* %bmop, %struct.BMOpSlot* %arraydecay100, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.427, i64 0, i64 0), i8 zeroext 2, i16 signext 1), !dbg !7963
  %99 = load i16, i16* %mode, align 2, !dbg !7964
  %conv101 = sext i16 %99 to i32, !dbg !7964
  %cmp102 = icmp eq i32 %conv101, 2, !dbg !7966
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !7967

if.then104:                                       ; preds = %for.end98
  store i16 1, i16* %numcuts, align 2, !dbg !7968
  br label %if.end105, !dbg !7969

if.end105:                                        ; preds = %if.then104, %for.end98
  %slots_in106 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 0, !dbg !7970
  %arraydecay107 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_in106, i64 0, i64 0, !dbg !7971
  %100 = load i16, i16* %numcuts, align 2, !dbg !7972
  %conv108 = sext i16 %100 to i32, !dbg !7972
  call void @BMO_slot_int_set(%struct.BMOpSlot* %arraydecay107, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.463, i64 0, i64 0), i32 %conv108), !dbg !7973
  %slots_in109 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 0, !dbg !7974
  %arraydecay110 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_in109, i64 0, i64 0, !dbg !7975
  call void @BMO_slot_int_set(%struct.BMOpSlot* %arraydecay110, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.464, i64 0, i64 0), i32 3), !dbg !7976
  %slots_in111 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 0, !dbg !7977
  %arraydecay112 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_in111, i64 0, i64 0, !dbg !7978
  call void @BMO_slot_bool_set(%struct.BMOpSlot* %arraydecay112, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.465, i64 0, i64 0), i8 zeroext 0), !dbg !7979
  %slots_in113 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 0, !dbg !7980
  %arraydecay114 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_in113, i64 0, i64 0, !dbg !7981
  call void @BMO_slot_bool_set(%struct.BMOpSlot* %arraydecay114, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.466, i64 0, i64 0), i8 zeroext 0), !dbg !7982
  %slots_in115 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 0, !dbg !7983
  %arraydecay116 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_in115, i64 0, i64 0, !dbg !7984
  call void @BMO_slot_float_set(%struct.BMOpSlot* %arraydecay116, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.467, i64 0, i64 0), float 0.000000e+00), !dbg !7985
  %101 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7986
  call void @BMO_op_exec(%struct.BMesh* %101, %struct.BMOperator* %bmop), !dbg !7987
  %102 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7988
  %103 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7990
  %call117 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %102, %struct.BMOperator* %bmop, %struct.wmOperator* %103, i8 zeroext 1), !dbg !7991
  %tobool118 = icmp ne i8 %call117, 0, !dbg !7991
  br i1 %tobool118, label %if.end120, label %if.then119, !dbg !7992

if.then119:                                       ; preds = %if.end105
  store i32 2, i32* %retval, align 4, !dbg !7993
  br label %return, !dbg !7993

if.end120:                                        ; preds = %if.end105
  %104 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7995
  call void @EDBM_update_generic(%struct.BMEditMesh* %104, i8 zeroext 1, i8 zeroext 1), !dbg !7996
  store i32 4, i32* %retval, align 4, !dbg !7997
  br label %return, !dbg !7997

return:                                           ; preds = %if.end120, %if.then119, %if.then49, %if.then19, %if.then13, %if.then
  %105 = load i32, i32* %retval, align 4, !dbg !7998
  ret i32 %105, !dbg !7998
}

declare dso_local i32 @EDBM_view3d_poll(%struct.bContext*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_property(i8*, i8*, i32, i32) #2

declare dso_local void @RNA_def_property_struct_runtime(%struct.PropertyRNA*, %struct.StructRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_separate(%struct.wmOperatorType* %ot) #0 !dbg !7999 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8000, metadata !DIExpression()), !dbg !8001
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8002
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8003
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.200, i64 0, i64 0), i8** %name, align 8, !dbg !8004
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8005
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8006
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.201, i64 0, i64 0), i8** %description, align 8, !dbg !8007
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8008
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8009
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.202, i64 0, i64 0), i8** %idname, align 8, !dbg !8010
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8011
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8012
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8013
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8014
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8015
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_separate_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8016
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8017
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !8018
  store i32 (%struct.bContext*)* @ED_operator_scene_editable, i32 (%struct.bContext*)** %poll, align 8, !dbg !8019
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8020
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !8021
  store i16 2, i16* %flag, align 8, !dbg !8022
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8023
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8024
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8024
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8023
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @prop_separate_types, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !8025
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8026
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 13, !dbg !8027
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8028
  ret void, !dbg !8029
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_separate_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8030 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %type = alloca i32, align 4
  %retval3 = alloca i32, align 4
  %base = alloca %struct.Base*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %ctx_data_list = alloca %struct.ListBase, align 8
  %ctx_link = alloca %struct.CollectionPointerLink*, align 8
  %base_iter = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %bm_old = alloca %struct.BMesh*, align 8
  %retval_iter = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8031, metadata !DIExpression()), !dbg !8032
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8033, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !8035, metadata !DIExpression()), !dbg !8098
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8099
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !8100
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !8098
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !8101, metadata !DIExpression()), !dbg !8102
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8103
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !8104
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !8102
  call void @llvm.dbg.declare(metadata i32* %type, metadata !8105, metadata !DIExpression()), !dbg !8106
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8107
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8108
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8108
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0)), !dbg !8109
  store i32 %call2, i32* %type, align 4, !dbg !8106
  call void @llvm.dbg.declare(metadata i32* %retval3, metadata !8110, metadata !DIExpression()), !dbg !8111
  store i32 0, i32* %retval3, align 4, !dbg !8111
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8112
  %call4 = call i32 @ED_operator_editmesh(%struct.bContext* %4), !dbg !8114
  %tobool = icmp ne i32 %call4, 0, !dbg !8114
  br i1 %tobool, label %if.then, label %if.else40, !dbg !8115

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !8116, metadata !DIExpression()), !dbg !8120
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8121
  %call5 = call %struct.Base* @CTX_data_active_base(%struct.bContext* %5), !dbg !8122
  store %struct.Base* %call5, %struct.Base** %base, align 8, !dbg !8120
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8123, metadata !DIExpression()), !dbg !8124
  %6 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8125
  %object = getelementptr inbounds %struct.Base, %struct.Base* %6, i32 0, i32 7, !dbg !8126
  %7 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !8126
  %call6 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %7), !dbg !8127
  store %struct.BMEditMesh* %call6, %struct.BMEditMesh** %em, align 8, !dbg !8124
  %8 = load i32, i32* %type, align 4, !dbg !8128
  %cmp = icmp eq i32 %8, 0, !dbg !8130
  br i1 %cmp, label %if.then7, label %if.end15, !dbg !8131

if.then7:                                         ; preds = %if.then
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8132
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !8135
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8135
  %totvertsel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 4, !dbg !8136
  %11 = load i32, i32* %totvertsel, align 8, !dbg !8136
  %cmp8 = icmp eq i32 %11, 0, !dbg !8137
  br i1 %cmp8, label %land.lhs.true, label %if.end, !dbg !8138

land.lhs.true:                                    ; preds = %if.then7
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8139
  %bm9 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !8140
  %13 = load %struct.BMesh*, %struct.BMesh** %bm9, align 8, !dbg !8140
  %totedgesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %13, i32 0, i32 5, !dbg !8141
  %14 = load i32, i32* %totedgesel, align 4, !dbg !8141
  %cmp10 = icmp eq i32 %14, 0, !dbg !8142
  br i1 %cmp10, label %land.lhs.true11, label %if.end, !dbg !8143

land.lhs.true11:                                  ; preds = %land.lhs.true
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8144
  %bm12 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !8145
  %16 = load %struct.BMesh*, %struct.BMesh** %bm12, align 8, !dbg !8145
  %totfacesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %16, i32 0, i32 6, !dbg !8146
  %17 = load i32, i32* %totfacesel, align 8, !dbg !8146
  %cmp13 = icmp eq i32 %17, 0, !dbg !8147
  br i1 %cmp13, label %if.then14, label %if.end, !dbg !8148

if.then14:                                        ; preds = %land.lhs.true11
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8149
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %18, i32 0, i32 8, !dbg !8151
  %19 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8151
  call void @BKE_report(%struct.ReportList* %19, i32 32, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.474, i64 0, i64 0)), !dbg !8152
  store i32 2, i32* %retval, align 4, !dbg !8153
  br label %return, !dbg !8153

if.end:                                           ; preds = %land.lhs.true11, %land.lhs.true, %if.then7
  br label %if.end15, !dbg !8154

if.end15:                                         ; preds = %if.end, %if.then
  %20 = load i32, i32* %type, align 4, !dbg !8155
  %cmp16 = icmp eq i32 %20, 0, !dbg !8157
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !8158

if.then17:                                        ; preds = %if.end15
  %21 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !8159
  %22 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8160
  %23 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8161
  %24 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8162
  %bm18 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %24, i32 0, i32 0, !dbg !8163
  %25 = load %struct.BMesh*, %struct.BMesh** %bm18, align 8, !dbg !8163
  %call19 = call zeroext i8 @mesh_separate_selected(%struct.Main* %21, %struct.Scene* %22, %struct.Base* %23, %struct.BMesh* %25), !dbg !8164
  %conv = zext i8 %call19 to i32, !dbg !8164
  store i32 %conv, i32* %retval3, align 4, !dbg !8165
  br label %if.end36, !dbg !8166

if.else:                                          ; preds = %if.end15
  %26 = load i32, i32* %type, align 4, !dbg !8167
  %cmp20 = icmp eq i32 %26, 1, !dbg !8169
  br i1 %cmp20, label %if.then22, label %if.else26, !dbg !8170

if.then22:                                        ; preds = %if.else
  %27 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !8171
  %28 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8172
  %29 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8173
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8174
  %bm23 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %30, i32 0, i32 0, !dbg !8175
  %31 = load %struct.BMesh*, %struct.BMesh** %bm23, align 8, !dbg !8175
  %call24 = call zeroext i8 @mesh_separate_material(%struct.Main* %27, %struct.Scene* %28, %struct.Base* %29, %struct.BMesh* %31), !dbg !8176
  %conv25 = zext i8 %call24 to i32, !dbg !8176
  store i32 %conv25, i32* %retval3, align 4, !dbg !8177
  br label %if.end35, !dbg !8178

if.else26:                                        ; preds = %if.else
  %32 = load i32, i32* %type, align 4, !dbg !8179
  %cmp27 = icmp eq i32 %32, 2, !dbg !8181
  br i1 %cmp27, label %if.then29, label %if.else33, !dbg !8182

if.then29:                                        ; preds = %if.else26
  %33 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !8183
  %34 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8184
  %35 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8185
  %36 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8186
  %bm30 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %36, i32 0, i32 0, !dbg !8187
  %37 = load %struct.BMesh*, %struct.BMesh** %bm30, align 8, !dbg !8187
  %call31 = call zeroext i8 @mesh_separate_loose(%struct.Main* %33, %struct.Scene* %34, %struct.Base* %35, %struct.BMesh* %37), !dbg !8188
  %conv32 = zext i8 %call31 to i32, !dbg !8188
  store i32 %conv32, i32* %retval3, align 4, !dbg !8189
  br label %if.end34, !dbg !8190

if.else33:                                        ; preds = %if.else26
  br label %if.end34

if.end34:                                         ; preds = %if.else33, %if.then29
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then22
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then17
  %38 = load i32, i32* %retval3, align 4, !dbg !8191
  %tobool37 = icmp ne i32 %38, 0, !dbg !8191
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !8193

if.then38:                                        ; preds = %if.end36
  %39 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8194
  call void @EDBM_update_generic(%struct.BMEditMesh* %39, i8 zeroext 1, i8 zeroext 1), !dbg !8196
  br label %if.end39, !dbg !8197

if.end39:                                         ; preds = %if.then38, %if.end36
  br label %if.end80, !dbg !8198

if.else40:                                        ; preds = %entry
  %40 = load i32, i32* %type, align 4, !dbg !8199
  %cmp41 = icmp eq i32 %40, 0, !dbg !8202
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !8203

if.then43:                                        ; preds = %if.else40
  %41 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8204
  %reports44 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %41, i32 0, i32 8, !dbg !8206
  %42 = load %struct.ReportList*, %struct.ReportList** %reports44, align 8, !dbg !8206
  call void @BKE_report(%struct.ReportList* %42, i32 32, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.475, i64 0, i64 0)), !dbg !8207
  store i32 2, i32* %retval, align 4, !dbg !8208
  br label %return, !dbg !8208

if.end45:                                         ; preds = %if.else40
  call void @llvm.dbg.declare(metadata %struct.ListBase* %ctx_data_list, metadata !8209, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.declare(metadata %struct.CollectionPointerLink** %ctx_link, metadata !8212, metadata !DIExpression()), !dbg !8211
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8211
  %call46 = call i32 @CTX_data_selected_editable_bases(%struct.bContext* %43, %struct.ListBase* %ctx_data_list), !dbg !8211
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %ctx_data_list, i32 0, i32 0, !dbg !8221
  %44 = load i8*, i8** %first, align 8, !dbg !8221
  %45 = bitcast i8* %44 to %struct.CollectionPointerLink*, !dbg !8221
  store %struct.CollectionPointerLink* %45, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !8221
  br label %for.cond, !dbg !8221

for.cond:                                         ; preds = %for.inc, %if.end45
  %46 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !8223
  %tobool47 = icmp ne %struct.CollectionPointerLink* %46, null, !dbg !8221
  br i1 %tobool47, label %for.body, label %for.end, !dbg !8221

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Base** %base_iter, metadata !8225, metadata !DIExpression()), !dbg !8227
  %47 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !8227
  %ptr48 = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %47, i32 0, i32 2, !dbg !8227
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr48, i32 0, i32 2, !dbg !8227
  %48 = load i8*, i8** %data, align 8, !dbg !8227
  %49 = bitcast i8* %48 to %struct.Base*, !dbg !8227
  store %struct.Base* %49, %struct.Base** %base_iter, align 8, !dbg !8227
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8228, metadata !DIExpression()), !dbg !8230
  %50 = load %struct.Base*, %struct.Base** %base_iter, align 8, !dbg !8231
  %object49 = getelementptr inbounds %struct.Base, %struct.Base* %50, i32 0, i32 7, !dbg !8232
  %51 = load %struct.Object*, %struct.Object** %object49, align 8, !dbg !8232
  store %struct.Object* %51, %struct.Object** %ob, align 8, !dbg !8230
  %52 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8233
  %type50 = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 3, !dbg !8235
  %53 = load i16, i16* %type50, align 8, !dbg !8235
  %conv51 = sext i16 %53 to i32, !dbg !8233
  %cmp52 = icmp eq i32 %conv51, 1, !dbg !8236
  br i1 %cmp52, label %if.then54, label %if.end79, !dbg !8237

if.then54:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !8238, metadata !DIExpression()), !dbg !8240
  %54 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8241
  %data55 = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 19, !dbg !8242
  %55 = load i8*, i8** %data55, align 8, !dbg !8242
  %56 = bitcast i8* %55 to %struct.Mesh*, !dbg !8241
  store %struct.Mesh* %56, %struct.Mesh** %me, align 8, !dbg !8240
  %57 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8243
  %id = getelementptr inbounds %struct.Mesh, %struct.Mesh* %57, i32 0, i32 0, !dbg !8245
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !8246
  %58 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !8246
  %cmp56 = icmp eq %struct.Library* %58, null, !dbg !8247
  br i1 %cmp56, label %if.then58, label %if.end78, !dbg !8248

if.then58:                                        ; preds = %if.then54
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm_old, metadata !8249, metadata !DIExpression()), !dbg !8251
  store %struct.BMesh* null, %struct.BMesh** %bm_old, align 8, !dbg !8251
  call void @llvm.dbg.declare(metadata i32* %retval_iter, metadata !8252, metadata !DIExpression()), !dbg !8253
  store i32 0, i32* %retval_iter, align 4, !dbg !8253
  %call59 = call %struct.BMesh* @BM_mesh_create(%struct.BMAllocTemplate* @bm_mesh_allocsize_default), !dbg !8254
  store %struct.BMesh* %call59, %struct.BMesh** %bm_old, align 8, !dbg !8255
  %59 = load %struct.BMesh*, %struct.BMesh** %bm_old, align 8, !dbg !8256
  %60 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8257
  call void @BM_mesh_bm_from_me(%struct.BMesh* %59, %struct.Mesh* %60, i8 zeroext 0, i8 zeroext 0, i32 0), !dbg !8258
  %61 = load i32, i32* %type, align 4, !dbg !8259
  %cmp60 = icmp eq i32 %61, 1, !dbg !8261
  br i1 %cmp60, label %if.then62, label %if.else65, !dbg !8262

if.then62:                                        ; preds = %if.then58
  %62 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !8263
  %63 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8264
  %64 = load %struct.Base*, %struct.Base** %base_iter, align 8, !dbg !8265
  %65 = load %struct.BMesh*, %struct.BMesh** %bm_old, align 8, !dbg !8266
  %call63 = call zeroext i8 @mesh_separate_material(%struct.Main* %62, %struct.Scene* %63, %struct.Base* %64, %struct.BMesh* %65), !dbg !8267
  %conv64 = zext i8 %call63 to i32, !dbg !8267
  store i32 %conv64, i32* %retval_iter, align 4, !dbg !8268
  br label %if.end73, !dbg !8269

if.else65:                                        ; preds = %if.then58
  %66 = load i32, i32* %type, align 4, !dbg !8270
  %cmp66 = icmp eq i32 %66, 2, !dbg !8272
  br i1 %cmp66, label %if.then68, label %if.else71, !dbg !8273

if.then68:                                        ; preds = %if.else65
  %67 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !8274
  %68 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8275
  %69 = load %struct.Base*, %struct.Base** %base_iter, align 8, !dbg !8276
  %70 = load %struct.BMesh*, %struct.BMesh** %bm_old, align 8, !dbg !8277
  %call69 = call zeroext i8 @mesh_separate_loose(%struct.Main* %67, %struct.Scene* %68, %struct.Base* %69, %struct.BMesh* %70), !dbg !8278
  %conv70 = zext i8 %call69 to i32, !dbg !8278
  store i32 %conv70, i32* %retval_iter, align 4, !dbg !8279
  br label %if.end72, !dbg !8280

if.else71:                                        ; preds = %if.else65
  br label %if.end72

if.end72:                                         ; preds = %if.else71, %if.then68
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then62
  %71 = load i32, i32* %retval_iter, align 4, !dbg !8281
  %tobool74 = icmp ne i32 %71, 0, !dbg !8281
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !8283

if.then75:                                        ; preds = %if.end73
  %72 = load %struct.BMesh*, %struct.BMesh** %bm_old, align 8, !dbg !8284
  %73 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8286
  call void @BM_mesh_bm_to_me(%struct.BMesh* %72, %struct.Mesh* %73, i8 zeroext 0), !dbg !8287
  %74 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8288
  %id76 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %74, i32 0, i32 0, !dbg !8289
  call void @DAG_id_tag_update(%struct.ID* %id76, i16 signext 2), !dbg !8290
  %75 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8291
  %76 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8292
  %77 = bitcast %struct.Mesh* %76 to i8*, !dbg !8292
  call void @WM_event_add_notifier(%struct.bContext* %75, i32 274399232, i8* %77), !dbg !8293
  br label %if.end77, !dbg !8294

if.end77:                                         ; preds = %if.then75, %if.end73
  %78 = load %struct.BMesh*, %struct.BMesh** %bm_old, align 8, !dbg !8295
  call void @BM_mesh_free(%struct.BMesh* %78), !dbg !8296
  %79 = load i32, i32* %retval_iter, align 4, !dbg !8297
  %80 = load i32, i32* %retval3, align 4, !dbg !8298
  %or = or i32 %80, %79, !dbg !8298
  store i32 %or, i32* %retval3, align 4, !dbg !8298
  br label %if.end78, !dbg !8299

if.end78:                                         ; preds = %if.end77, %if.then54
  br label %if.end79, !dbg !8300

if.end79:                                         ; preds = %if.end78, %for.body
  br label %for.inc, !dbg !8301

for.inc:                                          ; preds = %if.end79
  %81 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !8223
  %next = getelementptr inbounds %struct.CollectionPointerLink, %struct.CollectionPointerLink* %81, i32 0, i32 0, !dbg !8223
  %82 = load %struct.CollectionPointerLink*, %struct.CollectionPointerLink** %next, align 8, !dbg !8223
  store %struct.CollectionPointerLink* %82, %struct.CollectionPointerLink** %ctx_link, align 8, !dbg !8223
  br label %for.cond, !dbg !8223, !llvm.loop !8302

for.end:                                          ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %ctx_data_list), !dbg !8304
  br label %if.end80

if.end80:                                         ; preds = %for.end, %if.end39
  %83 = load i32, i32* %retval3, align 4, !dbg !8305
  %tobool81 = icmp ne i32 %83, 0, !dbg !8305
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !8307

if.then82:                                        ; preds = %if.end80
  %84 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !8308
  call void @DAG_relations_tag_update(%struct.Main* %84), !dbg !8310
  %85 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8311
  call void @WM_event_add_notifier(%struct.bContext* %85, i32 85393408, i8* null), !dbg !8312
  store i32 4, i32* %retval, align 4, !dbg !8313
  br label %return, !dbg !8313

if.end83:                                         ; preds = %if.end80
  store i32 2, i32* %retval, align 4, !dbg !8314
  br label %return, !dbg !8314

return:                                           ; preds = %if.end83, %if.then82, %if.then43, %if.then14
  %86 = load i32, i32* %retval, align 4, !dbg !8315
  ret i32 %86, !dbg !8315
}

declare dso_local i32 @ED_operator_scene_editable(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_fill(%struct.wmOperatorType* %ot) #0 !dbg !8316 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8317, metadata !DIExpression()), !dbg !8318
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8319
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8320
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.203, i64 0, i64 0), i8** %name, align 8, !dbg !8321
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8322
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8323
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.204, i64 0, i64 0), i8** %idname, align 8, !dbg !8324
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8325
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8326
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.205, i64 0, i64 0), i8** %description, align 8, !dbg !8327
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8328
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8329
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_fill_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8330
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8331
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8332
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8333
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8334
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8335
  store i16 3, i16* %flag, align 8, !dbg !8336
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8337
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8338
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8338
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8337
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.207, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.208, i64 0, i64 0)), !dbg !8339
  ret void, !dbg !8340
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_fill_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8341 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %use_beauty = alloca i8, align 1
  %bmop = alloca %struct.BMOperator, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8342, metadata !DIExpression()), !dbg !8343
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8344, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8346, metadata !DIExpression()), !dbg !8347
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8348
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8349
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8347
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8350, metadata !DIExpression()), !dbg !8351
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8352
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8353
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8351
  call void @llvm.dbg.declare(metadata i8* %use_beauty, metadata !8354, metadata !DIExpression()), !dbg !8355
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8356
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8357
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8357
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.206, i64 0, i64 0)), !dbg !8358
  %conv = trunc i32 %call2 to i8, !dbg !8358
  store i8 %conv, i8* %use_beauty, align 1, !dbg !8355
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !8359, metadata !DIExpression()), !dbg !8360
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8361
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8363
  %6 = load i8, i8* %use_beauty, align 1, !dbg !8364
  %conv3 = zext i8 %6 to i32, !dbg !8364
  %call4 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %4, %struct.BMOperator* %bmop, %struct.wmOperator* %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.482, i64 0, i64 0), i32 1, i32 %conv3), !dbg !8365
  %tobool = icmp ne i8 %call4, 0, !dbg !8365
  br i1 %tobool, label %if.end, label %if.then, !dbg !8366

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !8367
  br label %return, !dbg !8367

if.end:                                           ; preds = %entry
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8369
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !8370
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8370
  call void @BMO_op_exec(%struct.BMesh* %8, %struct.BMOperator* %bmop), !dbg !8371
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8372
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !8373
  %10 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !8373
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !8374
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !8375
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %10, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.422, i64 0, i64 0), i8 zeroext 10, i8 zeroext 1, i8 zeroext 1), !dbg !8376
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8377
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8379
  %call6 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %11, %struct.BMOperator* %bmop, %struct.wmOperator* %12, i8 zeroext 1), !dbg !8380
  %tobool7 = icmp ne i8 %call6, 0, !dbg !8380
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !8381

if.then8:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !8382
  br label %return, !dbg !8382

if.end9:                                          ; preds = %if.end
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8384
  call void @EDBM_update_generic(%struct.BMEditMesh* %13, i8 zeroext 1, i8 zeroext 1), !dbg !8385
  store i32 4, i32* %retval, align 4, !dbg !8386
  br label %return, !dbg !8386

return:                                           ; preds = %if.end9, %if.then8, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8387
  ret i32 %14, !dbg !8387
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_fill_grid(%struct.wmOperatorType* %ot) #0 !dbg !8388 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8389, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8391, metadata !DIExpression()), !dbg !8392
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8393
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8394
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.209, i64 0, i64 0), i8** %name, align 8, !dbg !8395
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8396
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !8397
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.210, i64 0, i64 0), i8** %description, align 8, !dbg !8398
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8399
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !8400
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.211, i64 0, i64 0), i8** %idname, align 8, !dbg !8401
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8402
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8403
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_fill_grid_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8404
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8405
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8406
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8407
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8408
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8409
  store i16 3, i16* %flag, align 8, !dbg !8410
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8411
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8412
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8412
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8411
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i64 0, i64 0), i32 1, i32 1, i32 2147483647, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.213, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.214, i64 0, i64 0), i32 1, i32 100), !dbg !8413
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8414
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8415
  call void @RNA_def_property_flag(%struct.PropertyRNA* %9, i32 268435456), !dbg !8416
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8417
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !8418
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8418
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !8417
  %call2 = call %struct.PropertyRNA* @RNA_def_int(i8* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.214, i64 0, i64 0), i32 -100, i32 100), !dbg !8419
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !8420
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8421
  call void @RNA_def_property_flag(%struct.PropertyRNA* %13, i32 268435456), !dbg !8422
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8423
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 11, !dbg !8424
  %15 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !8424
  %16 = bitcast %struct.StructRNA* %15 to i8*, !dbg !8423
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.217, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.218, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !8425
  ret void, !dbg !8426
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_fill_grid_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8427 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %use_smooth = alloca i16, align 2
  %totedge_orig = alloca i32, align 4
  %totface_orig = alloca i32, align 4
  %use_interp_simple = alloca i8, align 1
  %use_prepare = alloca i8, align 1
  %prop_span = alloca %struct.PropertyRNA*, align 8
  %prop_offset = alloca %struct.PropertyRNA*, align 8
  %calc_span = alloca i8, align 1
  %clamp = alloca i32, align 4
  %span = alloca i32, align 4
  %offset = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8428, metadata !DIExpression()), !dbg !8429
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8430, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !8432, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8434, metadata !DIExpression()), !dbg !8435
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8436
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8437
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8435
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8438, metadata !DIExpression()), !dbg !8439
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8440
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8441
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8439
  call void @llvm.dbg.declare(metadata i16* %use_smooth, metadata !8442, metadata !DIExpression()), !dbg !8443
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8444
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !8445
  %3 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8445
  %call2 = call i32 @edbm_add_edge_face__smooth_get(%struct.BMesh* %3), !dbg !8446
  %conv = trunc i32 %call2 to i16, !dbg !8446
  store i16 %conv, i16* %use_smooth, align 2, !dbg !8443
  call void @llvm.dbg.declare(metadata i32* %totedge_orig, metadata !8447, metadata !DIExpression()), !dbg !8448
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8449
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !8450
  %5 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !8450
  %totedge = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 1, !dbg !8451
  %6 = load i32, i32* %totedge, align 4, !dbg !8451
  store i32 %6, i32* %totedge_orig, align 4, !dbg !8448
  call void @llvm.dbg.declare(metadata i32* %totface_orig, metadata !8452, metadata !DIExpression()), !dbg !8453
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8454
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 0, !dbg !8455
  %8 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !8455
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %8, i32 0, i32 3, !dbg !8456
  %9 = load i32, i32* %totface, align 4, !dbg !8456
  store i32 %9, i32* %totface_orig, align 4, !dbg !8453
  call void @llvm.dbg.declare(metadata i8* %use_interp_simple, metadata !8457, metadata !DIExpression()), !dbg !8458
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8459
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !8460
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8460
  %call5 = call i32 @RNA_boolean_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.217, i64 0, i64 0)), !dbg !8461
  %conv6 = trunc i32 %call5 to i8, !dbg !8461
  store i8 %conv6, i8* %use_interp_simple, align 1, !dbg !8458
  call void @llvm.dbg.declare(metadata i8* %use_prepare, metadata !8462, metadata !DIExpression()), !dbg !8463
  store i8 1, i8* %use_prepare, align 1, !dbg !8463
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop_span, metadata !8464, metadata !DIExpression()), !dbg !8467
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8468
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 7, !dbg !8469
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !8469
  %call8 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.212, i64 0, i64 0)), !dbg !8470
  store %struct.PropertyRNA* %call8, %struct.PropertyRNA** %prop_span, align 8, !dbg !8467
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop_offset, metadata !8471, metadata !DIExpression()), !dbg !8472
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8473
  %ptr9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 7, !dbg !8474
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr9, align 8, !dbg !8474
  %call10 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i64 0, i64 0)), !dbg !8475
  store %struct.PropertyRNA* %call10, %struct.PropertyRNA** %prop_offset, align 8, !dbg !8472
  call void @llvm.dbg.declare(metadata i8* %calc_span, metadata !8476, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.declare(metadata i32* %clamp, metadata !8478, metadata !DIExpression()), !dbg !8479
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8480
  %bm11 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !8481
  %17 = load %struct.BMesh*, %struct.BMesh** %bm11, align 8, !dbg !8481
  %totvertsel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %17, i32 0, i32 4, !dbg !8482
  %18 = load i32, i32* %totvertsel, align 8, !dbg !8482
  store i32 %18, i32* %clamp, align 4, !dbg !8479
  call void @llvm.dbg.declare(metadata i32* %span, metadata !8483, metadata !DIExpression()), !dbg !8484
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8485, metadata !DIExpression()), !dbg !8486
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8487
  %ptr12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %19, i32 0, i32 7, !dbg !8489
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr12, align 8, !dbg !8489
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop_span, align 8, !dbg !8490
  %call13 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %20, %struct.PropertyRNA* %21), !dbg !8491
  %tobool = icmp ne i8 %call13, 0, !dbg !8491
  br i1 %tobool, label %if.then, label %if.else, !dbg !8492

if.then:                                          ; preds = %entry
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8493
  %ptr14 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 7, !dbg !8495
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr14, align 8, !dbg !8495
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop_span, align 8, !dbg !8496
  %call15 = call i32 @RNA_property_int_get(%struct.PointerRNA* %23, %struct.PropertyRNA* %24), !dbg !8497
  store i32 %call15, i32* %span, align 4, !dbg !8498
  %25 = load i32, i32* %span, align 4, !dbg !8499
  %26 = load i32, i32* %clamp, align 4, !dbg !8500
  %div = sdiv i32 %26, 2, !dbg !8501
  %sub = sub nsw i32 %div, 1, !dbg !8502
  %call16 = call i32 @min_ii(i32 %25, i32 %sub), !dbg !8503
  store i32 %call16, i32* %span, align 4, !dbg !8504
  store i8 0, i8* %calc_span, align 1, !dbg !8505
  br label %if.end, !dbg !8506

if.else:                                          ; preds = %entry
  %27 = load i32, i32* %clamp, align 4, !dbg !8507
  %div17 = sdiv i32 %27, 4, !dbg !8509
  store i32 %div17, i32* %span, align 4, !dbg !8510
  store i8 1, i8* %calc_span, align 1, !dbg !8511
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8512
  %ptr18 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %28, i32 0, i32 7, !dbg !8513
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr18, align 8, !dbg !8513
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop_offset, align 8, !dbg !8514
  %call19 = call i32 @RNA_property_int_get(%struct.PointerRNA* %29, %struct.PropertyRNA* %30), !dbg !8515
  store i32 %call19, i32* %offset, align 4, !dbg !8516
  %31 = load i32, i32* %clamp, align 4, !dbg !8517
  %tobool20 = icmp ne i32 %31, 0, !dbg !8517
  br i1 %tobool20, label %cond.true, label %cond.false, !dbg !8517

cond.true:                                        ; preds = %if.end
  %32 = load i32, i32* %offset, align 4, !dbg !8518
  %33 = load i32, i32* %clamp, align 4, !dbg !8519
  %call21 = call i32 @mod_i(i32 %32, i32 %33), !dbg !8520
  br label %cond.end, !dbg !8517

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !8517

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call21, %cond.true ], [ 0, %cond.false ], !dbg !8517
  store i32 %cond, i32* %offset, align 4, !dbg !8521
  %34 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8522
  %bm22 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %34, i32 0, i32 0, !dbg !8523
  %35 = load %struct.BMesh*, %struct.BMesh** %bm22, align 8, !dbg !8523
  %36 = load i32, i32* %offset, align 4, !dbg !8524
  %37 = load i8, i8* %calc_span, align 1, !dbg !8525
  call void @edbm_fill_grid_prepare(%struct.BMesh* %35, i32 %36, i32* %span, i8 zeroext %37), !dbg !8526
  %38 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8527
  %ptr23 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %38, i32 0, i32 7, !dbg !8528
  %39 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr23, align 8, !dbg !8528
  %40 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop_span, align 8, !dbg !8529
  %41 = load i32, i32* %span, align 4, !dbg !8530
  call void @RNA_property_int_set(%struct.PointerRNA* %39, %struct.PropertyRNA* %40, i32 %41), !dbg !8531
  %42 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8532
  %43 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8534
  %44 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8535
  %mat_nr = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %44, i32 0, i32 13, !dbg !8536
  %45 = load i16, i16* %mat_nr, align 2, !dbg !8536
  %conv24 = sext i16 %45 to i32, !dbg !8535
  %46 = load i16, i16* %use_smooth, align 2, !dbg !8537
  %conv25 = sext i16 %46 to i32, !dbg !8537
  %47 = load i8, i8* %use_interp_simple, align 1, !dbg !8538
  %conv26 = zext i8 %47 to i32, !dbg !8538
  %call27 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %42, %struct.BMOperator* %bmop, %struct.wmOperator* %43, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.483, i64 0, i64 0), i32 16, i32 %conv24, i32 %conv25, i32 %conv26), !dbg !8539
  %tobool28 = icmp ne i8 %call27, 0, !dbg !8539
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !8540

if.then29:                                        ; preds = %cond.end
  store i32 2, i32* %retval, align 4, !dbg !8541
  br label %return, !dbg !8541

if.end30:                                         ; preds = %cond.end
  %48 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8543
  %bm31 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %48, i32 0, i32 0, !dbg !8544
  %49 = load %struct.BMesh*, %struct.BMesh** %bm31, align 8, !dbg !8544
  call void @BMO_op_exec(%struct.BMesh* %49, %struct.BMOperator* %bmop), !dbg !8545
  %50 = load i32, i32* %totedge_orig, align 4, !dbg !8546
  %51 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8548
  %bm32 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %51, i32 0, i32 0, !dbg !8549
  %52 = load %struct.BMesh*, %struct.BMesh** %bm32, align 8, !dbg !8549
  %totedge33 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %52, i32 0, i32 1, !dbg !8550
  %53 = load i32, i32* %totedge33, align 4, !dbg !8550
  %cmp = icmp eq i32 %50, %53, !dbg !8551
  br i1 %cmp, label %land.lhs.true, label %if.end41, !dbg !8552

land.lhs.true:                                    ; preds = %if.end30
  %54 = load i32, i32* %totface_orig, align 4, !dbg !8553
  %55 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8554
  %bm35 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %55, i32 0, i32 0, !dbg !8555
  %56 = load %struct.BMesh*, %struct.BMesh** %bm35, align 8, !dbg !8555
  %totface36 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %56, i32 0, i32 3, !dbg !8556
  %57 = load i32, i32* %totface36, align 4, !dbg !8556
  %cmp37 = icmp eq i32 %54, %57, !dbg !8557
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !8558

if.then39:                                        ; preds = %land.lhs.true
  %58 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8559
  %59 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8561
  %call40 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %58, %struct.BMOperator* %bmop, %struct.wmOperator* %59, i8 zeroext 1), !dbg !8562
  store i32 2, i32* %retval, align 4, !dbg !8563
  br label %return, !dbg !8563

if.end41:                                         ; preds = %land.lhs.true, %if.end30
  %60 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8564
  %bm42 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %60, i32 0, i32 0, !dbg !8565
  %61 = load %struct.BMesh*, %struct.BMesh** %bm42, align 8, !dbg !8565
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !8566
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !8567
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %61, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0), i8 zeroext 8, i8 zeroext 1, i8 zeroext 1), !dbg !8568
  %62 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8569
  %63 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8571
  %call43 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %62, %struct.BMOperator* %bmop, %struct.wmOperator* %63, i8 zeroext 1), !dbg !8572
  %tobool44 = icmp ne i8 %call43, 0, !dbg !8572
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !8573

if.then45:                                        ; preds = %if.end41
  store i32 2, i32* %retval, align 4, !dbg !8574
  br label %return, !dbg !8574

if.end46:                                         ; preds = %if.end41
  %64 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8576
  call void @EDBM_update_generic(%struct.BMEditMesh* %64, i8 zeroext 1, i8 zeroext 1), !dbg !8577
  store i32 4, i32* %retval, align 4, !dbg !8578
  br label %return, !dbg !8578

return:                                           ; preds = %if.end46, %if.then45, %if.then39, %if.then29
  %65 = load i32, i32* %retval, align 4, !dbg !8579
  ret i32 %65, !dbg !8579
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_fill_holes(%struct.wmOperatorType* %ot) #0 !dbg !8580 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8581, metadata !DIExpression()), !dbg !8582
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8583
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8584
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.219, i64 0, i64 0), i8** %name, align 8, !dbg !8585
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8586
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8587
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.220, i64 0, i64 0), i8** %idname, align 8, !dbg !8588
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8589
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8590
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.221, i64 0, i64 0), i8** %description, align 8, !dbg !8591
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8592
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8593
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_fill_holes_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8594
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8595
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8596
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8597
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8598
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8599
  store i16 3, i16* %flag, align 8, !dbg !8600
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8601
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8602
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8602
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8601
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.222, i64 0, i64 0), i32 4, i32 0, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.223, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.224, i64 0, i64 0), i32 0, i32 100), !dbg !8603
  ret void, !dbg !8604
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_fill_holes_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8605 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %sides = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8606, metadata !DIExpression()), !dbg !8607
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8608, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8610, metadata !DIExpression()), !dbg !8611
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8612
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8613
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8611
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8614, metadata !DIExpression()), !dbg !8615
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8616
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8617
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8615
  call void @llvm.dbg.declare(metadata i32* %sides, metadata !8618, metadata !DIExpression()), !dbg !8619
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8620
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8621
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8621
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.222, i64 0, i64 0)), !dbg !8622
  store i32 %call2, i32* %sides, align 4, !dbg !8619
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8623
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8625
  %6 = load i32, i32* %sides, align 4, !dbg !8626
  %call3 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, i8, i8*, ...) @EDBM_op_call_and_selectf(%struct.BMEditMesh* %4, %struct.wmOperator* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0), i8 zeroext 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.484, i64 0, i64 0), i32 1, i32 %6), !dbg !8627
  %tobool = icmp ne i8 %call3, 0, !dbg !8627
  br i1 %tobool, label %if.end, label %if.then, !dbg !8628

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !8629
  br label %return, !dbg !8629

if.end:                                           ; preds = %entry
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8631
  call void @EDBM_update_generic(%struct.BMEditMesh* %7, i8 zeroext 1, i8 zeroext 1), !dbg !8632
  store i32 4, i32* %retval, align 4, !dbg !8633
  br label %return, !dbg !8633

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !8634
  ret i32 %8, !dbg !8634
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_beautify_fill(%struct.wmOperatorType* %ot) #0 !dbg !8635 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8636, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8638, metadata !DIExpression()), !dbg !8639
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8640
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8641
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.225, i64 0, i64 0), i8** %name, align 8, !dbg !8642
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8643
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8644
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.226, i64 0, i64 0), i8** %idname, align 8, !dbg !8645
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8646
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8647
  store i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.227, i64 0, i64 0), i8** %description, align 8, !dbg !8648
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8649
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8650
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_beautify_fill_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8651
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8652
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8653
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8654
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8655
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8656
  store i16 3, i16* %flag, align 8, !dbg !8657
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8658
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8659
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8659
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8658
  %call = call %struct.PropertyRNA* @RNA_def_float_rotation(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0), i32 0, float* null, float 0.000000e+00, float 0x400921FB60000000, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.73, i64 0, i64 0), float 0.000000e+00, float 0x400921FB60000000), !dbg !8660
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8661
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8662
  call void @RNA_def_property_float_default(%struct.PropertyRNA* %9, float 0x400921FB60000000), !dbg !8663
  ret void, !dbg !8664
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_beautify_fill_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8665 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %angle_max = alloca float, align 4
  %angle_limit = alloca float, align 4
  %hflag = alloca i8, align 1
  %iter = alloca %struct.BMIter, align 8
  %e = alloca %struct.BMEdge*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8666, metadata !DIExpression()), !dbg !8667
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8668, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8670, metadata !DIExpression()), !dbg !8671
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8672
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8673
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8671
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8674, metadata !DIExpression()), !dbg !8675
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8676
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8677
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8675
  call void @llvm.dbg.declare(metadata float* %angle_max, metadata !8678, metadata !DIExpression()), !dbg !8679
  store float 0x400921FB60000000, float* %angle_max, align 4, !dbg !8679
  call void @llvm.dbg.declare(metadata float* %angle_limit, metadata !8680, metadata !DIExpression()), !dbg !8681
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8682
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8683
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8683
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)), !dbg !8684
  store float %call2, float* %angle_limit, align 4, !dbg !8681
  call void @llvm.dbg.declare(metadata i8* %hflag, metadata !8685, metadata !DIExpression()), !dbg !8686
  %4 = load float, float* %angle_limit, align 4, !dbg !8687
  %cmp = fcmp oge float %4, 0x400921FB60000000, !dbg !8689
  br i1 %cmp, label %if.then, label %if.else, !dbg !8690

if.then:                                          ; preds = %entry
  store i8 1, i8* %hflag, align 1, !dbg !8691
  br label %if.end, !dbg !8693

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !8694, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !8697, metadata !DIExpression()), !dbg !8698
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8699
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !8699
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8699
  %call3 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %6, i8 zeroext 2, i8* null), !dbg !8699
  %7 = bitcast i8* %call3 to %struct.BMEdge*, !dbg !8699
  store %struct.BMEdge* %7, %struct.BMEdge** %e, align 8, !dbg !8699
  br label %for.cond, !dbg !8699

for.cond:                                         ; preds = %for.inc, %if.else
  %8 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8701
  %tobool = icmp ne %struct.BMEdge* %8, null, !dbg !8699
  br i1 %tobool, label %for.body, label %for.end, !dbg !8699

for.body:                                         ; preds = %for.cond
  %9 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8703
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %9, i32 0, i32 0, !dbg !8703
  %10 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8703
  %head4 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %10, i32 0, i32 0, !dbg !8703
  %call5 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head4, i8 zeroext 1), !dbg !8703
  %conv = zext i8 %call5 to i32, !dbg !8703
  %tobool6 = icmp ne i32 %conv, 0, !dbg !8703
  br i1 %tobool6, label %land.rhs, label %land.end, !dbg !8703

land.rhs:                                         ; preds = %for.body
  %11 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !8703
  %call7 = call float @BM_edge_calc_face_angle_ex(%struct.BMEdge* %11, float 0x400921FB60000000), !dbg !8703
  %12 = load float, float* %angle_limit, align 4, !dbg !8703
  %cmp8 = fcmp olt float %call7, %12, !dbg !8703
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %13 = phi i1 [ false, %for.body ], [ %cmp8, %land.rhs ], !dbg !8705
  %land.ext = zext i1 %13 to i32, !dbg !8703
  call void @_bm_elem_flag_set(%struct.BMHeader* %head, i8 zeroext 16, i32 %land.ext), !dbg !8703
  br label %for.inc, !dbg !8706

for.inc:                                          ; preds = %land.end
  %call10 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !8701
  %14 = bitcast i8* %call10 to %struct.BMEdge*, !dbg !8701
  store %struct.BMEdge* %14, %struct.BMEdge** %e, align 8, !dbg !8701
  br label %for.cond, !dbg !8701, !llvm.loop !8707

for.end:                                          ; preds = %for.cond
  store i8 16, i8* %hflag, align 1, !dbg !8709
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8710
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8712
  %17 = load i8, i8* %hflag, align 1, !dbg !8713
  %conv11 = zext i8 %17 to i32, !dbg !8713
  %call12 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, i8, i8*, ...) @EDBM_op_call_and_selectf(%struct.BMEditMesh* %15, %struct.wmOperator* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.422, i64 0, i64 0), i8 zeroext 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.485, i64 0, i64 0), i32 1, i32 %conv11), !dbg !8714
  %tobool13 = icmp ne i8 %call12, 0, !dbg !8714
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !8715

if.then14:                                        ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !8716
  br label %return, !dbg !8716

if.end15:                                         ; preds = %if.end
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8718
  call void @EDBM_update_generic(%struct.BMEditMesh* %18, i8 zeroext 1, i8 zeroext 1), !dbg !8719
  store i32 4, i32* %retval, align 4, !dbg !8720
  br label %return, !dbg !8720

return:                                           ; preds = %if.end15, %if.then14
  %19 = load i32, i32* %retval, align 4, !dbg !8721
  ret i32 %19, !dbg !8721
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_poke(%struct.wmOperatorType* %ot) #0 !dbg !3766 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8722, metadata !DIExpression()), !dbg !8723
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8724
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8725
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.237, i64 0, i64 0), i8** %name, align 8, !dbg !8726
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8727
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8728
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.238, i64 0, i64 0), i8** %idname, align 8, !dbg !8729
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8730
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8731
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.239, i64 0, i64 0), i8** %description, align 8, !dbg !8732
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8733
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8734
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_poke_face_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8735
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8736
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8737
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8738
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8739
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8740
  store i16 3, i16* %flag, align 8, !dbg !8741
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8742
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8743
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8743
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8742
  %call = call %struct.PropertyRNA* @RNA_def_float(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i64 0, i64 0), float 0.000000e+00, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.240, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.240, i64 0, i64 0), float -1.000000e+00, float 1.000000e+00), !dbg !8744
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8745
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !8746
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8746
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !8745
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.241, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.243, i64 0, i64 0)), !dbg !8747
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8748
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !8749
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !8749
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !8748
  %call4 = call %struct.PropertyRNA* @RNA_def_enum(i8* %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.244, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @MESH_OT_poke.poke_center_modes, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.245, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i64 0, i64 0)), !dbg !8750
  ret void, !dbg !8751
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_poke_face_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8752 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %offset = alloca float, align 4
  %use_relative_offset = alloca i8, align 1
  %center_mode = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8753, metadata !DIExpression()), !dbg !8754
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8755, metadata !DIExpression()), !dbg !8756
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8757, metadata !DIExpression()), !dbg !8758
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8759
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8760
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8758
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8761, metadata !DIExpression()), !dbg !8762
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8763
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8764
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8762
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !8765, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.declare(metadata float* %offset, metadata !8767, metadata !DIExpression()), !dbg !8768
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8769
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8770
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8770
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i64 0, i64 0)), !dbg !8771
  store float %call2, float* %offset, align 4, !dbg !8768
  call void @llvm.dbg.declare(metadata i8* %use_relative_offset, metadata !8772, metadata !DIExpression()), !dbg !8773
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8774
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !8775
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !8775
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.241, i64 0, i64 0)), !dbg !8776
  %conv = trunc i32 %call4 to i8, !dbg !8776
  store i8 %conv, i8* %use_relative_offset, align 1, !dbg !8773
  call void @llvm.dbg.declare(metadata i32* %center_mode, metadata !8777, metadata !DIExpression()), !dbg !8778
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8779
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !8780
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !8780
  %call6 = call i32 @RNA_enum_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.244, i64 0, i64 0)), !dbg !8781
  store i32 %call6, i32* %center_mode, align 4, !dbg !8778
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8782
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8783
  %10 = load float, float* %offset, align 4, !dbg !8784
  %conv7 = fpext float %10 to double, !dbg !8784
  %11 = load i8, i8* %use_relative_offset, align 1, !dbg !8785
  %conv8 = zext i8 %11 to i32, !dbg !8785
  %12 = load i32, i32* %center_mode, align 4, !dbg !8786
  %call9 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %8, %struct.BMOperator* %bmop, %struct.wmOperator* %9, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.486, i64 0, i64 0), i32 1, double %conv7, i32 %conv8, i32 %12), !dbg !8787
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8788
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !8789
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8789
  call void @BMO_op_exec(%struct.BMesh* %14, %struct.BMOperator* %bmop), !dbg !8790
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8791
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %15, i8 zeroext 1), !dbg !8792
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8793
  %bm10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !8794
  %17 = load %struct.BMesh*, %struct.BMesh** %bm10, align 8, !dbg !8794
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !8795
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !8796
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %17, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.487, i64 0, i64 0), i8 zeroext 1, i8 zeroext 1, i8 zeroext 1), !dbg !8797
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8798
  %bm11 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %18, i32 0, i32 0, !dbg !8799
  %19 = load %struct.BMesh*, %struct.BMesh** %bm11, align 8, !dbg !8799
  %slots_out12 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !8800
  %arraydecay13 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out12, i64 0, i64 0, !dbg !8801
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %19, %struct.BMOpSlot* %arraydecay13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0), i8 zeroext 8, i8 zeroext 1, i8 zeroext 1), !dbg !8802
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8803
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8805
  %call14 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %20, %struct.BMOperator* %bmop, %struct.wmOperator* %21, i8 zeroext 1), !dbg !8806
  %tobool = icmp ne i8 %call14, 0, !dbg !8806
  br i1 %tobool, label %if.end, label %if.then, !dbg !8807

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !8808
  br label %return, !dbg !8808

if.end:                                           ; preds = %entry
  %22 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8810
  call void @EDBM_mesh_normals_update(%struct.BMEditMesh* %22), !dbg !8811
  %23 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8812
  call void @EDBM_update_generic(%struct.BMEditMesh* %23, i8 zeroext 1, i8 zeroext 1), !dbg !8813
  store i32 4, i32* %retval, align 4, !dbg !8814
  br label %return, !dbg !8814

return:                                           ; preds = %if.end, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !8815
  ret i32 %24, !dbg !8815
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_quads_convert_to_tris(%struct.wmOperatorType* %ot) #0 !dbg !8816 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8817, metadata !DIExpression()), !dbg !8818
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8819
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8820
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.247, i64 0, i64 0), i8** %name, align 8, !dbg !8821
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8822
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8823
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.248, i64 0, i64 0), i8** %idname, align 8, !dbg !8824
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8825
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8826
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.249, i64 0, i64 0), i8** %description, align 8, !dbg !8827
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8828
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8829
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_quads_convert_to_tris_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8830
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8831
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8832
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8833
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8834
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8835
  store i16 3, i16* %flag, align 8, !dbg !8836
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8837
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8838
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8838
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8837
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.250, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @modifier_triangulate_quad_method_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.251, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.252, i64 0, i64 0)), !dbg !8839
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8840
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !8841
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8841
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !8840
  %call2 = call %struct.PropertyRNA* @RNA_def_enum(i8* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.253, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @modifier_triangulate_ngon_method_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.254, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.255, i64 0, i64 0)), !dbg !8842
  ret void, !dbg !8843
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_quads_convert_to_tris_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8844 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %quad_method = alloca i32, align 4
  %ngon_method = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8845, metadata !DIExpression()), !dbg !8846
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8847, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8849, metadata !DIExpression()), !dbg !8850
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8851
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8852
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8850
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8853, metadata !DIExpression()), !dbg !8854
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8855
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8856
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8854
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !8857, metadata !DIExpression()), !dbg !8858
  call void @llvm.dbg.declare(metadata i32* %quad_method, metadata !8859, metadata !DIExpression()), !dbg !8860
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8861
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8862
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8862
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.250, i64 0, i64 0)), !dbg !8863
  store i32 %call2, i32* %quad_method, align 4, !dbg !8860
  call void @llvm.dbg.declare(metadata i32* %ngon_method, metadata !8864, metadata !DIExpression()), !dbg !8865
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8866
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !8867
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !8867
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.253, i64 0, i64 0)), !dbg !8868
  store i32 %call4, i32* %ngon_method, align 4, !dbg !8865
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8869
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8870
  %8 = load i32, i32* %quad_method, align 4, !dbg !8871
  %9 = load i32, i32* %ngon_method, align 4, !dbg !8872
  %call5 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %6, %struct.BMOperator* %bmop, %struct.wmOperator* %7, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.488, i64 0, i64 0), i32 1, i32 %8, i32 %9), !dbg !8873
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8874
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !8875
  %11 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !8875
  call void @BMO_op_exec(%struct.BMesh* %11, %struct.BMOperator* %bmop), !dbg !8876
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8877
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !8878
  %13 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !8878
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !8879
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !8880
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %13, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0), i8 zeroext 8, i8 zeroext 1, i8 zeroext 1), !dbg !8881
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8882
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %14), !dbg !8883
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8884
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8886
  %call7 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %15, %struct.BMOperator* %bmop, %struct.wmOperator* %16, i8 zeroext 1), !dbg !8887
  %tobool = icmp ne i8 %call7, 0, !dbg !8887
  br i1 %tobool, label %if.end, label %if.then, !dbg !8888

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !8889
  br label %return, !dbg !8889

if.end:                                           ; preds = %entry
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8891
  call void @EDBM_update_generic(%struct.BMEditMesh* %17, i8 zeroext 1, i8 zeroext 1), !dbg !8892
  store i32 4, i32* %retval, align 4, !dbg !8893
  br label %return, !dbg !8893

return:                                           ; preds = %if.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !8894
  ret i32 %18, !dbg !8894
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_tris_convert_to_quads(%struct.wmOperatorType* %ot) #0 !dbg !8895 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8896, metadata !DIExpression()), !dbg !8897
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8898
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8899
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.256, i64 0, i64 0), i8** %name, align 8, !dbg !8900
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8901
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8902
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.257, i64 0, i64 0), i8** %idname, align 8, !dbg !8903
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8904
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8905
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.258, i64 0, i64 0), i8** %description, align 8, !dbg !8906
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8907
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8908
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_tris_convert_to_quads_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8909
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8910
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8911
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !8912
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8913
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8914
  store i16 3, i16* %flag, align 8, !dbg !8915
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8916
  call void @join_triangle_props(%struct.wmOperatorType* %6), !dbg !8917
  ret void, !dbg !8918
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_tris_convert_to_quads_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8919 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %dosharp = alloca i32, align 4
  %douvs = alloca i32, align 4
  %dovcols = alloca i32, align 4
  %domaterials = alloca i32, align 4
  %limit = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8920, metadata !DIExpression()), !dbg !8921
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8922, metadata !DIExpression()), !dbg !8923
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !8924, metadata !DIExpression()), !dbg !8925
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8926
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !8927
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !8925
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !8928, metadata !DIExpression()), !dbg !8929
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !8930
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !8931
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !8929
  call void @llvm.dbg.declare(metadata i32* %dosharp, metadata !8932, metadata !DIExpression()), !dbg !8933
  call void @llvm.dbg.declare(metadata i32* %douvs, metadata !8934, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.declare(metadata i32* %dovcols, metadata !8936, metadata !DIExpression()), !dbg !8937
  call void @llvm.dbg.declare(metadata i32* %domaterials, metadata !8938, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.declare(metadata float* %limit, metadata !8940, metadata !DIExpression()), !dbg !8941
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8942
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !8943
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8943
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.489, i64 0, i64 0)), !dbg !8944
  store float %call2, float* %limit, align 4, !dbg !8941
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8945
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !8946
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !8946
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.490, i64 0, i64 0)), !dbg !8947
  store i32 %call4, i32* %dosharp, align 4, !dbg !8948
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8949
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !8950
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !8950
  %call6 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.164, i64 0, i64 0)), !dbg !8951
  store i32 %call6, i32* %douvs, align 4, !dbg !8952
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8953
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !8954
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !8954
  %call8 = call i32 @RNA_boolean_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.491, i64 0, i64 0)), !dbg !8955
  store i32 %call8, i32* %dovcols, align 4, !dbg !8956
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8957
  %ptr9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !8958
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr9, align 8, !dbg !8958
  %call10 = call i32 @RNA_boolean_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.492, i64 0, i64 0)), !dbg !8959
  store i32 %call10, i32* %domaterials, align 4, !dbg !8960
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8961
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8963
  %14 = load float, float* %limit, align 4, !dbg !8964
  %conv = fpext float %14 to double, !dbg !8964
  %15 = load i32, i32* %dosharp, align 4, !dbg !8965
  %16 = load i32, i32* %douvs, align 4, !dbg !8966
  %17 = load i32, i32* %dovcols, align 4, !dbg !8967
  %18 = load i32, i32* %domaterials, align 4, !dbg !8968
  %call11 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, i8, i8*, ...) @EDBM_op_call_and_selectf(%struct.BMEditMesh* %12, %struct.wmOperator* %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0), i8 zeroext 1, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.493, i64 0, i64 0), i32 1, double %conv, i32 %15, i32 %16, i32 %17, i32 %18), !dbg !8969
  %tobool = icmp ne i8 %call11, 0, !dbg !8969
  br i1 %tobool, label %if.end, label %if.then, !dbg !8970

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !8971
  br label %return, !dbg !8971

if.end:                                           ; preds = %entry
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !8973
  call void @EDBM_update_generic(%struct.BMEditMesh* %19, i8 zeroext 1, i8 zeroext 1), !dbg !8974
  store i32 4, i32* %retval, align 4, !dbg !8975
  br label %return, !dbg !8975

return:                                           ; preds = %if.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !8976
  ret i32 %20, !dbg !8976
}

; Function Attrs: noinline nounwind uwtable
define internal void @join_triangle_props(%struct.wmOperatorType* %ot) #0 !dbg !8977 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8978, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8980, metadata !DIExpression()), !dbg !8981
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8982
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !8983
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8983
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !8982
  %call = call %struct.PropertyRNA* @RNA_def_float_rotation(i8* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.489, i64 0, i64 0), i32 0, float* null, float 0.000000e+00, float 0x400921FB60000000, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.494, i64 0, i64 0), float 0.000000e+00, float 0x400921FB60000000), !dbg !8984
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8985
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8986
  call void @RNA_def_property_float_default(%struct.PropertyRNA* %3, float 0x3FE6571840000000), !dbg !8987
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8988
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 11, !dbg !8989
  %5 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8989
  %6 = bitcast %struct.StructRNA* %5 to i8*, !dbg !8988
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.164, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.495, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !8990
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8991
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8992
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !8992
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8991
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.491, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.496, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !8993
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8994
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !8995
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !8995
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !8994
  %call6 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.490, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.497, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !8996
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8997
  %srna7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 11, !dbg !8998
  %14 = load %struct.StructRNA*, %struct.StructRNA** %srna7, align 8, !dbg !8998
  %15 = bitcast %struct.StructRNA* %14 to i8*, !dbg !8997
  %call8 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.492, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.498, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)), !dbg !8999
  ret void, !dbg !9000
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_dissolve_verts(%struct.wmOperatorType* %ot) #0 !dbg !9001 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9002, metadata !DIExpression()), !dbg !9003
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9004
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9005
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.259, i64 0, i64 0), i8** %name, align 8, !dbg !9006
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9007
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !9008
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.260, i64 0, i64 0), i8** %description, align 8, !dbg !9009
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9010
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !9011
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.261, i64 0, i64 0), i8** %idname, align 8, !dbg !9012
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9013
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9014
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_dissolve_verts_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9015
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9016
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !9017
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9018
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9019
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9020
  store i16 3, i16* %flag, align 8, !dbg !9021
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9022
  call void @edbm_dissolve_prop__use_face_split(%struct.wmOperatorType* %6), !dbg !9023
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9024
  call void @edbm_dissolve_prop__use_boundary_tear(%struct.wmOperatorType* %7), !dbg !9025
  ret void, !dbg !9026
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_dissolve_verts_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9027 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %use_face_split = alloca i8, align 1
  %use_boundary_tear = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9028, metadata !DIExpression()), !dbg !9029
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9030, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9032, metadata !DIExpression()), !dbg !9033
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9034
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9035
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !9033
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9036, metadata !DIExpression()), !dbg !9037
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9038
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9039
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9037
  call void @llvm.dbg.declare(metadata i8* %use_face_split, metadata !9040, metadata !DIExpression()), !dbg !9041
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9042
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9043
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9043
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.286, i64 0, i64 0)), !dbg !9044
  %conv = trunc i32 %call2 to i8, !dbg !9044
  store i8 %conv, i8* %use_face_split, align 1, !dbg !9041
  call void @llvm.dbg.declare(metadata i8* %use_boundary_tear, metadata !9045, metadata !DIExpression()), !dbg !9046
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9047
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !9048
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !9048
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.499, i64 0, i64 0)), !dbg !9049
  %conv5 = trunc i32 %call4 to i8, !dbg !9049
  store i8 %conv5, i8* %use_boundary_tear, align 1, !dbg !9046
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9050
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9052
  %8 = load i8, i8* %use_face_split, align 1, !dbg !9053
  %conv6 = zext i8 %8 to i32, !dbg !9053
  %9 = load i8, i8* %use_boundary_tear, align 1, !dbg !9054
  %conv7 = zext i8 %9 to i32, !dbg !9054
  %call8 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %6, %struct.wmOperator* %7, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.500, i64 0, i64 0), i32 1, i32 %conv6, i32 %conv7), !dbg !9055
  %tobool = icmp ne i8 %call8, 0, !dbg !9055
  br i1 %tobool, label %if.end, label %if.then, !dbg !9056

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !9057
  br label %return, !dbg !9057

if.end:                                           ; preds = %entry
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9059
  call void @EDBM_update_generic(%struct.BMEditMesh* %10, i8 zeroext 1, i8 zeroext 1), !dbg !9060
  store i32 4, i32* %retval, align 4, !dbg !9061
  br label %return, !dbg !9061

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !9062
  ret i32 %11, !dbg !9062
}

; Function Attrs: noinline nounwind uwtable
define internal void @edbm_dissolve_prop__use_face_split(%struct.wmOperatorType* %ot) #0 !dbg !9063 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9064, metadata !DIExpression()), !dbg !9065
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9066
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !9067
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9067
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !9066
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.286, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.287, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.288, i64 0, i64 0)), !dbg !9068
  ret void, !dbg !9069
}

; Function Attrs: noinline nounwind uwtable
define internal void @edbm_dissolve_prop__use_boundary_tear(%struct.wmOperatorType* %ot) #0 !dbg !9070 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9071, metadata !DIExpression()), !dbg !9072
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9073
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !9074
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9074
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !9073
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.499, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.501, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.502, i64 0, i64 0)), !dbg !9075
  ret void, !dbg !9076
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_dissolve_edges(%struct.wmOperatorType* %ot) #0 !dbg !9077 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9078, metadata !DIExpression()), !dbg !9079
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9080
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9081
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.262, i64 0, i64 0), i8** %name, align 8, !dbg !9082
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9083
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !9084
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.263, i64 0, i64 0), i8** %description, align 8, !dbg !9085
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9086
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !9087
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.264, i64 0, i64 0), i8** %idname, align 8, !dbg !9088
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9089
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9090
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_dissolve_edges_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9091
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9092
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !9093
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9094
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9095
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9096
  store i16 3, i16* %flag, align 8, !dbg !9097
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9098
  call void @edbm_dissolve_prop__use_verts(%struct.wmOperatorType* %6), !dbg !9099
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9100
  call void @edbm_dissolve_prop__use_face_split(%struct.wmOperatorType* %7), !dbg !9101
  ret void, !dbg !9102
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_dissolve_edges_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9103 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %use_verts = alloca i8, align 1
  %use_face_split = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9104, metadata !DIExpression()), !dbg !9105
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9106, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9108, metadata !DIExpression()), !dbg !9109
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9110
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9111
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !9109
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9112, metadata !DIExpression()), !dbg !9113
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9114
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9115
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9113
  call void @llvm.dbg.declare(metadata i8* %use_verts, metadata !9116, metadata !DIExpression()), !dbg !9117
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9118
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9119
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9119
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0)), !dbg !9120
  %conv = trunc i32 %call2 to i8, !dbg !9120
  store i8 %conv, i8* %use_verts, align 1, !dbg !9117
  call void @llvm.dbg.declare(metadata i8* %use_face_split, metadata !9121, metadata !DIExpression()), !dbg !9122
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9123
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !9124
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !9124
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.286, i64 0, i64 0)), !dbg !9125
  %conv5 = trunc i32 %call4 to i8, !dbg !9125
  store i8 %conv5, i8* %use_face_split, align 1, !dbg !9122
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9126
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9128
  %8 = load i8, i8* %use_verts, align 1, !dbg !9129
  %conv6 = zext i8 %8 to i32, !dbg !9129
  %9 = load i8, i8* %use_face_split, align 1, !dbg !9130
  %conv7 = zext i8 %9 to i32, !dbg !9130
  %call8 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %6, %struct.wmOperator* %7, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.503, i64 0, i64 0), i32 1, i32 %conv6, i32 %conv7), !dbg !9131
  %tobool = icmp ne i8 %call8, 0, !dbg !9131
  br i1 %tobool, label %if.end, label %if.then, !dbg !9132

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !9133
  br label %return, !dbg !9133

if.end:                                           ; preds = %entry
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9135
  call void @EDBM_update_generic(%struct.BMEditMesh* %10, i8 zeroext 1, i8 zeroext 1), !dbg !9136
  store i32 4, i32* %retval, align 4, !dbg !9137
  br label %return, !dbg !9137

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !9138
  ret i32 %11, !dbg !9138
}

; Function Attrs: noinline nounwind uwtable
define internal void @edbm_dissolve_prop__use_verts(%struct.wmOperatorType* %ot) #0 !dbg !9139 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9140, metadata !DIExpression()), !dbg !9141
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9142
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !9143
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9143
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !9142
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.504, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.505, i64 0, i64 0)), !dbg !9144
  ret void, !dbg !9145
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_dissolve_faces(%struct.wmOperatorType* %ot) #0 !dbg !9146 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9147, metadata !DIExpression()), !dbg !9148
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9149
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9150
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.265, i64 0, i64 0), i8** %name, align 8, !dbg !9151
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9152
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !9153
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.266, i64 0, i64 0), i8** %description, align 8, !dbg !9154
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9155
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !9156
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.267, i64 0, i64 0), i8** %idname, align 8, !dbg !9157
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9158
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9159
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_dissolve_faces_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9160
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9161
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !9162
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9163
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9164
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9165
  store i16 3, i16* %flag, align 8, !dbg !9166
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9167
  call void @edbm_dissolve_prop__use_verts(%struct.wmOperatorType* %6), !dbg !9168
  ret void, !dbg !9169
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_dissolve_faces_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9170 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %use_verts = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9171, metadata !DIExpression()), !dbg !9172
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9173, metadata !DIExpression()), !dbg !9174
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9175, metadata !DIExpression()), !dbg !9176
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9177
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9178
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !9176
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9179, metadata !DIExpression()), !dbg !9180
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9181
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9182
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9180
  call void @llvm.dbg.declare(metadata i8* %use_verts, metadata !9183, metadata !DIExpression()), !dbg !9184
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9185
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9186
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9186
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0)), !dbg !9187
  %conv = trunc i32 %call2 to i8, !dbg !9187
  store i8 %conv, i8* %use_verts, align 1, !dbg !9184
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9188
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9190
  %6 = load i8, i8* %use_verts, align 1, !dbg !9191
  %conv3 = zext i8 %6 to i32, !dbg !9191
  %call4 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, i8, i8*, ...) @EDBM_op_call_and_selectf(%struct.BMEditMesh* %4, %struct.wmOperator* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.506, i64 0, i64 0), i8 zeroext 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.507, i64 0, i64 0), i32 1, i32 %conv3), !dbg !9192
  %tobool = icmp ne i8 %call4, 0, !dbg !9192
  br i1 %tobool, label %if.end, label %if.then, !dbg !9193

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !9194
  br label %return, !dbg !9194

if.end:                                           ; preds = %entry
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9196
  call void @EDBM_update_generic(%struct.BMEditMesh* %7, i8 zeroext 1, i8 zeroext 1), !dbg !9197
  store i32 4, i32* %retval, align 4, !dbg !9198
  br label %return, !dbg !9198

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !9199
  ret i32 %8, !dbg !9199
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_dissolve_mode(%struct.wmOperatorType* %ot) #0 !dbg !9200 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9201, metadata !DIExpression()), !dbg !9202
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9203
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9204
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.268, i64 0, i64 0), i8** %name, align 8, !dbg !9205
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9206
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !9207
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.269, i64 0, i64 0), i8** %description, align 8, !dbg !9208
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9209
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !9210
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.270, i64 0, i64 0), i8** %idname, align 8, !dbg !9211
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9212
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9213
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_dissolve_mode_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9214
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9215
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !9216
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9217
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9218
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9219
  store i16 3, i16* %flag, align 8, !dbg !9220
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9221
  call void @edbm_dissolve_prop__use_verts(%struct.wmOperatorType* %6), !dbg !9222
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9223
  call void @edbm_dissolve_prop__use_face_split(%struct.wmOperatorType* %7), !dbg !9224
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9225
  call void @edbm_dissolve_prop__use_boundary_tear(%struct.wmOperatorType* %8), !dbg !9226
  ret void, !dbg !9227
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_dissolve_mode_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9228 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9229, metadata !DIExpression()), !dbg !9230
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9231, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9233, metadata !DIExpression()), !dbg !9234
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9235
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9236
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !9234
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9237, metadata !DIExpression()), !dbg !9238
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9239
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9240
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9238
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9241
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 12, !dbg !9243
  %3 = load i16, i16* %selectmode, align 4, !dbg !9243
  %conv = sext i16 %3 to i32, !dbg !9241
  %and = and i32 %conv, 1, !dbg !9244
  %tobool = icmp ne i32 %and, 0, !dbg !9244
  br i1 %tobool, label %if.then, label %if.else, !dbg !9245

if.then:                                          ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9246
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9248
  %call2 = call i32 @edbm_dissolve_verts_exec(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !9249
  store i32 %call2, i32* %retval, align 4, !dbg !9250
  br label %return, !dbg !9250

if.else:                                          ; preds = %entry
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9251
  %selectmode3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 12, !dbg !9253
  %7 = load i16, i16* %selectmode3, align 4, !dbg !9253
  %conv4 = sext i16 %7 to i32, !dbg !9251
  %and5 = and i32 %conv4, 2, !dbg !9254
  %tobool6 = icmp ne i32 %and5, 0, !dbg !9254
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !9255

if.then7:                                         ; preds = %if.else
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9256
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9258
  %call8 = call i32 @edbm_dissolve_edges_exec(%struct.bContext* %8, %struct.wmOperator* %9), !dbg !9259
  store i32 %call8, i32* %retval, align 4, !dbg !9260
  br label %return, !dbg !9260

if.else9:                                         ; preds = %if.else
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9261
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9263
  %call10 = call i32 @edbm_dissolve_faces_exec(%struct.bContext* %10, %struct.wmOperator* %11), !dbg !9264
  store i32 %call10, i32* %retval, align 4, !dbg !9265
  br label %return, !dbg !9265

return:                                           ; preds = %if.else9, %if.then7, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !9266
  ret i32 %12, !dbg !9266
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_dissolve_limited(%struct.wmOperatorType* %ot) #0 !dbg !9267 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9268, metadata !DIExpression()), !dbg !9269
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !9270, metadata !DIExpression()), !dbg !9271
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9272
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9273
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i64 0, i64 0), i8** %name, align 8, !dbg !9274
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9275
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9276
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.272, i64 0, i64 0), i8** %idname, align 8, !dbg !9277
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9278
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9279
  store i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.273, i64 0, i64 0), i8** %description, align 8, !dbg !9280
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9281
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9282
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_dissolve_limited_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9283
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9284
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !9285
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9286
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9287
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9288
  store i16 3, i16* %flag, align 8, !dbg !9289
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9290
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !9291
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9291
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !9290
  %call = call %struct.PropertyRNA* @RNA_def_float_rotation(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0), i32 0, float* null, float 0.000000e+00, float 0x400921FB60000000, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.73, i64 0, i64 0), float 0.000000e+00, float 0x400921FB60000000), !dbg !9292
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !9293
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !9294
  call void @RNA_def_property_float_default(%struct.PropertyRNA* %9, float 0x3FB6571840000000), !dbg !9295
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9296
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !9297
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !9297
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !9296
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.274, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.275, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.276, i64 0, i64 0)), !dbg !9298
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9299
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 11, !dbg !9300
  %14 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !9300
  %15 = bitcast %struct.StructRNA* %14 to i8*, !dbg !9299
  %call4 = call %struct.PropertyRNA* @RNA_def_enum_flag(i8* %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.277, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @mesh_delimit_mode_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.278, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.279, i64 0, i64 0)), !dbg !9301
  ret void, !dbg !9302
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_dissolve_limited_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9303 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %angle_limit = alloca float, align 4
  %use_dissolve_boundaries = alloca i8, align 1
  %delimit = alloca i32, align 4
  %dissolve_flag = alloca i8, align 1
  %iter = alloca %struct.BMIter, align 8
  %liter = alloca %struct.BMIter, align 8
  %ele = alloca %struct.BMElem*, align 8
  %f = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9304, metadata !DIExpression()), !dbg !9305
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9306, metadata !DIExpression()), !dbg !9307
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9308, metadata !DIExpression()), !dbg !9309
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9310
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9311
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !9309
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9312, metadata !DIExpression()), !dbg !9313
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9314
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9315
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9313
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !9316, metadata !DIExpression()), !dbg !9317
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9318
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !9319
  %3 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !9319
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !9317
  call void @llvm.dbg.declare(metadata float* %angle_limit, metadata !9320, metadata !DIExpression()), !dbg !9321
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9322
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !9323
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9323
  %call3 = call float @RNA_float_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)), !dbg !9324
  store float %call3, float* %angle_limit, align 4, !dbg !9321
  call void @llvm.dbg.declare(metadata i8* %use_dissolve_boundaries, metadata !9325, metadata !DIExpression()), !dbg !9326
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9327
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !9328
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !9328
  %call5 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.274, i64 0, i64 0)), !dbg !9329
  %conv = trunc i32 %call5 to i8, !dbg !9329
  store i8 %conv, i8* %use_dissolve_boundaries, align 1, !dbg !9326
  call void @llvm.dbg.declare(metadata i32* %delimit, metadata !9330, metadata !DIExpression()), !dbg !9331
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9332
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !9333
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !9333
  %call7 = call i32 @RNA_enum_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.277, i64 0, i64 0)), !dbg !9334
  store i32 %call7, i32* %delimit, align 4, !dbg !9331
  call void @llvm.dbg.declare(metadata i8* %dissolve_flag, metadata !9335, metadata !DIExpression()), !dbg !9336
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9337
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 12, !dbg !9339
  %11 = load i16, i16* %selectmode, align 4, !dbg !9339
  %conv8 = sext i16 %11 to i32, !dbg !9337
  %cmp = icmp eq i32 %conv8, 4, !dbg !9340
  br i1 %cmp, label %if.then, label %if.else, !dbg !9341

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !9342, metadata !DIExpression()), !dbg !9344
  call void @llvm.dbg.declare(metadata %struct.BMIter* %liter, metadata !9345, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.declare(metadata %struct.BMElem** %ele, metadata !9347, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !9349, metadata !DIExpression()), !dbg !9350
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !9351, metadata !DIExpression()), !dbg !9352
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9353
  %call10 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %12, i8 zeroext 1, i8* null), !dbg !9353
  %13 = bitcast i8* %call10 to %struct.BMElem*, !dbg !9353
  store %struct.BMElem* %13, %struct.BMElem** %ele, align 8, !dbg !9353
  br label %for.cond, !dbg !9353

for.cond:                                         ; preds = %for.inc, %if.then
  %14 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !9355
  %tobool = icmp ne %struct.BMElem* %14, null, !dbg !9353
  br i1 %tobool, label %for.body, label %for.end, !dbg !9353

for.body:                                         ; preds = %for.cond
  %15 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !9357
  %head = getelementptr inbounds %struct.BMElem, %struct.BMElem* %15, i32 0, i32 0, !dbg !9357
  %16 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !9357
  %head11 = getelementptr inbounds %struct.BMElem, %struct.BMElem* %16, i32 0, i32 0, !dbg !9357
  %call12 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head11, i8 zeroext 1), !dbg !9357
  %conv13 = zext i8 %call12 to i32, !dbg !9357
  call void @_bm_elem_flag_set(%struct.BMHeader* %head, i8 zeroext 16, i32 %conv13), !dbg !9357
  br label %for.inc, !dbg !9359

for.inc:                                          ; preds = %for.body
  %call14 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9355
  %17 = bitcast i8* %call14 to %struct.BMElem*, !dbg !9355
  store %struct.BMElem* %17, %struct.BMElem** %ele, align 8, !dbg !9355
  br label %for.cond, !dbg !9355, !llvm.loop !9360

for.end:                                          ; preds = %for.cond
  %18 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9362
  %call15 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %18, i8 zeroext 2, i8* null), !dbg !9362
  %19 = bitcast i8* %call15 to %struct.BMElem*, !dbg !9362
  store %struct.BMElem* %19, %struct.BMElem** %ele, align 8, !dbg !9362
  br label %for.cond16, !dbg !9362

for.cond16:                                       ; preds = %for.inc23, %for.end
  %20 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !9364
  %tobool17 = icmp ne %struct.BMElem* %20, null, !dbg !9362
  br i1 %tobool17, label %for.body18, label %for.end25, !dbg !9362

for.body18:                                       ; preds = %for.cond16
  %21 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !9366
  %head19 = getelementptr inbounds %struct.BMElem, %struct.BMElem* %21, i32 0, i32 0, !dbg !9366
  %22 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !9366
  %head20 = getelementptr inbounds %struct.BMElem, %struct.BMElem* %22, i32 0, i32 0, !dbg !9366
  %call21 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head20, i8 zeroext 1), !dbg !9366
  %conv22 = zext i8 %call21 to i32, !dbg !9366
  call void @_bm_elem_flag_set(%struct.BMHeader* %head19, i8 zeroext 16, i32 %conv22), !dbg !9366
  br label %for.inc23, !dbg !9368

for.inc23:                                        ; preds = %for.body18
  %call24 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9364
  %23 = bitcast i8* %call24 to %struct.BMElem*, !dbg !9364
  store %struct.BMElem* %23, %struct.BMElem** %ele, align 8, !dbg !9364
  br label %for.cond16, !dbg !9364, !llvm.loop !9369

for.end25:                                        ; preds = %for.cond16
  %24 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9371
  %call26 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %24, i8 zeroext 3, i8* null), !dbg !9371
  %25 = bitcast i8* %call26 to %struct.BMFace*, !dbg !9371
  store %struct.BMFace* %25, %struct.BMFace** %f, align 8, !dbg !9371
  br label %for.cond27, !dbg !9371

for.cond27:                                       ; preds = %for.inc43, %for.end25
  %26 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9373
  %tobool28 = icmp ne %struct.BMFace* %26, null, !dbg !9371
  br i1 %tobool28, label %for.body29, label %for.end45, !dbg !9371

for.body29:                                       ; preds = %for.cond27
  %27 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9375
  %head30 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %27, i32 0, i32 0, !dbg !9375
  %call31 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head30, i8 zeroext 1), !dbg !9375
  %tobool32 = icmp ne i8 %call31, 0, !dbg !9375
  br i1 %tobool32, label %if.end, label %if.then33, !dbg !9378

if.then33:                                        ; preds = %for.body29
  %28 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9379
  %29 = bitcast %struct.BMFace* %28 to i8*, !dbg !9379
  %call34 = call i8* @BM_iter_new(%struct.BMIter* %liter, %struct.BMesh* null, i8 zeroext 11, i8* %29), !dbg !9379
  %30 = bitcast i8* %call34 to %struct.BMLoop*, !dbg !9379
  store %struct.BMLoop* %30, %struct.BMLoop** %l, align 8, !dbg !9379
  br label %for.cond35, !dbg !9379

for.cond35:                                       ; preds = %for.inc40, %if.then33
  %31 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9382
  %tobool36 = icmp ne %struct.BMLoop* %31, null, !dbg !9379
  br i1 %tobool36, label %for.body37, label %for.end42, !dbg !9379

for.body37:                                       ; preds = %for.cond35
  %32 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9384
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %32, i32 0, i32 1, !dbg !9384
  %33 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !9384
  %head38 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %33, i32 0, i32 0, !dbg !9384
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head38, i8 zeroext 16), !dbg !9384
  %34 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9386
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %34, i32 0, i32 2, !dbg !9386
  %35 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !9386
  %head39 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %35, i32 0, i32 0, !dbg !9386
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head39, i8 zeroext 16), !dbg !9386
  br label %for.inc40, !dbg !9387

for.inc40:                                        ; preds = %for.body37
  %call41 = call i8* @BM_iter_step(%struct.BMIter* %liter), !dbg !9382
  %36 = bitcast i8* %call41 to %struct.BMLoop*, !dbg !9382
  store %struct.BMLoop* %36, %struct.BMLoop** %l, align 8, !dbg !9382
  br label %for.cond35, !dbg !9382, !llvm.loop !9388

for.end42:                                        ; preds = %for.cond35
  br label %if.end, !dbg !9390

if.end:                                           ; preds = %for.end42, %for.body29
  br label %for.inc43, !dbg !9391

for.inc43:                                        ; preds = %if.end
  %call44 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9373
  %37 = bitcast i8* %call44 to %struct.BMFace*, !dbg !9373
  store %struct.BMFace* %37, %struct.BMFace** %f, align 8, !dbg !9373
  br label %for.cond27, !dbg !9373, !llvm.loop !9392

for.end45:                                        ; preds = %for.cond27
  store i8 16, i8* %dissolve_flag, align 1, !dbg !9394
  br label %if.end46, !dbg !9395

if.else:                                          ; preds = %entry
  store i8 1, i8* %dissolve_flag, align 1, !dbg !9396
  br label %if.end46

if.end46:                                         ; preds = %if.else, %for.end45
  %38 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9398
  %39 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9399
  %40 = load i8, i8* %dissolve_flag, align 1, !dbg !9400
  %conv47 = zext i8 %40 to i32, !dbg !9400
  %41 = load i8, i8* %dissolve_flag, align 1, !dbg !9401
  %conv48 = zext i8 %41 to i32, !dbg !9401
  %42 = load float, float* %angle_limit, align 4, !dbg !9402
  %conv49 = fpext float %42 to double, !dbg !9402
  %43 = load i8, i8* %use_dissolve_boundaries, align 1, !dbg !9403
  %conv50 = zext i8 %43 to i32, !dbg !9403
  %44 = load i32, i32* %delimit, align 4, !dbg !9404
  %call51 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, i8, i8*, ...) @EDBM_op_call_and_selectf(%struct.BMEditMesh* %38, %struct.wmOperator* %39, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.506, i64 0, i64 0), i8 zeroext 1, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.508, i64 0, i64 0), i32 %conv47, i32 %conv48, double %conv49, i32 %conv50, i32 %44), !dbg !9405
  %45 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9406
  call void @EDBM_update_generic(%struct.BMEditMesh* %45, i8 zeroext 1, i8 zeroext 1), !dbg !9407
  ret i32 4, !dbg !9408
}

declare dso_local %struct.PropertyRNA* @RNA_def_enum_flag(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_dissolve_degenerate(%struct.wmOperatorType* %ot) #0 !dbg !9409 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9410, metadata !DIExpression()), !dbg !9411
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9412
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9413
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.280, i64 0, i64 0), i8** %name, align 8, !dbg !9414
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9415
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9416
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.281, i64 0, i64 0), i8** %idname, align 8, !dbg !9417
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9418
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9419
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.282, i64 0, i64 0), i8** %description, align 8, !dbg !9420
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9421
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9422
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_dissolve_degenerate_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9423
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9424
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !9425
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9426
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9427
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9428
  store i16 3, i16* %flag, align 8, !dbg !9429
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9430
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !9431
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9431
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !9430
  %call = call %struct.PropertyRNA* @RNA_def_float(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i64 0, i64 0), float 0x3F1A36E2E0000000, float 0x3EB0C6F7A0000000, float 5.000000e+01, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.171, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.172, i64 0, i64 0), float 0x3EE4F8B580000000, float 1.000000e+01), !dbg !9432
  ret void, !dbg !9433
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_dissolve_degenerate_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9434 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %thresh = alloca float, align 4
  %bm = alloca %struct.BMesh*, align 8
  %totelem = alloca [3 x i32], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9435, metadata !DIExpression()), !dbg !9436
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9437, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9439, metadata !DIExpression()), !dbg !9440
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9441
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9442
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !9440
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9443, metadata !DIExpression()), !dbg !9444
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9445
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9446
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9444
  call void @llvm.dbg.declare(metadata float* %thresh, metadata !9447, metadata !DIExpression()), !dbg !9448
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9449
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9450
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9450
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i64 0, i64 0)), !dbg !9451
  store float %call2, float* %thresh, align 4, !dbg !9448
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !9452, metadata !DIExpression()), !dbg !9453
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9454
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !9455
  %5 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !9455
  store %struct.BMesh* %5, %struct.BMesh** %bm, align 8, !dbg !9453
  call void @llvm.dbg.declare(metadata [3 x i32]* %totelem, metadata !9456, metadata !DIExpression()), !dbg !9457
  %arrayinit.begin = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !9458
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9459
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 0, !dbg !9460
  %7 = load i32, i32* %totvert, align 8, !dbg !9460
  store i32 %7, i32* %arrayinit.begin, align 4, !dbg !9458
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !9458
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9461
  %totedge = getelementptr inbounds %struct.BMesh, %struct.BMesh* %8, i32 0, i32 1, !dbg !9462
  %9 = load i32, i32* %totedge, align 4, !dbg !9462
  store i32 %9, i32* %arrayinit.element, align 4, !dbg !9458
  %arrayinit.element4 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1, !dbg !9458
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9463
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 3, !dbg !9464
  %11 = load i32, i32* %totface, align 4, !dbg !9464
  store i32 %11, i32* %arrayinit.element4, align 4, !dbg !9458
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9465
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9467
  %14 = load float, float* %thresh, align 4, !dbg !9468
  %conv = fpext float %14 to double, !dbg !9468
  %call5 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %12, %struct.wmOperator* %13, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.509, i64 0, i64 0), i32 1, double %conv), !dbg !9469
  %tobool = icmp ne i8 %call5, 0, !dbg !9469
  br i1 %tobool, label %if.end, label %if.then, !dbg !9470

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !9471
  br label %return, !dbg !9471

if.end:                                           ; preds = %entry
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9473
  call void @EDBM_select_flush(%struct.BMEditMesh* %15), !dbg !9474
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9475
  call void @EDBM_update_generic(%struct.BMEditMesh* %16, i8 zeroext 1, i8 zeroext 1), !dbg !9476
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9477
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %17, i32 0, i32 8, !dbg !9478
  %18 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !9478
  %19 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9479
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !9480
  call void @edbm_report_delete_info(%struct.ReportList* %18, %struct.BMesh* %19, i32* %arraydecay), !dbg !9481
  store i32 4, i32* %retval, align 4, !dbg !9482
  br label %return, !dbg !9482

return:                                           ; preds = %if.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !9483
  ret i32 %20, !dbg !9483
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_delete_edgeloop(%struct.wmOperatorType* %ot) #0 !dbg !9484 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9485, metadata !DIExpression()), !dbg !9486
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9487
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9488
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.283, i64 0, i64 0), i8** %name, align 8, !dbg !9489
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9490
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !9491
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.284, i64 0, i64 0), i8** %description, align 8, !dbg !9492
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9493
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !9494
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.285, i64 0, i64 0), i8** %idname, align 8, !dbg !9495
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9496
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9497
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_delete_edgeloop_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9498
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9499
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !9500
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9501
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9502
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9503
  store i16 3, i16* %flag, align 8, !dbg !9504
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9505
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !9506
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9506
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !9505
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.286, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.287, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.288, i64 0, i64 0)), !dbg !9507
  ret void, !dbg !9508
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_delete_edgeloop_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9509 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %use_face_split = alloca i8, align 1
  %e = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %l_iter = alloca %struct.BMLoop*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9510, metadata !DIExpression()), !dbg !9511
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9512, metadata !DIExpression()), !dbg !9513
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9514, metadata !DIExpression()), !dbg !9515
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9516
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9517
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !9515
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9518, metadata !DIExpression()), !dbg !9519
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9520
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9521
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9519
  call void @llvm.dbg.declare(metadata i8* %use_face_split, metadata !9522, metadata !DIExpression()), !dbg !9523
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9524
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9525
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9525
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.286, i64 0, i64 0)), !dbg !9526
  %conv = trunc i32 %call2 to i8, !dbg !9526
  store i8 %conv, i8* %use_face_split, align 1, !dbg !9523
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !9527, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !9530, metadata !DIExpression()), !dbg !9531
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9532
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !9533
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9533
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %5, i8 zeroext 8, i8 zeroext 16, i8 zeroext 0), !dbg !9534
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9535
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !9535
  %7 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !9535
  %call4 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %7, i8 zeroext 2, i8* null), !dbg !9535
  %8 = bitcast i8* %call4 to %struct.BMEdge*, !dbg !9535
  store %struct.BMEdge* %8, %struct.BMEdge** %e, align 8, !dbg !9535
  br label %for.cond, !dbg !9535

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !9537
  %tobool = icmp ne %struct.BMEdge* %9, null, !dbg !9535
  br i1 %tobool, label %for.body, label %for.end, !dbg !9535

for.body:                                         ; preds = %for.cond
  %10 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !9539
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %10, i32 0, i32 0, !dbg !9539
  %call5 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !9539
  %conv6 = zext i8 %call5 to i32, !dbg !9539
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !9539
  br i1 %tobool7, label %land.lhs.true, label %if.end, !dbg !9542

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !9543
  %l = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %11, i32 0, i32 4, !dbg !9544
  %12 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !9544
  %tobool8 = icmp ne %struct.BMLoop* %12, null, !dbg !9543
  br i1 %tobool8, label %if.then, label %if.end, !dbg !9545

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !9546, metadata !DIExpression()), !dbg !9548
  %13 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !9549
  %l9 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %13, i32 0, i32 4, !dbg !9550
  %14 = load %struct.BMLoop*, %struct.BMLoop** %l9, align 8, !dbg !9550
  store %struct.BMLoop* %14, %struct.BMLoop** %l_iter, align 8, !dbg !9548
  br label %do.body, !dbg !9551

do.body:                                          ; preds = %do.cond, %if.then
  %15 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !9552
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %15, i32 0, i32 3, !dbg !9552
  %16 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !9552
  %head10 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %16, i32 0, i32 0, !dbg !9552
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head10, i8 zeroext 16), !dbg !9552
  br label %do.cond, !dbg !9554

do.cond:                                          ; preds = %do.body
  %17 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !9555
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %17, i32 0, i32 4, !dbg !9556
  %18 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !9556
  store %struct.BMLoop* %18, %struct.BMLoop** %l_iter, align 8, !dbg !9557
  %19 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !9558
  %l11 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %19, i32 0, i32 4, !dbg !9559
  %20 = load %struct.BMLoop*, %struct.BMLoop** %l11, align 8, !dbg !9559
  %cmp = icmp ne %struct.BMLoop* %18, %20, !dbg !9560
  br i1 %cmp, label %do.body, label %do.end, !dbg !9554, !llvm.loop !9561

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !9563

if.end:                                           ; preds = %do.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9564

for.inc:                                          ; preds = %if.end
  %call13 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !9537
  %21 = bitcast i8* %call13 to %struct.BMEdge*, !dbg !9537
  store %struct.BMEdge* %21, %struct.BMEdge** %e, align 8, !dbg !9537
  br label %for.cond, !dbg !9537, !llvm.loop !9565

for.end:                                          ; preds = %for.cond
  %22 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9567
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9569
  %24 = load i8, i8* %use_face_split, align 1, !dbg !9570
  %conv14 = zext i8 %24 to i32, !dbg !9570
  %call15 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %22, %struct.wmOperator* %23, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.503, i64 0, i64 0), i32 1, i32 1, i32 %conv14), !dbg !9571
  %tobool16 = icmp ne i8 %call15, 0, !dbg !9571
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !9572

if.then17:                                        ; preds = %for.end
  store i32 2, i32* %retval, align 4, !dbg !9573
  br label %return, !dbg !9573

if.end18:                                         ; preds = %for.end
  %25 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9575
  %bm19 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %25, i32 0, i32 0, !dbg !9576
  %26 = load %struct.BMesh*, %struct.BMesh** %bm19, align 8, !dbg !9576
  call void @BM_mesh_elem_hflag_enable_test(%struct.BMesh* %26, i8 zeroext 8, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16), !dbg !9577
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9578
  call void @EDBM_update_generic(%struct.BMEditMesh* %27, i8 zeroext 1, i8 zeroext 1), !dbg !9579
  store i32 4, i32* %retval, align 4, !dbg !9580
  br label %return, !dbg !9580

return:                                           ; preds = %if.end18, %if.then17
  %28 = load i32, i32* %retval, align 4, !dbg !9581
  ret i32 %28, !dbg !9581
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_split(%struct.wmOperatorType* %ot) #0 !dbg !9582 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9583, metadata !DIExpression()), !dbg !9584
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9585
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9586
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.289, i64 0, i64 0), i8** %name, align 8, !dbg !9587
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9588
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !9589
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.290, i64 0, i64 0), i8** %idname, align 8, !dbg !9590
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9591
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9592
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.291, i64 0, i64 0), i8** %description, align 8, !dbg !9593
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9594
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9595
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_split_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9596
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9597
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !9598
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9599
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9600
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9601
  store i16 3, i16* %flag, align 8, !dbg !9602
  ret void, !dbg !9603
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_split_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9604 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ob = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9605, metadata !DIExpression()), !dbg !9606
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9607, metadata !DIExpression()), !dbg !9608
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9609, metadata !DIExpression()), !dbg !9610
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9611
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9612
  store %struct.Object* %call, %struct.Object** %ob, align 8, !dbg !9610
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9613, metadata !DIExpression()), !dbg !9614
  %1 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9615
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9616
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9614
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !9617, metadata !DIExpression()), !dbg !9618
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9619
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9620
  %call2 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %2, %struct.BMOperator* %bmop, %struct.wmOperator* %3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.510, i64 0, i64 0), i32 1, i32 0), !dbg !9621
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9622
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !9623
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !9623
  call void @BMO_op_exec(%struct.BMesh* %5, %struct.BMOperator* %bmop), !dbg !9624
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9625
  %bm3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !9626
  %7 = load %struct.BMesh*, %struct.BMesh** %bm3, align 8, !dbg !9626
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %7, i8 zeroext 11, i8 zeroext 1, i8 zeroext 0), !dbg !9627
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9628
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 0, !dbg !9629
  %9 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !9629
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !9630
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !9631
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %9, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.422, i64 0, i64 0), i8 zeroext 11, i8 zeroext 1, i8 zeroext 1), !dbg !9632
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9633
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9635
  %call5 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %10, %struct.BMOperator* %bmop, %struct.wmOperator* %11, i8 zeroext 1), !dbg !9636
  %tobool = icmp ne i8 %call5, 0, !dbg !9636
  br i1 %tobool, label %if.end, label %if.then, !dbg !9637

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !9638
  br label %return, !dbg !9638

if.end:                                           ; preds = %entry
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9640
  call void @EDBM_mesh_normals_update(%struct.BMEditMesh* %12), !dbg !9641
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9642
  call void @EDBM_update_generic(%struct.BMEditMesh* %13, i8 zeroext 1, i8 zeroext 1), !dbg !9643
  store i32 4, i32* %retval, align 4, !dbg !9644
  br label %return, !dbg !9644

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !9645
  ret i32 %14, !dbg !9645
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_sort_elements(%struct.wmOperatorType* %ot) #0 !dbg !4040 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9646, metadata !DIExpression()), !dbg !9647
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9648
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9649
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.316, i64 0, i64 0), i8** %name, align 8, !dbg !9650
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9651
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !9652
  store i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.317, i64 0, i64 0), i8** %description, align 8, !dbg !9653
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9654
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !9655
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.318, i64 0, i64 0), i8** %idname, align 8, !dbg !9656
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9657
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !9658
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !9659
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9660
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !9661
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_sort_elements_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9662
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9663
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !9664
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9665
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9666
  %ui = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 10, !dbg !9667
  store void (%struct.bContext*, %struct.wmOperator*)* @edbm_sort_elements_ui, void (%struct.bContext*, %struct.wmOperator*)** %ui, align 8, !dbg !9668
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9669
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 19, !dbg !9670
  store i16 3, i16* %flag, align 8, !dbg !9671
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9672
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !9673
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9673
  %10 = bitcast %struct.StructRNA* %9 to i8*, !dbg !9672
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([8 x %struct.EnumPropertyItem], [8 x %struct.EnumPropertyItem]* @MESH_OT_sort_elements.type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.319, i64 0, i64 0)), !dbg !9674
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9675
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 13, !dbg !9676
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !9677
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9678
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !9679
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !9679
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !9678
  %call2 = call %struct.PropertyRNA* @RNA_def_enum_flag(i8* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.320, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @MESH_OT_sort_elements.elem_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.321, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.322, i64 0, i64 0)), !dbg !9680
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9681
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !9682
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !9682
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !9681
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.323, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.311, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.324, i64 0, i64 0)), !dbg !9683
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9684
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 11, !dbg !9685
  %19 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !9685
  %20 = bitcast %struct.StructRNA* %19 to i8*, !dbg !9684
  %call6 = call %struct.PropertyRNA* @RNA_def_int(i8* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i32 0, i32 0, i32 2147483647, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.325, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.326, i64 0, i64 0), i32 0, i32 255), !dbg !9686
  ret void, !dbg !9687
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_sort_elements_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9688 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  %action = alloca i32, align 4
  %prop_elem_types = alloca %struct.PropertyRNA*, align 8
  %use_reverse = alloca i8, align 1
  %seed = alloca i32, align 4
  %elem_types = alloca i32, align 4
  %em = alloca %struct.BMEditMesh*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9689, metadata !DIExpression()), !dbg !9690
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9691, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !9693, metadata !DIExpression()), !dbg !9694
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9695
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %0), !dbg !9696
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !9694
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9697, metadata !DIExpression()), !dbg !9698
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9699
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !9700
  store %struct.Object* %call1, %struct.Object** %ob, align 8, !dbg !9698
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !9701, metadata !DIExpression()), !dbg !9702
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9703
  %call2 = call %struct.View3D* @CTX_wm_view3d(%struct.bContext* %2), !dbg !9704
  store %struct.View3D* %call2, %struct.View3D** %v3d, align 8, !dbg !9702
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !9705, metadata !DIExpression()), !dbg !9768
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9769
  %call3 = call %struct.RegionView3D* @ED_view3d_context_rv3d(%struct.bContext* %3), !dbg !9770
  store %struct.RegionView3D* %call3, %struct.RegionView3D** %rv3d, align 8, !dbg !9768
  call void @llvm.dbg.declare(metadata i32* %action, metadata !9771, metadata !DIExpression()), !dbg !9772
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9773
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !9774
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9774
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0)), !dbg !9775
  store i32 %call4, i32* %action, align 4, !dbg !9772
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop_elem_types, metadata !9776, metadata !DIExpression()), !dbg !9777
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9778
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !9779
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !9779
  %call6 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.320, i64 0, i64 0)), !dbg !9780
  store %struct.PropertyRNA* %call6, %struct.PropertyRNA** %prop_elem_types, align 8, !dbg !9777
  call void @llvm.dbg.declare(metadata i8* %use_reverse, metadata !9781, metadata !DIExpression()), !dbg !9782
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9783
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !9784
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !9784
  %call8 = call i32 @RNA_boolean_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.323, i64 0, i64 0)), !dbg !9785
  %conv = trunc i32 %call8 to i8, !dbg !9785
  store i8 %conv, i8* %use_reverse, align 1, !dbg !9782
  call void @llvm.dbg.declare(metadata i32* %seed, metadata !9786, metadata !DIExpression()), !dbg !9787
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9788
  %ptr9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !9789
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr9, align 8, !dbg !9789
  %call10 = call i32 @RNA_int_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0)), !dbg !9790
  store i32 %call10, i32* %seed, align 4, !dbg !9787
  call void @llvm.dbg.declare(metadata i32* %elem_types, metadata !9791, metadata !DIExpression()), !dbg !9792
  store i32 0, i32* %elem_types, align 4, !dbg !9792
  %12 = load i32, i32* %action, align 4, !dbg !9793
  %cmp = icmp eq i32 %12, 1, !dbg !9793
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9793

lor.lhs.false:                                    ; preds = %entry
  %13 = load i32, i32* %action, align 4, !dbg !9793
  %cmp12 = icmp eq i32 %13, 2, !dbg !9793
  br i1 %cmp12, label %if.then, label %if.end17, !dbg !9795

if.then:                                          ; preds = %lor.lhs.false, %entry
  %14 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !9796
  %cmp14 = icmp eq %struct.RegionView3D* %14, null, !dbg !9799
  br i1 %cmp14, label %if.then16, label %if.end, !dbg !9800

if.then16:                                        ; preds = %if.then
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9801
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 8, !dbg !9803
  %16 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !9803
  call void @BKE_report(%struct.ReportList* %16, i32 32, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.511, i64 0, i64 0)), !dbg !9804
  store i32 2, i32* %retval, align 4, !dbg !9805
  br label %return, !dbg !9805

if.end:                                           ; preds = %if.then
  br label %if.end17, !dbg !9806

if.end17:                                         ; preds = %if.end, %lor.lhs.false
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9807
  %ptr18 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %17, i32 0, i32 7, !dbg !9809
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr18, align 8, !dbg !9809
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop_elem_types, align 8, !dbg !9810
  %call19 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %18, %struct.PropertyRNA* %19), !dbg !9811
  %tobool = icmp ne i8 %call19, 0, !dbg !9811
  br i1 %tobool, label %if.then20, label %if.else, !dbg !9812

if.then20:                                        ; preds = %if.end17
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9813
  %ptr21 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 7, !dbg !9815
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr21, align 8, !dbg !9815
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop_elem_types, align 8, !dbg !9816
  %call22 = call i32 @RNA_property_enum_get(%struct.PointerRNA* %21, %struct.PropertyRNA* %22), !dbg !9817
  store i32 %call22, i32* %elem_types, align 4, !dbg !9818
  br label %if.end43, !dbg !9819

if.else:                                          ; preds = %if.end17
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9820, metadata !DIExpression()), !dbg !9822
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9823
  %call23 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %23), !dbg !9824
  store %struct.BMEditMesh* %call23, %struct.BMEditMesh** %em, align 8, !dbg !9822
  %24 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9825
  %selectmode = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %24, i32 0, i32 12, !dbg !9827
  %25 = load i16, i16* %selectmode, align 4, !dbg !9827
  %conv24 = sext i16 %25 to i32, !dbg !9825
  %and = and i32 %conv24, 1, !dbg !9828
  %tobool25 = icmp ne i32 %and, 0, !dbg !9828
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !9829

if.then26:                                        ; preds = %if.else
  %26 = load i32, i32* %elem_types, align 4, !dbg !9830
  %or = or i32 %26, 1, !dbg !9830
  store i32 %or, i32* %elem_types, align 4, !dbg !9830
  br label %if.end27, !dbg !9831

if.end27:                                         ; preds = %if.then26, %if.else
  %27 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9832
  %selectmode28 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %27, i32 0, i32 12, !dbg !9834
  %28 = load i16, i16* %selectmode28, align 4, !dbg !9834
  %conv29 = sext i16 %28 to i32, !dbg !9832
  %and30 = and i32 %conv29, 2, !dbg !9835
  %tobool31 = icmp ne i32 %and30, 0, !dbg !9835
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !9836

if.then32:                                        ; preds = %if.end27
  %29 = load i32, i32* %elem_types, align 4, !dbg !9837
  %or33 = or i32 %29, 2, !dbg !9837
  store i32 %or33, i32* %elem_types, align 4, !dbg !9837
  br label %if.end34, !dbg !9838

if.end34:                                         ; preds = %if.then32, %if.end27
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9839
  %selectmode35 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %30, i32 0, i32 12, !dbg !9841
  %31 = load i16, i16* %selectmode35, align 4, !dbg !9841
  %conv36 = sext i16 %31 to i32, !dbg !9839
  %and37 = and i32 %conv36, 4, !dbg !9842
  %tobool38 = icmp ne i32 %and37, 0, !dbg !9842
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !9843

if.then39:                                        ; preds = %if.end34
  %32 = load i32, i32* %elem_types, align 4, !dbg !9844
  %or40 = or i32 %32, 8, !dbg !9844
  store i32 %or40, i32* %elem_types, align 4, !dbg !9844
  br label %if.end41, !dbg !9845

if.end41:                                         ; preds = %if.then39, %if.end34
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9846
  %ptr42 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %33, i32 0, i32 7, !dbg !9847
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr42, align 8, !dbg !9847
  %35 = load i32, i32* %elem_types, align 4, !dbg !9848
  call void @RNA_enum_set(%struct.PointerRNA* %34, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.320, i64 0, i64 0), i32 %35), !dbg !9849
  br label %if.end43

if.end43:                                         ; preds = %if.end41, %if.then20
  %36 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !9850
  %37 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9851
  %38 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !9852
  %39 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !9853
  %40 = load i32, i32* %elem_types, align 4, !dbg !9854
  %41 = load i32, i32* %action, align 4, !dbg !9855
  %42 = load i8, i8* %use_reverse, align 1, !dbg !9856
  %conv44 = zext i8 %42 to i32, !dbg !9856
  %43 = load i32, i32* %seed, align 4, !dbg !9857
  call void @sort_bmelem_flag(%struct.Scene* %36, %struct.Object* %37, %struct.View3D* %38, %struct.RegionView3D* %39, i32 %40, i32 1, i32 %41, i32 %conv44, i32 %43), !dbg !9858
  store i32 4, i32* %retval, align 4, !dbg !9859
  br label %return, !dbg !9859

return:                                           ; preds = %if.end43, %if.then16
  %44 = load i32, i32* %retval, align 4, !dbg !9860
  ret i32 %44, !dbg !9860
}

; Function Attrs: noinline nounwind uwtable
define internal void @edbm_sort_elements_ui(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9861 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9862, metadata !DIExpression()), !dbg !9863
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9864, metadata !DIExpression()), !dbg !9865
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !9866, metadata !DIExpression()), !dbg !9867
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9868
  %layout1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 11, !dbg !9869
  %1 = load %struct.uiLayout*, %struct.uiLayout** %layout1, align 8, !dbg !9869
  store %struct.uiLayout* %1, %struct.uiLayout** %layout, align 8, !dbg !9867
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !9870, metadata !DIExpression()), !dbg !9906
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9907
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %2), !dbg !9908
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !9906
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !9909, metadata !DIExpression()), !dbg !9910
  %3 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !9911
  %id = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %3, i32 0, i32 0, !dbg !9912
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9913
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 4, !dbg !9914
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !9914
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !9915
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9915
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9916
  %properties = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 3, !dbg !9917
  %8 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !9917
  %9 = bitcast %struct.IDProperty* %8 to i8*, !dbg !9916
  call void @RNA_pointer_create(%struct.ID* %id, %struct.StructRNA* %6, i8* %9, %struct.PointerRNA* %ptr), !dbg !9918
  %10 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !9919
  %call2 = call i32 @uiDefAutoButsRNA(%struct.uiLayout* %10, %struct.PointerRNA* %ptr, i8 (%struct.PointerRNA*, %struct.PropertyRNA*)* @edbm_sort_elements_draw_check_prop, i8 zeroext 0), !dbg !9920
  ret void, !dbg !9921
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_noise(%struct.wmOperatorType* %ot) #0 !dbg !9922 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !9923, metadata !DIExpression()), !dbg !9924
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9925
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !9926
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.327, i64 0, i64 0), i8** %name, align 8, !dbg !9927
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9928
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !9929
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.328, i64 0, i64 0), i8** %description, align 8, !dbg !9930
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9931
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !9932
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.329, i64 0, i64 0), i8** %idname, align 8, !dbg !9933
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9934
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !9935
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_noise_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9936
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9937
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !9938
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !9939
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9940
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !9941
  store i16 3, i16* %flag, align 8, !dbg !9942
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9943
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !9944
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9944
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !9943
  %call = call %struct.PropertyRNA* @RNA_def_float(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i64 0, i64 0), float 0x3FB99999A0000000, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.330, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), float 0.000000e+00, float 1.000000e+00), !dbg !9945
  ret void, !dbg !9946
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_noise_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !9947 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %ma = alloca %struct.Material*, align 8
  %tex = alloca %struct.Tex*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %fac = alloca float, align 4
  %b2 = alloca float, align 4
  %vec = alloca [3 x float], align 4
  %ofs = alloca float, align 4
  %tin = alloca float, align 4
  %dum = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9948, metadata !DIExpression()), !dbg !9949
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9950, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !9952, metadata !DIExpression()), !dbg !9953
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9954
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !9955
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !9953
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !9956, metadata !DIExpression()), !dbg !9957
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9958
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !9959
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !9957
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !9960, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !9964, metadata !DIExpression()), !dbg !9967
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !9968, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !9970, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.declare(metadata float* %fac, metadata !9972, metadata !DIExpression()), !dbg !9973
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9974
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !9975
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9975
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i64 0, i64 0)), !dbg !9976
  store float %call2, float* %fac, align 4, !dbg !9973
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !9977
  %cmp = icmp eq %struct.BMEditMesh* %4, null, !dbg !9979
  br i1 %cmp, label %if.then, label %if.end, !dbg !9980

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !9981
  br label %return, !dbg !9981

if.end:                                           ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9983
  %6 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !9985
  %actcol = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 32, !dbg !9986
  %7 = load i32, i32* %actcol, align 4, !dbg !9986
  %conv = trunc i32 %7 to i16, !dbg !9985
  %call3 = call %struct.Material* @give_current_material(%struct.Object* %5, i16 signext %conv), !dbg !9987
  store %struct.Material* %call3, %struct.Material** %ma, align 8, !dbg !9988
  %cmp4 = icmp eq %struct.Material* %call3, null, !dbg !9989
  br i1 %cmp4, label %if.then9, label %lor.lhs.false, !dbg !9990

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !9991
  %call6 = call %struct.Tex* @give_current_material_texture(%struct.Material* %8), !dbg !9992
  store %struct.Tex* %call6, %struct.Tex** %tex, align 8, !dbg !9993
  %cmp7 = icmp eq %struct.Tex* %call6, null, !dbg !9994
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !9995

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9996
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 8, !dbg !9998
  %10 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !9998
  call void @BKE_report(%struct.ReportList* %10, i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.525, i64 0, i64 0)), !dbg !9999
  store i32 4, i32* %retval, align 4, !dbg !10000
  br label %return, !dbg !10000

if.end10:                                         ; preds = %lor.lhs.false
  %11 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10001
  %type = getelementptr inbounds %struct.Tex, %struct.Tex* %11, i32 0, i32 32, !dbg !10003
  %12 = load i16, i16* %type, align 8, !dbg !10003
  %conv11 = sext i16 %12 to i32, !dbg !10001
  %cmp12 = icmp eq i32 %conv11, 6, !dbg !10004
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !10005

if.then14:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata float* %b2, metadata !10006, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !10009, metadata !DIExpression()), !dbg !10010
  call void @llvm.dbg.declare(metadata float* %ofs, metadata !10011, metadata !DIExpression()), !dbg !10012
  %13 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10013
  %turbul = getelementptr inbounds %struct.Tex, %struct.Tex* %13, i32 0, i32 3, !dbg !10014
  %14 = load float, float* %turbul, align 4, !dbg !10014
  %div = fdiv float %14, 2.000000e+02, !dbg !10015
  store float %div, float* %ofs, align 4, !dbg !10012
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10016
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !10016
  %16 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10016
  %call15 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %16, i8 zeroext 1, i8* null), !dbg !10016
  %17 = bitcast i8* %call15 to %struct.BMVert*, !dbg !10016
  store %struct.BMVert* %17, %struct.BMVert** %eve, align 8, !dbg !10016
  br label %for.cond, !dbg !10016

for.cond:                                         ; preds = %for.inc, %if.then14
  %18 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10018
  %tobool = icmp ne %struct.BMVert* %18, null, !dbg !10016
  br i1 %tobool, label %for.body, label %for.end, !dbg !10016

for.body:                                         ; preds = %for.cond
  %19 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10020
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %19, i32 0, i32 0, !dbg !10020
  %call16 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !10020
  %tobool17 = icmp ne i8 %call16, 0, !dbg !10020
  br i1 %tobool17, label %if.then18, label %if.end64, !dbg !10023

if.then18:                                        ; preds = %for.body
  %20 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10024
  %noisesize = getelementptr inbounds %struct.Tex, %struct.Tex* %20, i32 0, i32 2, !dbg !10026
  %21 = load float, float* %noisesize, align 8, !dbg !10026
  %22 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10027
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %22, i32 0, i32 2, !dbg !10028
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10027
  %23 = load float, float* %arrayidx, align 8, !dbg !10027
  %24 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10029
  %co19 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %24, i32 0, i32 2, !dbg !10030
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %co19, i64 0, i64 1, !dbg !10029
  %25 = load float, float* %arrayidx20, align 4, !dbg !10029
  %26 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10031
  %co21 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %26, i32 0, i32 2, !dbg !10032
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %co21, i64 0, i64 2, !dbg !10031
  %27 = load float, float* %arrayidx22, align 8, !dbg !10031
  %call23 = call float @BLI_hnoise(float %21, float %23, float %25, float %27), !dbg !10033
  store float %call23, float* %b2, align 4, !dbg !10034
  %28 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10035
  %stype = getelementptr inbounds %struct.Tex, %struct.Tex* %28, i32 0, i32 33, !dbg !10037
  %29 = load i16, i16* %stype, align 2, !dbg !10037
  %tobool24 = icmp ne i16 %29, 0, !dbg !10035
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !10038

if.then25:                                        ; preds = %if.then18
  %30 = load float, float* %b2, align 4, !dbg !10039
  %31 = load float, float* %b2, align 4, !dbg !10040
  %mul = fmul float %30, %31, !dbg !10041
  %32 = load float, float* %ofs, align 4, !dbg !10042
  %mul26 = fmul float %32, %mul, !dbg !10042
  store float %mul26, float* %ofs, align 4, !dbg !10042
  br label %if.end27, !dbg !10043

if.end27:                                         ; preds = %if.then25, %if.then18
  %33 = load float, float* %fac, align 4, !dbg !10044
  %34 = load float, float* %b2, align 4, !dbg !10045
  %35 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10046
  %noisesize28 = getelementptr inbounds %struct.Tex, %struct.Tex* %35, i32 0, i32 2, !dbg !10047
  %36 = load float, float* %noisesize28, align 8, !dbg !10047
  %37 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10048
  %co29 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %37, i32 0, i32 2, !dbg !10049
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %co29, i64 0, i64 0, !dbg !10048
  %38 = load float, float* %arrayidx30, align 8, !dbg !10048
  %39 = load float, float* %ofs, align 4, !dbg !10050
  %add = fadd float %38, %39, !dbg !10051
  %40 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10052
  %co31 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %40, i32 0, i32 2, !dbg !10053
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %co31, i64 0, i64 1, !dbg !10052
  %41 = load float, float* %arrayidx32, align 4, !dbg !10052
  %42 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10054
  %co33 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %42, i32 0, i32 2, !dbg !10055
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %co33, i64 0, i64 2, !dbg !10054
  %43 = load float, float* %arrayidx34, align 8, !dbg !10054
  %call35 = call float @BLI_hnoise(float %36, float %add, float %41, float %43), !dbg !10056
  %sub = fsub float %34, %call35, !dbg !10057
  %mul36 = fmul float %33, %sub, !dbg !10058
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !10059
  store float %mul36, float* %arrayidx37, align 4, !dbg !10060
  %44 = load float, float* %fac, align 4, !dbg !10061
  %45 = load float, float* %b2, align 4, !dbg !10062
  %46 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10063
  %noisesize38 = getelementptr inbounds %struct.Tex, %struct.Tex* %46, i32 0, i32 2, !dbg !10064
  %47 = load float, float* %noisesize38, align 8, !dbg !10064
  %48 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10065
  %co39 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %48, i32 0, i32 2, !dbg !10066
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 0, !dbg !10065
  %49 = load float, float* %arrayidx40, align 8, !dbg !10065
  %50 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10067
  %co41 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %50, i32 0, i32 2, !dbg !10068
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %co41, i64 0, i64 1, !dbg !10067
  %51 = load float, float* %arrayidx42, align 4, !dbg !10067
  %52 = load float, float* %ofs, align 4, !dbg !10069
  %add43 = fadd float %51, %52, !dbg !10070
  %53 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10071
  %co44 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %53, i32 0, i32 2, !dbg !10072
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %co44, i64 0, i64 2, !dbg !10071
  %54 = load float, float* %arrayidx45, align 8, !dbg !10071
  %call46 = call float @BLI_hnoise(float %47, float %49, float %add43, float %54), !dbg !10073
  %sub47 = fsub float %45, %call46, !dbg !10074
  %mul48 = fmul float %44, %sub47, !dbg !10075
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !10076
  store float %mul48, float* %arrayidx49, align 4, !dbg !10077
  %55 = load float, float* %fac, align 4, !dbg !10078
  %56 = load float, float* %b2, align 4, !dbg !10079
  %57 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !10080
  %noisesize50 = getelementptr inbounds %struct.Tex, %struct.Tex* %57, i32 0, i32 2, !dbg !10081
  %58 = load float, float* %noisesize50, align 8, !dbg !10081
  %59 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10082
  %co51 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %59, i32 0, i32 2, !dbg !10083
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %co51, i64 0, i64 0, !dbg !10082
  %60 = load float, float* %arrayidx52, align 8, !dbg !10082
  %61 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10084
  %co53 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %61, i32 0, i32 2, !dbg !10085
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %co53, i64 0, i64 1, !dbg !10084
  %62 = load float, float* %arrayidx54, align 4, !dbg !10084
  %63 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10086
  %co55 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %63, i32 0, i32 2, !dbg !10087
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %co55, i64 0, i64 2, !dbg !10086
  %64 = load float, float* %arrayidx56, align 8, !dbg !10086
  %65 = load float, float* %ofs, align 4, !dbg !10088
  %add57 = fadd float %64, %65, !dbg !10089
  %call58 = call float @BLI_hnoise(float %58, float %60, float %62, float %add57), !dbg !10090
  %sub59 = fsub float %56, %call58, !dbg !10091
  %mul60 = fmul float %55, %sub59, !dbg !10092
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !10093
  store float %mul60, float* %arrayidx61, align 4, !dbg !10094
  %66 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10095
  %co62 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %66, i32 0, i32 2, !dbg !10096
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co62, i64 0, i64 0, !dbg !10095
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !10097
  call void @add_v3_v3(float* %arraydecay, float* %arraydecay63), !dbg !10098
  br label %if.end64, !dbg !10099

if.end64:                                         ; preds = %if.end27, %for.body
  br label %for.inc, !dbg !10100

for.inc:                                          ; preds = %if.end64
  %call65 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10018
  %67 = bitcast i8* %call65 to %struct.BMVert*, !dbg !10018
  store %struct.BMVert* %67, %struct.BMVert** %eve, align 8, !dbg !10018
  br label %for.cond, !dbg !10018, !llvm.loop !10101

for.end:                                          ; preds = %for.cond
  br label %if.end87, !dbg !10103

if.else:                                          ; preds = %if.end10
  %68 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10104
  %bm66 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %68, i32 0, i32 0, !dbg !10104
  %69 = load %struct.BMesh*, %struct.BMesh** %bm66, align 8, !dbg !10104
  %call67 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %69, i8 zeroext 1, i8* null), !dbg !10104
  %70 = bitcast i8* %call67 to %struct.BMVert*, !dbg !10104
  store %struct.BMVert* %70, %struct.BMVert** %eve, align 8, !dbg !10104
  br label %for.cond68, !dbg !10104

for.cond68:                                       ; preds = %for.inc84, %if.else
  %71 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10107
  %tobool69 = icmp ne %struct.BMVert* %71, null, !dbg !10104
  br i1 %tobool69, label %for.body70, label %for.end86, !dbg !10104

for.body70:                                       ; preds = %for.cond68
  %72 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10109
  %head71 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %72, i32 0, i32 0, !dbg !10109
  %call72 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head71, i8 zeroext 1), !dbg !10109
  %tobool73 = icmp ne i8 %call72, 0, !dbg !10109
  br i1 %tobool73, label %if.then74, label %if.end83, !dbg !10112

if.then74:                                        ; preds = %for.body70
  call void @llvm.dbg.declare(metadata float* %tin, metadata !10113, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.declare(metadata float* %dum, metadata !10116, metadata !DIExpression()), !dbg !10117
  %73 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10118
  %mtex = getelementptr inbounds %struct.Material, %struct.Material* %73, i32 0, i32 102, !dbg !10119
  %arrayidx75 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 0, !dbg !10118
  %74 = load %struct.MTex*, %struct.MTex** %arrayidx75, align 8, !dbg !10118
  %75 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10120
  %co76 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %75, i32 0, i32 2, !dbg !10121
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %co76, i64 0, i64 0, !dbg !10120
  %call78 = call i32 @externtex(%struct.MTex* %74, float* %arraydecay77, float* %tin, float* %dum, float* %dum, float* %dum, float* %dum, i32 0, %struct.ImagePool* null), !dbg !10122
  %76 = load float, float* %fac, align 4, !dbg !10123
  %77 = load float, float* %tin, align 4, !dbg !10124
  %mul79 = fmul float %76, %77, !dbg !10125
  %78 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !10126
  %co80 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %78, i32 0, i32 2, !dbg !10127
  %arrayidx81 = getelementptr inbounds [3 x float], [3 x float]* %co80, i64 0, i64 2, !dbg !10126
  %79 = load float, float* %arrayidx81, align 8, !dbg !10128
  %add82 = fadd float %79, %mul79, !dbg !10128
  store float %add82, float* %arrayidx81, align 8, !dbg !10128
  br label %if.end83, !dbg !10129

if.end83:                                         ; preds = %if.then74, %for.body70
  br label %for.inc84, !dbg !10130

for.inc84:                                        ; preds = %if.end83
  %call85 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10107
  %80 = bitcast i8* %call85 to %struct.BMVert*, !dbg !10107
  store %struct.BMVert* %80, %struct.BMVert** %eve, align 8, !dbg !10107
  br label %for.cond68, !dbg !10107, !llvm.loop !10131

for.end86:                                        ; preds = %for.cond68
  br label %if.end87

if.end87:                                         ; preds = %for.end86, %for.end
  %81 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10133
  call void @EDBM_mesh_normals_update(%struct.BMEditMesh* %81), !dbg !10134
  %82 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10135
  call void @EDBM_update_generic(%struct.BMEditMesh* %82, i8 zeroext 1, i8 zeroext 0), !dbg !10136
  store i32 4, i32* %retval, align 4, !dbg !10137
  br label %return, !dbg !10137

return:                                           ; preds = %if.end87, %if.then9, %if.then
  %83 = load i32, i32* %retval, align 4, !dbg !10138
  ret i32 %83, !dbg !10138
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_bridge_edge_loops(%struct.wmOperatorType* %ot) #0 !dbg !4046 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10139, metadata !DIExpression()), !dbg !10140
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10141
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10142
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.337, i64 0, i64 0), i8** %name, align 8, !dbg !10143
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10144
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !10145
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.338, i64 0, i64 0), i8** %description, align 8, !dbg !10146
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10147
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !10148
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.339, i64 0, i64 0), i8** %idname, align 8, !dbg !10149
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10150
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !10151
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_bridge_edge_loops_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10152
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10153
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !10154
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !10155
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10156
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !10157
  store i16 3, i16* %flag, align 8, !dbg !10158
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10159
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !10160
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10160
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !10159
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @MESH_OT_bridge_edge_loops.type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.340, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.341, i64 0, i64 0)), !dbg !10161
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10162
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 13, !dbg !10163
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !10164
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10165
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !10166
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !10166
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !10165
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.342, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.160, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.343, i64 0, i64 0)), !dbg !10167
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10168
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 11, !dbg !10169
  %14 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !10169
  %15 = bitcast %struct.StructRNA* %14 to i8*, !dbg !10168
  %call4 = call %struct.PropertyRNA* @RNA_def_float(i8* %15, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.344, i64 0, i64 0), float 5.000000e-01, float 0.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.345, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), float 0.000000e+00, float 1.000000e+00), !dbg !10170
  %16 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10171
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %16, i32 0, i32 11, !dbg !10172
  %17 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !10172
  %18 = bitcast %struct.StructRNA* %17 to i8*, !dbg !10171
  %call6 = call %struct.PropertyRNA* @RNA_def_int(i8* %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.346, i64 0, i64 0), i32 0, i32 -1000, i32 1000, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.347, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.348, i64 0, i64 0), i32 -1000, i32 1000), !dbg !10173
  %19 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10174
  call void @mesh_operator_edgering_props(%struct.wmOperatorType* %19, i32 0), !dbg !10175
  ret void, !dbg !10176
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_bridge_edge_loops_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10177 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %type = alloca i32, align 4
  %use_pairs = alloca i8, align 1
  %use_cyclic = alloca i8, align 1
  %use_merge = alloca i8, align 1
  %merge_factor = alloca float, align 4
  %twist_offset = alloca i32, align 4
  %use_faces = alloca i8, align 1
  %edge_hflag = alloca i8, align 1
  %totface_del = alloca i32, align 4
  %totface_del_arr = alloca %struct.BMFace**, align 8
  %iter = alloca %struct.BMIter, align 8
  %f = alloca %struct.BMFace*, align 8
  %i = alloca i32, align 4
  %i50 = alloca i32, align 4
  %op_props = alloca %struct.EdgeRingOpSubdProps, align 4
  %bmop_subd = alloca %struct.BMOperator, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10178, metadata !DIExpression()), !dbg !10179
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10180, metadata !DIExpression()), !dbg !10181
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !10182, metadata !DIExpression()), !dbg !10183
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10184, metadata !DIExpression()), !dbg !10185
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10186
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !10187
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !10185
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !10188, metadata !DIExpression()), !dbg !10189
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10190
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !10191
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !10189
  call void @llvm.dbg.declare(metadata i32* %type, metadata !10192, metadata !DIExpression()), !dbg !10193
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10194
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !10195
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10195
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0)), !dbg !10196
  store i32 %call2, i32* %type, align 4, !dbg !10193
  call void @llvm.dbg.declare(metadata i8* %use_pairs, metadata !10197, metadata !DIExpression()), !dbg !10198
  %4 = load i32, i32* %type, align 4, !dbg !10199
  %cmp = icmp eq i32 %4, 2, !dbg !10200
  %conv = zext i1 %cmp to i32, !dbg !10200
  %conv3 = trunc i32 %conv to i8, !dbg !10201
  store i8 %conv3, i8* %use_pairs, align 1, !dbg !10198
  call void @llvm.dbg.declare(metadata i8* %use_cyclic, metadata !10202, metadata !DIExpression()), !dbg !10203
  %5 = load i32, i32* %type, align 4, !dbg !10204
  %cmp4 = icmp eq i32 %5, 1, !dbg !10205
  %conv5 = zext i1 %cmp4 to i32, !dbg !10205
  %conv6 = trunc i32 %conv5 to i8, !dbg !10206
  store i8 %conv6, i8* %use_cyclic, align 1, !dbg !10203
  call void @llvm.dbg.declare(metadata i8* %use_merge, metadata !10207, metadata !DIExpression()), !dbg !10208
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10209
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !10210
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !10210
  %call8 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.342, i64 0, i64 0)), !dbg !10211
  %conv9 = trunc i32 %call8 to i8, !dbg !10211
  store i8 %conv9, i8* %use_merge, align 1, !dbg !10208
  call void @llvm.dbg.declare(metadata float* %merge_factor, metadata !10212, metadata !DIExpression()), !dbg !10213
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10214
  %ptr10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !10215
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr10, align 8, !dbg !10215
  %call11 = call float @RNA_float_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.344, i64 0, i64 0)), !dbg !10216
  store float %call11, float* %merge_factor, align 4, !dbg !10213
  call void @llvm.dbg.declare(metadata i32* %twist_offset, metadata !10217, metadata !DIExpression()), !dbg !10218
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10219
  %ptr12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !10220
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr12, align 8, !dbg !10220
  %call13 = call i32 @RNA_int_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.346, i64 0, i64 0)), !dbg !10221
  store i32 %call13, i32* %twist_offset, align 4, !dbg !10218
  call void @llvm.dbg.declare(metadata i8* %use_faces, metadata !10222, metadata !DIExpression()), !dbg !10223
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10224
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !10225
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10225
  %totfacesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %13, i32 0, i32 6, !dbg !10226
  %14 = load i32, i32* %totfacesel, align 8, !dbg !10226
  %cmp14 = icmp ne i32 %14, 0, !dbg !10227
  %conv15 = zext i1 %cmp14 to i32, !dbg !10227
  %conv16 = trunc i32 %conv15 to i8, !dbg !10228
  store i8 %conv16, i8* %use_faces, align 1, !dbg !10223
  call void @llvm.dbg.declare(metadata i8* %edge_hflag, metadata !10229, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.declare(metadata i32* %totface_del, metadata !10231, metadata !DIExpression()), !dbg !10232
  store i32 0, i32* %totface_del, align 4, !dbg !10232
  call void @llvm.dbg.declare(metadata %struct.BMFace*** %totface_del_arr, metadata !10233, metadata !DIExpression()), !dbg !10234
  store %struct.BMFace** null, %struct.BMFace*** %totface_del_arr, align 8, !dbg !10234
  %15 = load i8, i8* %use_faces, align 1, !dbg !10235
  %tobool = icmp ne i8 %15, 0, !dbg !10235
  br i1 %tobool, label %if.then, label %if.else, !dbg !10237

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !10238, metadata !DIExpression()), !dbg !10240
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !10241, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10243, metadata !DIExpression()), !dbg !10244
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10245
  %bm17 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !10246
  %17 = load %struct.BMesh*, %struct.BMesh** %bm17, align 8, !dbg !10246
  %call18 = call i32 @edbm_bridge_tag_boundary_edges(%struct.BMesh* %17), !dbg !10247
  store i32 %call18, i32* %totface_del, align 4, !dbg !10248
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10249
  %19 = load i32, i32* %totface_del, align 4, !dbg !10250
  %conv19 = sext i32 %19 to i64, !dbg !10250
  %mul = mul i64 8, %conv19, !dbg !10251
  %call20 = call i8* %18(i64 %mul, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.edbm_bridge_edge_loops_exec, i64 0, i64 0)), !dbg !10249
  %20 = bitcast i8* %call20 to %struct.BMFace**, !dbg !10249
  store %struct.BMFace** %20, %struct.BMFace*** %totface_del_arr, align 8, !dbg !10252
  store i32 0, i32* %i, align 4, !dbg !10253
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10254
  %bm21 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %21, i32 0, i32 0, !dbg !10254
  %22 = load %struct.BMesh*, %struct.BMesh** %bm21, align 8, !dbg !10254
  %call22 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %22, i8 zeroext 3, i8* null), !dbg !10254
  %23 = bitcast i8* %call22 to %struct.BMFace*, !dbg !10254
  store %struct.BMFace* %23, %struct.BMFace** %f, align 8, !dbg !10254
  br label %for.cond, !dbg !10254

for.cond:                                         ; preds = %for.inc, %if.then
  %24 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10256
  %tobool23 = icmp ne %struct.BMFace* %24, null, !dbg !10254
  br i1 %tobool23, label %for.body, label %for.end, !dbg !10254

for.body:                                         ; preds = %for.cond
  %25 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10258
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %25, i32 0, i32 0, !dbg !10258
  %call24 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 16), !dbg !10258
  %tobool25 = icmp ne i8 %call24, 0, !dbg !10258
  br i1 %tobool25, label %if.then26, label %if.end, !dbg !10261

if.then26:                                        ; preds = %for.body
  %26 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !10262
  %27 = load %struct.BMFace**, %struct.BMFace*** %totface_del_arr, align 8, !dbg !10264
  %28 = load i32, i32* %i, align 4, !dbg !10265
  %inc = add nsw i32 %28, 1, !dbg !10265
  store i32 %inc, i32* %i, align 4, !dbg !10265
  %idxprom = sext i32 %28 to i64, !dbg !10264
  %arrayidx = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %27, i64 %idxprom, !dbg !10264
  store %struct.BMFace* %26, %struct.BMFace** %arrayidx, align 8, !dbg !10266
  br label %if.end, !dbg !10267

if.end:                                           ; preds = %if.then26, %for.body
  br label %for.inc, !dbg !10268

for.inc:                                          ; preds = %if.end
  %call27 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10256
  %29 = bitcast i8* %call27 to %struct.BMFace*, !dbg !10256
  store %struct.BMFace* %29, %struct.BMFace** %f, align 8, !dbg !10256
  br label %for.cond, !dbg !10256, !llvm.loop !10269

for.end:                                          ; preds = %for.cond
  store i8 16, i8* %edge_hflag, align 1, !dbg !10271
  br label %if.end28, !dbg !10272

if.else:                                          ; preds = %entry
  store i8 1, i8* %edge_hflag, align 1, !dbg !10273
  br label %if.end28

if.end28:                                         ; preds = %if.else, %for.end
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10275
  %31 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10276
  %32 = load i8, i8* %edge_hflag, align 1, !dbg !10277
  %conv29 = zext i8 %32 to i32, !dbg !10277
  %33 = load i8, i8* %use_pairs, align 1, !dbg !10278
  %conv30 = zext i8 %33 to i32, !dbg !10278
  %34 = load i8, i8* %use_cyclic, align 1, !dbg !10279
  %conv31 = zext i8 %34 to i32, !dbg !10279
  %35 = load i8, i8* %use_merge, align 1, !dbg !10280
  %conv32 = zext i8 %35 to i32, !dbg !10280
  %36 = load float, float* %merge_factor, align 4, !dbg !10281
  %conv33 = fpext float %36 to double, !dbg !10281
  %37 = load i32, i32* %twist_offset, align 4, !dbg !10282
  %call34 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %30, %struct.BMOperator* %bmop, %struct.wmOperator* %31, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.526, i64 0, i64 0), i32 %conv29, i32 %conv30, i32 %conv31, i32 %conv32, double %conv33, i32 %37), !dbg !10283
  %38 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10284
  %bm35 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %38, i32 0, i32 0, !dbg !10285
  %39 = load %struct.BMesh*, %struct.BMesh** %bm35, align 8, !dbg !10285
  call void @BMO_op_exec(%struct.BMesh* %39, %struct.BMOperator* %bmop), !dbg !10286
  %40 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10287
  %bm36 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %40, i32 0, i32 0, !dbg !10289
  %41 = load %struct.BMesh*, %struct.BMesh** %bm36, align 8, !dbg !10289
  %call37 = call zeroext i8 @BMO_error_occurred(%struct.BMesh* %41), !dbg !10290
  %tobool38 = icmp ne i8 %call37, 0, !dbg !10290
  br i1 %tobool38, label %if.end84, label %if.then39, !dbg !10291

if.then39:                                        ; preds = %if.end28
  %42 = load i8, i8* %use_merge, align 1, !dbg !10292
  %conv40 = zext i8 %42 to i32, !dbg !10292
  %cmp41 = icmp eq i32 %conv40, 0, !dbg !10295
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !10296

if.then43:                                        ; preds = %if.then39
  %43 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10297
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %43, i8 zeroext 1), !dbg !10299
  %44 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10300
  %bm44 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %44, i32 0, i32 0, !dbg !10301
  %45 = load %struct.BMesh*, %struct.BMesh** %bm44, align 8, !dbg !10301
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !10302
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !10303
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %45, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0), i8 zeroext 8, i8 zeroext 1, i8 zeroext 1), !dbg !10304
  br label %if.end45, !dbg !10305

if.end45:                                         ; preds = %if.then43, %if.then39
  %46 = load i8, i8* %use_faces, align 1, !dbg !10306
  %conv46 = zext i8 %46 to i32, !dbg !10306
  %tobool47 = icmp ne i32 %conv46, 0, !dbg !10306
  br i1 %tobool47, label %land.lhs.true, label %if.end64, !dbg !10308

land.lhs.true:                                    ; preds = %if.end45
  %47 = load i32, i32* %totface_del, align 4, !dbg !10309
  %tobool48 = icmp ne i32 %47, 0, !dbg !10309
  br i1 %tobool48, label %if.then49, label %if.end64, !dbg !10310

if.then49:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %i50, metadata !10311, metadata !DIExpression()), !dbg !10313
  %48 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10314
  %bm51 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %48, i32 0, i32 0, !dbg !10315
  %49 = load %struct.BMesh*, %struct.BMesh** %bm51, align 8, !dbg !10315
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %49, i8 zeroext 8, i8 zeroext 16, i8 zeroext 0), !dbg !10316
  store i32 0, i32* %i50, align 4, !dbg !10317
  br label %for.cond52, !dbg !10319

for.cond52:                                       ; preds = %for.inc59, %if.then49
  %50 = load i32, i32* %i50, align 4, !dbg !10320
  %51 = load i32, i32* %totface_del, align 4, !dbg !10322
  %cmp53 = icmp slt i32 %50, %51, !dbg !10323
  br i1 %cmp53, label %for.body55, label %for.end61, !dbg !10324

for.body55:                                       ; preds = %for.cond52
  %52 = load %struct.BMFace**, %struct.BMFace*** %totface_del_arr, align 8, !dbg !10325
  %53 = load i32, i32* %i50, align 4, !dbg !10325
  %idxprom56 = sext i32 %53 to i64, !dbg !10325
  %arrayidx57 = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %52, i64 %idxprom56, !dbg !10325
  %54 = load %struct.BMFace*, %struct.BMFace** %arrayidx57, align 8, !dbg !10325
  %head58 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %54, i32 0, i32 0, !dbg !10325
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head58, i8 zeroext 16), !dbg !10325
  br label %for.inc59, !dbg !10327

for.inc59:                                        ; preds = %for.body55
  %55 = load i32, i32* %i50, align 4, !dbg !10328
  %inc60 = add nsw i32 %55, 1, !dbg !10328
  store i32 %inc60, i32* %i50, align 4, !dbg !10328
  br label %for.cond52, !dbg !10329, !llvm.loop !10330

for.end61:                                        ; preds = %for.cond52
  %56 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10332
  %bm62 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %56, i32 0, i32 0, !dbg !10333
  %57 = load %struct.BMesh*, %struct.BMesh** %bm62, align 8, !dbg !10333
  %call63 = call zeroext i8 (%struct.BMesh*, i32, i8*, ...) @BMO_op_callf(%struct.BMesh* %57, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.406, i64 0, i64 0), i32 16, i32 5), !dbg !10334
  br label %if.end64, !dbg !10335

if.end64:                                         ; preds = %for.end61, %land.lhs.true, %if.end45
  %58 = load i8, i8* %use_merge, align 1, !dbg !10336
  %conv65 = zext i8 %58 to i32, !dbg !10336
  %cmp66 = icmp eq i32 %conv65, 0, !dbg !10338
  br i1 %cmp66, label %if.then68, label %if.end83, !dbg !10339

if.then68:                                        ; preds = %if.end64
  call void @llvm.dbg.declare(metadata %struct.EdgeRingOpSubdProps* %op_props, metadata !10340, metadata !DIExpression()), !dbg !10342
  %59 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10343
  call void @mesh_operator_edgering_props_get(%struct.wmOperator* %59, %struct.EdgeRingOpSubdProps* %op_props), !dbg !10344
  %cuts = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %op_props, i32 0, i32 1, !dbg !10345
  %60 = load i32, i32* %cuts, align 4, !dbg !10345
  %tobool69 = icmp ne i32 %60, 0, !dbg !10347
  br i1 %tobool69, label %if.then70, label %if.end82, !dbg !10348

if.then70:                                        ; preds = %if.then68
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop_subd, metadata !10349, metadata !DIExpression()), !dbg !10351
  %61 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10352
  call void @EDBM_mesh_normals_update(%struct.BMEditMesh* %61), !dbg !10353
  %62 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10354
  %bm71 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %62, i32 0, i32 0, !dbg !10355
  %63 = load %struct.BMesh*, %struct.BMesh** %bm71, align 8, !dbg !10355
  %64 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10356
  %flag = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %64, i32 0, i32 12, !dbg !10357
  %65 = load i16, i16* %flag, align 8, !dbg !10357
  %conv72 = sext i16 %65 to i32, !dbg !10356
  %interp_mode = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %op_props, i32 0, i32 0, !dbg !10358
  %66 = load i32, i32* %interp_mode, align 4, !dbg !10358
  %cuts73 = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %op_props, i32 0, i32 1, !dbg !10359
  %67 = load i32, i32* %cuts73, align 4, !dbg !10359
  %smooth = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %op_props, i32 0, i32 2, !dbg !10360
  %68 = load float, float* %smooth, align 4, !dbg !10360
  %conv74 = fpext float %68 to double, !dbg !10361
  %profile_shape = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %op_props, i32 0, i32 3, !dbg !10362
  %69 = load i32, i32* %profile_shape, align 4, !dbg !10362
  %profile_shape_factor = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %op_props, i32 0, i32 4, !dbg !10363
  %70 = load float, float* %profile_shape_factor, align 4, !dbg !10363
  %conv75 = fpext float %70 to double, !dbg !10364
  %call76 = call zeroext i8 (%struct.BMesh*, %struct.BMOperator*, i32, i8*, ...) @BMO_op_initf(%struct.BMesh* %63, %struct.BMOperator* %bmop_subd, i32 %conv72, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.527, i64 0, i64 0), %struct.BMOperator* %bmop, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.416, i64 0, i64 0), i32 %66, i32 %67, double %conv74, i32 %69, double %conv75), !dbg !10365
  %71 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10366
  %bm77 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %71, i32 0, i32 0, !dbg !10367
  %72 = load %struct.BMesh*, %struct.BMesh** %bm77, align 8, !dbg !10367
  call void @BMO_op_exec(%struct.BMesh* %72, %struct.BMOperator* %bmop_subd), !dbg !10368
  %73 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10369
  %bm78 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %73, i32 0, i32 0, !dbg !10370
  %74 = load %struct.BMesh*, %struct.BMesh** %bm78, align 8, !dbg !10370
  %slots_out79 = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop_subd, i32 0, i32 1, !dbg !10371
  %arraydecay80 = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out79, i64 0, i64 0, !dbg !10372
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %74, %struct.BMOpSlot* %arraydecay80, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0), i8 zeroext 8, i8 zeroext 1, i8 zeroext 1), !dbg !10373
  %75 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10374
  %bm81 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %75, i32 0, i32 0, !dbg !10375
  %76 = load %struct.BMesh*, %struct.BMesh** %bm81, align 8, !dbg !10375
  call void @BMO_op_finish(%struct.BMesh* %76, %struct.BMOperator* %bmop_subd), !dbg !10376
  br label %if.end82, !dbg !10377

if.end82:                                         ; preds = %if.then70, %if.then68
  br label %if.end83, !dbg !10378

if.end83:                                         ; preds = %if.end82, %if.end64
  br label %if.end84, !dbg !10379

if.end84:                                         ; preds = %if.end83, %if.end28
  %77 = load %struct.BMFace**, %struct.BMFace*** %totface_del_arr, align 8, !dbg !10380
  %tobool85 = icmp ne %struct.BMFace** %77, null, !dbg !10380
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !10382

if.then86:                                        ; preds = %if.end84
  %78 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10383
  %79 = load %struct.BMFace**, %struct.BMFace*** %totface_del_arr, align 8, !dbg !10385
  %80 = bitcast %struct.BMFace** %79 to i8*, !dbg !10385
  call void %78(i8* %80), !dbg !10383
  br label %if.end87, !dbg !10386

if.end87:                                         ; preds = %if.then86, %if.end84
  %81 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10387
  %82 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10389
  %call88 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %81, %struct.BMOperator* %bmop, %struct.wmOperator* %82, i8 zeroext 1), !dbg !10390
  %tobool89 = icmp ne i8 %call88, 0, !dbg !10390
  br i1 %tobool89, label %if.else91, label %if.then90, !dbg !10391

if.then90:                                        ; preds = %if.end87
  store i32 4, i32* %retval, align 4, !dbg !10392
  br label %return, !dbg !10392

if.else91:                                        ; preds = %if.end87
  %83 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10394
  call void @EDBM_update_generic(%struct.BMEditMesh* %83, i8 zeroext 1, i8 zeroext 1), !dbg !10396
  store i32 4, i32* %retval, align 4, !dbg !10397
  br label %return, !dbg !10397

return:                                           ; preds = %if.else91, %if.then90
  %84 = load i32, i32* %retval, align 4, !dbg !10398
  ret i32 %84, !dbg !10398
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_wireframe(%struct.wmOperatorType* %ot) #0 !dbg !10399 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10400, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !10402, metadata !DIExpression()), !dbg !10403
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10404
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10405
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.349, i64 0, i64 0), i8** %name, align 8, !dbg !10406
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10407
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !10408
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.350, i64 0, i64 0), i8** %idname, align 8, !dbg !10409
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10410
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !10411
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.351, i64 0, i64 0), i8** %description, align 8, !dbg !10412
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10413
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !10414
  store i32 (%struct.bContext*, %struct.wmOperator*)* @edbm_wireframe_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10415
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10416
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !10417
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !10418
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10419
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !10420
  store i16 3, i16* %flag, align 8, !dbg !10421
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10422
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !10423
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10423
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !10422
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.352, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.353, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.354, i64 0, i64 0)), !dbg !10424
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10425
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !10426
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !10426
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !10425
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.355, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.356, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.357, i64 0, i64 0)), !dbg !10427
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10428
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !10429
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !10429
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !10428
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %14, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.241, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.243, i64 0, i64 0)), !dbg !10430
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10431
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 11, !dbg !10432
  %16 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !10432
  %17 = bitcast %struct.StructRNA* %16 to i8*, !dbg !10431
  %call6 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.358, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.359, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.360, i64 0, i64 0)), !dbg !10433
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10434
  %srna7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 11, !dbg !10435
  %19 = load %struct.StructRNA*, %struct.StructRNA** %srna7, align 8, !dbg !10435
  %20 = bitcast %struct.StructRNA* %19 to i8*, !dbg !10434
  %call8 = call %struct.PropertyRNA* @RNA_def_float(i8* %20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.193, i64 0, i64 0), float 0x3F847AE140000000, float 0.000000e+00, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.361, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), float 0.000000e+00, float 1.000000e+01), !dbg !10436
  store %struct.PropertyRNA* %call8, %struct.PropertyRNA** %prop, align 8, !dbg !10437
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !10438
  call void @RNA_def_property_ui_range(%struct.PropertyRNA* %21, double 0.000000e+00, double 1.000000e+00, double 1.000000e-02, i32 4), !dbg !10439
  %22 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10440
  %srna9 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %22, i32 0, i32 11, !dbg !10441
  %23 = load %struct.StructRNA*, %struct.StructRNA** %srna9, align 8, !dbg !10441
  %24 = bitcast %struct.StructRNA* %23 to i8*, !dbg !10440
  %call10 = call %struct.PropertyRNA* @RNA_def_float(i8* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i64 0, i64 0), float 0x3F847AE140000000, float 0.000000e+00, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), float 0.000000e+00, float 1.000000e+01), !dbg !10442
  %25 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10443
  %srna11 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %25, i32 0, i32 11, !dbg !10444
  %26 = load %struct.StructRNA*, %struct.StructRNA** %srna11, align 8, !dbg !10444
  %27 = bitcast %struct.StructRNA* %26 to i8*, !dbg !10443
  %call12 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.362, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.363, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.364, i64 0, i64 0)), !dbg !10445
  %28 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10446
  %srna13 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %28, i32 0, i32 11, !dbg !10447
  %29 = load %struct.StructRNA*, %struct.StructRNA** %srna13, align 8, !dbg !10447
  %30 = bitcast %struct.StructRNA* %29 to i8*, !dbg !10446
  %call14 = call %struct.PropertyRNA* @RNA_def_float(i8* %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.365, i64 0, i64 0), float 0x3F847AE140000000, float 0.000000e+00, float 0x47EFFFFFE0000000, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.366, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), float 0.000000e+00, float 1.000000e+00), !dbg !10448
  store %struct.PropertyRNA* %call14, %struct.PropertyRNA** %prop, align 8, !dbg !10449
  %31 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !10450
  call void @RNA_def_property_ui_range(%struct.PropertyRNA* %31, double 0.000000e+00, double 1.000000e+00, double 1.000000e-01, i32 2), !dbg !10451
  ret void, !dbg !10452
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_wireframe_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10453 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %use_boundary = alloca i8, align 1
  %use_even_offset = alloca i8, align 1
  %use_replace = alloca i8, align 1
  %use_relative_offset = alloca i8, align 1
  %use_crease = alloca i8, align 1
  %crease_weight = alloca float, align 4
  %thickness = alloca float, align 4
  %offset = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10454, metadata !DIExpression()), !dbg !10455
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10456, metadata !DIExpression()), !dbg !10457
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10458, metadata !DIExpression()), !dbg !10459
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10460
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !10461
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !10459
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !10462, metadata !DIExpression()), !dbg !10463
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10464
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !10465
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !10463
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !10466, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.declare(metadata i8* %use_boundary, metadata !10468, metadata !DIExpression()), !dbg !10469
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10470
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !10471
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10471
  %call2 = call i32 @RNA_boolean_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.352, i64 0, i64 0)), !dbg !10472
  %conv = trunc i32 %call2 to i8, !dbg !10472
  store i8 %conv, i8* %use_boundary, align 1, !dbg !10469
  call void @llvm.dbg.declare(metadata i8* %use_even_offset, metadata !10473, metadata !DIExpression()), !dbg !10474
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10475
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !10476
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !10476
  %call4 = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.355, i64 0, i64 0)), !dbg !10477
  %conv5 = trunc i32 %call4 to i8, !dbg !10477
  store i8 %conv5, i8* %use_even_offset, align 1, !dbg !10474
  call void @llvm.dbg.declare(metadata i8* %use_replace, metadata !10478, metadata !DIExpression()), !dbg !10479
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10480
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !10481
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !10481
  %call7 = call i32 @RNA_boolean_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.358, i64 0, i64 0)), !dbg !10482
  %conv8 = trunc i32 %call7 to i8, !dbg !10482
  store i8 %conv8, i8* %use_replace, align 1, !dbg !10479
  call void @llvm.dbg.declare(metadata i8* %use_relative_offset, metadata !10483, metadata !DIExpression()), !dbg !10484
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10485
  %ptr9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !10486
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr9, align 8, !dbg !10486
  %call10 = call i32 @RNA_boolean_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.241, i64 0, i64 0)), !dbg !10487
  %conv11 = trunc i32 %call10 to i8, !dbg !10487
  store i8 %conv11, i8* %use_relative_offset, align 1, !dbg !10484
  call void @llvm.dbg.declare(metadata i8* %use_crease, metadata !10488, metadata !DIExpression()), !dbg !10489
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10490
  %ptr12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !10491
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr12, align 8, !dbg !10491
  %call13 = call i32 @RNA_boolean_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.362, i64 0, i64 0)), !dbg !10492
  %conv14 = trunc i32 %call13 to i8, !dbg !10492
  store i8 %conv14, i8* %use_crease, align 1, !dbg !10489
  call void @llvm.dbg.declare(metadata float* %crease_weight, metadata !10493, metadata !DIExpression()), !dbg !10494
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10495
  %ptr15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 7, !dbg !10496
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr15, align 8, !dbg !10496
  %call16 = call float @RNA_float_get(%struct.PointerRNA* %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.365, i64 0, i64 0)), !dbg !10497
  store float %call16, float* %crease_weight, align 4, !dbg !10494
  call void @llvm.dbg.declare(metadata float* %thickness, metadata !10498, metadata !DIExpression()), !dbg !10499
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10500
  %ptr17 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 7, !dbg !10501
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr17, align 8, !dbg !10501
  %call18 = call float @RNA_float_get(%struct.PointerRNA* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.193, i64 0, i64 0)), !dbg !10502
  store float %call18, float* %thickness, align 4, !dbg !10499
  call void @llvm.dbg.declare(metadata float* %offset, metadata !10503, metadata !DIExpression()), !dbg !10504
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10505
  %ptr19 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 7, !dbg !10506
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr19, align 8, !dbg !10506
  %call20 = call float @RNA_float_get(%struct.PointerRNA* %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i64 0, i64 0)), !dbg !10507
  store float %call20, float* %offset, align 4, !dbg !10504
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10508
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10509
  %20 = load i8, i8* %use_replace, align 1, !dbg !10510
  %conv21 = zext i8 %20 to i32, !dbg !10510
  %21 = load i8, i8* %use_boundary, align 1, !dbg !10511
  %conv22 = zext i8 %21 to i32, !dbg !10511
  %22 = load i8, i8* %use_even_offset, align 1, !dbg !10512
  %conv23 = zext i8 %22 to i32, !dbg !10512
  %23 = load i8, i8* %use_relative_offset, align 1, !dbg !10513
  %conv24 = zext i8 %23 to i32, !dbg !10513
  %24 = load i8, i8* %use_crease, align 1, !dbg !10514
  %conv25 = zext i8 %24 to i32, !dbg !10514
  %25 = load float, float* %crease_weight, align 4, !dbg !10515
  %conv26 = fpext float %25 to double, !dbg !10515
  %26 = load float, float* %thickness, align 4, !dbg !10516
  %conv27 = fpext float %26 to double, !dbg !10516
  %27 = load float, float* %offset, align 4, !dbg !10517
  %conv28 = fpext float %27 to double, !dbg !10517
  %call29 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %18, %struct.BMOperator* %bmop, %struct.wmOperator* %19, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @.str.528, i64 0, i64 0), i32 1, i32 %conv21, i32 %conv22, i32 %conv23, i32 %conv24, i32 %conv25, double %conv26, double %conv27, double %conv28), !dbg !10518
  %28 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10519
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %28, i32 0, i32 0, !dbg !10520
  %29 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10520
  call void @BMO_op_exec(%struct.BMesh* %29, %struct.BMOperator* %bmop), !dbg !10521
  %30 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10522
  %bm30 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %30, i32 0, i32 0, !dbg !10523
  %31 = load %struct.BMesh*, %struct.BMesh** %bm30, align 8, !dbg !10523
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %31, i8 zeroext 11, i8 zeroext 1, i8 zeroext 0), !dbg !10524
  %32 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10525
  %bm31 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %32, i32 0, i32 0, !dbg !10526
  %33 = load %struct.BMesh*, %struct.BMesh** %bm31, align 8, !dbg !10526
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !10527
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !10528
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %33, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.415, i64 0, i64 0), i8 zeroext 8, i8 zeroext 1, i8 zeroext 1), !dbg !10529
  %34 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10530
  %35 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10532
  %call32 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %34, %struct.BMOperator* %bmop, %struct.wmOperator* %35, i8 zeroext 1), !dbg !10533
  %tobool = icmp ne i8 %call32, 0, !dbg !10533
  br i1 %tobool, label %if.else, label %if.then, !dbg !10534

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !10535
  br label %return, !dbg !10535

if.else:                                          ; preds = %entry
  %36 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10537
  call void @EDBM_update_generic(%struct.BMEditMesh* %36, i8 zeroext 1, i8 zeroext 1), !dbg !10539
  store i32 4, i32* %retval, align 4, !dbg !10540
  br label %return, !dbg !10540

return:                                           ; preds = %if.else, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !10541
  ret i32 %37, !dbg !10541
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_symmetrize(%struct.wmOperatorType* %ot) #0 !dbg !10542 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10545, metadata !DIExpression()), !dbg !10546
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10547
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10548
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.367, i64 0, i64 0), i8** %name, align 8, !dbg !10549
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10550
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !10551
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.368, i64 0, i64 0), i8** %description, align 8, !dbg !10552
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10553
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !10554
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.369, i64 0, i64 0), i8** %idname, align 8, !dbg !10555
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10556
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !10557
  store i32 (%struct.bContext*, %struct.wmOperator*)* @mesh_symmetrize_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10558
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10559
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !10560
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !10561
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10562
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !10563
  store i16 3, i16* %flag, align 8, !dbg !10564
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10565
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !10566
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10566
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !10565
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.370, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @symmetrize_direction_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.371, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.372, i64 0, i64 0)), !dbg !10567
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10568
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 13, !dbg !10569
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !10570
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10571
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !10572
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !10572
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !10571
  %call2 = call %struct.PropertyRNA* @RNA_def_float(i8* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i64 0, i64 0), float 0x3F1A36E2E0000000, float 0.000000e+00, float 1.000000e+01, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.373, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), float 0x3EE4F8B580000000, float 0x3FB99999A0000000), !dbg !10573
  ret void, !dbg !10574
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mesh_symmetrize_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10575 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bmop = alloca %struct.BMOperator, align 8
  %thresh = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10576, metadata !DIExpression()), !dbg !10577
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10578, metadata !DIExpression()), !dbg !10579
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10580, metadata !DIExpression()), !dbg !10581
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10582
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !10583
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !10581
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !10584, metadata !DIExpression()), !dbg !10585
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10586
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !10587
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !10585
  call void @llvm.dbg.declare(metadata %struct.BMOperator* %bmop, metadata !10588, metadata !DIExpression()), !dbg !10589
  call void @llvm.dbg.declare(metadata float* %thresh, metadata !10590, metadata !DIExpression()), !dbg !10591
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10592
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !10593
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10593
  %call2 = call float @RNA_float_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i64 0, i64 0)), !dbg !10594
  store float %call2, float* %thresh, align 4, !dbg !10591
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10595
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10596
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10597
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !10598
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !10598
  %call4 = call i32 @RNA_enum_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.370, i64 0, i64 0)), !dbg !10599
  %8 = load float, float* %thresh, align 4, !dbg !10600
  %conv = fpext float %8 to double, !dbg !10600
  %call5 = call zeroext i8 (%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) @EDBM_op_init(%struct.BMEditMesh* %4, %struct.BMOperator* %bmop, %struct.wmOperator* %5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.529, i64 0, i64 0), i32 1, i32 %call4, double %conv), !dbg !10601
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10602
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !10603
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10603
  call void @BMO_op_exec(%struct.BMesh* %10, %struct.BMOperator* %bmop), !dbg !10604
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10605
  call void @EDBM_flag_disable_all(%struct.BMEditMesh* %11, i8 zeroext 1), !dbg !10606
  %12 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10607
  %bm6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %12, i32 0, i32 0, !dbg !10608
  %13 = load %struct.BMesh*, %struct.BMesh** %bm6, align 8, !dbg !10608
  %slots_out = getelementptr inbounds %struct.BMOperator, %struct.BMOperator* %bmop, i32 0, i32 1, !dbg !10609
  %arraydecay = getelementptr inbounds [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot]* %slots_out, i64 0, i64 0, !dbg !10610
  call void @BMO_slot_buffer_hflag_enable(%struct.BMesh* %13, %struct.BMOpSlot* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.422, i64 0, i64 0), i8 zeroext 11, i8 zeroext 1, i8 zeroext 1), !dbg !10611
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10612
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10614
  %call7 = call zeroext i8 @EDBM_op_finish(%struct.BMEditMesh* %14, %struct.BMOperator* %bmop, %struct.wmOperator* %15, i8 zeroext 1), !dbg !10615
  %tobool = icmp ne i8 %call7, 0, !dbg !10615
  br i1 %tobool, label %if.else, label %if.then, !dbg !10616

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !10617
  br label %return, !dbg !10617

if.else:                                          ; preds = %entry
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10619
  call void @EDBM_update_generic(%struct.BMEditMesh* %16, i8 zeroext 1, i8 zeroext 1), !dbg !10621
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10622
  call void @EDBM_selectmode_flush(%struct.BMEditMesh* %17), !dbg !10623
  store i32 4, i32* %retval, align 4, !dbg !10624
  br label %return, !dbg !10624

return:                                           ; preds = %if.else, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !10625
  ret i32 %18, !dbg !10625
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MESH_OT_symmetry_snap(%struct.wmOperatorType* %ot) #0 !dbg !10626 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10627, metadata !DIExpression()), !dbg !10628
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10629
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !10630
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.374, i64 0, i64 0), i8** %name, align 8, !dbg !10631
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10632
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 3, !dbg !10633
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.375, i64 0, i64 0), i8** %description, align 8, !dbg !10634
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10635
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 1, !dbg !10636
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.376, i64 0, i64 0), i8** %idname, align 8, !dbg !10637
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10638
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !10639
  store i32 (%struct.bContext*, %struct.wmOperator*)* @mesh_symmetry_snap_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !10640
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10641
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !10642
  store i32 (%struct.bContext*)* @ED_operator_editmesh, i32 (%struct.bContext*)** %poll, align 8, !dbg !10643
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10644
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !10645
  store i16 3, i16* %flag, align 8, !dbg !10646
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10647
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !10648
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10648
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !10647
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.370, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([0 x %struct.EnumPropertyItem], [0 x %struct.EnumPropertyItem]* @symmetrize_direction_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.371, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.372, i64 0, i64 0)), !dbg !10649
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10650
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 13, !dbg !10651
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !10652
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10653
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !10654
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !10654
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !10653
  %call2 = call %struct.PropertyRNA* @RNA_def_float(i8* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i64 0, i64 0), float 0x3FA99999A0000000, float 0.000000e+00, float 1.000000e+01, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.373, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), float 0x3F1A36E2E0000000, float 1.000000e+00), !dbg !10655
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10656
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 11, !dbg !10657
  %14 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !10657
  %15 = bitcast %struct.StructRNA* %14 to i8*, !dbg !10656
  %call4 = call %struct.PropertyRNA* @RNA_def_float(i8* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i64 0, i64 0), float 5.000000e-01, float 0.000000e+00, float 1.000000e+00, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.330, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0), float 0.000000e+00, float 1.000000e+00), !dbg !10658
  %16 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10659
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %16, i32 0, i32 11, !dbg !10660
  %17 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !10660
  %18 = bitcast %struct.StructRNA* %17 to i8*, !dbg !10659
  %call6 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.377, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.378, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.379, i64 0, i64 0)), !dbg !10661
  ret void, !dbg !10662
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mesh_symmetry_snap_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10663 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %eps = alloca float, align 4
  %eps_sq = alloca float, align 4
  %obedit = alloca %struct.Object*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %index = alloca i32*, align 8
  %use_topology = alloca i8, align 1
  %thresh = alloca float, align 4
  %fac = alloca float, align 4
  %use_center = alloca i8, align 1
  %totmirr = alloca i32, align 4
  %totfail = alloca i32, align 4
  %totfound = alloca i32, align 4
  %axis_dir = alloca i32, align 4
  %axis = alloca i32, align 4
  %axis_sign = alloca i8, align 1
  %iter = alloca %struct.BMIter, align 8
  %v = alloca %struct.BMVert*, align 8
  %i = alloca i32, align 4
  %i_mirr = alloca i32, align 4
  %v_mirr = alloca %struct.BMVert*, align 8
  %co = alloca [3 x float], align 4
  %co_mirr = alloca [3 x float], align 4
  %sw_ap = alloca %struct.BMVert*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10664, metadata !DIExpression()), !dbg !10665
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10666, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.declare(metadata float* %eps, metadata !10668, metadata !DIExpression()), !dbg !10669
  store float 0x3EE4F8B580000000, float* %eps, align 4, !dbg !10669
  call void @llvm.dbg.declare(metadata float* %eps_sq, metadata !10670, metadata !DIExpression()), !dbg !10671
  store float 0x3DDB7CDFC0000000, float* %eps_sq, align 4, !dbg !10671
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !10672, metadata !DIExpression()), !dbg !10673
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10674
  %call = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %0), !dbg !10675
  store %struct.Object* %call, %struct.Object** %obedit, align 8, !dbg !10673
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !10676, metadata !DIExpression()), !dbg !10677
  %1 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !10678
  %call1 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %1), !dbg !10679
  store %struct.BMEditMesh* %call1, %struct.BMEditMesh** %em, align 8, !dbg !10677
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !10680, metadata !DIExpression()), !dbg !10681
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10682
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !10683
  %3 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !10683
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !10681
  call void @llvm.dbg.declare(metadata i32** %index, metadata !10684, metadata !DIExpression()), !dbg !10686
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10687
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10688
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 0, !dbg !10689
  %6 = load i32, i32* %totvert, align 8, !dbg !10689
  %conv = sext i32 %6 to i64, !dbg !10688
  %mul = mul i64 %conv, 4, !dbg !10690
  %call3 = call i8* %4(i64 %mul, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.mesh_symmetry_snap_exec, i64 0, i64 0)), !dbg !10687
  %7 = bitcast i8* %call3 to i32*, !dbg !10687
  store i32* %7, i32** %index, align 8, !dbg !10686
  call void @llvm.dbg.declare(metadata i8* %use_topology, metadata !10691, metadata !DIExpression()), !dbg !10692
  store i8 0, i8* %use_topology, align 1, !dbg !10692
  call void @llvm.dbg.declare(metadata float* %thresh, metadata !10693, metadata !DIExpression()), !dbg !10694
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10695
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !10696
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10696
  %call4 = call float @RNA_float_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i64 0, i64 0)), !dbg !10697
  store float %call4, float* %thresh, align 4, !dbg !10694
  call void @llvm.dbg.declare(metadata float* %fac, metadata !10698, metadata !DIExpression()), !dbg !10699
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10700
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !10701
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !10701
  %call6 = call float @RNA_float_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i64 0, i64 0)), !dbg !10702
  store float %call6, float* %fac, align 4, !dbg !10699
  call void @llvm.dbg.declare(metadata i8* %use_center, metadata !10703, metadata !DIExpression()), !dbg !10704
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10705
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 7, !dbg !10706
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !10706
  %call8 = call i32 @RNA_boolean_get(%struct.PointerRNA* %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.377, i64 0, i64 0)), !dbg !10707
  %conv9 = trunc i32 %call8 to i8, !dbg !10707
  store i8 %conv9, i8* %use_center, align 1, !dbg !10704
  call void @llvm.dbg.declare(metadata i32* %totmirr, metadata !10708, metadata !DIExpression()), !dbg !10709
  store i32 0, i32* %totmirr, align 4, !dbg !10709
  call void @llvm.dbg.declare(metadata i32* %totfail, metadata !10710, metadata !DIExpression()), !dbg !10711
  store i32 0, i32* %totfail, align 4, !dbg !10711
  call void @llvm.dbg.declare(metadata i32* %totfound, metadata !10712, metadata !DIExpression()), !dbg !10713
  store i32 0, i32* %totfound, align 4, !dbg !10713
  call void @llvm.dbg.declare(metadata i32* %axis_dir, metadata !10714, metadata !DIExpression()), !dbg !10715
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10716
  %ptr10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 7, !dbg !10717
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr10, align 8, !dbg !10717
  %call11 = call i32 @RNA_enum_get(%struct.PointerRNA* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.370, i64 0, i64 0)), !dbg !10718
  store i32 %call11, i32* %axis_dir, align 4, !dbg !10715
  call void @llvm.dbg.declare(metadata i32* %axis, metadata !10719, metadata !DIExpression()), !dbg !10720
  %16 = load i32, i32* %axis_dir, align 4, !dbg !10721
  %rem = srem i32 %16, 3, !dbg !10722
  store i32 %rem, i32* %axis, align 4, !dbg !10720
  call void @llvm.dbg.declare(metadata i8* %axis_sign, metadata !10723, metadata !DIExpression()), !dbg !10724
  %17 = load i32, i32* %axis, align 4, !dbg !10725
  %18 = load i32, i32* %axis_dir, align 4, !dbg !10726
  %cmp = icmp ne i32 %17, %18, !dbg !10727
  %conv12 = zext i1 %cmp to i32, !dbg !10727
  %conv13 = trunc i32 %conv12 to i8, !dbg !10725
  store i8 %conv13, i8* %axis_sign, align 1, !dbg !10724
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !10728, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !10730, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10732, metadata !DIExpression()), !dbg !10733
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !10734
  %20 = load i32, i32* %axis, align 4, !dbg !10735
  %21 = load float, float* %thresh, align 4, !dbg !10736
  %22 = load i32*, i32** %index, align 8, !dbg !10737
  call void @EDBM_verts_mirror_cache_begin_ex(%struct.BMEditMesh* %19, i32 %20, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, float %21, i32* %22), !dbg !10738
  %23 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10739
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %23, i8 zeroext 1), !dbg !10740
  %24 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10741
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %24, i8 zeroext 1, i8 zeroext 16, i8 zeroext 0), !dbg !10742
  %25 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10743
  %call14 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %25, i8 zeroext 1, i8* null), !dbg !10743
  %26 = bitcast i8* %call14 to %struct.BMVert*, !dbg !10743
  store %struct.BMVert* %26, %struct.BMVert** %v, align 8, !dbg !10743
  store i32 0, i32* %i, align 4, !dbg !10743
  br label %for.cond, !dbg !10743

for.cond:                                         ; preds = %for.inc, %entry
  %27 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10745
  %tobool = icmp ne %struct.BMVert* %27, null, !dbg !10743
  br i1 %tobool, label %for.body, label %for.end, !dbg !10743

for.body:                                         ; preds = %for.cond
  %28 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10747
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %28, i32 0, i32 0, !dbg !10747
  %call15 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !10747
  %conv16 = zext i8 %call15 to i32, !dbg !10747
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !10750
  br i1 %cmp17, label %land.lhs.true, label %if.end94, !dbg !10751

land.lhs.true:                                    ; preds = %for.body
  %29 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10752
  %head19 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %29, i32 0, i32 0, !dbg !10752
  %call20 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head19, i8 zeroext 16), !dbg !10752
  %conv21 = zext i8 %call20 to i32, !dbg !10752
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !10753
  br i1 %cmp22, label %if.then, label %if.end94, !dbg !10754

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %i_mirr, metadata !10755, metadata !DIExpression()), !dbg !10757
  %30 = load i32*, i32** %index, align 8, !dbg !10758
  %31 = load i32, i32* %i, align 4, !dbg !10759
  %idxprom = sext i32 %31 to i64, !dbg !10758
  %arrayidx = getelementptr inbounds i32, i32* %30, i64 %idxprom, !dbg !10758
  %32 = load i32, i32* %arrayidx, align 4, !dbg !10758
  store i32 %32, i32* %i_mirr, align 4, !dbg !10757
  %33 = load i32, i32* %i_mirr, align 4, !dbg !10760
  %cmp24 = icmp ne i32 %33, -1, !dbg !10762
  br i1 %cmp24, label %if.then26, label %if.else91, !dbg !10763

if.then26:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_mirr, metadata !10764, metadata !DIExpression()), !dbg !10766
  %34 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !10767
  %35 = load i32*, i32** %index, align 8, !dbg !10768
  %36 = load i32, i32* %i, align 4, !dbg !10769
  %idxprom27 = sext i32 %36 to i64, !dbg !10768
  %arrayidx28 = getelementptr inbounds i32, i32* %35, i64 %idxprom27, !dbg !10768
  %37 = load i32, i32* %arrayidx28, align 4, !dbg !10768
  %call29 = call %struct.BMVert* @BM_vert_at_index(%struct.BMesh* %34, i32 %37), !dbg !10770
  store %struct.BMVert* %call29, %struct.BMVert** %v_mirr, align 8, !dbg !10766
  %38 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10771
  %39 = load %struct.BMVert*, %struct.BMVert** %v_mirr, align 8, !dbg !10773
  %cmp30 = icmp ne %struct.BMVert* %38, %39, !dbg !10774
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !10775

if.then32:                                        ; preds = %if.then26
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !10776, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.declare(metadata [3 x float]* %co_mirr, metadata !10779, metadata !DIExpression()), !dbg !10780
  %40 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10781
  %co33 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %40, i32 0, i32 2, !dbg !10783
  %41 = load i32, i32* %axis, align 4, !dbg !10784
  %idxprom34 = sext i32 %41 to i64, !dbg !10781
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %co33, i64 0, i64 %idxprom34, !dbg !10781
  %42 = load float, float* %arrayidx35, align 4, !dbg !10781
  %43 = load %struct.BMVert*, %struct.BMVert** %v_mirr, align 8, !dbg !10785
  %co36 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %43, i32 0, i32 2, !dbg !10786
  %44 = load i32, i32* %axis, align 4, !dbg !10787
  %idxprom37 = sext i32 %44 to i64, !dbg !10785
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %co36, i64 0, i64 %idxprom37, !dbg !10785
  %45 = load float, float* %arrayidx38, align 4, !dbg !10785
  %cmp39 = fcmp ogt float %42, %45, !dbg !10788
  %conv40 = zext i1 %cmp39 to i32, !dbg !10788
  %46 = load i8, i8* %axis_sign, align 1, !dbg !10789
  %conv41 = zext i8 %46 to i32, !dbg !10789
  %cmp42 = icmp eq i32 %conv40, %conv41, !dbg !10790
  br i1 %cmp42, label %if.then44, label %if.end, !dbg !10791

if.then44:                                        ; preds = %if.then32
  call void @llvm.dbg.declare(metadata %struct.BMVert** %sw_ap, metadata !10792, metadata !DIExpression()), !dbg !10795
  %47 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10795
  store %struct.BMVert* %47, %struct.BMVert** %sw_ap, align 8, !dbg !10795
  %48 = load %struct.BMVert*, %struct.BMVert** %v_mirr, align 8, !dbg !10795
  store %struct.BMVert* %48, %struct.BMVert** %v, align 8, !dbg !10795
  %49 = load %struct.BMVert*, %struct.BMVert** %sw_ap, align 8, !dbg !10795
  store %struct.BMVert* %49, %struct.BMVert** %v_mirr, align 8, !dbg !10795
  br label %if.end, !dbg !10796

if.end:                                           ; preds = %if.then44, %if.then32
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co_mirr, i64 0, i64 0, !dbg !10797
  %50 = load %struct.BMVert*, %struct.BMVert** %v_mirr, align 8, !dbg !10798
  %co45 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %50, i32 0, i32 2, !dbg !10799
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %co45, i64 0, i64 0, !dbg !10798
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay46), !dbg !10800
  %51 = load i32, i32* %axis, align 4, !dbg !10801
  %idxprom47 = sext i32 %51 to i64, !dbg !10802
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %co_mirr, i64 0, i64 %idxprom47, !dbg !10802
  %52 = load float, float* %arrayidx48, align 4, !dbg !10803
  %mul49 = fmul float %52, -1.000000e+00, !dbg !10803
  store float %mul49, float* %arrayidx48, align 4, !dbg !10803
  %53 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10804
  %co50 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %53, i32 0, i32 2, !dbg !10806
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %co50, i64 0, i64 0, !dbg !10804
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %co_mirr, i64 0, i64 0, !dbg !10807
  %call53 = call float @len_squared_v3v3(float* %arraydecay51, float* %arraydecay52), !dbg !10808
  %cmp54 = fcmp ogt float %call53, 0x3DDB7CDFC0000000, !dbg !10809
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !10810

if.then56:                                        ; preds = %if.end
  %54 = load i32, i32* %totmirr, align 4, !dbg !10811
  %inc = add nsw i32 %54, 1, !dbg !10811
  store i32 %inc, i32* %totmirr, align 4, !dbg !10811
  br label %if.end57, !dbg !10813

if.end57:                                         ; preds = %if.then56, %if.end
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10814
  %55 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10815
  %co59 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %55, i32 0, i32 2, !dbg !10816
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %co59, i64 0, i64 0, !dbg !10815
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %co_mirr, i64 0, i64 0, !dbg !10817
  %56 = load float, float* %fac, align 4, !dbg !10818
  call void @interp_v3_v3v3(float* %arraydecay58, float* %arraydecay60, float* %arraydecay61, float %56), !dbg !10819
  %57 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10820
  %co62 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %57, i32 0, i32 2, !dbg !10821
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %co62, i64 0, i64 0, !dbg !10820
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10822
  call void @copy_v3_v3(float* %arraydecay63, float* %arraydecay64), !dbg !10823
  %58 = load i32, i32* %axis, align 4, !dbg !10824
  %idxprom65 = sext i32 %58 to i64, !dbg !10825
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 %idxprom65, !dbg !10825
  %59 = load float, float* %arrayidx66, align 4, !dbg !10826
  %mul67 = fmul float %59, -1.000000e+00, !dbg !10826
  store float %mul67, float* %arrayidx66, align 4, !dbg !10826
  %60 = load %struct.BMVert*, %struct.BMVert** %v_mirr, align 8, !dbg !10827
  %co68 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %60, i32 0, i32 2, !dbg !10828
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %co68, i64 0, i64 0, !dbg !10827
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10829
  call void @copy_v3_v3(float* %arraydecay69, float* %arraydecay70), !dbg !10830
  %61 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10831
  %head71 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %61, i32 0, i32 0, !dbg !10831
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head71, i8 zeroext 16), !dbg !10831
  %62 = load %struct.BMVert*, %struct.BMVert** %v_mirr, align 8, !dbg !10832
  %head72 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %62, i32 0, i32 0, !dbg !10832
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head72, i8 zeroext 16), !dbg !10832
  %63 = load i32, i32* %totfound, align 4, !dbg !10833
  %inc73 = add nsw i32 %63, 1, !dbg !10833
  store i32 %inc73, i32* %totfound, align 4, !dbg !10833
  br label %if.end90, !dbg !10834

if.else:                                          ; preds = %if.then26
  %64 = load i8, i8* %use_center, align 1, !dbg !10835
  %tobool74 = icmp ne i8 %64, 0, !dbg !10835
  br i1 %tobool74, label %if.then75, label %if.end87, !dbg !10838

if.then75:                                        ; preds = %if.else
  %65 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10839
  %co76 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %65, i32 0, i32 2, !dbg !10842
  %66 = load i32, i32* %axis, align 4, !dbg !10843
  %idxprom77 = sext i32 %66 to i64, !dbg !10839
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %co76, i64 0, i64 %idxprom77, !dbg !10839
  %67 = load float, float* %arrayidx78, align 4, !dbg !10839
  %68 = call float @llvm.fabs.f32(float %67), !dbg !10844
  %cmp79 = fcmp ogt float %68, 0x3EE4F8B580000000, !dbg !10845
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !10846

if.then81:                                        ; preds = %if.then75
  %69 = load i32, i32* %totmirr, align 4, !dbg !10847
  %inc82 = add nsw i32 %69, 1, !dbg !10847
  store i32 %inc82, i32* %totmirr, align 4, !dbg !10847
  br label %if.end83, !dbg !10849

if.end83:                                         ; preds = %if.then81, %if.then75
  %70 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10850
  %co84 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %70, i32 0, i32 2, !dbg !10851
  %71 = load i32, i32* %axis, align 4, !dbg !10852
  %idxprom85 = sext i32 %71 to i64, !dbg !10850
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %co84, i64 0, i64 %idxprom85, !dbg !10850
  store float 0.000000e+00, float* %arrayidx86, align 4, !dbg !10853
  br label %if.end87, !dbg !10854

if.end87:                                         ; preds = %if.end83, %if.else
  %72 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !10855
  %head88 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %72, i32 0, i32 0, !dbg !10855
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head88, i8 zeroext 16), !dbg !10855
  %73 = load i32, i32* %totfound, align 4, !dbg !10856
  %inc89 = add nsw i32 %73, 1, !dbg !10856
  store i32 %inc89, i32* %totfound, align 4, !dbg !10856
  br label %if.end90

if.end90:                                         ; preds = %if.end87, %if.end57
  br label %if.end93, !dbg !10857

if.else91:                                        ; preds = %if.then
  %74 = load i32, i32* %totfail, align 4, !dbg !10858
  %inc92 = add nsw i32 %74, 1, !dbg !10858
  store i32 %inc92, i32* %totfail, align 4, !dbg !10858
  br label %if.end93

if.end93:                                         ; preds = %if.else91, %if.end90
  br label %if.end94, !dbg !10860

if.end94:                                         ; preds = %if.end93, %land.lhs.true, %for.body
  br label %for.inc, !dbg !10861

for.inc:                                          ; preds = %if.end94
  %call95 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !10745
  %75 = bitcast i8* %call95 to %struct.BMVert*, !dbg !10745
  store %struct.BMVert* %75, %struct.BMVert** %v, align 8, !dbg !10745
  %76 = load i32, i32* %i, align 4, !dbg !10745
  %inc96 = add nsw i32 %76, 1, !dbg !10745
  store i32 %inc96, i32* %i, align 4, !dbg !10745
  br label %for.cond, !dbg !10745, !llvm.loop !10862

for.end:                                          ; preds = %for.cond
  %77 = load i32, i32* %totfail, align 4, !dbg !10864
  %tobool97 = icmp ne i32 %77, 0, !dbg !10864
  br i1 %tobool97, label %if.then98, label %if.else99, !dbg !10866

if.then98:                                        ; preds = %for.end
  %78 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10867
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %78, i32 0, i32 8, !dbg !10869
  %79 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !10869
  %80 = load i32, i32* %totfound, align 4, !dbg !10870
  %81 = load i32, i32* %totmirr, align 4, !dbg !10871
  %sub = sub nsw i32 %80, %81, !dbg !10872
  %82 = load i32, i32* %totmirr, align 4, !dbg !10873
  %83 = load i32, i32* %totfail, align 4, !dbg !10874
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %79, i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.530, i64 0, i64 0), i32 %sub, i32 %82, i32 %83), !dbg !10875
  br label %if.end102, !dbg !10876

if.else99:                                        ; preds = %for.end
  %84 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10877
  %reports100 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %84, i32 0, i32 8, !dbg !10879
  %85 = load %struct.ReportList*, %struct.ReportList** %reports100, align 8, !dbg !10879
  %86 = load i32, i32* %totfound, align 4, !dbg !10880
  %87 = load i32, i32* %totmirr, align 4, !dbg !10881
  %sub101 = sub nsw i32 %86, %87, !dbg !10882
  %88 = load i32, i32* %totmirr, align 4, !dbg !10883
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %85, i32 2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.531, i64 0, i64 0), i32 %sub101, i32 %88), !dbg !10884
  br label %if.end102

if.end102:                                        ; preds = %if.else99, %if.then98
  %89 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10885
  %90 = load i32*, i32** %index, align 8, !dbg !10886
  %91 = bitcast i32* %90 to i8*, !dbg !10886
  call void %89(i8* %91), !dbg !10885
  ret i32 4, !dbg !10887
}

declare dso_local %struct.Object* @CTX_data_edit_object(%struct.bContext*) #2

declare dso_local %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object*) #2

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

declare dso_local float @RNA_float_get(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @RNA_enum_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local void @BM_mesh_esubdivide(%struct.BMesh*, i8 zeroext, float, i16 signext, i8 zeroext, float, float, i32, i32, i32, i16 signext, i16 signext, i16 signext, i32) #2

declare dso_local void @EDBM_update_generic(%struct.BMEditMesh*, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_operator_edgering_props_get(%struct.wmOperator* %op, %struct.EdgeRingOpSubdProps* %op_props) #0 !dbg !10888 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  %op_props.addr = alloca %struct.EdgeRingOpSubdProps*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10892, metadata !DIExpression()), !dbg !10893
  store %struct.EdgeRingOpSubdProps* %op_props, %struct.EdgeRingOpSubdProps** %op_props.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EdgeRingOpSubdProps** %op_props.addr, metadata !10894, metadata !DIExpression()), !dbg !10895
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10896
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !10897
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10897
  %call = call i32 @RNA_enum_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.389, i64 0, i64 0)), !dbg !10898
  %2 = load %struct.EdgeRingOpSubdProps*, %struct.EdgeRingOpSubdProps** %op_props.addr, align 8, !dbg !10899
  %interp_mode = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %2, i32 0, i32 0, !dbg !10900
  store i32 %call, i32* %interp_mode, align 4, !dbg !10901
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10902
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !10903
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !10903
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)), !dbg !10904
  %5 = load %struct.EdgeRingOpSubdProps*, %struct.EdgeRingOpSubdProps** %op_props.addr, align 8, !dbg !10905
  %cuts = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %5, i32 0, i32 1, !dbg !10906
  store i32 %call2, i32* %cuts, align 4, !dbg !10907
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10908
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !10909
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !10909
  %call4 = call float @RNA_float_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)), !dbg !10910
  %8 = load %struct.EdgeRingOpSubdProps*, %struct.EdgeRingOpSubdProps** %op_props.addr, align 8, !dbg !10911
  %smooth = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %8, i32 0, i32 2, !dbg !10912
  store float %call4, float* %smooth, align 4, !dbg !10913
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10914
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !10915
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !10915
  %call6 = call i32 @RNA_enum_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.390, i64 0, i64 0)), !dbg !10916
  %11 = load %struct.EdgeRingOpSubdProps*, %struct.EdgeRingOpSubdProps** %op_props.addr, align 8, !dbg !10917
  %profile_shape = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %11, i32 0, i32 3, !dbg !10918
  store i32 %call6, i32* %profile_shape, align 4, !dbg !10919
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10920
  %ptr7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 7, !dbg !10921
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr7, align 8, !dbg !10921
  %call8 = call float @RNA_float_get(%struct.PointerRNA* %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.391, i64 0, i64 0)), !dbg !10922
  %14 = load %struct.EdgeRingOpSubdProps*, %struct.EdgeRingOpSubdProps** %op_props.addr, align 8, !dbg !10923
  %profile_shape_factor = getelementptr inbounds %struct.EdgeRingOpSubdProps, %struct.EdgeRingOpSubdProps* %14, i32 0, i32 4, !dbg !10924
  store float %call8, float* %profile_shape_factor, align 4, !dbg !10925
  ret void, !dbg !10926
}

declare dso_local zeroext i8 @EDBM_op_callf(%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) #2

declare dso_local void @RNA_def_property_enum_items(%struct.PropertyRNA*, %struct.EnumPropertyItem*) #2

declare dso_local void @RNA_def_property_enum_default(%struct.PropertyRNA*, i32) #2

declare dso_local void @RNA_def_property_ui_text(%struct.PropertyRNA*, i8*, i8*) #2

declare dso_local void @RNA_def_property_translation_context(%struct.PropertyRNA*, i8*) #2

declare dso_local zeroext i8 @EDBM_op_init(%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8*, ...) #2

declare dso_local void @BMO_op_exec(%struct.BMesh*, %struct.BMOperator*) #2

declare dso_local zeroext i8 @EDBM_op_finish(%struct.BMEditMesh*, %struct.BMOperator*, %struct.wmOperator*, i8 zeroext) #2

declare dso_local void @EDBM_selectmode_flush_ex(%struct.BMEditMesh*, i16 signext) #2

declare dso_local void @EDBM_selectmode_flush(%struct.BMEditMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !10927 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !10930, metadata !DIExpression()), !dbg !10931
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !10932, metadata !DIExpression()), !dbg !10933
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !10934, metadata !DIExpression()), !dbg !10935
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10936, metadata !DIExpression()), !dbg !10937
  %0 = load i8, i8* %itype.addr, align 1, !dbg !10938
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10939
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !10940
  store i8 %0, i8* %itype1, align 4, !dbg !10941
  %2 = load i8, i8* %itype.addr, align 1, !dbg !10942
  %conv = zext i8 %2 to i32, !dbg !10943
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !10944

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10945
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !10947
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !10948
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10949
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !10950
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !10951
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !10952
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !10953
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !10953
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10954
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !10955
  %elem_of_mesh = bitcast %union.anon.0* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !10956
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !10957
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !10958
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !10959
  br label %sw.epilog, !dbg !10960

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10961
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !10962
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !10963
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10964
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !10965
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !10966
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !10967
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !10968
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !10968
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10969
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !10970
  %elem_of_mesh7 = bitcast %union.anon.0* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !10971
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !10972
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !10973
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !10974
  br label %sw.epilog, !dbg !10975

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10976
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !10977
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !10978
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10979
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !10980
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !10981
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !10982
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !10983
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !10983
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10984
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !10985
  %elem_of_mesh14 = bitcast %union.anon.0* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !10986
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !10987
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !10988
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !10989
  br label %sw.epilog, !dbg !10990

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10991
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !10992
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !10993
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10994
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !10995
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !10996
  %20 = load i8*, i8** %data.addr, align 8, !dbg !10997
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !10998
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !10999
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !11000
  %edge_of_vert = bitcast %union.anon.0* %data20 to %struct.BMIter__edge_of_vert*, !dbg !11001
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !11002
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !11003
  br label %sw.epilog, !dbg !11004

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11005
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !11006
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !11007
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11008
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !11009
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !11010
  %25 = load i8*, i8** %data.addr, align 8, !dbg !11011
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !11012
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11013
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !11014
  %face_of_vert = bitcast %union.anon.0* %data24 to %struct.BMIter__face_of_vert*, !dbg !11015
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !11016
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !11017
  br label %sw.epilog, !dbg !11018

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11019
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !11020
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !11021
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11022
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !11023
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !11024
  %30 = load i8*, i8** %data.addr, align 8, !dbg !11025
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !11026
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11027
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !11028
  %loop_of_vert = bitcast %union.anon.0* %data29 to %struct.BMIter__loop_of_vert*, !dbg !11029
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !11030
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !11031
  br label %sw.epilog, !dbg !11032

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11033
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !11034
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !11035
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11036
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !11037
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !11038
  %35 = load i8*, i8** %data.addr, align 8, !dbg !11039
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !11040
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11041
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !11042
  %vert_of_edge = bitcast %union.anon.0* %data34 to %struct.BMIter__vert_of_edge*, !dbg !11043
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !11044
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !11045
  br label %sw.epilog, !dbg !11046

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11047
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !11048
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !11049
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11050
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !11051
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !11052
  %40 = load i8*, i8** %data.addr, align 8, !dbg !11053
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !11054
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11055
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !11056
  %face_of_edge = bitcast %union.anon.0* %data38 to %struct.BMIter__face_of_edge*, !dbg !11057
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !11058
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !11059
  br label %sw.epilog, !dbg !11060

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11061
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !11062
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !11063
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11064
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !11065
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !11066
  %45 = load i8*, i8** %data.addr, align 8, !dbg !11067
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !11068
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11069
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !11070
  %vert_of_face = bitcast %union.anon.0* %data43 to %struct.BMIter__vert_of_face*, !dbg !11071
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !11072
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !11073
  br label %sw.epilog, !dbg !11074

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11075
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !11076
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !11077
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11078
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !11079
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !11080
  %50 = load i8*, i8** %data.addr, align 8, !dbg !11081
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !11082
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11083
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !11084
  %edge_of_face = bitcast %union.anon.0* %data47 to %struct.BMIter__edge_of_face*, !dbg !11085
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !11086
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !11087
  br label %sw.epilog, !dbg !11088

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11089
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !11090
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !11091
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11092
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !11093
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !11094
  %55 = load i8*, i8** %data.addr, align 8, !dbg !11095
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !11096
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11097
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !11098
  %loop_of_face = bitcast %union.anon.0* %data52 to %struct.BMIter__loop_of_face*, !dbg !11099
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !11100
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !11101
  br label %sw.epilog, !dbg !11102

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11103
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !11104
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !11105
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11106
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !11107
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !11108
  %60 = load i8*, i8** %data.addr, align 8, !dbg !11109
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !11110
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11111
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !11112
  %loop_of_loop = bitcast %union.anon.0* %data57 to %struct.BMIter__loop_of_loop*, !dbg !11113
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !11114
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !11115
  br label %sw.epilog, !dbg !11116

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11117
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !11118
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !11119
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11120
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !11121
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !11122
  %65 = load i8*, i8** %data.addr, align 8, !dbg !11123
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !11124
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11125
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !11126
  %loop_of_edge = bitcast %union.anon.0* %data61 to %struct.BMIter__loop_of_edge*, !dbg !11127
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !11128
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !11129
  br label %sw.epilog, !dbg !11130

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !11131
  br label %return, !dbg !11131

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11132
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !11133
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !11133
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !11134
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !11134
  call void %69(i8* %71), !dbg !11132
  store i8 1, i8* %retval, align 1, !dbg !11135
  br label %return, !dbg !11135

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !11136
  ret i8 %72, !dbg !11136
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

declare dso_local void @EDBM_flag_disable_all(%struct.BMEditMesh*, i8 zeroext) #2

declare dso_local void @BM_mesh_elem_hflag_disable_all(%struct.BMesh*, i8 zeroext, i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_set(%struct.BMHeader* %head, i8 zeroext %hflag, i32 %val) #0 !dbg !11137 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  %val.addr = alloca i32, align 4
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !11141, metadata !DIExpression()), !dbg !11142
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !11143, metadata !DIExpression()), !dbg !11144
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !11145, metadata !DIExpression()), !dbg !11146
  %0 = load i32, i32* %val.addr, align 4, !dbg !11147
  %tobool = icmp ne i32 %0, 0, !dbg !11147
  br i1 %tobool, label %if.then, label %if.else, !dbg !11149

if.then:                                          ; preds = %entry
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !11150
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !11151
  call void @_bm_elem_flag_enable(%struct.BMHeader* %1, i8 zeroext %2), !dbg !11152
  br label %if.end, !dbg !11152

if.else:                                          ; preds = %entry
  %3 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !11153
  %4 = load i8, i8* %hflag.addr, align 1, !dbg !11154
  call void @_bm_elem_flag_disable(%struct.BMHeader* %3, i8 zeroext %4), !dbg !11155
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11156
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bm_face_is_loose(%struct.BMFace* %f) #0 !dbg !11157 {
entry:
  %retval = alloca i8, align 1
  %f.addr = alloca %struct.BMFace*, align 8
  %l_iter = alloca %struct.BMLoop*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !11160, metadata !DIExpression()), !dbg !11161
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !11162, metadata !DIExpression()), !dbg !11163
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !11164, metadata !DIExpression()), !dbg !11165
  %0 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !11166
  %l_first1 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %0, i32 0, i32 2, !dbg !11166
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l_first1, align 8, !dbg !11166
  store %struct.BMLoop* %1, %struct.BMLoop** %l_first, align 8, !dbg !11167
  store %struct.BMLoop* %1, %struct.BMLoop** %l_iter, align 8, !dbg !11168
  br label %do.body, !dbg !11169

do.body:                                          ; preds = %do.cond, %entry
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !11170
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %2, i32 0, i32 2, !dbg !11173
  %3 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11173
  %call = call zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %3), !dbg !11174
  %tobool = icmp ne i8 %call, 0, !dbg !11174
  br i1 %tobool, label %if.end, label %if.then, !dbg !11175

if.then:                                          ; preds = %do.body
  store i8 0, i8* %retval, align 1, !dbg !11176
  br label %return, !dbg !11176

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !11178

do.cond:                                          ; preds = %if.end
  %4 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !11179
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %4, i32 0, i32 6, !dbg !11180
  %5 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !11180
  store %struct.BMLoop* %5, %struct.BMLoop** %l_iter, align 8, !dbg !11181
  %6 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !11182
  %cmp = icmp ne %struct.BMLoop* %5, %6, !dbg !11183
  br i1 %cmp, label %do.body, label %do.end, !dbg !11178, !llvm.loop !11184

do.end:                                           ; preds = %do.cond
  store i8 1, i8* %retval, align 1, !dbg !11186
  br label %return, !dbg !11186

return:                                           ; preds = %do.end, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !11187
  ret i8 %7, !dbg !11187
}

declare dso_local void @BM_mesh_delete_hflag_context(%struct.BMesh*, i8 zeroext, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_edge_is_wire(%struct.BMEdge* %e) #0 !dbg !11188 {
entry:
  %e.addr = alloca %struct.BMEdge*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !11194, metadata !DIExpression()), !dbg !11195
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !11196
  %l = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 4, !dbg !11197
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11197
  %cmp = icmp eq %struct.BMLoop* %1, null, !dbg !11198
  %conv = zext i1 %cmp to i32, !dbg !11198
  %conv1 = trunc i32 %conv to i8, !dbg !11199
  ret i8 %conv1, !dbg !11200
}

; Function Attrs: noinline nounwind uwtable
define internal void @edbm_report_delete_info(%struct.ReportList* %reports, %struct.BMesh* %bm, i32* %totelem) #0 !dbg !11201 {
entry:
  %reports.addr = alloca %struct.ReportList*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %totelem.addr = alloca i32*, align 8
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !11207, metadata !DIExpression()), !dbg !11208
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !11209, metadata !DIExpression()), !dbg !11210
  store i32* %totelem, i32** %totelem.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totelem.addr, metadata !11211, metadata !DIExpression()), !dbg !11212
  %0 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !11213
  %1 = load i32*, i32** %totelem.addr, align 8, !dbg !11214
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 0, !dbg !11214
  %2 = load i32, i32* %arrayidx, align 4, !dbg !11214
  %3 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11215
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 0, !dbg !11216
  %4 = load i32, i32* %totvert, align 8, !dbg !11216
  %sub = sub nsw i32 %2, %4, !dbg !11217
  %5 = load i32*, i32** %totelem.addr, align 8, !dbg !11218
  %arrayidx1 = getelementptr inbounds i32, i32* %5, i64 1, !dbg !11218
  %6 = load i32, i32* %arrayidx1, align 4, !dbg !11218
  %7 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11219
  %totedge = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 1, !dbg !11220
  %8 = load i32, i32* %totedge, align 4, !dbg !11220
  %sub2 = sub nsw i32 %6, %8, !dbg !11221
  %9 = load i32*, i32** %totelem.addr, align 8, !dbg !11222
  %arrayidx3 = getelementptr inbounds i32, i32* %9, i64 2, !dbg !11222
  %10 = load i32, i32* %arrayidx3, align 4, !dbg !11222
  %11 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11223
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %11, i32 0, i32 3, !dbg !11224
  %12 = load i32, i32* %totface, align 4, !dbg !11224
  %sub4 = sub nsw i32 %10, %12, !dbg !11225
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %0, i32 2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.412, i64 0, i64 0), i32 %sub, i32 %sub2, i32 %sub4), !dbg !11226
  ret void, !dbg !11227
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_enable(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !11228 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !11231, metadata !DIExpression()), !dbg !11232
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !11233, metadata !DIExpression()), !dbg !11234
  %0 = load i8, i8* %hflag.addr, align 1, !dbg !11235
  %conv = zext i8 %0 to i32, !dbg !11235
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !11236
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 3, !dbg !11237
  %2 = load i8, i8* %hflag1, align 1, !dbg !11238
  %conv2 = zext i8 %2 to i32, !dbg !11238
  %or = or i32 %conv2, %conv, !dbg !11238
  %conv3 = trunc i32 %or to i8, !dbg !11238
  store i8 %conv3, i8* %hflag1, align 1, !dbg !11238
  ret void, !dbg !11239
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_flag_disable(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !11240 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !11241, metadata !DIExpression()), !dbg !11242
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !11243, metadata !DIExpression()), !dbg !11244
  %0 = load i8, i8* %hflag.addr, align 1, !dbg !11245
  %conv = zext i8 %0 to i32, !dbg !11245
  %neg = xor i32 %conv, -1, !dbg !11246
  %conv1 = trunc i32 %neg to i8, !dbg !11247
  %conv2 = zext i8 %conv1 to i32, !dbg !11247
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !11248
  %hflag3 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 3, !dbg !11249
  %2 = load i8, i8* %hflag3, align 1, !dbg !11250
  %conv4 = zext i8 %2 to i32, !dbg !11250
  %and = and i32 %conv4, %conv2, !dbg !11250
  %conv5 = trunc i32 %and to i8, !dbg !11250
  store i8 %conv5, i8* %hflag3, align 1, !dbg !11250
  ret void, !dbg !11251
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %e) #0 !dbg !11252 {
entry:
  %e.addr = alloca %struct.BMEdge*, align 8
  %l = alloca %struct.BMLoop*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !11253, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !11255, metadata !DIExpression()), !dbg !11258
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !11259
  %l1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 4, !dbg !11260
  %1 = load %struct.BMLoop*, %struct.BMLoop** %l1, align 8, !dbg !11260
  store %struct.BMLoop* %1, %struct.BMLoop** %l, align 8, !dbg !11258
  %2 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11261
  %tobool = icmp ne %struct.BMLoop* %2, null, !dbg !11261
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11262

land.rhs:                                         ; preds = %entry
  %3 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11263
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %3, i32 0, i32 4, !dbg !11264
  %4 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !11264
  %5 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11265
  %cmp = icmp eq %struct.BMLoop* %4, %5, !dbg !11266
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !11267
  %land.ext = zext i1 %6 to i32, !dbg !11262
  %conv = trunc i32 %land.ext to i8, !dbg !11268
  ret i8 %conv, !dbg !11269
}

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_add_edge_face__smooth_get(%struct.BMesh* %bm) #0 !dbg !11270 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %vote_on_smooth = alloca [2 x i32], align 4
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !11273, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !11275, metadata !DIExpression()), !dbg !11276
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11277, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.declare(metadata [2 x i32]* %vote_on_smooth, metadata !11279, metadata !DIExpression()), !dbg !11280
  %0 = bitcast [2 x i32]* %vote_on_smooth to i8*, !dbg !11280
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 8, i1 false), !dbg !11280
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11281
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %1, i8 zeroext 2, i8* null), !dbg !11281
  %2 = bitcast i8* %call to %struct.BMEdge*, !dbg !11281
  store %struct.BMEdge* %2, %struct.BMEdge** %e, align 8, !dbg !11281
  br label %for.cond, !dbg !11281

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11283
  %tobool = icmp ne %struct.BMEdge* %3, null, !dbg !11281
  br i1 %tobool, label %for.body, label %for.end, !dbg !11281

for.body:                                         ; preds = %for.cond
  %4 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11285
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %4, i32 0, i32 0, !dbg !11285
  %call1 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !11285
  %conv = zext i8 %call1 to i32, !dbg !11285
  %tobool2 = icmp ne i32 %conv, 0, !dbg !11285
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !11288

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11289
  %l = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %5, i32 0, i32 4, !dbg !11290
  %6 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11290
  %tobool3 = icmp ne %struct.BMLoop* %6, null, !dbg !11289
  br i1 %tobool3, label %if.then, label %if.end, !dbg !11291

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11292
  %l4 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %7, i32 0, i32 4, !dbg !11292
  %8 = load %struct.BMLoop*, %struct.BMLoop** %l4, align 8, !dbg !11292
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 3, !dbg !11292
  %9 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !11292
  %head5 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %9, i32 0, i32 0, !dbg !11292
  %call6 = call zeroext i8 @_bm_elem_flag_test_bool(%struct.BMHeader* %head5, i8 zeroext 8), !dbg !11292
  %idxprom = zext i8 %call6 to i64, !dbg !11294
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %vote_on_smooth, i64 0, i64 %idxprom, !dbg !11294
  %10 = load i32, i32* %arrayidx, align 4, !dbg !11295
  %inc = add i32 %10, 1, !dbg !11295
  store i32 %inc, i32* %arrayidx, align 4, !dbg !11295
  br label %if.end, !dbg !11296

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !11297

for.inc:                                          ; preds = %if.end
  %call7 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11283
  %11 = bitcast i8* %call7 to %struct.BMEdge*, !dbg !11283
  store %struct.BMEdge* %11, %struct.BMEdge** %e, align 8, !dbg !11283
  br label %for.cond, !dbg !11283, !llvm.loop !11298

for.end:                                          ; preds = %for.cond
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %vote_on_smooth, i64 0, i64 0, !dbg !11300
  %12 = load i32, i32* %arrayidx8, align 4, !dbg !11300
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %vote_on_smooth, i64 0, i64 1, !dbg !11301
  %13 = load i32, i32* %arrayidx9, align 4, !dbg !11301
  %cmp = icmp ult i32 %12, %13, !dbg !11302
  %conv10 = zext i1 %cmp to i32, !dbg !11302
  ret i32 %conv10, !dbg !11303
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMElem* @edbm_add_edge_face_exec__tricky_extend_sel(%struct.BMesh* %bm) #0 !dbg !11304 {
entry:
  %retval = alloca %struct.BMElem*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %found = alloca i8, align 1
  %v = alloca %struct.BMVert*, align 8
  %ed_pair = alloca [3 x %struct.BMEdge*], align 16
  %e_other = alloca %struct.BMEdge*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %ed_pair_v1 = alloca [2 x %struct.BMEdge*], align 16
  %ed_pair_v2 = alloca [2 x %struct.BMEdge*], align 16
  %v1_other = alloca %struct.BMVert*, align 8
  %v2_other = alloca %struct.BMVert*, align 8
  %e_other167 = alloca %struct.BMEdge*, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !11307, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11309, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.declare(metadata i8* %found, metadata !11311, metadata !DIExpression()), !dbg !11312
  store i8 0, i8* %found, align 1, !dbg !11312
  %0 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11313
  %totvertsel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %0, i32 0, i32 4, !dbg !11315
  %1 = load i32, i32* %totvertsel, align 8, !dbg !11315
  %cmp = icmp eq i32 %1, 1, !dbg !11316
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !11317

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11318
  %totedgesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %2, i32 0, i32 5, !dbg !11319
  %3 = load i32, i32* %totedgesel, align 4, !dbg !11319
  %cmp1 = icmp eq i32 %3, 0, !dbg !11320
  br i1 %cmp1, label %land.lhs.true2, label %if.else, !dbg !11321

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11322
  %totfacesel = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 6, !dbg !11323
  %5 = load i32, i32* %totfacesel, align 8, !dbg !11323
  %cmp3 = icmp eq i32 %5, 0, !dbg !11324
  br i1 %cmp3, label %if.then, label %if.else, !dbg !11325

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !11326, metadata !DIExpression()), !dbg !11328
  %6 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11329
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %6, i8 zeroext 1, i8* null), !dbg !11329
  %7 = bitcast i8* %call to %struct.BMVert*, !dbg !11329
  store %struct.BMVert* %7, %struct.BMVert** %v, align 8, !dbg !11329
  br label %for.cond, !dbg !11329

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11331
  %tobool = icmp ne %struct.BMVert* %8, null, !dbg !11329
  br i1 %tobool, label %for.body, label %for.end, !dbg !11329

for.body:                                         ; preds = %for.cond
  %9 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11333
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %9, i32 0, i32 0, !dbg !11333
  %call4 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !11333
  %tobool5 = icmp ne i8 %call4, 0, !dbg !11333
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !11336

if.then6:                                         ; preds = %for.body
  store i8 1, i8* %found, align 1, !dbg !11337
  br label %for.end, !dbg !11339

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11340

for.inc:                                          ; preds = %if.end
  %call7 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11331
  %10 = bitcast i8* %call7 to %struct.BMVert*, !dbg !11331
  store %struct.BMVert* %10, %struct.BMVert** %v, align 8, !dbg !11331
  br label %for.cond, !dbg !11331, !llvm.loop !11341

for.end:                                          ; preds = %if.then6, %for.cond
  %11 = load i8, i8* %found, align 1, !dbg !11343
  %tobool8 = icmp ne i8 %11, 0, !dbg !11343
  br i1 %tobool8, label %if.then9, label %if.end40, !dbg !11345

if.then9:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata [3 x %struct.BMEdge*]* %ed_pair, metadata !11346, metadata !DIExpression()), !dbg !11349
  %12 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11350
  %arraydecay = getelementptr inbounds [3 x %struct.BMEdge*], [3 x %struct.BMEdge*]* %ed_pair, i64 0, i64 0, !dbg !11352
  %call10 = call i32 @edbm_add_edge_face_exec__vert_edge_lookup(%struct.BMVert* %12, %struct.BMEdge* null, %struct.BMEdge** %arraydecay, i32 3, i8 (%struct.BMEdge*)* @BM_edge_is_wire), !dbg !11353
  %cmp11 = icmp eq i32 %call10, 2, !dbg !11354
  br i1 %cmp11, label %land.lhs.true12, label %lor.lhs.false, !dbg !11355

land.lhs.true12:                                  ; preds = %if.then9
  %arrayidx = getelementptr inbounds [3 x %struct.BMEdge*], [3 x %struct.BMEdge*]* %ed_pair, i64 0, i64 0, !dbg !11356
  %13 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx, align 16, !dbg !11356
  %arrayidx13 = getelementptr inbounds [3 x %struct.BMEdge*], [3 x %struct.BMEdge*]* %ed_pair, i64 0, i64 1, !dbg !11357
  %14 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx13, align 8, !dbg !11357
  %call14 = call zeroext i8 @BM_edge_share_face_check(%struct.BMEdge* %13, %struct.BMEdge* %14), !dbg !11358
  %conv = zext i8 %call14 to i32, !dbg !11358
  %cmp15 = icmp eq i32 %conv, 0, !dbg !11359
  br i1 %cmp15, label %if.then28, label %lor.lhs.false, !dbg !11360

lor.lhs.false:                                    ; preds = %land.lhs.true12, %if.then9
  %15 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11361
  %arraydecay17 = getelementptr inbounds [3 x %struct.BMEdge*], [3 x %struct.BMEdge*]* %ed_pair, i64 0, i64 0, !dbg !11362
  %call18 = call i32 @edbm_add_edge_face_exec__vert_edge_lookup(%struct.BMVert* %15, %struct.BMEdge* null, %struct.BMEdge** %arraydecay17, i32 3, i8 (%struct.BMEdge*)* @BM_edge_is_boundary), !dbg !11363
  %cmp19 = icmp eq i32 %call18, 2, !dbg !11364
  br i1 %cmp19, label %land.lhs.true21, label %if.end39, !dbg !11365

land.lhs.true21:                                  ; preds = %lor.lhs.false
  %arrayidx22 = getelementptr inbounds [3 x %struct.BMEdge*], [3 x %struct.BMEdge*]* %ed_pair, i64 0, i64 0, !dbg !11366
  %16 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx22, align 16, !dbg !11366
  %arrayidx23 = getelementptr inbounds [3 x %struct.BMEdge*], [3 x %struct.BMEdge*]* %ed_pair, i64 0, i64 1, !dbg !11367
  %17 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx23, align 8, !dbg !11367
  %call24 = call zeroext i8 @BM_edge_share_face_check(%struct.BMEdge* %16, %struct.BMEdge* %17), !dbg !11368
  %conv25 = zext i8 %call24 to i32, !dbg !11368
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !11369
  br i1 %cmp26, label %if.then28, label %if.end39, !dbg !11370

if.then28:                                        ; preds = %land.lhs.true21, %land.lhs.true12
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_other, metadata !11371, metadata !DIExpression()), !dbg !11373
  %arrayidx29 = getelementptr inbounds [3 x %struct.BMEdge*], [3 x %struct.BMEdge*]* %ed_pair, i64 0, i64 0, !dbg !11374
  %18 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx29, align 16, !dbg !11374
  %19 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11375
  %call30 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %18, %struct.BMVert* %19), !dbg !11376
  %arrayidx31 = getelementptr inbounds [3 x %struct.BMEdge*], [3 x %struct.BMEdge*]* %ed_pair, i64 0, i64 1, !dbg !11377
  %20 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx31, align 8, !dbg !11377
  %21 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11378
  %call32 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %20, %struct.BMVert* %21), !dbg !11379
  %call33 = call %struct.BMEdge* @BM_edge_exists(%struct.BMVert* %call30, %struct.BMVert* %call32), !dbg !11380
  store %struct.BMEdge* %call33, %struct.BMEdge** %e_other, align 8, !dbg !11373
  %22 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11381
  %arrayidx34 = getelementptr inbounds [3 x %struct.BMEdge*], [3 x %struct.BMEdge*]* %ed_pair, i64 0, i64 0, !dbg !11382
  %23 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx34, align 16, !dbg !11382
  call void @BM_edge_select_set(%struct.BMesh* %22, %struct.BMEdge* %23, i8 zeroext 1), !dbg !11383
  %24 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11384
  %arrayidx35 = getelementptr inbounds [3 x %struct.BMEdge*], [3 x %struct.BMEdge*]* %ed_pair, i64 0, i64 1, !dbg !11385
  %25 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx35, align 8, !dbg !11385
  call void @BM_edge_select_set(%struct.BMesh* %24, %struct.BMEdge* %25, i8 zeroext 1), !dbg !11386
  %26 = load %struct.BMEdge*, %struct.BMEdge** %e_other, align 8, !dbg !11387
  %tobool36 = icmp ne %struct.BMEdge* %26, null, !dbg !11387
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !11389

if.then37:                                        ; preds = %if.then28
  %27 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11390
  %28 = load %struct.BMEdge*, %struct.BMEdge** %e_other, align 8, !dbg !11392
  call void @BM_edge_select_set(%struct.BMesh* %27, %struct.BMEdge* %28, i8 zeroext 1), !dbg !11393
  br label %if.end38, !dbg !11394

if.end38:                                         ; preds = %if.then37, %if.then28
  %29 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11395
  %30 = bitcast %struct.BMVert* %29 to %struct.BMElem*, !dbg !11396
  store %struct.BMElem* %30, %struct.BMElem** %retval, align 8, !dbg !11397
  br label %return, !dbg !11397

if.end39:                                         ; preds = %land.lhs.true21, %lor.lhs.false
  br label %if.end40, !dbg !11398

if.end40:                                         ; preds = %if.end39, %for.end
  br label %if.end179, !dbg !11399

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %31 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11400
  %totvertsel41 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %31, i32 0, i32 4, !dbg !11402
  %32 = load i32, i32* %totvertsel41, align 8, !dbg !11402
  %cmp42 = icmp eq i32 %32, 2, !dbg !11403
  br i1 %cmp42, label %land.lhs.true44, label %if.end178, !dbg !11404

land.lhs.true44:                                  ; preds = %if.else
  %33 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11405
  %totedgesel45 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %33, i32 0, i32 5, !dbg !11406
  %34 = load i32, i32* %totedgesel45, align 4, !dbg !11406
  %cmp46 = icmp eq i32 %34, 1, !dbg !11407
  br i1 %cmp46, label %land.lhs.true48, label %if.end178, !dbg !11408

land.lhs.true48:                                  ; preds = %land.lhs.true44
  %35 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11409
  %totfacesel49 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %35, i32 0, i32 6, !dbg !11410
  %36 = load i32, i32* %totfacesel49, align 8, !dbg !11410
  %cmp50 = icmp eq i32 %36, 0, !dbg !11411
  br i1 %cmp50, label %if.then52, label %if.end178, !dbg !11412

if.then52:                                        ; preds = %land.lhs.true48
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !11413, metadata !DIExpression()), !dbg !11415
  %37 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11416
  %call53 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %37, i8 zeroext 2, i8* null), !dbg !11416
  %38 = bitcast i8* %call53 to %struct.BMEdge*, !dbg !11416
  store %struct.BMEdge* %38, %struct.BMEdge** %e, align 8, !dbg !11416
  br label %for.cond54, !dbg !11416

for.cond54:                                       ; preds = %for.inc62, %if.then52
  %39 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11418
  %tobool55 = icmp ne %struct.BMEdge* %39, null, !dbg !11416
  br i1 %tobool55, label %for.body56, label %for.end64, !dbg !11416

for.body56:                                       ; preds = %for.cond54
  %40 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11420
  %head57 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %40, i32 0, i32 0, !dbg !11420
  %call58 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head57, i8 zeroext 1), !dbg !11420
  %tobool59 = icmp ne i8 %call58, 0, !dbg !11420
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !11423

if.then60:                                        ; preds = %for.body56
  store i8 1, i8* %found, align 1, !dbg !11424
  br label %for.end64, !dbg !11426

if.end61:                                         ; preds = %for.body56
  br label %for.inc62, !dbg !11427

for.inc62:                                        ; preds = %if.end61
  %call63 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11418
  %41 = bitcast i8* %call63 to %struct.BMEdge*, !dbg !11418
  store %struct.BMEdge* %41, %struct.BMEdge** %e, align 8, !dbg !11418
  br label %for.cond54, !dbg !11418, !llvm.loop !11428

for.end64:                                        ; preds = %if.then60, %for.cond54
  %42 = load i8, i8* %found, align 1, !dbg !11430
  %tobool65 = icmp ne i8 %42, 0, !dbg !11430
  br i1 %tobool65, label %if.then66, label %if.end177, !dbg !11432

if.then66:                                        ; preds = %for.end64
  call void @llvm.dbg.declare(metadata [2 x %struct.BMEdge*]* %ed_pair_v1, metadata !11433, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.declare(metadata [2 x %struct.BMEdge*]* %ed_pair_v2, metadata !11437, metadata !DIExpression()), !dbg !11438
  %43 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11439
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %43, i32 0, i32 2, !dbg !11441
  %44 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !11441
  %45 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11442
  %arraydecay67 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v1, i64 0, i64 0, !dbg !11443
  %call68 = call i32 @edbm_add_edge_face_exec__vert_edge_lookup(%struct.BMVert* %44, %struct.BMEdge* %45, %struct.BMEdge** %arraydecay67, i32 2, i8 (%struct.BMEdge*)* @BM_edge_is_wire), !dbg !11444
  %cmp69 = icmp eq i32 %call68, 1, !dbg !11445
  br i1 %cmp69, label %land.lhs.true71, label %lor.lhs.false88, !dbg !11446

land.lhs.true71:                                  ; preds = %if.then66
  %46 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11447
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %46, i32 0, i32 3, !dbg !11448
  %47 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !11448
  %48 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11449
  %arraydecay72 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v2, i64 0, i64 0, !dbg !11450
  %call73 = call i32 @edbm_add_edge_face_exec__vert_edge_lookup(%struct.BMVert* %47, %struct.BMEdge* %48, %struct.BMEdge** %arraydecay72, i32 2, i8 (%struct.BMEdge*)* @BM_edge_is_wire), !dbg !11451
  %cmp74 = icmp eq i32 %call73, 1, !dbg !11452
  br i1 %cmp74, label %land.lhs.true76, label %lor.lhs.false88, !dbg !11453

land.lhs.true76:                                  ; preds = %land.lhs.true71
  %49 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11454
  %arrayidx77 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v1, i64 0, i64 0, !dbg !11455
  %50 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx77, align 16, !dbg !11455
  %call78 = call zeroext i8 @BM_edge_share_face_check(%struct.BMEdge* %49, %struct.BMEdge* %50), !dbg !11456
  %conv79 = zext i8 %call78 to i32, !dbg !11456
  %cmp80 = icmp eq i32 %conv79, 0, !dbg !11457
  br i1 %cmp80, label %land.lhs.true82, label %lor.lhs.false88, !dbg !11458

land.lhs.true82:                                  ; preds = %land.lhs.true76
  %51 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11459
  %arrayidx83 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v2, i64 0, i64 0, !dbg !11460
  %52 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx83, align 16, !dbg !11460
  %call84 = call zeroext i8 @BM_edge_share_face_check(%struct.BMEdge* %51, %struct.BMEdge* %52), !dbg !11461
  %conv85 = zext i8 %call84 to i32, !dbg !11461
  %cmp86 = icmp eq i32 %conv85, 0, !dbg !11462
  br i1 %cmp86, label %if.then160, label %lor.lhs.false88, !dbg !11463

lor.lhs.false88:                                  ; preds = %land.lhs.true82, %land.lhs.true76, %land.lhs.true71, %if.then66
  %53 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11464
  %v189 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %53, i32 0, i32 2, !dbg !11465
  %54 = load %struct.BMVert*, %struct.BMVert** %v189, align 8, !dbg !11465
  %55 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11466
  %arraydecay90 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v1, i64 0, i64 0, !dbg !11467
  %call91 = call i32 @edbm_add_edge_face_exec__vert_edge_lookup(%struct.BMVert* %54, %struct.BMEdge* %55, %struct.BMEdge** %arraydecay90, i32 2, i8 (%struct.BMEdge*)* @BM_edge_is_wire), !dbg !11468
  %cmp92 = icmp eq i32 %call91, 1, !dbg !11469
  br i1 %cmp92, label %land.lhs.true94, label %lor.lhs.false112, !dbg !11470

land.lhs.true94:                                  ; preds = %lor.lhs.false88
  %56 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11471
  %v295 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %56, i32 0, i32 3, !dbg !11472
  %57 = load %struct.BMVert*, %struct.BMVert** %v295, align 8, !dbg !11472
  %58 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11473
  %arraydecay96 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v2, i64 0, i64 0, !dbg !11474
  %call97 = call i32 @edbm_add_edge_face_exec__vert_edge_lookup(%struct.BMVert* %57, %struct.BMEdge* %58, %struct.BMEdge** %arraydecay96, i32 2, i8 (%struct.BMEdge*)* @BM_edge_is_boundary), !dbg !11475
  %cmp98 = icmp eq i32 %call97, 1, !dbg !11476
  br i1 %cmp98, label %land.lhs.true100, label %lor.lhs.false112, !dbg !11477

land.lhs.true100:                                 ; preds = %land.lhs.true94
  %59 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11478
  %arrayidx101 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v1, i64 0, i64 0, !dbg !11479
  %60 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx101, align 16, !dbg !11479
  %call102 = call zeroext i8 @BM_edge_share_face_check(%struct.BMEdge* %59, %struct.BMEdge* %60), !dbg !11480
  %conv103 = zext i8 %call102 to i32, !dbg !11480
  %cmp104 = icmp eq i32 %conv103, 0, !dbg !11481
  br i1 %cmp104, label %land.lhs.true106, label %lor.lhs.false112, !dbg !11482

land.lhs.true106:                                 ; preds = %land.lhs.true100
  %61 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11483
  %arrayidx107 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v2, i64 0, i64 0, !dbg !11484
  %62 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx107, align 16, !dbg !11484
  %call108 = call zeroext i8 @BM_edge_share_face_check(%struct.BMEdge* %61, %struct.BMEdge* %62), !dbg !11485
  %conv109 = zext i8 %call108 to i32, !dbg !11485
  %cmp110 = icmp eq i32 %conv109, 0, !dbg !11486
  br i1 %cmp110, label %if.then160, label %lor.lhs.false112, !dbg !11487

lor.lhs.false112:                                 ; preds = %land.lhs.true106, %land.lhs.true100, %land.lhs.true94, %lor.lhs.false88
  %63 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11488
  %v1113 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %63, i32 0, i32 2, !dbg !11489
  %64 = load %struct.BMVert*, %struct.BMVert** %v1113, align 8, !dbg !11489
  %65 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11490
  %arraydecay114 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v1, i64 0, i64 0, !dbg !11491
  %call115 = call i32 @edbm_add_edge_face_exec__vert_edge_lookup(%struct.BMVert* %64, %struct.BMEdge* %65, %struct.BMEdge** %arraydecay114, i32 2, i8 (%struct.BMEdge*)* @BM_edge_is_boundary), !dbg !11492
  %cmp116 = icmp eq i32 %call115, 1, !dbg !11493
  br i1 %cmp116, label %land.lhs.true118, label %lor.lhs.false136, !dbg !11494

land.lhs.true118:                                 ; preds = %lor.lhs.false112
  %66 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11495
  %v2119 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %66, i32 0, i32 3, !dbg !11496
  %67 = load %struct.BMVert*, %struct.BMVert** %v2119, align 8, !dbg !11496
  %68 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11497
  %arraydecay120 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v2, i64 0, i64 0, !dbg !11498
  %call121 = call i32 @edbm_add_edge_face_exec__vert_edge_lookup(%struct.BMVert* %67, %struct.BMEdge* %68, %struct.BMEdge** %arraydecay120, i32 2, i8 (%struct.BMEdge*)* @BM_edge_is_wire), !dbg !11499
  %cmp122 = icmp eq i32 %call121, 1, !dbg !11500
  br i1 %cmp122, label %land.lhs.true124, label %lor.lhs.false136, !dbg !11501

land.lhs.true124:                                 ; preds = %land.lhs.true118
  %69 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11502
  %arrayidx125 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v1, i64 0, i64 0, !dbg !11503
  %70 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx125, align 16, !dbg !11503
  %call126 = call zeroext i8 @BM_edge_share_face_check(%struct.BMEdge* %69, %struct.BMEdge* %70), !dbg !11504
  %conv127 = zext i8 %call126 to i32, !dbg !11504
  %cmp128 = icmp eq i32 %conv127, 0, !dbg !11505
  br i1 %cmp128, label %land.lhs.true130, label %lor.lhs.false136, !dbg !11506

land.lhs.true130:                                 ; preds = %land.lhs.true124
  %71 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11507
  %arrayidx131 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v2, i64 0, i64 0, !dbg !11508
  %72 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx131, align 16, !dbg !11508
  %call132 = call zeroext i8 @BM_edge_share_face_check(%struct.BMEdge* %71, %struct.BMEdge* %72), !dbg !11509
  %conv133 = zext i8 %call132 to i32, !dbg !11509
  %cmp134 = icmp eq i32 %conv133, 0, !dbg !11510
  br i1 %cmp134, label %if.then160, label %lor.lhs.false136, !dbg !11511

lor.lhs.false136:                                 ; preds = %land.lhs.true130, %land.lhs.true124, %land.lhs.true118, %lor.lhs.false112
  %73 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11512
  %v1137 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %73, i32 0, i32 2, !dbg !11513
  %74 = load %struct.BMVert*, %struct.BMVert** %v1137, align 8, !dbg !11513
  %75 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11514
  %arraydecay138 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v1, i64 0, i64 0, !dbg !11515
  %call139 = call i32 @edbm_add_edge_face_exec__vert_edge_lookup(%struct.BMVert* %74, %struct.BMEdge* %75, %struct.BMEdge** %arraydecay138, i32 2, i8 (%struct.BMEdge*)* @BM_edge_is_boundary), !dbg !11516
  %cmp140 = icmp eq i32 %call139, 1, !dbg !11517
  br i1 %cmp140, label %land.lhs.true142, label %if.end176, !dbg !11518

land.lhs.true142:                                 ; preds = %lor.lhs.false136
  %76 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11519
  %v2143 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %76, i32 0, i32 3, !dbg !11520
  %77 = load %struct.BMVert*, %struct.BMVert** %v2143, align 8, !dbg !11520
  %78 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11521
  %arraydecay144 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v2, i64 0, i64 0, !dbg !11522
  %call145 = call i32 @edbm_add_edge_face_exec__vert_edge_lookup(%struct.BMVert* %77, %struct.BMEdge* %78, %struct.BMEdge** %arraydecay144, i32 2, i8 (%struct.BMEdge*)* @BM_edge_is_boundary), !dbg !11523
  %cmp146 = icmp eq i32 %call145, 1, !dbg !11524
  br i1 %cmp146, label %land.lhs.true148, label %if.end176, !dbg !11525

land.lhs.true148:                                 ; preds = %land.lhs.true142
  %79 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11526
  %arrayidx149 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v1, i64 0, i64 0, !dbg !11527
  %80 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx149, align 16, !dbg !11527
  %call150 = call zeroext i8 @BM_edge_share_face_check(%struct.BMEdge* %79, %struct.BMEdge* %80), !dbg !11528
  %conv151 = zext i8 %call150 to i32, !dbg !11528
  %cmp152 = icmp eq i32 %conv151, 0, !dbg !11529
  br i1 %cmp152, label %land.lhs.true154, label %if.end176, !dbg !11530

land.lhs.true154:                                 ; preds = %land.lhs.true148
  %81 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11531
  %arrayidx155 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v2, i64 0, i64 0, !dbg !11532
  %82 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx155, align 16, !dbg !11532
  %call156 = call zeroext i8 @BM_edge_share_face_check(%struct.BMEdge* %81, %struct.BMEdge* %82), !dbg !11533
  %conv157 = zext i8 %call156 to i32, !dbg !11533
  %cmp158 = icmp eq i32 %conv157, 0, !dbg !11534
  br i1 %cmp158, label %if.then160, label %if.end176, !dbg !11535

if.then160:                                       ; preds = %land.lhs.true154, %land.lhs.true130, %land.lhs.true106, %land.lhs.true82
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v1_other, metadata !11536, metadata !DIExpression()), !dbg !11538
  %arrayidx161 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v1, i64 0, i64 0, !dbg !11539
  %83 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx161, align 16, !dbg !11539
  %84 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11540
  %v1162 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %84, i32 0, i32 2, !dbg !11541
  %85 = load %struct.BMVert*, %struct.BMVert** %v1162, align 8, !dbg !11541
  %call163 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %83, %struct.BMVert* %85), !dbg !11542
  store %struct.BMVert* %call163, %struct.BMVert** %v1_other, align 8, !dbg !11538
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v2_other, metadata !11543, metadata !DIExpression()), !dbg !11544
  %arrayidx164 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v2, i64 0, i64 0, !dbg !11545
  %86 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx164, align 16, !dbg !11545
  %87 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11546
  %v2165 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %87, i32 0, i32 3, !dbg !11547
  %88 = load %struct.BMVert*, %struct.BMVert** %v2165, align 8, !dbg !11547
  %call166 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %86, %struct.BMVert* %88), !dbg !11548
  store %struct.BMVert* %call166, %struct.BMVert** %v2_other, align 8, !dbg !11544
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_other167, metadata !11549, metadata !DIExpression()), !dbg !11550
  %89 = load %struct.BMVert*, %struct.BMVert** %v1_other, align 8, !dbg !11551
  %90 = load %struct.BMVert*, %struct.BMVert** %v2_other, align 8, !dbg !11552
  %cmp168 = icmp ne %struct.BMVert* %89, %90, !dbg !11553
  br i1 %cmp168, label %cond.true, label %cond.false, !dbg !11554

cond.true:                                        ; preds = %if.then160
  %91 = load %struct.BMVert*, %struct.BMVert** %v1_other, align 8, !dbg !11555
  %92 = load %struct.BMVert*, %struct.BMVert** %v2_other, align 8, !dbg !11556
  %call170 = call %struct.BMEdge* @BM_edge_exists(%struct.BMVert* %91, %struct.BMVert* %92), !dbg !11557
  br label %cond.end, !dbg !11554

cond.false:                                       ; preds = %if.then160
  br label %cond.end, !dbg !11554

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.BMEdge* [ %call170, %cond.true ], [ null, %cond.false ], !dbg !11554
  store %struct.BMEdge* %cond, %struct.BMEdge** %e_other167, align 8, !dbg !11550
  %93 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11558
  %arrayidx171 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v1, i64 0, i64 0, !dbg !11559
  %94 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx171, align 16, !dbg !11559
  call void @BM_edge_select_set(%struct.BMesh* %93, %struct.BMEdge* %94, i8 zeroext 1), !dbg !11560
  %95 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11561
  %arrayidx172 = getelementptr inbounds [2 x %struct.BMEdge*], [2 x %struct.BMEdge*]* %ed_pair_v2, i64 0, i64 0, !dbg !11562
  %96 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx172, align 16, !dbg !11562
  call void @BM_edge_select_set(%struct.BMesh* %95, %struct.BMEdge* %96, i8 zeroext 1), !dbg !11563
  %97 = load %struct.BMEdge*, %struct.BMEdge** %e_other167, align 8, !dbg !11564
  %tobool173 = icmp ne %struct.BMEdge* %97, null, !dbg !11564
  br i1 %tobool173, label %if.then174, label %if.end175, !dbg !11566

if.then174:                                       ; preds = %cond.end
  %98 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11567
  %99 = load %struct.BMEdge*, %struct.BMEdge** %e_other167, align 8, !dbg !11569
  call void @BM_edge_select_set(%struct.BMesh* %98, %struct.BMEdge* %99, i8 zeroext 1), !dbg !11570
  br label %if.end175, !dbg !11571

if.end175:                                        ; preds = %if.then174, %cond.end
  %100 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11572
  %101 = bitcast %struct.BMEdge* %100 to %struct.BMElem*, !dbg !11573
  store %struct.BMElem* %101, %struct.BMElem** %retval, align 8, !dbg !11574
  br label %return, !dbg !11574

if.end176:                                        ; preds = %land.lhs.true154, %land.lhs.true148, %land.lhs.true142, %lor.lhs.false136
  br label %if.end177, !dbg !11575

if.end177:                                        ; preds = %if.end176, %for.end64
  br label %if.end178, !dbg !11576

if.end178:                                        ; preds = %if.end177, %land.lhs.true48, %land.lhs.true44, %if.else
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.end40
  store %struct.BMElem* null, %struct.BMElem** %retval, align 8, !dbg !11577
  br label %return, !dbg !11577

return:                                           ; preds = %if.end179, %if.end175, %if.end38
  %102 = load %struct.BMElem*, %struct.BMElem** %retval, align 8, !dbg !11578
  ret %struct.BMElem* %102, !dbg !11578
}

declare dso_local i32 @BMO_slot_buffer_count(%struct.BMOpSlot*, i8*) #2

declare dso_local i8* @BMO_slot_buffer_get_first(%struct.BMOpSlot*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @edbm_add_edge_face_exec__tricky_finalize_sel(%struct.BMesh* %bm, %struct.BMElem* %ele_desel, %struct.BMFace* %f) #0 !dbg !11579 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %ele_desel.addr = alloca %struct.BMElem*, align 8
  %f.addr = alloca %struct.BMFace*, align 8
  %l = alloca %struct.BMLoop*, align 8
  %l5 = alloca %struct.BMLoop*, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !11582, metadata !DIExpression()), !dbg !11583
  store %struct.BMElem* %ele_desel, %struct.BMElem** %ele_desel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMElem** %ele_desel.addr, metadata !11584, metadata !DIExpression()), !dbg !11585
  store %struct.BMFace* %f, %struct.BMFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f.addr, metadata !11586, metadata !DIExpression()), !dbg !11587
  %0 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11588
  call void @BM_select_history_clear(%struct.BMesh* %0), !dbg !11589
  %1 = load %struct.BMElem*, %struct.BMElem** %ele_desel.addr, align 8, !dbg !11590
  %head = getelementptr inbounds %struct.BMElem, %struct.BMElem* %1, i32 0, i32 0, !dbg !11592
  %htype = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 2, !dbg !11593
  %2 = load i8, i8* %htype, align 4, !dbg !11593
  %conv = zext i8 %2 to i32, !dbg !11590
  %cmp = icmp eq i32 %conv, 1, !dbg !11594
  br i1 %cmp, label %if.then, label %if.else, !dbg !11595

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l, metadata !11596, metadata !DIExpression()), !dbg !11598
  %3 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !11599
  %4 = load %struct.BMElem*, %struct.BMElem** %ele_desel.addr, align 8, !dbg !11600
  %5 = bitcast %struct.BMElem* %4 to %struct.BMVert*, !dbg !11601
  %call = call %struct.BMLoop* @BM_face_vert_share_loop(%struct.BMFace* %3, %struct.BMVert* %5), !dbg !11602
  store %struct.BMLoop* %call, %struct.BMLoop** %l, align 8, !dbg !11598
  %6 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11603
  %7 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !11604
  call void @BM_face_select_set(%struct.BMesh* %6, %struct.BMFace* %7, i8 zeroext 0), !dbg !11605
  %8 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11606
  %9 = load %struct.BMElem*, %struct.BMElem** %ele_desel.addr, align 8, !dbg !11607
  %10 = bitcast %struct.BMElem* %9 to %struct.BMVert*, !dbg !11608
  call void @BM_vert_select_set(%struct.BMesh* %8, %struct.BMVert* %10, i8 zeroext 0), !dbg !11609
  %11 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11610
  %12 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11611
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %12, i32 0, i32 6, !dbg !11612
  %13 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !11612
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %13, i32 0, i32 2, !dbg !11613
  %14 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !11613
  call void @BM_edge_select_set(%struct.BMesh* %11, %struct.BMEdge* %14, i8 zeroext 1), !dbg !11614
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11615
  %16 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !11615
  %next2 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %16, i32 0, i32 6, !dbg !11615
  %17 = load %struct.BMLoop*, %struct.BMLoop** %next2, align 8, !dbg !11615
  %e3 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %17, i32 0, i32 2, !dbg !11615
  %18 = load %struct.BMEdge*, %struct.BMEdge** %e3, align 8, !dbg !11615
  %head4 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %18, i32 0, i32 0, !dbg !11615
  call void @_bm_select_history_store(%struct.BMesh* %15, %struct.BMHeader* %head4), !dbg !11615
  br label %if.end24, !dbg !11616

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l5, metadata !11617, metadata !DIExpression()), !dbg !11619
  %19 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !11620
  %20 = load %struct.BMElem*, %struct.BMElem** %ele_desel.addr, align 8, !dbg !11621
  %21 = bitcast %struct.BMElem* %20 to %struct.BMEdge*, !dbg !11622
  %call6 = call %struct.BMLoop* @BM_face_edge_share_loop(%struct.BMFace* %19, %struct.BMEdge* %21), !dbg !11623
  store %struct.BMLoop* %call6, %struct.BMLoop** %l5, align 8, !dbg !11619
  %22 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11624
  %23 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !11625
  call void @BM_face_select_set(%struct.BMesh* %22, %struct.BMFace* %23, i8 zeroext 0), !dbg !11626
  %24 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11627
  %25 = load %struct.BMElem*, %struct.BMElem** %ele_desel.addr, align 8, !dbg !11628
  %26 = bitcast %struct.BMElem* %25 to %struct.BMEdge*, !dbg !11629
  call void @BM_edge_select_set(%struct.BMesh* %24, %struct.BMEdge* %26, i8 zeroext 0), !dbg !11630
  %27 = load %struct.BMFace*, %struct.BMFace** %f.addr, align 8, !dbg !11631
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %27, i32 0, i32 3, !dbg !11633
  %28 = load i32, i32* %len, align 8, !dbg !11633
  %cmp7 = icmp eq i32 %28, 4, !dbg !11634
  br i1 %cmp7, label %if.then9, label %if.else17, !dbg !11635

if.then9:                                         ; preds = %if.else
  %29 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11636
  %30 = load %struct.BMLoop*, %struct.BMLoop** %l5, align 8, !dbg !11638
  %next10 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %30, i32 0, i32 6, !dbg !11639
  %31 = load %struct.BMLoop*, %struct.BMLoop** %next10, align 8, !dbg !11639
  %next11 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %31, i32 0, i32 6, !dbg !11640
  %32 = load %struct.BMLoop*, %struct.BMLoop** %next11, align 8, !dbg !11640
  %e12 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %32, i32 0, i32 2, !dbg !11641
  %33 = load %struct.BMEdge*, %struct.BMEdge** %e12, align 8, !dbg !11641
  call void @BM_edge_select_set(%struct.BMesh* %29, %struct.BMEdge* %33, i8 zeroext 1), !dbg !11642
  %34 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11643
  %35 = load %struct.BMLoop*, %struct.BMLoop** %l5, align 8, !dbg !11643
  %next13 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %35, i32 0, i32 6, !dbg !11643
  %36 = load %struct.BMLoop*, %struct.BMLoop** %next13, align 8, !dbg !11643
  %next14 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %36, i32 0, i32 6, !dbg !11643
  %37 = load %struct.BMLoop*, %struct.BMLoop** %next14, align 8, !dbg !11643
  %e15 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %37, i32 0, i32 2, !dbg !11643
  %38 = load %struct.BMEdge*, %struct.BMEdge** %e15, align 8, !dbg !11643
  %head16 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %38, i32 0, i32 0, !dbg !11643
  call void @_bm_select_history_store(%struct.BMesh* %34, %struct.BMHeader* %head16), !dbg !11643
  br label %if.end, !dbg !11644

if.else17:                                        ; preds = %if.else
  %39 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11645
  %40 = load %struct.BMLoop*, %struct.BMLoop** %l5, align 8, !dbg !11647
  %next18 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %40, i32 0, i32 6, !dbg !11648
  %41 = load %struct.BMLoop*, %struct.BMLoop** %next18, align 8, !dbg !11648
  %next19 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %41, i32 0, i32 6, !dbg !11649
  %42 = load %struct.BMLoop*, %struct.BMLoop** %next19, align 8, !dbg !11649
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %42, i32 0, i32 1, !dbg !11650
  %43 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11650
  call void @BM_vert_select_set(%struct.BMesh* %39, %struct.BMVert* %43, i8 zeroext 1), !dbg !11651
  %44 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !11652
  %45 = load %struct.BMLoop*, %struct.BMLoop** %l5, align 8, !dbg !11652
  %next20 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %45, i32 0, i32 6, !dbg !11652
  %46 = load %struct.BMLoop*, %struct.BMLoop** %next20, align 8, !dbg !11652
  %next21 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %46, i32 0, i32 6, !dbg !11652
  %47 = load %struct.BMLoop*, %struct.BMLoop** %next21, align 8, !dbg !11652
  %v22 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %47, i32 0, i32 1, !dbg !11652
  %48 = load %struct.BMVert*, %struct.BMVert** %v22, align 8, !dbg !11652
  %head23 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %48, i32 0, i32 0, !dbg !11652
  call void @_bm_select_history_store(%struct.BMesh* %44, %struct.BMHeader* %head23), !dbg !11652
  br label %if.end

if.end:                                           ; preds = %if.else17, %if.then9
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then
  ret void, !dbg !11653
}

declare dso_local void @BMO_slot_buffer_hflag_enable(%struct.BMesh*, %struct.BMOpSlot*, i8*, i8 zeroext, i8 zeroext, i8 zeroext) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test_bool(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !11654 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !11657, metadata !DIExpression()), !dbg !11658
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !11659, metadata !DIExpression()), !dbg !11660
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !11661
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !11662
  %1 = load i8, i8* %hflag1, align 1, !dbg !11662
  %conv = zext i8 %1 to i32, !dbg !11661
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !11663
  %conv2 = zext i8 %2 to i32, !dbg !11663
  %and = and i32 %conv, %conv2, !dbg !11664
  %cmp = icmp ne i32 %and, 0, !dbg !11665
  %conv3 = zext i1 %cmp to i32, !dbg !11665
  %conv4 = trunc i32 %conv3 to i8, !dbg !11666
  ret i8 %conv4, !dbg !11667
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_add_edge_face_exec__vert_edge_lookup(%struct.BMVert* %v, %struct.BMEdge* %e_used, %struct.BMEdge** %e_arr, i32 %e_arr_len, i8 (%struct.BMEdge*)* %func) #0 !dbg !11668 {
entry:
  %v.addr = alloca %struct.BMVert*, align 8
  %e_used.addr = alloca %struct.BMEdge*, align 8
  %e_arr.addr = alloca %struct.BMEdge**, align 8
  %e_arr_len.addr = alloca i32, align 4
  %func.addr = alloca i8 (%struct.BMEdge*)*, align 8
  %iter = alloca %struct.BMIter, align 8
  %e_iter = alloca %struct.BMEdge*, align 8
  %i = alloca i32, align 4
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !11672, metadata !DIExpression()), !dbg !11673
  store %struct.BMEdge* %e_used, %struct.BMEdge** %e_used.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_used.addr, metadata !11674, metadata !DIExpression()), !dbg !11675
  store %struct.BMEdge** %e_arr, %struct.BMEdge*** %e_arr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge*** %e_arr.addr, metadata !11676, metadata !DIExpression()), !dbg !11677
  store i32 %e_arr_len, i32* %e_arr_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %e_arr_len.addr, metadata !11678, metadata !DIExpression()), !dbg !11679
  store i8 (%struct.BMEdge*)* %func, i8 (%struct.BMEdge*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata i8 (%struct.BMEdge*)** %func.addr, metadata !11680, metadata !DIExpression()), !dbg !11681
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11682, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_iter, metadata !11684, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11686, metadata !DIExpression()), !dbg !11687
  store i32 0, i32* %i, align 4, !dbg !11687
  %0 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !11688
  %1 = bitcast %struct.BMVert* %0 to i8*, !dbg !11688
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* null, i8 zeroext 4, i8* %1), !dbg !11688
  %2 = bitcast i8* %call to %struct.BMEdge*, !dbg !11688
  store %struct.BMEdge* %2, %struct.BMEdge** %e_iter, align 8, !dbg !11688
  br label %for.cond, !dbg !11688

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.BMEdge*, %struct.BMEdge** %e_iter, align 8, !dbg !11690
  %tobool = icmp ne %struct.BMEdge* %3, null, !dbg !11688
  br i1 %tobool, label %for.body, label %for.end, !dbg !11688

for.body:                                         ; preds = %for.cond
  %4 = load %struct.BMEdge*, %struct.BMEdge** %e_iter, align 8, !dbg !11692
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %4, i32 0, i32 0, !dbg !11692
  %call1 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !11692
  %conv = zext i8 %call1 to i32, !dbg !11692
  %cmp = icmp eq i32 %conv, 0, !dbg !11695
  br i1 %cmp, label %if.then, label %if.end16, !dbg !11696

if.then:                                          ; preds = %for.body
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e_used.addr, align 8, !dbg !11697
  %cmp3 = icmp eq %struct.BMEdge* %5, null, !dbg !11700
  br i1 %cmp3, label %if.then7, label %lor.lhs.false, !dbg !11701

lor.lhs.false:                                    ; preds = %if.then
  %6 = load %struct.BMEdge*, %struct.BMEdge** %e_used.addr, align 8, !dbg !11702
  %7 = load %struct.BMEdge*, %struct.BMEdge** %e_iter, align 8, !dbg !11703
  %cmp5 = icmp ne %struct.BMEdge* %6, %7, !dbg !11704
  br i1 %cmp5, label %if.then7, label %if.end15, !dbg !11705

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %8 = load i8 (%struct.BMEdge*)*, i8 (%struct.BMEdge*)** %func.addr, align 8, !dbg !11706
  %9 = load %struct.BMEdge*, %struct.BMEdge** %e_iter, align 8, !dbg !11709
  %call8 = call zeroext i8 %8(%struct.BMEdge* %9), !dbg !11706
  %tobool9 = icmp ne i8 %call8, 0, !dbg !11706
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !11710

if.then10:                                        ; preds = %if.then7
  %10 = load %struct.BMEdge*, %struct.BMEdge** %e_iter, align 8, !dbg !11711
  %11 = load %struct.BMEdge**, %struct.BMEdge*** %e_arr.addr, align 8, !dbg !11713
  %12 = load i32, i32* %i, align 4, !dbg !11714
  %inc = add nsw i32 %12, 1, !dbg !11714
  store i32 %inc, i32* %i, align 4, !dbg !11714
  %idxprom = sext i32 %12 to i64, !dbg !11713
  %arrayidx = getelementptr inbounds %struct.BMEdge*, %struct.BMEdge** %11, i64 %idxprom, !dbg !11713
  store %struct.BMEdge* %10, %struct.BMEdge** %arrayidx, align 8, !dbg !11715
  %13 = load i32, i32* %i, align 4, !dbg !11716
  %14 = load i32, i32* %e_arr_len.addr, align 4, !dbg !11718
  %cmp11 = icmp sge i32 %13, %14, !dbg !11719
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !11720

if.then13:                                        ; preds = %if.then10
  br label %for.end, !dbg !11721

if.end:                                           ; preds = %if.then10
  br label %if.end14, !dbg !11723

if.end14:                                         ; preds = %if.end, %if.then7
  br label %if.end15, !dbg !11724

if.end15:                                         ; preds = %if.end14, %lor.lhs.false
  br label %if.end16, !dbg !11725

if.end16:                                         ; preds = %if.end15, %for.body
  br label %for.inc, !dbg !11726

for.inc:                                          ; preds = %if.end16
  %call17 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11690
  %15 = bitcast i8* %call17 to %struct.BMEdge*, !dbg !11690
  store %struct.BMEdge* %15, %struct.BMEdge** %e_iter, align 8, !dbg !11690
  br label %for.cond, !dbg !11690, !llvm.loop !11727

for.end:                                          ; preds = %if.then13, %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !11729
  ret i32 %16, !dbg !11730
}

declare dso_local zeroext i8 @BM_edge_share_face_check(%struct.BMEdge*, %struct.BMEdge*) #2

declare dso_local %struct.BMEdge* @BM_edge_exists(%struct.BMVert*, %struct.BMVert*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %e, %struct.BMVert* %v) #0 !dbg !11731 {
entry:
  %retval = alloca %struct.BMVert*, align 8
  %e.addr = alloca %struct.BMEdge*, align 8
  %v.addr = alloca %struct.BMVert*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !11736, metadata !DIExpression()), !dbg !11737
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !11738, metadata !DIExpression()), !dbg !11739
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !11740
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 2, !dbg !11742
  %1 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !11742
  %2 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !11743
  %cmp = icmp eq %struct.BMVert* %1, %2, !dbg !11744
  br i1 %cmp, label %if.then, label %if.else, !dbg !11745

if.then:                                          ; preds = %entry
  %3 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !11746
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %3, i32 0, i32 3, !dbg !11748
  %4 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !11748
  store %struct.BMVert* %4, %struct.BMVert** %retval, align 8, !dbg !11749
  br label %return, !dbg !11749

if.else:                                          ; preds = %entry
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !11750
  %v21 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %5, i32 0, i32 3, !dbg !11752
  %6 = load %struct.BMVert*, %struct.BMVert** %v21, align 8, !dbg !11752
  %7 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !11753
  %cmp2 = icmp eq %struct.BMVert* %6, %7, !dbg !11754
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !11755

if.then3:                                         ; preds = %if.else
  %8 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !11756
  %v14 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %8, i32 0, i32 2, !dbg !11758
  %9 = load %struct.BMVert*, %struct.BMVert** %v14, align 8, !dbg !11758
  store %struct.BMVert* %9, %struct.BMVert** %retval, align 8, !dbg !11759
  br label %return, !dbg !11759

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end
  store %struct.BMVert* null, %struct.BMVert** %retval, align 8, !dbg !11760
  br label %return, !dbg !11760

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %10 = load %struct.BMVert*, %struct.BMVert** %retval, align 8, !dbg !11761
  ret %struct.BMVert* %10, !dbg !11761
}

declare dso_local void @BM_edge_select_set(%struct.BMesh*, %struct.BMEdge*, i8 zeroext) #2

declare dso_local void @BM_select_history_clear(%struct.BMesh*) #2

declare dso_local %struct.BMLoop* @BM_face_vert_share_loop(%struct.BMFace*, %struct.BMVert*) #2

declare dso_local void @BM_face_select_set(%struct.BMesh*, %struct.BMFace*, i8 zeroext) #2

declare dso_local void @BM_vert_select_set(%struct.BMesh*, %struct.BMVert*, i8 zeroext) #2

declare dso_local void @_bm_select_history_store(%struct.BMesh*, %struct.BMHeader*) #2

declare dso_local %struct.BMLoop* @BM_face_edge_share_loop(%struct.BMFace*, %struct.BMEdge*) #2

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local void @ED_uvedit_live_unwrap(%struct.Scene*, %struct.Object*) #2

declare dso_local %struct.BMOpSlot* @BMO_slot_get(%struct.BMOpSlot*, i8*) #2

declare dso_local zeroext i8 @EDBM_op_call_and_selectf(%struct.BMEditMesh*, %struct.wmOperator*, i8*, i8 zeroext, i8*, ...) #2

declare dso_local void @EDBM_select_flush(%struct.BMEditMesh*) #2

declare dso_local void @WM_cursor_wait(i8 zeroext) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !11762 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !11767, metadata !DIExpression()), !dbg !11768
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !11769
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !11770
  store i8* null, i8** %last, align 8, !dbg !11771
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !11772
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !11773
  store i8* null, i8** %first, align 8, !dbg !11774
  ret void, !dbg !11775
}

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

declare dso_local zeroext i8 @BM_edge_face_pair(%struct.BMEdge*, %struct.BMFace**, %struct.BMFace**) #2

declare dso_local void @BMO_slot_buffer_hflag_disable(%struct.BMesh*, %struct.BMOpSlot*, i8*, i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local void @EDBM_mesh_hide(%struct.BMEditMesh*, i8 zeroext) #2

declare dso_local void @EDBM_mesh_reveal(%struct.BMEditMesh*) #2

declare dso_local void @EDBM_verts_mirror_cache_begin(%struct.BMEditMesh*, i32, i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local void @EDBM_verts_mirror_apply(%struct.BMEditMesh*, i32, i32) #2

declare dso_local void @EDBM_verts_mirror_cache_end(%struct.BMEditMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_set_smooth_faces(%struct.BMEditMesh* %em, i16 signext %smooth) #0 !dbg !11776 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %smooth.addr = alloca i16, align 2
  %iter = alloca %struct.BMIter, align 8
  %efa = alloca %struct.BMFace*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !11779, metadata !DIExpression()), !dbg !11780
  store i16 %smooth, i16* %smooth.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %smooth.addr, metadata !11781, metadata !DIExpression()), !dbg !11782
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11783, metadata !DIExpression()), !dbg !11784
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !11785, metadata !DIExpression()), !dbg !11786
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11787
  %cmp = icmp eq %struct.BMEditMesh* %0, null, !dbg !11789
  br i1 %cmp, label %if.then, label %if.end, !dbg !11790

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !11791

if.end:                                           ; preds = %entry
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11792
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !11792
  %2 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11792
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %2, i8 zeroext 3, i8* null), !dbg !11792
  %3 = bitcast i8* %call to %struct.BMFace*, !dbg !11792
  store %struct.BMFace* %3, %struct.BMFace** %efa, align 8, !dbg !11792
  br label %for.cond, !dbg !11792

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11794
  %tobool = icmp ne %struct.BMFace* %4, null, !dbg !11792
  br i1 %tobool, label %for.body, label %for.end, !dbg !11792

for.body:                                         ; preds = %for.cond
  %5 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11796
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %5, i32 0, i32 0, !dbg !11796
  %call1 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !11796
  %tobool2 = icmp ne i8 %call1, 0, !dbg !11796
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !11799

if.then3:                                         ; preds = %for.body
  %6 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !11800
  %head4 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %6, i32 0, i32 0, !dbg !11800
  %7 = load i16, i16* %smooth.addr, align 2, !dbg !11800
  %conv = sext i16 %7 to i32, !dbg !11800
  call void @_bm_elem_flag_set(%struct.BMHeader* %head4, i8 zeroext 8, i32 %conv), !dbg !11800
  br label %if.end5, !dbg !11802

if.end5:                                          ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !11803

for.inc:                                          ; preds = %if.end5
  %call6 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11794
  %8 = bitcast i8* %call6 to %struct.BMFace*, !dbg !11794
  store %struct.BMFace* %8, %struct.BMFace** %efa, align 8, !dbg !11794
  br label %for.cond, !dbg !11794, !llvm.loop !11804

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !11806
}

declare dso_local %struct.View3D* @CTX_wm_view3d(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @merge_target(%struct.BMEditMesh* %em, %struct.Scene* %scene, %struct.View3D* %v3d, %struct.Object* %ob, i8 zeroext %use_cursor, i8 zeroext %use_uvmerge, %struct.wmOperator* %wmop) #0 !dbg !11807 {
entry:
  %retval = alloca i8, align 1
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %v3d.addr = alloca %struct.View3D*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %use_cursor.addr = alloca i8, align 1
  %use_uvmerge.addr = alloca i8, align 1
  %wmop.addr = alloca %struct.wmOperator*, align 8
  %iter = alloca %struct.BMIter, align 8
  %v = alloca %struct.BMVert*, align 8
  %co = alloca [3 x float], align 4
  %cent = alloca [3 x float], align 4
  %vco = alloca float*, align 8
  %fac = alloca float, align 4
  %i = alloca i32, align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !11810, metadata !DIExpression()), !dbg !11811
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11812, metadata !DIExpression()), !dbg !11813
  store %struct.View3D* %v3d, %struct.View3D** %v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d.addr, metadata !11814, metadata !DIExpression()), !dbg !11815
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11816, metadata !DIExpression()), !dbg !11817
  store i8 %use_cursor, i8* %use_cursor.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_cursor.addr, metadata !11818, metadata !DIExpression()), !dbg !11819
  store i8 %use_uvmerge, i8* %use_uvmerge.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_uvmerge.addr, metadata !11820, metadata !DIExpression()), !dbg !11821
  store %struct.wmOperator* %wmop, %struct.wmOperator** %wmop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %wmop.addr, metadata !11822, metadata !DIExpression()), !dbg !11823
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !11824, metadata !DIExpression()), !dbg !11825
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !11826, metadata !DIExpression()), !dbg !11827
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !11828, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.declare(metadata [3 x float]* %cent, metadata !11830, metadata !DIExpression()), !dbg !11831
  %0 = bitcast [3 x float]* %cent to i8*, !dbg !11831
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 12, i1 false), !dbg !11831
  call void @llvm.dbg.declare(metadata float** %vco, metadata !11832, metadata !DIExpression()), !dbg !11833
  store float* null, float** %vco, align 8, !dbg !11833
  %1 = load i8, i8* %use_cursor.addr, align 1, !dbg !11834
  %tobool = icmp ne i8 %1, 0, !dbg !11834
  br i1 %tobool, label %if.then, label %if.else, !dbg !11836

if.then:                                          ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11837
  %3 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !11839
  %call = call float* @ED_view3d_cursor3d_get(%struct.Scene* %2, %struct.View3D* %3), !dbg !11840
  store float* %call, float** %vco, align 8, !dbg !11841
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11842
  %4 = load float*, float** %vco, align 8, !dbg !11843
  call void @copy_v3_v3(float* %arraydecay, float* %4), !dbg !11844
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11845
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 50, !dbg !11846
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !11845
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11847
  call void @mul_m4_v3([4 x float]* %arraydecay1, float* %arraydecay2), !dbg !11848
  br label %if.end19, !dbg !11849

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %fac, metadata !11850, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11853, metadata !DIExpression()), !dbg !11854
  store i32 0, i32* %i, align 4, !dbg !11854
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11855
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !11855
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11855
  %call3 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %7, i8 zeroext 1, i8* null), !dbg !11855
  %8 = bitcast i8* %call3 to %struct.BMVert*, !dbg !11855
  store %struct.BMVert* %8, %struct.BMVert** %v, align 8, !dbg !11855
  br label %for.cond, !dbg !11855

for.cond:                                         ; preds = %for.inc, %if.else
  %9 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11857
  %tobool4 = icmp ne %struct.BMVert* %9, null, !dbg !11855
  br i1 %tobool4, label %for.body, label %for.end, !dbg !11855

for.body:                                         ; preds = %for.cond
  %10 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11859
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %10, i32 0, i32 0, !dbg !11859
  %call5 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !11859
  %tobool6 = icmp ne i8 %call5, 0, !dbg !11859
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !11862

if.then7:                                         ; preds = %for.body
  br label %for.inc, !dbg !11863

if.end:                                           ; preds = %for.body
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !11864
  %11 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !11865
  %co9 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %11, i32 0, i32 2, !dbg !11866
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co9, i64 0, i64 0, !dbg !11865
  call void @add_v3_v3(float* %arraydecay8, float* %arraydecay10), !dbg !11867
  %12 = load i32, i32* %i, align 4, !dbg !11868
  %inc = add nsw i32 %12, 1, !dbg !11868
  store i32 %inc, i32* %i, align 4, !dbg !11868
  br label %for.inc, !dbg !11869

for.inc:                                          ; preds = %if.end, %if.then7
  %call11 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !11857
  %13 = bitcast i8* %call11 to %struct.BMVert*, !dbg !11857
  store %struct.BMVert* %13, %struct.BMVert** %v, align 8, !dbg !11857
  br label %for.cond, !dbg !11857, !llvm.loop !11870

for.end:                                          ; preds = %for.cond
  %14 = load i32, i32* %i, align 4, !dbg !11872
  %tobool12 = icmp ne i32 %14, 0, !dbg !11872
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !11874

if.then13:                                        ; preds = %for.end
  store i8 0, i8* %retval, align 1, !dbg !11875
  br label %return, !dbg !11875

if.end14:                                         ; preds = %for.end
  %15 = load i32, i32* %i, align 4, !dbg !11876
  %conv = sitofp i32 %15 to float, !dbg !11877
  %div = fdiv float 1.000000e+00, %conv, !dbg !11878
  store float %div, float* %fac, align 4, !dbg !11879
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !11880
  %16 = load float, float* %fac, align 4, !dbg !11881
  call void @mul_v3_fl(float* %arraydecay15, float %16), !dbg !11882
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11883
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %cent, i64 0, i64 0, !dbg !11884
  call void @copy_v3_v3(float* %arraydecay16, float* %arraydecay17), !dbg !11885
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11886
  store float* %arraydecay18, float** %vco, align 8, !dbg !11887
  br label %if.end19

if.end19:                                         ; preds = %if.end14, %if.then
  %17 = load float*, float** %vco, align 8, !dbg !11888
  %tobool20 = icmp ne float* %17, null, !dbg !11888
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !11890

if.then21:                                        ; preds = %if.end19
  store i8 0, i8* %retval, align 1, !dbg !11891
  br label %return, !dbg !11891

if.end22:                                         ; preds = %if.end19
  %18 = load i8, i8* %use_uvmerge.addr, align 1, !dbg !11892
  %tobool23 = icmp ne i8 %18, 0, !dbg !11892
  br i1 %tobool23, label %if.then24, label %if.end29, !dbg !11894

if.then24:                                        ; preds = %if.end22
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11895
  %20 = load %struct.wmOperator*, %struct.wmOperator** %wmop.addr, align 8, !dbg !11898
  %call25 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %19, %struct.wmOperator* %20, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.436, i64 0, i64 0), i32 1), !dbg !11899
  %tobool26 = icmp ne i8 %call25, 0, !dbg !11899
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !11900

if.then27:                                        ; preds = %if.then24
  store i8 0, i8* %retval, align 1, !dbg !11901
  br label %return, !dbg !11901

if.end28:                                         ; preds = %if.then24
  br label %if.end29, !dbg !11902

if.end29:                                         ; preds = %if.end28, %if.end22
  %21 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11903
  %22 = load %struct.wmOperator*, %struct.wmOperator** %wmop.addr, align 8, !dbg !11905
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11906
  %call31 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %21, %struct.wmOperator* %22, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.437, i64 0, i64 0), i32 1, float* %arraydecay30), !dbg !11907
  %tobool32 = icmp ne i8 %call31, 0, !dbg !11907
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !11908

if.then33:                                        ; preds = %if.end29
  store i8 0, i8* %retval, align 1, !dbg !11909
  br label %return, !dbg !11909

if.end34:                                         ; preds = %if.end29
  store i8 1, i8* %retval, align 1, !dbg !11910
  br label %return, !dbg !11910

return:                                           ; preds = %if.end34, %if.then33, %if.then27, %if.then21, %if.then13
  %23 = load i8, i8* %retval, align 1, !dbg !11911
  ret i8 %23, !dbg !11911
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @merge_firstlast(%struct.BMEditMesh* %em, i8 zeroext %use_first, i8 zeroext %use_uvmerge, %struct.wmOperator* %wmop) #0 !dbg !11912 {
entry:
  %retval = alloca i8, align 1
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %use_first.addr = alloca i8, align 1
  %use_uvmerge.addr = alloca i8, align 1
  %wmop.addr = alloca %struct.wmOperator*, align 8
  %mergevert = alloca %struct.BMVert*, align 8
  %ese = alloca %struct.BMEditSelection*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !11915, metadata !DIExpression()), !dbg !11916
  store i8 %use_first, i8* %use_first.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_first.addr, metadata !11917, metadata !DIExpression()), !dbg !11918
  store i8 %use_uvmerge, i8* %use_uvmerge.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_uvmerge.addr, metadata !11919, metadata !DIExpression()), !dbg !11920
  store %struct.wmOperator* %wmop, %struct.wmOperator** %wmop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %wmop.addr, metadata !11921, metadata !DIExpression()), !dbg !11922
  call void @llvm.dbg.declare(metadata %struct.BMVert** %mergevert, metadata !11923, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.declare(metadata %struct.BMEditSelection** %ese, metadata !11925, metadata !DIExpression()), !dbg !11926
  %0 = load i8, i8* %use_first.addr, align 1, !dbg !11927
  %conv = zext i8 %0 to i32, !dbg !11927
  %cmp = icmp eq i32 %conv, 0, !dbg !11929
  br i1 %cmp, label %if.then, label %if.else, !dbg !11930

if.then:                                          ; preds = %entry
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11931
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 0, !dbg !11934
  %2 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !11934
  %selected = getelementptr inbounds %struct.BMesh, %struct.BMesh* %2, i32 0, i32 32, !dbg !11935
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected, i32 0, i32 1, !dbg !11936
  %3 = load i8*, i8** %last, align 8, !dbg !11936
  %tobool = icmp ne i8* %3, null, !dbg !11931
  br i1 %tobool, label %lor.lhs.false, label %if.then8, !dbg !11937

lor.lhs.false:                                    ; preds = %if.then
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11938
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !11939
  %5 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !11939
  %selected3 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 32, !dbg !11940
  %last4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected3, i32 0, i32 1, !dbg !11941
  %6 = load i8*, i8** %last4, align 8, !dbg !11941
  %7 = bitcast i8* %6 to %struct.BMEditSelection*, !dbg !11942
  %htype = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %7, i32 0, i32 3, !dbg !11943
  %8 = load i8, i8* %htype, align 8, !dbg !11943
  %conv5 = zext i8 %8 to i32, !dbg !11944
  %cmp6 = icmp ne i32 %conv5, 1, !dbg !11945
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !11946

if.then8:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %retval, align 1, !dbg !11947
  br label %return, !dbg !11947

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11948
  %bm9 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !11949
  %10 = load %struct.BMesh*, %struct.BMesh** %bm9, align 8, !dbg !11949
  %selected10 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 32, !dbg !11950
  %last11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected10, i32 0, i32 1, !dbg !11951
  %11 = load i8*, i8** %last11, align 8, !dbg !11951
  %12 = bitcast i8* %11 to %struct.BMEditSelection*, !dbg !11948
  store %struct.BMEditSelection* %12, %struct.BMEditSelection** %ese, align 8, !dbg !11952
  %13 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !11953
  %ele = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %13, i32 0, i32 2, !dbg !11954
  %14 = load %struct.BMElem*, %struct.BMElem** %ele, align 8, !dbg !11954
  %15 = bitcast %struct.BMElem* %14 to %struct.BMVert*, !dbg !11955
  store %struct.BMVert* %15, %struct.BMVert** %mergevert, align 8, !dbg !11956
  br label %if.end29, !dbg !11957

if.else:                                          ; preds = %entry
  %16 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11958
  %bm12 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %16, i32 0, i32 0, !dbg !11961
  %17 = load %struct.BMesh*, %struct.BMesh** %bm12, align 8, !dbg !11961
  %selected13 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %17, i32 0, i32 32, !dbg !11962
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected13, i32 0, i32 0, !dbg !11963
  %18 = load i8*, i8** %first, align 8, !dbg !11963
  %tobool14 = icmp ne i8* %18, null, !dbg !11958
  br i1 %tobool14, label %lor.lhs.false15, label %if.then23, !dbg !11964

lor.lhs.false15:                                  ; preds = %if.else
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11965
  %bm16 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %19, i32 0, i32 0, !dbg !11966
  %20 = load %struct.BMesh*, %struct.BMesh** %bm16, align 8, !dbg !11966
  %selected17 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %20, i32 0, i32 32, !dbg !11967
  %first18 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected17, i32 0, i32 0, !dbg !11968
  %21 = load i8*, i8** %first18, align 8, !dbg !11968
  %22 = bitcast i8* %21 to %struct.BMEditSelection*, !dbg !11969
  %htype19 = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %22, i32 0, i32 3, !dbg !11970
  %23 = load i8, i8* %htype19, align 8, !dbg !11970
  %conv20 = zext i8 %23 to i32, !dbg !11971
  %cmp21 = icmp ne i32 %conv20, 1, !dbg !11972
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !11973

if.then23:                                        ; preds = %lor.lhs.false15, %if.else
  store i8 0, i8* %retval, align 1, !dbg !11974
  br label %return, !dbg !11974

if.end24:                                         ; preds = %lor.lhs.false15
  %24 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11975
  %bm25 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %24, i32 0, i32 0, !dbg !11976
  %25 = load %struct.BMesh*, %struct.BMesh** %bm25, align 8, !dbg !11976
  %selected26 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %25, i32 0, i32 32, !dbg !11977
  %first27 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %selected26, i32 0, i32 0, !dbg !11978
  %26 = load i8*, i8** %first27, align 8, !dbg !11978
  %27 = bitcast i8* %26 to %struct.BMEditSelection*, !dbg !11975
  store %struct.BMEditSelection* %27, %struct.BMEditSelection** %ese, align 8, !dbg !11979
  %28 = load %struct.BMEditSelection*, %struct.BMEditSelection** %ese, align 8, !dbg !11980
  %ele28 = getelementptr inbounds %struct.BMEditSelection, %struct.BMEditSelection* %28, i32 0, i32 2, !dbg !11981
  %29 = load %struct.BMElem*, %struct.BMElem** %ele28, align 8, !dbg !11981
  %30 = bitcast %struct.BMElem* %29 to %struct.BMVert*, !dbg !11982
  store %struct.BMVert* %30, %struct.BMVert** %mergevert, align 8, !dbg !11983
  br label %if.end29

if.end29:                                         ; preds = %if.end24, %if.end
  %31 = load %struct.BMVert*, %struct.BMVert** %mergevert, align 8, !dbg !11984
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %31, i32 0, i32 0, !dbg !11984
  %call = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !11984
  %tobool30 = icmp ne i8 %call, 0, !dbg !11984
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !11986

if.then31:                                        ; preds = %if.end29
  store i8 0, i8* %retval, align 1, !dbg !11987
  br label %return, !dbg !11987

if.end32:                                         ; preds = %if.end29
  %32 = load i8, i8* %use_uvmerge.addr, align 1, !dbg !11988
  %tobool33 = icmp ne i8 %32, 0, !dbg !11988
  br i1 %tobool33, label %if.then34, label %if.end39, !dbg !11990

if.then34:                                        ; preds = %if.end32
  %33 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !11991
  %34 = load %struct.wmOperator*, %struct.wmOperator** %wmop.addr, align 8, !dbg !11994
  %35 = load %struct.BMVert*, %struct.BMVert** %mergevert, align 8, !dbg !11995
  %call35 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %33, %struct.wmOperator* %34, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.438, i64 0, i64 0), i32 1, %struct.BMVert* %35), !dbg !11996
  %tobool36 = icmp ne i8 %call35, 0, !dbg !11996
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !11997

if.then37:                                        ; preds = %if.then34
  store i8 0, i8* %retval, align 1, !dbg !11998
  br label %return, !dbg !11998

if.end38:                                         ; preds = %if.then34
  br label %if.end39, !dbg !11999

if.end39:                                         ; preds = %if.end38, %if.end32
  %36 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !12000
  %37 = load %struct.wmOperator*, %struct.wmOperator** %wmop.addr, align 8, !dbg !12002
  %38 = load %struct.BMVert*, %struct.BMVert** %mergevert, align 8, !dbg !12003
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %38, i32 0, i32 2, !dbg !12004
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12003
  %call40 = call zeroext i8 (%struct.BMEditMesh*, %struct.wmOperator*, i8*, ...) @EDBM_op_callf(%struct.BMEditMesh* %36, %struct.wmOperator* %37, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.437, i64 0, i64 0), i32 1, float* %arraydecay), !dbg !12005
  %tobool41 = icmp ne i8 %call40, 0, !dbg !12005
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !12006

if.then42:                                        ; preds = %if.end39
  store i8 0, i8* %retval, align 1, !dbg !12007
  br label %return, !dbg !12007

if.end43:                                         ; preds = %if.end39
  store i8 1, i8* %retval, align 1, !dbg !12008
  br label %return, !dbg !12008

return:                                           ; preds = %if.end43, %if.then42, %if.then37, %if.then31, %if.then23, %if.then8
  %39 = load i8, i8* %retval, align 1, !dbg !12009
  ret i8 %39, !dbg !12009
}

declare dso_local float* @ED_view3d_cursor3d_get(%struct.Scene*, %struct.View3D*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !12010 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12014, metadata !DIExpression()), !dbg !12015
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12016, metadata !DIExpression()), !dbg !12017
  %0 = load float*, float** %a.addr, align 8, !dbg !12018
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12018
  %1 = load float, float* %arrayidx, align 4, !dbg !12018
  %2 = load float*, float** %r.addr, align 8, !dbg !12019
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12019
  store float %1, float* %arrayidx1, align 4, !dbg !12020
  %3 = load float*, float** %a.addr, align 8, !dbg !12021
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !12021
  %4 = load float, float* %arrayidx2, align 4, !dbg !12021
  %5 = load float*, float** %r.addr, align 8, !dbg !12022
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !12022
  store float %4, float* %arrayidx3, align 4, !dbg !12023
  %6 = load float*, float** %a.addr, align 8, !dbg !12024
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !12024
  %7 = load float, float* %arrayidx4, align 4, !dbg !12024
  %8 = load float*, float** %r.addr, align 8, !dbg !12025
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !12025
  store float %7, float* %arrayidx5, align 4, !dbg !12026
  ret void, !dbg !12027
}

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !12028 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12029, metadata !DIExpression()), !dbg !12030
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12031, metadata !DIExpression()), !dbg !12032
  %0 = load float*, float** %a.addr, align 8, !dbg !12033
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12033
  %1 = load float, float* %arrayidx, align 4, !dbg !12033
  %2 = load float*, float** %r.addr, align 8, !dbg !12034
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12034
  %3 = load float, float* %arrayidx1, align 4, !dbg !12035
  %add = fadd float %3, %1, !dbg !12035
  store float %add, float* %arrayidx1, align 4, !dbg !12035
  %4 = load float*, float** %a.addr, align 8, !dbg !12036
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !12036
  %5 = load float, float* %arrayidx2, align 4, !dbg !12036
  %6 = load float*, float** %r.addr, align 8, !dbg !12037
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !12037
  %7 = load float, float* %arrayidx3, align 4, !dbg !12038
  %add4 = fadd float %7, %5, !dbg !12038
  store float %add4, float* %arrayidx3, align 4, !dbg !12038
  %8 = load float*, float** %a.addr, align 8, !dbg !12039
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !12039
  %9 = load float, float* %arrayidx5, align 4, !dbg !12039
  %10 = load float*, float** %r.addr, align 8, !dbg !12040
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !12040
  %11 = load float, float* %arrayidx6, align 4, !dbg !12041
  %add7 = fadd float %11, %9, !dbg !12041
  store float %add7, float* %arrayidx6, align 4, !dbg !12041
  ret void, !dbg !12042
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !12043 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12046, metadata !DIExpression()), !dbg !12047
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !12048, metadata !DIExpression()), !dbg !12049
  %0 = load float, float* %f.addr, align 4, !dbg !12050
  %1 = load float*, float** %r.addr, align 8, !dbg !12051
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !12051
  %2 = load float, float* %arrayidx, align 4, !dbg !12052
  %mul = fmul float %2, %0, !dbg !12052
  store float %mul, float* %arrayidx, align 4, !dbg !12052
  %3 = load float, float* %f.addr, align 4, !dbg !12053
  %4 = load float*, float** %r.addr, align 8, !dbg !12054
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !12054
  %5 = load float, float* %arrayidx1, align 4, !dbg !12055
  %mul2 = fmul float %5, %3, !dbg !12055
  store float %mul2, float* %arrayidx1, align 4, !dbg !12055
  %6 = load float, float* %f.addr, align 4, !dbg !12056
  %7 = load float*, float** %r.addr, align 8, !dbg !12057
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !12057
  %8 = load float, float* %arrayidx3, align 4, !dbg !12058
  %mul4 = fmul float %8, %6, !dbg !12058
  store float %mul4, float* %arrayidx3, align 4, !dbg !12058
  ret void, !dbg !12059
}

declare dso_local void @RNA_enum_items_add_value(%struct.EnumPropertyItem**, i32*, %struct.EnumPropertyItem*, i32) #2

declare dso_local void @RNA_enum_item_end(%struct.EnumPropertyItem**, i32*) #2

declare dso_local void @BM_mesh_elem_hflag_enable_test(%struct.BMesh*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local void @BMO_op_finish(%struct.BMesh*, %struct.BMOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @shape_propagate(%struct.BMEditMesh* %em, %struct.wmOperator* %op) #0 !dbg !12060 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %co = alloca float*, align 8
  %i = alloca i32, align 4
  %totshape = alloca i32, align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !12063, metadata !DIExpression()), !dbg !12064
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12065, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !12067, metadata !DIExpression()), !dbg !12068
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !12069, metadata !DIExpression()), !dbg !12070
  store %struct.BMVert* null, %struct.BMVert** %eve, align 8, !dbg !12070
  call void @llvm.dbg.declare(metadata float** %co, metadata !12071, metadata !DIExpression()), !dbg !12072
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12073, metadata !DIExpression()), !dbg !12074
  call void @llvm.dbg.declare(metadata i32* %totshape, metadata !12075, metadata !DIExpression()), !dbg !12076
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !12077
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !12078
  %1 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !12078
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %1, i32 0, i32 24, !dbg !12079
  %call = call i32 @CustomData_number_of_layers(%struct.CustomData* %vdata, i32 28), !dbg !12080
  store i32 %call, i32* %totshape, align 4, !dbg !12076
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !12081
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !12083
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !12083
  %vdata2 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 24, !dbg !12084
  %call3 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %vdata2, i32 28), !dbg !12085
  %tobool = icmp ne i8 %call3, 0, !dbg !12085
  br i1 %tobool, label %if.end, label %if.then, !dbg !12086

if.then:                                          ; preds = %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12087
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 8, !dbg !12089
  %5 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !12089
  call void @BKE_report(%struct.ReportList* %5, i32 32, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.454, i64 0, i64 0)), !dbg !12090
  br label %for.end24, !dbg !12091

if.end:                                           ; preds = %entry
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !12092
  %bm4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !12092
  %7 = load %struct.BMesh*, %struct.BMesh** %bm4, align 8, !dbg !12092
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %7, i8 zeroext 1, i8* null), !dbg !12092
  %8 = bitcast i8* %call5 to %struct.BMVert*, !dbg !12092
  store %struct.BMVert* %8, %struct.BMVert** %eve, align 8, !dbg !12092
  br label %for.cond, !dbg !12092

for.cond:                                         ; preds = %for.inc22, %if.end
  %9 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !12094
  %tobool6 = icmp ne %struct.BMVert* %9, null, !dbg !12092
  br i1 %tobool6, label %for.body, label %for.end24, !dbg !12092

for.body:                                         ; preds = %for.cond
  %10 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !12096
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %10, i32 0, i32 0, !dbg !12096
  %call7 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !12096
  %tobool8 = icmp ne i8 %call7, 0, !dbg !12096
  br i1 %tobool8, label %lor.lhs.false, label %if.then12, !dbg !12099

lor.lhs.false:                                    ; preds = %for.body
  %11 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !12100
  %head9 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %11, i32 0, i32 0, !dbg !12100
  %call10 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head9, i8 zeroext 2), !dbg !12100
  %conv = zext i8 %call10 to i32, !dbg !12100
  %tobool11 = icmp ne i32 %conv, 0, !dbg !12100
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !12101

if.then12:                                        ; preds = %lor.lhs.false, %for.body
  br label %for.inc22, !dbg !12102

if.end13:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !12103
  br label %for.cond14, !dbg !12105

for.cond14:                                       ; preds = %for.inc, %if.end13
  %12 = load i32, i32* %i, align 4, !dbg !12106
  %13 = load i32, i32* %totshape, align 4, !dbg !12108
  %cmp = icmp slt i32 %12, %13, !dbg !12109
  br i1 %cmp, label %for.body16, label %for.end, !dbg !12110

for.body16:                                       ; preds = %for.cond14
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !12111
  %bm17 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !12113
  %15 = load %struct.BMesh*, %struct.BMesh** %bm17, align 8, !dbg !12113
  %vdata18 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 24, !dbg !12114
  %16 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !12115
  %head19 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %16, i32 0, i32 0, !dbg !12116
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head19, i32 0, i32 0, !dbg !12117
  %17 = load i8*, i8** %data, align 8, !dbg !12117
  %18 = load i32, i32* %i, align 4, !dbg !12118
  %call20 = call i8* @CustomData_bmesh_get_n(%struct.CustomData* %vdata18, i8* %17, i32 28, i32 %18), !dbg !12119
  %19 = bitcast i8* %call20 to float*, !dbg !12119
  store float* %19, float** %co, align 8, !dbg !12120
  %20 = load float*, float** %co, align 8, !dbg !12121
  %21 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !12122
  %co21 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 2, !dbg !12123
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co21, i64 0, i64 0, !dbg !12122
  call void @copy_v3_v3(float* %20, float* %arraydecay), !dbg !12124
  br label %for.inc, !dbg !12125

for.inc:                                          ; preds = %for.body16
  %22 = load i32, i32* %i, align 4, !dbg !12126
  %inc = add nsw i32 %22, 1, !dbg !12126
  store i32 %inc, i32* %i, align 4, !dbg !12126
  br label %for.cond14, !dbg !12127, !llvm.loop !12128

for.end:                                          ; preds = %for.cond14
  br label %for.inc22, !dbg !12130

for.inc22:                                        ; preds = %for.end, %if.then12
  %call23 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !12094
  %23 = bitcast i8* %call23 to %struct.BMVert*, !dbg !12094
  store %struct.BMVert* %23, %struct.BMVert** %eve, align 8, !dbg !12094
  br label %for.cond, !dbg !12094, !llvm.loop !12131

for.end24:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !12133
}

declare dso_local i32 @CustomData_number_of_layers(%struct.CustomData*, i32) #2

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #2

declare dso_local i8* @CustomData_bmesh_get_n(%struct.CustomData*, i8*, i32, i32) #2

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !12134 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12137, metadata !DIExpression()), !dbg !12138
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12139, metadata !DIExpression()), !dbg !12140
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !12141, metadata !DIExpression()), !dbg !12142
  %0 = load float*, float** %a.addr, align 8, !dbg !12143
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12143
  %1 = load float, float* %arrayidx, align 4, !dbg !12143
  %2 = load float*, float** %b.addr, align 8, !dbg !12144
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12144
  %3 = load float, float* %arrayidx1, align 4, !dbg !12144
  %sub = fsub float %1, %3, !dbg !12145
  %4 = load float*, float** %r.addr, align 8, !dbg !12146
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !12146
  store float %sub, float* %arrayidx2, align 4, !dbg !12147
  %5 = load float*, float** %a.addr, align 8, !dbg !12148
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !12148
  %6 = load float, float* %arrayidx3, align 4, !dbg !12148
  %7 = load float*, float** %b.addr, align 8, !dbg !12149
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !12149
  %8 = load float, float* %arrayidx4, align 4, !dbg !12149
  %sub5 = fsub float %6, %8, !dbg !12150
  %9 = load float*, float** %r.addr, align 8, !dbg !12151
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !12151
  store float %sub5, float* %arrayidx6, align 4, !dbg !12152
  %10 = load float*, float** %a.addr, align 8, !dbg !12153
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !12153
  %11 = load float, float* %arrayidx7, align 4, !dbg !12153
  %12 = load float*, float** %b.addr, align 8, !dbg !12154
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !12154
  %13 = load float, float* %arrayidx8, align 4, !dbg !12154
  %sub9 = fsub float %11, %13, !dbg !12155
  %14 = load float*, float** %r.addr, align 8, !dbg !12156
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !12156
  store float %sub9, float* %arrayidx10, align 4, !dbg !12157
  ret void, !dbg !12158
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !12159 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12162, metadata !DIExpression()), !dbg !12163
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12164, metadata !DIExpression()), !dbg !12165
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !12166, metadata !DIExpression()), !dbg !12167
  %0 = load float*, float** %a.addr, align 8, !dbg !12168
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12168
  %1 = load float, float* %arrayidx, align 4, !dbg !12168
  %2 = load float, float* %f.addr, align 4, !dbg !12169
  %mul = fmul float %1, %2, !dbg !12170
  %3 = load float*, float** %r.addr, align 8, !dbg !12171
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !12171
  %4 = load float, float* %arrayidx1, align 4, !dbg !12172
  %add = fadd float %4, %mul, !dbg !12172
  store float %add, float* %arrayidx1, align 4, !dbg !12172
  %5 = load float*, float** %a.addr, align 8, !dbg !12173
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !12173
  %6 = load float, float* %arrayidx2, align 4, !dbg !12173
  %7 = load float, float* %f.addr, align 4, !dbg !12174
  %mul3 = fmul float %6, %7, !dbg !12175
  %8 = load float*, float** %r.addr, align 8, !dbg !12176
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !12176
  %9 = load float, float* %arrayidx4, align 4, !dbg !12177
  %add5 = fadd float %9, %mul3, !dbg !12177
  store float %add5, float* %arrayidx4, align 4, !dbg !12177
  %10 = load float*, float** %a.addr, align 8, !dbg !12178
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !12178
  %11 = load float, float* %arrayidx6, align 4, !dbg !12178
  %12 = load float, float* %f.addr, align 4, !dbg !12179
  %mul7 = fmul float %11, %12, !dbg !12180
  %13 = load float*, float** %r.addr, align 8, !dbg !12181
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !12181
  %14 = load float, float* %arrayidx8, align 4, !dbg !12182
  %add9 = fadd float %14, %mul7, !dbg !12182
  store float %add9, float* %arrayidx8, align 4, !dbg !12182
  ret void, !dbg !12183
}

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #2

declare dso_local void @RNA_pointer_create(%struct.ID*, %struct.StructRNA*, i8*, %struct.PointerRNA*) #2

declare dso_local void @RNA_id_pointer_create(%struct.ID*, %struct.PointerRNA*) #2

declare dso_local void @uiItemPointerR(%struct.uiLayout*, %struct.PointerRNA*, i8*, %struct.PointerRNA*, i8*, i8*, i32) #2

declare dso_local void @uiItemR(%struct.uiLayout*, %struct.PointerRNA*, i8*, i32, i8*, i32) #2

declare dso_local void @RNA_enum_item_add(%struct.EnumPropertyItem**, i32*, %struct.EnumPropertyItem*) #2

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local i32 @RNA_collection_length(%struct.PointerRNA*, i8*) #2

declare dso_local void @RNA_collection_begin(%struct.PointerRNA*, i8*, %struct.CollectionPropertyIterator*) #2

declare dso_local void @RNA_float_get_array(%struct.PointerRNA*, i8*, float*) #2

declare dso_local void @RNA_property_collection_next(%struct.CollectionPropertyIterator*) #2

declare dso_local void @RNA_property_collection_end(%struct.CollectionPropertyIterator*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_fl(float* %r, float %f) #0 !dbg !12184 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12185, metadata !DIExpression()), !dbg !12186
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !12187, metadata !DIExpression()), !dbg !12188
  %0 = load float, float* %f.addr, align 4, !dbg !12189
  %1 = load float*, float** %r.addr, align 8, !dbg !12190
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !12190
  store float %0, float* %arrayidx, align 4, !dbg !12191
  %2 = load float, float* %f.addr, align 4, !dbg !12192
  %3 = load float*, float** %r.addr, align 8, !dbg !12193
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 1, !dbg !12193
  store float %2, float* %arrayidx1, align 4, !dbg !12194
  ret void, !dbg !12195
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_index_set(%struct.BMHeader* %head, i32 %index) #0 !dbg !12196 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %index.addr = alloca i32, align 4
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !12199, metadata !DIExpression()), !dbg !12200
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12201, metadata !DIExpression()), !dbg !12202
  %0 = load i32, i32* %index.addr, align 4, !dbg !12203
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !12204
  %index1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 1, !dbg !12205
  store i32 %0, i32* %index1, align 8, !dbg !12206
  ret void, !dbg !12207
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_bm_elem_index_get(%struct.BMHeader* %head) #0 !dbg !12208 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !12211, metadata !DIExpression()), !dbg !12212
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !12213
  %index = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 1, !dbg !12214
  %1 = load i32, i32* %index, align 8, !dbg !12214
  ret i32 %1, !dbg !12215
}

; Function Attrs: noinline nounwind uwtable
define internal float @bm_edge_seg_isect(float* %sco_a, float* %sco_b, [2 x float]* %mouse_path, i32 %len, i8 zeroext %mode, i32* %isected) #0 !dbg !12216 {
entry:
  %retval = alloca float, align 4
  %sco_a.addr = alloca float*, align 8
  %sco_b.addr = alloca float*, align 8
  %mouse_path.addr = alloca [2 x float]*, align 8
  %len.addr = alloca i32, align 4
  %mode.addr = alloca i8, align 1
  %isected.addr = alloca i32*, align 8
  %x11 = alloca float, align 4
  %y11 = alloca float, align 4
  %x12 = alloca float, align 4
  %y12 = alloca float, align 4
  %x2max = alloca float, align 4
  %x2min = alloca float, align 4
  %y2max = alloca float, align 4
  %y2min = alloca float, align 4
  %dist = alloca float, align 4
  %lastdist = alloca float, align 4
  %xdiff2 = alloca float, align 4
  %xdiff1 = alloca float, align 4
  %m1 = alloca float, align 4
  %b1 = alloca float, align 4
  %m2 = alloca float, align 4
  %b2 = alloca float, align 4
  %x21 = alloca float, align 4
  %x22 = alloca float, align 4
  %y21 = alloca float, align 4
  %y22 = alloca float, align 4
  %xi = alloca float, align 4
  %yi = alloca float, align 4
  %x1min = alloca float, align 4
  %x1max = alloca float, align 4
  %y1max = alloca float, align 4
  %y1min = alloca float, align 4
  %perc = alloca float, align 4
  %threshold = alloca float, align 4
  %i = alloca i32, align 4
  store float* %sco_a, float** %sco_a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sco_a.addr, metadata !12219, metadata !DIExpression()), !dbg !12220
  store float* %sco_b, float** %sco_b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sco_b.addr, metadata !12221, metadata !DIExpression()), !dbg !12222
  store [2 x float]* %mouse_path, [2 x float]** %mouse_path.addr, align 8
  call void @llvm.dbg.declare(metadata [2 x float]** %mouse_path.addr, metadata !12223, metadata !DIExpression()), !dbg !12224
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !12225, metadata !DIExpression()), !dbg !12226
  store i8 %mode, i8* %mode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mode.addr, metadata !12227, metadata !DIExpression()), !dbg !12228
  store i32* %isected, i32** %isected.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %isected.addr, metadata !12229, metadata !DIExpression()), !dbg !12230
  call void @llvm.dbg.declare(metadata float* %x11, metadata !12231, metadata !DIExpression()), !dbg !12232
  call void @llvm.dbg.declare(metadata float* %y11, metadata !12233, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.declare(metadata float* %x12, metadata !12235, metadata !DIExpression()), !dbg !12236
  store float 0.000000e+00, float* %x12, align 4, !dbg !12236
  call void @llvm.dbg.declare(metadata float* %y12, metadata !12237, metadata !DIExpression()), !dbg !12238
  store float 0.000000e+00, float* %y12, align 4, !dbg !12238
  call void @llvm.dbg.declare(metadata float* %x2max, metadata !12239, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.declare(metadata float* %x2min, metadata !12241, metadata !DIExpression()), !dbg !12242
  call void @llvm.dbg.declare(metadata float* %y2max, metadata !12243, metadata !DIExpression()), !dbg !12244
  call void @llvm.dbg.declare(metadata float* %y2min, metadata !12245, metadata !DIExpression()), !dbg !12246
  call void @llvm.dbg.declare(metadata float* %dist, metadata !12247, metadata !DIExpression()), !dbg !12248
  call void @llvm.dbg.declare(metadata float* %lastdist, metadata !12249, metadata !DIExpression()), !dbg !12250
  store float 0.000000e+00, float* %lastdist, align 4, !dbg !12250
  call void @llvm.dbg.declare(metadata float* %xdiff2, metadata !12251, metadata !DIExpression()), !dbg !12252
  call void @llvm.dbg.declare(metadata float* %xdiff1, metadata !12253, metadata !DIExpression()), !dbg !12254
  call void @llvm.dbg.declare(metadata float* %m1, metadata !12255, metadata !DIExpression()), !dbg !12256
  call void @llvm.dbg.declare(metadata float* %b1, metadata !12257, metadata !DIExpression()), !dbg !12258
  call void @llvm.dbg.declare(metadata float* %m2, metadata !12259, metadata !DIExpression()), !dbg !12260
  call void @llvm.dbg.declare(metadata float* %b2, metadata !12261, metadata !DIExpression()), !dbg !12262
  call void @llvm.dbg.declare(metadata float* %x21, metadata !12263, metadata !DIExpression()), !dbg !12264
  call void @llvm.dbg.declare(metadata float* %x22, metadata !12265, metadata !DIExpression()), !dbg !12266
  call void @llvm.dbg.declare(metadata float* %y21, metadata !12267, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.declare(metadata float* %y22, metadata !12269, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.declare(metadata float* %xi, metadata !12271, metadata !DIExpression()), !dbg !12272
  call void @llvm.dbg.declare(metadata float* %yi, metadata !12273, metadata !DIExpression()), !dbg !12274
  call void @llvm.dbg.declare(metadata float* %x1min, metadata !12275, metadata !DIExpression()), !dbg !12276
  call void @llvm.dbg.declare(metadata float* %x1max, metadata !12277, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.declare(metadata float* %y1max, metadata !12279, metadata !DIExpression()), !dbg !12280
  call void @llvm.dbg.declare(metadata float* %y1min, metadata !12281, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.declare(metadata float* %perc, metadata !12283, metadata !DIExpression()), !dbg !12284
  store float 0.000000e+00, float* %perc, align 4, !dbg !12284
  call void @llvm.dbg.declare(metadata float* %threshold, metadata !12285, metadata !DIExpression()), !dbg !12286
  store float 0.000000e+00, float* %threshold, align 4, !dbg !12286
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12287, metadata !DIExpression()), !dbg !12288
  %0 = load float*, float** %sco_a.addr, align 8, !dbg !12289
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12289
  %1 = load float, float* %arrayidx, align 4, !dbg !12289
  store float %1, float* %x21, align 4, !dbg !12290
  %2 = load float*, float** %sco_a.addr, align 8, !dbg !12291
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !12291
  %3 = load float, float* %arrayidx1, align 4, !dbg !12291
  store float %3, float* %y21, align 4, !dbg !12292
  %4 = load float*, float** %sco_b.addr, align 8, !dbg !12293
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !12293
  %5 = load float, float* %arrayidx2, align 4, !dbg !12293
  store float %5, float* %x22, align 4, !dbg !12294
  %6 = load float*, float** %sco_b.addr, align 8, !dbg !12295
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !12295
  %7 = load float, float* %arrayidx3, align 4, !dbg !12295
  store float %7, float* %y22, align 4, !dbg !12296
  %8 = load float, float* %x22, align 4, !dbg !12297
  %9 = load float, float* %x21, align 4, !dbg !12298
  %sub = fsub float %8, %9, !dbg !12299
  store float %sub, float* %xdiff2, align 4, !dbg !12300
  %10 = load float, float* %xdiff2, align 4, !dbg !12301
  %tobool = fcmp une float %10, 0.000000e+00, !dbg !12301
  br i1 %tobool, label %if.then, label %if.else, !dbg !12303

if.then:                                          ; preds = %entry
  %11 = load float, float* %y22, align 4, !dbg !12304
  %12 = load float, float* %y21, align 4, !dbg !12306
  %sub4 = fsub float %11, %12, !dbg !12307
  %13 = load float, float* %xdiff2, align 4, !dbg !12308
  %div = fdiv float %sub4, %13, !dbg !12309
  store float %div, float* %m2, align 4, !dbg !12310
  %14 = load float, float* %x22, align 4, !dbg !12311
  %15 = load float, float* %y21, align 4, !dbg !12312
  %mul = fmul float %14, %15, !dbg !12313
  %16 = load float, float* %x21, align 4, !dbg !12314
  %17 = load float, float* %y22, align 4, !dbg !12315
  %mul5 = fmul float %16, %17, !dbg !12316
  %sub6 = fsub float %mul, %mul5, !dbg !12317
  %18 = load float, float* %xdiff2, align 4, !dbg !12318
  %div7 = fdiv float %sub6, %18, !dbg !12319
  store float %div7, float* %b2, align 4, !dbg !12320
  br label %if.end, !dbg !12321

if.else:                                          ; preds = %entry
  store float 1.000000e+05, float* %m2, align 4, !dbg !12322
  %19 = load float, float* %x22, align 4, !dbg !12324
  store float %19, float* %b2, align 4, !dbg !12325
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load i32*, i32** %isected.addr, align 8, !dbg !12326
  store i32 0, i32* %20, align 4, !dbg !12327
  %21 = load i8, i8* %mode.addr, align 1, !dbg !12328
  %conv = zext i8 %21 to i32, !dbg !12328
  %cmp = icmp ne i32 %conv, 3, !dbg !12330
  br i1 %cmp, label %if.then9, label %if.end53, !dbg !12331

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !12332
  br label %for.cond, !dbg !12335

for.cond:                                         ; preds = %for.inc, %if.then9
  %22 = load i32, i32* %i, align 4, !dbg !12336
  %23 = load i32, i32* %len.addr, align 4, !dbg !12338
  %cmp10 = icmp slt i32 %22, %23, !dbg !12339
  br i1 %cmp10, label %for.body, label %for.end, !dbg !12340

for.body:                                         ; preds = %for.cond
  %24 = load i32, i32* %i, align 4, !dbg !12341
  %cmp12 = icmp sgt i32 %24, 0, !dbg !12344
  br i1 %cmp12, label %if.then14, label %if.else15, !dbg !12345

if.then14:                                        ; preds = %for.body
  %25 = load float, float* %x12, align 4, !dbg !12346
  store float %25, float* %x11, align 4, !dbg !12348
  %26 = load float, float* %y12, align 4, !dbg !12349
  store float %26, float* %y11, align 4, !dbg !12350
  br label %if.end21, !dbg !12351

if.else15:                                        ; preds = %for.body
  %27 = load [2 x float]*, [2 x float]** %mouse_path.addr, align 8, !dbg !12352
  %28 = load i32, i32* %i, align 4, !dbg !12354
  %idxprom = sext i32 %28 to i64, !dbg !12352
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %27, i64 %idxprom, !dbg !12352
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx16, i64 0, i64 0, !dbg !12352
  %29 = load float, float* %arrayidx17, align 4, !dbg !12352
  store float %29, float* %x11, align 4, !dbg !12355
  %30 = load [2 x float]*, [2 x float]** %mouse_path.addr, align 8, !dbg !12356
  %31 = load i32, i32* %i, align 4, !dbg !12357
  %idxprom18 = sext i32 %31 to i64, !dbg !12356
  %arrayidx19 = getelementptr inbounds [2 x float], [2 x float]* %30, i64 %idxprom18, !dbg !12356
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx19, i64 0, i64 1, !dbg !12356
  %32 = load float, float* %arrayidx20, align 4, !dbg !12356
  store float %32, float* %y11, align 4, !dbg !12358
  br label %if.end21

if.end21:                                         ; preds = %if.else15, %if.then14
  %33 = load [2 x float]*, [2 x float]** %mouse_path.addr, align 8, !dbg !12359
  %34 = load i32, i32* %i, align 4, !dbg !12360
  %idxprom22 = sext i32 %34 to i64, !dbg !12359
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %33, i64 %idxprom22, !dbg !12359
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx23, i64 0, i64 0, !dbg !12359
  %35 = load float, float* %arrayidx24, align 4, !dbg !12359
  store float %35, float* %x12, align 4, !dbg !12361
  %36 = load [2 x float]*, [2 x float]** %mouse_path.addr, align 8, !dbg !12362
  %37 = load i32, i32* %i, align 4, !dbg !12363
  %idxprom25 = sext i32 %37 to i64, !dbg !12362
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %36, i64 %idxprom25, !dbg !12362
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx26, i64 0, i64 1, !dbg !12362
  %38 = load float, float* %arrayidx27, align 4, !dbg !12362
  store float %38, float* %y12, align 4, !dbg !12364
  %39 = load float, float* %x11, align 4, !dbg !12365
  %40 = load float, float* %x21, align 4, !dbg !12367
  %cmp28 = fcmp oeq float %39, %40, !dbg !12368
  br i1 %cmp28, label %land.lhs.true, label %lor.lhs.false, !dbg !12369

land.lhs.true:                                    ; preds = %if.end21
  %41 = load float, float* %y11, align 4, !dbg !12370
  %42 = load float, float* %y21, align 4, !dbg !12371
  %cmp30 = fcmp oeq float %41, %42, !dbg !12372
  br i1 %cmp30, label %if.then37, label %lor.lhs.false, !dbg !12373

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end21
  %43 = load float, float* %x12, align 4, !dbg !12374
  %44 = load float, float* %x21, align 4, !dbg !12375
  %cmp32 = fcmp oeq float %43, %44, !dbg !12376
  br i1 %cmp32, label %land.lhs.true34, label %if.else38, !dbg !12377

land.lhs.true34:                                  ; preds = %lor.lhs.false
  %45 = load float, float* %y12, align 4, !dbg !12378
  %46 = load float, float* %y21, align 4, !dbg !12379
  %cmp35 = fcmp oeq float %45, %46, !dbg !12380
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !12381

if.then37:                                        ; preds = %land.lhs.true34, %land.lhs.true
  store float 0.000000e+00, float* %perc, align 4, !dbg !12382
  %47 = load i32*, i32** %isected.addr, align 8, !dbg !12384
  store i32 1, i32* %47, align 4, !dbg !12385
  %48 = load float, float* %perc, align 4, !dbg !12386
  store float %48, float* %retval, align 4, !dbg !12387
  br label %return, !dbg !12387

if.else38:                                        ; preds = %land.lhs.true34, %lor.lhs.false
  %49 = load float, float* %x11, align 4, !dbg !12388
  %50 = load float, float* %x22, align 4, !dbg !12390
  %cmp39 = fcmp oeq float %49, %50, !dbg !12391
  br i1 %cmp39, label %land.lhs.true41, label %lor.lhs.false44, !dbg !12392

land.lhs.true41:                                  ; preds = %if.else38
  %51 = load float, float* %y11, align 4, !dbg !12393
  %52 = load float, float* %y22, align 4, !dbg !12394
  %cmp42 = fcmp oeq float %51, %52, !dbg !12395
  br i1 %cmp42, label %if.then50, label %lor.lhs.false44, !dbg !12396

lor.lhs.false44:                                  ; preds = %land.lhs.true41, %if.else38
  %53 = load float, float* %x12, align 4, !dbg !12397
  %54 = load float, float* %x22, align 4, !dbg !12398
  %cmp45 = fcmp oeq float %53, %54, !dbg !12399
  br i1 %cmp45, label %land.lhs.true47, label %if.end51, !dbg !12400

land.lhs.true47:                                  ; preds = %lor.lhs.false44
  %55 = load float, float* %y12, align 4, !dbg !12401
  %56 = load float, float* %y22, align 4, !dbg !12402
  %cmp48 = fcmp oeq float %55, %56, !dbg !12403
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !12404

if.then50:                                        ; preds = %land.lhs.true47, %land.lhs.true41
  store float 0.000000e+00, float* %perc, align 4, !dbg !12405
  %57 = load i32*, i32** %isected.addr, align 8, !dbg !12407
  store i32 2, i32* %57, align 4, !dbg !12408
  %58 = load float, float* %perc, align 4, !dbg !12409
  store float %58, float* %retval, align 4, !dbg !12410
  br label %return, !dbg !12410

if.end51:                                         ; preds = %land.lhs.true47, %lor.lhs.false44
  br label %if.end52

if.end52:                                         ; preds = %if.end51
  br label %for.inc, !dbg !12411

for.inc:                                          ; preds = %if.end52
  %59 = load i32, i32* %i, align 4, !dbg !12412
  %inc = add nsw i32 %59, 1, !dbg !12412
  store i32 %inc, i32* %i, align 4, !dbg !12412
  br label %for.cond, !dbg !12413, !llvm.loop !12414

for.end:                                          ; preds = %for.cond
  br label %if.end53, !dbg !12416

if.end53:                                         ; preds = %for.end, %if.end
  store i32 0, i32* %i, align 4, !dbg !12417
  br label %for.cond54, !dbg !12419

for.cond54:                                       ; preds = %for.inc217, %if.end53
  %60 = load i32, i32* %i, align 4, !dbg !12420
  %61 = load i32, i32* %len.addr, align 4, !dbg !12422
  %cmp55 = icmp slt i32 %60, %61, !dbg !12423
  br i1 %cmp55, label %for.body57, label %for.end219, !dbg !12424

for.body57:                                       ; preds = %for.cond54
  %62 = load i32, i32* %i, align 4, !dbg !12425
  %cmp58 = icmp sgt i32 %62, 0, !dbg !12428
  br i1 %cmp58, label %if.then60, label %if.else61, !dbg !12429

if.then60:                                        ; preds = %for.body57
  %63 = load float, float* %x12, align 4, !dbg !12430
  store float %63, float* %x11, align 4, !dbg !12432
  %64 = load float, float* %y12, align 4, !dbg !12433
  store float %64, float* %y11, align 4, !dbg !12434
  br label %if.end68, !dbg !12435

if.else61:                                        ; preds = %for.body57
  %65 = load [2 x float]*, [2 x float]** %mouse_path.addr, align 8, !dbg !12436
  %66 = load i32, i32* %i, align 4, !dbg !12438
  %idxprom62 = sext i32 %66 to i64, !dbg !12436
  %arrayidx63 = getelementptr inbounds [2 x float], [2 x float]* %65, i64 %idxprom62, !dbg !12436
  %arrayidx64 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx63, i64 0, i64 0, !dbg !12436
  %67 = load float, float* %arrayidx64, align 4, !dbg !12436
  store float %67, float* %x11, align 4, !dbg !12439
  %68 = load [2 x float]*, [2 x float]** %mouse_path.addr, align 8, !dbg !12440
  %69 = load i32, i32* %i, align 4, !dbg !12441
  %idxprom65 = sext i32 %69 to i64, !dbg !12440
  %arrayidx66 = getelementptr inbounds [2 x float], [2 x float]* %68, i64 %idxprom65, !dbg !12440
  %arrayidx67 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx66, i64 0, i64 1, !dbg !12440
  %70 = load float, float* %arrayidx67, align 4, !dbg !12440
  store float %70, float* %y11, align 4, !dbg !12442
  br label %if.end68

if.end68:                                         ; preds = %if.else61, %if.then60
  %71 = load [2 x float]*, [2 x float]** %mouse_path.addr, align 8, !dbg !12443
  %72 = load i32, i32* %i, align 4, !dbg !12444
  %idxprom69 = sext i32 %72 to i64, !dbg !12443
  %arrayidx70 = getelementptr inbounds [2 x float], [2 x float]* %71, i64 %idxprom69, !dbg !12443
  %arrayidx71 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx70, i64 0, i64 0, !dbg !12443
  %73 = load float, float* %arrayidx71, align 4, !dbg !12443
  store float %73, float* %x12, align 4, !dbg !12445
  %74 = load [2 x float]*, [2 x float]** %mouse_path.addr, align 8, !dbg !12446
  %75 = load i32, i32* %i, align 4, !dbg !12447
  %idxprom72 = sext i32 %75 to i64, !dbg !12446
  %arrayidx73 = getelementptr inbounds [2 x float], [2 x float]* %74, i64 %idxprom72, !dbg !12446
  %arrayidx74 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx73, i64 0, i64 1, !dbg !12446
  %76 = load float, float* %arrayidx74, align 4, !dbg !12446
  store float %76, float* %y12, align 4, !dbg !12448
  %77 = load float, float* %m2, align 4, !dbg !12449
  %cmp75 = fcmp une float %77, 1.000000e+05, !dbg !12451
  br i1 %cmp75, label %if.then77, label %if.else81, !dbg !12452

if.then77:                                        ; preds = %if.end68
  %78 = load float, float* %y12, align 4, !dbg !12453
  %79 = load float, float* %m2, align 4, !dbg !12454
  %80 = load float, float* %x12, align 4, !dbg !12455
  %mul78 = fmul float %79, %80, !dbg !12456
  %sub79 = fsub float %78, %mul78, !dbg !12457
  %81 = load float, float* %b2, align 4, !dbg !12458
  %sub80 = fsub float %sub79, %81, !dbg !12459
  store float %sub80, float* %dist, align 4, !dbg !12460
  br label %if.end83, !dbg !12461

if.else81:                                        ; preds = %if.end68
  %82 = load float, float* %x22, align 4, !dbg !12462
  %83 = load float, float* %x12, align 4, !dbg !12463
  %sub82 = fsub float %82, %83, !dbg !12464
  store float %sub82, float* %dist, align 4, !dbg !12465
  br label %if.end83

if.end83:                                         ; preds = %if.else81, %if.then77
  %84 = load i32, i32* %i, align 4, !dbg !12466
  %cmp84 = icmp eq i32 %84, 0, !dbg !12468
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !12469

if.then86:                                        ; preds = %if.end83
  %85 = load float, float* %dist, align 4, !dbg !12470
  store float %85, float* %lastdist, align 4, !dbg !12471
  br label %if.end87, !dbg !12472

if.end87:                                         ; preds = %if.then86, %if.end83
  %86 = load float, float* %lastdist, align 4, !dbg !12473
  %87 = load float, float* %dist, align 4, !dbg !12475
  %mul88 = fmul float %86, %87, !dbg !12476
  %cmp89 = fcmp ole float %mul88, 0.000000e+00, !dbg !12477
  br i1 %cmp89, label %if.then91, label %if.end216, !dbg !12478

if.then91:                                        ; preds = %if.end87
  %88 = load float, float* %x12, align 4, !dbg !12479
  %89 = load float, float* %x11, align 4, !dbg !12481
  %sub92 = fsub float %88, %89, !dbg !12482
  store float %sub92, float* %xdiff1, align 4, !dbg !12483
  %90 = load float, float* %xdiff1, align 4, !dbg !12484
  %tobool93 = fcmp une float %90, 0.000000e+00, !dbg !12484
  br i1 %tobool93, label %if.then94, label %if.else101, !dbg !12486

if.then94:                                        ; preds = %if.then91
  %91 = load float, float* %y12, align 4, !dbg !12487
  %92 = load float, float* %y11, align 4, !dbg !12489
  %sub95 = fsub float %91, %92, !dbg !12490
  %93 = load float, float* %xdiff1, align 4, !dbg !12491
  %div96 = fdiv float %sub95, %93, !dbg !12492
  store float %div96, float* %m1, align 4, !dbg !12493
  %94 = load float, float* %x12, align 4, !dbg !12494
  %95 = load float, float* %y11, align 4, !dbg !12495
  %mul97 = fmul float %94, %95, !dbg !12496
  %96 = load float, float* %x11, align 4, !dbg !12497
  %97 = load float, float* %y12, align 4, !dbg !12498
  %mul98 = fmul float %96, %97, !dbg !12499
  %sub99 = fsub float %mul97, %mul98, !dbg !12500
  %98 = load float, float* %xdiff1, align 4, !dbg !12501
  %div100 = fdiv float %sub99, %98, !dbg !12502
  store float %div100, float* %b1, align 4, !dbg !12503
  br label %if.end102, !dbg !12504

if.else101:                                       ; preds = %if.then91
  store float 1.000000e+05, float* %m1, align 4, !dbg !12505
  %99 = load float, float* %x12, align 4, !dbg !12507
  store float %99, float* %b1, align 4, !dbg !12508
  br label %if.end102

if.end102:                                        ; preds = %if.else101, %if.then94
  %100 = load float, float* %x21, align 4, !dbg !12509
  %101 = load float, float* %x22, align 4, !dbg !12510
  %call = call float @max_ff(float %100, float %101), !dbg !12511
  %add = fadd float %call, 0x3F50624DE0000000, !dbg !12512
  store float %add, float* %x2max, align 4, !dbg !12513
  %102 = load float, float* %x21, align 4, !dbg !12514
  %103 = load float, float* %x22, align 4, !dbg !12515
  %call103 = call float @min_ff(float %102, float %103), !dbg !12516
  %sub104 = fsub float %call103, 0x3F50624DE0000000, !dbg !12517
  store float %sub104, float* %x2min, align 4, !dbg !12518
  %104 = load float, float* %y21, align 4, !dbg !12519
  %105 = load float, float* %y22, align 4, !dbg !12520
  %call105 = call float @max_ff(float %104, float %105), !dbg !12521
  %add106 = fadd float %call105, 0x3F50624DE0000000, !dbg !12522
  store float %add106, float* %y2max, align 4, !dbg !12523
  %106 = load float, float* %y21, align 4, !dbg !12524
  %107 = load float, float* %y22, align 4, !dbg !12525
  %call107 = call float @min_ff(float %106, float %107), !dbg !12526
  %sub108 = fsub float %call107, 0x3F50624DE0000000, !dbg !12527
  store float %sub108, float* %y2min, align 4, !dbg !12528
  %108 = load float, float* %m1, align 4, !dbg !12529
  %109 = load float, float* %m2, align 4, !dbg !12531
  %cmp109 = fcmp oeq float %108, %109, !dbg !12532
  br i1 %cmp109, label %if.then111, label %if.else124, !dbg !12533

if.then111:                                       ; preds = %if.end102
  %110 = load float, float* %x11, align 4, !dbg !12534
  %111 = load float, float* %x12, align 4, !dbg !12536
  %call112 = call float @max_ff(float %110, float %111), !dbg !12537
  store float %call112, float* %x1max, align 4, !dbg !12538
  %112 = load float, float* %x11, align 4, !dbg !12539
  %113 = load float, float* %x12, align 4, !dbg !12540
  %call113 = call float @min_ff(float %112, float %113), !dbg !12541
  store float %call113, float* %x1min, align 4, !dbg !12542
  %114 = load float, float* %x2max, align 4, !dbg !12543
  %115 = load float, float* %x1max, align 4, !dbg !12544
  %call114 = call float @min_ff(float %114, float %115), !dbg !12545
  %116 = load float, float* %x2min, align 4, !dbg !12546
  %117 = load float, float* %x1min, align 4, !dbg !12547
  %call115 = call float @max_ff(float %116, float %117), !dbg !12548
  %add116 = fadd float %call114, %call115, !dbg !12549
  %div117 = fdiv float %add116, 2.000000e+00, !dbg !12550
  store float %div117, float* %xi, align 4, !dbg !12551
  %118 = load float, float* %y11, align 4, !dbg !12552
  %119 = load float, float* %y12, align 4, !dbg !12553
  %call118 = call float @max_ff(float %118, float %119), !dbg !12554
  store float %call118, float* %y1max, align 4, !dbg !12555
  %120 = load float, float* %y11, align 4, !dbg !12556
  %121 = load float, float* %y12, align 4, !dbg !12557
  %call119 = call float @min_ff(float %120, float %121), !dbg !12558
  store float %call119, float* %y1min, align 4, !dbg !12559
  %122 = load float, float* %y2max, align 4, !dbg !12560
  %123 = load float, float* %y1max, align 4, !dbg !12561
  %call120 = call float @min_ff(float %122, float %123), !dbg !12562
  %124 = load float, float* %y2min, align 4, !dbg !12563
  %125 = load float, float* %y1min, align 4, !dbg !12564
  %call121 = call float @max_ff(float %124, float %125), !dbg !12565
  %add122 = fadd float %call120, %call121, !dbg !12566
  %div123 = fdiv float %add122, 2.000000e+00, !dbg !12567
  store float %div123, float* %yi, align 4, !dbg !12568
  br label %if.end147, !dbg !12569

if.else124:                                       ; preds = %if.end102
  %126 = load float, float* %m2, align 4, !dbg !12570
  %cmp125 = fcmp oeq float %126, 1.000000e+05, !dbg !12572
  br i1 %cmp125, label %if.then127, label %if.else130, !dbg !12573

if.then127:                                       ; preds = %if.else124
  %127 = load float, float* %x22, align 4, !dbg !12574
  store float %127, float* %xi, align 4, !dbg !12576
  %128 = load float, float* %m1, align 4, !dbg !12577
  %129 = load float, float* %x22, align 4, !dbg !12578
  %mul128 = fmul float %128, %129, !dbg !12579
  %130 = load float, float* %b1, align 4, !dbg !12580
  %add129 = fadd float %mul128, %130, !dbg !12581
  store float %add129, float* %yi, align 4, !dbg !12582
  br label %if.end146, !dbg !12583

if.else130:                                       ; preds = %if.else124
  %131 = load float, float* %m1, align 4, !dbg !12584
  %cmp131 = fcmp oeq float %131, 1.000000e+05, !dbg !12586
  br i1 %cmp131, label %if.then133, label %if.else136, !dbg !12587

if.then133:                                       ; preds = %if.else130
  %132 = load float, float* %x12, align 4, !dbg !12588
  store float %132, float* %xi, align 4, !dbg !12590
  %133 = load float, float* %m2, align 4, !dbg !12591
  %134 = load float, float* %x12, align 4, !dbg !12592
  %mul134 = fmul float %133, %134, !dbg !12593
  %135 = load float, float* %b2, align 4, !dbg !12594
  %add135 = fadd float %mul134, %135, !dbg !12595
  store float %add135, float* %yi, align 4, !dbg !12596
  br label %if.end145, !dbg !12597

if.else136:                                       ; preds = %if.else130
  %136 = load float, float* %b1, align 4, !dbg !12598
  %137 = load float, float* %b2, align 4, !dbg !12600
  %sub137 = fsub float %136, %137, !dbg !12601
  %138 = load float, float* %m2, align 4, !dbg !12602
  %139 = load float, float* %m1, align 4, !dbg !12603
  %sub138 = fsub float %138, %139, !dbg !12604
  %div139 = fdiv float %sub137, %sub138, !dbg !12605
  store float %div139, float* %xi, align 4, !dbg !12606
  %140 = load float, float* %b1, align 4, !dbg !12607
  %141 = load float, float* %m2, align 4, !dbg !12608
  %mul140 = fmul float %140, %141, !dbg !12609
  %142 = load float, float* %m1, align 4, !dbg !12610
  %143 = load float, float* %b2, align 4, !dbg !12611
  %mul141 = fmul float %142, %143, !dbg !12612
  %sub142 = fsub float %mul140, %mul141, !dbg !12613
  %144 = load float, float* %m2, align 4, !dbg !12614
  %145 = load float, float* %m1, align 4, !dbg !12615
  %sub143 = fsub float %144, %145, !dbg !12616
  %div144 = fdiv float %sub142, %sub143, !dbg !12617
  store float %div144, float* %yi, align 4, !dbg !12618
  br label %if.end145

if.end145:                                        ; preds = %if.else136, %if.then133
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then127
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then111
  %146 = load float, float* %xi, align 4, !dbg !12619
  %147 = load float, float* %x2min, align 4, !dbg !12621
  %cmp148 = fcmp oge float %146, %147, !dbg !12622
  br i1 %cmp148, label %land.lhs.true150, label %if.end215, !dbg !12623

land.lhs.true150:                                 ; preds = %if.end147
  %148 = load float, float* %xi, align 4, !dbg !12624
  %149 = load float, float* %x2max, align 4, !dbg !12625
  %cmp151 = fcmp ole float %148, %149, !dbg !12626
  br i1 %cmp151, label %land.lhs.true153, label %if.end215, !dbg !12627

land.lhs.true153:                                 ; preds = %land.lhs.true150
  %150 = load float, float* %yi, align 4, !dbg !12628
  %151 = load float, float* %y2max, align 4, !dbg !12629
  %cmp154 = fcmp ole float %150, %151, !dbg !12630
  br i1 %cmp154, label %land.lhs.true156, label %if.end215, !dbg !12631

land.lhs.true156:                                 ; preds = %land.lhs.true153
  %152 = load float, float* %yi, align 4, !dbg !12632
  %153 = load float, float* %y2min, align 4, !dbg !12633
  %cmp157 = fcmp oge float %152, %153, !dbg !12634
  br i1 %cmp157, label %if.then159, label %if.end215, !dbg !12635

if.then159:                                       ; preds = %land.lhs.true156
  %154 = load i8, i8* %mode.addr, align 1, !dbg !12636
  %conv160 = zext i8 %154 to i32, !dbg !12636
  %cmp161 = icmp ne i32 %conv160, 3, !dbg !12639
  br i1 %cmp161, label %if.then163, label %if.end200, !dbg !12640

if.then163:                                       ; preds = %if.then159
  %155 = load float, float* %xi, align 4, !dbg !12641
  %156 = load float, float* %x21, align 4, !dbg !12644
  %157 = load float, float* %threshold, align 4, !dbg !12645
  %add164 = fadd float %156, %157, !dbg !12646
  %cmp165 = fcmp ole float %155, %add164, !dbg !12647
  br i1 %cmp165, label %land.lhs.true167, label %if.end181, !dbg !12648

land.lhs.true167:                                 ; preds = %if.then163
  %158 = load float, float* %xi, align 4, !dbg !12649
  %159 = load float, float* %x21, align 4, !dbg !12650
  %160 = load float, float* %threshold, align 4, !dbg !12651
  %sub168 = fsub float %159, %160, !dbg !12652
  %cmp169 = fcmp oge float %158, %sub168, !dbg !12653
  br i1 %cmp169, label %if.then171, label %if.end181, !dbg !12654

if.then171:                                       ; preds = %land.lhs.true167
  %161 = load float, float* %yi, align 4, !dbg !12655
  %162 = load float, float* %y21, align 4, !dbg !12658
  %163 = load float, float* %threshold, align 4, !dbg !12659
  %add172 = fadd float %162, %163, !dbg !12660
  %cmp173 = fcmp ole float %161, %add172, !dbg !12661
  br i1 %cmp173, label %land.lhs.true175, label %if.end180, !dbg !12662

land.lhs.true175:                                 ; preds = %if.then171
  %164 = load float, float* %yi, align 4, !dbg !12663
  %165 = load float, float* %y21, align 4, !dbg !12664
  %166 = load float, float* %threshold, align 4, !dbg !12665
  %sub176 = fsub float %165, %166, !dbg !12666
  %cmp177 = fcmp oge float %164, %sub176, !dbg !12667
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !12668

if.then179:                                       ; preds = %land.lhs.true175
  %167 = load i32*, i32** %isected.addr, align 8, !dbg !12669
  store i32 1, i32* %167, align 4, !dbg !12671
  store float 0.000000e+00, float* %perc, align 4, !dbg !12672
  br label %for.end219, !dbg !12673

if.end180:                                        ; preds = %land.lhs.true175, %if.then171
  br label %if.end181, !dbg !12674

if.end181:                                        ; preds = %if.end180, %land.lhs.true167, %if.then163
  %168 = load float, float* %xi, align 4, !dbg !12675
  %169 = load float, float* %x22, align 4, !dbg !12677
  %170 = load float, float* %threshold, align 4, !dbg !12678
  %add182 = fadd float %169, %170, !dbg !12679
  %cmp183 = fcmp ole float %168, %add182, !dbg !12680
  br i1 %cmp183, label %land.lhs.true185, label %if.end199, !dbg !12681

land.lhs.true185:                                 ; preds = %if.end181
  %171 = load float, float* %xi, align 4, !dbg !12682
  %172 = load float, float* %x22, align 4, !dbg !12683
  %173 = load float, float* %threshold, align 4, !dbg !12684
  %sub186 = fsub float %172, %173, !dbg !12685
  %cmp187 = fcmp oge float %171, %sub186, !dbg !12686
  br i1 %cmp187, label %if.then189, label %if.end199, !dbg !12687

if.then189:                                       ; preds = %land.lhs.true185
  %174 = load float, float* %yi, align 4, !dbg !12688
  %175 = load float, float* %y22, align 4, !dbg !12691
  %176 = load float, float* %threshold, align 4, !dbg !12692
  %add190 = fadd float %175, %176, !dbg !12693
  %cmp191 = fcmp ole float %174, %add190, !dbg !12694
  br i1 %cmp191, label %land.lhs.true193, label %if.end198, !dbg !12695

land.lhs.true193:                                 ; preds = %if.then189
  %177 = load float, float* %yi, align 4, !dbg !12696
  %178 = load float, float* %y22, align 4, !dbg !12697
  %179 = load float, float* %threshold, align 4, !dbg !12698
  %sub194 = fsub float %178, %179, !dbg !12699
  %cmp195 = fcmp oge float %177, %sub194, !dbg !12700
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !12701

if.then197:                                       ; preds = %land.lhs.true193
  %180 = load i32*, i32** %isected.addr, align 8, !dbg !12702
  store i32 2, i32* %180, align 4, !dbg !12704
  store float 0.000000e+00, float* %perc, align 4, !dbg !12705
  br label %for.end219, !dbg !12706

if.end198:                                        ; preds = %land.lhs.true193, %if.then189
  br label %if.end199, !dbg !12707

if.end199:                                        ; preds = %if.end198, %land.lhs.true185, %if.end181
  br label %if.end200, !dbg !12708

if.end200:                                        ; preds = %if.end199, %if.then159
  %181 = load float, float* %m2, align 4, !dbg !12709
  %cmp201 = fcmp ole float %181, 1.000000e+00, !dbg !12711
  br i1 %cmp201, label %land.lhs.true203, label %if.else210, !dbg !12712

land.lhs.true203:                                 ; preds = %if.end200
  %182 = load float, float* %m2, align 4, !dbg !12713
  %cmp204 = fcmp oge float %182, -1.000000e+00, !dbg !12714
  br i1 %cmp204, label %if.then206, label %if.else210, !dbg !12715

if.then206:                                       ; preds = %land.lhs.true203
  %183 = load float, float* %xi, align 4, !dbg !12716
  %184 = load float, float* %x21, align 4, !dbg !12717
  %sub207 = fsub float %183, %184, !dbg !12718
  %185 = load float, float* %x22, align 4, !dbg !12719
  %186 = load float, float* %x21, align 4, !dbg !12720
  %sub208 = fsub float %185, %186, !dbg !12721
  %div209 = fdiv float %sub207, %sub208, !dbg !12722
  store float %div209, float* %perc, align 4, !dbg !12723
  br label %if.end214, !dbg !12724

if.else210:                                       ; preds = %land.lhs.true203, %if.end200
  %187 = load float, float* %yi, align 4, !dbg !12725
  %188 = load float, float* %y21, align 4, !dbg !12726
  %sub211 = fsub float %187, %188, !dbg !12727
  %189 = load float, float* %y22, align 4, !dbg !12728
  %190 = load float, float* %y21, align 4, !dbg !12729
  %sub212 = fsub float %189, %190, !dbg !12730
  %div213 = fdiv float %sub211, %sub212, !dbg !12731
  store float %div213, float* %perc, align 4, !dbg !12732
  br label %if.end214

if.end214:                                        ; preds = %if.else210, %if.then206
  br label %for.end219, !dbg !12733

if.end215:                                        ; preds = %land.lhs.true156, %land.lhs.true153, %land.lhs.true150, %if.end147
  br label %if.end216, !dbg !12734

if.end216:                                        ; preds = %if.end215, %if.end87
  %191 = load float, float* %dist, align 4, !dbg !12735
  store float %191, float* %lastdist, align 4, !dbg !12736
  br label %for.inc217, !dbg !12737

for.inc217:                                       ; preds = %if.end216
  %192 = load i32, i32* %i, align 4, !dbg !12738
  %inc218 = add nsw i32 %192, 1, !dbg !12738
  store i32 %inc218, i32* %i, align 4, !dbg !12738
  br label %for.cond54, !dbg !12739, !llvm.loop !12740

for.end219:                                       ; preds = %if.end214, %if.then197, %if.then179, %for.cond54
  %193 = load float, float* %perc, align 4, !dbg !12742
  store float %193, float* %retval, align 4, !dbg !12743
  br label %return, !dbg !12743

return:                                           ; preds = %for.end219, %if.then50, %if.then37
  %194 = load float, float* %retval, align 4, !dbg !12744
  ret float %194, !dbg !12744
}

; Function Attrs: noinline nounwind uwtable
define internal void @BMO_slot_map_float_insert(%struct.BMOperator* %op, %struct.BMOpSlot* %slot, i8* %element, float %val) #0 !dbg !12745 {
entry:
  %op.addr = alloca %struct.BMOperator*, align 8
  %slot.addr = alloca %struct.BMOpSlot*, align 8
  %element.addr = alloca i8*, align 8
  %val.addr = alloca float, align 4
  %t = alloca %union.anon.2, align 8
  store %struct.BMOperator* %op, %struct.BMOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMOperator** %op.addr, metadata !12750, metadata !DIExpression()), !dbg !12751
  store %struct.BMOpSlot* %slot, %struct.BMOpSlot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMOpSlot** %slot.addr, metadata !12752, metadata !DIExpression()), !dbg !12753
  store i8* %element, i8** %element.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %element.addr, metadata !12754, metadata !DIExpression()), !dbg !12755
  store float %val, float* %val.addr, align 4
  call void @llvm.dbg.declare(metadata float* %val.addr, metadata !12756, metadata !DIExpression()), !dbg !12757
  call void @llvm.dbg.declare(metadata %union.anon.2* %t, metadata !12758, metadata !DIExpression()), !dbg !12763
  %0 = bitcast %union.anon.2* %t to i8*, !dbg !12763
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 8, i1 false), !dbg !12763
  %1 = load %struct.BMOperator*, %struct.BMOperator** %op.addr, align 8, !dbg !12764
  %2 = load %struct.BMOpSlot*, %struct.BMOpSlot** %slot.addr, align 8, !dbg !12765
  %3 = load i8*, i8** %element.addr, align 8, !dbg !12766
  %4 = load float, float* %val.addr, align 4, !dbg !12767
  %val1 = bitcast %union.anon.2* %t to float*, !dbg !12768
  store float %4, float* %val1, align 8, !dbg !12769
  %ptr = bitcast %union.anon.2* %t to i8**, !dbg !12770
  %5 = load i8*, i8** %ptr, align 8, !dbg !12770
  call void @BMO_slot_map_insert(%struct.BMOperator* %1, %struct.BMOpSlot* %2, i8* %3, i8* %5), !dbg !12771
  ret void, !dbg !12772
}

; Function Attrs: noinline nounwind uwtable
define internal void @_bmo_elem_flag_set(%struct.BMesh* %bm, %struct.BMFlagLayer* %oflags, i16 signext %oflag, i32 %val) #0 !dbg !12773 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %oflags.addr = alloca %struct.BMFlagLayer*, align 8
  %oflag.addr = alloca i16, align 2
  %val.addr = alloca i32, align 4
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !12778, metadata !DIExpression()), !dbg !12779
  store %struct.BMFlagLayer* %oflags, %struct.BMFlagLayer** %oflags.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMFlagLayer** %oflags.addr, metadata !12780, metadata !DIExpression()), !dbg !12781
  store i16 %oflag, i16* %oflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %oflag.addr, metadata !12782, metadata !DIExpression()), !dbg !12783
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !12784, metadata !DIExpression()), !dbg !12785
  %0 = load i32, i32* %val.addr, align 4, !dbg !12786
  %tobool = icmp ne i32 %0, 0, !dbg !12786
  br i1 %tobool, label %if.then, label %if.else, !dbg !12788

if.then:                                          ; preds = %entry
  %1 = load i16, i16* %oflag.addr, align 2, !dbg !12789
  %conv = sext i16 %1 to i32, !dbg !12789
  %2 = load %struct.BMFlagLayer*, %struct.BMFlagLayer** %oflags.addr, align 8, !dbg !12790
  %3 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !12791
  %stackdepth = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 22, !dbg !12792
  %4 = load i32, i32* %stackdepth, align 8, !dbg !12792
  %sub = sub nsw i32 %4, 1, !dbg !12793
  %idxprom = sext i32 %sub to i64, !dbg !12790
  %arrayidx = getelementptr inbounds %struct.BMFlagLayer, %struct.BMFlagLayer* %2, i64 %idxprom, !dbg !12790
  %f = getelementptr inbounds %struct.BMFlagLayer, %struct.BMFlagLayer* %arrayidx, i32 0, i32 0, !dbg !12794
  %5 = load i16, i16* %f, align 2, !dbg !12795
  %conv1 = sext i16 %5 to i32, !dbg !12795
  %or = or i32 %conv1, %conv, !dbg !12795
  %conv2 = trunc i32 %or to i16, !dbg !12795
  store i16 %conv2, i16* %f, align 2, !dbg !12795
  br label %if.end, !dbg !12790

if.else:                                          ; preds = %entry
  %6 = load i16, i16* %oflag.addr, align 2, !dbg !12796
  %conv3 = sext i16 %6 to i32, !dbg !12796
  %neg = xor i32 %conv3, -1, !dbg !12797
  %conv4 = trunc i32 %neg to i16, !dbg !12798
  %conv5 = sext i16 %conv4 to i32, !dbg !12798
  %7 = load %struct.BMFlagLayer*, %struct.BMFlagLayer** %oflags.addr, align 8, !dbg !12799
  %8 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !12800
  %stackdepth6 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %8, i32 0, i32 22, !dbg !12801
  %9 = load i32, i32* %stackdepth6, align 8, !dbg !12801
  %sub7 = sub nsw i32 %9, 1, !dbg !12802
  %idxprom8 = sext i32 %sub7 to i64, !dbg !12799
  %arrayidx9 = getelementptr inbounds %struct.BMFlagLayer, %struct.BMFlagLayer* %7, i64 %idxprom8, !dbg !12799
  %f10 = getelementptr inbounds %struct.BMFlagLayer, %struct.BMFlagLayer* %arrayidx9, i32 0, i32 0, !dbg !12803
  %10 = load i16, i16* %f10, align 2, !dbg !12804
  %conv11 = sext i16 %10 to i32, !dbg !12804
  %and = and i32 %conv11, %conv5, !dbg !12804
  %conv12 = trunc i32 %and to i16, !dbg !12804
  store i16 %conv12, i16* %f10, align 2, !dbg !12804
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !12805
}

declare dso_local void @BMO_slot_buffer_from_enabled_flag(%struct.BMesh*, %struct.BMOperator*, %struct.BMOpSlot*, i8*, i8 zeroext, i16 signext) #2

declare dso_local void @BMO_slot_int_set(%struct.BMOpSlot*, i8*, i32) #2

declare dso_local void @BMO_slot_bool_set(%struct.BMOpSlot*, i8*, i8 zeroext) #2

declare dso_local void @BMO_slot_float_set(%struct.BMOpSlot*, i8*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !12806 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !12810, metadata !DIExpression()), !dbg !12811
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !12812, metadata !DIExpression()), !dbg !12813
  %0 = load float, float* %a.addr, align 4, !dbg !12814
  %1 = load float, float* %b.addr, align 4, !dbg !12815
  %cmp = fcmp ogt float %0, %1, !dbg !12816
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12817

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !12818
  br label %cond.end, !dbg !12817

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !12819
  br label %cond.end, !dbg !12817

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !12817
  ret float %cond, !dbg !12820
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !12821 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !12822, metadata !DIExpression()), !dbg !12823
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !12824, metadata !DIExpression()), !dbg !12825
  %0 = load float, float* %a.addr, align 4, !dbg !12826
  %1 = load float, float* %b.addr, align 4, !dbg !12827
  %cmp = fcmp olt float %0, %1, !dbg !12828
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12829

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !12830
  br label %cond.end, !dbg !12829

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !12831
  br label %cond.end, !dbg !12829

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !12829
  ret float %cond, !dbg !12832
}

declare dso_local void @BMO_slot_map_insert(%struct.BMOperator*, %struct.BMOpSlot*, i8*, i8*) #2

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #2

declare dso_local %struct.Base* @CTX_data_active_base(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mesh_separate_selected(%struct.Main* %bmain, %struct.Scene* %scene, %struct.Base* %base_old, %struct.BMesh* %bm_old) #0 !dbg !12833 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %base_old.addr = alloca %struct.Base*, align 8
  %bm_old.addr = alloca %struct.BMesh*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !12836, metadata !DIExpression()), !dbg !12837
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12838, metadata !DIExpression()), !dbg !12839
  store %struct.Base* %base_old, %struct.Base** %base_old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Base** %base_old.addr, metadata !12840, metadata !DIExpression()), !dbg !12841
  store %struct.BMesh* %bm_old, %struct.BMesh** %bm_old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm_old.addr, metadata !12842, metadata !DIExpression()), !dbg !12843
  %0 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !12844
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %0, i8 zeroext 11, i8 zeroext 16, i8 zeroext 0), !dbg !12845
  %1 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !12846
  call void @BM_mesh_elem_hflag_enable_test(%struct.BMesh* %1, i8 zeroext 11, i8 zeroext 16, i8 zeroext 1, i8 zeroext 0, i8 zeroext 1), !dbg !12847
  %2 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !12848
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12849
  %4 = load %struct.Base*, %struct.Base** %base_old.addr, align 8, !dbg !12850
  %5 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !12851
  %call = call %struct.Base* @mesh_separate_tagged(%struct.Main* %2, %struct.Scene* %3, %struct.Base* %4, %struct.BMesh* %5), !dbg !12852
  %cmp = icmp ne %struct.Base* %call, null, !dbg !12853
  %conv = zext i1 %cmp to i32, !dbg !12853
  %conv1 = trunc i32 %conv to i8, !dbg !12854
  ret i8 %conv1, !dbg !12855
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mesh_separate_material(%struct.Main* %bmain, %struct.Scene* %scene, %struct.Base* %base_old, %struct.BMesh* %bm_old) #0 !dbg !12856 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %base_old.addr = alloca %struct.Base*, align 8
  %bm_old.addr = alloca %struct.BMesh*, align 8
  %f_cmp = alloca %struct.BMFace*, align 8
  %f = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  %result = alloca i8, align 1
  %base_new = alloca %struct.Base*, align 8
  %mat_nr = alloca i16, align 2
  %tot = alloca i32, align 4
  %l_iter = alloca %struct.BMLoop*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !12857, metadata !DIExpression()), !dbg !12858
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12859, metadata !DIExpression()), !dbg !12860
  store %struct.Base* %base_old, %struct.Base** %base_old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Base** %base_old.addr, metadata !12861, metadata !DIExpression()), !dbg !12862
  store %struct.BMesh* %bm_old, %struct.BMesh** %bm_old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm_old.addr, metadata !12863, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f_cmp, metadata !12865, metadata !DIExpression()), !dbg !12866
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !12867, metadata !DIExpression()), !dbg !12868
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !12869, metadata !DIExpression()), !dbg !12870
  call void @llvm.dbg.declare(metadata i8* %result, metadata !12871, metadata !DIExpression()), !dbg !12872
  store i8 0, i8* %result, align 1, !dbg !12872
  br label %while.cond, !dbg !12873

while.cond:                                       ; preds = %if.end29, %entry
  %0 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !12874
  %call = call i8* @BM_iter_at_index(%struct.BMesh* %0, i8 zeroext 3, i8* null, i32 0), !dbg !12875
  %1 = bitcast i8* %call to %struct.BMFace*, !dbg !12875
  store %struct.BMFace* %1, %struct.BMFace** %f_cmp, align 8, !dbg !12876
  %tobool = icmp ne %struct.BMFace* %1, null, !dbg !12873
  br i1 %tobool, label %while.body, label %while.end, !dbg !12873

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.Base** %base_new, metadata !12877, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.declare(metadata i16* %mat_nr, metadata !12880, metadata !DIExpression()), !dbg !12881
  %2 = load %struct.BMFace*, %struct.BMFace** %f_cmp, align 8, !dbg !12882
  %mat_nr1 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %2, i32 0, i32 5, !dbg !12883
  %3 = load i16, i16* %mat_nr1, align 8, !dbg !12883
  store i16 %3, i16* %mat_nr, align 2, !dbg !12881
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !12884, metadata !DIExpression()), !dbg !12885
  store i32 0, i32* %tot, align 4, !dbg !12885
  %4 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !12886
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %4, i8 zeroext 11, i8 zeroext 16, i8 zeroext 0), !dbg !12887
  %5 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !12888
  %call2 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %5, i8 zeroext 3, i8* null), !dbg !12888
  %6 = bitcast i8* %call2 to %struct.BMFace*, !dbg !12888
  store %struct.BMFace* %6, %struct.BMFace** %f, align 8, !dbg !12888
  br label %for.cond, !dbg !12888

for.cond:                                         ; preds = %for.inc, %while.body
  %7 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !12890
  %tobool3 = icmp ne %struct.BMFace* %7, null, !dbg !12888
  br i1 %tobool3, label %for.body, label %for.end, !dbg !12888

for.body:                                         ; preds = %for.cond
  %8 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !12892
  %mat_nr4 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %8, i32 0, i32 5, !dbg !12895
  %9 = load i16, i16* %mat_nr4, align 8, !dbg !12895
  %conv = sext i16 %9 to i32, !dbg !12892
  %10 = load i16, i16* %mat_nr, align 2, !dbg !12896
  %conv5 = sext i16 %10 to i32, !dbg !12896
  %cmp = icmp eq i32 %conv, %conv5, !dbg !12897
  br i1 %cmp, label %if.then, label %if.end, !dbg !12898

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !12899, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !12902, metadata !DIExpression()), !dbg !12903
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !12904
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %11, i32 0, i32 0, !dbg !12904
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head, i8 zeroext 16), !dbg !12904
  %12 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !12905
  %l_first7 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %12, i32 0, i32 2, !dbg !12905
  %13 = load %struct.BMLoop*, %struct.BMLoop** %l_first7, align 8, !dbg !12905
  store %struct.BMLoop* %13, %struct.BMLoop** %l_first, align 8, !dbg !12906
  store %struct.BMLoop* %13, %struct.BMLoop** %l_iter, align 8, !dbg !12907
  br label %do.body, !dbg !12908

do.body:                                          ; preds = %do.cond, %if.then
  %14 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !12909
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %14, i32 0, i32 1, !dbg !12909
  %15 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !12909
  %head8 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %15, i32 0, i32 0, !dbg !12909
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head8, i8 zeroext 16), !dbg !12909
  %16 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !12911
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %16, i32 0, i32 2, !dbg !12911
  %17 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !12911
  %head9 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %17, i32 0, i32 0, !dbg !12911
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head9, i8 zeroext 16), !dbg !12911
  br label %do.cond, !dbg !12912

do.cond:                                          ; preds = %do.body
  %18 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !12913
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %18, i32 0, i32 6, !dbg !12914
  %19 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !12914
  store %struct.BMLoop* %19, %struct.BMLoop** %l_iter, align 8, !dbg !12915
  %20 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !12916
  %cmp10 = icmp ne %struct.BMLoop* %19, %20, !dbg !12917
  br i1 %cmp10, label %do.body, label %do.end, !dbg !12912, !llvm.loop !12918

do.end:                                           ; preds = %do.cond
  %21 = load i32, i32* %tot, align 4, !dbg !12920
  %inc = add nsw i32 %21, 1, !dbg !12920
  store i32 %inc, i32* %tot, align 4, !dbg !12920
  br label %if.end, !dbg !12921

if.end:                                           ; preds = %do.end, %for.body
  br label %for.inc, !dbg !12922

for.inc:                                          ; preds = %if.end
  %call12 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !12890
  %22 = bitcast i8* %call12 to %struct.BMFace*, !dbg !12890
  store %struct.BMFace* %22, %struct.BMFace** %f, align 8, !dbg !12890
  br label %for.cond, !dbg !12890, !llvm.loop !12923

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* %tot, align 4, !dbg !12925
  %24 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !12927
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %24, i32 0, i32 3, !dbg !12928
  %25 = load i32, i32* %totface, align 4, !dbg !12928
  %cmp13 = icmp eq i32 %23, %25, !dbg !12929
  br i1 %cmp13, label %if.then15, label %if.end24, !dbg !12930

if.then15:                                        ; preds = %for.end
  %26 = load %struct.Base*, %struct.Base** %base_old.addr, align 8, !dbg !12931
  %object = getelementptr inbounds %struct.Base, %struct.Base* %26, i32 0, i32 7, !dbg !12933
  %27 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !12933
  %28 = load i16, i16* %mat_nr, align 2, !dbg !12934
  call void @mesh_separate_material_assign_mat_nr(%struct.Object* %27, i16 signext %28), !dbg !12935
  %29 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !12936
  %call16 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %29, i8 zeroext 3, i8* null), !dbg !12936
  %30 = bitcast i8* %call16 to %struct.BMFace*, !dbg !12936
  store %struct.BMFace* %30, %struct.BMFace** %f, align 8, !dbg !12936
  br label %for.cond17, !dbg !12936

for.cond17:                                       ; preds = %for.inc21, %if.then15
  %31 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !12938
  %tobool18 = icmp ne %struct.BMFace* %31, null, !dbg !12936
  br i1 %tobool18, label %for.body19, label %for.end23, !dbg !12936

for.body19:                                       ; preds = %for.cond17
  %32 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !12940
  %mat_nr20 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %32, i32 0, i32 5, !dbg !12942
  store i16 0, i16* %mat_nr20, align 8, !dbg !12943
  br label %for.inc21, !dbg !12944

for.inc21:                                        ; preds = %for.body19
  %call22 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !12938
  %33 = bitcast i8* %call22 to %struct.BMFace*, !dbg !12938
  store %struct.BMFace* %33, %struct.BMFace** %f, align 8, !dbg !12938
  br label %for.cond17, !dbg !12938, !llvm.loop !12945

for.end23:                                        ; preds = %for.cond17
  br label %while.end, !dbg !12947

if.end24:                                         ; preds = %for.end
  %34 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !12948
  %35 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12949
  %36 = load %struct.Base*, %struct.Base** %base_old.addr, align 8, !dbg !12950
  %37 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !12951
  %call25 = call %struct.Base* @mesh_separate_tagged(%struct.Main* %34, %struct.Scene* %35, %struct.Base* %36, %struct.BMesh* %37), !dbg !12952
  store %struct.Base* %call25, %struct.Base** %base_new, align 8, !dbg !12953
  %38 = load %struct.Base*, %struct.Base** %base_new, align 8, !dbg !12954
  %tobool26 = icmp ne %struct.Base* %38, null, !dbg !12954
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !12956

if.then27:                                        ; preds = %if.end24
  %39 = load %struct.Base*, %struct.Base** %base_new, align 8, !dbg !12957
  %object28 = getelementptr inbounds %struct.Base, %struct.Base* %39, i32 0, i32 7, !dbg !12959
  %40 = load %struct.Object*, %struct.Object** %object28, align 8, !dbg !12959
  %41 = load i16, i16* %mat_nr, align 2, !dbg !12960
  call void @mesh_separate_material_assign_mat_nr(%struct.Object* %40, i16 signext %41), !dbg !12961
  br label %if.end29, !dbg !12962

if.end29:                                         ; preds = %if.then27, %if.end24
  %42 = load %struct.Base*, %struct.Base** %base_new, align 8, !dbg !12963
  %cmp30 = icmp ne %struct.Base* %42, null, !dbg !12964
  %conv31 = zext i1 %cmp30 to i32, !dbg !12964
  %43 = load i8, i8* %result, align 1, !dbg !12965
  %conv32 = zext i8 %43 to i32, !dbg !12965
  %or = or i32 %conv32, %conv31, !dbg !12965
  %conv33 = trunc i32 %or to i8, !dbg !12965
  store i8 %conv33, i8* %result, align 1, !dbg !12965
  br label %while.cond, !dbg !12873, !llvm.loop !12966

while.end:                                        ; preds = %for.end23, %while.cond
  %44 = load i8, i8* %result, align 1, !dbg !12968
  ret i8 %44, !dbg !12969
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mesh_separate_loose(%struct.Main* %bmain, %struct.Scene* %scene, %struct.Base* %base_old, %struct.BMesh* %bm_old) #0 !dbg !12970 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %base_old.addr = alloca %struct.Base*, align 8
  %bm_old.addr = alloca %struct.BMesh*, align 8
  %i = alloca i32, align 4
  %e = alloca %struct.BMEdge*, align 8
  %v_seed = alloca %struct.BMVert*, align 8
  %walker = alloca %struct.BMWalker, align 8
  %result = alloca i8, align 1
  %max_iter = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !12971, metadata !DIExpression()), !dbg !12972
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12973, metadata !DIExpression()), !dbg !12974
  store %struct.Base* %base_old, %struct.Base** %base_old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Base** %base_old.addr, metadata !12975, metadata !DIExpression()), !dbg !12976
  store %struct.BMesh* %bm_old, %struct.BMesh** %bm_old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm_old.addr, metadata !12977, metadata !DIExpression()), !dbg !12978
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12979, metadata !DIExpression()), !dbg !12980
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !12981, metadata !DIExpression()), !dbg !12982
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_seed, metadata !12983, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.declare(metadata %struct.BMWalker* %walker, metadata !12985, metadata !DIExpression()), !dbg !13018
  call void @llvm.dbg.declare(metadata i8* %result, metadata !13019, metadata !DIExpression()), !dbg !13020
  store i8 0, i8* %result, align 1, !dbg !13020
  call void @llvm.dbg.declare(metadata i32* %max_iter, metadata !13021, metadata !DIExpression()), !dbg !13022
  %0 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13023
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %0, i32 0, i32 0, !dbg !13024
  %1 = load i32, i32* %totvert, align 8, !dbg !13024
  store i32 %1, i32* %max_iter, align 4, !dbg !13022
  %2 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13025
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %2, i8 zeroext 11, i8 zeroext 16, i8 zeroext 0), !dbg !13026
  store i32 0, i32* %i, align 4, !dbg !13027
  br label %for.cond, !dbg !13029

for.cond:                                         ; preds = %for.inc35, %entry
  %3 = load i32, i32* %i, align 4, !dbg !13030
  %4 = load i32, i32* %max_iter, align 4, !dbg !13032
  %cmp = icmp slt i32 %3, %4, !dbg !13033
  br i1 %cmp, label %for.body, label %for.end37, !dbg !13034

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !13035, metadata !DIExpression()), !dbg !13037
  store i32 0, i32* %tot, align 4, !dbg !13037
  %5 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13038
  %call = call i8* @BM_iter_at_index(%struct.BMesh* %5, i8 zeroext 1, i8* null, i32 0), !dbg !13039
  %6 = bitcast i8* %call to %struct.BMVert*, !dbg !13039
  store %struct.BMVert* %6, %struct.BMVert** %v_seed, align 8, !dbg !13040
  %7 = load %struct.BMVert*, %struct.BMVert** %v_seed, align 8, !dbg !13041
  %cmp1 = icmp eq %struct.BMVert* %7, null, !dbg !13043
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13044

if.then:                                          ; preds = %for.body
  br label %for.end37, !dbg !13045

if.end:                                           ; preds = %for.body
  %8 = load %struct.BMVert*, %struct.BMVert** %v_seed, align 8, !dbg !13047
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %8, i32 0, i32 0, !dbg !13047
  %call2 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 16), !dbg !13047
  %tobool = icmp ne i8 %call2, 0, !dbg !13047
  br i1 %tobool, label %if.end5, label %if.then3, !dbg !13049

if.then3:                                         ; preds = %if.end
  %9 = load %struct.BMVert*, %struct.BMVert** %v_seed, align 8, !dbg !13050
  %head4 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %9, i32 0, i32 0, !dbg !13050
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head4, i8 zeroext 16), !dbg !13050
  %10 = load i32, i32* %tot, align 4, !dbg !13052
  %inc = add nsw i32 %10, 1, !dbg !13052
  store i32 %inc, i32* %tot, align 4, !dbg !13052
  br label %if.end5, !dbg !13053

if.end5:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13054
  call void @BMW_init(%struct.BMWalker* %walker, %struct.BMesh* %11, i32 0, i16 signext 0, i16 signext 0, i16 signext 0, i32 0, i32 0), !dbg !13055
  %12 = load %struct.BMVert*, %struct.BMVert** %v_seed, align 8, !dbg !13056
  %13 = bitcast %struct.BMVert* %12 to i8*, !dbg !13056
  %call6 = call i8* @BMW_begin(%struct.BMWalker* %walker, i8* %13), !dbg !13058
  %14 = bitcast i8* %call6 to %struct.BMEdge*, !dbg !13058
  store %struct.BMEdge* %14, %struct.BMEdge** %e, align 8, !dbg !13059
  br label %for.cond7, !dbg !13060

for.cond7:                                        ; preds = %for.inc, %if.end5
  %15 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13061
  %tobool8 = icmp ne %struct.BMEdge* %15, null, !dbg !13063
  br i1 %tobool8, label %for.body9, label %for.end, !dbg !13063

for.body9:                                        ; preds = %for.cond7
  %16 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13064
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %16, i32 0, i32 2, !dbg !13064
  %17 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !13064
  %head10 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %17, i32 0, i32 0, !dbg !13064
  %call11 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head10, i8 zeroext 16), !dbg !13064
  %tobool12 = icmp ne i8 %call11, 0, !dbg !13064
  br i1 %tobool12, label %if.end17, label %if.then13, !dbg !13067

if.then13:                                        ; preds = %for.body9
  %18 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13068
  %v114 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %18, i32 0, i32 2, !dbg !13068
  %19 = load %struct.BMVert*, %struct.BMVert** %v114, align 8, !dbg !13068
  %head15 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %19, i32 0, i32 0, !dbg !13068
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head15, i8 zeroext 16), !dbg !13068
  %20 = load i32, i32* %tot, align 4, !dbg !13070
  %inc16 = add nsw i32 %20, 1, !dbg !13070
  store i32 %inc16, i32* %tot, align 4, !dbg !13070
  br label %if.end17, !dbg !13071

if.end17:                                         ; preds = %if.then13, %for.body9
  %21 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13072
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %21, i32 0, i32 3, !dbg !13072
  %22 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !13072
  %head18 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %22, i32 0, i32 0, !dbg !13072
  %call19 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head18, i8 zeroext 16), !dbg !13072
  %tobool20 = icmp ne i8 %call19, 0, !dbg !13072
  br i1 %tobool20, label %if.end25, label %if.then21, !dbg !13074

if.then21:                                        ; preds = %if.end17
  %23 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13075
  %v222 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %23, i32 0, i32 3, !dbg !13075
  %24 = load %struct.BMVert*, %struct.BMVert** %v222, align 8, !dbg !13075
  %head23 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %24, i32 0, i32 0, !dbg !13075
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head23, i8 zeroext 16), !dbg !13075
  %25 = load i32, i32* %tot, align 4, !dbg !13077
  %inc24 = add nsw i32 %25, 1, !dbg !13077
  store i32 %inc24, i32* %tot, align 4, !dbg !13077
  br label %if.end25, !dbg !13078

if.end25:                                         ; preds = %if.then21, %if.end17
  br label %for.inc, !dbg !13079

for.inc:                                          ; preds = %if.end25
  %call26 = call i8* @BMW_step(%struct.BMWalker* %walker), !dbg !13080
  %26 = bitcast i8* %call26 to %struct.BMEdge*, !dbg !13080
  store %struct.BMEdge* %26, %struct.BMEdge** %e, align 8, !dbg !13081
  br label %for.cond7, !dbg !13082, !llvm.loop !13083

for.end:                                          ; preds = %for.cond7
  call void @BMW_end(%struct.BMWalker* %walker), !dbg !13085
  %27 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13086
  %totvert27 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %27, i32 0, i32 0, !dbg !13088
  %28 = load i32, i32* %totvert27, align 8, !dbg !13088
  %29 = load i32, i32* %tot, align 4, !dbg !13089
  %cmp28 = icmp eq i32 %28, %29, !dbg !13090
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !13091

if.then29:                                        ; preds = %for.end
  br label %for.end37, !dbg !13092

if.end30:                                         ; preds = %for.end
  %30 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13094
  call void @bm_mesh_hflag_flush_vert(%struct.BMesh* %30, i8 zeroext 16), !dbg !13095
  %31 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !13096
  %32 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13097
  %33 = load %struct.Base*, %struct.Base** %base_old.addr, align 8, !dbg !13098
  %34 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13099
  %call31 = call %struct.Base* @mesh_separate_tagged(%struct.Main* %31, %struct.Scene* %32, %struct.Base* %33, %struct.BMesh* %34), !dbg !13100
  %cmp32 = icmp ne %struct.Base* %call31, null, !dbg !13101
  %conv = zext i1 %cmp32 to i32, !dbg !13101
  %35 = load i8, i8* %result, align 1, !dbg !13102
  %conv33 = zext i8 %35 to i32, !dbg !13102
  %or = or i32 %conv33, %conv, !dbg !13102
  %conv34 = trunc i32 %or to i8, !dbg !13102
  store i8 %conv34, i8* %result, align 1, !dbg !13102
  br label %for.inc35, !dbg !13103

for.inc35:                                        ; preds = %if.end30
  %36 = load i32, i32* %i, align 4, !dbg !13104
  %inc36 = add nsw i32 %36, 1, !dbg !13104
  store i32 %inc36, i32* %i, align 4, !dbg !13104
  br label %for.cond, !dbg !13105, !llvm.loop !13106

for.end37:                                        ; preds = %if.then29, %if.then, %for.cond
  %37 = load i8, i8* %result, align 1, !dbg !13108
  ret i8 %37, !dbg !13109
}

declare dso_local i32 @CTX_data_selected_editable_bases(%struct.bContext*, %struct.ListBase*) #2

declare dso_local %struct.BMesh* @BM_mesh_create(%struct.BMAllocTemplate*) #2

declare dso_local void @BM_mesh_bm_from_me(%struct.BMesh*, %struct.Mesh*, i8 zeroext, i8 zeroext, i32) #2

declare dso_local void @BM_mesh_bm_to_me(%struct.BMesh*, %struct.Mesh*, i8 zeroext) #2

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local void @BM_mesh_free(%struct.BMesh*) #2

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

declare dso_local void @DAG_relations_tag_update(%struct.Main*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.Base* @mesh_separate_tagged(%struct.Main* %bmain, %struct.Scene* %scene, %struct.Base* %base_old, %struct.BMesh* %bm_old) #0 !dbg !13110 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %base_old.addr = alloca %struct.Base*, align 8
  %bm_old.addr = alloca %struct.BMesh*, align 8
  %base_new = alloca %struct.Base*, align 8
  %obedit = alloca %struct.Object*, align 8
  %bm_new = alloca %struct.BMesh*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !13113, metadata !DIExpression()), !dbg !13114
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !13115, metadata !DIExpression()), !dbg !13116
  store %struct.Base* %base_old, %struct.Base** %base_old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Base** %base_old.addr, metadata !13117, metadata !DIExpression()), !dbg !13118
  store %struct.BMesh* %bm_old, %struct.BMesh** %bm_old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm_old.addr, metadata !13119, metadata !DIExpression()), !dbg !13120
  call void @llvm.dbg.declare(metadata %struct.Base** %base_new, metadata !13121, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.declare(metadata %struct.Object** %obedit, metadata !13123, metadata !DIExpression()), !dbg !13124
  %0 = load %struct.Base*, %struct.Base** %base_old.addr, align 8, !dbg !13125
  %object = getelementptr inbounds %struct.Base, %struct.Base* %0, i32 0, i32 7, !dbg !13126
  %1 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !13126
  store %struct.Object* %1, %struct.Object** %obedit, align 8, !dbg !13124
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm_new, metadata !13127, metadata !DIExpression()), !dbg !13128
  %call = call %struct.BMesh* @BM_mesh_create(%struct.BMAllocTemplate* @bm_mesh_allocsize_default), !dbg !13129
  store %struct.BMesh* %call, %struct.BMesh** %bm_new, align 8, !dbg !13130
  %2 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13131
  call void @BM_mesh_elem_toolflags_ensure(%struct.BMesh* %2), !dbg !13132
  %3 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13133
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %3, i32 0, i32 24, !dbg !13134
  %4 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13135
  %vdata1 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 24, !dbg !13136
  %5 = load i64, i64* @CD_MASK_BMESH, align 8, !dbg !13137
  call void @CustomData_copy(%struct.CustomData* %vdata, %struct.CustomData* %vdata1, i64 %5, i32 1, i32 0), !dbg !13138
  %6 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13139
  %edata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 25, !dbg !13140
  %7 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13141
  %edata2 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 25, !dbg !13142
  %8 = load i64, i64* @CD_MASK_BMESH, align 8, !dbg !13143
  call void @CustomData_copy(%struct.CustomData* %edata, %struct.CustomData* %edata2, i64 %8, i32 1, i32 0), !dbg !13144
  %9 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13145
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 26, !dbg !13146
  %10 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13147
  %ldata3 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 26, !dbg !13148
  %11 = load i64, i64* @CD_MASK_BMESH, align 8, !dbg !13149
  call void @CustomData_copy(%struct.CustomData* %ldata, %struct.CustomData* %ldata3, i64 %11, i32 1, i32 0), !dbg !13150
  %12 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13151
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %12, i32 0, i32 27, !dbg !13152
  %13 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13153
  %pdata4 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %13, i32 0, i32 27, !dbg !13154
  %14 = load i64, i64* @CD_MASK_BMESH, align 8, !dbg !13155
  call void @CustomData_copy(%struct.CustomData* %pdata, %struct.CustomData* %pdata4, i64 %14, i32 1, i32 0), !dbg !13156
  %15 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13157
  %vdata5 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 24, !dbg !13158
  %16 = load i32, i32* getelementptr inbounds (%struct.BMAllocTemplate, %struct.BMAllocTemplate* @bm_mesh_allocsize_default, i32 0, i32 0), align 4, !dbg !13159
  call void @CustomData_bmesh_init_pool(%struct.CustomData* %vdata5, i32 %16, i8 zeroext 1), !dbg !13160
  %17 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13161
  %edata6 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %17, i32 0, i32 25, !dbg !13162
  %18 = load i32, i32* getelementptr inbounds (%struct.BMAllocTemplate, %struct.BMAllocTemplate* @bm_mesh_allocsize_default, i32 0, i32 1), align 4, !dbg !13163
  call void @CustomData_bmesh_init_pool(%struct.CustomData* %edata6, i32 %18, i8 zeroext 2), !dbg !13164
  %19 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13165
  %ldata7 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %19, i32 0, i32 26, !dbg !13166
  %20 = load i32, i32* getelementptr inbounds (%struct.BMAllocTemplate, %struct.BMAllocTemplate* @bm_mesh_allocsize_default, i32 0, i32 2), align 4, !dbg !13167
  call void @CustomData_bmesh_init_pool(%struct.CustomData* %ldata7, i32 %20, i8 zeroext 4), !dbg !13168
  %21 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13169
  %pdata8 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %21, i32 0, i32 27, !dbg !13170
  %22 = load i32, i32* getelementptr inbounds (%struct.BMAllocTemplate, %struct.BMAllocTemplate* @bm_mesh_allocsize_default, i32 0, i32 3), align 4, !dbg !13171
  call void @CustomData_bmesh_init_pool(%struct.CustomData* %pdata8, i32 %22, i8 zeroext 8), !dbg !13172
  %23 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !13173
  %24 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13174
  %25 = load %struct.Base*, %struct.Base** %base_old.addr, align 8, !dbg !13175
  %call9 = call %struct.Base* @ED_object_add_duplicate(%struct.Main* %23, %struct.Scene* %24, %struct.Base* %25, i32 1), !dbg !13176
  store %struct.Base* %call9, %struct.Base** %base_new, align 8, !dbg !13177
  %26 = load %struct.Base*, %struct.Base** %base_new, align 8, !dbg !13178
  %object10 = getelementptr inbounds %struct.Base, %struct.Base* %26, i32 0, i32 7, !dbg !13179
  %27 = load %struct.Object*, %struct.Object** %object10, align 8, !dbg !13179
  %28 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13180
  %call11 = call %struct.Material*** @give_matarar(%struct.Object* %28), !dbg !13181
  %29 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13182
  %call12 = call i16* @give_totcolp(%struct.Object* %29), !dbg !13183
  %30 = load i16, i16* %call12, align 2, !dbg !13184
  call void @assign_matarar(%struct.Object* %27, %struct.Material*** %call11, i16 signext %30), !dbg !13185
  %31 = load %struct.Base*, %struct.Base** %base_new, align 8, !dbg !13186
  call void @ED_base_object_select(%struct.Base* %31, i16 signext 1), !dbg !13187
  %32 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13188
  %33 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13189
  %call13 = call zeroext i8 (%struct.BMesh*, i32, i8*, ...) @BMO_op_callf(%struct.BMesh* %32, i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.476, i64 0, i64 0), i32 16, %struct.BMesh* %33), !dbg !13190
  %34 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13191
  %call14 = call zeroext i8 (%struct.BMesh*, i32, i8*, ...) @BMO_op_callf(%struct.BMesh* %34, i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.477, i64 0, i64 0), i32 16, i32 5), !dbg !13192
  %35 = load %struct.BMesh*, %struct.BMesh** %bm_old.addr, align 8, !dbg !13193
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %35, i8 zeroext 11, i8 zeroext 1, i8 zeroext 0), !dbg !13194
  %36 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13195
  call void @BM_mesh_normals_update(%struct.BMesh* %36), !dbg !13196
  %37 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13197
  %38 = load %struct.Base*, %struct.Base** %base_new, align 8, !dbg !13198
  %object15 = getelementptr inbounds %struct.Base, %struct.Base* %38, i32 0, i32 7, !dbg !13199
  %39 = load %struct.Object*, %struct.Object** %object15, align 8, !dbg !13199
  %data = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 19, !dbg !13200
  %40 = load i8*, i8** %data, align 8, !dbg !13200
  %41 = bitcast i8* %40 to %struct.Mesh*, !dbg !13198
  call void @BM_mesh_bm_to_me(%struct.BMesh* %37, %struct.Mesh* %41, i8 zeroext 0), !dbg !13201
  %42 = load %struct.BMesh*, %struct.BMesh** %bm_new, align 8, !dbg !13202
  call void @BM_mesh_free(%struct.BMesh* %42), !dbg !13203
  %43 = load %struct.Base*, %struct.Base** %base_new, align 8, !dbg !13204
  %object16 = getelementptr inbounds %struct.Base, %struct.Base* %43, i32 0, i32 7, !dbg !13205
  %44 = load %struct.Object*, %struct.Object** %object16, align 8, !dbg !13205
  %data17 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 19, !dbg !13206
  %45 = load i8*, i8** %data17, align 8, !dbg !13206
  %46 = bitcast i8* %45 to %struct.Mesh*, !dbg !13207
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %46, i32 0, i32 20, !dbg !13208
  store %struct.BMEditMesh* null, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !13209
  %47 = load %struct.Base*, %struct.Base** %base_new, align 8, !dbg !13210
  ret %struct.Base* %47, !dbg !13211
}

declare dso_local void @BM_mesh_elem_toolflags_ensure(%struct.BMesh*) #2

declare dso_local void @CustomData_copy(%struct.CustomData*, %struct.CustomData*, i64, i32, i32) #2

declare dso_local void @CustomData_bmesh_init_pool(%struct.CustomData*, i32, i8 zeroext) #2

declare dso_local %struct.Base* @ED_object_add_duplicate(%struct.Main*, %struct.Scene*, %struct.Base*, i32) #2

declare dso_local void @assign_matarar(%struct.Object*, %struct.Material***, i16 signext) #2

declare dso_local %struct.Material*** @give_matarar(%struct.Object*) #2

declare dso_local i16* @give_totcolp(%struct.Object*) #2

declare dso_local void @ED_base_object_select(%struct.Base*, i16 signext) #2

declare dso_local zeroext i8 @BMO_op_callf(%struct.BMesh*, i32, i8*, ...) #2

declare dso_local void @BM_mesh_normals_update(%struct.BMesh*) #2

declare dso_local i8* @BM_iter_at_index(%struct.BMesh*, i8 zeroext, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_separate_material_assign_mat_nr(%struct.Object* %ob, i16 signext %mat_nr) #0 !dbg !13212 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %mat_nr.addr = alloca i16, align 2
  %obdata = alloca %struct.ID*, align 8
  %matarar = alloca %struct.Material***, align 8
  %totcolp = alloca i16*, align 8
  %ma_ob = alloca %struct.Material*, align 8
  %ma_obdata = alloca %struct.Material*, align 8
  %matbit = alloca i8, align 1
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13215, metadata !DIExpression()), !dbg !13216
  store i16 %mat_nr, i16* %mat_nr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mat_nr.addr, metadata !13217, metadata !DIExpression()), !dbg !13218
  call void @llvm.dbg.declare(metadata %struct.ID** %obdata, metadata !13219, metadata !DIExpression()), !dbg !13220
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13221
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !13222
  %1 = load i8*, i8** %data, align 8, !dbg !13222
  %2 = bitcast i8* %1 to %struct.ID*, !dbg !13221
  store %struct.ID* %2, %struct.ID** %obdata, align 8, !dbg !13220
  call void @llvm.dbg.declare(metadata %struct.Material**** %matarar, metadata !13223, metadata !DIExpression()), !dbg !13226
  call void @llvm.dbg.declare(metadata i16** %totcolp, metadata !13227, metadata !DIExpression()), !dbg !13229
  %3 = load %struct.ID*, %struct.ID** %obdata, align 8, !dbg !13230
  %call = call i16* @give_totcolp_id(%struct.ID* %3), !dbg !13231
  store i16* %call, i16** %totcolp, align 8, !dbg !13232
  %4 = load %struct.ID*, %struct.ID** %obdata, align 8, !dbg !13233
  %call1 = call %struct.Material*** @give_matarar_id(%struct.ID* %4), !dbg !13234
  store %struct.Material*** %call1, %struct.Material**** %matarar, align 8, !dbg !13235
  %5 = load i16*, i16** %totcolp, align 8, !dbg !13236
  %tobool = icmp ne i16* %5, null, !dbg !13236
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13238

land.rhs:                                         ; preds = %entry
  %6 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !13239
  %tobool2 = icmp ne %struct.Material*** %6, null, !dbg !13238
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %7 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !13240
  %land.ext = zext i1 %7 to i32, !dbg !13238
  %cmp = icmp eq i32 %land.ext, 0, !dbg !13241
  br i1 %cmp, label %if.then, label %if.end, !dbg !13242

if.then:                                          ; preds = %land.end
  br label %if.end26, !dbg !13243

if.end:                                           ; preds = %land.end
  %8 = load i16*, i16** %totcolp, align 8, !dbg !13245
  %9 = load i16, i16* %8, align 2, !dbg !13247
  %tobool3 = icmp ne i16 %9, 0, !dbg !13247
  br i1 %tobool3, label %if.then4, label %if.else25, !dbg !13248

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Material** %ma_ob, metadata !13249, metadata !DIExpression()), !dbg !13251
  call void @llvm.dbg.declare(metadata %struct.Material** %ma_obdata, metadata !13252, metadata !DIExpression()), !dbg !13253
  call void @llvm.dbg.declare(metadata i8* %matbit, metadata !13254, metadata !DIExpression()), !dbg !13255
  %10 = load i16, i16* %mat_nr.addr, align 2, !dbg !13256
  %conv = sext i16 %10 to i32, !dbg !13256
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13258
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 31, !dbg !13259
  %12 = load i32, i32* %totcol, align 8, !dbg !13259
  %cmp5 = icmp slt i32 %conv, %12, !dbg !13260
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !13261

if.then7:                                         ; preds = %if.then4
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13262
  %mat = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 29, !dbg !13264
  %14 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !13264
  %15 = load i16, i16* %mat_nr.addr, align 2, !dbg !13265
  %idxprom = sext i16 %15 to i64, !dbg !13262
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %14, i64 %idxprom, !dbg !13262
  %16 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !13262
  store %struct.Material* %16, %struct.Material** %ma_ob, align 8, !dbg !13266
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13267
  %matbits = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 30, !dbg !13268
  %18 = load i8*, i8** %matbits, align 8, !dbg !13268
  %19 = load i16, i16* %mat_nr.addr, align 2, !dbg !13269
  %idxprom8 = sext i16 %19 to i64, !dbg !13267
  %arrayidx9 = getelementptr inbounds i8, i8* %18, i64 %idxprom8, !dbg !13267
  %20 = load i8, i8* %arrayidx9, align 1, !dbg !13267
  store i8 %20, i8* %matbit, align 1, !dbg !13270
  br label %if.end10, !dbg !13271

if.else:                                          ; preds = %if.then4
  store %struct.Material* null, %struct.Material** %ma_ob, align 8, !dbg !13272
  store i8 0, i8* %matbit, align 1, !dbg !13274
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  %21 = load i16, i16* %mat_nr.addr, align 2, !dbg !13275
  %conv11 = sext i16 %21 to i32, !dbg !13275
  %22 = load i16*, i16** %totcolp, align 8, !dbg !13277
  %23 = load i16, i16* %22, align 2, !dbg !13278
  %conv12 = sext i16 %23 to i32, !dbg !13278
  %cmp13 = icmp slt i32 %conv11, %conv12, !dbg !13279
  br i1 %cmp13, label %if.then15, label %if.else18, !dbg !13280

if.then15:                                        ; preds = %if.end10
  %24 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !13281
  %25 = load %struct.Material**, %struct.Material*** %24, align 8, !dbg !13283
  %26 = load i16, i16* %mat_nr.addr, align 2, !dbg !13284
  %idxprom16 = sext i16 %26 to i64, !dbg !13285
  %arrayidx17 = getelementptr inbounds %struct.Material*, %struct.Material** %25, i64 %idxprom16, !dbg !13285
  %27 = load %struct.Material*, %struct.Material** %arrayidx17, align 8, !dbg !13285
  store %struct.Material* %27, %struct.Material** %ma_obdata, align 8, !dbg !13286
  br label %if.end19, !dbg !13287

if.else18:                                        ; preds = %if.end10
  store %struct.Material* null, %struct.Material** %ma_obdata, align 8, !dbg !13288
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.then15
  %28 = load %struct.ID*, %struct.ID** %obdata, align 8, !dbg !13290
  call void @BKE_material_clear_id(%struct.ID* %28, i8 zeroext 1), !dbg !13291
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13292
  call void @BKE_material_resize_object(%struct.Object* %29, i16 signext 1, i8 zeroext 1), !dbg !13293
  %30 = load %struct.ID*, %struct.ID** %obdata, align 8, !dbg !13294
  call void @BKE_material_resize_id(%struct.ID* %30, i16 signext 1, i8 zeroext 1), !dbg !13295
  %31 = load %struct.Material*, %struct.Material** %ma_ob, align 8, !dbg !13296
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13297
  %mat20 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 29, !dbg !13298
  %33 = load %struct.Material**, %struct.Material*** %mat20, align 8, !dbg !13298
  %arrayidx21 = getelementptr inbounds %struct.Material*, %struct.Material** %33, i64 0, !dbg !13297
  store %struct.Material* %31, %struct.Material** %arrayidx21, align 8, !dbg !13299
  %34 = load i8, i8* %matbit, align 1, !dbg !13300
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13301
  %matbits22 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 30, !dbg !13302
  %36 = load i8*, i8** %matbits22, align 8, !dbg !13302
  %arrayidx23 = getelementptr inbounds i8, i8* %36, i64 0, !dbg !13301
  store i8 %34, i8* %arrayidx23, align 1, !dbg !13303
  %37 = load %struct.Material*, %struct.Material** %ma_obdata, align 8, !dbg !13304
  %38 = load %struct.Material***, %struct.Material**** %matarar, align 8, !dbg !13305
  %39 = load %struct.Material**, %struct.Material*** %38, align 8, !dbg !13306
  %arrayidx24 = getelementptr inbounds %struct.Material*, %struct.Material** %39, i64 0, !dbg !13307
  store %struct.Material* %37, %struct.Material** %arrayidx24, align 8, !dbg !13308
  br label %if.end26, !dbg !13309

if.else25:                                        ; preds = %if.end
  %40 = load %struct.ID*, %struct.ID** %obdata, align 8, !dbg !13310
  call void @BKE_material_clear_id(%struct.ID* %40, i8 zeroext 1), !dbg !13312
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13313
  call void @BKE_material_resize_object(%struct.Object* %41, i16 signext 0, i8 zeroext 1), !dbg !13314
  %42 = load %struct.ID*, %struct.ID** %obdata, align 8, !dbg !13315
  call void @BKE_material_resize_id(%struct.ID* %42, i16 signext 0, i8 zeroext 1), !dbg !13316
  br label %if.end26

if.end26:                                         ; preds = %if.then, %if.else25, %if.end19
  ret void, !dbg !13317
}

declare dso_local i16* @give_totcolp_id(%struct.ID*) #2

declare dso_local %struct.Material*** @give_matarar_id(%struct.ID*) #2

declare dso_local void @BKE_material_clear_id(%struct.ID*, i8 zeroext) #2

declare dso_local void @BKE_material_resize_object(%struct.Object*, i16 signext, i8 zeroext) #2

declare dso_local void @BKE_material_resize_id(%struct.ID*, i16 signext, i8 zeroext) #2

declare dso_local void @BMW_init(%struct.BMWalker*, %struct.BMesh*, i32, i16 signext, i16 signext, i16 signext, i32, i32) #2

declare dso_local i8* @BMW_begin(%struct.BMWalker*, i8*) #2

declare dso_local i8* @BMW_step(%struct.BMWalker*) #2

declare dso_local void @BMW_end(%struct.BMWalker*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @bm_mesh_hflag_flush_vert(%struct.BMesh* %bm, i8 zeroext %hflag) #0 !dbg !13318 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %hflag.addr = alloca i8, align 1
  %e = alloca %struct.BMEdge*, align 8
  %l_iter = alloca %struct.BMLoop*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  %f = alloca %struct.BMFace*, align 8
  %eiter = alloca %struct.BMIter, align 8
  %fiter = alloca %struct.BMIter, align 8
  %ok = alloca i8, align 1
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !13321, metadata !DIExpression()), !dbg !13322
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !13323, metadata !DIExpression()), !dbg !13324
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !13325, metadata !DIExpression()), !dbg !13326
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !13327, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !13329, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !13331, metadata !DIExpression()), !dbg !13332
  call void @llvm.dbg.declare(metadata %struct.BMIter* %eiter, metadata !13333, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.declare(metadata %struct.BMIter* %fiter, metadata !13335, metadata !DIExpression()), !dbg !13336
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !13337, metadata !DIExpression()), !dbg !13338
  %0 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !13339
  %call = call i8* @BM_iter_new(%struct.BMIter* %eiter, %struct.BMesh* %0, i8 zeroext 2, i8* null), !dbg !13339
  %1 = bitcast i8* %call to %struct.BMEdge*, !dbg !13339
  store %struct.BMEdge* %1, %struct.BMEdge** %e, align 8, !dbg !13339
  br label %for.cond, !dbg !13339

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13341
  %tobool = icmp ne %struct.BMEdge* %2, null, !dbg !13339
  br i1 %tobool, label %for.body, label %for.end, !dbg !13339

for.body:                                         ; preds = %for.cond
  %3 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13343
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %3, i32 0, i32 2, !dbg !13343
  %4 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !13343
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %4, i32 0, i32 0, !dbg !13343
  %5 = load i8, i8* %hflag.addr, align 1, !dbg !13343
  %call1 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %5), !dbg !13343
  %conv = zext i8 %call1 to i32, !dbg !13343
  %tobool2 = icmp ne i32 %conv, 0, !dbg !13343
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !13346

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13347
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %6, i32 0, i32 3, !dbg !13347
  %7 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !13347
  %head3 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %7, i32 0, i32 0, !dbg !13347
  %8 = load i8, i8* %hflag.addr, align 1, !dbg !13347
  %call4 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head3, i8 zeroext %8), !dbg !13347
  %conv5 = zext i8 %call4 to i32, !dbg !13347
  %tobool6 = icmp ne i32 %conv5, 0, !dbg !13347
  br i1 %tobool6, label %if.then, label %if.else, !dbg !13348

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13349
  %head7 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %9, i32 0, i32 0, !dbg !13349
  %10 = load i8, i8* %hflag.addr, align 1, !dbg !13349
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head7, i8 zeroext %10), !dbg !13349
  br label %if.end, !dbg !13351

if.else:                                          ; preds = %land.lhs.true, %for.body
  %11 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13352
  %head8 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %11, i32 0, i32 0, !dbg !13352
  %12 = load i8, i8* %hflag.addr, align 1, !dbg !13352
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head8, i8 zeroext %12), !dbg !13352
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !13354

for.inc:                                          ; preds = %if.end
  %call9 = call i8* @BM_iter_step(%struct.BMIter* %eiter), !dbg !13341
  %13 = bitcast i8* %call9 to %struct.BMEdge*, !dbg !13341
  store %struct.BMEdge* %13, %struct.BMEdge** %e, align 8, !dbg !13341
  br label %for.cond, !dbg !13341, !llvm.loop !13355

for.end:                                          ; preds = %for.cond
  %14 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !13357
  %call10 = call i8* @BM_iter_new(%struct.BMIter* %fiter, %struct.BMesh* %14, i8 zeroext 3, i8* null), !dbg !13357
  %15 = bitcast i8* %call10 to %struct.BMFace*, !dbg !13357
  store %struct.BMFace* %15, %struct.BMFace** %f, align 8, !dbg !13357
  br label %for.cond11, !dbg !13357

for.cond11:                                       ; preds = %for.inc23, %for.end
  %16 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !13359
  %tobool12 = icmp ne %struct.BMFace* %16, null, !dbg !13357
  br i1 %tobool12, label %for.body13, label %for.end25, !dbg !13357

for.body13:                                       ; preds = %for.cond11
  store i8 1, i8* %ok, align 1, !dbg !13361
  %17 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !13363
  %l_first14 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %17, i32 0, i32 2, !dbg !13363
  %18 = load %struct.BMLoop*, %struct.BMLoop** %l_first14, align 8, !dbg !13363
  store %struct.BMLoop* %18, %struct.BMLoop** %l_first, align 8, !dbg !13364
  store %struct.BMLoop* %18, %struct.BMLoop** %l_iter, align 8, !dbg !13365
  br label %do.body, !dbg !13366

do.body:                                          ; preds = %do.cond, %for.body13
  %19 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !13367
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %19, i32 0, i32 1, !dbg !13367
  %20 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !13367
  %head15 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 0, !dbg !13367
  %21 = load i8, i8* %hflag.addr, align 1, !dbg !13367
  %call16 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head15, i8 zeroext %21), !dbg !13367
  %tobool17 = icmp ne i8 %call16, 0, !dbg !13367
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !13370

if.then18:                                        ; preds = %do.body
  store i8 0, i8* %ok, align 1, !dbg !13371
  br label %do.end, !dbg !13373

if.end19:                                         ; preds = %do.body
  br label %do.cond, !dbg !13374

do.cond:                                          ; preds = %if.end19
  %22 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !13375
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %22, i32 0, i32 6, !dbg !13376
  %23 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !13376
  store %struct.BMLoop* %23, %struct.BMLoop** %l_iter, align 8, !dbg !13377
  %24 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !13378
  %cmp = icmp ne %struct.BMLoop* %23, %24, !dbg !13379
  br i1 %cmp, label %do.body, label %do.end, !dbg !13374, !llvm.loop !13380

do.end:                                           ; preds = %do.cond, %if.then18
  %25 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !13382
  %head21 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %25, i32 0, i32 0, !dbg !13382
  %26 = load i8, i8* %hflag.addr, align 1, !dbg !13382
  %27 = load i8, i8* %ok, align 1, !dbg !13382
  %conv22 = zext i8 %27 to i32, !dbg !13382
  call void @_bm_elem_flag_set(%struct.BMHeader* %head21, i8 zeroext %26, i32 %conv22), !dbg !13382
  br label %for.inc23, !dbg !13383

for.inc23:                                        ; preds = %do.end
  %call24 = call i8* @BM_iter_step(%struct.BMIter* %fiter), !dbg !13359
  %28 = bitcast i8* %call24 to %struct.BMFace*, !dbg !13359
  store %struct.BMFace* %28, %struct.BMFace** %f, align 8, !dbg !13359
  br label %for.cond11, !dbg !13359, !llvm.loop !13384

for.end25:                                        ; preds = %for.cond11
  ret void, !dbg !13386
}

declare dso_local %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA*, i8*) #2

declare dso_local zeroext i8 @RNA_property_is_set(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local i32 @RNA_property_int_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !13387 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !13390, metadata !DIExpression()), !dbg !13391
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13392, metadata !DIExpression()), !dbg !13393
  %0 = load i32, i32* %a.addr, align 4, !dbg !13394
  %1 = load i32, i32* %b.addr, align 4, !dbg !13395
  %cmp = icmp slt i32 %0, %1, !dbg !13396
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13397

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !13398
  br label %cond.end, !dbg !13397

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !13399
  br label %cond.end, !dbg !13397

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !13397
  ret i32 %cond, !dbg !13400
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mod_i(i32 %i, i32 %n) #0 !dbg !13401 {
entry:
  %i.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13402, metadata !DIExpression()), !dbg !13403
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !13404, metadata !DIExpression()), !dbg !13405
  %0 = load i32, i32* %i.addr, align 4, !dbg !13406
  %1 = load i32, i32* %n.addr, align 4, !dbg !13407
  %rem = srem i32 %0, %1, !dbg !13408
  %2 = load i32, i32* %n.addr, align 4, !dbg !13409
  %add = add nsw i32 %rem, %2, !dbg !13410
  %3 = load i32, i32* %n.addr, align 4, !dbg !13411
  %rem1 = srem i32 %add, %3, !dbg !13412
  ret i32 %rem1, !dbg !13413
}

; Function Attrs: noinline nounwind uwtable
define internal void @edbm_fill_grid_prepare(%struct.BMesh* %bm, i32 %offset, i32* %r_span, i8 zeroext %span_calc) #0 !dbg !13414 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %offset.addr = alloca i32, align 4
  %r_span.addr = alloca i32*, align 8
  %span_calc.addr = alloca i8, align 1
  %e = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %count = alloca i32, align 4
  %span = alloca i32, align 4
  %eloops = alloca %struct.ListBase, align 8
  %el_store = alloca %struct.BMEdgeLoopStore*, align 8
  %verts_len = alloca i32, align 4
  %verts = alloca %struct.ListBase*, align 8
  %v_act = alloca %struct.BMVert*, align 8
  %v_act_link = alloca %struct.LinkData*, align 8
  %edges = alloca %struct.BMEdge**, align 8
  %i = alloca i32, align 4
  %v_link = alloca %struct.LinkData*, align 8
  %v_link_best = alloca %struct.LinkData*, align 8
  %angle_best = alloca float, align 4
  %angle = alloca float, align 4
  %ele_sort = alloca %struct.SortPointerByFloat*, align 8
  %v_link48 = alloca %struct.LinkData*, align 8
  %v = alloca %struct.BMVert*, align 8
  %angle54 = alloca float, align 4
  %v68 = alloca %struct.BMVert*, align 8
  %v81 = alloca %struct.BMVert*, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !13417, metadata !DIExpression()), !dbg !13418
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !13419, metadata !DIExpression()), !dbg !13420
  store i32* %r_span, i32** %r_span.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_span.addr, metadata !13421, metadata !DIExpression()), !dbg !13422
  store i8 %span_calc, i8* %span_calc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %span_calc.addr, metadata !13423, metadata !DIExpression()), !dbg !13424
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !13425, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !13427, metadata !DIExpression()), !dbg !13428
  call void @llvm.dbg.declare(metadata i32* %count, metadata !13429, metadata !DIExpression()), !dbg !13430
  call void @llvm.dbg.declare(metadata i32* %span, metadata !13431, metadata !DIExpression()), !dbg !13432
  %0 = load i32*, i32** %r_span.addr, align 8, !dbg !13433
  %1 = load i32, i32* %0, align 4, !dbg !13434
  store i32 %1, i32* %span, align 4, !dbg !13432
  call void @llvm.dbg.declare(metadata %struct.ListBase* %eloops, metadata !13435, metadata !DIExpression()), !dbg !13436
  %2 = bitcast %struct.ListBase* %eloops to i8*, !dbg !13436
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !13436
  call void @llvm.dbg.declare(metadata %struct.BMEdgeLoopStore** %el_store, metadata !13437, metadata !DIExpression()), !dbg !13441
  %3 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !13442
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %3, i8 zeroext 2, i8* null), !dbg !13442
  %4 = bitcast i8* %call to %struct.BMEdge*, !dbg !13442
  store %struct.BMEdge* %4, %struct.BMEdge** %e, align 8, !dbg !13442
  br label %for.cond, !dbg !13442

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13444
  %tobool = icmp ne %struct.BMEdge* %5, null, !dbg !13442
  br i1 %tobool, label %for.body, label %for.end, !dbg !13442

for.body:                                         ; preds = %for.cond
  %6 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13446
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %6, i32 0, i32 0, !dbg !13446
  %7 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !13446
  %head1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %7, i32 0, i32 0, !dbg !13446
  %call2 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head1, i8 zeroext 1), !dbg !13446
  %conv = zext i8 %call2 to i32, !dbg !13446
  call void @_bm_elem_flag_set(%struct.BMHeader* %head, i8 zeroext 16, i32 %conv), !dbg !13446
  br label %for.inc, !dbg !13448

for.inc:                                          ; preds = %for.body
  %call3 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !13444
  %8 = bitcast i8* %call3 to %struct.BMEdge*, !dbg !13444
  store %struct.BMEdge* %8, %struct.BMEdge** %e, align 8, !dbg !13444
  br label %for.cond, !dbg !13444, !llvm.loop !13449

for.end:                                          ; preds = %for.cond
  %9 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !13451
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !13452
  %11 = bitcast %struct.BMesh* %10 to i8*, !dbg !13452
  %call4 = call i32 @BM_mesh_edgeloops_find(%struct.BMesh* %9, %struct.ListBase* %eloops, i8 (%struct.BMEdge*, i8*)* @bm_edge_test_fill_grid_cb, i8* %11), !dbg !13453
  store i32 %call4, i32* %count, align 4, !dbg !13454
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %eloops, i32 0, i32 0, !dbg !13455
  %12 = load i8*, i8** %first, align 8, !dbg !13455
  %13 = bitcast i8* %12 to %struct.BMEdgeLoopStore*, !dbg !13456
  store %struct.BMEdgeLoopStore* %13, %struct.BMEdgeLoopStore** %el_store, align 8, !dbg !13457
  %14 = load i32, i32* %count, align 4, !dbg !13458
  %cmp = icmp eq i32 %14, 1, !dbg !13460
  br i1 %cmp, label %land.lhs.true, label %if.end111, !dbg !13461

land.lhs.true:                                    ; preds = %for.end
  %15 = load %struct.BMEdgeLoopStore*, %struct.BMEdgeLoopStore** %el_store, align 8, !dbg !13462
  %call6 = call zeroext i8 @BM_edgeloop_is_closed(%struct.BMEdgeLoopStore* %15), !dbg !13463
  %conv7 = zext i8 %call6 to i32, !dbg !13463
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !13463
  br i1 %tobool8, label %land.lhs.true9, label %if.end111, !dbg !13464

land.lhs.true9:                                   ; preds = %land.lhs.true
  %16 = load %struct.BMEdgeLoopStore*, %struct.BMEdgeLoopStore** %el_store, align 8, !dbg !13465
  %call10 = call i32 @BM_edgeloop_length_get(%struct.BMEdgeLoopStore* %16), !dbg !13466
  %and = and i32 %call10, 1, !dbg !13467
  %cmp11 = icmp eq i32 %and, 0, !dbg !13468
  br i1 %cmp11, label %if.then, label %if.end111, !dbg !13469

if.then:                                          ; preds = %land.lhs.true9
  call void @llvm.dbg.declare(metadata i32* %verts_len, metadata !13470, metadata !DIExpression()), !dbg !13472
  %17 = load %struct.BMEdgeLoopStore*, %struct.BMEdgeLoopStore** %el_store, align 8, !dbg !13473
  %call13 = call i32 @BM_edgeloop_length_get(%struct.BMEdgeLoopStore* %17), !dbg !13474
  store i32 %call13, i32* %verts_len, align 4, !dbg !13472
  call void @llvm.dbg.declare(metadata %struct.ListBase** %verts, metadata !13475, metadata !DIExpression()), !dbg !13476
  %18 = load %struct.BMEdgeLoopStore*, %struct.BMEdgeLoopStore** %el_store, align 8, !dbg !13477
  %call14 = call %struct.ListBase* @BM_edgeloop_verts_get(%struct.BMEdgeLoopStore* %18), !dbg !13478
  store %struct.ListBase* %call14, %struct.ListBase** %verts, align 8, !dbg !13476
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v_act, metadata !13479, metadata !DIExpression()), !dbg !13480
  %19 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !13481
  %call15 = call %struct.BMVert* @BM_mesh_active_vert_get(%struct.BMesh* %19), !dbg !13482
  store %struct.BMVert* %call15, %struct.BMVert** %v_act, align 8, !dbg !13480
  call void @llvm.dbg.declare(metadata %struct.LinkData** %v_act_link, metadata !13483, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.declare(metadata %struct.BMEdge*** %edges, metadata !13493, metadata !DIExpression()), !dbg !13494
  %20 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13495
  %21 = load i32, i32* %verts_len, align 4, !dbg !13496
  %conv16 = sext i32 %21 to i64, !dbg !13496
  %mul = mul i64 8, %conv16, !dbg !13497
  %call17 = call i8* %20(i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.edbm_fill_grid_prepare, i64 0, i64 0)), !dbg !13495
  %22 = bitcast i8* %call17 to %struct.BMEdge**, !dbg !13495
  store %struct.BMEdge** %22, %struct.BMEdge*** %edges, align 8, !dbg !13494
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13498, metadata !DIExpression()), !dbg !13499
  %23 = load %struct.BMVert*, %struct.BMVert** %v_act, align 8, !dbg !13500
  %tobool18 = icmp ne %struct.BMVert* %23, null, !dbg !13500
  br i1 %tobool18, label %land.lhs.true19, label %if.else, !dbg !13502

land.lhs.true19:                                  ; preds = %if.then
  %24 = load %struct.ListBase*, %struct.ListBase** %verts, align 8, !dbg !13503
  %25 = load %struct.BMVert*, %struct.BMVert** %v_act, align 8, !dbg !13504
  %26 = bitcast %struct.BMVert* %25 to i8*, !dbg !13504
  %call20 = call i8* @BLI_findptr(%struct.ListBase* %24, i8* %26, i32 16), !dbg !13505
  %27 = bitcast i8* %call20 to %struct.LinkData*, !dbg !13505
  store %struct.LinkData* %27, %struct.LinkData** %v_act_link, align 8, !dbg !13506
  %tobool21 = icmp ne %struct.LinkData* %27, null, !dbg !13506
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !13507

if.then22:                                        ; preds = %land.lhs.true19
  br label %if.end36, !dbg !13508

if.else:                                          ; preds = %land.lhs.true19, %if.then
  call void @llvm.dbg.declare(metadata %struct.LinkData** %v_link, metadata !13510, metadata !DIExpression()), !dbg !13512
  call void @llvm.dbg.declare(metadata %struct.LinkData** %v_link_best, metadata !13513, metadata !DIExpression()), !dbg !13514
  store %struct.LinkData* null, %struct.LinkData** %v_link_best, align 8, !dbg !13514
  call void @llvm.dbg.declare(metadata float* %angle_best, metadata !13515, metadata !DIExpression()), !dbg !13516
  store float -1.000000e+00, float* %angle_best, align 4, !dbg !13516
  %28 = load %struct.ListBase*, %struct.ListBase** %verts, align 8, !dbg !13517
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %28, i32 0, i32 0, !dbg !13519
  %29 = load i8*, i8** %first23, align 8, !dbg !13519
  %30 = bitcast i8* %29 to %struct.LinkData*, !dbg !13517
  store %struct.LinkData* %30, %struct.LinkData** %v_link, align 8, !dbg !13520
  br label %for.cond24, !dbg !13521

for.cond24:                                       ; preds = %for.inc33, %if.else
  %31 = load %struct.LinkData*, %struct.LinkData** %v_link, align 8, !dbg !13522
  %tobool25 = icmp ne %struct.LinkData* %31, null, !dbg !13524
  br i1 %tobool25, label %for.body26, label %for.end34, !dbg !13524

for.body26:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata float* %angle, metadata !13525, metadata !DIExpression()), !dbg !13527
  %32 = load %struct.LinkData*, %struct.LinkData** %v_link, align 8, !dbg !13528
  %data = getelementptr inbounds %struct.LinkData, %struct.LinkData* %32, i32 0, i32 2, !dbg !13529
  %33 = load i8*, i8** %data, align 8, !dbg !13529
  %34 = bitcast i8* %33 to %struct.BMVert*, !dbg !13528
  %call27 = call float @edbm_fill_grid_vert_tag_angle(%struct.BMVert* %34), !dbg !13530
  store float %call27, float* %angle, align 4, !dbg !13527
  %35 = load float, float* %angle, align 4, !dbg !13531
  %36 = load float, float* %angle_best, align 4, !dbg !13533
  %cmp28 = fcmp ogt float %35, %36, !dbg !13534
  br i1 %cmp28, label %if.then32, label %lor.lhs.false, !dbg !13535

lor.lhs.false:                                    ; preds = %for.body26
  %37 = load %struct.LinkData*, %struct.LinkData** %v_link_best, align 8, !dbg !13536
  %cmp30 = icmp eq %struct.LinkData* %37, null, !dbg !13537
  br i1 %cmp30, label %if.then32, label %if.end, !dbg !13538

if.then32:                                        ; preds = %lor.lhs.false, %for.body26
  %38 = load float, float* %angle, align 4, !dbg !13539
  store float %38, float* %angle_best, align 4, !dbg !13541
  %39 = load %struct.LinkData*, %struct.LinkData** %v_link, align 8, !dbg !13542
  store %struct.LinkData* %39, %struct.LinkData** %v_link_best, align 8, !dbg !13543
  br label %if.end, !dbg !13544

if.end:                                           ; preds = %if.then32, %lor.lhs.false
  br label %for.inc33, !dbg !13545

for.inc33:                                        ; preds = %if.end
  %40 = load %struct.LinkData*, %struct.LinkData** %v_link, align 8, !dbg !13546
  %next = getelementptr inbounds %struct.LinkData, %struct.LinkData* %40, i32 0, i32 0, !dbg !13547
  %41 = load %struct.LinkData*, %struct.LinkData** %next, align 8, !dbg !13547
  store %struct.LinkData* %41, %struct.LinkData** %v_link, align 8, !dbg !13548
  br label %for.cond24, !dbg !13549, !llvm.loop !13550

for.end34:                                        ; preds = %for.cond24
  %42 = load %struct.LinkData*, %struct.LinkData** %v_link_best, align 8, !dbg !13552
  store %struct.LinkData* %42, %struct.LinkData** %v_act_link, align 8, !dbg !13553
  %43 = load %struct.LinkData*, %struct.LinkData** %v_act_link, align 8, !dbg !13554
  %data35 = getelementptr inbounds %struct.LinkData, %struct.LinkData* %43, i32 0, i32 2, !dbg !13555
  %44 = load i8*, i8** %data35, align 8, !dbg !13555
  %45 = bitcast i8* %44 to %struct.BMVert*, !dbg !13554
  store %struct.BMVert* %45, %struct.BMVert** %v_act, align 8, !dbg !13556
  br label %if.end36

if.end36:                                         ; preds = %for.end34, %if.then22
  %46 = load i32, i32* %offset.addr, align 4, !dbg !13557
  %cmp37 = icmp ne i32 %46, 0, !dbg !13559
  br i1 %cmp37, label %if.then39, label %if.end42, !dbg !13560

if.then39:                                        ; preds = %if.end36
  %47 = load %struct.ListBase*, %struct.ListBase** %verts, align 8, !dbg !13561
  %48 = load i32, i32* %offset.addr, align 4, !dbg !13563
  %call40 = call i8* @BLI_findlink(%struct.ListBase* %47, i32 %48), !dbg !13564
  %49 = bitcast i8* %call40 to %struct.LinkData*, !dbg !13564
  store %struct.LinkData* %49, %struct.LinkData** %v_act_link, align 8, !dbg !13565
  %50 = load %struct.LinkData*, %struct.LinkData** %v_act_link, align 8, !dbg !13566
  %data41 = getelementptr inbounds %struct.LinkData, %struct.LinkData* %50, i32 0, i32 2, !dbg !13567
  %51 = load i8*, i8** %data41, align 8, !dbg !13567
  %52 = bitcast i8* %51 to %struct.BMVert*, !dbg !13566
  store %struct.BMVert* %52, %struct.BMVert** %v_act, align 8, !dbg !13568
  br label %if.end42, !dbg !13569

if.end42:                                         ; preds = %if.then39, %if.end36
  %53 = load %struct.ListBase*, %struct.ListBase** %verts, align 8, !dbg !13570
  %54 = load %struct.LinkData*, %struct.LinkData** %v_act_link, align 8, !dbg !13571
  %55 = bitcast %struct.LinkData* %54 to i8*, !dbg !13571
  call void @BLI_listbase_rotate_first(%struct.ListBase* %53, i8* %55), !dbg !13572
  %56 = load %struct.BMEdgeLoopStore*, %struct.BMEdgeLoopStore** %el_store, align 8, !dbg !13573
  %57 = load %struct.BMEdge**, %struct.BMEdge*** %edges, align 8, !dbg !13574
  call void @BM_edgeloop_edges_get(%struct.BMEdgeLoopStore* %56, %struct.BMEdge** %57), !dbg !13575
  %58 = load i8, i8* %span_calc.addr, align 1, !dbg !13576
  %tobool43 = icmp ne i8 %58, 0, !dbg !13576
  br i1 %tobool43, label %if.then44, label %if.end96, !dbg !13578

if.then44:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata %struct.SortPointerByFloat** %ele_sort, metadata !13579, metadata !DIExpression()), !dbg !13587
  %59 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13588
  %60 = load i32, i32* %verts_len, align 4, !dbg !13589
  %conv45 = sext i32 %60 to i64, !dbg !13589
  %mul46 = mul i64 16, %conv45, !dbg !13590
  %call47 = call i8* %59(i64 %mul46, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.edbm_fill_grid_prepare, i64 0, i64 0)), !dbg !13588
  %61 = bitcast i8* %call47 to %struct.SortPointerByFloat*, !dbg !13588
  store %struct.SortPointerByFloat* %61, %struct.SortPointerByFloat** %ele_sort, align 8, !dbg !13587
  call void @llvm.dbg.declare(metadata %struct.LinkData** %v_link48, metadata !13591, metadata !DIExpression()), !dbg !13592
  %62 = load %struct.ListBase*, %struct.ListBase** %verts, align 8, !dbg !13593
  %first49 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %62, i32 0, i32 0, !dbg !13595
  %63 = load i8*, i8** %first49, align 8, !dbg !13595
  %64 = bitcast i8* %63 to %struct.LinkData*, !dbg !13593
  store %struct.LinkData* %64, %struct.LinkData** %v_link48, align 8, !dbg !13596
  store i32 0, i32* %i, align 4, !dbg !13597
  br label %for.cond50, !dbg !13598

for.cond50:                                       ; preds = %for.inc60, %if.then44
  %65 = load %struct.LinkData*, %struct.LinkData** %v_link48, align 8, !dbg !13599
  %tobool51 = icmp ne %struct.LinkData* %65, null, !dbg !13601
  br i1 %tobool51, label %for.body52, label %for.end62, !dbg !13601

for.body52:                                       ; preds = %for.cond50
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v, metadata !13602, metadata !DIExpression()), !dbg !13604
  %66 = load %struct.LinkData*, %struct.LinkData** %v_link48, align 8, !dbg !13605
  %data53 = getelementptr inbounds %struct.LinkData, %struct.LinkData* %66, i32 0, i32 2, !dbg !13606
  %67 = load i8*, i8** %data53, align 8, !dbg !13606
  %68 = bitcast i8* %67 to %struct.BMVert*, !dbg !13605
  store %struct.BMVert* %68, %struct.BMVert** %v, align 8, !dbg !13604
  call void @llvm.dbg.declare(metadata float* %angle54, metadata !13607, metadata !DIExpression()), !dbg !13608
  %69 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !13609
  %call55 = call float @edbm_fill_grid_vert_tag_angle(%struct.BMVert* %69), !dbg !13610
  store float %call55, float* %angle54, align 4, !dbg !13608
  %70 = load float, float* %angle54, align 4, !dbg !13611
  %71 = load %struct.SortPointerByFloat*, %struct.SortPointerByFloat** %ele_sort, align 8, !dbg !13612
  %72 = load i32, i32* %i, align 4, !dbg !13613
  %idxprom = sext i32 %72 to i64, !dbg !13612
  %arrayidx = getelementptr inbounds %struct.SortPointerByFloat, %struct.SortPointerByFloat* %71, i64 %idxprom, !dbg !13612
  %sort_value = getelementptr inbounds %struct.SortPointerByFloat, %struct.SortPointerByFloat* %arrayidx, i32 0, i32 0, !dbg !13614
  store float %70, float* %sort_value, align 8, !dbg !13615
  %73 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !13616
  %74 = bitcast %struct.BMVert* %73 to i8*, !dbg !13616
  %75 = load %struct.SortPointerByFloat*, %struct.SortPointerByFloat** %ele_sort, align 8, !dbg !13617
  %76 = load i32, i32* %i, align 4, !dbg !13618
  %idxprom56 = sext i32 %76 to i64, !dbg !13617
  %arrayidx57 = getelementptr inbounds %struct.SortPointerByFloat, %struct.SortPointerByFloat* %75, i64 %idxprom56, !dbg !13617
  %data58 = getelementptr inbounds %struct.SortPointerByFloat, %struct.SortPointerByFloat* %arrayidx57, i32 0, i32 1, !dbg !13619
  store i8* %74, i8** %data58, align 8, !dbg !13620
  %77 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !13621
  %head59 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %77, i32 0, i32 0, !dbg !13621
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head59, i8 zeroext 16), !dbg !13621
  br label %for.inc60, !dbg !13622

for.inc60:                                        ; preds = %for.body52
  %78 = load %struct.LinkData*, %struct.LinkData** %v_link48, align 8, !dbg !13623
  %next61 = getelementptr inbounds %struct.LinkData, %struct.LinkData* %78, i32 0, i32 0, !dbg !13624
  %79 = load %struct.LinkData*, %struct.LinkData** %next61, align 8, !dbg !13624
  store %struct.LinkData* %79, %struct.LinkData** %v_link48, align 8, !dbg !13625
  %80 = load i32, i32* %i, align 4, !dbg !13626
  %inc = add nsw i32 %80, 1, !dbg !13626
  store i32 %inc, i32* %i, align 4, !dbg !13626
  br label %for.cond50, !dbg !13627, !llvm.loop !13628

for.end62:                                        ; preds = %for.cond50
  %81 = load %struct.SortPointerByFloat*, %struct.SortPointerByFloat** %ele_sort, align 8, !dbg !13630
  %82 = bitcast %struct.SortPointerByFloat* %81 to i8*, !dbg !13630
  %83 = load i32, i32* %verts_len, align 4, !dbg !13631
  %conv63 = sext i32 %83 to i64, !dbg !13631
  call void @qsort(i8* %82, i64 %conv63, i64 16, i32 (i8*, i8*)* @BLI_sortutil_cmp_float_reverse), !dbg !13632
  store i32 0, i32* %i, align 4, !dbg !13633
  br label %for.cond64, !dbg !13635

for.cond64:                                       ; preds = %for.inc73, %for.end62
  %84 = load i32, i32* %i, align 4, !dbg !13636
  %cmp65 = icmp slt i32 %84, 4, !dbg !13638
  br i1 %cmp65, label %for.body67, label %for.end75, !dbg !13639

for.body67:                                       ; preds = %for.cond64
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v68, metadata !13640, metadata !DIExpression()), !dbg !13642
  %85 = load %struct.SortPointerByFloat*, %struct.SortPointerByFloat** %ele_sort, align 8, !dbg !13643
  %86 = load i32, i32* %i, align 4, !dbg !13644
  %idxprom69 = sext i32 %86 to i64, !dbg !13643
  %arrayidx70 = getelementptr inbounds %struct.SortPointerByFloat, %struct.SortPointerByFloat* %85, i64 %idxprom69, !dbg !13643
  %data71 = getelementptr inbounds %struct.SortPointerByFloat, %struct.SortPointerByFloat* %arrayidx70, i32 0, i32 1, !dbg !13645
  %87 = load i8*, i8** %data71, align 8, !dbg !13645
  %88 = bitcast i8* %87 to %struct.BMVert*, !dbg !13643
  store %struct.BMVert* %88, %struct.BMVert** %v68, align 8, !dbg !13642
  %89 = load %struct.BMVert*, %struct.BMVert** %v68, align 8, !dbg !13646
  %head72 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %89, i32 0, i32 0, !dbg !13646
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head72, i8 zeroext 16), !dbg !13646
  br label %for.inc73, !dbg !13647

for.inc73:                                        ; preds = %for.body67
  %90 = load i32, i32* %i, align 4, !dbg !13648
  %inc74 = add nsw i32 %90, 1, !dbg !13648
  store i32 %inc74, i32* %i, align 4, !dbg !13648
  br label %for.cond64, !dbg !13649, !llvm.loop !13650

for.end75:                                        ; preds = %for.cond64
  %91 = load %struct.ListBase*, %struct.ListBase** %verts, align 8, !dbg !13652
  %first76 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %91, i32 0, i32 0, !dbg !13654
  %92 = load i8*, i8** %first76, align 8, !dbg !13654
  %93 = bitcast i8* %92 to %struct.LinkData*, !dbg !13652
  store %struct.LinkData* %93, %struct.LinkData** %v_link48, align 8, !dbg !13655
  store i32 0, i32* %i, align 4, !dbg !13656
  br label %for.cond77, !dbg !13657

for.cond77:                                       ; preds = %for.inc92, %for.end75
  %94 = load i32, i32* %i, align 4, !dbg !13658
  %95 = load i32, i32* %verts_len, align 4, !dbg !13660
  %div = sdiv i32 %95, 2, !dbg !13661
  %cmp78 = icmp slt i32 %94, %div, !dbg !13662
  br i1 %cmp78, label %for.body80, label %for.end95, !dbg !13663

for.body80:                                       ; preds = %for.cond77
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v81, metadata !13664, metadata !DIExpression()), !dbg !13666
  %96 = load %struct.LinkData*, %struct.LinkData** %v_link48, align 8, !dbg !13667
  %data82 = getelementptr inbounds %struct.LinkData, %struct.LinkData* %96, i32 0, i32 2, !dbg !13668
  %97 = load i8*, i8** %data82, align 8, !dbg !13668
  %98 = bitcast i8* %97 to %struct.BMVert*, !dbg !13667
  store %struct.BMVert* %98, %struct.BMVert** %v81, align 8, !dbg !13666
  %99 = load %struct.BMVert*, %struct.BMVert** %v81, align 8, !dbg !13669
  %head83 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %99, i32 0, i32 0, !dbg !13669
  %call84 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head83, i8 zeroext 16), !dbg !13669
  %tobool85 = icmp ne i8 %call84, 0, !dbg !13669
  br i1 %tobool85, label %if.then86, label %if.end91, !dbg !13671

if.then86:                                        ; preds = %for.body80
  %100 = load %struct.BMVert*, %struct.BMVert** %v81, align 8, !dbg !13672
  %101 = load %struct.BMVert*, %struct.BMVert** %v_act, align 8, !dbg !13675
  %cmp87 = icmp ne %struct.BMVert* %100, %101, !dbg !13676
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !13677

if.then89:                                        ; preds = %if.then86
  %102 = load i32, i32* %i, align 4, !dbg !13678
  store i32 %102, i32* %span, align 4, !dbg !13680
  br label %for.end95, !dbg !13681

if.end90:                                         ; preds = %if.then86
  br label %if.end91, !dbg !13682

if.end91:                                         ; preds = %if.end90, %for.body80
  br label %for.inc92, !dbg !13683

for.inc92:                                        ; preds = %if.end91
  %103 = load %struct.LinkData*, %struct.LinkData** %v_link48, align 8, !dbg !13684
  %next93 = getelementptr inbounds %struct.LinkData, %struct.LinkData* %103, i32 0, i32 0, !dbg !13685
  %104 = load %struct.LinkData*, %struct.LinkData** %next93, align 8, !dbg !13685
  store %struct.LinkData* %104, %struct.LinkData** %v_link48, align 8, !dbg !13686
  %105 = load i32, i32* %i, align 4, !dbg !13687
  %inc94 = add nsw i32 %105, 1, !dbg !13687
  store i32 %inc94, i32* %i, align 4, !dbg !13687
  br label %for.cond77, !dbg !13688, !llvm.loop !13689

for.end95:                                        ; preds = %if.then89, %for.cond77
  %106 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13691
  %107 = load %struct.SortPointerByFloat*, %struct.SortPointerByFloat** %ele_sort, align 8, !dbg !13692
  %108 = bitcast %struct.SortPointerByFloat* %107 to i8*, !dbg !13692
  call void %106(i8* %108), !dbg !13691
  br label %if.end96, !dbg !13693

if.end96:                                         ; preds = %for.end95, %if.end42
  store i32 0, i32* %i, align 4, !dbg !13694
  br label %for.cond97, !dbg !13696

for.cond97:                                       ; preds = %for.inc108, %if.end96
  %109 = load i32, i32* %i, align 4, !dbg !13697
  %110 = load i32, i32* %span, align 4, !dbg !13699
  %cmp98 = icmp slt i32 %109, %110, !dbg !13700
  br i1 %cmp98, label %for.body100, label %for.end110, !dbg !13701

for.body100:                                      ; preds = %for.cond97
  %111 = load %struct.BMEdge**, %struct.BMEdge*** %edges, align 8, !dbg !13702
  %112 = load i32, i32* %i, align 4, !dbg !13702
  %idxprom101 = sext i32 %112 to i64, !dbg !13702
  %arrayidx102 = getelementptr inbounds %struct.BMEdge*, %struct.BMEdge** %111, i64 %idxprom101, !dbg !13702
  %113 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx102, align 8, !dbg !13702
  %head103 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %113, i32 0, i32 0, !dbg !13702
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head103, i8 zeroext 16), !dbg !13702
  %114 = load %struct.BMEdge**, %struct.BMEdge*** %edges, align 8, !dbg !13704
  %115 = load i32, i32* %verts_len, align 4, !dbg !13704
  %div104 = sdiv i32 %115, 2, !dbg !13704
  %116 = load i32, i32* %i, align 4, !dbg !13704
  %add = add nsw i32 %div104, %116, !dbg !13704
  %idxprom105 = sext i32 %add to i64, !dbg !13704
  %arrayidx106 = getelementptr inbounds %struct.BMEdge*, %struct.BMEdge** %114, i64 %idxprom105, !dbg !13704
  %117 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx106, align 8, !dbg !13704
  %head107 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %117, i32 0, i32 0, !dbg !13704
  call void @_bm_elem_flag_disable(%struct.BMHeader* %head107, i8 zeroext 16), !dbg !13704
  br label %for.inc108, !dbg !13705

for.inc108:                                       ; preds = %for.body100
  %118 = load i32, i32* %i, align 4, !dbg !13706
  %inc109 = add nsw i32 %118, 1, !dbg !13706
  store i32 %inc109, i32* %i, align 4, !dbg !13706
  br label %for.cond97, !dbg !13707, !llvm.loop !13708

for.end110:                                       ; preds = %for.cond97
  %119 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13710
  %120 = load %struct.BMEdge**, %struct.BMEdge*** %edges, align 8, !dbg !13711
  %121 = bitcast %struct.BMEdge** %120 to i8*, !dbg !13711
  call void %119(i8* %121), !dbg !13710
  br label %if.end111, !dbg !13712

if.end111:                                        ; preds = %for.end110, %land.lhs.true9, %land.lhs.true, %for.end
  call void @BM_mesh_edgeloops_free(%struct.ListBase* %eloops), !dbg !13713
  %122 = load i32, i32* %span, align 4, !dbg !13714
  %123 = load i32*, i32** %r_span.addr, align 8, !dbg !13715
  store i32 %122, i32* %123, align 4, !dbg !13716
  ret void, !dbg !13717
}

declare dso_local void @RNA_property_int_set(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local i32 @BM_mesh_edgeloops_find(%struct.BMesh*, %struct.ListBase*, i8 (%struct.BMEdge*, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bm_edge_test_fill_grid_cb(%struct.BMEdge* %e, i8* %UNUSED_bm_v) #0 !dbg !13718 {
entry:
  %e.addr = alloca %struct.BMEdge*, align 8
  %UNUSED_bm_v.addr = alloca i8*, align 8
  store %struct.BMEdge* %e, %struct.BMEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e.addr, metadata !13721, metadata !DIExpression()), !dbg !13722
  store i8* %UNUSED_bm_v, i8** %UNUSED_bm_v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_bm_v.addr, metadata !13723, metadata !DIExpression()), !dbg !13724
  %0 = load %struct.BMEdge*, %struct.BMEdge** %e.addr, align 8, !dbg !13725
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %0, i32 0, i32 0, !dbg !13725
  %call = call zeroext i8 @_bm_elem_flag_test_bool(%struct.BMHeader* %head, i8 zeroext 16), !dbg !13725
  ret i8 %call, !dbg !13726
}

declare dso_local zeroext i8 @BM_edgeloop_is_closed(%struct.BMEdgeLoopStore*) #2

declare dso_local i32 @BM_edgeloop_length_get(%struct.BMEdgeLoopStore*) #2

declare dso_local %struct.ListBase* @BM_edgeloop_verts_get(%struct.BMEdgeLoopStore*) #2

declare dso_local %struct.BMVert* @BM_mesh_active_vert_get(%struct.BMesh*) #2

declare dso_local i8* @BLI_findptr(%struct.ListBase*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @edbm_fill_grid_vert_tag_angle(%struct.BMVert* %v) #0 !dbg !13727 {
entry:
  %v.addr = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %e_iter = alloca %struct.BMEdge*, align 8
  %v_pair = alloca [2 x %struct.BMVert*], align 16
  %i = alloca i32, align 4
  store %struct.BMVert* %v, %struct.BMVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %v.addr, metadata !13730, metadata !DIExpression()), !dbg !13731
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !13732, metadata !DIExpression()), !dbg !13733
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e_iter, metadata !13734, metadata !DIExpression()), !dbg !13735
  call void @llvm.dbg.declare(metadata [2 x %struct.BMVert*]* %v_pair, metadata !13736, metadata !DIExpression()), !dbg !13738
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13739, metadata !DIExpression()), !dbg !13740
  store i32 0, i32* %i, align 4, !dbg !13740
  %0 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !13741
  %1 = bitcast %struct.BMVert* %0 to i8*, !dbg !13741
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* null, i8 zeroext 4, i8* %1), !dbg !13741
  %2 = bitcast i8* %call to %struct.BMEdge*, !dbg !13741
  store %struct.BMEdge* %2, %struct.BMEdge** %e_iter, align 8, !dbg !13741
  br label %for.cond, !dbg !13741

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.BMEdge*, %struct.BMEdge** %e_iter, align 8, !dbg !13743
  %tobool = icmp ne %struct.BMEdge* %3, null, !dbg !13741
  br i1 %tobool, label %for.body, label %for.end, !dbg !13741

for.body:                                         ; preds = %for.cond
  %4 = load %struct.BMEdge*, %struct.BMEdge** %e_iter, align 8, !dbg !13745
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %4, i32 0, i32 0, !dbg !13745
  %call1 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 16), !dbg !13745
  %tobool2 = icmp ne i8 %call1, 0, !dbg !13745
  br i1 %tobool2, label %if.then, label %if.end, !dbg !13748

if.then:                                          ; preds = %for.body
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e_iter, align 8, !dbg !13749
  %6 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !13751
  %call3 = call %struct.BMVert* @BM_edge_other_vert(%struct.BMEdge* %5, %struct.BMVert* %6), !dbg !13752
  %7 = load i32, i32* %i, align 4, !dbg !13753
  %inc = add nsw i32 %7, 1, !dbg !13753
  store i32 %inc, i32* %i, align 4, !dbg !13753
  %idxprom = sext i32 %7 to i64, !dbg !13754
  %arrayidx = getelementptr inbounds [2 x %struct.BMVert*], [2 x %struct.BMVert*]* %v_pair, i64 0, i64 %idxprom, !dbg !13754
  store %struct.BMVert* %call3, %struct.BMVert** %arrayidx, align 8, !dbg !13755
  br label %if.end, !dbg !13756

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !13757

for.inc:                                          ; preds = %if.end
  %call4 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !13743
  %8 = bitcast i8* %call4 to %struct.BMEdge*, !dbg !13743
  store %struct.BMEdge* %8, %struct.BMEdge** %e_iter, align 8, !dbg !13743
  br label %for.cond, !dbg !13743, !llvm.loop !13758

for.end:                                          ; preds = %for.cond
  %arrayidx5 = getelementptr inbounds [2 x %struct.BMVert*], [2 x %struct.BMVert*]* %v_pair, i64 0, i64 0, !dbg !13760
  %9 = load %struct.BMVert*, %struct.BMVert** %arrayidx5, align 16, !dbg !13760
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %9, i32 0, i32 2, !dbg !13761
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13760
  %10 = load %struct.BMVert*, %struct.BMVert** %v.addr, align 8, !dbg !13762
  %co6 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %10, i32 0, i32 2, !dbg !13763
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %co6, i64 0, i64 0, !dbg !13762
  %arrayidx8 = getelementptr inbounds [2 x %struct.BMVert*], [2 x %struct.BMVert*]* %v_pair, i64 0, i64 1, !dbg !13764
  %11 = load %struct.BMVert*, %struct.BMVert** %arrayidx8, align 8, !dbg !13764
  %co9 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %11, i32 0, i32 2, !dbg !13765
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co9, i64 0, i64 0, !dbg !13764
  %call11 = call float @angle_v3v3v3(float* %arraydecay, float* %arraydecay7, float* %arraydecay10), !dbg !13766
  %sub = fsub float 0x400921FB60000000, %call11, !dbg !13767
  %12 = call float @llvm.fabs.f32(float %sub), !dbg !13768
  ret float %12, !dbg !13769
}

declare dso_local void @BLI_listbase_rotate_first(%struct.ListBase*, i8*) #2

declare dso_local void @BM_edgeloop_edges_get(%struct.BMEdgeLoopStore*, %struct.BMEdge**) #2

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

declare dso_local i32 @BLI_sortutil_cmp_float_reverse(i8*, i8*) #2

declare dso_local void @BM_mesh_edgeloops_free(%struct.ListBase*) #2

declare dso_local float @angle_v3v3v3(float*, float*, float*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

declare dso_local float @BM_edge_calc_face_angle_ex(%struct.BMEdge*, float) #2

declare dso_local void @EDBM_mesh_normals_update(%struct.BMEditMesh*) #2

declare dso_local %struct.RegionView3D* @ED_view3d_context_rv3d(%struct.bContext*) #2

declare dso_local i32 @RNA_property_enum_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sort_bmelem_flag(%struct.Scene* %scene, %struct.Object* %ob, %struct.View3D* %v3d, %struct.RegionView3D* %rv3d, i32 %types, i32 %flag, i32 %action, i32 %reverse, i32 %seed) #0 !dbg !13770 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %v3d.addr = alloca %struct.View3D*, align 8
  %rv3d.addr = alloca %struct.RegionView3D*, align 8
  %types.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %action.addr = alloca i32, align 4
  %reverse.addr = alloca i32, align 4
  %seed.addr = alloca i32, align 4
  %em = alloca %struct.BMEditMesh*, align 8
  %ve = alloca %struct.BMVert*, align 8
  %ed = alloca %struct.BMEdge*, align 8
  %fa = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  %pblock = alloca [3 x i8*], align 16
  %pb = alloca i8*, align 8
  %sblock = alloca [3 x %struct.BMElemSort*], align 16
  %sb = alloca %struct.BMElemSort*, align 8
  %map = alloca [3 x i32*], align 16
  %mp = alloca i32*, align 8
  %totelem = alloca [3 x i32], align 4
  %affected = alloca [3 x i32], align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %mat = alloca [4 x [4 x float]], align 16
  %fact = alloca float, align 4
  %coidx = alloca i32, align 4
  %co = alloca [3 x float], align 4
  %co89 = alloca [3 x float], align 4
  %co143 = alloca [3 x float], align 4
  %cur = alloca [3 x float], align 4
  %mat174 = alloca [4 x [4 x float]], align 16
  %fact175 = alloca float, align 4
  %co267 = alloca [3 x float], align 4
  %co322 = alloca [3 x float], align 4
  %srt375 = alloca float, align 4
  %tbuf = alloca [3 x i32*], align 16
  %tb = alloca i32*, align 8
  %tot = alloca i32, align 4
  %aff = alloca i32, align 4
  %rng = alloca %struct.RNG*, align 8
  %rng625 = alloca %struct.RNG*, align 8
  %rng671 = alloca %struct.RNG*, align 8
  %p_blk = alloca i8*, align 8
  %s_blk = alloca %struct.BMElemSort*, align 8
  %tot914 = alloca i32, align 4
  %aff917 = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !13774, metadata !DIExpression()), !dbg !13775
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13776, metadata !DIExpression()), !dbg !13777
  store %struct.View3D* %v3d, %struct.View3D** %v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d.addr, metadata !13778, metadata !DIExpression()), !dbg !13779
  store %struct.RegionView3D* %rv3d, %struct.RegionView3D** %rv3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d.addr, metadata !13780, metadata !DIExpression()), !dbg !13781
  store i32 %types, i32* %types.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %types.addr, metadata !13782, metadata !DIExpression()), !dbg !13783
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !13784, metadata !DIExpression()), !dbg !13785
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !13786, metadata !DIExpression()), !dbg !13787
  store i32 %reverse, i32* %reverse.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reverse.addr, metadata !13788, metadata !DIExpression()), !dbg !13789
  store i32 %seed, i32* %seed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seed.addr, metadata !13790, metadata !DIExpression()), !dbg !13791
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !13792, metadata !DIExpression()), !dbg !13793
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13794
  %call = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %0), !dbg !13795
  store %struct.BMEditMesh* %call, %struct.BMEditMesh** %em, align 8, !dbg !13793
  call void @llvm.dbg.declare(metadata %struct.BMVert** %ve, metadata !13796, metadata !DIExpression()), !dbg !13797
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %ed, metadata !13798, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.declare(metadata %struct.BMFace** %fa, metadata !13800, metadata !DIExpression()), !dbg !13801
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !13802, metadata !DIExpression()), !dbg !13803
  call void @llvm.dbg.declare(metadata [3 x i8*]* %pblock, metadata !13804, metadata !DIExpression()), !dbg !13806
  %1 = bitcast [3 x i8*]* %pblock to i8*, !dbg !13806
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 24, i1 false), !dbg !13806
  call void @llvm.dbg.declare(metadata i8** %pb, metadata !13807, metadata !DIExpression()), !dbg !13808
  call void @llvm.dbg.declare(metadata [3 x %struct.BMElemSort*]* %sblock, metadata !13809, metadata !DIExpression()), !dbg !13817
  %2 = bitcast [3 x %struct.BMElemSort*]* %sblock to i8*, !dbg !13817
  call void @llvm.memset.p0i8.i64(i8* align 16 %2, i8 0, i64 24, i1 false), !dbg !13817
  call void @llvm.dbg.declare(metadata %struct.BMElemSort** %sb, metadata !13818, metadata !DIExpression()), !dbg !13819
  call void @llvm.dbg.declare(metadata [3 x i32*]* %map, metadata !13820, metadata !DIExpression()), !dbg !13822
  %3 = bitcast [3 x i32*]* %map to i8*, !dbg !13822
  call void @llvm.memset.p0i8.i64(i8* align 16 %3, i8 0, i64 24, i1 false), !dbg !13822
  call void @llvm.dbg.declare(metadata i32** %mp, metadata !13823, metadata !DIExpression()), !dbg !13824
  call void @llvm.dbg.declare(metadata [3 x i32]* %totelem, metadata !13825, metadata !DIExpression()), !dbg !13826
  %4 = bitcast [3 x i32]* %totelem to i8*, !dbg !13826
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 12, i1 false), !dbg !13826
  call void @llvm.dbg.declare(metadata [3 x i32]* %affected, metadata !13827, metadata !DIExpression()), !dbg !13828
  %5 = bitcast [3 x i32]* %affected to i8*, !dbg !13828
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 12, i1 false), !dbg !13828
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13829, metadata !DIExpression()), !dbg !13830
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13831, metadata !DIExpression()), !dbg !13832
  %6 = load i32, i32* %types.addr, align 4, !dbg !13833
  %tobool = icmp ne i32 %6, 0, !dbg !13833
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !13835

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %flag.addr, align 4, !dbg !13836
  %tobool1 = icmp ne i32 %7, 0, !dbg !13836
  br i1 %tobool1, label %land.lhs.true2, label %if.then, !dbg !13837

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load i32, i32* %action.addr, align 4, !dbg !13838
  %tobool3 = icmp ne i32 %8, 0, !dbg !13838
  br i1 %tobool3, label %if.end, label %if.then, !dbg !13839

if.then:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  br label %for.end972, !dbg !13840

if.end:                                           ; preds = %land.lhs.true2
  %9 = load i32, i32* %types.addr, align 4, !dbg !13841
  %and = and i32 %9, 1, !dbg !13843
  %tobool4 = icmp ne i32 %and, 0, !dbg !13843
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !13844

if.then5:                                         ; preds = %if.end
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13845
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 0, !dbg !13846
  %11 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !13846
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %11, i32 0, i32 0, !dbg !13847
  %12 = load i32, i32* %totvert, align 8, !dbg !13847
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !13848
  store i32 %12, i32* %arrayidx, align 4, !dbg !13849
  br label %if.end6, !dbg !13848

if.end6:                                          ; preds = %if.then5, %if.end
  %13 = load i32, i32* %types.addr, align 4, !dbg !13850
  %and7 = and i32 %13, 2, !dbg !13852
  %tobool8 = icmp ne i32 %and7, 0, !dbg !13852
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !13853

if.then9:                                         ; preds = %if.end6
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13854
  %bm10 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 0, !dbg !13855
  %15 = load %struct.BMesh*, %struct.BMesh** %bm10, align 8, !dbg !13855
  %totedge = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 1, !dbg !13856
  %16 = load i32, i32* %totedge, align 4, !dbg !13856
  %arrayidx11 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !13857
  store i32 %16, i32* %arrayidx11, align 4, !dbg !13858
  br label %if.end12, !dbg !13857

if.end12:                                         ; preds = %if.then9, %if.end6
  %17 = load i32, i32* %types.addr, align 4, !dbg !13859
  %and13 = and i32 %17, 8, !dbg !13861
  %tobool14 = icmp ne i32 %and13, 0, !dbg !13861
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !13862

if.then15:                                        ; preds = %if.end12
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13863
  %bm16 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %18, i32 0, i32 0, !dbg !13864
  %19 = load %struct.BMesh*, %struct.BMesh** %bm16, align 8, !dbg !13864
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %19, i32 0, i32 3, !dbg !13865
  %20 = load i32, i32* %totface, align 4, !dbg !13865
  %arrayidx17 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !13866
  store i32 %20, i32* %arrayidx17, align 4, !dbg !13867
  br label %if.end18, !dbg !13866

if.end18:                                         ; preds = %if.then15, %if.end12
  %21 = load i32, i32* %action.addr, align 4, !dbg !13868
  %cmp = icmp eq i32 %21, 1, !dbg !13868
  br i1 %cmp, label %if.then20, label %lor.lhs.false, !dbg !13868

lor.lhs.false:                                    ; preds = %if.end18
  %22 = load i32, i32* %action.addr, align 4, !dbg !13868
  %cmp19 = icmp eq i32 %22, 2, !dbg !13868
  br i1 %cmp19, label %if.then20, label %if.else170, !dbg !13870

if.then20:                                        ; preds = %lor.lhs.false, %if.end18
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !13871, metadata !DIExpression()), !dbg !13873
  call void @llvm.dbg.declare(metadata float* %fact, metadata !13874, metadata !DIExpression()), !dbg !13875
  %23 = load i32, i32* %reverse.addr, align 4, !dbg !13876
  %tobool21 = icmp ne i32 %23, 0, !dbg !13876
  %24 = zext i1 %tobool21 to i64, !dbg !13876
  %cond = select i1 %tobool21, double -1.000000e+00, double 1.000000e+00, !dbg !13876
  %conv = fptrunc double %cond to float, !dbg !13876
  store float %conv, float* %fact, align 4, !dbg !13875
  call void @llvm.dbg.declare(metadata i32* %coidx, metadata !13877, metadata !DIExpression()), !dbg !13878
  %25 = load i32, i32* %action.addr, align 4, !dbg !13879
  %cmp22 = icmp eq i32 %25, 1, !dbg !13880
  %26 = zext i1 %cmp22 to i64, !dbg !13881
  %cond24 = select i1 %cmp22, i32 2, i32 0, !dbg !13881
  store i32 %cond24, i32* %coidx, align 4, !dbg !13878
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13882
  %27 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d.addr, align 8, !dbg !13883
  %viewmat = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %27, i32 0, i32 1, !dbg !13884
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !13883
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13885
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 47, !dbg !13886
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !13885
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay25, [4 x float]* %arraydecay26), !dbg !13887
  %arrayidx27 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !13888
  %29 = load i32, i32* %arrayidx27, align 4, !dbg !13888
  %tobool28 = icmp ne i32 %29, 0, !dbg !13888
  br i1 %tobool28, label %if.then29, label %if.end65, !dbg !13890

if.then29:                                        ; preds = %if.then20
  %30 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13891
  %arrayidx30 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !13893
  %31 = load i32, i32* %arrayidx30, align 4, !dbg !13893
  %conv31 = sext i32 %31 to i64, !dbg !13893
  %mul = mul i64 1, %conv31, !dbg !13894
  %call32 = call i8* %30(i64 %mul, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.512, i64 0, i64 0)), !dbg !13891
  %arrayidx33 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 0, !dbg !13895
  store i8* %call32, i8** %arrayidx33, align 16, !dbg !13896
  store i8* %call32, i8** %pb, align 8, !dbg !13897
  %32 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13898
  %arrayidx34 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !13899
  %33 = load i32, i32* %arrayidx34, align 4, !dbg !13899
  %conv35 = sext i32 %33 to i64, !dbg !13899
  %mul36 = mul i64 8, %conv35, !dbg !13900
  %call37 = call i8* %32(i64 %mul36, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.513, i64 0, i64 0)), !dbg !13898
  %34 = bitcast i8* %call37 to %struct.BMElemSort*, !dbg !13898
  %arrayidx38 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 0, !dbg !13901
  store %struct.BMElemSort* %34, %struct.BMElemSort** %arrayidx38, align 16, !dbg !13902
  store %struct.BMElemSort* %34, %struct.BMElemSort** %sb, align 8, !dbg !13903
  %35 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13904
  %bm39 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %35, i32 0, i32 0, !dbg !13904
  %36 = load %struct.BMesh*, %struct.BMesh** %bm39, align 8, !dbg !13904
  %call40 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %36, i8 zeroext 1, i8* null), !dbg !13904
  %37 = bitcast i8* %call40 to %struct.BMVert*, !dbg !13904
  store %struct.BMVert* %37, %struct.BMVert** %ve, align 8, !dbg !13904
  store i32 0, i32* %i, align 4, !dbg !13904
  br label %for.cond, !dbg !13904

for.cond:                                         ; preds = %for.inc, %if.then29
  %38 = load %struct.BMVert*, %struct.BMVert** %ve, align 8, !dbg !13906
  %tobool41 = icmp ne %struct.BMVert* %38, null, !dbg !13904
  br i1 %tobool41, label %for.body, label %for.end, !dbg !13904

for.body:                                         ; preds = %for.cond
  %39 = load %struct.BMVert*, %struct.BMVert** %ve, align 8, !dbg !13908
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %39, i32 0, i32 0, !dbg !13908
  %40 = load i32, i32* %flag.addr, align 4, !dbg !13908
  %conv42 = trunc i32 %40 to i8, !dbg !13908
  %call43 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %conv42), !dbg !13908
  %tobool44 = icmp ne i8 %call43, 0, !dbg !13908
  br i1 %tobool44, label %if.then45, label %if.else, !dbg !13911

if.then45:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !13912, metadata !DIExpression()), !dbg !13914
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13915
  %arraydecay47 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13916
  %41 = load %struct.BMVert*, %struct.BMVert** %ve, align 8, !dbg !13917
  %co48 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %41, i32 0, i32 2, !dbg !13918
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %co48, i64 0, i64 0, !dbg !13917
  call void @mul_v3_m4v3(float* %arraydecay46, [4 x float]* %arraydecay47, float* %arraydecay49), !dbg !13919
  %42 = load i8*, i8** %pb, align 8, !dbg !13920
  %43 = load i32, i32* %i, align 4, !dbg !13921
  %idxprom = sext i32 %43 to i64, !dbg !13920
  %arrayidx50 = getelementptr inbounds i8, i8* %42, i64 %idxprom, !dbg !13920
  store i8 0, i8* %arrayidx50, align 1, !dbg !13922
  %44 = load i32, i32* %i, align 4, !dbg !13923
  %45 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !13924
  %arrayidx51 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 0, !dbg !13925
  %46 = load i32, i32* %arrayidx51, align 4, !dbg !13925
  %idxprom52 = sext i32 %46 to i64, !dbg !13924
  %arrayidx53 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %45, i64 %idxprom52, !dbg !13924
  %org_idx = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx53, i32 0, i32 1, !dbg !13926
  store i32 %44, i32* %org_idx, align 4, !dbg !13927
  %47 = load i32, i32* %coidx, align 4, !dbg !13928
  %idxprom54 = sext i32 %47 to i64, !dbg !13929
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 %idxprom54, !dbg !13929
  %48 = load float, float* %arrayidx55, align 4, !dbg !13929
  %49 = load float, float* %fact, align 4, !dbg !13930
  %mul56 = fmul float %48, %49, !dbg !13931
  %50 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !13932
  %arrayidx57 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 0, !dbg !13933
  %51 = load i32, i32* %arrayidx57, align 4, !dbg !13934
  %inc = add nsw i32 %51, 1, !dbg !13934
  store i32 %inc, i32* %arrayidx57, align 4, !dbg !13934
  %idxprom58 = sext i32 %51 to i64, !dbg !13932
  %arrayidx59 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %50, i64 %idxprom58, !dbg !13932
  %srt = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx59, i32 0, i32 0, !dbg !13935
  store float %mul56, float* %srt, align 4, !dbg !13936
  br label %if.end62, !dbg !13937

if.else:                                          ; preds = %for.body
  %52 = load i8*, i8** %pb, align 8, !dbg !13938
  %53 = load i32, i32* %i, align 4, !dbg !13940
  %idxprom60 = sext i32 %53 to i64, !dbg !13938
  %arrayidx61 = getelementptr inbounds i8, i8* %52, i64 %idxprom60, !dbg !13938
  store i8 1, i8* %arrayidx61, align 1, !dbg !13941
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then45
  br label %for.inc, !dbg !13942

for.inc:                                          ; preds = %if.end62
  %call63 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !13906
  %54 = bitcast i8* %call63 to %struct.BMVert*, !dbg !13906
  store %struct.BMVert* %54, %struct.BMVert** %ve, align 8, !dbg !13906
  %55 = load i32, i32* %i, align 4, !dbg !13906
  %inc64 = add nsw i32 %55, 1, !dbg !13906
  store i32 %inc64, i32* %i, align 4, !dbg !13906
  br label %for.cond, !dbg !13906, !llvm.loop !13943

for.end:                                          ; preds = %for.cond
  br label %if.end65, !dbg !13945

if.end65:                                         ; preds = %for.end, %if.then20
  %arrayidx66 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !13946
  %56 = load i32, i32* %arrayidx66, align 4, !dbg !13946
  %tobool67 = icmp ne i32 %56, 0, !dbg !13946
  br i1 %tobool67, label %if.then68, label %if.end119, !dbg !13948

if.then68:                                        ; preds = %if.end65
  %57 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13949
  %arrayidx69 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !13951
  %58 = load i32, i32* %arrayidx69, align 4, !dbg !13951
  %conv70 = sext i32 %58 to i64, !dbg !13951
  %mul71 = mul i64 1, %conv70, !dbg !13952
  %call72 = call i8* %57(i64 %mul71, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.514, i64 0, i64 0)), !dbg !13949
  %arrayidx73 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 1, !dbg !13953
  store i8* %call72, i8** %arrayidx73, align 8, !dbg !13954
  store i8* %call72, i8** %pb, align 8, !dbg !13955
  %59 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13956
  %arrayidx74 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !13957
  %60 = load i32, i32* %arrayidx74, align 4, !dbg !13957
  %conv75 = sext i32 %60 to i64, !dbg !13957
  %mul76 = mul i64 8, %conv75, !dbg !13958
  %call77 = call i8* %59(i64 %mul76, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.515, i64 0, i64 0)), !dbg !13956
  %61 = bitcast i8* %call77 to %struct.BMElemSort*, !dbg !13956
  %arrayidx78 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 1, !dbg !13959
  store %struct.BMElemSort* %61, %struct.BMElemSort** %arrayidx78, align 8, !dbg !13960
  store %struct.BMElemSort* %61, %struct.BMElemSort** %sb, align 8, !dbg !13961
  %62 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13962
  %bm79 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %62, i32 0, i32 0, !dbg !13962
  %63 = load %struct.BMesh*, %struct.BMesh** %bm79, align 8, !dbg !13962
  %call80 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %63, i8 zeroext 2, i8* null), !dbg !13962
  %64 = bitcast i8* %call80 to %struct.BMEdge*, !dbg !13962
  store %struct.BMEdge* %64, %struct.BMEdge** %ed, align 8, !dbg !13962
  store i32 0, i32* %i, align 4, !dbg !13962
  br label %for.cond81, !dbg !13962

for.cond81:                                       ; preds = %for.inc115, %if.then68
  %65 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !13964
  %tobool82 = icmp ne %struct.BMEdge* %65, null, !dbg !13962
  br i1 %tobool82, label %for.body83, label %for.end118, !dbg !13962

for.body83:                                       ; preds = %for.cond81
  %66 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !13966
  %head84 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %66, i32 0, i32 0, !dbg !13966
  %67 = load i32, i32* %flag.addr, align 4, !dbg !13966
  %conv85 = trunc i32 %67 to i8, !dbg !13966
  %call86 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head84, i8 zeroext %conv85), !dbg !13966
  %tobool87 = icmp ne i8 %call86, 0, !dbg !13966
  br i1 %tobool87, label %if.then88, label %if.else111, !dbg !13969

if.then88:                                        ; preds = %for.body83
  call void @llvm.dbg.declare(metadata [3 x float]* %co89, metadata !13970, metadata !DIExpression()), !dbg !13972
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %co89, i64 0, i64 0, !dbg !13973
  %68 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !13974
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %68, i32 0, i32 2, !dbg !13975
  %69 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !13975
  %co91 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %69, i32 0, i32 2, !dbg !13976
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %co91, i64 0, i64 0, !dbg !13974
  %70 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !13977
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %70, i32 0, i32 3, !dbg !13978
  %71 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !13978
  %co93 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %71, i32 0, i32 2, !dbg !13979
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %co93, i64 0, i64 0, !dbg !13977
  call void @mid_v3_v3v3(float* %arraydecay90, float* %arraydecay92, float* %arraydecay94), !dbg !13980
  %arraydecay95 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13981
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %co89, i64 0, i64 0, !dbg !13982
  call void @mul_m4_v3([4 x float]* %arraydecay95, float* %arraydecay96), !dbg !13983
  %72 = load i8*, i8** %pb, align 8, !dbg !13984
  %73 = load i32, i32* %i, align 4, !dbg !13985
  %idxprom97 = sext i32 %73 to i64, !dbg !13984
  %arrayidx98 = getelementptr inbounds i8, i8* %72, i64 %idxprom97, !dbg !13984
  store i8 0, i8* %arrayidx98, align 1, !dbg !13986
  %74 = load i32, i32* %i, align 4, !dbg !13987
  %75 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !13988
  %arrayidx99 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 1, !dbg !13989
  %76 = load i32, i32* %arrayidx99, align 4, !dbg !13989
  %idxprom100 = sext i32 %76 to i64, !dbg !13988
  %arrayidx101 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %75, i64 %idxprom100, !dbg !13988
  %org_idx102 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx101, i32 0, i32 1, !dbg !13990
  store i32 %74, i32* %org_idx102, align 4, !dbg !13991
  %77 = load i32, i32* %coidx, align 4, !dbg !13992
  %idxprom103 = sext i32 %77 to i64, !dbg !13993
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %co89, i64 0, i64 %idxprom103, !dbg !13993
  %78 = load float, float* %arrayidx104, align 4, !dbg !13993
  %79 = load float, float* %fact, align 4, !dbg !13994
  %mul105 = fmul float %78, %79, !dbg !13995
  %80 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !13996
  %arrayidx106 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 1, !dbg !13997
  %81 = load i32, i32* %arrayidx106, align 4, !dbg !13998
  %inc107 = add nsw i32 %81, 1, !dbg !13998
  store i32 %inc107, i32* %arrayidx106, align 4, !dbg !13998
  %idxprom108 = sext i32 %81 to i64, !dbg !13996
  %arrayidx109 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %80, i64 %idxprom108, !dbg !13996
  %srt110 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx109, i32 0, i32 0, !dbg !13999
  store float %mul105, float* %srt110, align 4, !dbg !14000
  br label %if.end114, !dbg !14001

if.else111:                                       ; preds = %for.body83
  %82 = load i8*, i8** %pb, align 8, !dbg !14002
  %83 = load i32, i32* %i, align 4, !dbg !14004
  %idxprom112 = sext i32 %83 to i64, !dbg !14002
  %arrayidx113 = getelementptr inbounds i8, i8* %82, i64 %idxprom112, !dbg !14002
  store i8 1, i8* %arrayidx113, align 1, !dbg !14005
  br label %if.end114

if.end114:                                        ; preds = %if.else111, %if.then88
  br label %for.inc115, !dbg !14006

for.inc115:                                       ; preds = %if.end114
  %call116 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !13964
  %84 = bitcast i8* %call116 to %struct.BMEdge*, !dbg !13964
  store %struct.BMEdge* %84, %struct.BMEdge** %ed, align 8, !dbg !13964
  %85 = load i32, i32* %i, align 4, !dbg !13964
  %inc117 = add nsw i32 %85, 1, !dbg !13964
  store i32 %inc117, i32* %i, align 4, !dbg !13964
  br label %for.cond81, !dbg !13964, !llvm.loop !14007

for.end118:                                       ; preds = %for.cond81
  br label %if.end119, !dbg !14009

if.end119:                                        ; preds = %for.end118, %if.end65
  %arrayidx120 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14010
  %86 = load i32, i32* %arrayidx120, align 4, !dbg !14010
  %tobool121 = icmp ne i32 %86, 0, !dbg !14010
  br i1 %tobool121, label %if.then122, label %if.end169, !dbg !14012

if.then122:                                       ; preds = %if.end119
  %87 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14013
  %arrayidx123 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14015
  %88 = load i32, i32* %arrayidx123, align 4, !dbg !14015
  %conv124 = sext i32 %88 to i64, !dbg !14015
  %mul125 = mul i64 1, %conv124, !dbg !14016
  %call126 = call i8* %87(i64 %mul125, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.516, i64 0, i64 0)), !dbg !14013
  %arrayidx127 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 2, !dbg !14017
  store i8* %call126, i8** %arrayidx127, align 16, !dbg !14018
  store i8* %call126, i8** %pb, align 8, !dbg !14019
  %89 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14020
  %arrayidx128 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14021
  %90 = load i32, i32* %arrayidx128, align 4, !dbg !14021
  %conv129 = sext i32 %90 to i64, !dbg !14021
  %mul130 = mul i64 8, %conv129, !dbg !14022
  %call131 = call i8* %89(i64 %mul130, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.517, i64 0, i64 0)), !dbg !14020
  %91 = bitcast i8* %call131 to %struct.BMElemSort*, !dbg !14020
  %arrayidx132 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 2, !dbg !14023
  store %struct.BMElemSort* %91, %struct.BMElemSort** %arrayidx132, align 16, !dbg !14024
  store %struct.BMElemSort* %91, %struct.BMElemSort** %sb, align 8, !dbg !14025
  %92 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14026
  %bm133 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %92, i32 0, i32 0, !dbg !14026
  %93 = load %struct.BMesh*, %struct.BMesh** %bm133, align 8, !dbg !14026
  %call134 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %93, i8 zeroext 3, i8* null), !dbg !14026
  %94 = bitcast i8* %call134 to %struct.BMFace*, !dbg !14026
  store %struct.BMFace* %94, %struct.BMFace** %fa, align 8, !dbg !14026
  store i32 0, i32* %i, align 4, !dbg !14026
  br label %for.cond135, !dbg !14026

for.cond135:                                      ; preds = %for.inc165, %if.then122
  %95 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14028
  %tobool136 = icmp ne %struct.BMFace* %95, null, !dbg !14026
  br i1 %tobool136, label %for.body137, label %for.end168, !dbg !14026

for.body137:                                      ; preds = %for.cond135
  %96 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14030
  %head138 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %96, i32 0, i32 0, !dbg !14030
  %97 = load i32, i32* %flag.addr, align 4, !dbg !14030
  %conv139 = trunc i32 %97 to i8, !dbg !14030
  %call140 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head138, i8 zeroext %conv139), !dbg !14030
  %tobool141 = icmp ne i8 %call140, 0, !dbg !14030
  br i1 %tobool141, label %if.then142, label %if.else161, !dbg !14033

if.then142:                                       ; preds = %for.body137
  call void @llvm.dbg.declare(metadata [3 x float]* %co143, metadata !14034, metadata !DIExpression()), !dbg !14036
  %98 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14037
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %co143, i64 0, i64 0, !dbg !14038
  call void @BM_face_calc_center_mean(%struct.BMFace* %98, float* %arraydecay144), !dbg !14039
  %arraydecay145 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !14040
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %co143, i64 0, i64 0, !dbg !14041
  call void @mul_m4_v3([4 x float]* %arraydecay145, float* %arraydecay146), !dbg !14042
  %99 = load i8*, i8** %pb, align 8, !dbg !14043
  %100 = load i32, i32* %i, align 4, !dbg !14044
  %idxprom147 = sext i32 %100 to i64, !dbg !14043
  %arrayidx148 = getelementptr inbounds i8, i8* %99, i64 %idxprom147, !dbg !14043
  store i8 0, i8* %arrayidx148, align 1, !dbg !14045
  %101 = load i32, i32* %i, align 4, !dbg !14046
  %102 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14047
  %arrayidx149 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 2, !dbg !14048
  %103 = load i32, i32* %arrayidx149, align 4, !dbg !14048
  %idxprom150 = sext i32 %103 to i64, !dbg !14047
  %arrayidx151 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %102, i64 %idxprom150, !dbg !14047
  %org_idx152 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx151, i32 0, i32 1, !dbg !14049
  store i32 %101, i32* %org_idx152, align 4, !dbg !14050
  %104 = load i32, i32* %coidx, align 4, !dbg !14051
  %idxprom153 = sext i32 %104 to i64, !dbg !14052
  %arrayidx154 = getelementptr inbounds [3 x float], [3 x float]* %co143, i64 0, i64 %idxprom153, !dbg !14052
  %105 = load float, float* %arrayidx154, align 4, !dbg !14052
  %106 = load float, float* %fact, align 4, !dbg !14053
  %mul155 = fmul float %105, %106, !dbg !14054
  %107 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14055
  %arrayidx156 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 2, !dbg !14056
  %108 = load i32, i32* %arrayidx156, align 4, !dbg !14057
  %inc157 = add nsw i32 %108, 1, !dbg !14057
  store i32 %inc157, i32* %arrayidx156, align 4, !dbg !14057
  %idxprom158 = sext i32 %108 to i64, !dbg !14055
  %arrayidx159 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %107, i64 %idxprom158, !dbg !14055
  %srt160 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx159, i32 0, i32 0, !dbg !14058
  store float %mul155, float* %srt160, align 4, !dbg !14059
  br label %if.end164, !dbg !14060

if.else161:                                       ; preds = %for.body137
  %109 = load i8*, i8** %pb, align 8, !dbg !14061
  %110 = load i32, i32* %i, align 4, !dbg !14063
  %idxprom162 = sext i32 %110 to i64, !dbg !14061
  %arrayidx163 = getelementptr inbounds i8, i8* %109, i64 %idxprom162, !dbg !14061
  store i8 1, i8* %arrayidx163, align 1, !dbg !14064
  br label %if.end164

if.end164:                                        ; preds = %if.else161, %if.then142
  br label %for.inc165, !dbg !14065

for.inc165:                                       ; preds = %if.end164
  %call166 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14028
  %111 = bitcast i8* %call166 to %struct.BMFace*, !dbg !14028
  store %struct.BMFace* %111, %struct.BMFace** %fa, align 8, !dbg !14028
  %112 = load i32, i32* %i, align 4, !dbg !14028
  %inc167 = add nsw i32 %112, 1, !dbg !14028
  store i32 %inc167, i32* %i, align 4, !dbg !14028
  br label %for.cond135, !dbg !14028, !llvm.loop !14066

for.end168:                                       ; preds = %for.cond135
  br label %if.end169, !dbg !14068

if.end169:                                        ; preds = %for.end168, %if.end119
  br label %if.end858, !dbg !14069

if.else170:                                       ; preds = %lor.lhs.false
  %113 = load i32, i32* %action.addr, align 4, !dbg !14070
  %cmp171 = icmp eq i32 %113, 3, !dbg !14072
  br i1 %cmp171, label %if.then173, label %if.else348, !dbg !14073

if.then173:                                       ; preds = %if.else170
  call void @llvm.dbg.declare(metadata [3 x float]* %cur, metadata !14074, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat174, metadata !14077, metadata !DIExpression()), !dbg !14078
  call void @llvm.dbg.declare(metadata float* %fact175, metadata !14079, metadata !DIExpression()), !dbg !14080
  %114 = load i32, i32* %reverse.addr, align 4, !dbg !14081
  %tobool176 = icmp ne i32 %114, 0, !dbg !14081
  %115 = zext i1 %tobool176 to i64, !dbg !14081
  %cond177 = select i1 %tobool176, double -1.000000e+00, double 1.000000e+00, !dbg !14081
  %conv178 = fptrunc double %cond177 to float, !dbg !14081
  store float %conv178, float* %fact175, align 4, !dbg !14080
  %116 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !14082
  %tobool179 = icmp ne %struct.View3D* %116, null, !dbg !14082
  br i1 %tobool179, label %land.lhs.true180, label %if.else185, !dbg !14084

land.lhs.true180:                                 ; preds = %if.then173
  %117 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !14085
  %localvd = getelementptr inbounds %struct.View3D, %struct.View3D* %117, i32 0, i32 20, !dbg !14086
  %118 = load %struct.View3D*, %struct.View3D** %localvd, align 8, !dbg !14086
  %tobool181 = icmp ne %struct.View3D* %118, null, !dbg !14085
  br i1 %tobool181, label %if.then182, label %if.else185, !dbg !14087

if.then182:                                       ; preds = %land.lhs.true180
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %cur, i64 0, i64 0, !dbg !14088
  %119 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !14089
  %cursor = getelementptr inbounds %struct.View3D, %struct.View3D* %119, i32 0, i32 35, !dbg !14090
  %arraydecay184 = getelementptr inbounds [3 x float], [3 x float]* %cursor, i64 0, i64 0, !dbg !14089
  call void @copy_v3_v3(float* %arraydecay183, float* %arraydecay184), !dbg !14091
  br label %if.end189, !dbg !14091

if.else185:                                       ; preds = %land.lhs.true180, %if.then173
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %cur, i64 0, i64 0, !dbg !14092
  %120 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14093
  %cursor187 = getelementptr inbounds %struct.Scene, %struct.Scene* %120, i32 0, i32 8, !dbg !14094
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %cursor187, i64 0, i64 0, !dbg !14093
  call void @copy_v3_v3(float* %arraydecay186, float* %arraydecay188), !dbg !14095
  br label %if.end189

if.end189:                                        ; preds = %if.else185, %if.then182
  %arraydecay190 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat174, i64 0, i64 0, !dbg !14096
  %121 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14097
  %obmat191 = getelementptr inbounds %struct.Object, %struct.Object* %121, i32 0, i32 47, !dbg !14098
  %arraydecay192 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat191, i64 0, i64 0, !dbg !14097
  %call193 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay190, [4 x float]* %arraydecay192), !dbg !14099
  %arraydecay194 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat174, i64 0, i64 0, !dbg !14100
  %arraydecay195 = getelementptr inbounds [3 x float], [3 x float]* %cur, i64 0, i64 0, !dbg !14101
  call void @mul_m4_v3([4 x float]* %arraydecay194, float* %arraydecay195), !dbg !14102
  %arrayidx196 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !14103
  %122 = load i32, i32* %arrayidx196, align 4, !dbg !14103
  %tobool197 = icmp ne i32 %122, 0, !dbg !14103
  br i1 %tobool197, label %if.then198, label %if.end243, !dbg !14105

if.then198:                                       ; preds = %if.end189
  %123 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14106
  %arrayidx199 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !14108
  %124 = load i32, i32* %arrayidx199, align 4, !dbg !14108
  %conv200 = sext i32 %124 to i64, !dbg !14108
  %mul201 = mul i64 1, %conv200, !dbg !14109
  %call202 = call i8* %123(i64 %mul201, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.512, i64 0, i64 0)), !dbg !14106
  %arrayidx203 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 0, !dbg !14110
  store i8* %call202, i8** %arrayidx203, align 16, !dbg !14111
  store i8* %call202, i8** %pb, align 8, !dbg !14112
  %125 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14113
  %arrayidx204 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !14114
  %126 = load i32, i32* %arrayidx204, align 4, !dbg !14114
  %conv205 = sext i32 %126 to i64, !dbg !14114
  %mul206 = mul i64 8, %conv205, !dbg !14115
  %call207 = call i8* %125(i64 %mul206, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.513, i64 0, i64 0)), !dbg !14113
  %127 = bitcast i8* %call207 to %struct.BMElemSort*, !dbg !14113
  %arrayidx208 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 0, !dbg !14116
  store %struct.BMElemSort* %127, %struct.BMElemSort** %arrayidx208, align 16, !dbg !14117
  store %struct.BMElemSort* %127, %struct.BMElemSort** %sb, align 8, !dbg !14118
  %128 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14119
  %bm209 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %128, i32 0, i32 0, !dbg !14119
  %129 = load %struct.BMesh*, %struct.BMesh** %bm209, align 8, !dbg !14119
  %call210 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %129, i8 zeroext 1, i8* null), !dbg !14119
  %130 = bitcast i8* %call210 to %struct.BMVert*, !dbg !14119
  store %struct.BMVert* %130, %struct.BMVert** %ve, align 8, !dbg !14119
  store i32 0, i32* %i, align 4, !dbg !14119
  br label %for.cond211, !dbg !14119

for.cond211:                                      ; preds = %for.inc239, %if.then198
  %131 = load %struct.BMVert*, %struct.BMVert** %ve, align 8, !dbg !14121
  %tobool212 = icmp ne %struct.BMVert* %131, null, !dbg !14119
  br i1 %tobool212, label %for.body213, label %for.end242, !dbg !14119

for.body213:                                      ; preds = %for.cond211
  %132 = load %struct.BMVert*, %struct.BMVert** %ve, align 8, !dbg !14123
  %head214 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %132, i32 0, i32 0, !dbg !14123
  %133 = load i32, i32* %flag.addr, align 4, !dbg !14123
  %conv215 = trunc i32 %133 to i8, !dbg !14123
  %call216 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head214, i8 zeroext %conv215), !dbg !14123
  %tobool217 = icmp ne i8 %call216, 0, !dbg !14123
  br i1 %tobool217, label %if.then218, label %if.else235, !dbg !14126

if.then218:                                       ; preds = %for.body213
  %134 = load i8*, i8** %pb, align 8, !dbg !14127
  %135 = load i32, i32* %i, align 4, !dbg !14129
  %idxprom219 = sext i32 %135 to i64, !dbg !14127
  %arrayidx220 = getelementptr inbounds i8, i8* %134, i64 %idxprom219, !dbg !14127
  store i8 0, i8* %arrayidx220, align 1, !dbg !14130
  %136 = load i32, i32* %i, align 4, !dbg !14131
  %137 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14132
  %arrayidx221 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 0, !dbg !14133
  %138 = load i32, i32* %arrayidx221, align 4, !dbg !14133
  %idxprom222 = sext i32 %138 to i64, !dbg !14132
  %arrayidx223 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %137, i64 %idxprom222, !dbg !14132
  %org_idx224 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx223, i32 0, i32 1, !dbg !14134
  store i32 %136, i32* %org_idx224, align 4, !dbg !14135
  %arraydecay225 = getelementptr inbounds [3 x float], [3 x float]* %cur, i64 0, i64 0, !dbg !14136
  %139 = load %struct.BMVert*, %struct.BMVert** %ve, align 8, !dbg !14137
  %co226 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %139, i32 0, i32 2, !dbg !14138
  %arraydecay227 = getelementptr inbounds [3 x float], [3 x float]* %co226, i64 0, i64 0, !dbg !14137
  %call228 = call float @len_squared_v3v3(float* %arraydecay225, float* %arraydecay227), !dbg !14139
  %140 = load float, float* %fact175, align 4, !dbg !14140
  %mul229 = fmul float %call228, %140, !dbg !14141
  %141 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14142
  %arrayidx230 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 0, !dbg !14143
  %142 = load i32, i32* %arrayidx230, align 4, !dbg !14144
  %inc231 = add nsw i32 %142, 1, !dbg !14144
  store i32 %inc231, i32* %arrayidx230, align 4, !dbg !14144
  %idxprom232 = sext i32 %142 to i64, !dbg !14142
  %arrayidx233 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %141, i64 %idxprom232, !dbg !14142
  %srt234 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx233, i32 0, i32 0, !dbg !14145
  store float %mul229, float* %srt234, align 4, !dbg !14146
  br label %if.end238, !dbg !14147

if.else235:                                       ; preds = %for.body213
  %143 = load i8*, i8** %pb, align 8, !dbg !14148
  %144 = load i32, i32* %i, align 4, !dbg !14150
  %idxprom236 = sext i32 %144 to i64, !dbg !14148
  %arrayidx237 = getelementptr inbounds i8, i8* %143, i64 %idxprom236, !dbg !14148
  store i8 1, i8* %arrayidx237, align 1, !dbg !14151
  br label %if.end238

if.end238:                                        ; preds = %if.else235, %if.then218
  br label %for.inc239, !dbg !14152

for.inc239:                                       ; preds = %if.end238
  %call240 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14121
  %145 = bitcast i8* %call240 to %struct.BMVert*, !dbg !14121
  store %struct.BMVert* %145, %struct.BMVert** %ve, align 8, !dbg !14121
  %146 = load i32, i32* %i, align 4, !dbg !14121
  %inc241 = add nsw i32 %146, 1, !dbg !14121
  store i32 %inc241, i32* %i, align 4, !dbg !14121
  br label %for.cond211, !dbg !14121, !llvm.loop !14153

for.end242:                                       ; preds = %for.cond211
  br label %if.end243, !dbg !14155

if.end243:                                        ; preds = %for.end242, %if.end189
  %arrayidx244 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !14156
  %147 = load i32, i32* %arrayidx244, align 4, !dbg !14156
  %tobool245 = icmp ne i32 %147, 0, !dbg !14156
  br i1 %tobool245, label %if.then246, label %if.end298, !dbg !14158

if.then246:                                       ; preds = %if.end243
  %148 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14159
  %arrayidx247 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !14161
  %149 = load i32, i32* %arrayidx247, align 4, !dbg !14161
  %conv248 = sext i32 %149 to i64, !dbg !14161
  %mul249 = mul i64 1, %conv248, !dbg !14162
  %call250 = call i8* %148(i64 %mul249, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.514, i64 0, i64 0)), !dbg !14159
  %arrayidx251 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 1, !dbg !14163
  store i8* %call250, i8** %arrayidx251, align 8, !dbg !14164
  store i8* %call250, i8** %pb, align 8, !dbg !14165
  %150 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14166
  %arrayidx252 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !14167
  %151 = load i32, i32* %arrayidx252, align 4, !dbg !14167
  %conv253 = sext i32 %151 to i64, !dbg !14167
  %mul254 = mul i64 8, %conv253, !dbg !14168
  %call255 = call i8* %150(i64 %mul254, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.515, i64 0, i64 0)), !dbg !14166
  %152 = bitcast i8* %call255 to %struct.BMElemSort*, !dbg !14166
  %arrayidx256 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 1, !dbg !14169
  store %struct.BMElemSort* %152, %struct.BMElemSort** %arrayidx256, align 8, !dbg !14170
  store %struct.BMElemSort* %152, %struct.BMElemSort** %sb, align 8, !dbg !14171
  %153 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14172
  %bm257 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %153, i32 0, i32 0, !dbg !14172
  %154 = load %struct.BMesh*, %struct.BMesh** %bm257, align 8, !dbg !14172
  %call258 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %154, i8 zeroext 2, i8* null), !dbg !14172
  %155 = bitcast i8* %call258 to %struct.BMEdge*, !dbg !14172
  store %struct.BMEdge* %155, %struct.BMEdge** %ed, align 8, !dbg !14172
  store i32 0, i32* %i, align 4, !dbg !14172
  br label %for.cond259, !dbg !14172

for.cond259:                                      ; preds = %for.inc294, %if.then246
  %156 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !14174
  %tobool260 = icmp ne %struct.BMEdge* %156, null, !dbg !14172
  br i1 %tobool260, label %for.body261, label %for.end297, !dbg !14172

for.body261:                                      ; preds = %for.cond259
  %157 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !14176
  %head262 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %157, i32 0, i32 0, !dbg !14176
  %158 = load i32, i32* %flag.addr, align 4, !dbg !14176
  %conv263 = trunc i32 %158 to i8, !dbg !14176
  %call264 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head262, i8 zeroext %conv263), !dbg !14176
  %tobool265 = icmp ne i8 %call264, 0, !dbg !14176
  br i1 %tobool265, label %if.then266, label %if.else290, !dbg !14179

if.then266:                                       ; preds = %for.body261
  call void @llvm.dbg.declare(metadata [3 x float]* %co267, metadata !14180, metadata !DIExpression()), !dbg !14182
  %arraydecay268 = getelementptr inbounds [3 x float], [3 x float]* %co267, i64 0, i64 0, !dbg !14183
  %159 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !14184
  %v1269 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %159, i32 0, i32 2, !dbg !14185
  %160 = load %struct.BMVert*, %struct.BMVert** %v1269, align 8, !dbg !14185
  %co270 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %160, i32 0, i32 2, !dbg !14186
  %arraydecay271 = getelementptr inbounds [3 x float], [3 x float]* %co270, i64 0, i64 0, !dbg !14184
  %161 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !14187
  %v2272 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %161, i32 0, i32 3, !dbg !14188
  %162 = load %struct.BMVert*, %struct.BMVert** %v2272, align 8, !dbg !14188
  %co273 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %162, i32 0, i32 2, !dbg !14189
  %arraydecay274 = getelementptr inbounds [3 x float], [3 x float]* %co273, i64 0, i64 0, !dbg !14187
  call void @mid_v3_v3v3(float* %arraydecay268, float* %arraydecay271, float* %arraydecay274), !dbg !14190
  %163 = load i8*, i8** %pb, align 8, !dbg !14191
  %164 = load i32, i32* %i, align 4, !dbg !14192
  %idxprom275 = sext i32 %164 to i64, !dbg !14191
  %arrayidx276 = getelementptr inbounds i8, i8* %163, i64 %idxprom275, !dbg !14191
  store i8 0, i8* %arrayidx276, align 1, !dbg !14193
  %165 = load i32, i32* %i, align 4, !dbg !14194
  %166 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14195
  %arrayidx277 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 1, !dbg !14196
  %167 = load i32, i32* %arrayidx277, align 4, !dbg !14196
  %idxprom278 = sext i32 %167 to i64, !dbg !14195
  %arrayidx279 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %166, i64 %idxprom278, !dbg !14195
  %org_idx280 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx279, i32 0, i32 1, !dbg !14197
  store i32 %165, i32* %org_idx280, align 4, !dbg !14198
  %arraydecay281 = getelementptr inbounds [3 x float], [3 x float]* %cur, i64 0, i64 0, !dbg !14199
  %arraydecay282 = getelementptr inbounds [3 x float], [3 x float]* %co267, i64 0, i64 0, !dbg !14200
  %call283 = call float @len_squared_v3v3(float* %arraydecay281, float* %arraydecay282), !dbg !14201
  %168 = load float, float* %fact175, align 4, !dbg !14202
  %mul284 = fmul float %call283, %168, !dbg !14203
  %169 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14204
  %arrayidx285 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 1, !dbg !14205
  %170 = load i32, i32* %arrayidx285, align 4, !dbg !14206
  %inc286 = add nsw i32 %170, 1, !dbg !14206
  store i32 %inc286, i32* %arrayidx285, align 4, !dbg !14206
  %idxprom287 = sext i32 %170 to i64, !dbg !14204
  %arrayidx288 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %169, i64 %idxprom287, !dbg !14204
  %srt289 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx288, i32 0, i32 0, !dbg !14207
  store float %mul284, float* %srt289, align 4, !dbg !14208
  br label %if.end293, !dbg !14209

if.else290:                                       ; preds = %for.body261
  %171 = load i8*, i8** %pb, align 8, !dbg !14210
  %172 = load i32, i32* %i, align 4, !dbg !14212
  %idxprom291 = sext i32 %172 to i64, !dbg !14210
  %arrayidx292 = getelementptr inbounds i8, i8* %171, i64 %idxprom291, !dbg !14210
  store i8 1, i8* %arrayidx292, align 1, !dbg !14213
  br label %if.end293

if.end293:                                        ; preds = %if.else290, %if.then266
  br label %for.inc294, !dbg !14214

for.inc294:                                       ; preds = %if.end293
  %call295 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14174
  %173 = bitcast i8* %call295 to %struct.BMEdge*, !dbg !14174
  store %struct.BMEdge* %173, %struct.BMEdge** %ed, align 8, !dbg !14174
  %174 = load i32, i32* %i, align 4, !dbg !14174
  %inc296 = add nsw i32 %174, 1, !dbg !14174
  store i32 %inc296, i32* %i, align 4, !dbg !14174
  br label %for.cond259, !dbg !14174, !llvm.loop !14215

for.end297:                                       ; preds = %for.cond259
  br label %if.end298, !dbg !14217

if.end298:                                        ; preds = %for.end297, %if.end243
  %arrayidx299 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14218
  %175 = load i32, i32* %arrayidx299, align 4, !dbg !14218
  %tobool300 = icmp ne i32 %175, 0, !dbg !14218
  br i1 %tobool300, label %if.then301, label %if.end347, !dbg !14220

if.then301:                                       ; preds = %if.end298
  %176 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14221
  %arrayidx302 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14223
  %177 = load i32, i32* %arrayidx302, align 4, !dbg !14223
  %conv303 = sext i32 %177 to i64, !dbg !14223
  %mul304 = mul i64 1, %conv303, !dbg !14224
  %call305 = call i8* %176(i64 %mul304, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.516, i64 0, i64 0)), !dbg !14221
  %arrayidx306 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 2, !dbg !14225
  store i8* %call305, i8** %arrayidx306, align 16, !dbg !14226
  store i8* %call305, i8** %pb, align 8, !dbg !14227
  %178 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14228
  %arrayidx307 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14229
  %179 = load i32, i32* %arrayidx307, align 4, !dbg !14229
  %conv308 = sext i32 %179 to i64, !dbg !14229
  %mul309 = mul i64 8, %conv308, !dbg !14230
  %call310 = call i8* %178(i64 %mul309, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.517, i64 0, i64 0)), !dbg !14228
  %180 = bitcast i8* %call310 to %struct.BMElemSort*, !dbg !14228
  %arrayidx311 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 2, !dbg !14231
  store %struct.BMElemSort* %180, %struct.BMElemSort** %arrayidx311, align 16, !dbg !14232
  store %struct.BMElemSort* %180, %struct.BMElemSort** %sb, align 8, !dbg !14233
  %181 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14234
  %bm312 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %181, i32 0, i32 0, !dbg !14234
  %182 = load %struct.BMesh*, %struct.BMesh** %bm312, align 8, !dbg !14234
  %call313 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %182, i8 zeroext 3, i8* null), !dbg !14234
  %183 = bitcast i8* %call313 to %struct.BMFace*, !dbg !14234
  store %struct.BMFace* %183, %struct.BMFace** %fa, align 8, !dbg !14234
  store i32 0, i32* %i, align 4, !dbg !14234
  br label %for.cond314, !dbg !14234

for.cond314:                                      ; preds = %for.inc343, %if.then301
  %184 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14236
  %tobool315 = icmp ne %struct.BMFace* %184, null, !dbg !14234
  br i1 %tobool315, label %for.body316, label %for.end346, !dbg !14234

for.body316:                                      ; preds = %for.cond314
  %185 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14238
  %head317 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %185, i32 0, i32 0, !dbg !14238
  %186 = load i32, i32* %flag.addr, align 4, !dbg !14238
  %conv318 = trunc i32 %186 to i8, !dbg !14238
  %call319 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head317, i8 zeroext %conv318), !dbg !14238
  %tobool320 = icmp ne i8 %call319, 0, !dbg !14238
  br i1 %tobool320, label %if.then321, label %if.else339, !dbg !14241

if.then321:                                       ; preds = %for.body316
  call void @llvm.dbg.declare(metadata [3 x float]* %co322, metadata !14242, metadata !DIExpression()), !dbg !14244
  %187 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14245
  %arraydecay323 = getelementptr inbounds [3 x float], [3 x float]* %co322, i64 0, i64 0, !dbg !14246
  call void @BM_face_calc_center_mean(%struct.BMFace* %187, float* %arraydecay323), !dbg !14247
  %188 = load i8*, i8** %pb, align 8, !dbg !14248
  %189 = load i32, i32* %i, align 4, !dbg !14249
  %idxprom324 = sext i32 %189 to i64, !dbg !14248
  %arrayidx325 = getelementptr inbounds i8, i8* %188, i64 %idxprom324, !dbg !14248
  store i8 0, i8* %arrayidx325, align 1, !dbg !14250
  %190 = load i32, i32* %i, align 4, !dbg !14251
  %191 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14252
  %arrayidx326 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 2, !dbg !14253
  %192 = load i32, i32* %arrayidx326, align 4, !dbg !14253
  %idxprom327 = sext i32 %192 to i64, !dbg !14252
  %arrayidx328 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %191, i64 %idxprom327, !dbg !14252
  %org_idx329 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx328, i32 0, i32 1, !dbg !14254
  store i32 %190, i32* %org_idx329, align 4, !dbg !14255
  %arraydecay330 = getelementptr inbounds [3 x float], [3 x float]* %cur, i64 0, i64 0, !dbg !14256
  %arraydecay331 = getelementptr inbounds [3 x float], [3 x float]* %co322, i64 0, i64 0, !dbg !14257
  %call332 = call float @len_squared_v3v3(float* %arraydecay330, float* %arraydecay331), !dbg !14258
  %193 = load float, float* %fact175, align 4, !dbg !14259
  %mul333 = fmul float %call332, %193, !dbg !14260
  %194 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14261
  %arrayidx334 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 2, !dbg !14262
  %195 = load i32, i32* %arrayidx334, align 4, !dbg !14263
  %inc335 = add nsw i32 %195, 1, !dbg !14263
  store i32 %inc335, i32* %arrayidx334, align 4, !dbg !14263
  %idxprom336 = sext i32 %195 to i64, !dbg !14261
  %arrayidx337 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %194, i64 %idxprom336, !dbg !14261
  %srt338 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx337, i32 0, i32 0, !dbg !14264
  store float %mul333, float* %srt338, align 4, !dbg !14265
  br label %if.end342, !dbg !14266

if.else339:                                       ; preds = %for.body316
  %196 = load i8*, i8** %pb, align 8, !dbg !14267
  %197 = load i32, i32* %i, align 4, !dbg !14269
  %idxprom340 = sext i32 %197 to i64, !dbg !14267
  %arrayidx341 = getelementptr inbounds i8, i8* %196, i64 %idxprom340, !dbg !14267
  store i8 1, i8* %arrayidx341, align 1, !dbg !14270
  br label %if.end342

if.end342:                                        ; preds = %if.else339, %if.then321
  br label %for.inc343, !dbg !14271

for.inc343:                                       ; preds = %if.end342
  %call344 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14236
  %198 = bitcast i8* %call344 to %struct.BMFace*, !dbg !14236
  store %struct.BMFace* %198, %struct.BMFace** %fa, align 8, !dbg !14236
  %199 = load i32, i32* %i, align 4, !dbg !14236
  %inc345 = add nsw i32 %199, 1, !dbg !14236
  store i32 %inc345, i32* %i, align 4, !dbg !14236
  br label %for.cond314, !dbg !14236, !llvm.loop !14272

for.end346:                                       ; preds = %for.cond314
  br label %if.end347, !dbg !14274

if.end347:                                        ; preds = %for.end346, %if.end298
  br label %if.end857, !dbg !14275

if.else348:                                       ; preds = %if.else170
  %200 = load i32, i32* %action.addr, align 4, !dbg !14276
  %cmp349 = icmp eq i32 %200, 4, !dbg !14278
  br i1 %cmp349, label %land.lhs.true351, label %if.else405, !dbg !14279

land.lhs.true351:                                 ; preds = %if.else348
  %arrayidx352 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14280
  %201 = load i32, i32* %arrayidx352, align 4, !dbg !14280
  %tobool353 = icmp ne i32 %201, 0, !dbg !14280
  br i1 %tobool353, label %if.then354, label %if.else405, !dbg !14281

if.then354:                                       ; preds = %land.lhs.true351
  %202 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14282
  %arrayidx355 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14284
  %203 = load i32, i32* %arrayidx355, align 4, !dbg !14284
  %conv356 = sext i32 %203 to i64, !dbg !14284
  %mul357 = mul i64 1, %conv356, !dbg !14285
  %call358 = call i8* %202(i64 %mul357, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.516, i64 0, i64 0)), !dbg !14282
  %arrayidx359 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 2, !dbg !14286
  store i8* %call358, i8** %arrayidx359, align 16, !dbg !14287
  store i8* %call358, i8** %pb, align 8, !dbg !14288
  %204 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14289
  %arrayidx360 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14290
  %205 = load i32, i32* %arrayidx360, align 4, !dbg !14290
  %conv361 = sext i32 %205 to i64, !dbg !14290
  %mul362 = mul i64 8, %conv361, !dbg !14291
  %call363 = call i8* %204(i64 %mul362, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.517, i64 0, i64 0)), !dbg !14289
  %206 = bitcast i8* %call363 to %struct.BMElemSort*, !dbg !14289
  %arrayidx364 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 2, !dbg !14292
  store %struct.BMElemSort* %206, %struct.BMElemSort** %arrayidx364, align 16, !dbg !14293
  store %struct.BMElemSort* %206, %struct.BMElemSort** %sb, align 8, !dbg !14294
  %207 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14295
  %bm365 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %207, i32 0, i32 0, !dbg !14295
  %208 = load %struct.BMesh*, %struct.BMesh** %bm365, align 8, !dbg !14295
  %call366 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %208, i8 zeroext 3, i8* null), !dbg !14295
  %209 = bitcast i8* %call366 to %struct.BMFace*, !dbg !14295
  store %struct.BMFace* %209, %struct.BMFace** %fa, align 8, !dbg !14295
  store i32 0, i32* %i, align 4, !dbg !14295
  br label %for.cond367, !dbg !14295

for.cond367:                                      ; preds = %for.inc401, %if.then354
  %210 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14297
  %tobool368 = icmp ne %struct.BMFace* %210, null, !dbg !14295
  br i1 %tobool368, label %for.body369, label %for.end404, !dbg !14295

for.body369:                                      ; preds = %for.cond367
  %211 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14299
  %head370 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %211, i32 0, i32 0, !dbg !14299
  %212 = load i32, i32* %flag.addr, align 4, !dbg !14299
  %conv371 = trunc i32 %212 to i8, !dbg !14299
  %call372 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head370, i8 zeroext %conv371), !dbg !14299
  %tobool373 = icmp ne i8 %call372, 0, !dbg !14299
  br i1 %tobool373, label %if.then374, label %if.else397, !dbg !14302

if.then374:                                       ; preds = %for.body369
  call void @llvm.dbg.declare(metadata float* %srt375, metadata !14303, metadata !DIExpression()), !dbg !14305
  %213 = load i32, i32* %reverse.addr, align 4, !dbg !14306
  %tobool376 = icmp ne i32 %213, 0, !dbg !14306
  br i1 %tobool376, label %cond.true, label %cond.false, !dbg !14306

cond.true:                                        ; preds = %if.then374
  %214 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14307
  %mat_nr = getelementptr inbounds %struct.BMFace, %struct.BMFace* %214, i32 0, i32 5, !dbg !14308
  %215 = load i16, i16* %mat_nr, align 8, !dbg !14308
  %conv377 = sext i16 %215 to i32, !dbg !14307
  %sub = sub nsw i32 32766, %conv377, !dbg !14309
  %conv378 = sitofp i32 %sub to float, !dbg !14310
  br label %cond.end, !dbg !14306

cond.false:                                       ; preds = %if.then374
  %216 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14311
  %mat_nr379 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %216, i32 0, i32 5, !dbg !14312
  %217 = load i16, i16* %mat_nr379, align 8, !dbg !14312
  %conv380 = sitofp i16 %217 to float, !dbg !14313
  br label %cond.end, !dbg !14306

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond381 = phi float [ %conv378, %cond.true ], [ %conv380, %cond.false ], !dbg !14306
  store float %cond381, float* %srt375, align 4, !dbg !14305
  %218 = load i8*, i8** %pb, align 8, !dbg !14314
  %219 = load i32, i32* %i, align 4, !dbg !14315
  %idxprom382 = sext i32 %219 to i64, !dbg !14314
  %arrayidx383 = getelementptr inbounds i8, i8* %218, i64 %idxprom382, !dbg !14314
  store i8 0, i8* %arrayidx383, align 1, !dbg !14316
  %220 = load i32, i32* %i, align 4, !dbg !14317
  %221 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14318
  %arrayidx384 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 2, !dbg !14319
  %222 = load i32, i32* %arrayidx384, align 4, !dbg !14319
  %idxprom385 = sext i32 %222 to i64, !dbg !14318
  %arrayidx386 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %221, i64 %idxprom385, !dbg !14318
  %org_idx387 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx386, i32 0, i32 1, !dbg !14320
  store i32 %220, i32* %org_idx387, align 4, !dbg !14321
  %223 = load float, float* %srt375, align 4, !dbg !14322
  %arrayidx388 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14323
  %224 = load i32, i32* %arrayidx388, align 4, !dbg !14323
  %conv389 = sitofp i32 %224 to float, !dbg !14324
  %mul390 = fmul float %223, %conv389, !dbg !14325
  %225 = load i32, i32* %i, align 4, !dbg !14326
  %conv391 = sitofp i32 %225 to float, !dbg !14327
  %add = fadd float %mul390, %conv391, !dbg !14328
  %226 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14329
  %arrayidx392 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 2, !dbg !14330
  %227 = load i32, i32* %arrayidx392, align 4, !dbg !14331
  %inc393 = add nsw i32 %227, 1, !dbg !14331
  store i32 %inc393, i32* %arrayidx392, align 4, !dbg !14331
  %idxprom394 = sext i32 %227 to i64, !dbg !14329
  %arrayidx395 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %226, i64 %idxprom394, !dbg !14329
  %srt396 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx395, i32 0, i32 0, !dbg !14332
  store float %add, float* %srt396, align 4, !dbg !14333
  br label %if.end400, !dbg !14334

if.else397:                                       ; preds = %for.body369
  %228 = load i8*, i8** %pb, align 8, !dbg !14335
  %229 = load i32, i32* %i, align 4, !dbg !14337
  %idxprom398 = sext i32 %229 to i64, !dbg !14335
  %arrayidx399 = getelementptr inbounds i8, i8* %228, i64 %idxprom398, !dbg !14335
  store i8 1, i8* %arrayidx399, align 1, !dbg !14338
  br label %if.end400

if.end400:                                        ; preds = %if.else397, %cond.end
  br label %for.inc401, !dbg !14339

for.inc401:                                       ; preds = %if.end400
  %call402 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14297
  %230 = bitcast i8* %call402 to %struct.BMFace*, !dbg !14297
  store %struct.BMFace* %230, %struct.BMFace** %fa, align 8, !dbg !14297
  %231 = load i32, i32* %i, align 4, !dbg !14297
  %inc403 = add nsw i32 %231, 1, !dbg !14297
  store i32 %inc403, i32* %i, align 4, !dbg !14297
  br label %for.cond367, !dbg !14297, !llvm.loop !14340

for.end404:                                       ; preds = %for.cond367
  br label %if.end856, !dbg !14342

if.else405:                                       ; preds = %land.lhs.true351, %if.else348
  %232 = load i32, i32* %action.addr, align 4, !dbg !14343
  %cmp406 = icmp eq i32 %232, 5, !dbg !14345
  br i1 %cmp406, label %if.then408, label %if.else573, !dbg !14346

if.then408:                                       ; preds = %if.else405
  call void @llvm.dbg.declare(metadata [3 x i32*]* %tbuf, metadata !14347, metadata !DIExpression()), !dbg !14349
  %233 = bitcast [3 x i32*]* %tbuf to i8*, !dbg !14349
  call void @llvm.memset.p0i8.i64(i8* align 16 %233, i8 0, i64 24, i1 false), !dbg !14349
  call void @llvm.dbg.declare(metadata i32** %tb, metadata !14350, metadata !DIExpression()), !dbg !14351
  %arrayidx409 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !14352
  %234 = load i32, i32* %arrayidx409, align 4, !dbg !14352
  %tobool410 = icmp ne i32 %234, 0, !dbg !14352
  br i1 %tobool410, label %if.then411, label %if.end442, !dbg !14354

if.then411:                                       ; preds = %if.then408
  %235 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14355
  %arrayidx412 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !14357
  %236 = load i32, i32* %arrayidx412, align 4, !dbg !14357
  %conv413 = sext i32 %236 to i64, !dbg !14357
  %mul414 = mul i64 4, %conv413, !dbg !14358
  %call415 = call i8* %235(i64 %mul414, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.518, i64 0, i64 0)), !dbg !14355
  %237 = bitcast i8* %call415 to i32*, !dbg !14355
  %arrayidx416 = getelementptr inbounds [3 x i32*], [3 x i32*]* %tbuf, i64 0, i64 0, !dbg !14359
  store i32* %237, i32** %arrayidx416, align 16, !dbg !14360
  store i32* %237, i32** %tb, align 8, !dbg !14361
  %238 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14362
  %arrayidx417 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !14363
  %239 = load i32, i32* %arrayidx417, align 4, !dbg !14363
  %conv418 = sext i32 %239 to i64, !dbg !14363
  %mul419 = mul i64 4, %conv418, !dbg !14364
  %call420 = call i8* %238(i64 %mul419, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.519, i64 0, i64 0)), !dbg !14362
  %240 = bitcast i8* %call420 to i32*, !dbg !14362
  %arrayidx421 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 0, !dbg !14365
  store i32* %240, i32** %arrayidx421, align 16, !dbg !14366
  store i32* %240, i32** %mp, align 8, !dbg !14367
  %241 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14368
  %bm422 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %241, i32 0, i32 0, !dbg !14368
  %242 = load %struct.BMesh*, %struct.BMesh** %bm422, align 8, !dbg !14368
  %call423 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %242, i8 zeroext 1, i8* null), !dbg !14368
  %243 = bitcast i8* %call423 to %struct.BMVert*, !dbg !14368
  store %struct.BMVert* %243, %struct.BMVert** %ve, align 8, !dbg !14368
  store i32 0, i32* %i, align 4, !dbg !14368
  br label %for.cond424, !dbg !14368

for.cond424:                                      ; preds = %for.inc438, %if.then411
  %244 = load %struct.BMVert*, %struct.BMVert** %ve, align 8, !dbg !14370
  %tobool425 = icmp ne %struct.BMVert* %244, null, !dbg !14368
  br i1 %tobool425, label %for.body426, label %for.end441, !dbg !14368

for.body426:                                      ; preds = %for.cond424
  %245 = load %struct.BMVert*, %struct.BMVert** %ve, align 8, !dbg !14372
  %head427 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %245, i32 0, i32 0, !dbg !14372
  %246 = load i32, i32* %flag.addr, align 4, !dbg !14372
  %conv428 = trunc i32 %246 to i8, !dbg !14372
  %call429 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head427, i8 zeroext %conv428), !dbg !14372
  %tobool430 = icmp ne i8 %call429, 0, !dbg !14372
  br i1 %tobool430, label %if.then431, label %if.else436, !dbg !14375

if.then431:                                       ; preds = %for.body426
  %247 = load i32, i32* %i, align 4, !dbg !14376
  %248 = load i32*, i32** %mp, align 8, !dbg !14378
  %arrayidx432 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 0, !dbg !14379
  %249 = load i32, i32* %arrayidx432, align 4, !dbg !14380
  %inc433 = add nsw i32 %249, 1, !dbg !14380
  store i32 %inc433, i32* %arrayidx432, align 4, !dbg !14380
  %idxprom434 = sext i32 %249 to i64, !dbg !14378
  %arrayidx435 = getelementptr inbounds i32, i32* %248, i64 %idxprom434, !dbg !14378
  store i32 %247, i32* %arrayidx435, align 4, !dbg !14381
  br label %if.end437, !dbg !14382

if.else436:                                       ; preds = %for.body426
  %250 = load i32, i32* %i, align 4, !dbg !14383
  %251 = load i32*, i32** %tb, align 8, !dbg !14385
  store i32 %250, i32* %251, align 4, !dbg !14386
  %252 = load i32*, i32** %tb, align 8, !dbg !14387
  %incdec.ptr = getelementptr inbounds i32, i32* %252, i32 1, !dbg !14387
  store i32* %incdec.ptr, i32** %tb, align 8, !dbg !14387
  br label %if.end437

if.end437:                                        ; preds = %if.else436, %if.then431
  br label %for.inc438, !dbg !14388

for.inc438:                                       ; preds = %if.end437
  %call439 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14370
  %253 = bitcast i8* %call439 to %struct.BMVert*, !dbg !14370
  store %struct.BMVert* %253, %struct.BMVert** %ve, align 8, !dbg !14370
  %254 = load i32, i32* %i, align 4, !dbg !14370
  %inc440 = add nsw i32 %254, 1, !dbg !14370
  store i32 %inc440, i32* %i, align 4, !dbg !14370
  br label %for.cond424, !dbg !14370, !llvm.loop !14389

for.end441:                                       ; preds = %for.cond424
  br label %if.end442, !dbg !14391

if.end442:                                        ; preds = %for.end441, %if.then408
  %arrayidx443 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !14392
  %255 = load i32, i32* %arrayidx443, align 4, !dbg !14392
  %tobool444 = icmp ne i32 %255, 0, !dbg !14392
  br i1 %tobool444, label %if.then445, label %if.end477, !dbg !14394

if.then445:                                       ; preds = %if.end442
  %256 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14395
  %arrayidx446 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !14397
  %257 = load i32, i32* %arrayidx446, align 4, !dbg !14397
  %conv447 = sext i32 %257 to i64, !dbg !14397
  %mul448 = mul i64 4, %conv447, !dbg !14398
  %call449 = call i8* %256(i64 %mul448, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.520, i64 0, i64 0)), !dbg !14395
  %258 = bitcast i8* %call449 to i32*, !dbg !14395
  %arrayidx450 = getelementptr inbounds [3 x i32*], [3 x i32*]* %tbuf, i64 0, i64 1, !dbg !14399
  store i32* %258, i32** %arrayidx450, align 8, !dbg !14400
  store i32* %258, i32** %tb, align 8, !dbg !14401
  %259 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14402
  %arrayidx451 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !14403
  %260 = load i32, i32* %arrayidx451, align 4, !dbg !14403
  %conv452 = sext i32 %260 to i64, !dbg !14403
  %mul453 = mul i64 4, %conv452, !dbg !14404
  %call454 = call i8* %259(i64 %mul453, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.521, i64 0, i64 0)), !dbg !14402
  %261 = bitcast i8* %call454 to i32*, !dbg !14402
  %arrayidx455 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 1, !dbg !14405
  store i32* %261, i32** %arrayidx455, align 8, !dbg !14406
  store i32* %261, i32** %mp, align 8, !dbg !14407
  %262 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14408
  %bm456 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %262, i32 0, i32 0, !dbg !14408
  %263 = load %struct.BMesh*, %struct.BMesh** %bm456, align 8, !dbg !14408
  %call457 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %263, i8 zeroext 2, i8* null), !dbg !14408
  %264 = bitcast i8* %call457 to %struct.BMEdge*, !dbg !14408
  store %struct.BMEdge* %264, %struct.BMEdge** %ed, align 8, !dbg !14408
  store i32 0, i32* %i, align 4, !dbg !14408
  br label %for.cond458, !dbg !14408

for.cond458:                                      ; preds = %for.inc473, %if.then445
  %265 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !14410
  %tobool459 = icmp ne %struct.BMEdge* %265, null, !dbg !14408
  br i1 %tobool459, label %for.body460, label %for.end476, !dbg !14408

for.body460:                                      ; preds = %for.cond458
  %266 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !14412
  %head461 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %266, i32 0, i32 0, !dbg !14412
  %267 = load i32, i32* %flag.addr, align 4, !dbg !14412
  %conv462 = trunc i32 %267 to i8, !dbg !14412
  %call463 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head461, i8 zeroext %conv462), !dbg !14412
  %tobool464 = icmp ne i8 %call463, 0, !dbg !14412
  br i1 %tobool464, label %if.then465, label %if.else470, !dbg !14415

if.then465:                                       ; preds = %for.body460
  %268 = load i32, i32* %i, align 4, !dbg !14416
  %269 = load i32*, i32** %mp, align 8, !dbg !14418
  %arrayidx466 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 1, !dbg !14419
  %270 = load i32, i32* %arrayidx466, align 4, !dbg !14420
  %inc467 = add nsw i32 %270, 1, !dbg !14420
  store i32 %inc467, i32* %arrayidx466, align 4, !dbg !14420
  %idxprom468 = sext i32 %270 to i64, !dbg !14418
  %arrayidx469 = getelementptr inbounds i32, i32* %269, i64 %idxprom468, !dbg !14418
  store i32 %268, i32* %arrayidx469, align 4, !dbg !14421
  br label %if.end472, !dbg !14422

if.else470:                                       ; preds = %for.body460
  %271 = load i32, i32* %i, align 4, !dbg !14423
  %272 = load i32*, i32** %tb, align 8, !dbg !14425
  store i32 %271, i32* %272, align 4, !dbg !14426
  %273 = load i32*, i32** %tb, align 8, !dbg !14427
  %incdec.ptr471 = getelementptr inbounds i32, i32* %273, i32 1, !dbg !14427
  store i32* %incdec.ptr471, i32** %tb, align 8, !dbg !14427
  br label %if.end472

if.end472:                                        ; preds = %if.else470, %if.then465
  br label %for.inc473, !dbg !14428

for.inc473:                                       ; preds = %if.end472
  %call474 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14410
  %274 = bitcast i8* %call474 to %struct.BMEdge*, !dbg !14410
  store %struct.BMEdge* %274, %struct.BMEdge** %ed, align 8, !dbg !14410
  %275 = load i32, i32* %i, align 4, !dbg !14410
  %inc475 = add nsw i32 %275, 1, !dbg !14410
  store i32 %inc475, i32* %i, align 4, !dbg !14410
  br label %for.cond458, !dbg !14410, !llvm.loop !14429

for.end476:                                       ; preds = %for.cond458
  br label %if.end477, !dbg !14431

if.end477:                                        ; preds = %for.end476, %if.end442
  %arrayidx478 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14432
  %276 = load i32, i32* %arrayidx478, align 4, !dbg !14432
  %tobool479 = icmp ne i32 %276, 0, !dbg !14432
  br i1 %tobool479, label %if.then480, label %if.end512, !dbg !14434

if.then480:                                       ; preds = %if.end477
  %277 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14435
  %arrayidx481 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14437
  %278 = load i32, i32* %arrayidx481, align 4, !dbg !14437
  %conv482 = sext i32 %278 to i64, !dbg !14437
  %mul483 = mul i64 4, %conv482, !dbg !14438
  %call484 = call i8* %277(i64 %mul483, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.522, i64 0, i64 0)), !dbg !14435
  %279 = bitcast i8* %call484 to i32*, !dbg !14435
  %arrayidx485 = getelementptr inbounds [3 x i32*], [3 x i32*]* %tbuf, i64 0, i64 2, !dbg !14439
  store i32* %279, i32** %arrayidx485, align 16, !dbg !14440
  store i32* %279, i32** %tb, align 8, !dbg !14441
  %280 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14442
  %arrayidx486 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14443
  %281 = load i32, i32* %arrayidx486, align 4, !dbg !14443
  %conv487 = sext i32 %281 to i64, !dbg !14443
  %mul488 = mul i64 4, %conv487, !dbg !14444
  %call489 = call i8* %280(i64 %mul488, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.523, i64 0, i64 0)), !dbg !14442
  %282 = bitcast i8* %call489 to i32*, !dbg !14442
  %arrayidx490 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 2, !dbg !14445
  store i32* %282, i32** %arrayidx490, align 16, !dbg !14446
  store i32* %282, i32** %mp, align 8, !dbg !14447
  %283 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14448
  %bm491 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %283, i32 0, i32 0, !dbg !14448
  %284 = load %struct.BMesh*, %struct.BMesh** %bm491, align 8, !dbg !14448
  %call492 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %284, i8 zeroext 3, i8* null), !dbg !14448
  %285 = bitcast i8* %call492 to %struct.BMFace*, !dbg !14448
  store %struct.BMFace* %285, %struct.BMFace** %fa, align 8, !dbg !14448
  store i32 0, i32* %i, align 4, !dbg !14448
  br label %for.cond493, !dbg !14448

for.cond493:                                      ; preds = %for.inc508, %if.then480
  %286 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14450
  %tobool494 = icmp ne %struct.BMFace* %286, null, !dbg !14448
  br i1 %tobool494, label %for.body495, label %for.end511, !dbg !14448

for.body495:                                      ; preds = %for.cond493
  %287 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14452
  %head496 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %287, i32 0, i32 0, !dbg !14452
  %288 = load i32, i32* %flag.addr, align 4, !dbg !14452
  %conv497 = trunc i32 %288 to i8, !dbg !14452
  %call498 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head496, i8 zeroext %conv497), !dbg !14452
  %tobool499 = icmp ne i8 %call498, 0, !dbg !14452
  br i1 %tobool499, label %if.then500, label %if.else505, !dbg !14455

if.then500:                                       ; preds = %for.body495
  %289 = load i32, i32* %i, align 4, !dbg !14456
  %290 = load i32*, i32** %mp, align 8, !dbg !14458
  %arrayidx501 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 2, !dbg !14459
  %291 = load i32, i32* %arrayidx501, align 4, !dbg !14460
  %inc502 = add nsw i32 %291, 1, !dbg !14460
  store i32 %inc502, i32* %arrayidx501, align 4, !dbg !14460
  %idxprom503 = sext i32 %291 to i64, !dbg !14458
  %arrayidx504 = getelementptr inbounds i32, i32* %290, i64 %idxprom503, !dbg !14458
  store i32 %289, i32* %arrayidx504, align 4, !dbg !14461
  br label %if.end507, !dbg !14462

if.else505:                                       ; preds = %for.body495
  %292 = load i32, i32* %i, align 4, !dbg !14463
  %293 = load i32*, i32** %tb, align 8, !dbg !14465
  store i32 %292, i32* %293, align 4, !dbg !14466
  %294 = load i32*, i32** %tb, align 8, !dbg !14467
  %incdec.ptr506 = getelementptr inbounds i32, i32* %294, i32 1, !dbg !14467
  store i32* %incdec.ptr506, i32** %tb, align 8, !dbg !14467
  br label %if.end507

if.end507:                                        ; preds = %if.else505, %if.then500
  br label %for.inc508, !dbg !14468

for.inc508:                                       ; preds = %if.end507
  %call509 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14450
  %295 = bitcast i8* %call509 to %struct.BMFace*, !dbg !14450
  store %struct.BMFace* %295, %struct.BMFace** %fa, align 8, !dbg !14450
  %296 = load i32, i32* %i, align 4, !dbg !14450
  %inc510 = add nsw i32 %296, 1, !dbg !14450
  store i32 %inc510, i32* %i, align 4, !dbg !14450
  br label %for.cond493, !dbg !14450, !llvm.loop !14469

for.end511:                                       ; preds = %for.cond493
  br label %if.end512, !dbg !14471

if.end512:                                        ; preds = %for.end511, %if.end477
  store i32 3, i32* %j, align 4, !dbg !14472
  br label %for.cond513, !dbg !14474

for.cond513:                                      ; preds = %for.end569, %if.then534, %if.then527, %if.end512
  %297 = load i32, i32* %j, align 4, !dbg !14475
  %dec = add nsw i32 %297, -1, !dbg !14475
  store i32 %dec, i32* %j, align 4, !dbg !14475
  %tobool514 = icmp ne i32 %297, 0, !dbg !14477
  br i1 %tobool514, label %for.body515, label %for.end572, !dbg !14477

for.body515:                                      ; preds = %for.cond513
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !14478, metadata !DIExpression()), !dbg !14480
  %298 = load i32, i32* %j, align 4, !dbg !14481
  %idxprom516 = sext i32 %298 to i64, !dbg !14482
  %arrayidx517 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 %idxprom516, !dbg !14482
  %299 = load i32, i32* %arrayidx517, align 4, !dbg !14482
  store i32 %299, i32* %tot, align 4, !dbg !14480
  call void @llvm.dbg.declare(metadata i32* %aff, metadata !14483, metadata !DIExpression()), !dbg !14484
  %300 = load i32, i32* %j, align 4, !dbg !14485
  %idxprom518 = sext i32 %300 to i64, !dbg !14486
  %arrayidx519 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 %idxprom518, !dbg !14486
  %301 = load i32, i32* %arrayidx519, align 4, !dbg !14486
  store i32 %301, i32* %aff, align 4, !dbg !14484
  %302 = load i32, i32* %j, align 4, !dbg !14487
  %idxprom520 = sext i32 %302 to i64, !dbg !14488
  %arrayidx521 = getelementptr inbounds [3 x i32*], [3 x i32*]* %tbuf, i64 0, i64 %idxprom520, !dbg !14488
  %303 = load i32*, i32** %arrayidx521, align 8, !dbg !14488
  store i32* %303, i32** %tb, align 8, !dbg !14489
  %304 = load i32, i32* %j, align 4, !dbg !14490
  %idxprom522 = sext i32 %304 to i64, !dbg !14491
  %arrayidx523 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 %idxprom522, !dbg !14491
  %305 = load i32*, i32** %arrayidx523, align 8, !dbg !14491
  store i32* %305, i32** %mp, align 8, !dbg !14492
  %306 = load i32*, i32** %tb, align 8, !dbg !14493
  %tobool524 = icmp ne i32* %306, null, !dbg !14493
  br i1 %tobool524, label %land.lhs.true525, label %if.then527, !dbg !14495

land.lhs.true525:                                 ; preds = %for.body515
  %307 = load i32*, i32** %mp, align 8, !dbg !14496
  %tobool526 = icmp ne i32* %307, null, !dbg !14496
  br i1 %tobool526, label %if.end528, label %if.then527, !dbg !14497

if.then527:                                       ; preds = %land.lhs.true525, %for.body515
  br label %for.cond513, !dbg !14498, !llvm.loop !14499

if.end528:                                        ; preds = %land.lhs.true525
  %308 = load i32, i32* %aff, align 4, !dbg !14501
  %cmp529 = icmp eq i32 %308, 0, !dbg !14501
  br i1 %cmp529, label %if.then534, label %lor.lhs.false531, !dbg !14501

lor.lhs.false531:                                 ; preds = %if.end528
  %309 = load i32, i32* %aff, align 4, !dbg !14501
  %310 = load i32, i32* %tot, align 4, !dbg !14501
  %cmp532 = icmp eq i32 %309, %310, !dbg !14501
  br i1 %cmp532, label %if.then534, label %if.end537, !dbg !14503

if.then534:                                       ; preds = %lor.lhs.false531, %if.end528
  %311 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14504
  %312 = load i32*, i32** %tb, align 8, !dbg !14506
  %313 = bitcast i32* %312 to i8*, !dbg !14506
  call void %311(i8* %313), !dbg !14504
  %314 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14507
  %315 = load i32*, i32** %mp, align 8, !dbg !14508
  %316 = bitcast i32* %315 to i8*, !dbg !14508
  call void %314(i8* %316), !dbg !14507
  %317 = load i32, i32* %j, align 4, !dbg !14509
  %idxprom535 = sext i32 %317 to i64, !dbg !14510
  %arrayidx536 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 %idxprom535, !dbg !14510
  store i32* null, i32** %arrayidx536, align 8, !dbg !14511
  br label %for.cond513, !dbg !14512, !llvm.loop !14499

if.end537:                                        ; preds = %lor.lhs.false531
  %318 = load i32, i32* %reverse.addr, align 4, !dbg !14513
  %tobool538 = icmp ne i32 %318, 0, !dbg !14513
  br i1 %tobool538, label %if.then539, label %if.else543, !dbg !14515

if.then539:                                       ; preds = %if.end537
  %319 = load i32*, i32** %tb, align 8, !dbg !14516
  %320 = load i32, i32* %tot, align 4, !dbg !14518
  %321 = load i32, i32* %aff, align 4, !dbg !14519
  %sub540 = sub nsw i32 %320, %321, !dbg !14520
  %idx.ext = sext i32 %sub540 to i64, !dbg !14521
  %add.ptr = getelementptr inbounds i32, i32* %319, i64 %idx.ext, !dbg !14521
  %322 = bitcast i32* %add.ptr to i8*, !dbg !14522
  %323 = load i32*, i32** %mp, align 8, !dbg !14523
  %324 = bitcast i32* %323 to i8*, !dbg !14522
  %325 = load i32, i32* %aff, align 4, !dbg !14524
  %conv541 = sext i32 %325 to i64, !dbg !14524
  %mul542 = mul i64 %conv541, 4, !dbg !14525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %322, i8* align 4 %324, i64 %mul542, i1 false), !dbg !14522
  br label %if.end555, !dbg !14526

if.else543:                                       ; preds = %if.end537
  %326 = load i32*, i32** %mp, align 8, !dbg !14527
  %327 = load i32, i32* %aff, align 4, !dbg !14529
  %idx.ext544 = sext i32 %327 to i64, !dbg !14530
  %add.ptr545 = getelementptr inbounds i32, i32* %326, i64 %idx.ext544, !dbg !14530
  %328 = bitcast i32* %add.ptr545 to i8*, !dbg !14531
  %329 = load i32*, i32** %tb, align 8, !dbg !14532
  %330 = bitcast i32* %329 to i8*, !dbg !14531
  %331 = load i32, i32* %tot, align 4, !dbg !14533
  %332 = load i32, i32* %aff, align 4, !dbg !14534
  %sub546 = sub nsw i32 %331, %332, !dbg !14535
  %conv547 = sext i32 %sub546 to i64, !dbg !14536
  %mul548 = mul i64 %conv547, 4, !dbg !14537
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %328, i8* align 4 %330, i64 %mul548, i1 false), !dbg !14531
  %333 = load i32*, i32** %mp, align 8, !dbg !14538
  store i32* %333, i32** %tb, align 8, !dbg !14539
  %334 = load i32, i32* %j, align 4, !dbg !14540
  %idxprom549 = sext i32 %334 to i64, !dbg !14541
  %arrayidx550 = getelementptr inbounds [3 x i32*], [3 x i32*]* %tbuf, i64 0, i64 %idxprom549, !dbg !14541
  %335 = load i32*, i32** %arrayidx550, align 8, !dbg !14541
  %336 = load i32, i32* %j, align 4, !dbg !14542
  %idxprom551 = sext i32 %336 to i64, !dbg !14543
  %arrayidx552 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 %idxprom551, !dbg !14543
  store i32* %335, i32** %arrayidx552, align 8, !dbg !14544
  store i32* %335, i32** %mp, align 8, !dbg !14545
  %337 = load i32*, i32** %tb, align 8, !dbg !14546
  %338 = load i32, i32* %j, align 4, !dbg !14547
  %idxprom553 = sext i32 %338 to i64, !dbg !14548
  %arrayidx554 = getelementptr inbounds [3 x i32*], [3 x i32*]* %tbuf, i64 0, i64 %idxprom553, !dbg !14548
  store i32* %337, i32** %arrayidx554, align 8, !dbg !14549
  br label %if.end555

if.end555:                                        ; preds = %if.else543, %if.then539
  %339 = load i32, i32* %tot, align 4, !dbg !14550
  store i32 %339, i32* %i, align 4, !dbg !14552
  %340 = load i32, i32* %j, align 4, !dbg !14553
  %idxprom556 = sext i32 %340 to i64, !dbg !14554
  %arrayidx557 = getelementptr inbounds [3 x i32*], [3 x i32*]* %tbuf, i64 0, i64 %idxprom556, !dbg !14554
  %341 = load i32*, i32** %arrayidx557, align 8, !dbg !14554
  %342 = load i32, i32* %tot, align 4, !dbg !14555
  %idx.ext558 = sext i32 %342 to i64, !dbg !14556
  %add.ptr559 = getelementptr inbounds i32, i32* %341, i64 %idx.ext558, !dbg !14556
  %add.ptr560 = getelementptr inbounds i32, i32* %add.ptr559, i64 -1, !dbg !14557
  store i32* %add.ptr560, i32** %tb, align 8, !dbg !14558
  br label %for.cond561, !dbg !14559

for.cond561:                                      ; preds = %for.inc567, %if.end555
  %343 = load i32, i32* %i, align 4, !dbg !14560
  %dec562 = add nsw i32 %343, -1, !dbg !14560
  store i32 %dec562, i32* %i, align 4, !dbg !14560
  %tobool563 = icmp ne i32 %343, 0, !dbg !14562
  br i1 %tobool563, label %for.body564, label %for.end569, !dbg !14562

for.body564:                                      ; preds = %for.cond561
  %344 = load i32, i32* %i, align 4, !dbg !14563
  %345 = load i32*, i32** %mp, align 8, !dbg !14565
  %346 = load i32*, i32** %tb, align 8, !dbg !14566
  %347 = load i32, i32* %346, align 4, !dbg !14567
  %idxprom565 = zext i32 %347 to i64, !dbg !14565
  %arrayidx566 = getelementptr inbounds i32, i32* %345, i64 %idxprom565, !dbg !14565
  store i32 %344, i32* %arrayidx566, align 4, !dbg !14568
  br label %for.inc567, !dbg !14569

for.inc567:                                       ; preds = %for.body564
  %348 = load i32*, i32** %tb, align 8, !dbg !14570
  %incdec.ptr568 = getelementptr inbounds i32, i32* %348, i32 -1, !dbg !14570
  store i32* %incdec.ptr568, i32** %tb, align 8, !dbg !14570
  br label %for.cond561, !dbg !14571, !llvm.loop !14572

for.end569:                                       ; preds = %for.cond561
  %349 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14574
  %350 = load i32, i32* %j, align 4, !dbg !14575
  %idxprom570 = sext i32 %350 to i64, !dbg !14576
  %arrayidx571 = getelementptr inbounds [3 x i32*], [3 x i32*]* %tbuf, i64 0, i64 %idxprom570, !dbg !14576
  %351 = load i32*, i32** %arrayidx571, align 8, !dbg !14576
  %352 = bitcast i32* %351 to i8*, !dbg !14576
  call void %349(i8* %352), !dbg !14574
  br label %for.cond513, !dbg !14577, !llvm.loop !14499

for.end572:                                       ; preds = %for.cond513
  br label %if.end855, !dbg !14578

if.else573:                                       ; preds = %if.else405
  %353 = load i32, i32* %action.addr, align 4, !dbg !14579
  %cmp574 = icmp eq i32 %353, 6, !dbg !14581
  br i1 %cmp574, label %if.then576, label %if.else714, !dbg !14582

if.then576:                                       ; preds = %if.else573
  %arrayidx577 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !14583
  %354 = load i32, i32* %arrayidx577, align 4, !dbg !14583
  %tobool578 = icmp ne i32 %354, 0, !dbg !14583
  br i1 %tobool578, label %if.then579, label %if.end621, !dbg !14586

if.then579:                                       ; preds = %if.then576
  call void @llvm.dbg.declare(metadata %struct.RNG** %rng, metadata !14587, metadata !DIExpression()), !dbg !14593
  %355 = load i32, i32* %seed.addr, align 4, !dbg !14594
  %call580 = call %struct.RNG* @BLI_rng_new_srandom(i32 %355), !dbg !14595
  store %struct.RNG* %call580, %struct.RNG** %rng, align 8, !dbg !14593
  %356 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14596
  %arrayidx581 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !14597
  %357 = load i32, i32* %arrayidx581, align 4, !dbg !14597
  %conv582 = sext i32 %357 to i64, !dbg !14597
  %mul583 = mul i64 1, %conv582, !dbg !14598
  %call584 = call i8* %356(i64 %mul583, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.512, i64 0, i64 0)), !dbg !14596
  %arrayidx585 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 0, !dbg !14599
  store i8* %call584, i8** %arrayidx585, align 16, !dbg !14600
  store i8* %call584, i8** %pb, align 8, !dbg !14601
  %358 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14602
  %arrayidx586 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !14603
  %359 = load i32, i32* %arrayidx586, align 4, !dbg !14603
  %conv587 = sext i32 %359 to i64, !dbg !14603
  %mul588 = mul i64 8, %conv587, !dbg !14604
  %call589 = call i8* %358(i64 %mul588, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.513, i64 0, i64 0)), !dbg !14602
  %360 = bitcast i8* %call589 to %struct.BMElemSort*, !dbg !14602
  %arrayidx590 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 0, !dbg !14605
  store %struct.BMElemSort* %360, %struct.BMElemSort** %arrayidx590, align 16, !dbg !14606
  store %struct.BMElemSort* %360, %struct.BMElemSort** %sb, align 8, !dbg !14607
  %361 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14608
  %bm591 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %361, i32 0, i32 0, !dbg !14608
  %362 = load %struct.BMesh*, %struct.BMesh** %bm591, align 8, !dbg !14608
  %call592 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %362, i8 zeroext 1, i8* null), !dbg !14608
  %363 = bitcast i8* %call592 to %struct.BMVert*, !dbg !14608
  store %struct.BMVert* %363, %struct.BMVert** %ve, align 8, !dbg !14608
  store i32 0, i32* %i, align 4, !dbg !14608
  br label %for.cond593, !dbg !14608

for.cond593:                                      ; preds = %for.inc617, %if.then579
  %364 = load %struct.BMVert*, %struct.BMVert** %ve, align 8, !dbg !14610
  %tobool594 = icmp ne %struct.BMVert* %364, null, !dbg !14608
  br i1 %tobool594, label %for.body595, label %for.end620, !dbg !14608

for.body595:                                      ; preds = %for.cond593
  %365 = load %struct.BMVert*, %struct.BMVert** %ve, align 8, !dbg !14612
  %head596 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %365, i32 0, i32 0, !dbg !14612
  %366 = load i32, i32* %flag.addr, align 4, !dbg !14612
  %conv597 = trunc i32 %366 to i8, !dbg !14612
  %call598 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head596, i8 zeroext %conv597), !dbg !14612
  %tobool599 = icmp ne i8 %call598, 0, !dbg !14612
  br i1 %tobool599, label %if.then600, label %if.else613, !dbg !14615

if.then600:                                       ; preds = %for.body595
  %367 = load i8*, i8** %pb, align 8, !dbg !14616
  %368 = load i32, i32* %i, align 4, !dbg !14618
  %idxprom601 = sext i32 %368 to i64, !dbg !14616
  %arrayidx602 = getelementptr inbounds i8, i8* %367, i64 %idxprom601, !dbg !14616
  store i8 0, i8* %arrayidx602, align 1, !dbg !14619
  %369 = load i32, i32* %i, align 4, !dbg !14620
  %370 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14621
  %arrayidx603 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 0, !dbg !14622
  %371 = load i32, i32* %arrayidx603, align 4, !dbg !14622
  %idxprom604 = sext i32 %371 to i64, !dbg !14621
  %arrayidx605 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %370, i64 %idxprom604, !dbg !14621
  %org_idx606 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx605, i32 0, i32 1, !dbg !14623
  store i32 %369, i32* %org_idx606, align 4, !dbg !14624
  %372 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !14625
  %call607 = call float @BLI_rng_get_float(%struct.RNG* %372), !dbg !14626
  %373 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14627
  %arrayidx608 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 0, !dbg !14628
  %374 = load i32, i32* %arrayidx608, align 4, !dbg !14629
  %inc609 = add nsw i32 %374, 1, !dbg !14629
  store i32 %inc609, i32* %arrayidx608, align 4, !dbg !14629
  %idxprom610 = sext i32 %374 to i64, !dbg !14627
  %arrayidx611 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %373, i64 %idxprom610, !dbg !14627
  %srt612 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx611, i32 0, i32 0, !dbg !14630
  store float %call607, float* %srt612, align 4, !dbg !14631
  br label %if.end616, !dbg !14632

if.else613:                                       ; preds = %for.body595
  %375 = load i8*, i8** %pb, align 8, !dbg !14633
  %376 = load i32, i32* %i, align 4, !dbg !14635
  %idxprom614 = sext i32 %376 to i64, !dbg !14633
  %arrayidx615 = getelementptr inbounds i8, i8* %375, i64 %idxprom614, !dbg !14633
  store i8 1, i8* %arrayidx615, align 1, !dbg !14636
  br label %if.end616

if.end616:                                        ; preds = %if.else613, %if.then600
  br label %for.inc617, !dbg !14637

for.inc617:                                       ; preds = %if.end616
  %call618 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14610
  %377 = bitcast i8* %call618 to %struct.BMVert*, !dbg !14610
  store %struct.BMVert* %377, %struct.BMVert** %ve, align 8, !dbg !14610
  %378 = load i32, i32* %i, align 4, !dbg !14610
  %inc619 = add nsw i32 %378, 1, !dbg !14610
  store i32 %inc619, i32* %i, align 4, !dbg !14610
  br label %for.cond593, !dbg !14610, !llvm.loop !14638

for.end620:                                       ; preds = %for.cond593
  %379 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !14640
  call void @BLI_rng_free(%struct.RNG* %379), !dbg !14641
  br label %if.end621, !dbg !14642

if.end621:                                        ; preds = %for.end620, %if.then576
  %arrayidx622 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !14643
  %380 = load i32, i32* %arrayidx622, align 4, !dbg !14643
  %tobool623 = icmp ne i32 %380, 0, !dbg !14643
  br i1 %tobool623, label %if.then624, label %if.end667, !dbg !14645

if.then624:                                       ; preds = %if.end621
  call void @llvm.dbg.declare(metadata %struct.RNG** %rng625, metadata !14646, metadata !DIExpression()), !dbg !14648
  %381 = load i32, i32* %seed.addr, align 4, !dbg !14649
  %call626 = call %struct.RNG* @BLI_rng_new_srandom(i32 %381), !dbg !14650
  store %struct.RNG* %call626, %struct.RNG** %rng625, align 8, !dbg !14648
  %382 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14651
  %arrayidx627 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !14652
  %383 = load i32, i32* %arrayidx627, align 4, !dbg !14652
  %conv628 = sext i32 %383 to i64, !dbg !14652
  %mul629 = mul i64 1, %conv628, !dbg !14653
  %call630 = call i8* %382(i64 %mul629, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.514, i64 0, i64 0)), !dbg !14651
  %arrayidx631 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 1, !dbg !14654
  store i8* %call630, i8** %arrayidx631, align 8, !dbg !14655
  store i8* %call630, i8** %pb, align 8, !dbg !14656
  %384 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14657
  %arrayidx632 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !14658
  %385 = load i32, i32* %arrayidx632, align 4, !dbg !14658
  %conv633 = sext i32 %385 to i64, !dbg !14658
  %mul634 = mul i64 8, %conv633, !dbg !14659
  %call635 = call i8* %384(i64 %mul634, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.515, i64 0, i64 0)), !dbg !14657
  %386 = bitcast i8* %call635 to %struct.BMElemSort*, !dbg !14657
  %arrayidx636 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 1, !dbg !14660
  store %struct.BMElemSort* %386, %struct.BMElemSort** %arrayidx636, align 8, !dbg !14661
  store %struct.BMElemSort* %386, %struct.BMElemSort** %sb, align 8, !dbg !14662
  %387 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14663
  %bm637 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %387, i32 0, i32 0, !dbg !14663
  %388 = load %struct.BMesh*, %struct.BMesh** %bm637, align 8, !dbg !14663
  %call638 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %388, i8 zeroext 2, i8* null), !dbg !14663
  %389 = bitcast i8* %call638 to %struct.BMEdge*, !dbg !14663
  store %struct.BMEdge* %389, %struct.BMEdge** %ed, align 8, !dbg !14663
  store i32 0, i32* %i, align 4, !dbg !14663
  br label %for.cond639, !dbg !14663

for.cond639:                                      ; preds = %for.inc663, %if.then624
  %390 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !14665
  %tobool640 = icmp ne %struct.BMEdge* %390, null, !dbg !14663
  br i1 %tobool640, label %for.body641, label %for.end666, !dbg !14663

for.body641:                                      ; preds = %for.cond639
  %391 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !14667
  %head642 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %391, i32 0, i32 0, !dbg !14667
  %392 = load i32, i32* %flag.addr, align 4, !dbg !14667
  %conv643 = trunc i32 %392 to i8, !dbg !14667
  %call644 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head642, i8 zeroext %conv643), !dbg !14667
  %tobool645 = icmp ne i8 %call644, 0, !dbg !14667
  br i1 %tobool645, label %if.then646, label %if.else659, !dbg !14670

if.then646:                                       ; preds = %for.body641
  %393 = load i8*, i8** %pb, align 8, !dbg !14671
  %394 = load i32, i32* %i, align 4, !dbg !14673
  %idxprom647 = sext i32 %394 to i64, !dbg !14671
  %arrayidx648 = getelementptr inbounds i8, i8* %393, i64 %idxprom647, !dbg !14671
  store i8 0, i8* %arrayidx648, align 1, !dbg !14674
  %395 = load i32, i32* %i, align 4, !dbg !14675
  %396 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14676
  %arrayidx649 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 1, !dbg !14677
  %397 = load i32, i32* %arrayidx649, align 4, !dbg !14677
  %idxprom650 = sext i32 %397 to i64, !dbg !14676
  %arrayidx651 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %396, i64 %idxprom650, !dbg !14676
  %org_idx652 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx651, i32 0, i32 1, !dbg !14678
  store i32 %395, i32* %org_idx652, align 4, !dbg !14679
  %398 = load %struct.RNG*, %struct.RNG** %rng625, align 8, !dbg !14680
  %call653 = call float @BLI_rng_get_float(%struct.RNG* %398), !dbg !14681
  %399 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14682
  %arrayidx654 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 1, !dbg !14683
  %400 = load i32, i32* %arrayidx654, align 4, !dbg !14684
  %inc655 = add nsw i32 %400, 1, !dbg !14684
  store i32 %inc655, i32* %arrayidx654, align 4, !dbg !14684
  %idxprom656 = sext i32 %400 to i64, !dbg !14682
  %arrayidx657 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %399, i64 %idxprom656, !dbg !14682
  %srt658 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx657, i32 0, i32 0, !dbg !14685
  store float %call653, float* %srt658, align 4, !dbg !14686
  br label %if.end662, !dbg !14687

if.else659:                                       ; preds = %for.body641
  %401 = load i8*, i8** %pb, align 8, !dbg !14688
  %402 = load i32, i32* %i, align 4, !dbg !14690
  %idxprom660 = sext i32 %402 to i64, !dbg !14688
  %arrayidx661 = getelementptr inbounds i8, i8* %401, i64 %idxprom660, !dbg !14688
  store i8 1, i8* %arrayidx661, align 1, !dbg !14691
  br label %if.end662

if.end662:                                        ; preds = %if.else659, %if.then646
  br label %for.inc663, !dbg !14692

for.inc663:                                       ; preds = %if.end662
  %call664 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14665
  %403 = bitcast i8* %call664 to %struct.BMEdge*, !dbg !14665
  store %struct.BMEdge* %403, %struct.BMEdge** %ed, align 8, !dbg !14665
  %404 = load i32, i32* %i, align 4, !dbg !14665
  %inc665 = add nsw i32 %404, 1, !dbg !14665
  store i32 %inc665, i32* %i, align 4, !dbg !14665
  br label %for.cond639, !dbg !14665, !llvm.loop !14693

for.end666:                                       ; preds = %for.cond639
  %405 = load %struct.RNG*, %struct.RNG** %rng625, align 8, !dbg !14695
  call void @BLI_rng_free(%struct.RNG* %405), !dbg !14696
  br label %if.end667, !dbg !14697

if.end667:                                        ; preds = %for.end666, %if.end621
  %arrayidx668 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14698
  %406 = load i32, i32* %arrayidx668, align 4, !dbg !14698
  %tobool669 = icmp ne i32 %406, 0, !dbg !14698
  br i1 %tobool669, label %if.then670, label %if.end713, !dbg !14700

if.then670:                                       ; preds = %if.end667
  call void @llvm.dbg.declare(metadata %struct.RNG** %rng671, metadata !14701, metadata !DIExpression()), !dbg !14703
  %407 = load i32, i32* %seed.addr, align 4, !dbg !14704
  %call672 = call %struct.RNG* @BLI_rng_new_srandom(i32 %407), !dbg !14705
  store %struct.RNG* %call672, %struct.RNG** %rng671, align 8, !dbg !14703
  %408 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14706
  %arrayidx673 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14707
  %409 = load i32, i32* %arrayidx673, align 4, !dbg !14707
  %conv674 = sext i32 %409 to i64, !dbg !14707
  %mul675 = mul i64 1, %conv674, !dbg !14708
  %call676 = call i8* %408(i64 %mul675, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.516, i64 0, i64 0)), !dbg !14706
  %arrayidx677 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 2, !dbg !14709
  store i8* %call676, i8** %arrayidx677, align 16, !dbg !14710
  store i8* %call676, i8** %pb, align 8, !dbg !14711
  %410 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14712
  %arrayidx678 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14713
  %411 = load i32, i32* %arrayidx678, align 4, !dbg !14713
  %conv679 = sext i32 %411 to i64, !dbg !14713
  %mul680 = mul i64 8, %conv679, !dbg !14714
  %call681 = call i8* %410(i64 %mul680, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.517, i64 0, i64 0)), !dbg !14712
  %412 = bitcast i8* %call681 to %struct.BMElemSort*, !dbg !14712
  %arrayidx682 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 2, !dbg !14715
  store %struct.BMElemSort* %412, %struct.BMElemSort** %arrayidx682, align 16, !dbg !14716
  store %struct.BMElemSort* %412, %struct.BMElemSort** %sb, align 8, !dbg !14717
  %413 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14718
  %bm683 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %413, i32 0, i32 0, !dbg !14718
  %414 = load %struct.BMesh*, %struct.BMesh** %bm683, align 8, !dbg !14718
  %call684 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %414, i8 zeroext 3, i8* null), !dbg !14718
  %415 = bitcast i8* %call684 to %struct.BMFace*, !dbg !14718
  store %struct.BMFace* %415, %struct.BMFace** %fa, align 8, !dbg !14718
  store i32 0, i32* %i, align 4, !dbg !14718
  br label %for.cond685, !dbg !14718

for.cond685:                                      ; preds = %for.inc709, %if.then670
  %416 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14720
  %tobool686 = icmp ne %struct.BMFace* %416, null, !dbg !14718
  br i1 %tobool686, label %for.body687, label %for.end712, !dbg !14718

for.body687:                                      ; preds = %for.cond685
  %417 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14722
  %head688 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %417, i32 0, i32 0, !dbg !14722
  %418 = load i32, i32* %flag.addr, align 4, !dbg !14722
  %conv689 = trunc i32 %418 to i8, !dbg !14722
  %call690 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head688, i8 zeroext %conv689), !dbg !14722
  %tobool691 = icmp ne i8 %call690, 0, !dbg !14722
  br i1 %tobool691, label %if.then692, label %if.else705, !dbg !14725

if.then692:                                       ; preds = %for.body687
  %419 = load i8*, i8** %pb, align 8, !dbg !14726
  %420 = load i32, i32* %i, align 4, !dbg !14728
  %idxprom693 = sext i32 %420 to i64, !dbg !14726
  %arrayidx694 = getelementptr inbounds i8, i8* %419, i64 %idxprom693, !dbg !14726
  store i8 0, i8* %arrayidx694, align 1, !dbg !14729
  %421 = load i32, i32* %i, align 4, !dbg !14730
  %422 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14731
  %arrayidx695 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 2, !dbg !14732
  %423 = load i32, i32* %arrayidx695, align 4, !dbg !14732
  %idxprom696 = sext i32 %423 to i64, !dbg !14731
  %arrayidx697 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %422, i64 %idxprom696, !dbg !14731
  %org_idx698 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx697, i32 0, i32 1, !dbg !14733
  store i32 %421, i32* %org_idx698, align 4, !dbg !14734
  %424 = load %struct.RNG*, %struct.RNG** %rng671, align 8, !dbg !14735
  %call699 = call float @BLI_rng_get_float(%struct.RNG* %424), !dbg !14736
  %425 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14737
  %arrayidx700 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 2, !dbg !14738
  %426 = load i32, i32* %arrayidx700, align 4, !dbg !14739
  %inc701 = add nsw i32 %426, 1, !dbg !14739
  store i32 %inc701, i32* %arrayidx700, align 4, !dbg !14739
  %idxprom702 = sext i32 %426 to i64, !dbg !14737
  %arrayidx703 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %425, i64 %idxprom702, !dbg !14737
  %srt704 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx703, i32 0, i32 0, !dbg !14740
  store float %call699, float* %srt704, align 4, !dbg !14741
  br label %if.end708, !dbg !14742

if.else705:                                       ; preds = %for.body687
  %427 = load i8*, i8** %pb, align 8, !dbg !14743
  %428 = load i32, i32* %i, align 4, !dbg !14745
  %idxprom706 = sext i32 %428 to i64, !dbg !14743
  %arrayidx707 = getelementptr inbounds i8, i8* %427, i64 %idxprom706, !dbg !14743
  store i8 1, i8* %arrayidx707, align 1, !dbg !14746
  br label %if.end708

if.end708:                                        ; preds = %if.else705, %if.then692
  br label %for.inc709, !dbg !14747

for.inc709:                                       ; preds = %if.end708
  %call710 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14720
  %429 = bitcast i8* %call710 to %struct.BMFace*, !dbg !14720
  store %struct.BMFace* %429, %struct.BMFace** %fa, align 8, !dbg !14720
  %430 = load i32, i32* %i, align 4, !dbg !14720
  %inc711 = add nsw i32 %430, 1, !dbg !14720
  store i32 %inc711, i32* %i, align 4, !dbg !14720
  br label %for.cond685, !dbg !14720, !llvm.loop !14748

for.end712:                                       ; preds = %for.cond685
  %431 = load %struct.RNG*, %struct.RNG** %rng671, align 8, !dbg !14750
  call void @BLI_rng_free(%struct.RNG* %431), !dbg !14751
  br label %if.end713, !dbg !14752

if.end713:                                        ; preds = %for.end712, %if.end667
  br label %if.end854, !dbg !14753

if.else714:                                       ; preds = %if.else573
  %432 = load i32, i32* %action.addr, align 4, !dbg !14754
  %cmp715 = icmp eq i32 %432, 7, !dbg !14756
  br i1 %cmp715, label %if.then717, label %if.end853, !dbg !14757

if.then717:                                       ; preds = %if.else714
  %arrayidx718 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !14758
  %433 = load i32, i32* %arrayidx718, align 4, !dbg !14758
  %tobool719 = icmp ne i32 %433, 0, !dbg !14758
  br i1 %tobool719, label %if.then720, label %if.end762, !dbg !14761

if.then720:                                       ; preds = %if.then717
  %434 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14762
  %arrayidx721 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !14764
  %435 = load i32, i32* %arrayidx721, align 4, !dbg !14764
  %conv722 = sext i32 %435 to i64, !dbg !14764
  %mul723 = mul i64 1, %conv722, !dbg !14765
  %call724 = call i8* %434(i64 %mul723, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.512, i64 0, i64 0)), !dbg !14762
  %arrayidx725 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 0, !dbg !14766
  store i8* %call724, i8** %arrayidx725, align 16, !dbg !14767
  store i8* %call724, i8** %pb, align 8, !dbg !14768
  %436 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14769
  %arrayidx726 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 0, !dbg !14770
  %437 = load i32, i32* %arrayidx726, align 4, !dbg !14770
  %conv727 = sext i32 %437 to i64, !dbg !14770
  %mul728 = mul i64 8, %conv727, !dbg !14771
  %call729 = call i8* %436(i64 %mul728, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.513, i64 0, i64 0)), !dbg !14769
  %438 = bitcast i8* %call729 to %struct.BMElemSort*, !dbg !14769
  %arrayidx730 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 0, !dbg !14772
  store %struct.BMElemSort* %438, %struct.BMElemSort** %arrayidx730, align 16, !dbg !14773
  store %struct.BMElemSort* %438, %struct.BMElemSort** %sb, align 8, !dbg !14774
  %439 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14775
  %bm731 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %439, i32 0, i32 0, !dbg !14775
  %440 = load %struct.BMesh*, %struct.BMesh** %bm731, align 8, !dbg !14775
  %call732 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %440, i8 zeroext 1, i8* null), !dbg !14775
  %441 = bitcast i8* %call732 to %struct.BMVert*, !dbg !14775
  store %struct.BMVert* %441, %struct.BMVert** %ve, align 8, !dbg !14775
  store i32 0, i32* %i, align 4, !dbg !14775
  br label %for.cond733, !dbg !14775

for.cond733:                                      ; preds = %for.inc758, %if.then720
  %442 = load %struct.BMVert*, %struct.BMVert** %ve, align 8, !dbg !14777
  %tobool734 = icmp ne %struct.BMVert* %442, null, !dbg !14775
  br i1 %tobool734, label %for.body735, label %for.end761, !dbg !14775

for.body735:                                      ; preds = %for.cond733
  %443 = load %struct.BMVert*, %struct.BMVert** %ve, align 8, !dbg !14779
  %head736 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %443, i32 0, i32 0, !dbg !14779
  %444 = load i32, i32* %flag.addr, align 4, !dbg !14779
  %conv737 = trunc i32 %444 to i8, !dbg !14779
  %call738 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head736, i8 zeroext %conv737), !dbg !14779
  %tobool739 = icmp ne i8 %call738, 0, !dbg !14779
  br i1 %tobool739, label %if.then740, label %if.else754, !dbg !14782

if.then740:                                       ; preds = %for.body735
  %445 = load i8*, i8** %pb, align 8, !dbg !14783
  %446 = load i32, i32* %i, align 4, !dbg !14785
  %idxprom741 = sext i32 %446 to i64, !dbg !14783
  %arrayidx742 = getelementptr inbounds i8, i8* %445, i64 %idxprom741, !dbg !14783
  store i8 0, i8* %arrayidx742, align 1, !dbg !14786
  %447 = load i32, i32* %i, align 4, !dbg !14787
  %448 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14788
  %arrayidx743 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 0, !dbg !14789
  %449 = load i32, i32* %arrayidx743, align 4, !dbg !14789
  %idxprom744 = sext i32 %449 to i64, !dbg !14788
  %arrayidx745 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %448, i64 %idxprom744, !dbg !14788
  %org_idx746 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx745, i32 0, i32 1, !dbg !14790
  store i32 %447, i32* %org_idx746, align 4, !dbg !14791
  %450 = load i32, i32* %i, align 4, !dbg !14792
  %sub747 = sub nsw i32 0, %450, !dbg !14793
  %conv748 = sitofp i32 %sub747 to float, !dbg !14794
  %451 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14795
  %arrayidx749 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 0, !dbg !14796
  %452 = load i32, i32* %arrayidx749, align 4, !dbg !14797
  %inc750 = add nsw i32 %452, 1, !dbg !14797
  store i32 %inc750, i32* %arrayidx749, align 4, !dbg !14797
  %idxprom751 = sext i32 %452 to i64, !dbg !14795
  %arrayidx752 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %451, i64 %idxprom751, !dbg !14795
  %srt753 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx752, i32 0, i32 0, !dbg !14798
  store float %conv748, float* %srt753, align 4, !dbg !14799
  br label %if.end757, !dbg !14800

if.else754:                                       ; preds = %for.body735
  %453 = load i8*, i8** %pb, align 8, !dbg !14801
  %454 = load i32, i32* %i, align 4, !dbg !14803
  %idxprom755 = sext i32 %454 to i64, !dbg !14801
  %arrayidx756 = getelementptr inbounds i8, i8* %453, i64 %idxprom755, !dbg !14801
  store i8 1, i8* %arrayidx756, align 1, !dbg !14804
  br label %if.end757

if.end757:                                        ; preds = %if.else754, %if.then740
  br label %for.inc758, !dbg !14805

for.inc758:                                       ; preds = %if.end757
  %call759 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14777
  %455 = bitcast i8* %call759 to %struct.BMVert*, !dbg !14777
  store %struct.BMVert* %455, %struct.BMVert** %ve, align 8, !dbg !14777
  %456 = load i32, i32* %i, align 4, !dbg !14777
  %inc760 = add nsw i32 %456, 1, !dbg !14777
  store i32 %inc760, i32* %i, align 4, !dbg !14777
  br label %for.cond733, !dbg !14777, !llvm.loop !14806

for.end761:                                       ; preds = %for.cond733
  br label %if.end762, !dbg !14808

if.end762:                                        ; preds = %for.end761, %if.then717
  %arrayidx763 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !14809
  %457 = load i32, i32* %arrayidx763, align 4, !dbg !14809
  %tobool764 = icmp ne i32 %457, 0, !dbg !14809
  br i1 %tobool764, label %if.then765, label %if.end807, !dbg !14811

if.then765:                                       ; preds = %if.end762
  %458 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14812
  %arrayidx766 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !14814
  %459 = load i32, i32* %arrayidx766, align 4, !dbg !14814
  %conv767 = sext i32 %459 to i64, !dbg !14814
  %mul768 = mul i64 1, %conv767, !dbg !14815
  %call769 = call i8* %458(i64 %mul768, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.514, i64 0, i64 0)), !dbg !14812
  %arrayidx770 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 1, !dbg !14816
  store i8* %call769, i8** %arrayidx770, align 8, !dbg !14817
  store i8* %call769, i8** %pb, align 8, !dbg !14818
  %460 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14819
  %arrayidx771 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 1, !dbg !14820
  %461 = load i32, i32* %arrayidx771, align 4, !dbg !14820
  %conv772 = sext i32 %461 to i64, !dbg !14820
  %mul773 = mul i64 8, %conv772, !dbg !14821
  %call774 = call i8* %460(i64 %mul773, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.515, i64 0, i64 0)), !dbg !14819
  %462 = bitcast i8* %call774 to %struct.BMElemSort*, !dbg !14819
  %arrayidx775 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 1, !dbg !14822
  store %struct.BMElemSort* %462, %struct.BMElemSort** %arrayidx775, align 8, !dbg !14823
  store %struct.BMElemSort* %462, %struct.BMElemSort** %sb, align 8, !dbg !14824
  %463 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14825
  %bm776 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %463, i32 0, i32 0, !dbg !14825
  %464 = load %struct.BMesh*, %struct.BMesh** %bm776, align 8, !dbg !14825
  %call777 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %464, i8 zeroext 2, i8* null), !dbg !14825
  %465 = bitcast i8* %call777 to %struct.BMEdge*, !dbg !14825
  store %struct.BMEdge* %465, %struct.BMEdge** %ed, align 8, !dbg !14825
  store i32 0, i32* %i, align 4, !dbg !14825
  br label %for.cond778, !dbg !14825

for.cond778:                                      ; preds = %for.inc803, %if.then765
  %466 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !14827
  %tobool779 = icmp ne %struct.BMEdge* %466, null, !dbg !14825
  br i1 %tobool779, label %for.body780, label %for.end806, !dbg !14825

for.body780:                                      ; preds = %for.cond778
  %467 = load %struct.BMEdge*, %struct.BMEdge** %ed, align 8, !dbg !14829
  %head781 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %467, i32 0, i32 0, !dbg !14829
  %468 = load i32, i32* %flag.addr, align 4, !dbg !14829
  %conv782 = trunc i32 %468 to i8, !dbg !14829
  %call783 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head781, i8 zeroext %conv782), !dbg !14829
  %tobool784 = icmp ne i8 %call783, 0, !dbg !14829
  br i1 %tobool784, label %if.then785, label %if.else799, !dbg !14832

if.then785:                                       ; preds = %for.body780
  %469 = load i8*, i8** %pb, align 8, !dbg !14833
  %470 = load i32, i32* %i, align 4, !dbg !14835
  %idxprom786 = sext i32 %470 to i64, !dbg !14833
  %arrayidx787 = getelementptr inbounds i8, i8* %469, i64 %idxprom786, !dbg !14833
  store i8 0, i8* %arrayidx787, align 1, !dbg !14836
  %471 = load i32, i32* %i, align 4, !dbg !14837
  %472 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14838
  %arrayidx788 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 1, !dbg !14839
  %473 = load i32, i32* %arrayidx788, align 4, !dbg !14839
  %idxprom789 = sext i32 %473 to i64, !dbg !14838
  %arrayidx790 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %472, i64 %idxprom789, !dbg !14838
  %org_idx791 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx790, i32 0, i32 1, !dbg !14840
  store i32 %471, i32* %org_idx791, align 4, !dbg !14841
  %474 = load i32, i32* %i, align 4, !dbg !14842
  %sub792 = sub nsw i32 0, %474, !dbg !14843
  %conv793 = sitofp i32 %sub792 to float, !dbg !14844
  %475 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14845
  %arrayidx794 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 1, !dbg !14846
  %476 = load i32, i32* %arrayidx794, align 4, !dbg !14847
  %inc795 = add nsw i32 %476, 1, !dbg !14847
  store i32 %inc795, i32* %arrayidx794, align 4, !dbg !14847
  %idxprom796 = sext i32 %476 to i64, !dbg !14845
  %arrayidx797 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %475, i64 %idxprom796, !dbg !14845
  %srt798 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx797, i32 0, i32 0, !dbg !14848
  store float %conv793, float* %srt798, align 4, !dbg !14849
  br label %if.end802, !dbg !14850

if.else799:                                       ; preds = %for.body780
  %477 = load i8*, i8** %pb, align 8, !dbg !14851
  %478 = load i32, i32* %i, align 4, !dbg !14853
  %idxprom800 = sext i32 %478 to i64, !dbg !14851
  %arrayidx801 = getelementptr inbounds i8, i8* %477, i64 %idxprom800, !dbg !14851
  store i8 1, i8* %arrayidx801, align 1, !dbg !14854
  br label %if.end802

if.end802:                                        ; preds = %if.else799, %if.then785
  br label %for.inc803, !dbg !14855

for.inc803:                                       ; preds = %if.end802
  %call804 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14827
  %479 = bitcast i8* %call804 to %struct.BMEdge*, !dbg !14827
  store %struct.BMEdge* %479, %struct.BMEdge** %ed, align 8, !dbg !14827
  %480 = load i32, i32* %i, align 4, !dbg !14827
  %inc805 = add nsw i32 %480, 1, !dbg !14827
  store i32 %inc805, i32* %i, align 4, !dbg !14827
  br label %for.cond778, !dbg !14827, !llvm.loop !14856

for.end806:                                       ; preds = %for.cond778
  br label %if.end807, !dbg !14858

if.end807:                                        ; preds = %for.end806, %if.end762
  %arrayidx808 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14859
  %481 = load i32, i32* %arrayidx808, align 4, !dbg !14859
  %tobool809 = icmp ne i32 %481, 0, !dbg !14859
  br i1 %tobool809, label %if.then810, label %if.end852, !dbg !14861

if.then810:                                       ; preds = %if.end807
  %482 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14862
  %arrayidx811 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14864
  %483 = load i32, i32* %arrayidx811, align 4, !dbg !14864
  %conv812 = sext i32 %483 to i64, !dbg !14864
  %mul813 = mul i64 1, %conv812, !dbg !14865
  %call814 = call i8* %482(i64 %mul813, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.516, i64 0, i64 0)), !dbg !14862
  %arrayidx815 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 2, !dbg !14866
  store i8* %call814, i8** %arrayidx815, align 16, !dbg !14867
  store i8* %call814, i8** %pb, align 8, !dbg !14868
  %484 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14869
  %arrayidx816 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 2, !dbg !14870
  %485 = load i32, i32* %arrayidx816, align 4, !dbg !14870
  %conv817 = sext i32 %485 to i64, !dbg !14870
  %mul818 = mul i64 8, %conv817, !dbg !14871
  %call819 = call i8* %484(i64 %mul818, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.517, i64 0, i64 0)), !dbg !14869
  %486 = bitcast i8* %call819 to %struct.BMElemSort*, !dbg !14869
  %arrayidx820 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 2, !dbg !14872
  store %struct.BMElemSort* %486, %struct.BMElemSort** %arrayidx820, align 16, !dbg !14873
  store %struct.BMElemSort* %486, %struct.BMElemSort** %sb, align 8, !dbg !14874
  %487 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !14875
  %bm821 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %487, i32 0, i32 0, !dbg !14875
  %488 = load %struct.BMesh*, %struct.BMesh** %bm821, align 8, !dbg !14875
  %call822 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %488, i8 zeroext 3, i8* null), !dbg !14875
  %489 = bitcast i8* %call822 to %struct.BMFace*, !dbg !14875
  store %struct.BMFace* %489, %struct.BMFace** %fa, align 8, !dbg !14875
  store i32 0, i32* %i, align 4, !dbg !14875
  br label %for.cond823, !dbg !14875

for.cond823:                                      ; preds = %for.inc848, %if.then810
  %490 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14877
  %tobool824 = icmp ne %struct.BMFace* %490, null, !dbg !14875
  br i1 %tobool824, label %for.body825, label %for.end851, !dbg !14875

for.body825:                                      ; preds = %for.cond823
  %491 = load %struct.BMFace*, %struct.BMFace** %fa, align 8, !dbg !14879
  %head826 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %491, i32 0, i32 0, !dbg !14879
  %492 = load i32, i32* %flag.addr, align 4, !dbg !14879
  %conv827 = trunc i32 %492 to i8, !dbg !14879
  %call828 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head826, i8 zeroext %conv827), !dbg !14879
  %tobool829 = icmp ne i8 %call828, 0, !dbg !14879
  br i1 %tobool829, label %if.then830, label %if.else844, !dbg !14882

if.then830:                                       ; preds = %for.body825
  %493 = load i8*, i8** %pb, align 8, !dbg !14883
  %494 = load i32, i32* %i, align 4, !dbg !14885
  %idxprom831 = sext i32 %494 to i64, !dbg !14883
  %arrayidx832 = getelementptr inbounds i8, i8* %493, i64 %idxprom831, !dbg !14883
  store i8 0, i8* %arrayidx832, align 1, !dbg !14886
  %495 = load i32, i32* %i, align 4, !dbg !14887
  %496 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14888
  %arrayidx833 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 2, !dbg !14889
  %497 = load i32, i32* %arrayidx833, align 4, !dbg !14889
  %idxprom834 = sext i32 %497 to i64, !dbg !14888
  %arrayidx835 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %496, i64 %idxprom834, !dbg !14888
  %org_idx836 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx835, i32 0, i32 1, !dbg !14890
  store i32 %495, i32* %org_idx836, align 4, !dbg !14891
  %498 = load i32, i32* %i, align 4, !dbg !14892
  %sub837 = sub nsw i32 0, %498, !dbg !14893
  %conv838 = sitofp i32 %sub837 to float, !dbg !14894
  %499 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14895
  %arrayidx839 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 2, !dbg !14896
  %500 = load i32, i32* %arrayidx839, align 4, !dbg !14897
  %inc840 = add nsw i32 %500, 1, !dbg !14897
  store i32 %inc840, i32* %arrayidx839, align 4, !dbg !14897
  %idxprom841 = sext i32 %500 to i64, !dbg !14895
  %arrayidx842 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %499, i64 %idxprom841, !dbg !14895
  %srt843 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %arrayidx842, i32 0, i32 0, !dbg !14898
  store float %conv838, float* %srt843, align 4, !dbg !14899
  br label %if.end847, !dbg !14900

if.else844:                                       ; preds = %for.body825
  %501 = load i8*, i8** %pb, align 8, !dbg !14901
  %502 = load i32, i32* %i, align 4, !dbg !14903
  %idxprom845 = sext i32 %502 to i64, !dbg !14901
  %arrayidx846 = getelementptr inbounds i8, i8* %501, i64 %idxprom845, !dbg !14901
  store i8 1, i8* %arrayidx846, align 1, !dbg !14904
  br label %if.end847

if.end847:                                        ; preds = %if.else844, %if.then830
  br label %for.inc848, !dbg !14905

for.inc848:                                       ; preds = %if.end847
  %call849 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !14877
  %503 = bitcast i8* %call849 to %struct.BMFace*, !dbg !14877
  store %struct.BMFace* %503, %struct.BMFace** %fa, align 8, !dbg !14877
  %504 = load i32, i32* %i, align 4, !dbg !14877
  %inc850 = add nsw i32 %504, 1, !dbg !14877
  store i32 %inc850, i32* %i, align 4, !dbg !14877
  br label %for.cond823, !dbg !14877, !llvm.loop !14906

for.end851:                                       ; preds = %for.cond823
  br label %if.end852, !dbg !14908

if.end852:                                        ; preds = %for.end851, %if.end807
  br label %if.end853, !dbg !14909

if.end853:                                        ; preds = %if.end852, %if.else714
  br label %if.end854

if.end854:                                        ; preds = %if.end853, %if.end713
  br label %if.end855

if.end855:                                        ; preds = %if.end854, %for.end572
  br label %if.end856

if.end856:                                        ; preds = %if.end855, %for.end404
  br label %if.end857

if.end857:                                        ; preds = %if.end856, %if.end347
  br label %if.end858

if.end858:                                        ; preds = %if.end857, %if.end169
  %arrayidx859 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 0, !dbg !14910
  %505 = load i32, i32* %arrayidx859, align 4, !dbg !14910
  %cmp860 = icmp eq i32 %505, 0, !dbg !14912
  br i1 %cmp860, label %land.lhs.true862, label %if.end897, !dbg !14913

land.lhs.true862:                                 ; preds = %if.end858
  %arrayidx863 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 1, !dbg !14914
  %506 = load i32, i32* %arrayidx863, align 4, !dbg !14914
  %cmp864 = icmp eq i32 %506, 0, !dbg !14915
  br i1 %cmp864, label %land.lhs.true866, label %if.end897, !dbg !14916

land.lhs.true866:                                 ; preds = %land.lhs.true862
  %arrayidx867 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 2, !dbg !14917
  %507 = load i32, i32* %arrayidx867, align 4, !dbg !14917
  %cmp868 = icmp eq i32 %507, 0, !dbg !14918
  br i1 %cmp868, label %if.then870, label %if.end897, !dbg !14919

if.then870:                                       ; preds = %land.lhs.true866
  store i32 3, i32* %j, align 4, !dbg !14920
  br label %for.cond871, !dbg !14923

for.cond871:                                      ; preds = %if.end895, %if.then870
  %508 = load i32, i32* %j, align 4, !dbg !14924
  %dec872 = add nsw i32 %508, -1, !dbg !14924
  store i32 %dec872, i32* %j, align 4, !dbg !14924
  %tobool873 = icmp ne i32 %508, 0, !dbg !14926
  br i1 %tobool873, label %for.body874, label %for.end896, !dbg !14926

for.body874:                                      ; preds = %for.cond871
  %509 = load i32, i32* %j, align 4, !dbg !14927
  %idxprom875 = sext i32 %509 to i64, !dbg !14930
  %arrayidx876 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 %idxprom875, !dbg !14930
  %510 = load i8*, i8** %arrayidx876, align 8, !dbg !14930
  %tobool877 = icmp ne i8* %510, null, !dbg !14930
  br i1 %tobool877, label %if.then878, label %if.end881, !dbg !14931

if.then878:                                       ; preds = %for.body874
  %511 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14932
  %512 = load i32, i32* %j, align 4, !dbg !14933
  %idxprom879 = sext i32 %512 to i64, !dbg !14934
  %arrayidx880 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 %idxprom879, !dbg !14934
  %513 = load i8*, i8** %arrayidx880, align 8, !dbg !14934
  call void %511(i8* %513), !dbg !14932
  br label %if.end881, !dbg !14932

if.end881:                                        ; preds = %if.then878, %for.body874
  %514 = load i32, i32* %j, align 4, !dbg !14935
  %idxprom882 = sext i32 %514 to i64, !dbg !14937
  %arrayidx883 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 %idxprom882, !dbg !14937
  %515 = load %struct.BMElemSort*, %struct.BMElemSort** %arrayidx883, align 8, !dbg !14937
  %tobool884 = icmp ne %struct.BMElemSort* %515, null, !dbg !14937
  br i1 %tobool884, label %if.then885, label %if.end888, !dbg !14938

if.then885:                                       ; preds = %if.end881
  %516 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14939
  %517 = load i32, i32* %j, align 4, !dbg !14940
  %idxprom886 = sext i32 %517 to i64, !dbg !14941
  %arrayidx887 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 %idxprom886, !dbg !14941
  %518 = load %struct.BMElemSort*, %struct.BMElemSort** %arrayidx887, align 8, !dbg !14941
  %519 = bitcast %struct.BMElemSort* %518 to i8*, !dbg !14941
  call void %516(i8* %519), !dbg !14939
  br label %if.end888, !dbg !14939

if.end888:                                        ; preds = %if.then885, %if.end881
  %520 = load i32, i32* %j, align 4, !dbg !14942
  %idxprom889 = sext i32 %520 to i64, !dbg !14944
  %arrayidx890 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 %idxprom889, !dbg !14944
  %521 = load i32*, i32** %arrayidx890, align 8, !dbg !14944
  %tobool891 = icmp ne i32* %521, null, !dbg !14944
  br i1 %tobool891, label %if.then892, label %if.end895, !dbg !14945

if.then892:                                       ; preds = %if.end888
  %522 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14946
  %523 = load i32, i32* %j, align 4, !dbg !14947
  %idxprom893 = sext i32 %523 to i64, !dbg !14948
  %arrayidx894 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 %idxprom893, !dbg !14948
  %524 = load i32*, i32** %arrayidx894, align 8, !dbg !14948
  %525 = bitcast i32* %524 to i8*, !dbg !14948
  call void %522(i8* %525), !dbg !14946
  br label %if.end895, !dbg !14946

if.end895:                                        ; preds = %if.then892, %if.end888
  br label %for.cond871, !dbg !14949, !llvm.loop !14950

for.end896:                                       ; preds = %for.cond871
  br label %for.end972, !dbg !14952

if.end897:                                        ; preds = %land.lhs.true866, %land.lhs.true862, %if.end858
  store i32 3, i32* %j, align 4, !dbg !14953
  br label %for.cond898, !dbg !14955

for.cond898:                                      ; preds = %if.end955, %if.end897
  %526 = load i32, i32* %j, align 4, !dbg !14956
  %dec899 = add nsw i32 %526, -1, !dbg !14956
  store i32 %dec899, i32* %j, align 4, !dbg !14956
  %tobool900 = icmp ne i32 %526, 0, !dbg !14958
  br i1 %tobool900, label %for.body901, label %for.end956, !dbg !14958

for.body901:                                      ; preds = %for.cond898
  %527 = load i32, i32* %j, align 4, !dbg !14959
  %idxprom902 = sext i32 %527 to i64, !dbg !14961
  %arrayidx903 = getelementptr inbounds [3 x i8*], [3 x i8*]* %pblock, i64 0, i64 %idxprom902, !dbg !14961
  %528 = load i8*, i8** %arrayidx903, align 8, !dbg !14961
  store i8* %528, i8** %pb, align 8, !dbg !14962
  %529 = load i32, i32* %j, align 4, !dbg !14963
  %idxprom904 = sext i32 %529 to i64, !dbg !14964
  %arrayidx905 = getelementptr inbounds [3 x %struct.BMElemSort*], [3 x %struct.BMElemSort*]* %sblock, i64 0, i64 %idxprom904, !dbg !14964
  %530 = load %struct.BMElemSort*, %struct.BMElemSort** %arrayidx905, align 8, !dbg !14964
  store %struct.BMElemSort* %530, %struct.BMElemSort** %sb, align 8, !dbg !14965
  %531 = load i8*, i8** %pb, align 8, !dbg !14966
  %tobool906 = icmp ne i8* %531, null, !dbg !14966
  br i1 %tobool906, label %land.lhs.true907, label %if.end949, !dbg !14968

land.lhs.true907:                                 ; preds = %for.body901
  %532 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14969
  %tobool908 = icmp ne %struct.BMElemSort* %532, null, !dbg !14969
  br i1 %tobool908, label %land.lhs.true909, label %if.end949, !dbg !14970

land.lhs.true909:                                 ; preds = %land.lhs.true907
  %533 = load i32, i32* %j, align 4, !dbg !14971
  %idxprom910 = sext i32 %533 to i64, !dbg !14972
  %arrayidx911 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 %idxprom910, !dbg !14972
  %534 = load i32*, i32** %arrayidx911, align 8, !dbg !14972
  %tobool912 = icmp ne i32* %534, null, !dbg !14972
  br i1 %tobool912, label %if.end949, label %if.then913, !dbg !14973

if.then913:                                       ; preds = %land.lhs.true909
  call void @llvm.dbg.declare(metadata i8** %p_blk, metadata !14974, metadata !DIExpression()), !dbg !14976
  call void @llvm.dbg.declare(metadata %struct.BMElemSort** %s_blk, metadata !14977, metadata !DIExpression()), !dbg !14978
  call void @llvm.dbg.declare(metadata i32* %tot914, metadata !14979, metadata !DIExpression()), !dbg !14980
  %535 = load i32, i32* %j, align 4, !dbg !14981
  %idxprom915 = sext i32 %535 to i64, !dbg !14982
  %arrayidx916 = getelementptr inbounds [3 x i32], [3 x i32]* %totelem, i64 0, i64 %idxprom915, !dbg !14982
  %536 = load i32, i32* %arrayidx916, align 4, !dbg !14982
  store i32 %536, i32* %tot914, align 4, !dbg !14980
  call void @llvm.dbg.declare(metadata i32* %aff917, metadata !14983, metadata !DIExpression()), !dbg !14984
  %537 = load i32, i32* %j, align 4, !dbg !14985
  %idxprom918 = sext i32 %537 to i64, !dbg !14986
  %arrayidx919 = getelementptr inbounds [3 x i32], [3 x i32]* %affected, i64 0, i64 %idxprom918, !dbg !14986
  %538 = load i32, i32* %arrayidx919, align 4, !dbg !14986
  store i32 %538, i32* %aff917, align 4, !dbg !14984
  %539 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !14987
  %540 = bitcast %struct.BMElemSort* %539 to i8*, !dbg !14987
  %541 = load i32, i32* %aff917, align 4, !dbg !14988
  %conv920 = sext i32 %541 to i64, !dbg !14988
  call void @qsort(i8* %540, i64 %conv920, i64 8, i32 (i8*, i8*)* @bmelemsort_comp), !dbg !14989
  %542 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !14990
  %543 = load i32, i32* %tot914, align 4, !dbg !14991
  %conv921 = sext i32 %543 to i64, !dbg !14991
  %mul922 = mul i64 4, %conv921, !dbg !14992
  %call923 = call i8* %542(i64 %mul922, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.524, i64 0, i64 0)), !dbg !14990
  %544 = bitcast i8* %call923 to i32*, !dbg !14990
  %545 = load i32, i32* %j, align 4, !dbg !14993
  %idxprom924 = sext i32 %545 to i64, !dbg !14994
  %arrayidx925 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 %idxprom924, !dbg !14994
  store i32* %544, i32** %arrayidx925, align 8, !dbg !14995
  store i32* %544, i32** %mp, align 8, !dbg !14996
  %546 = load i8*, i8** %pb, align 8, !dbg !14997
  %547 = load i32, i32* %tot914, align 4, !dbg !14998
  %idx.ext926 = sext i32 %547 to i64, !dbg !14999
  %add.ptr927 = getelementptr inbounds i8, i8* %546, i64 %idx.ext926, !dbg !14999
  %add.ptr928 = getelementptr inbounds i8, i8* %add.ptr927, i64 -1, !dbg !15000
  store i8* %add.ptr928, i8** %p_blk, align 8, !dbg !15001
  %548 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !15002
  %549 = load i32, i32* %aff917, align 4, !dbg !15003
  %idx.ext929 = sext i32 %549 to i64, !dbg !15004
  %add.ptr930 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %548, i64 %idx.ext929, !dbg !15004
  %add.ptr931 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %add.ptr930, i64 -1, !dbg !15005
  store %struct.BMElemSort* %add.ptr931, %struct.BMElemSort** %s_blk, align 8, !dbg !15006
  %550 = load i32, i32* %tot914, align 4, !dbg !15007
  store i32 %550, i32* %i, align 4, !dbg !15009
  br label %for.cond932, !dbg !15010

for.cond932:                                      ; preds = %for.inc946, %if.then913
  %551 = load i32, i32* %i, align 4, !dbg !15011
  %dec933 = add nsw i32 %551, -1, !dbg !15011
  store i32 %dec933, i32* %i, align 4, !dbg !15011
  %tobool934 = icmp ne i32 %551, 0, !dbg !15013
  br i1 %tobool934, label %for.body935, label %for.end948, !dbg !15013

for.body935:                                      ; preds = %for.cond932
  %552 = load i8*, i8** %p_blk, align 8, !dbg !15014
  %553 = load i8, i8* %552, align 1, !dbg !15017
  %tobool936 = icmp ne i8 %553, 0, !dbg !15017
  br i1 %tobool936, label %if.then937, label %if.else940, !dbg !15018

if.then937:                                       ; preds = %for.body935
  %554 = load i32, i32* %i, align 4, !dbg !15019
  %555 = load i32*, i32** %mp, align 8, !dbg !15021
  %556 = load i32, i32* %i, align 4, !dbg !15022
  %idxprom938 = sext i32 %556 to i64, !dbg !15021
  %arrayidx939 = getelementptr inbounds i32, i32* %555, i64 %idxprom938, !dbg !15021
  store i32 %554, i32* %arrayidx939, align 4, !dbg !15023
  br label %if.end945, !dbg !15024

if.else940:                                       ; preds = %for.body935
  %557 = load i32, i32* %i, align 4, !dbg !15025
  %558 = load i32*, i32** %mp, align 8, !dbg !15027
  %559 = load %struct.BMElemSort*, %struct.BMElemSort** %s_blk, align 8, !dbg !15028
  %org_idx941 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %559, i32 0, i32 1, !dbg !15029
  %560 = load i32, i32* %org_idx941, align 4, !dbg !15029
  %idxprom942 = sext i32 %560 to i64, !dbg !15027
  %arrayidx943 = getelementptr inbounds i32, i32* %558, i64 %idxprom942, !dbg !15027
  store i32 %557, i32* %arrayidx943, align 4, !dbg !15030
  %561 = load %struct.BMElemSort*, %struct.BMElemSort** %s_blk, align 8, !dbg !15031
  %incdec.ptr944 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %561, i32 -1, !dbg !15031
  store %struct.BMElemSort* %incdec.ptr944, %struct.BMElemSort** %s_blk, align 8, !dbg !15031
  br label %if.end945

if.end945:                                        ; preds = %if.else940, %if.then937
  br label %for.inc946, !dbg !15032

for.inc946:                                       ; preds = %if.end945
  %562 = load i8*, i8** %p_blk, align 8, !dbg !15033
  %incdec.ptr947 = getelementptr inbounds i8, i8* %562, i32 -1, !dbg !15033
  store i8* %incdec.ptr947, i8** %p_blk, align 8, !dbg !15033
  br label %for.cond932, !dbg !15034, !llvm.loop !15035

for.end948:                                       ; preds = %for.cond932
  br label %if.end949, !dbg !15037

if.end949:                                        ; preds = %for.end948, %land.lhs.true909, %land.lhs.true907, %for.body901
  %563 = load i8*, i8** %pb, align 8, !dbg !15038
  %tobool950 = icmp ne i8* %563, null, !dbg !15038
  br i1 %tobool950, label %if.then951, label %if.end952, !dbg !15040

if.then951:                                       ; preds = %if.end949
  %564 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15041
  %565 = load i8*, i8** %pb, align 8, !dbg !15042
  call void %564(i8* %565), !dbg !15041
  br label %if.end952, !dbg !15041

if.end952:                                        ; preds = %if.then951, %if.end949
  %566 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !15043
  %tobool953 = icmp ne %struct.BMElemSort* %566, null, !dbg !15043
  br i1 %tobool953, label %if.then954, label %if.end955, !dbg !15045

if.then954:                                       ; preds = %if.end952
  %567 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15046
  %568 = load %struct.BMElemSort*, %struct.BMElemSort** %sb, align 8, !dbg !15047
  %569 = bitcast %struct.BMElemSort* %568 to i8*, !dbg !15047
  call void %567(i8* %569), !dbg !15046
  br label %if.end955, !dbg !15046

if.end955:                                        ; preds = %if.then954, %if.end952
  br label %for.cond898, !dbg !15048, !llvm.loop !15049

for.end956:                                       ; preds = %for.cond898
  %570 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15051
  %bm957 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %570, i32 0, i32 0, !dbg !15052
  %571 = load %struct.BMesh*, %struct.BMesh** %bm957, align 8, !dbg !15052
  %arrayidx958 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 0, !dbg !15053
  %572 = load i32*, i32** %arrayidx958, align 16, !dbg !15053
  %arrayidx959 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 1, !dbg !15054
  %573 = load i32*, i32** %arrayidx959, align 8, !dbg !15054
  %arrayidx960 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 2, !dbg !15055
  %574 = load i32*, i32** %arrayidx960, align 16, !dbg !15055
  call void @BM_mesh_remap(%struct.BMesh* %571, i32* %572, i32* %573, i32* %574), !dbg !15056
  store i32 3, i32* %j, align 4, !dbg !15057
  br label %for.cond961, !dbg !15059

for.cond961:                                      ; preds = %if.end971, %for.end956
  %575 = load i32, i32* %j, align 4, !dbg !15060
  %dec962 = add nsw i32 %575, -1, !dbg !15060
  store i32 %dec962, i32* %j, align 4, !dbg !15060
  %tobool963 = icmp ne i32 %575, 0, !dbg !15062
  br i1 %tobool963, label %for.body964, label %for.end972, !dbg !15062

for.body964:                                      ; preds = %for.cond961
  %576 = load i32, i32* %j, align 4, !dbg !15063
  %idxprom965 = sext i32 %576 to i64, !dbg !15066
  %arrayidx966 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 %idxprom965, !dbg !15066
  %577 = load i32*, i32** %arrayidx966, align 8, !dbg !15066
  %tobool967 = icmp ne i32* %577, null, !dbg !15066
  br i1 %tobool967, label %if.then968, label %if.end971, !dbg !15067

if.then968:                                       ; preds = %for.body964
  %578 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15068
  %579 = load i32, i32* %j, align 4, !dbg !15069
  %idxprom969 = sext i32 %579 to i64, !dbg !15070
  %arrayidx970 = getelementptr inbounds [3 x i32*], [3 x i32*]* %map, i64 0, i64 %idxprom969, !dbg !15070
  %580 = load i32*, i32** %arrayidx970, align 8, !dbg !15070
  %581 = bitcast i32* %580 to i8*, !dbg !15070
  call void %578(i8* %581), !dbg !15068
  br label %if.end971, !dbg !15068

if.end971:                                        ; preds = %if.then968, %for.body964
  br label %for.cond961, !dbg !15071, !llvm.loop !15072

for.end972:                                       ; preds = %if.then, %for.end896, %for.cond961
  ret void, !dbg !15074
}

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #2

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #2

declare dso_local void @BM_face_calc_center_mean(%struct.BMFace*, float*) #2

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3v3(float* %a, float* %b) #0 !dbg !15075 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15078, metadata !DIExpression()), !dbg !15079
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !15080, metadata !DIExpression()), !dbg !15081
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !15082, metadata !DIExpression()), !dbg !15083
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !15084
  %0 = load float*, float** %b.addr, align 8, !dbg !15085
  %1 = load float*, float** %a.addr, align 8, !dbg !15086
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !15087
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !15088
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !15089
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !15090
  ret float %call, !dbg !15091
}

declare dso_local %struct.RNG* @BLI_rng_new_srandom(i32) #2

declare dso_local float @BLI_rng_get_float(%struct.RNG*) #2

declare dso_local void @BLI_rng_free(%struct.RNG*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @bmelemsort_comp(i8* %v1, i8* %v2) #0 !dbg !15092 {
entry:
  %v1.addr = alloca i8*, align 8
  %v2.addr = alloca i8*, align 8
  %x1 = alloca %struct.BMElemSort*, align 8
  %x2 = alloca %struct.BMElemSort*, align 8
  store i8* %v1, i8** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v1.addr, metadata !15097, metadata !DIExpression()), !dbg !15098
  store i8* %v2, i8** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v2.addr, metadata !15099, metadata !DIExpression()), !dbg !15100
  call void @llvm.dbg.declare(metadata %struct.BMElemSort** %x1, metadata !15101, metadata !DIExpression()), !dbg !15104
  %0 = load i8*, i8** %v1.addr, align 8, !dbg !15105
  %1 = bitcast i8* %0 to %struct.BMElemSort*, !dbg !15105
  store %struct.BMElemSort* %1, %struct.BMElemSort** %x1, align 8, !dbg !15104
  call void @llvm.dbg.declare(metadata %struct.BMElemSort** %x2, metadata !15106, metadata !DIExpression()), !dbg !15107
  %2 = load i8*, i8** %v2.addr, align 8, !dbg !15108
  %3 = bitcast i8* %2 to %struct.BMElemSort*, !dbg !15108
  store %struct.BMElemSort* %3, %struct.BMElemSort** %x2, align 8, !dbg !15107
  %4 = load %struct.BMElemSort*, %struct.BMElemSort** %x1, align 8, !dbg !15109
  %srt = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %4, i32 0, i32 0, !dbg !15110
  %5 = load float, float* %srt, align 4, !dbg !15110
  %6 = load %struct.BMElemSort*, %struct.BMElemSort** %x2, align 8, !dbg !15111
  %srt1 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %6, i32 0, i32 0, !dbg !15112
  %7 = load float, float* %srt1, align 4, !dbg !15112
  %cmp = fcmp ogt float %5, %7, !dbg !15113
  %conv = zext i1 %cmp to i32, !dbg !15113
  %8 = load %struct.BMElemSort*, %struct.BMElemSort** %x1, align 8, !dbg !15114
  %srt2 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %8, i32 0, i32 0, !dbg !15115
  %9 = load float, float* %srt2, align 4, !dbg !15115
  %10 = load %struct.BMElemSort*, %struct.BMElemSort** %x2, align 8, !dbg !15116
  %srt3 = getelementptr inbounds %struct.BMElemSort, %struct.BMElemSort* %10, i32 0, i32 0, !dbg !15117
  %11 = load float, float* %srt3, align 4, !dbg !15117
  %cmp4 = fcmp olt float %9, %11, !dbg !15118
  %conv5 = zext i1 %cmp4 to i32, !dbg !15118
  %sub = sub nsw i32 %conv, %conv5, !dbg !15119
  ret i32 %sub, !dbg !15120
}

declare dso_local void @BM_mesh_remap(%struct.BMesh*, i32*, i32*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !15121 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15122, metadata !DIExpression()), !dbg !15123
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !15124, metadata !DIExpression()), !dbg !15125
  %0 = load float*, float** %a.addr, align 8, !dbg !15126
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15126
  %1 = load float, float* %arrayidx, align 4, !dbg !15126
  %2 = load float*, float** %b.addr, align 8, !dbg !15127
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15127
  %3 = load float, float* %arrayidx1, align 4, !dbg !15127
  %mul = fmul float %1, %3, !dbg !15128
  %4 = load float*, float** %a.addr, align 8, !dbg !15129
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !15129
  %5 = load float, float* %arrayidx2, align 4, !dbg !15129
  %6 = load float*, float** %b.addr, align 8, !dbg !15130
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !15130
  %7 = load float, float* %arrayidx3, align 4, !dbg !15130
  %mul4 = fmul float %5, %7, !dbg !15131
  %add = fadd float %mul, %mul4, !dbg !15132
  %8 = load float*, float** %a.addr, align 8, !dbg !15133
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !15133
  %9 = load float, float* %arrayidx5, align 4, !dbg !15133
  %10 = load float*, float** %b.addr, align 8, !dbg !15134
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !15134
  %11 = load float, float* %arrayidx6, align 4, !dbg !15134
  %mul7 = fmul float %9, %11, !dbg !15135
  %add8 = fadd float %add, %mul7, !dbg !15136
  ret float %add8, !dbg !15137
}

declare dso_local %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext*) #2

declare dso_local i32 @uiDefAutoButsRNA(%struct.uiLayout*, %struct.PointerRNA*, i8 (%struct.PointerRNA*, %struct.PropertyRNA*)*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @edbm_sort_elements_draw_check_prop(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop) #0 !dbg !15138 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %prop_id = alloca i8*, align 8
  %action = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !15141, metadata !DIExpression()), !dbg !15142
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !15143, metadata !DIExpression()), !dbg !15144
  call void @llvm.dbg.declare(metadata i8** %prop_id, metadata !15145, metadata !DIExpression()), !dbg !15146
  %0 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !15147
  %call = call i8* @RNA_property_identifier(%struct.PropertyRNA* %0), !dbg !15148
  store i8* %call, i8** %prop_id, align 8, !dbg !15146
  call void @llvm.dbg.declare(metadata i32* %action, metadata !15149, metadata !DIExpression()), !dbg !15150
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !15151
  %call1 = call i32 @RNA_enum_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0)), !dbg !15152
  store i32 %call1, i32* %action, align 4, !dbg !15150
  %2 = load i8*, i8** %prop_id, align 8, !dbg !15153
  %call2 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0)) #5, !dbg !15153
  %cmp = icmp eq i32 %call2, 0, !dbg !15153
  br i1 %cmp, label %if.then, label %if.end, !dbg !15155

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %action, align 4, !dbg !15156
  %cmp3 = icmp eq i32 %3, 6, !dbg !15159
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !15160

if.then4:                                         ; preds = %if.then
  store i8 1, i8* %retval, align 1, !dbg !15161
  br label %return, !dbg !15161

if.else:                                          ; preds = %if.then
  store i8 0, i8* %retval, align 1, !dbg !15162
  br label %return, !dbg !15162

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %prop_id, align 8, !dbg !15163
  %call5 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.323, i64 0, i64 0)) #5, !dbg !15163
  %cmp6 = icmp eq i32 %call5, 0, !dbg !15163
  br i1 %cmp6, label %if.then7, label %if.end12, !dbg !15165

if.then7:                                         ; preds = %if.end
  %5 = load i32, i32* %action, align 4, !dbg !15166
  %cmp8 = icmp eq i32 %5, 6, !dbg !15166
  br i1 %cmp8, label %if.then10, label %lor.lhs.false, !dbg !15166

lor.lhs.false:                                    ; preds = %if.then7
  %6 = load i32, i32* %action, align 4, !dbg !15166
  %cmp9 = icmp eq i32 %6, 7, !dbg !15166
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !15169

if.then10:                                        ; preds = %lor.lhs.false, %if.then7
  store i8 0, i8* %retval, align 1, !dbg !15170
  br label %return, !dbg !15170

if.else11:                                        ; preds = %lor.lhs.false
  store i8 1, i8* %retval, align 1, !dbg !15171
  br label %return, !dbg !15171

if.end12:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !15172
  br label %return, !dbg !15172

return:                                           ; preds = %if.end12, %if.else11, %if.then10, %if.else, %if.then4
  %7 = load i8, i8* %retval, align 1, !dbg !15173
  ret i8 %7, !dbg !15173
}

declare dso_local i8* @RNA_property_identifier(%struct.PropertyRNA*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #4

declare dso_local %struct.Material* @give_current_material(%struct.Object*, i16 signext) #2

declare dso_local %struct.Tex* @give_current_material_texture(%struct.Material*) #2

declare dso_local float @BLI_hnoise(float, float, float, float) #2

declare dso_local i32 @externtex(%struct.MTex*, float*, float*, float*, float*, float*, float*, i32, %struct.ImagePool*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @edbm_bridge_tag_boundary_edges(%struct.BMesh* %bm) #0 !dbg !15174 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %f = alloca %struct.BMFace*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %totface_del = alloca i32, align 4
  %fiter = alloca %struct.BMIter, align 8
  %is_all_sel = alloca i8, align 1
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !15175, metadata !DIExpression()), !dbg !15176
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !15177, metadata !DIExpression()), !dbg !15178
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !15179, metadata !DIExpression()), !dbg !15180
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !15181, metadata !DIExpression()), !dbg !15182
  call void @llvm.dbg.declare(metadata i32* %totface_del, metadata !15183, metadata !DIExpression()), !dbg !15184
  store i32 0, i32* %totface_del, align 4, !dbg !15184
  %0 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !15185
  call void @BM_mesh_elem_hflag_disable_all(%struct.BMesh* %0, i8 zeroext 10, i8 zeroext 16, i8 zeroext 0), !dbg !15186
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !15187
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %1, i8 zeroext 2, i8* null), !dbg !15187
  %2 = bitcast i8* %call to %struct.BMEdge*, !dbg !15187
  store %struct.BMEdge* %2, %struct.BMEdge** %e, align 8, !dbg !15187
  br label %for.cond, !dbg !15187

for.cond:                                         ; preds = %for.inc33, %entry
  %3 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !15189
  %tobool = icmp ne %struct.BMEdge* %3, null, !dbg !15187
  br i1 %tobool, label %for.body, label %for.end35, !dbg !15187

for.body:                                         ; preds = %for.cond
  %4 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !15191
  %head = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %4, i32 0, i32 0, !dbg !15191
  %call1 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 1), !dbg !15191
  %tobool2 = icmp ne i8 %call1, 0, !dbg !15191
  br i1 %tobool2, label %if.then, label %if.end32, !dbg !15194

if.then:                                          ; preds = %for.body
  %5 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !15195
  %call3 = call zeroext i8 @BM_edge_is_wire(%struct.BMEdge* %5), !dbg !15198
  %conv = zext i8 %call3 to i32, !dbg !15198
  %tobool4 = icmp ne i32 %conv, 0, !dbg !15198
  br i1 %tobool4, label %if.then8, label %lor.lhs.false, !dbg !15199

lor.lhs.false:                                    ; preds = %if.then
  %6 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !15200
  %call5 = call zeroext i8 @BM_edge_is_boundary(%struct.BMEdge* %6), !dbg !15201
  %conv6 = zext i8 %call5 to i32, !dbg !15201
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !15201
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !15202

if.then8:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !15203
  %head9 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %7, i32 0, i32 0, !dbg !15203
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head9, i8 zeroext 16), !dbg !15203
  br label %if.end31, !dbg !15205

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.BMIter* %fiter, metadata !15206, metadata !DIExpression()), !dbg !15208
  call void @llvm.dbg.declare(metadata i8* %is_all_sel, metadata !15209, metadata !DIExpression()), !dbg !15210
  store i8 1, i8* %is_all_sel, align 1, !dbg !15210
  %8 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !15211
  %9 = bitcast %struct.BMEdge* %8 to i8*, !dbg !15211
  %call10 = call i8* @BM_iter_new(%struct.BMIter* %fiter, %struct.BMesh* null, i8 zeroext 8, i8* %9), !dbg !15211
  %10 = bitcast i8* %call10 to %struct.BMFace*, !dbg !15211
  store %struct.BMFace* %10, %struct.BMFace** %f, align 8, !dbg !15211
  br label %for.cond11, !dbg !15211

for.cond11:                                       ; preds = %for.inc, %if.else
  %11 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !15213
  %tobool12 = icmp ne %struct.BMFace* %11, null, !dbg !15211
  br i1 %tobool12, label %for.body13, label %for.end, !dbg !15211

for.body13:                                       ; preds = %for.cond11
  %12 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !15215
  %head14 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %12, i32 0, i32 0, !dbg !15215
  %call15 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head14, i8 zeroext 1), !dbg !15215
  %tobool16 = icmp ne i8 %call15, 0, !dbg !15215
  br i1 %tobool16, label %if.then17, label %if.else23, !dbg !15218

if.then17:                                        ; preds = %for.body13
  %13 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !15219
  %head18 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %13, i32 0, i32 0, !dbg !15219
  %call19 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head18, i8 zeroext 16), !dbg !15219
  %tobool20 = icmp ne i8 %call19, 0, !dbg !15219
  br i1 %tobool20, label %if.end, label %if.then21, !dbg !15222

if.then21:                                        ; preds = %if.then17
  %14 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !15223
  %head22 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %14, i32 0, i32 0, !dbg !15223
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head22, i8 zeroext 16), !dbg !15223
  %15 = load i32, i32* %totface_del, align 4, !dbg !15225
  %inc = add nsw i32 %15, 1, !dbg !15225
  store i32 %inc, i32* %totface_del, align 4, !dbg !15225
  br label %if.end, !dbg !15226

if.end:                                           ; preds = %if.then21, %if.then17
  br label %if.end24, !dbg !15227

if.else23:                                        ; preds = %for.body13
  store i8 0, i8* %is_all_sel, align 1, !dbg !15228
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.end
  br label %for.inc, !dbg !15230

for.inc:                                          ; preds = %if.end24
  %call25 = call i8* @BM_iter_step(%struct.BMIter* %fiter), !dbg !15213
  %16 = bitcast i8* %call25 to %struct.BMFace*, !dbg !15213
  store %struct.BMFace* %16, %struct.BMFace** %f, align 8, !dbg !15213
  br label %for.cond11, !dbg !15213, !llvm.loop !15231

for.end:                                          ; preds = %for.cond11
  %17 = load i8, i8* %is_all_sel, align 1, !dbg !15233
  %conv26 = zext i8 %17 to i32, !dbg !15233
  %cmp = icmp eq i32 %conv26, 0, !dbg !15235
  br i1 %cmp, label %if.then28, label %if.end30, !dbg !15236

if.then28:                                        ; preds = %for.end
  %18 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !15237
  %head29 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %18, i32 0, i32 0, !dbg !15237
  call void @_bm_elem_flag_enable(%struct.BMHeader* %head29, i8 zeroext 16), !dbg !15237
  br label %if.end30, !dbg !15239

if.end30:                                         ; preds = %if.then28, %for.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then8
  br label %if.end32, !dbg !15240

if.end32:                                         ; preds = %if.end31, %for.body
  br label %for.inc33, !dbg !15241

for.inc33:                                        ; preds = %if.end32
  %call34 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !15189
  %19 = bitcast i8* %call34 to %struct.BMEdge*, !dbg !15189
  store %struct.BMEdge* %19, %struct.BMEdge** %e, align 8, !dbg !15189
  br label %for.cond, !dbg !15189, !llvm.loop !15242

for.end35:                                        ; preds = %for.cond
  %20 = load i32, i32* %totface_del, align 4, !dbg !15244
  ret i32 %20, !dbg !15245
}

declare dso_local zeroext i8 @BMO_error_occurred(%struct.BMesh*) #2

declare dso_local zeroext i8 @BMO_op_initf(%struct.BMesh*, %struct.BMOperator*, i32, i8*, ...) #2

declare dso_local void @EDBM_verts_mirror_cache_begin_ex(%struct.BMEditMesh*, i32, i8 zeroext, i8 zeroext, i8 zeroext, float, i32*) #2

declare dso_local void @BM_mesh_elem_table_ensure(%struct.BMesh*, i8 zeroext) #2

declare dso_local %struct.BMVert* @BM_vert_at_index(%struct.BMesh*, i32) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4063, !4064, !4065}
!llvm.ident = !{!4066}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "prop_mesh_cornervert_types", scope: !2, file: !3, line: 112, type: !4062, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1342, globals: !3763, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/editors/mesh/editmesh_tools.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !40, !47, !58, !64, !70, !78, !85, !102, !112, !120, !128, !134, !169, !178, !209, !230, !235, !242, !246, !254, !261, !267, !276, !281, !289, !295, !306, !358, !368, !378, !392, !436, !1286, !1292, !1307, !1310, !1315, !1319, !1333}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !6, line: 151, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39}
!9 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!11 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!13 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!14 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!15 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!16 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!17 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!18 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!19 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!20 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!21 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!22 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!23 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!24 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!25 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!26 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!27 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!28 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!29 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!30 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!31 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!32 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!33 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!34 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!35 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!36 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!37 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!38 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!39 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !41, line: 35, baseType: !7, size: 32, elements: !42)
!41 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!42 = !{!43, !44, !45, !46}
!43 = !DIEnumerator(name: "SUBD_INNERVERT", value: 0, isUnsigned: true)
!44 = !DIEnumerator(name: "SUBD_PATH", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "SUBD_FAN", value: 2, isUnsigned: true)
!46 = !DIEnumerator(name: "SUBD_STRAIGHT_CUT", value: 3, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !48, line: 94, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!49 = !{!50, !51, !52, !53, !54, !55, !56, !57}
!50 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!51 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!52 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!53 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!54 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!55 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!56 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!57 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!58 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !48, line: 116, baseType: !7, size: 32, elements: !59)
!59 = !{!60, !61, !62, !63}
!60 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!63 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !48, line: 131, baseType: !7, size: 32, elements: !65)
!65 = !{!66, !67, !68, !69}
!66 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!67 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!68 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!69 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!70 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !48, line: 123, baseType: !7, size: 32, elements: !71)
!71 = !{!72, !73, !74, !75, !76, !77}
!72 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!73 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!74 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!75 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!76 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!77 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !48, line: 182, baseType: !7, size: 32, elements: !79)
!79 = !{!80, !81, !82, !83, !84}
!80 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!82 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!83 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!84 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !86, line: 57, baseType: !7, size: 32, elements: !87)
!86 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!87 = !{!88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101}
!88 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!90 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!91 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!92 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!93 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!94 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!95 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!96 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!97 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!98 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!99 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!100 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!101 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!102 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !103, line: 260, baseType: !7, size: 32, elements: !104)
!103 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!104 = !{!105, !106, !107, !108, !109, !110, !111}
!105 = !DIEnumerator(name: "BM_ELEM_SELECT", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "BM_ELEM_HIDDEN", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "BM_ELEM_SEAM", value: 4, isUnsigned: true)
!108 = !DIEnumerator(name: "BM_ELEM_SMOOTH", value: 8, isUnsigned: true)
!109 = !DIEnumerator(name: "BM_ELEM_TAG", value: 16, isUnsigned: true)
!110 = !DIEnumerator(name: "BM_ELEM_DRAW", value: 32, isUnsigned: true)
!111 = !DIEnumerator(name: "BM_ELEM_INTERNAL_TAG", value: 128, isUnsigned: true)
!112 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !113, line: 119, baseType: !7, size: 32, elements: !114)
!113 = !DIFile(filename: "blender/source/blender/editors/include/ED_view3d.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!114 = !{!115, !116, !117, !118, !119}
!115 = !DIEnumerator(name: "V3D_PROJ_TEST_NOP", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_BB", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_WIN", value: 2, isUnsigned: true)
!118 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_NEAR", value: 4, isUnsigned: true)
!119 = !DIEnumerator(name: "V3D_PROJ_TEST_CLIP_ZERO", value: 8, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !113, line: 109, baseType: !7, size: 32, elements: !121)
!121 = !{!122, !123, !124, !125, !126, !127}
!122 = !DIEnumerator(name: "V3D_PROJ_RET_OK", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_NEAR", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_ZERO", value: 2, isUnsigned: true)
!125 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_BB", value: 3, isUnsigned: true)
!126 = !DIEnumerator(name: "V3D_PROJ_RET_CLIP_WIN", value: 4, isUnsigned: true)
!127 = !DIEnumerator(name: "V3D_PROJ_RET_OVERFLOW", value: 5, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SnapMode", file: !129, line: 172, baseType: !7, size: 32, elements: !130)
!129 = !DIFile(filename: "blender/source/blender/editors/include/ED_transform.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!130 = !{!131, !132, !133}
!131 = !DIEnumerator(name: "SNAP_ALL", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "SNAP_NOT_SELECTED", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "SNAP_NOT_OBEDIT", value: 2, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "TfmMode", file: !129, line: 56, baseType: !135, size: 32, elements: !136)
!135 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!137 = !DIEnumerator(name: "TFM_INIT", value: -1)
!138 = !DIEnumerator(name: "TFM_DUMMY", value: 0)
!139 = !DIEnumerator(name: "TFM_TRANSLATION", value: 1)
!140 = !DIEnumerator(name: "TFM_ROTATION", value: 2)
!141 = !DIEnumerator(name: "TFM_RESIZE", value: 3)
!142 = !DIEnumerator(name: "TFM_SKIN_RESIZE", value: 4)
!143 = !DIEnumerator(name: "TFM_TOSPHERE", value: 5)
!144 = !DIEnumerator(name: "TFM_SHEAR", value: 6)
!145 = !DIEnumerator(name: "TFM_BEND", value: 7)
!146 = !DIEnumerator(name: "TFM_SHRINKFATTEN", value: 8)
!147 = !DIEnumerator(name: "TFM_TILT", value: 9)
!148 = !DIEnumerator(name: "TFM_TRACKBALL", value: 10)
!149 = !DIEnumerator(name: "TFM_PUSHPULL", value: 11)
!150 = !DIEnumerator(name: "TFM_CREASE", value: 12)
!151 = !DIEnumerator(name: "TFM_MIRROR", value: 13)
!152 = !DIEnumerator(name: "TFM_BONESIZE", value: 14)
!153 = !DIEnumerator(name: "TFM_BONE_ENVELOPE", value: 15)
!154 = !DIEnumerator(name: "TFM_CURVE_SHRINKFATTEN", value: 16)
!155 = !DIEnumerator(name: "TFM_MASK_SHRINKFATTEN", value: 17)
!156 = !DIEnumerator(name: "TFM_BONE_ROLL", value: 18)
!157 = !DIEnumerator(name: "TFM_TIME_TRANSLATE", value: 19)
!158 = !DIEnumerator(name: "TFM_TIME_SLIDE", value: 20)
!159 = !DIEnumerator(name: "TFM_TIME_SCALE", value: 21)
!160 = !DIEnumerator(name: "TFM_TIME_EXTEND", value: 22)
!161 = !DIEnumerator(name: "TFM_TIME_DUPLICATE", value: 23)
!162 = !DIEnumerator(name: "TFM_BAKE_TIME", value: 24)
!163 = !DIEnumerator(name: "TFM_DEPRECATED", value: 25)
!164 = !DIEnumerator(name: "TFM_BWEIGHT", value: 26)
!165 = !DIEnumerator(name: "TFM_ALIGN", value: 27)
!166 = !DIEnumerator(name: "TFM_EDGE_SLIDE", value: 28)
!167 = !DIEnumerator(name: "TFM_VERT_SLIDE", value: 29)
!168 = !DIEnumerator(name: "TFM_SEQ_SLIDE", value: 30)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyType", file: !6, line: 71, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175, !176, !177}
!171 = !DIEnumerator(name: "PROP_BOOLEAN", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "PROP_INT", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "PROP_FLOAT", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "PROP_STRING", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "PROP_ENUM", value: 4, isUnsigned: true)
!176 = !DIEnumerator(name: "PROP_POINTER", value: 5, isUnsigned: true)
!177 = !DIEnumerator(name: "PROP_COLLECTION", value: 6, isUnsigned: true)
!178 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertySubType", file: !6, line: 107, baseType: !7, size: 32, elements: !179)
!179 = !{!180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208}
!180 = !DIEnumerator(name: "PROP_NONE", value: 0, isUnsigned: true)
!181 = !DIEnumerator(name: "PROP_FILEPATH", value: 1, isUnsigned: true)
!182 = !DIEnumerator(name: "PROP_DIRPATH", value: 2, isUnsigned: true)
!183 = !DIEnumerator(name: "PROP_FILENAME", value: 3, isUnsigned: true)
!184 = !DIEnumerator(name: "PROP_BYTESTRING", value: 4, isUnsigned: true)
!185 = !DIEnumerator(name: "PROP_PASSWORD", value: 6, isUnsigned: true)
!186 = !DIEnumerator(name: "PROP_PIXEL", value: 12, isUnsigned: true)
!187 = !DIEnumerator(name: "PROP_UNSIGNED", value: 13, isUnsigned: true)
!188 = !DIEnumerator(name: "PROP_PERCENTAGE", value: 14, isUnsigned: true)
!189 = !DIEnumerator(name: "PROP_FACTOR", value: 15, isUnsigned: true)
!190 = !DIEnumerator(name: "PROP_ANGLE", value: 327696, isUnsigned: true)
!191 = !DIEnumerator(name: "PROP_TIME", value: 393233, isUnsigned: true)
!192 = !DIEnumerator(name: "PROP_DISTANCE", value: 65554, isUnsigned: true)
!193 = !DIEnumerator(name: "PROP_DISTANCE_CAMERA", value: 589843, isUnsigned: true)
!194 = !DIEnumerator(name: "PROP_COLOR", value: 20, isUnsigned: true)
!195 = !DIEnumerator(name: "PROP_TRANSLATION", value: 65557, isUnsigned: true)
!196 = !DIEnumerator(name: "PROP_DIRECTION", value: 22, isUnsigned: true)
!197 = !DIEnumerator(name: "PROP_VELOCITY", value: 458775, isUnsigned: true)
!198 = !DIEnumerator(name: "PROP_ACCELERATION", value: 524312, isUnsigned: true)
!199 = !DIEnumerator(name: "PROP_MATRIX", value: 25, isUnsigned: true)
!200 = !DIEnumerator(name: "PROP_EULER", value: 327706, isUnsigned: true)
!201 = !DIEnumerator(name: "PROP_QUATERNION", value: 27, isUnsigned: true)
!202 = !DIEnumerator(name: "PROP_AXISANGLE", value: 28, isUnsigned: true)
!203 = !DIEnumerator(name: "PROP_XYZ", value: 29, isUnsigned: true)
!204 = !DIEnumerator(name: "PROP_XYZ_LENGTH", value: 65565, isUnsigned: true)
!205 = !DIEnumerator(name: "PROP_COLOR_GAMMA", value: 30, isUnsigned: true)
!206 = !DIEnumerator(name: "PROP_COORDS", value: 31, isUnsigned: true)
!207 = !DIEnumerator(name: "PROP_LAYER", value: 40, isUnsigned: true)
!208 = !DIEnumerator(name: "PROP_LAYER_MEMBER", value: 41, isUnsigned: true)
!209 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !210, line: 82, baseType: !7, size: 32, elements: !211)
!210 = !DIFile(filename: "blender/source/blender/windowmanager/wm_cursors.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!211 = !{!212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229}
!212 = !DIEnumerator(name: "BC_NW_ARROWCURSOR", value: 2, isUnsigned: true)
!213 = !DIEnumerator(name: "BC_NS_ARROWCURSOR", value: 3, isUnsigned: true)
!214 = !DIEnumerator(name: "BC_EW_ARROWCURSOR", value: 4, isUnsigned: true)
!215 = !DIEnumerator(name: "BC_WAITCURSOR", value: 5, isUnsigned: true)
!216 = !DIEnumerator(name: "BC_CROSSCURSOR", value: 6, isUnsigned: true)
!217 = !DIEnumerator(name: "BC_EDITCROSSCURSOR", value: 7, isUnsigned: true)
!218 = !DIEnumerator(name: "BC_BOXSELCURSOR", value: 8, isUnsigned: true)
!219 = !DIEnumerator(name: "BC_KNIFECURSOR", value: 9, isUnsigned: true)
!220 = !DIEnumerator(name: "BC_VLOOPCURSOR", value: 10, isUnsigned: true)
!221 = !DIEnumerator(name: "BC_TEXTEDITCURSOR", value: 11, isUnsigned: true)
!222 = !DIEnumerator(name: "BC_PAINTBRUSHCURSOR", value: 12, isUnsigned: true)
!223 = !DIEnumerator(name: "BC_HANDCURSOR", value: 13, isUnsigned: true)
!224 = !DIEnumerator(name: "BC_NSEW_SCROLLCURSOR", value: 14, isUnsigned: true)
!225 = !DIEnumerator(name: "BC_NS_SCROLLCURSOR", value: 15, isUnsigned: true)
!226 = !DIEnumerator(name: "BC_EW_SCROLLCURSOR", value: 16, isUnsigned: true)
!227 = !DIEnumerator(name: "BC_EYEDROPPER_CURSOR", value: 17, isUnsigned: true)
!228 = !DIEnumerator(name: "BC_SWAPAREA_CURSOR", value: 18, isUnsigned: true)
!229 = !DIEnumerator(name: "BC_NUMCURSORS", value: 19, isUnsigned: true)
!230 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !41, line: 114, baseType: !7, size: 32, elements: !231)
!231 = !{!232, !233, !234}
!232 = !DIEnumerator(name: "BMOP_POKE_MEAN_WEIGHTED", value: 0, isUnsigned: true)
!233 = !DIEnumerator(name: "BMOP_POKE_MEAN", value: 1, isUnsigned: true)
!234 = !DIEnumerator(name: "BMOP_POKE_BOUNDS", value: 2, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !236, line: 1232, baseType: !7, size: 32, elements: !237)
!236 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!237 = !{!238, !239, !240, !241}
!238 = !DIEnumerator(name: "MOD_TRIANGULATE_QUAD_BEAUTY", value: 0, isUnsigned: true)
!239 = !DIEnumerator(name: "MOD_TRIANGULATE_QUAD_FIXED", value: 1, isUnsigned: true)
!240 = !DIEnumerator(name: "MOD_TRIANGULATE_QUAD_ALTERNATE", value: 2, isUnsigned: true)
!241 = !DIEnumerator(name: "MOD_TRIANGULATE_QUAD_SHORTEDGE", value: 3, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !236, line: 1226, baseType: !7, size: 32, elements: !243)
!243 = !{!244, !245}
!244 = !DIEnumerator(name: "MOD_TRIANGULATE_NGON_BEAUTY", value: 0, isUnsigned: true)
!245 = !DIEnumerator(name: "MOD_TRIANGULATE_NGON_EARCLIP", value: 1, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !48, line: 290, baseType: !7, size: 32, elements: !247)
!247 = !{!248, !249, !250, !251, !252, !253}
!248 = !DIEnumerator(name: "BMO_SYMMETRIZE_NEGATIVE_X", value: 0, isUnsigned: true)
!249 = !DIEnumerator(name: "BMO_SYMMETRIZE_NEGATIVE_Y", value: 1, isUnsigned: true)
!250 = !DIEnumerator(name: "BMO_SYMMETRIZE_NEGATIVE_Z", value: 2, isUnsigned: true)
!251 = !DIEnumerator(name: "BMO_SYMMETRIZE_POSITIVE_X", value: 3, isUnsigned: true)
!252 = !DIEnumerator(name: "BMO_SYMMETRIZE_POSITIVE_Y", value: 4, isUnsigned: true)
!253 = !DIEnumerator(name: "BMO_SYMMETRIZE_POSITIVE_Z", value: 5, isUnsigned: true)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !41, line: 43, baseType: !7, size: 32, elements: !255)
!255 = !{!256, !257, !258, !259, !260}
!256 = !DIEnumerator(name: "SUBD_FALLOFF_SMOOTH", value: 0, isUnsigned: true)
!257 = !DIEnumerator(name: "SUBD_FALLOFF_SPHERE", value: 1, isUnsigned: true)
!258 = !DIEnumerator(name: "SUBD_FALLOFF_ROOT", value: 2, isUnsigned: true)
!259 = !DIEnumerator(name: "SUBD_FALLOFF_SHARP", value: 3, isUnsigned: true)
!260 = !DIEnumerator(name: "SUBD_FALLOFF_LIN", value: 4, isUnsigned: true)
!261 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !41, line: 51, baseType: !7, size: 32, elements: !262)
!262 = !{!263, !264, !265, !266}
!263 = !DIEnumerator(name: "SUBDIV_SELECT_NONE", value: 0, isUnsigned: true)
!264 = !DIEnumerator(name: "SUBDIV_SELECT_ORIG", value: 1, isUnsigned: true)
!265 = !DIEnumerator(name: "SUBDIV_SELECT_INNER", value: 2, isUnsigned: true)
!266 = !DIEnumerator(name: "SUBDIV_SELECT_LOOPCUT", value: 3, isUnsigned: true)
!267 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !268, line: 351, baseType: !7, size: 32, elements: !269)
!268 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!269 = !{!270, !271, !272, !273, !274, !275}
!270 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!271 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!272 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!273 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!274 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!275 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!276 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !41, line: 65, baseType: !7, size: 32, elements: !277)
!277 = !{!278, !279, !280}
!278 = !DIEnumerator(name: "SUBD_RING_INTERP_LINEAR", value: 0, isUnsigned: true)
!279 = !DIEnumerator(name: "SUBD_RING_INTERP_PATH", value: 1, isUnsigned: true)
!280 = !DIEnumerator(name: "SUBD_RING_INTERP_SURF", value: 2, isUnsigned: true)
!281 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !48, line: 281, baseType: !7, size: 32, elements: !282)
!282 = !{!283, !284, !285, !286, !287, !288}
!283 = !DIEnumerator(name: "DEL_VERTS", value: 1, isUnsigned: true)
!284 = !DIEnumerator(name: "DEL_EDGES", value: 2, isUnsigned: true)
!285 = !DIEnumerator(name: "DEL_ONLYFACES", value: 3, isUnsigned: true)
!286 = !DIEnumerator(name: "DEL_EDGESFACES", value: 4, isUnsigned: true)
!287 = !DIEnumerator(name: "DEL_FACES", value: 5, isUnsigned: true)
!288 = !DIEnumerator(name: "DEL_ONLYTAGGED", value: 6, isUnsigned: true)
!289 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !103, line: 249, baseType: !7, size: 32, elements: !290)
!290 = !{!291, !292, !293, !294}
!291 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!292 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!293 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!294 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!295 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !268, line: 67, baseType: !7, size: 32, elements: !296)
!296 = !{!297, !298, !299, !300, !301, !302, !303, !304, !305}
!297 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!298 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!299 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!300 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!301 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!302 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!303 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!304 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!305 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!306 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !236, line: 35, baseType: !7, size: 32, elements: !307)
!307 = !{!308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357}
!308 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!309 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!310 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!311 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!312 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!313 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!314 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!315 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!316 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!317 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!318 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!319 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!320 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!321 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!322 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!323 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!324 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!325 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!326 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!327 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!328 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!329 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!330 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!331 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!332 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!333 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!334 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!335 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!336 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!337 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!338 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!339 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!340 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!341 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!342 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!343 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!344 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!345 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!346 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!347 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!348 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!349 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!350 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!351 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!352 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!353 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!354 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!355 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!356 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!357 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierMode", file: !236, line: 88, baseType: !135, size: 32, elements: !359)
!359 = !{!360, !361, !362, !363, !364, !365, !366, !367}
!360 = !DIEnumerator(name: "eModifierMode_Realtime", value: 1)
!361 = !DIEnumerator(name: "eModifierMode_Render", value: 2)
!362 = !DIEnumerator(name: "eModifierMode_Editmode", value: 4)
!363 = !DIEnumerator(name: "eModifierMode_OnCage", value: 8)
!364 = !DIEnumerator(name: "eModifierMode_Expanded", value: 16)
!365 = !DIEnumerator(name: "eModifierMode_Virtual", value: 32)
!366 = !DIEnumerator(name: "eModifierMode_ApplyOnSpline", value: 64)
!367 = !DIEnumerator(name: "eModifierMode_DisableTemporary", value: -2147483648)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !236, line: 278, baseType: !7, size: 32, elements: !369)
!369 = !{!370, !371, !372, !373, !374, !375, !376, !377}
!370 = !DIEnumerator(name: "MOD_MIR_CLIPPING", value: 1, isUnsigned: true)
!371 = !DIEnumerator(name: "MOD_MIR_MIRROR_U", value: 2, isUnsigned: true)
!372 = !DIEnumerator(name: "MOD_MIR_MIRROR_V", value: 4, isUnsigned: true)
!373 = !DIEnumerator(name: "MOD_MIR_AXIS_X", value: 8, isUnsigned: true)
!374 = !DIEnumerator(name: "MOD_MIR_AXIS_Y", value: 16, isUnsigned: true)
!375 = !DIEnumerator(name: "MOD_MIR_AXIS_Z", value: 32, isUnsigned: true)
!376 = !DIEnumerator(name: "MOD_MIR_VGROUP", value: 64, isUnsigned: true)
!377 = !DIEnumerator(name: "MOD_MIR_NO_MERGE", value: 128, isUnsigned: true)
!378 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !379, line: 339, baseType: !7, size: 32, elements: !380)
!379 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391}
!381 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!382 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!383 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!384 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!385 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!386 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!387 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!388 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!389 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!390 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!391 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!392 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !393, line: 76, baseType: !7, size: 32, elements: !394)
!393 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!394 = !{!395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435}
!395 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!396 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!397 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!398 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!399 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!400 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!401 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!402 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!403 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!404 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!405 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!406 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!407 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!408 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!409 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!410 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!411 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!412 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!413 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!414 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!415 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!416 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!417 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!418 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!419 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!420 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!421 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!422 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!423 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!424 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!425 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!426 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!427 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!428 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!429 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!430 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!431 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!432 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!433 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!434 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!435 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!436 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !437, line: 40, baseType: !7, size: 32, elements: !438)
!437 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!438 = !{!439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285}
!439 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!440 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!441 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!442 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!443 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!444 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!445 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!446 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!447 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!448 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!449 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!450 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!451 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!452 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!453 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!454 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!455 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!456 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!457 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!458 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!459 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!460 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!461 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!462 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!463 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!464 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!465 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!466 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!467 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!468 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!469 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!470 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!471 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!472 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!473 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!474 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!475 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!476 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!477 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!478 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!479 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!480 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!481 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!482 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!483 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!484 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!485 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!486 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!487 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!488 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!489 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!490 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!491 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!492 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!493 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!494 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!495 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!496 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!497 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!498 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!499 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!500 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!501 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!502 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!503 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!504 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!505 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!506 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!507 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!508 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!509 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!510 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!511 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!512 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!513 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!514 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!515 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!516 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!517 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!518 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!519 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!520 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!521 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!522 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!523 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!524 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!525 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!526 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!527 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!528 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!529 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!530 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!531 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!532 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!533 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!534 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!535 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!536 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!537 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!538 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!539 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!540 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!541 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!542 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!543 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!544 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!545 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!546 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!547 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!548 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!549 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!550 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!551 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!552 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!553 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!554 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!555 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!556 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!557 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!558 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!559 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!560 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!561 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!562 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!563 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!564 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!565 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!566 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!567 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!568 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!569 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!570 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!571 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!572 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!573 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!574 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!575 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!576 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!577 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!578 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!579 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!580 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!581 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!582 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!583 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!584 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!585 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!586 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!587 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!588 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!589 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!590 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!591 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!592 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!593 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!594 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!595 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!596 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!597 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!598 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!599 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!600 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!601 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!602 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!603 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!604 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!605 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!606 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!607 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!608 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!609 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!610 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!611 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!612 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!613 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!614 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!615 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!616 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!617 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!618 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!619 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!620 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!621 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!622 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!623 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!624 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!625 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!626 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!627 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!628 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!629 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!630 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!631 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!632 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!633 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!634 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!635 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!636 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!637 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!638 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!639 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!640 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!641 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!642 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!643 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!644 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!645 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!646 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!647 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!648 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!649 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!650 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!651 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!652 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!653 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!654 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!655 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!656 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!657 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!658 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!659 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!660 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!661 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!662 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!663 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!664 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!665 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!666 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!667 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!668 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!669 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!670 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!671 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!672 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!673 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!899 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!900 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!901 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!902 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!903 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!904 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!905 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!906 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!907 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!908 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!909 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!910 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!911 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!912 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!913 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!914 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!915 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!916 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!917 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!918 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!919 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!920 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!921 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!922 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!923 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!924 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!925 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!926 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!927 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!928 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!929 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!930 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!931 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!932 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!933 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!934 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!935 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!936 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!937 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!938 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!939 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!940 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!941 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!942 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!943 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!944 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!945 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!946 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!947 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!948 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!949 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!950 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!951 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!952 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!953 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!954 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!955 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!956 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!957 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!958 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!959 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!960 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!961 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!962 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!963 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!964 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!965 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!966 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!967 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!968 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!969 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!970 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!971 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!972 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!973 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!974 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!975 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!976 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!977 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!978 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!979 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!980 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!981 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!982 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!983 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!984 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!985 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!986 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!987 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!988 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!989 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!990 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!991 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!992 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!993 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!994 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!995 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!996 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!997 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!998 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!999 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!1000 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!1001 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!1002 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!1003 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!1004 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!1005 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!1006 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!1007 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!1008 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!1009 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!1010 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!1011 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!1012 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!1013 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!1014 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!1015 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!1016 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!1017 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!1018 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!1019 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!1020 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!1021 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!1022 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!1023 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!1024 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!1025 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!1026 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!1027 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!1028 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!1029 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!1030 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!1031 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!1032 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!1033 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!1034 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!1035 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!1036 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!1037 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!1038 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!1039 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!1040 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!1041 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!1042 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!1043 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!1044 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!1045 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!1046 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!1047 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!1048 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!1049 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!1050 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!1051 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!1052 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!1053 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!1054 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!1055 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!1056 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!1057 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!1058 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!1059 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!1060 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!1061 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!1062 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!1063 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!1064 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!1065 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!1066 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!1067 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!1068 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!1069 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!1070 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!1071 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!1072 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!1073 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!1074 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!1075 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!1076 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!1077 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!1078 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!1079 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!1080 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!1081 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!1082 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!1083 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!1084 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!1085 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!1086 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!1087 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!1088 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!1089 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!1090 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!1091 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!1092 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!1093 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!1094 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!1095 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!1096 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!1097 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!1098 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!1099 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!1100 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!1101 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!1102 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!1103 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!1104 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!1105 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!1106 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!1107 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!1108 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!1109 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!1110 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!1111 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!1112 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!1113 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!1114 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!1115 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!1116 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!1117 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!1118 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!1119 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!1120 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!1121 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!1122 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!1123 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!1124 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!1125 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!1126 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!1127 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!1128 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!1129 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!1130 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!1131 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!1132 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!1133 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!1134 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!1135 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!1136 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!1137 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!1138 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!1139 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!1140 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!1141 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!1142 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!1143 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!1144 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!1145 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!1146 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!1147 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!1148 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!1149 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!1150 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!1151 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!1152 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!1153 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!1154 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!1155 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!1156 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!1157 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!1158 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!1159 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!1160 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!1161 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!1162 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!1163 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!1164 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!1165 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!1166 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!1167 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!1168 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!1169 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!1170 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!1171 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!1172 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!1173 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!1174 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!1175 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!1176 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!1177 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!1178 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!1179 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!1180 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!1181 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!1182 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!1183 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!1184 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!1185 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!1186 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!1187 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!1188 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!1189 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!1190 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!1191 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!1192 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!1193 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!1194 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!1195 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!1196 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!1197 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!1198 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!1199 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!1200 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!1201 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!1202 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!1203 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!1204 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!1205 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!1206 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!1207 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!1208 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!1209 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!1210 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!1211 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!1212 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!1213 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!1214 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!1215 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!1216 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!1217 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!1218 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!1219 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!1220 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!1221 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!1222 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!1223 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!1224 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!1225 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!1226 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!1227 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!1228 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!1229 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!1230 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!1231 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!1232 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!1233 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!1234 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!1235 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!1236 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!1237 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!1238 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!1239 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!1240 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!1241 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!1242 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!1243 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!1244 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!1245 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!1246 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!1247 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!1248 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!1249 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!1250 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!1251 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!1252 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!1253 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!1254 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!1255 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!1256 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!1257 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!1258 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!1259 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!1260 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!1261 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!1262 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!1263 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!1264 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!1265 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!1266 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!1267 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!1268 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!1269 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!1270 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!1271 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!1272 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!1273 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!1274 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!1275 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!1276 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!1277 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!1278 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!1279 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!1280 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!1281 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!1282 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!1283 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!1284 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!1285 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!1286 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !379, line: 519, baseType: !7, size: 32, elements: !1287)
!1287 = !{!1288, !1289, !1290, !1291}
!1288 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!1289 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!1290 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!1291 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!1292 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eDupli_ID_Flags", file: !1293, line: 710, baseType: !7, size: 32, elements: !1294)
!1293 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1294 = !{!1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306}
!1295 = !DIEnumerator(name: "USER_DUP_MESH", value: 1, isUnsigned: true)
!1296 = !DIEnumerator(name: "USER_DUP_CURVE", value: 2, isUnsigned: true)
!1297 = !DIEnumerator(name: "USER_DUP_SURF", value: 4, isUnsigned: true)
!1298 = !DIEnumerator(name: "USER_DUP_FONT", value: 8, isUnsigned: true)
!1299 = !DIEnumerator(name: "USER_DUP_MBALL", value: 16, isUnsigned: true)
!1300 = !DIEnumerator(name: "USER_DUP_LAMP", value: 32, isUnsigned: true)
!1301 = !DIEnumerator(name: "USER_DUP_IPO", value: 64, isUnsigned: true)
!1302 = !DIEnumerator(name: "USER_DUP_MAT", value: 128, isUnsigned: true)
!1303 = !DIEnumerator(name: "USER_DUP_TEX", value: 256, isUnsigned: true)
!1304 = !DIEnumerator(name: "USER_DUP_ARM", value: 512, isUnsigned: true)
!1305 = !DIEnumerator(name: "USER_DUP_ACT", value: 1024, isUnsigned: true)
!1306 = !DIEnumerator(name: "USER_DUP_PSYS", value: 2048, isUnsigned: true)
!1307 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !48, line: 200, baseType: !7, size: 32, elements: !1308)
!1308 = !{!1309}
!1309 = !DIEnumerator(name: "BMO_FLAG_RESPECT_HIDE", value: 1, isUnsigned: true)
!1310 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1311, line: 34, baseType: !7, size: 32, elements: !1312)
!1311 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_walkers.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1312 = !{!1313, !1314}
!1313 = !DIEnumerator(name: "BMW_DEPTH_FIRST", value: 0, isUnsigned: true)
!1314 = !DIEnumerator(name: "BMW_BREADTH_FIRST", value: 1, isUnsigned: true)
!1315 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1311, line: 39, baseType: !7, size: 32, elements: !1316)
!1316 = !{!1317, !1318}
!1317 = !DIEnumerator(name: "BMW_FLAG_NOP", value: 0, isUnsigned: true)
!1318 = !DIEnumerator(name: "BMW_FLAG_TEST_HIDDEN", value: 1, isUnsigned: true)
!1319 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1311, line: 109, baseType: !7, size: 32, elements: !1320)
!1320 = !{!1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332}
!1321 = !DIEnumerator(name: "BMW_VERT_SHELL", value: 0, isUnsigned: true)
!1322 = !DIEnumerator(name: "BMW_FACE_SHELL", value: 1, isUnsigned: true)
!1323 = !DIEnumerator(name: "BMW_LOOP", value: 2, isUnsigned: true)
!1324 = !DIEnumerator(name: "BMW_FACELOOP", value: 3, isUnsigned: true)
!1325 = !DIEnumerator(name: "BMW_EDGERING", value: 4, isUnsigned: true)
!1326 = !DIEnumerator(name: "BMW_EDGEBOUNDARY", value: 5, isUnsigned: true)
!1327 = !DIEnumerator(name: "BMW_LOOPDATA_ISLAND", value: 6, isUnsigned: true)
!1328 = !DIEnumerator(name: "BMW_ISLANDBOUND", value: 7, isUnsigned: true)
!1329 = !DIEnumerator(name: "BMW_ISLAND", value: 8, isUnsigned: true)
!1330 = !DIEnumerator(name: "BMW_CONNECTED_VERTEX", value: 9, isUnsigned: true)
!1331 = !DIEnumerator(name: "BMW_CUSTOM", value: 10, isUnsigned: true)
!1332 = !DIEnumerator(name: "BMW_MAXWALKERS", value: 11, isUnsigned: true)
!1333 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 3861, baseType: !7, size: 32, elements: !1334)
!1334 = !{!1335, !1336, !1337, !1338, !1339, !1340, !1341}
!1335 = !DIEnumerator(name: "SRT_VIEW_ZAXIS", value: 1, isUnsigned: true)
!1336 = !DIEnumerator(name: "SRT_VIEW_XAXIS", value: 2, isUnsigned: true)
!1337 = !DIEnumerator(name: "SRT_CURSOR_DISTANCE", value: 3, isUnsigned: true)
!1338 = !DIEnumerator(name: "SRT_MATERIAL", value: 4, isUnsigned: true)
!1339 = !DIEnumerator(name: "SRT_SELECTED", value: 5, isUnsigned: true)
!1340 = !DIEnumerator(name: "SRT_RANDOMIZE", value: 6, isUnsigned: true)
!1341 = !DIEnumerator(name: "SRT_REVERSE", value: 7, isUnsigned: true)
!1342 = !{!1343, !1344, !1345, !1346, !1350, !1354, !1418, !1420, !1402, !1365, !1422, !1427, !3731, !3753, !1447, !3277, !1373}
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1344 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !86, line: 79, baseType: !85)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !86, line: 158, baseType: !1347)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{null, !1343}
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !86, line: 159, baseType: !1351)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!1343, !1343}
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !103, line: 103, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !103, line: 90, size: 448, elements: !1357)
!1357 = !{!1358, !1368, !1374, !1378, !1379}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1356, file: !103, line: 91, baseType: !1359, size: 128)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !103, line: 82, baseType: !1360)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !103, line: 64, size: 128, elements: !1361)
!1361 = !{!1362, !1363, !1364, !1366, !1367}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1360, file: !103, line: 65, baseType: !1343, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1360, file: !103, line: 66, baseType: !135, size: 32, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !1360, file: !103, line: 73, baseType: !1365, size: 8, offset: 96)
!1365 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !1360, file: !103, line: 74, baseType: !1365, size: 8, offset: 104)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !1360, file: !103, line: 80, baseType: !1365, size: 8, offset: 112)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !1356, file: !103, line: 92, baseType: !1369, size: 64, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !103, line: 180, size: 16, elements: !1371)
!1371 = !{!1372}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1370, file: !103, line: 181, baseType: !1373, size: 16)
!1373 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1356, file: !103, line: 94, baseType: !1375, size: 96, offset: 192)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1344, size: 96, elements: !1376)
!1376 = !{!1377}
!1377 = !DISubrange(count: 3)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1356, file: !103, line: 95, baseType: !1375, size: 96, offset: 288)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1356, file: !103, line: 102, baseType: !1380, size: 64, offset: 384)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !103, line: 110, size: 640, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1387, !1388, !1411, !1417}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1381, file: !103, line: 111, baseType: !1359, size: 128)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !1381, file: !103, line: 112, baseType: !1369, size: 64, offset: 128)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1381, file: !103, line: 114, baseType: !1386, size: 64, offset: 192)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1381, file: !103, line: 114, baseType: !1386, size: 64, offset: 256)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1381, file: !103, line: 118, baseType: !1389, size: 64, offset: 320)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !103, line: 125, size: 576, elements: !1391)
!1391 = !{!1392, !1393, !1394, !1395, !1407, !1408, !1409, !1410}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1390, file: !103, line: 126, baseType: !1359, size: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1390, file: !103, line: 129, baseType: !1386, size: 64, offset: 128)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1390, file: !103, line: 130, baseType: !1380, size: 64, offset: 192)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1390, file: !103, line: 131, baseType: !1396, size: 64, offset: 256)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !103, line: 164, size: 448, elements: !1398)
!1398 = !{!1399, !1400, !1401, !1404, !1405, !1406}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1397, file: !103, line: 165, baseType: !1359, size: 128)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !1397, file: !103, line: 166, baseType: !1369, size: 64, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !1397, file: !103, line: 172, baseType: !1402, size: 64, offset: 192)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !103, line: 140, baseType: !1390)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1397, file: !103, line: 174, baseType: !135, size: 32, offset: 256)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1397, file: !103, line: 175, baseType: !1375, size: 96, offset: 288)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1397, file: !103, line: 176, baseType: !1373, size: 16, offset: 384)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !1390, file: !103, line: 135, baseType: !1389, size: 64, offset: 320)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !1390, file: !103, line: 135, baseType: !1389, size: 64, offset: 384)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1390, file: !103, line: 139, baseType: !1389, size: 64, offset: 448)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1390, file: !103, line: 139, baseType: !1389, size: 64, offset: 512)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !1381, file: !103, line: 122, baseType: !1412, size: 128, offset: 384)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !103, line: 108, baseType: !1413)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !103, line: 106, size: 128, elements: !1414)
!1414 = !{!1415, !1416}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1413, file: !103, line: 107, baseType: !1380, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1413, file: !103, line: 107, baseType: !1380, size: 64, offset: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !1381, file: !103, line: 122, baseType: !1412, size: 128, offset: 512)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !103, line: 123, baseType: !1381)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !103, line: 178, baseType: !1397)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMElem", file: !103, line: 154, baseType: !1424)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMElem", file: !103, line: 152, size: 128, elements: !1425)
!1425 = !{!1426}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1424, file: !103, line: 153, baseType: !1359, size: 128)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !1429, line: 133, baseType: !1430)
!1429 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !1429, line: 58, size: 11008, elements: !1431)
!1431 = !{!1432, !1500, !1504, !1514, !1517, !1559, !3421, !3427, !3436, !3446, !3452, !3458, !3466, !3477, !3488, !3501, !3509, !3518, !3519, !3527, !3529, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1430, file: !1429, line: 59, baseType: !1433, size: 960)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1434, line: 130, baseType: !1435)
!1434 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1434, line: 117, size: 960, elements: !1436)
!1436 = !{!1437, !1438, !1439, !1441, !1460, !1464, !1465, !1466, !1467, !1468}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1435, file: !1434, line: 118, baseType: !1343, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1435, file: !1434, line: 118, baseType: !1343, size: 64, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1435, file: !1434, line: 119, baseType: !1440, size: 64, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1435, file: !1434, line: 120, baseType: !1442, size: 64, offset: 192)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1434, line: 136, size: 17600, elements: !1444)
!1444 = !{!1445, !1446, !1448, !1451, !1455, !1456, !1457}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1443, file: !1434, line: 137, baseType: !1433, size: 960)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1443, file: !1434, line: 138, baseType: !1447, size: 64, offset: 960)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1443, file: !1434, line: 139, baseType: !1449, size: 64, offset: 1024)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1434, line: 43, flags: DIFlagFwdDecl)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1443, file: !1434, line: 140, baseType: !1452, size: 8192, offset: 1088)
!1452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 8192, elements: !1453)
!1453 = !{!1454}
!1454 = !DISubrange(count: 1024)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1443, file: !1434, line: 141, baseType: !1452, size: 8192, offset: 9280)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1443, file: !1434, line: 148, baseType: !1442, size: 64, offset: 17472)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1443, file: !1434, line: 150, baseType: !1458, size: 64, offset: 17536)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1434, line: 45, flags: DIFlagFwdDecl)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1435, file: !1434, line: 121, baseType: !1461, size: 528, offset: 256)
!1461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 528, elements: !1462)
!1462 = !{!1463}
!1463 = !DISubrange(count: 66)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1435, file: !1434, line: 126, baseType: !1373, size: 16, offset: 784)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1435, file: !1434, line: 127, baseType: !135, size: 32, offset: 800)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1435, file: !1434, line: 128, baseType: !135, size: 32, offset: 832)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1435, file: !1434, line: 128, baseType: !135, size: 32, offset: 864)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1435, file: !1434, line: 129, baseType: !1469, size: 64, offset: 896)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1434, line: 75, baseType: !1471)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1434, line: 62, size: 1024, elements: !1472)
!1472 = !{!1473, !1475, !1476, !1477, !1478, !1479, !1483, !1484, !1498, !1499}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1471, file: !1434, line: 63, baseType: !1474, size: 64)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1471, file: !1434, line: 63, baseType: !1474, size: 64, offset: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1471, file: !1434, line: 64, baseType: !1365, size: 8, offset: 128)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1471, file: !1434, line: 64, baseType: !1365, size: 8, offset: 136)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1471, file: !1434, line: 65, baseType: !1373, size: 16, offset: 144)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1471, file: !1434, line: 66, baseType: !1480, size: 512, offset: 160)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 512, elements: !1481)
!1481 = !{!1482}
!1482 = !DISubrange(count: 64)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1471, file: !1434, line: 67, baseType: !135, size: 32, offset: 672)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1471, file: !1434, line: 69, baseType: !1485, size: 256, offset: 704)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1434, line: 60, baseType: !1486)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1434, line: 48, size: 256, elements: !1487)
!1487 = !{!1488, !1489, !1496, !1497}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1486, file: !1434, line: 49, baseType: !1343, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1486, file: !1434, line: 58, baseType: !1490, size: 128, offset: 64)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !1491, line: 71, baseType: !1492)
!1491 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !1491, line: 69, size: 128, elements: !1493)
!1493 = !{!1494, !1495}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1492, file: !1491, line: 70, baseType: !1343, size: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1492, file: !1491, line: 70, baseType: !1343, size: 64, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1486, file: !1434, line: 59, baseType: !135, size: 32, offset: 192)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1486, file: !1434, line: 59, baseType: !135, size: 32, offset: 224)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1471, file: !1434, line: 70, baseType: !135, size: 32, offset: 960)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1471, file: !1434, line: 74, baseType: !135, size: 32, offset: 992)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1430, file: !1429, line: 60, baseType: !1501, size: 64, offset: 960)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !1503, line: 42, flags: DIFlagFwdDecl)
!1503 = !DIFile(filename: "blender/source/blender/makesdna/DNA_key_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1430, file: !1429, line: 62, baseType: !1505, size: 64, offset: 1024)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !379, line: 97, size: 832, elements: !1507)
!1507 = !{!1508, !1512, !1513}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1506, file: !379, line: 98, baseType: !1509, size: 768)
!1509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1344, size: 768, elements: !1510)
!1510 = !{!1511, !1377}
!1511 = !DISubrange(count: 8)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1506, file: !379, line: 99, baseType: !135, size: 32, offset: 768)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1506, file: !379, line: 99, baseType: !135, size: 32, offset: 800)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1430, file: !1429, line: 64, baseType: !1515, size: 64, offset: 1088)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64)
!1516 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !1503, line: 43, flags: DIFlagFwdDecl)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1430, file: !1429, line: 65, baseType: !1518, size: 64, offset: 1152)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !1503, line: 73, size: 1792, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1544, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1519, file: !1503, line: 74, baseType: !1433, size: 960)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1519, file: !1503, line: 75, baseType: !1501, size: 64, offset: 960)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "refkey", scope: !1519, file: !1503, line: 80, baseType: !1524, size: 64, offset: 1024)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyBlock", file: !1503, line: 70, baseType: !1526)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !1503, line: 45, size: 1472, elements: !1527)
!1527 = !{!1528, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1526, file: !1503, line: 46, baseType: !1529, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1526, file: !1503, line: 46, baseType: !1529, size: 64, offset: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1526, file: !1503, line: 48, baseType: !1344, size: 32, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !1526, file: !1503, line: 51, baseType: !1344, size: 32, offset: 160)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1526, file: !1503, line: 53, baseType: !1373, size: 16, offset: 192)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1526, file: !1503, line: 54, baseType: !1373, size: 16, offset: 208)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "relative", scope: !1526, file: !1503, line: 56, baseType: !1373, size: 16, offset: 224)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1526, file: !1503, line: 57, baseType: !1373, size: 16, offset: 240)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !1526, file: !1503, line: 59, baseType: !135, size: 32, offset: 256)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1526, file: !1503, line: 60, baseType: !135, size: 32, offset: 288)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1526, file: !1503, line: 62, baseType: !1343, size: 64, offset: 320)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1526, file: !1503, line: 63, baseType: !1480, size: 512, offset: 384)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !1526, file: !1503, line: 64, baseType: !1480, size: 512, offset: 896)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "slidermin", scope: !1526, file: !1503, line: 67, baseType: !1344, size: 32, offset: 1408)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "slidermax", scope: !1526, file: !1503, line: 68, baseType: !1344, size: 32, offset: 1440)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "elemstr", scope: !1519, file: !1503, line: 85, baseType: !1545, size: 256, offset: 1088)
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 256, elements: !1546)
!1546 = !{!1547}
!1547 = !DISubrange(count: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !1519, file: !1503, line: 86, baseType: !135, size: 32, offset: 1344)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1519, file: !1503, line: 87, baseType: !135, size: 32, offset: 1376)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1519, file: !1503, line: 89, baseType: !1490, size: 128, offset: 1408)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1519, file: !1503, line: 90, baseType: !1515, size: 64, offset: 1536)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1519, file: !1503, line: 92, baseType: !1447, size: 64, offset: 1600)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1519, file: !1503, line: 94, baseType: !1373, size: 16, offset: 1664)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !1519, file: !1503, line: 95, baseType: !1373, size: 16, offset: 1680)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "slurph", scope: !1519, file: !1503, line: 96, baseType: !1373, size: 16, offset: 1696)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1519, file: !1503, line: 97, baseType: !1373, size: 16, offset: 1712)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1519, file: !1503, line: 101, baseType: !1344, size: 32, offset: 1728)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "uidgen", scope: !1519, file: !1503, line: 104, baseType: !135, size: 32, offset: 1760)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1430, file: !1429, line: 66, baseType: !1560, size: 64, offset: 1216)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !1563, line: 93, size: 7552, elements: !1564)
!1563 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1564 = !{!1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1613, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1682, !1683, !1684, !1685, !1686, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3420}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1562, file: !1563, line: 94, baseType: !1433, size: 960)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1562, file: !1563, line: 95, baseType: !1501, size: 64, offset: 960)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !1562, file: !1563, line: 97, baseType: !1373, size: 16, offset: 1024)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1562, file: !1563, line: 97, baseType: !1373, size: 16, offset: 1040)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1562, file: !1563, line: 99, baseType: !1344, size: 32, offset: 1056)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1562, file: !1563, line: 99, baseType: !1344, size: 32, offset: 1088)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1562, file: !1563, line: 99, baseType: !1344, size: 32, offset: 1120)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !1562, file: !1563, line: 100, baseType: !1344, size: 32, offset: 1152)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !1562, file: !1563, line: 100, baseType: !1344, size: 32, offset: 1184)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !1562, file: !1563, line: 100, baseType: !1344, size: 32, offset: 1216)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !1562, file: !1563, line: 101, baseType: !1344, size: 32, offset: 1248)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !1562, file: !1563, line: 101, baseType: !1344, size: 32, offset: 1280)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !1562, file: !1563, line: 101, baseType: !1344, size: 32, offset: 1312)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !1562, file: !1563, line: 102, baseType: !1344, size: 32, offset: 1344)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !1562, file: !1563, line: 102, baseType: !1344, size: 32, offset: 1376)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !1562, file: !1563, line: 102, baseType: !1344, size: 32, offset: 1408)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !1562, file: !1563, line: 103, baseType: !1344, size: 32, offset: 1440)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !1562, file: !1563, line: 103, baseType: !1344, size: 32, offset: 1472)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !1562, file: !1563, line: 103, baseType: !1344, size: 32, offset: 1504)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !1562, file: !1563, line: 103, baseType: !1344, size: 32, offset: 1536)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !1562, file: !1563, line: 103, baseType: !1344, size: 32, offset: 1568)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1562, file: !1563, line: 104, baseType: !1344, size: 32, offset: 1600)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1562, file: !1563, line: 104, baseType: !1344, size: 32, offset: 1632)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !1562, file: !1563, line: 104, baseType: !1344, size: 32, offset: 1664)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !1562, file: !1563, line: 104, baseType: !1344, size: 32, offset: 1696)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !1562, file: !1563, line: 104, baseType: !1344, size: 32, offset: 1728)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !1562, file: !1563, line: 105, baseType: !1344, size: 32, offset: 1760)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !1562, file: !1563, line: 108, baseType: !1593, size: 704, offset: 1792)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !1563, line: 53, size: 704, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !1593, file: !1563, line: 54, baseType: !1344, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !1593, file: !1563, line: 55, baseType: !1344, size: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !1593, file: !1563, line: 56, baseType: !1344, size: 32, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !1593, file: !1563, line: 57, baseType: !1344, size: 32, offset: 96)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !1593, file: !1563, line: 59, baseType: !1375, size: 96, offset: 128)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !1593, file: !1563, line: 60, baseType: !1375, size: 96, offset: 224)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !1593, file: !1563, line: 61, baseType: !1375, size: 96, offset: 320)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !1593, file: !1563, line: 63, baseType: !1344, size: 32, offset: 416)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !1593, file: !1563, line: 64, baseType: !1344, size: 32, offset: 448)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !1593, file: !1563, line: 65, baseType: !1344, size: 32, offset: 480)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !1593, file: !1563, line: 67, baseType: !1373, size: 16, offset: 512)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !1593, file: !1563, line: 68, baseType: !1373, size: 16, offset: 528)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !1593, file: !1563, line: 69, baseType: !1373, size: 16, offset: 544)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !1593, file: !1563, line: 70, baseType: !1373, size: 16, offset: 560)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !1593, file: !1563, line: 72, baseType: !1344, size: 32, offset: 576)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !1593, file: !1563, line: 73, baseType: !1344, size: 32, offset: 608)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !1593, file: !1563, line: 74, baseType: !1344, size: 32, offset: 640)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !1593, file: !1563, line: 75, baseType: !1344, size: 32, offset: 672)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !1562, file: !1563, line: 109, baseType: !1614, size: 128, offset: 2496)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !1563, line: 79, size: 128, elements: !1615)
!1615 = !{!1616, !1617, !1618, !1619}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1614, file: !1563, line: 80, baseType: !135, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !1614, file: !1563, line: 81, baseType: !135, size: 32, offset: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !1614, file: !1563, line: 82, baseType: !135, size: 32, offset: 64)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1614, file: !1563, line: 83, baseType: !135, size: 32, offset: 96)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !1562, file: !1563, line: 111, baseType: !1344, size: 32, offset: 2624)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !1562, file: !1563, line: 111, baseType: !1344, size: 32, offset: 2656)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !1562, file: !1563, line: 112, baseType: !1344, size: 32, offset: 2688)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !1562, file: !1563, line: 112, baseType: !1344, size: 32, offset: 2720)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1562, file: !1563, line: 113, baseType: !1344, size: 32, offset: 2752)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !1562, file: !1563, line: 114, baseType: !1344, size: 32, offset: 2784)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !1562, file: !1563, line: 114, baseType: !1344, size: 32, offset: 2816)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !1562, file: !1563, line: 115, baseType: !1373, size: 16, offset: 2848)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !1562, file: !1563, line: 115, baseType: !1373, size: 16, offset: 2864)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !1562, file: !1563, line: 116, baseType: !1373, size: 16, offset: 2880)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !1562, file: !1563, line: 117, baseType: !1365, size: 8, offset: 2896)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !1562, file: !1563, line: 117, baseType: !1365, size: 8, offset: 2904)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !1562, file: !1563, line: 119, baseType: !1344, size: 32, offset: 2912)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !1562, file: !1563, line: 119, baseType: !1344, size: 32, offset: 2944)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !1562, file: !1563, line: 120, baseType: !1373, size: 16, offset: 2976)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !1562, file: !1563, line: 120, baseType: !1373, size: 16, offset: 2992)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !1562, file: !1563, line: 121, baseType: !1344, size: 32, offset: 3008)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !1562, file: !1563, line: 121, baseType: !1344, size: 32, offset: 3040)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !1562, file: !1563, line: 122, baseType: !1344, size: 32, offset: 3072)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !1562, file: !1563, line: 123, baseType: !1344, size: 32, offset: 3104)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !1562, file: !1563, line: 124, baseType: !1373, size: 16, offset: 3136)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !1562, file: !1563, line: 125, baseType: !1373, size: 16, offset: 3152)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1562, file: !1563, line: 127, baseType: !135, size: 32, offset: 3168)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !1562, file: !1563, line: 127, baseType: !135, size: 32, offset: 3200)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !1562, file: !1563, line: 128, baseType: !135, size: 32, offset: 3232)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !1562, file: !1563, line: 128, baseType: !135, size: 32, offset: 3264)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !1562, file: !1563, line: 129, baseType: !1373, size: 16, offset: 3296)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !1562, file: !1563, line: 129, baseType: !1373, size: 16, offset: 3312)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !1562, file: !1563, line: 129, baseType: !1373, size: 16, offset: 3328)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !1562, file: !1563, line: 129, baseType: !1373, size: 16, offset: 3344)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !1562, file: !1563, line: 130, baseType: !1344, size: 32, offset: 3360)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !1562, file: !1563, line: 130, baseType: !1344, size: 32, offset: 3392)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !1562, file: !1563, line: 130, baseType: !1344, size: 32, offset: 3424)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !1562, file: !1563, line: 130, baseType: !1344, size: 32, offset: 3456)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !1562, file: !1563, line: 131, baseType: !1344, size: 32, offset: 3488)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !1562, file: !1563, line: 131, baseType: !1344, size: 32, offset: 3520)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !1562, file: !1563, line: 131, baseType: !1344, size: 32, offset: 3552)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !1562, file: !1563, line: 131, baseType: !1344, size: 32, offset: 3584)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !1562, file: !1563, line: 132, baseType: !1344, size: 32, offset: 3616)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !1562, file: !1563, line: 132, baseType: !1344, size: 32, offset: 3648)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !1562, file: !1563, line: 133, baseType: !1480, size: 512, offset: 3680)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !1562, file: !1563, line: 135, baseType: !1344, size: 32, offset: 4192)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !1562, file: !1563, line: 136, baseType: !1344, size: 32, offset: 4224)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !1562, file: !1563, line: 137, baseType: !1344, size: 32, offset: 4256)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !1562, file: !1563, line: 138, baseType: !135, size: 32, offset: 4288)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !1562, file: !1563, line: 141, baseType: !1365, size: 8, offset: 4320)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !1562, file: !1563, line: 141, baseType: !1365, size: 8, offset: 4328)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !1562, file: !1563, line: 141, baseType: !1365, size: 8, offset: 4336)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1562, file: !1563, line: 141, baseType: !1365, size: 8, offset: 4344)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !1562, file: !1563, line: 142, baseType: !1373, size: 16, offset: 4352)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !1562, file: !1563, line: 142, baseType: !1373, size: 16, offset: 4368)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !1562, file: !1563, line: 142, baseType: !1373, size: 16, offset: 4384)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !1562, file: !1563, line: 145, baseType: !1365, size: 8, offset: 4400)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1562, file: !1563, line: 145, baseType: !1365, size: 8, offset: 4408)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !1562, file: !1563, line: 148, baseType: !1373, size: 16, offset: 4416)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !1562, file: !1563, line: 148, baseType: !1373, size: 16, offset: 4432)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !1562, file: !1563, line: 149, baseType: !1344, size: 32, offset: 4448)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !1562, file: !1563, line: 149, baseType: !1344, size: 32, offset: 4480)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1562, file: !1563, line: 152, baseType: !1679, size: 128, offset: 4512)
!1679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1344, size: 128, elements: !1680)
!1680 = !{!1681}
!1681 = !DISubrange(count: 4)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !1562, file: !1563, line: 153, baseType: !1344, size: 32, offset: 4640)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !1562, file: !1563, line: 154, baseType: !1344, size: 32, offset: 4672)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !1562, file: !1563, line: 157, baseType: !1373, size: 16, offset: 4704)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !1562, file: !1563, line: 157, baseType: !1373, size: 16, offset: 4720)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !1562, file: !1563, line: 160, baseType: !1687, size: 64, offset: 4736)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !1689, line: 113, size: 6208, elements: !1690)
!1689 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1690 = !{!1691, !1692, !1693, !1694, !1695, !1696, !1700}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1688, file: !1689, line: 114, baseType: !1373, size: 16)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1688, file: !1689, line: 114, baseType: !1373, size: 16, offset: 16)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !1688, file: !1689, line: 115, baseType: !1365, size: 8, offset: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !1688, file: !1689, line: 115, baseType: !1365, size: 8, offset: 40)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !1688, file: !1689, line: 116, baseType: !1365, size: 8, offset: 48)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1688, file: !1689, line: 117, baseType: !1697, size: 8, offset: 56)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 8, elements: !1698)
!1698 = !{!1699}
!1699 = !DISubrange(count: 1)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1688, file: !1689, line: 119, baseType: !1701, size: 6144, offset: 64)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1702, size: 6144, elements: !1546)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !1689, line: 109, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !1689, line: 106, size: 192, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1708, !1709, !1710}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1703, file: !1689, line: 107, baseType: !1344, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1703, file: !1689, line: 107, baseType: !1344, size: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1703, file: !1689, line: 107, baseType: !1344, size: 32, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1703, file: !1689, line: 107, baseType: !1344, size: 32, offset: 96)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1703, file: !1689, line: 107, baseType: !1344, size: 32, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1703, file: !1689, line: 108, baseType: !135, size: 32, offset: 160)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !1562, file: !1563, line: 161, baseType: !1687, size: 64, offset: 4800)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !1562, file: !1563, line: 162, baseType: !1365, size: 8, offset: 4864)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !1562, file: !1563, line: 162, baseType: !1365, size: 8, offset: 4872)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !1562, file: !1563, line: 163, baseType: !1365, size: 8, offset: 4880)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !1562, file: !1563, line: 163, baseType: !1365, size: 8, offset: 4888)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !1562, file: !1563, line: 164, baseType: !1373, size: 16, offset: 4896)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1562, file: !1563, line: 164, baseType: !1373, size: 16, offset: 4912)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !1562, file: !1563, line: 165, baseType: !1344, size: 32, offset: 4928)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !1562, file: !1563, line: 165, baseType: !1344, size: 32, offset: 4960)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1562, file: !1563, line: 167, baseType: !1721, size: 1152, offset: 4992)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1722, size: 1152, elements: !3378)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !1689, line: 57, size: 2496, elements: !1724)
!1724 = !{!1725, !1726, !1727, !1728, !1729, !3172, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !1723, file: !1689, line: 59, baseType: !1373, size: 16)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !1723, file: !1689, line: 59, baseType: !1373, size: 16, offset: 16)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !1723, file: !1689, line: 59, baseType: !1373, size: 16, offset: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !1723, file: !1689, line: 59, baseType: !1373, size: 16, offset: 48)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1723, file: !1689, line: 60, baseType: !1730, size: 64, offset: 64)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !379, line: 115, size: 11392, elements: !1732)
!1732 = !{!1733, !1734, !1735, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1765, !1766, !1807, !1808, !1811, !1812, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1924, !1927, !1930, !1931, !1932, !1933, !1934, !1937, !1940, !1943, !1944, !1950, !1951, !1952, !1953, !1954, !1955, !1957, !1960, !1963, !1967, !3160, !3161}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1731, file: !379, line: 116, baseType: !1433, size: 960)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1731, file: !379, line: 117, baseType: !1501, size: 64, offset: 960)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1731, file: !379, line: 119, baseType: !1736, size: 64, offset: 1024)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64)
!1737 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !379, line: 57, flags: DIFlagFwdDecl)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1731, file: !379, line: 121, baseType: !1373, size: 16, offset: 1088)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !1731, file: !379, line: 121, baseType: !1373, size: 16, offset: 1104)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !1731, file: !379, line: 122, baseType: !135, size: 32, offset: 1120)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !1731, file: !379, line: 122, baseType: !135, size: 32, offset: 1152)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !1731, file: !379, line: 122, baseType: !135, size: 32, offset: 1184)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !1731, file: !379, line: 123, baseType: !1480, size: 512, offset: 1216)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1731, file: !379, line: 124, baseType: !1730, size: 64, offset: 1728)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !1731, file: !379, line: 124, baseType: !1730, size: 64, offset: 1792)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1731, file: !379, line: 127, baseType: !1730, size: 64, offset: 1856)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !1731, file: !379, line: 127, baseType: !1730, size: 64, offset: 1920)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !1731, file: !379, line: 127, baseType: !1730, size: 64, offset: 1984)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1731, file: !379, line: 128, baseType: !1515, size: 64, offset: 2048)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1731, file: !379, line: 130, baseType: !1505, size: 64, offset: 2112)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1731, file: !379, line: 131, baseType: !1752, size: 64, offset: 2176)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !1754, line: 486, size: 1600, elements: !1755)
!1754 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1755 = !{!1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1753, file: !1754, line: 487, baseType: !1433, size: 960)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !1753, file: !1754, line: 489, baseType: !1490, size: 128, offset: 960)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1753, file: !1754, line: 490, baseType: !1490, size: 128, offset: 1088)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1753, file: !1754, line: 491, baseType: !1490, size: 128, offset: 1216)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1753, file: !1754, line: 492, baseType: !1490, size: 128, offset: 1344)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1753, file: !1754, line: 494, baseType: !135, size: 32, offset: 1472)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !1753, file: !1754, line: 495, baseType: !135, size: 32, offset: 1504)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !1753, file: !1754, line: 497, baseType: !135, size: 32, offset: 1536)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1753, file: !1754, line: 498, baseType: !135, size: 32, offset: 1568)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !1731, file: !379, line: 132, baseType: !1752, size: 64, offset: 2240)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !1731, file: !379, line: 133, baseType: !1767, size: 64, offset: 2304)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !1754, line: 334, size: 1728, elements: !1769)
!1769 = !{!1770, !1771, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1806}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1768, file: !1754, line: 335, baseType: !1490, size: 128)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !1768, file: !1754, line: 336, baseType: !1772, size: 64, offset: 128)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1754, line: 47, flags: DIFlagFwdDecl)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1768, file: !1754, line: 338, baseType: !1373, size: 16, offset: 192)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1768, file: !1754, line: 338, baseType: !1373, size: 16, offset: 208)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !1768, file: !1754, line: 339, baseType: !7, size: 32, offset: 224)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1768, file: !1754, line: 340, baseType: !135, size: 32, offset: 256)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1768, file: !1754, line: 342, baseType: !1344, size: 32, offset: 288)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !1768, file: !1754, line: 343, baseType: !1375, size: 96, offset: 320)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !1768, file: !1754, line: 344, baseType: !1375, size: 96, offset: 416)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !1768, file: !1754, line: 347, baseType: !1490, size: 128, offset: 512)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !1768, file: !1754, line: 349, baseType: !135, size: 32, offset: 640)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !1768, file: !1754, line: 350, baseType: !135, size: 32, offset: 672)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !1768, file: !1754, line: 351, baseType: !1343, size: 64, offset: 704)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !1768, file: !1754, line: 352, baseType: !1343, size: 64, offset: 768)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1768, file: !1754, line: 354, baseType: !1787, size: 384, offset: 832)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !1754, line: 116, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !1754, line: 94, size: 384, elements: !1789)
!1789 = !{!1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !1788, file: !1754, line: 96, baseType: !135, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !1788, file: !1754, line: 96, baseType: !135, size: 32, offset: 32)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !1788, file: !1754, line: 97, baseType: !135, size: 32, offset: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !1788, file: !1754, line: 97, baseType: !135, size: 32, offset: 96)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !1788, file: !1754, line: 99, baseType: !1373, size: 16, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !1788, file: !1754, line: 100, baseType: !1373, size: 16, offset: 144)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !1788, file: !1754, line: 102, baseType: !1373, size: 16, offset: 160)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1788, file: !1754, line: 105, baseType: !1373, size: 16, offset: 176)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !1788, file: !1754, line: 108, baseType: !1373, size: 16, offset: 192)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !1788, file: !1754, line: 109, baseType: !1373, size: 16, offset: 208)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !1788, file: !1754, line: 111, baseType: !1373, size: 16, offset: 224)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !1788, file: !1754, line: 112, baseType: !1373, size: 16, offset: 240)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !1788, file: !1754, line: 114, baseType: !135, size: 32, offset: 256)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !1788, file: !1754, line: 114, baseType: !135, size: 32, offset: 288)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !1788, file: !1754, line: 115, baseType: !135, size: 32, offset: 320)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !1788, file: !1754, line: 115, baseType: !135, size: 32, offset: 352)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !1768, file: !1754, line: 355, baseType: !1480, size: 512, offset: 1216)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1731, file: !379, line: 134, baseType: !1343, size: 64, offset: 2368)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1731, file: !379, line: 136, baseType: !1809, size: 64, offset: 2432)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !379, line: 58, flags: DIFlagFwdDecl)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1731, file: !379, line: 138, baseType: !1787, size: 384, offset: 2496)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !1731, file: !379, line: 139, baseType: !1813, size: 64, offset: 2880)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !1754, line: 80, baseType: !1815)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !1754, line: 72, size: 192, elements: !1816)
!1816 = !{!1817, !1824, !1825, !1826, !1827}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1815, file: !1754, line: 73, baseType: !1818, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !1754, line: 59, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !1754, line: 56, size: 128, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1820, file: !1754, line: 57, baseType: !1375, size: 96)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1820, file: !1754, line: 58, baseType: !135, size: 32, offset: 96)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1815, file: !1754, line: 74, baseType: !135, size: 32, offset: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1815, file: !1754, line: 76, baseType: !135, size: 32, offset: 96)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1815, file: !1754, line: 77, baseType: !135, size: 32, offset: 128)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1815, file: !1754, line: 79, baseType: !135, size: 32, offset: 160)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !1731, file: !379, line: 141, baseType: !1490, size: 128, offset: 2944)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !1731, file: !379, line: 142, baseType: !1490, size: 128, offset: 3072)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !1731, file: !379, line: 143, baseType: !1490, size: 128, offset: 3200)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1731, file: !379, line: 144, baseType: !1490, size: 128, offset: 3328)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1731, file: !379, line: 146, baseType: !135, size: 32, offset: 3456)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !1731, file: !379, line: 147, baseType: !135, size: 32, offset: 3488)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1731, file: !379, line: 150, baseType: !1560, size: 64, offset: 3520)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !1731, file: !379, line: 151, baseType: !1836, size: 64, offset: 3584)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1731, file: !379, line: 152, baseType: !135, size: 32, offset: 3648)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !1731, file: !379, line: 153, baseType: !135, size: 32, offset: 3680)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1731, file: !379, line: 156, baseType: !1375, size: 96, offset: 3712)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !1731, file: !379, line: 156, baseType: !1375, size: 96, offset: 3808)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !1731, file: !379, line: 156, baseType: !1375, size: 96, offset: 3904)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1731, file: !379, line: 157, baseType: !1375, size: 96, offset: 4000)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !1731, file: !379, line: 158, baseType: !1375, size: 96, offset: 4096)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !1731, file: !379, line: 159, baseType: !1375, size: 96, offset: 4192)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1731, file: !379, line: 160, baseType: !1375, size: 96, offset: 4288)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !1731, file: !379, line: 160, baseType: !1375, size: 96, offset: 4384)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1731, file: !379, line: 161, baseType: !1679, size: 128, offset: 4480)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !1731, file: !379, line: 161, baseType: !1679, size: 128, offset: 4608)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !1731, file: !379, line: 162, baseType: !1375, size: 96, offset: 4736)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !1731, file: !379, line: 162, baseType: !1375, size: 96, offset: 4832)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !1731, file: !379, line: 163, baseType: !1344, size: 32, offset: 4928)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !1731, file: !379, line: 163, baseType: !1344, size: 32, offset: 4960)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !1731, file: !379, line: 164, baseType: !1854, size: 512, offset: 4992)
!1854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1344, size: 512, elements: !1855)
!1855 = !{!1681, !1681}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !1731, file: !379, line: 165, baseType: !1854, size: 512, offset: 5504)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !1731, file: !379, line: 166, baseType: !1854, size: 512, offset: 6016)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1731, file: !379, line: 167, baseType: !1854, size: 512, offset: 6528)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !1731, file: !379, line: 176, baseType: !1854, size: 512, offset: 7040)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1731, file: !379, line: 178, baseType: !7, size: 32, offset: 7552)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1731, file: !379, line: 180, baseType: !1373, size: 16, offset: 7584)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !1731, file: !379, line: 181, baseType: !1373, size: 16, offset: 7600)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !1731, file: !379, line: 183, baseType: !1373, size: 16, offset: 7616)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !1731, file: !379, line: 183, baseType: !1373, size: 16, offset: 7632)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !1731, file: !379, line: 184, baseType: !1373, size: 16, offset: 7648)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !1731, file: !379, line: 184, baseType: !1373, size: 16, offset: 7664)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !1731, file: !379, line: 185, baseType: !1373, size: 16, offset: 7680)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !1731, file: !379, line: 186, baseType: !1373, size: 16, offset: 7696)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !1731, file: !379, line: 187, baseType: !1373, size: 16, offset: 7712)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !1731, file: !379, line: 188, baseType: !1365, size: 8, offset: 7728)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !1731, file: !379, line: 189, baseType: !1365, size: 8, offset: 7736)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !1731, file: !379, line: 192, baseType: !135, size: 32, offset: 7744)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !1731, file: !379, line: 192, baseType: !135, size: 32, offset: 7776)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !1731, file: !379, line: 192, baseType: !135, size: 32, offset: 7808)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !1731, file: !379, line: 192, baseType: !135, size: 32, offset: 7840)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1731, file: !379, line: 194, baseType: !135, size: 32, offset: 7872)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1731, file: !379, line: 202, baseType: !1344, size: 32, offset: 7904)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !1731, file: !379, line: 202, baseType: !1344, size: 32, offset: 7936)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !1731, file: !379, line: 202, baseType: !1344, size: 32, offset: 7968)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !1731, file: !379, line: 211, baseType: !1344, size: 32, offset: 8000)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !1731, file: !379, line: 212, baseType: !1344, size: 32, offset: 8032)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1731, file: !379, line: 213, baseType: !1344, size: 32, offset: 8064)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !1731, file: !379, line: 214, baseType: !1344, size: 32, offset: 8096)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !1731, file: !379, line: 215, baseType: !1344, size: 32, offset: 8128)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !1731, file: !379, line: 216, baseType: !1344, size: 32, offset: 8160)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !1731, file: !379, line: 219, baseType: !1344, size: 32, offset: 8192)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !1731, file: !379, line: 220, baseType: !1344, size: 32, offset: 8224)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !1731, file: !379, line: 221, baseType: !1344, size: 32, offset: 8256)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !1731, file: !379, line: 224, baseType: !1890, size: 16, offset: 8288)
!1890 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !1731, file: !379, line: 224, baseType: !1890, size: 16, offset: 8304)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !1731, file: !379, line: 226, baseType: !1373, size: 16, offset: 8320)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !1731, file: !379, line: 228, baseType: !1365, size: 8, offset: 8336)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !1731, file: !379, line: 229, baseType: !1365, size: 8, offset: 8344)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !1731, file: !379, line: 231, baseType: !1373, size: 16, offset: 8352)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1731, file: !379, line: 232, baseType: !1365, size: 8, offset: 8368)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !1731, file: !379, line: 233, baseType: !1365, size: 8, offset: 8376)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !1731, file: !379, line: 234, baseType: !1344, size: 32, offset: 8384)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !1731, file: !379, line: 235, baseType: !1344, size: 32, offset: 8416)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1731, file: !379, line: 237, baseType: !1490, size: 128, offset: 8448)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !1731, file: !379, line: 238, baseType: !1490, size: 128, offset: 8576)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !1731, file: !379, line: 239, baseType: !1490, size: 128, offset: 8704)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !1731, file: !379, line: 240, baseType: !1490, size: 128, offset: 8832)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1731, file: !379, line: 242, baseType: !1344, size: 32, offset: 8960)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1731, file: !379, line: 244, baseType: !1373, size: 16, offset: 8992)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !1731, file: !379, line: 245, baseType: !1890, size: 16, offset: 9008)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1731, file: !379, line: 246, baseType: !1679, size: 128, offset: 9024)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !1731, file: !379, line: 248, baseType: !135, size: 32, offset: 9152)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !1731, file: !379, line: 249, baseType: !135, size: 32, offset: 9184)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !1731, file: !379, line: 251, baseType: !1911, size: 64, offset: 9216)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !379, line: 251, flags: DIFlagFwdDecl)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !1731, file: !379, line: 253, baseType: !1365, size: 8, offset: 9280)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1731, file: !379, line: 254, baseType: !1365, size: 8, offset: 9288)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !1731, file: !379, line: 255, baseType: !1373, size: 16, offset: 9296)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !1731, file: !379, line: 256, baseType: !1375, size: 96, offset: 9312)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !1731, file: !379, line: 258, baseType: !1490, size: 128, offset: 9408)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !1731, file: !379, line: 259, baseType: !1490, size: 128, offset: 9536)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !1731, file: !379, line: 260, baseType: !1490, size: 128, offset: 9664)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !1731, file: !379, line: 261, baseType: !1490, size: 128, offset: 9792)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1731, file: !379, line: 263, baseType: !1922, size: 64, offset: 9920)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !379, line: 52, flags: DIFlagFwdDecl)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1731, file: !379, line: 264, baseType: !1925, size: 64, offset: 9984)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !379, line: 53, flags: DIFlagFwdDecl)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !1731, file: !379, line: 265, baseType: !1928, size: 64, offset: 10048)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !1563, line: 46, flags: DIFlagFwdDecl)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !1731, file: !379, line: 267, baseType: !1365, size: 8, offset: 10112)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !1731, file: !379, line: 268, baseType: !1365, size: 8, offset: 10120)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1731, file: !379, line: 269, baseType: !1373, size: 16, offset: 10128)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !1731, file: !379, line: 270, baseType: !1344, size: 32, offset: 10144)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !1731, file: !379, line: 272, baseType: !1935, size: 64, offset: 10176)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64)
!1936 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !236, line: 732, flags: DIFlagFwdDecl)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !1731, file: !379, line: 275, baseType: !1938, size: 64, offset: 10240)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !379, line: 275, flags: DIFlagFwdDecl)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !1731, file: !379, line: 277, baseType: !1941, size: 64, offset: 10304)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !1429, line: 40, flags: DIFlagFwdDecl)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !1731, file: !379, line: 277, baseType: !1941, size: 64, offset: 10368)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !1731, file: !379, line: 278, baseType: !1945, size: 64, offset: 10432)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1946, line: 27, baseType: !1947)
!1946 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1948, line: 45, baseType: !1949)
!1948 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1949 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1731, file: !379, line: 279, baseType: !1945, size: 64, offset: 10496)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1731, file: !379, line: 280, baseType: !7, size: 32, offset: 10560)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !1731, file: !379, line: 281, baseType: !7, size: 32, offset: 10592)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !1731, file: !379, line: 283, baseType: !1490, size: 128, offset: 10624)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !1731, file: !379, line: 284, baseType: !1490, size: 128, offset: 10752)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !1731, file: !379, line: 285, baseType: !1956, size: 64, offset: 10880)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !1731, file: !379, line: 287, baseType: !1958, size: 64, offset: 10944)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !379, line: 59, flags: DIFlagFwdDecl)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !1731, file: !379, line: 288, baseType: !1961, size: 64, offset: 11008)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !379, line: 288, flags: DIFlagFwdDecl)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !1731, file: !379, line: 290, baseType: !1964, size: 64, offset: 11072)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1344, size: 64, elements: !1965)
!1965 = !{!1966}
!1966 = !DISubrange(count: 2)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1731, file: !379, line: 291, baseType: !1968, size: 64, offset: 11136)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1970, line: 65, baseType: !1971)
!1970 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1970, line: 50, size: 320, elements: !1972)
!1972 = !{!1973, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1971, file: !1970, line: 51, baseType: !1974, size: 64)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1976, line: 1216, size: 39680, elements: !1977)
!1976 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1977 = !{!1978, !1979, !1980, !1981, !1984, !1985, !1986, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2080, !2508, !2733, !2736, !3022, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3044, !3045, !3046, !3047, !3048, !3056, !3123, !3130, !3131, !3138, !3139, !3140, !3141, !3142, !3143, !3144}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1975, file: !1976, line: 1217, baseType: !1433, size: 960)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1975, file: !1976, line: 1218, baseType: !1501, size: 64, offset: 960)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1975, file: !1976, line: 1220, baseType: !1730, size: 64, offset: 1024)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1975, file: !1976, line: 1221, baseType: !1982, size: 64, offset: 1088)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1976, line: 52, flags: DIFlagFwdDecl)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1975, file: !1976, line: 1223, baseType: !1974, size: 64, offset: 1152)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1975, file: !1976, line: 1225, baseType: !1490, size: 128, offset: 1216)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1975, file: !1976, line: 1226, baseType: !1987, size: 64, offset: 1344)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1976, line: 69, size: 320, elements: !1989)
!1989 = !{!1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1988, file: !1976, line: 70, baseType: !1987, size: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1988, file: !1976, line: 70, baseType: !1987, size: 64, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1988, file: !1976, line: 71, baseType: !7, size: 32, offset: 128)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1988, file: !1976, line: 71, baseType: !7, size: 32, offset: 160)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1988, file: !1976, line: 72, baseType: !135, size: 32, offset: 192)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1988, file: !1976, line: 73, baseType: !1373, size: 16, offset: 224)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1988, file: !1976, line: 73, baseType: !1373, size: 16, offset: 240)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1988, file: !1976, line: 74, baseType: !1730, size: 64, offset: 256)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1975, file: !1976, line: 1227, baseType: !1730, size: 64, offset: 1408)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1975, file: !1976, line: 1229, baseType: !1375, size: 96, offset: 1472)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1975, file: !1976, line: 1230, baseType: !1375, size: 96, offset: 1568)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1975, file: !1976, line: 1231, baseType: !1375, size: 96, offset: 1664)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1975, file: !1976, line: 1231, baseType: !1375, size: 96, offset: 1760)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1975, file: !1976, line: 1233, baseType: !7, size: 32, offset: 1856)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1975, file: !1976, line: 1234, baseType: !135, size: 32, offset: 1888)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1975, file: !1976, line: 1235, baseType: !7, size: 32, offset: 1920)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1975, file: !1976, line: 1237, baseType: !1373, size: 16, offset: 1952)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1975, file: !1976, line: 1239, baseType: !1365, size: 8, offset: 1968)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1975, file: !1976, line: 1240, baseType: !1697, size: 8, offset: 1976)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1975, file: !1976, line: 1242, baseType: !2010, size: 64, offset: 1984)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !2012, line: 328, size: 3456, elements: !2013)
!2012 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2013 = !{!2014, !2015, !2016, !2020, !2021, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2049, !2050, !2051, !2054, !2059, !2060, !2063, !2067, !2071, !2075, !2076, !2077, !2078, !2079}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2011, file: !2012, line: 329, baseType: !1433, size: 960)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2011, file: !2012, line: 330, baseType: !1501, size: 64, offset: 960)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !2011, file: !2012, line: 332, baseType: !2017, size: 64, offset: 1024)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !2019, line: 32, flags: DIFlagFwdDecl)
!2019 = !DIFile(filename: "blender/source/blender/makesrna/RNA_enum_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !2011, file: !2012, line: 333, baseType: !1480, size: 512, offset: 1088)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !2011, file: !2012, line: 335, baseType: !2022, size: 64, offset: 1600)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !6, line: 41, flags: DIFlagFwdDecl)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2011, file: !2012, line: 337, baseType: !1809, size: 64, offset: 1664)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !2011, file: !2012, line: 338, baseType: !1964, size: 64, offset: 1728)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2011, file: !2012, line: 340, baseType: !1490, size: 128, offset: 1792)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !2011, file: !2012, line: 340, baseType: !1490, size: 128, offset: 1920)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2011, file: !2012, line: 342, baseType: !135, size: 32, offset: 2048)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2011, file: !2012, line: 342, baseType: !135, size: 32, offset: 2080)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !2011, file: !2012, line: 343, baseType: !135, size: 32, offset: 2112)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2011, file: !2012, line: 345, baseType: !135, size: 32, offset: 2144)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !2011, file: !2012, line: 346, baseType: !135, size: 32, offset: 2176)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !2011, file: !2012, line: 347, baseType: !1373, size: 16, offset: 2208)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2011, file: !2012, line: 348, baseType: !1373, size: 16, offset: 2224)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2011, file: !2012, line: 349, baseType: !135, size: 32, offset: 2240)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !2011, file: !2012, line: 351, baseType: !135, size: 32, offset: 2272)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !2011, file: !2012, line: 353, baseType: !1373, size: 16, offset: 2304)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !2011, file: !2012, line: 354, baseType: !1373, size: 16, offset: 2320)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !2011, file: !2012, line: 355, baseType: !135, size: 32, offset: 2336)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !2011, file: !2012, line: 357, baseType: !2041, size: 128, offset: 2368)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !2042, line: 95, baseType: !2043)
!2042 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !2042, line: 92, size: 128, elements: !2044)
!2044 = !{!2045, !2046, !2047, !2048}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2043, file: !2042, line: 93, baseType: !1344, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2043, file: !2042, line: 93, baseType: !1344, size: 32, offset: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2043, file: !2042, line: 94, baseType: !1344, size: 32, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2043, file: !2042, line: 94, baseType: !1344, size: 32, offset: 96)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !2011, file: !2012, line: 363, baseType: !1490, size: 128, offset: 2496)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !2011, file: !2012, line: 363, baseType: !1490, size: 128, offset: 2624)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !2011, file: !2012, line: 368, baseType: !2052, size: 64, offset: 2752)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !2012, line: 48, flags: DIFlagFwdDecl)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !2011, file: !2012, line: 372, baseType: !2055, size: 32, offset: 2816)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !2012, line: 274, baseType: !2056)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !2012, line: 271, size: 32, elements: !2057)
!2057 = !{!2058}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2056, file: !2012, line: 273, baseType: !7, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2011, file: !2012, line: 373, baseType: !135, size: 32, offset: 2848)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !2011, file: !2012, line: 382, baseType: !2061, size: 64, offset: 2880)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !2012, line: 46, flags: DIFlagFwdDecl)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !2011, file: !2012, line: 385, baseType: !2064, size: 64, offset: 2944)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{null, !1343, !1344}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !2011, file: !2012, line: 386, baseType: !2068, size: 64, offset: 3008)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DISubroutineType(types: !2070)
!2070 = !{null, !1343, !1836}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !2011, file: !2012, line: 387, baseType: !2072, size: 64, offset: 3072)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2073 = !DISubroutineType(types: !2074)
!2074 = !{!135, !1343}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !2011, file: !2012, line: 388, baseType: !1347, size: 64, offset: 3136)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !2011, file: !2012, line: 389, baseType: !1343, size: 64, offset: 3200)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !2011, file: !2012, line: 389, baseType: !1343, size: 64, offset: 3264)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !2011, file: !2012, line: 389, baseType: !1343, size: 64, offset: 3328)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !2011, file: !2012, line: 389, baseType: !1343, size: 64, offset: 3392)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1975, file: !1976, line: 1244, baseType: !2081, size: 64, offset: 2048)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !2083, line: 200, size: 17024, elements: !2084)
!2083 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2084 = !{!2085, !2086, !2087, !2088, !2501, !2502, !2503, !2504, !2505, !2506, !2507}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !2082, file: !2083, line: 201, baseType: !1956, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !2082, file: !2083, line: 202, baseType: !1490, size: 128, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !2082, file: !2083, line: 203, baseType: !1490, size: 128, offset: 192)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !2082, file: !2083, line: 206, baseType: !2089, size: 64, offset: 320)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !2083, line: 190, baseType: !2091)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !2083, line: 126, size: 2816, elements: !2092)
!2092 = !{!2093, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2191, !2192, !2193, !2194, !2472, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2500}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2091, file: !2083, line: 127, baseType: !2094, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2091, file: !2083, line: 127, baseType: !2094, size: 64, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !2091, file: !2083, line: 128, baseType: !1343, size: 64, offset: 128)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !2091, file: !2083, line: 129, baseType: !1343, size: 64, offset: 192)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2091, file: !2083, line: 130, baseType: !1480, size: 512, offset: 256)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2091, file: !2083, line: 132, baseType: !135, size: 32, offset: 768)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2091, file: !2083, line: 132, baseType: !135, size: 32, offset: 800)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2091, file: !2083, line: 133, baseType: !135, size: 32, offset: 832)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2091, file: !2083, line: 134, baseType: !135, size: 32, offset: 864)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !2091, file: !2083, line: 134, baseType: !135, size: 32, offset: 896)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !2091, file: !2083, line: 134, baseType: !135, size: 32, offset: 928)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !2091, file: !2083, line: 135, baseType: !135, size: 32, offset: 960)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !2091, file: !2083, line: 135, baseType: !135, size: 32, offset: 992)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2091, file: !2083, line: 136, baseType: !135, size: 32, offset: 1024)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2091, file: !2083, line: 136, baseType: !135, size: 32, offset: 1056)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !2091, file: !2083, line: 137, baseType: !135, size: 32, offset: 1088)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !2091, file: !2083, line: 137, baseType: !135, size: 32, offset: 1120)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !2091, file: !2083, line: 138, baseType: !1344, size: 32, offset: 1152)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !2091, file: !2083, line: 139, baseType: !1344, size: 32, offset: 1184)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !2091, file: !2083, line: 139, baseType: !1344, size: 32, offset: 1216)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !2091, file: !2083, line: 141, baseType: !1373, size: 16, offset: 1248)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !2091, file: !2083, line: 142, baseType: !1373, size: 16, offset: 1264)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !2091, file: !2083, line: 143, baseType: !135, size: 32, offset: 1280)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !2091, file: !2083, line: 144, baseType: !135, size: 32, offset: 1312)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !2091, file: !2083, line: 146, baseType: !2119, size: 64, offset: 1344)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !2083, line: 114, baseType: !2121)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !2083, line: 99, size: 7232, elements: !2122)
!2122 = !{!2123, !2125, !2126, !2127, !2128, !2129, !2130, !2141, !2145, !2159, !2168, !2175, !2185}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2121, file: !2083, line: 100, baseType: !2124, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2121, file: !2083, line: 100, baseType: !2124, size: 64, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !2121, file: !2083, line: 101, baseType: !135, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2121, file: !2083, line: 101, baseType: !135, size: 32, offset: 160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !2121, file: !2083, line: 102, baseType: !135, size: 32, offset: 192)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !2121, file: !2083, line: 102, baseType: !135, size: 32, offset: 224)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !2121, file: !2083, line: 103, baseType: !2131, size: 64, offset: 256)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !2083, line: 59, baseType: !2133)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !2083, line: 56, size: 2112, elements: !2134)
!2134 = !{!2135, !2139, !2140}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2133, file: !2083, line: 57, baseType: !2136, size: 2048)
!2136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 2048, elements: !2137)
!2137 = !{!2138}
!2138 = !DISubrange(count: 256)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !2133, file: !2083, line: 58, baseType: !135, size: 32, offset: 2048)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !2133, file: !2083, line: 58, baseType: !135, size: 32, offset: 2080)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2121, file: !2083, line: 106, baseType: !2142, size: 6144, offset: 320)
!2142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 6144, elements: !2143)
!2143 = !{!2144}
!2144 = !DISubrange(count: 768)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2121, file: !2083, line: 107, baseType: !2146, size: 64, offset: 6464)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !2083, line: 97, baseType: !2148)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !2083, line: 83, size: 8320, elements: !2149)
!2149 = !{!2150, !2151, !2152, !2155, !2156, !2157, !2158}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2148, file: !2083, line: 84, baseType: !2142, size: 6144)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2148, file: !2083, line: 87, baseType: !2136, size: 2048, offset: 6144)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2148, file: !2083, line: 88, baseType: !2153, size: 64, offset: 8192)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1970, line: 41, flags: DIFlagFwdDecl)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2148, file: !2083, line: 90, baseType: !1373, size: 16, offset: 8256)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2148, file: !2083, line: 92, baseType: !1373, size: 16, offset: 8272)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !2148, file: !2083, line: 93, baseType: !1373, size: 16, offset: 8288)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !2148, file: !2083, line: 95, baseType: !1373, size: 16, offset: 8304)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !2121, file: !2083, line: 108, baseType: !2160, size: 64, offset: 6528)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !2083, line: 66, baseType: !2162)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !2083, line: 61, size: 128, elements: !2163)
!2163 = !{!2164, !2165, !2166, !2167}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !2162, file: !2083, line: 62, baseType: !135, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !2162, file: !2083, line: 63, baseType: !135, size: 32, offset: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !2162, file: !2083, line: 64, baseType: !135, size: 32, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !2162, file: !2083, line: 65, baseType: !135, size: 32, offset: 96)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !2121, file: !2083, line: 109, baseType: !2169, size: 64, offset: 6592)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !2083, line: 71, baseType: !2171)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !2083, line: 68, size: 64, elements: !2172)
!2172 = !{!2173, !2174}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !2171, file: !2083, line: 69, baseType: !135, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !2171, file: !2083, line: 70, baseType: !135, size: 32, offset: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !2121, file: !2083, line: 110, baseType: !2176, size: 64, offset: 6656)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !2083, line: 81, baseType: !2178)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !2083, line: 73, size: 352, elements: !2179)
!2179 = !{!2180, !2181, !2182, !2183, !2184}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !2178, file: !2083, line: 74, baseType: !1375, size: 96)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2178, file: !2083, line: 75, baseType: !1375, size: 96, offset: 96)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !2178, file: !2083, line: 76, baseType: !1375, size: 96, offset: 192)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2178, file: !2083, line: 77, baseType: !135, size: 32, offset: 288)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2178, file: !2083, line: 78, baseType: !135, size: 32, offset: 320)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2121, file: !2083, line: 113, baseType: !2186, size: 512, offset: 6720)
!2186 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !2187, line: 182, baseType: !2188)
!2187 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !2187, line: 180, size: 512, elements: !2189)
!2189 = !{!2190}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2188, file: !2187, line: 181, baseType: !1480, size: 512)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2091, file: !2083, line: 148, baseType: !1515, size: 64, offset: 1408)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2091, file: !2083, line: 151, baseType: !1974, size: 64, offset: 1472)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !2091, file: !2083, line: 152, baseType: !1730, size: 64, offset: 1536)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2091, file: !2083, line: 153, baseType: !2195, size: 64, offset: 1600)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !2197, line: 64, size: 19136, elements: !2198)
!2197 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2198 = !{!2199, !2200, !2201, !2202, !2203, !2204, !2206, !2207, !2208, !2209, !2212, !2213, !2458, !2459, !2467, !2468, !2469, !2470, !2471}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2196, file: !2197, line: 65, baseType: !1433, size: 960)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2196, file: !2197, line: 66, baseType: !1501, size: 64, offset: 960)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2196, file: !2197, line: 68, baseType: !1452, size: 8192, offset: 1024)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2196, file: !2197, line: 70, baseType: !135, size: 32, offset: 9216)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2196, file: !2197, line: 71, baseType: !135, size: 32, offset: 9248)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2196, file: !2197, line: 72, baseType: !2205, size: 64, offset: 9280)
!2205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 64, elements: !1965)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2196, file: !2197, line: 74, baseType: !1344, size: 32, offset: 9344)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2196, file: !2197, line: 74, baseType: !1344, size: 32, offset: 9376)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2196, file: !2197, line: 76, baseType: !2153, size: 64, offset: 9408)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2196, file: !2197, line: 77, baseType: !2210, size: 64, offset: 9472)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !2197, line: 77, flags: DIFlagFwdDecl)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2196, file: !2197, line: 78, baseType: !1809, size: 64, offset: 9536)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !2196, file: !2197, line: 80, baseType: !2214, size: 2624, offset: 9600)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !2215, line: 340, size: 2624, elements: !2216)
!2215 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2216 = !{!2217, !2245, !2263, !2264, !2265, !2280, !2338, !2339, !2438, !2439, !2440, !2441, !2447}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !2214, file: !2215, line: 341, baseType: !2218, size: 576)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !2215, line: 251, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !2215, line: 207, size: 576, elements: !2220)
!2220 = !{!2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2219, file: !2215, line: 208, baseType: !135, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !2219, file: !2215, line: 211, baseType: !1373, size: 16, offset: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !2219, file: !2215, line: 212, baseType: !1373, size: 16, offset: 48)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !2219, file: !2215, line: 213, baseType: !1344, size: 32, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !2219, file: !2215, line: 214, baseType: !1373, size: 16, offset: 96)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !2219, file: !2215, line: 215, baseType: !1373, size: 16, offset: 112)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !2219, file: !2215, line: 216, baseType: !1373, size: 16, offset: 128)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !2219, file: !2215, line: 217, baseType: !1373, size: 16, offset: 144)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !2219, file: !2215, line: 218, baseType: !1373, size: 16, offset: 160)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !2219, file: !2215, line: 219, baseType: !1373, size: 16, offset: 176)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !2219, file: !2215, line: 220, baseType: !1344, size: 32, offset: 192)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !2219, file: !2215, line: 222, baseType: !1373, size: 16, offset: 224)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !2219, file: !2215, line: 225, baseType: !1373, size: 16, offset: 240)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !2219, file: !2215, line: 228, baseType: !135, size: 32, offset: 256)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !2219, file: !2215, line: 229, baseType: !135, size: 32, offset: 288)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !2219, file: !2215, line: 233, baseType: !135, size: 32, offset: 320)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !2219, file: !2215, line: 236, baseType: !1373, size: 16, offset: 352)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2219, file: !2215, line: 236, baseType: !1373, size: 16, offset: 368)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2219, file: !2215, line: 241, baseType: !1344, size: 32, offset: 384)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !2219, file: !2215, line: 244, baseType: !135, size: 32, offset: 416)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !2219, file: !2215, line: 244, baseType: !135, size: 32, offset: 448)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !2219, file: !2215, line: 245, baseType: !1344, size: 32, offset: 480)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !2219, file: !2215, line: 248, baseType: !1344, size: 32, offset: 512)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2219, file: !2215, line: 250, baseType: !135, size: 32, offset: 544)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2214, file: !2215, line: 342, baseType: !2246, size: 448, offset: 576)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !2215, line: 79, baseType: !2247)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !2215, line: 61, size: 448, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !2247, file: !2215, line: 62, baseType: !1343, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !2247, file: !2215, line: 64, baseType: !1373, size: 16, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2247, file: !2215, line: 65, baseType: !1373, size: 16, offset: 80)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !2247, file: !2215, line: 67, baseType: !1344, size: 32, offset: 96)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !2247, file: !2215, line: 68, baseType: !1344, size: 32, offset: 128)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !2247, file: !2215, line: 69, baseType: !1344, size: 32, offset: 160)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2247, file: !2215, line: 70, baseType: !1373, size: 16, offset: 192)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2247, file: !2215, line: 71, baseType: !1373, size: 16, offset: 208)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !2247, file: !2215, line: 72, baseType: !1964, size: 64, offset: 224)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2247, file: !2215, line: 75, baseType: !1344, size: 32, offset: 288)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !2247, file: !2215, line: 75, baseType: !1344, size: 32, offset: 320)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !2247, file: !2215, line: 75, baseType: !1344, size: 32, offset: 352)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !2247, file: !2215, line: 78, baseType: !1344, size: 32, offset: 384)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !2247, file: !2215, line: 78, baseType: !1344, size: 32, offset: 416)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !2214, file: !2215, line: 343, baseType: !1490, size: 128, offset: 1024)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !2214, file: !2215, line: 344, baseType: !1490, size: 128, offset: 1152)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !2214, file: !2215, line: 345, baseType: !2266, size: 192, offset: 1280)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !2215, line: 278, baseType: !2267)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !2215, line: 270, size: 192, elements: !2268)
!2268 = !{!2269, !2270, !2271, !2272, !2273}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2267, file: !2215, line: 271, baseType: !135, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2267, file: !2215, line: 273, baseType: !1344, size: 32, offset: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !2267, file: !2215, line: 275, baseType: !135, size: 32, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !2267, file: !2215, line: 276, baseType: !135, size: 32, offset: 96)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !2267, file: !2215, line: 277, baseType: !2274, size: 64, offset: 128)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !2215, line: 55, size: 576, elements: !2276)
!2276 = !{!2277, !2278, !2279}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2275, file: !2215, line: 56, baseType: !135, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2275, file: !2215, line: 57, baseType: !1344, size: 32, offset: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2275, file: !2215, line: 58, baseType: !1854, size: 512, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !2214, file: !2215, line: 346, baseType: !2281, size: 384, offset: 1472)
!2281 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !2215, line: 268, baseType: !2282)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !2215, line: 253, size: 384, elements: !2283)
!2283 = !{!2284, !2285, !2286, !2287, !2288, !2332, !2333, !2334, !2335, !2336, !2337}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2282, file: !2215, line: 254, baseType: !135, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !2282, file: !2215, line: 255, baseType: !135, size: 32, offset: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2282, file: !2215, line: 255, baseType: !135, size: 32, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !2282, file: !2215, line: 258, baseType: !1344, size: 32, offset: 96)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !2282, file: !2215, line: 259, baseType: !2289, size: 64, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !2215, line: 164, baseType: !2291)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !2215, line: 108, size: 1664, elements: !2292)
!2292 = !{!2293, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2291, file: !2215, line: 109, baseType: !2294, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2291, file: !2215, line: 109, baseType: !2294, size: 64, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2291, file: !2215, line: 111, baseType: !1480, size: 512, offset: 128)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !2291, file: !2215, line: 119, baseType: !1964, size: 64, offset: 640)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !2291, file: !2215, line: 119, baseType: !1964, size: 64, offset: 704)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2291, file: !2215, line: 125, baseType: !1964, size: 64, offset: 768)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2291, file: !2215, line: 125, baseType: !1964, size: 64, offset: 832)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2291, file: !2215, line: 127, baseType: !1964, size: 64, offset: 896)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2291, file: !2215, line: 130, baseType: !135, size: 32, offset: 960)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2291, file: !2215, line: 131, baseType: !135, size: 32, offset: 992)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2291, file: !2215, line: 132, baseType: !2305, size: 64, offset: 1024)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !2215, line: 106, baseType: !2307)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !2215, line: 81, size: 512, elements: !2308)
!2308 = !{!2309, !2310, !2313, !2314, !2315, !2316}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2307, file: !2215, line: 82, baseType: !1964, size: 64)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !2307, file: !2215, line: 97, baseType: !2311, size: 256, offset: 64)
!2311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1344, size: 256, elements: !2312)
!2312 = !{!1681, !1966}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2307, file: !2215, line: 102, baseType: !1964, size: 64, offset: 320)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2307, file: !2215, line: 102, baseType: !1964, size: 64, offset: 384)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2307, file: !2215, line: 104, baseType: !135, size: 32, offset: 448)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2307, file: !2215, line: 105, baseType: !135, size: 32, offset: 480)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !2291, file: !2215, line: 135, baseType: !1375, size: 96, offset: 1088)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2291, file: !2215, line: 136, baseType: !1344, size: 32, offset: 1184)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2291, file: !2215, line: 139, baseType: !135, size: 32, offset: 1216)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !2291, file: !2215, line: 139, baseType: !135, size: 32, offset: 1248)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !2291, file: !2215, line: 139, baseType: !135, size: 32, offset: 1280)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2291, file: !2215, line: 140, baseType: !1375, size: 96, offset: 1312)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !2291, file: !2215, line: 143, baseType: !1373, size: 16, offset: 1408)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2291, file: !2215, line: 144, baseType: !1373, size: 16, offset: 1424)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !2291, file: !2215, line: 145, baseType: !1373, size: 16, offset: 1440)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !2291, file: !2215, line: 148, baseType: !1373, size: 16, offset: 1456)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !2291, file: !2215, line: 149, baseType: !135, size: 32, offset: 1472)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !2291, file: !2215, line: 150, baseType: !1344, size: 32, offset: 1504)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2291, file: !2215, line: 152, baseType: !1809, size: 64, offset: 1536)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2291, file: !2215, line: 163, baseType: !1344, size: 32, offset: 1600)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2291, file: !2215, line: 163, baseType: !1344, size: 32, offset: 1632)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !2282, file: !2215, line: 261, baseType: !1344, size: 32, offset: 192)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !2282, file: !2215, line: 261, baseType: !1344, size: 32, offset: 224)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !2282, file: !2215, line: 261, baseType: !1344, size: 32, offset: 256)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2282, file: !2215, line: 263, baseType: !135, size: 32, offset: 288)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2282, file: !2215, line: 266, baseType: !135, size: 32, offset: 320)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2282, file: !2215, line: 267, baseType: !1344, size: 32, offset: 352)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2214, file: !2215, line: 347, baseType: !2289, size: 64, offset: 1856)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !2214, file: !2215, line: 348, baseType: !2340, size: 64, offset: 1920)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !2215, line: 205, baseType: !2342)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !2215, line: 186, size: 1024, elements: !2343)
!2343 = !{!2344, !2346, !2347, !2348, !2350, !2351, !2352, !2360, !2361, !2362, !2436, !2437}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2342, file: !2215, line: 187, baseType: !2345, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2342, file: !2215, line: 187, baseType: !2345, size: 64, offset: 64)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2342, file: !2215, line: 189, baseType: !1480, size: 512, offset: 128)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !2342, file: !2215, line: 191, baseType: !2349, size: 64, offset: 640)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !2342, file: !2215, line: 193, baseType: !135, size: 32, offset: 704)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2342, file: !2215, line: 193, baseType: !135, size: 32, offset: 736)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2342, file: !2215, line: 195, baseType: !2353, size: 64, offset: 768)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !2215, line: 184, baseType: !2355)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !2215, line: 166, size: 320, elements: !2356)
!2356 = !{!2357, !2358, !2359}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !2355, file: !2215, line: 180, baseType: !2311, size: 256)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2355, file: !2215, line: 182, baseType: !135, size: 32, offset: 256)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2355, file: !2215, line: 183, baseType: !135, size: 32, offset: 288)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2342, file: !2215, line: 196, baseType: !135, size: 32, offset: 832)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2342, file: !2215, line: 198, baseType: !135, size: 32, offset: 864)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2342, file: !2215, line: 200, baseType: !2363, size: 64, offset: 896)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1970, line: 77, size: 15424, elements: !2365)
!2365 = !{!2366, !2367, !2368, !2371, !2374, !2375, !2378, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2397, !2398, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2430}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2364, file: !1970, line: 78, baseType: !1433, size: 960)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2364, file: !1970, line: 80, baseType: !1452, size: 8192, offset: 960)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2364, file: !1970, line: 82, baseType: !2369, size: 64, offset: 9152)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2370 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1970, line: 43, flags: DIFlagFwdDecl)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2364, file: !1970, line: 83, baseType: !2372, size: 64, offset: 9216)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !1434, line: 46, flags: DIFlagFwdDecl)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2364, file: !1970, line: 86, baseType: !2153, size: 64, offset: 9280)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !2364, file: !1970, line: 87, baseType: !2376, size: 64, offset: 9344)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1970, line: 44, flags: DIFlagFwdDecl)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !2364, file: !1970, line: 89, baseType: !2379, size: 512, offset: 9408)
!2379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2376, size: 512, elements: !2380)
!2380 = !{!1511}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !2364, file: !1970, line: 90, baseType: !1373, size: 16, offset: 9920)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !2364, file: !1970, line: 90, baseType: !1373, size: 16, offset: 9936)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2364, file: !1970, line: 92, baseType: !1373, size: 16, offset: 9952)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2364, file: !1970, line: 92, baseType: !1373, size: 16, offset: 9968)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2364, file: !1970, line: 93, baseType: !1373, size: 16, offset: 9984)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2364, file: !1970, line: 93, baseType: !1373, size: 16, offset: 10000)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2364, file: !1970, line: 94, baseType: !135, size: 32, offset: 10016)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !2364, file: !1970, line: 97, baseType: !1373, size: 16, offset: 10048)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !2364, file: !1970, line: 97, baseType: !1373, size: 16, offset: 10064)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !2364, file: !1970, line: 98, baseType: !1373, size: 16, offset: 10080)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !2364, file: !1970, line: 98, baseType: !1373, size: 16, offset: 10096)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !2364, file: !1970, line: 99, baseType: !1373, size: 16, offset: 10112)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !2364, file: !1970, line: 99, baseType: !1373, size: 16, offset: 10128)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !2364, file: !1970, line: 100, baseType: !7, size: 32, offset: 10144)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !2364, file: !1970, line: 101, baseType: !2396, size: 64, offset: 10176)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !2364, file: !1970, line: 103, baseType: !1458, size: 64, offset: 10240)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2364, file: !1970, line: 104, baseType: !2399, size: 64, offset: 10304)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !1434, line: 159, size: 448, elements: !2401)
!2401 = !{!2402, !2404, !2405, !2407, !2408, !2410}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2400, file: !1434, line: 161, baseType: !2403, size: 64)
!2403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1965)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2400, file: !1434, line: 162, baseType: !2403, size: 64, offset: 64)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2400, file: !1434, line: 163, baseType: !2406, size: 32, offset: 128)
!2406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1373, size: 32, elements: !1965)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2400, file: !1434, line: 164, baseType: !2406, size: 32, offset: 160)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !2400, file: !1434, line: 165, baseType: !2409, size: 128, offset: 192)
!2409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2396, size: 128, elements: !1965)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2400, file: !1434, line: 166, baseType: !2411, size: 128, offset: 320)
!2411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2372, size: 128, elements: !1965)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !2364, file: !1970, line: 107, baseType: !1344, size: 32, offset: 10368)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !2364, file: !1970, line: 108, baseType: !135, size: 32, offset: 10400)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !2364, file: !1970, line: 109, baseType: !1373, size: 16, offset: 10432)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2364, file: !1970, line: 110, baseType: !1373, size: 16, offset: 10448)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !2364, file: !1970, line: 113, baseType: !135, size: 32, offset: 10464)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !2364, file: !1970, line: 113, baseType: !135, size: 32, offset: 10496)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !2364, file: !1970, line: 114, baseType: !1365, size: 8, offset: 10528)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !2364, file: !1970, line: 114, baseType: !1365, size: 8, offset: 10536)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !2364, file: !1970, line: 115, baseType: !1373, size: 16, offset: 10544)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !2364, file: !1970, line: 116, baseType: !1679, size: 128, offset: 10560)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2364, file: !1970, line: 119, baseType: !1344, size: 32, offset: 10688)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2364, file: !1970, line: 119, baseType: !1344, size: 32, offset: 10720)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2364, file: !1970, line: 122, baseType: !2186, size: 512, offset: 10752)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !2364, file: !1970, line: 123, baseType: !1365, size: 8, offset: 11264)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2364, file: !1970, line: 125, baseType: !2427, size: 56, offset: 11272)
!2427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 56, elements: !2428)
!2428 = !{!2429}
!2429 = !DISubrange(count: 7)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !2364, file: !1970, line: 126, baseType: !2431, size: 4096, offset: 11328)
!2431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2432, size: 4096, elements: !2380)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1970, line: 69, baseType: !2433)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1970, line: 67, size: 512, elements: !2434)
!2434 = !{!2435}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2433, file: !1970, line: 68, baseType: !1480, size: 512)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !2342, file: !2215, line: 201, baseType: !1344, size: 32, offset: 960)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2342, file: !2215, line: 204, baseType: !135, size: 32, offset: 992)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2214, file: !2215, line: 350, baseType: !1490, size: 128, offset: 1984)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !2214, file: !2215, line: 351, baseType: !135, size: 32, offset: 2112)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !2214, file: !2215, line: 351, baseType: !135, size: 32, offset: 2144)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2214, file: !2215, line: 353, baseType: !2442, size: 64, offset: 2176)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !2215, line: 297, baseType: !2444)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !2215, line: 295, size: 2048, elements: !2445)
!2445 = !{!2446}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !2444, file: !2215, line: 296, baseType: !2136, size: 2048)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !2214, file: !2215, line: 355, baseType: !2448, size: 384, offset: 2240)
!2448 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !2215, line: 338, baseType: !2449)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !2215, line: 322, size: 384, elements: !2450)
!2450 = !{!2451, !2452, !2453, !2454, !2455, !2456, !2457}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2449, file: !2215, line: 323, baseType: !135, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !2449, file: !2215, line: 325, baseType: !1373, size: 16, offset: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2449, file: !2215, line: 326, baseType: !1373, size: 16, offset: 48)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !2449, file: !2215, line: 331, baseType: !1490, size: 128, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2449, file: !2215, line: 334, baseType: !1490, size: 128, offset: 192)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !2449, file: !2215, line: 335, baseType: !135, size: 32, offset: 320)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2449, file: !2215, line: 337, baseType: !135, size: 32, offset: 352)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !2196, file: !2197, line: 81, baseType: !1343, size: 64, offset: 12224)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !2196, file: !2197, line: 85, baseType: !2460, size: 6208, offset: 12288)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !2197, line: 55, size: 6208, elements: !2461)
!2461 = !{!2462, !2463, !2464, !2465, !2466}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2460, file: !2197, line: 56, baseType: !2142, size: 6144)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2460, file: !2197, line: 58, baseType: !1373, size: 16, offset: 6144)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2460, file: !2197, line: 59, baseType: !1373, size: 16, offset: 6160)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !2460, file: !2197, line: 60, baseType: !1373, size: 16, offset: 6176)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !2460, file: !2197, line: 61, baseType: !1373, size: 16, offset: 6192)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2196, file: !2197, line: 86, baseType: !135, size: 32, offset: 18496)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2196, file: !2197, line: 88, baseType: !135, size: 32, offset: 18528)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2196, file: !2197, line: 90, baseType: !135, size: 32, offset: 18560)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !2196, file: !2197, line: 94, baseType: !135, size: 32, offset: 18592)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2196, file: !2197, line: 100, baseType: !2186, size: 512, offset: 18624)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2091, file: !2083, line: 154, baseType: !2473, size: 64, offset: 1664)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !2475, line: 264, flags: DIFlagFwdDecl)
!2475 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2091, file: !2083, line: 156, baseType: !2153, size: 64, offset: 1728)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !2091, file: !2083, line: 158, baseType: !1344, size: 32, offset: 1792)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !2091, file: !2083, line: 159, baseType: !1344, size: 32, offset: 1824)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !2091, file: !2083, line: 162, baseType: !2094, size: 64, offset: 1856)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !2091, file: !2083, line: 162, baseType: !2094, size: 64, offset: 1920)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !2091, file: !2083, line: 162, baseType: !2094, size: 64, offset: 1984)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !2091, file: !2083, line: 164, baseType: !1490, size: 128, offset: 2048)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2091, file: !2083, line: 166, baseType: !2484, size: 64, offset: 2176)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !2083, line: 51, flags: DIFlagFwdDecl)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !2091, file: !2083, line: 167, baseType: !1343, size: 64, offset: 2240)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2091, file: !2083, line: 168, baseType: !1344, size: 32, offset: 2304)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !2091, file: !2083, line: 170, baseType: !1344, size: 32, offset: 2336)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !2091, file: !2083, line: 170, baseType: !1344, size: 32, offset: 2368)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !2091, file: !2083, line: 171, baseType: !1344, size: 32, offset: 2400)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !2091, file: !2083, line: 173, baseType: !1343, size: 64, offset: 2432)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !2091, file: !2083, line: 175, baseType: !135, size: 32, offset: 2496)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !2091, file: !2083, line: 176, baseType: !135, size: 32, offset: 2528)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !2091, file: !2083, line: 179, baseType: !135, size: 32, offset: 2560)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !2091, file: !2083, line: 180, baseType: !1344, size: 32, offset: 2592)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2091, file: !2083, line: 183, baseType: !135, size: 32, offset: 2624)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !2091, file: !2083, line: 185, baseType: !1365, size: 8, offset: 2656)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2091, file: !2083, line: 186, baseType: !2499, size: 24, offset: 2664)
!2499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 24, elements: !1376)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !2091, file: !2083, line: 189, baseType: !1490, size: 128, offset: 2688)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !2082, file: !2083, line: 207, baseType: !1452, size: 8192, offset: 384)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !2082, file: !2083, line: 208, baseType: !1452, size: 8192, offset: 8576)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !2082, file: !2083, line: 210, baseType: !135, size: 32, offset: 16768)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !2082, file: !2083, line: 210, baseType: !135, size: 32, offset: 16800)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !2082, file: !2083, line: 211, baseType: !135, size: 32, offset: 16832)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2082, file: !2083, line: 211, baseType: !135, size: 32, offset: 16864)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !2082, file: !2083, line: 212, baseType: !2041, size: 128, offset: 16896)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1975, file: !1976, line: 1246, baseType: !2509, size: 64, offset: 2112)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1976, line: 1067, size: 5184, elements: !2511)
!2511 = !{!2512, !2552, !2553, !2568, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2590, !2606, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2716}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2510, file: !1976, line: 1068, baseType: !2513, size: 64)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1976, line: 934, baseType: !2515)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1976, line: 925, size: 576, elements: !2516)
!2516 = !{!2517, !2534, !2535, !2536, !2537, !2538, !2551}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2515, file: !1976, line: 926, baseType: !2518, size: 320)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1976, line: 830, baseType: !2519)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1976, line: 813, size: 320, elements: !2520)
!2520 = !{!2521, !2524, !2527, !2528, !2531, !2532, !2533}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2519, file: !1976, line: 814, baseType: !2522, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1976, line: 51, flags: DIFlagFwdDecl)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2519, file: !1976, line: 815, baseType: !2525, size: 64, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 64)
!2526 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1976, line: 815, flags: DIFlagFwdDecl)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2519, file: !1976, line: 818, baseType: !1343, size: 64, offset: 128)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2519, file: !1976, line: 819, baseType: !2529, size: 32, offset: 192)
!2529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2530, size: 32, elements: !1680)
!2530 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2519, file: !1976, line: 822, baseType: !135, size: 32, offset: 224)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2519, file: !1976, line: 826, baseType: !135, size: 32, offset: 256)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2519, file: !1976, line: 829, baseType: !135, size: 32, offset: 288)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2515, file: !1976, line: 928, baseType: !1373, size: 16, offset: 320)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2515, file: !1976, line: 928, baseType: !1373, size: 16, offset: 336)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2515, file: !1976, line: 929, baseType: !135, size: 32, offset: 352)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2515, file: !1976, line: 930, baseType: !2396, size: 64, offset: 384)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2515, file: !1976, line: 931, baseType: !2539, size: 64, offset: 448)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !2541, line: 59, size: 128, elements: !2542)
!2541 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2542 = !{!2543, !2549, !2550}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !2540, file: !2541, line: 60, baseType: !2544, size: 64)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !2541, line: 54, size: 64, elements: !2546)
!2546 = !{!2547, !2548}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !2545, file: !2541, line: 55, baseType: !135, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2545, file: !2541, line: 56, baseType: !1344, size: 32, offset: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !2540, file: !2541, line: 61, baseType: !135, size: 32, offset: 64)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2540, file: !2541, line: 62, baseType: !135, size: 32, offset: 96)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2515, file: !1976, line: 933, baseType: !1343, size: 64, offset: 512)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2510, file: !1976, line: 1069, baseType: !2513, size: 64, offset: 64)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2510, file: !1976, line: 1070, baseType: !2554, size: 64, offset: 128)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1976, line: 916, baseType: !2556)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1976, line: 891, size: 704, elements: !2557)
!2557 = !{!2558, !2559, !2560, !2562, !2563, !2564, !2565, !2566, !2567}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2556, file: !1976, line: 892, baseType: !2518, size: 320)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2556, file: !1976, line: 896, baseType: !135, size: 32, offset: 320)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2556, file: !1976, line: 900, baseType: !2561, size: 96, offset: 352)
!2561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 96, elements: !1376)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2556, file: !1976, line: 903, baseType: !1344, size: 32, offset: 448)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2556, file: !1976, line: 906, baseType: !135, size: 32, offset: 480)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2556, file: !1976, line: 909, baseType: !1344, size: 32, offset: 512)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2556, file: !1976, line: 912, baseType: !1344, size: 32, offset: 544)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2556, file: !1976, line: 914, baseType: !1730, size: 64, offset: 576)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2556, file: !1976, line: 915, baseType: !1343, size: 64, offset: 640)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2510, file: !1976, line: 1071, baseType: !2569, size: 64, offset: 192)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1976, line: 920, baseType: !2571)
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1976, line: 918, size: 320, elements: !2572)
!2572 = !{!2573}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2571, file: !1976, line: 919, baseType: !2518, size: 320)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2510, file: !1976, line: 1075, baseType: !1344, size: 32, offset: 256)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2510, file: !1976, line: 1077, baseType: !1344, size: 32, offset: 288)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2510, file: !1976, line: 1078, baseType: !1344, size: 32, offset: 320)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2510, file: !1976, line: 1079, baseType: !1373, size: 16, offset: 352)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2510, file: !1976, line: 1082, baseType: !1373, size: 16, offset: 368)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2510, file: !1976, line: 1085, baseType: !1365, size: 8, offset: 384)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2510, file: !1976, line: 1086, baseType: !1365, size: 8, offset: 392)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2510, file: !1976, line: 1087, baseType: !1365, size: 8, offset: 400)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2510, file: !1976, line: 1088, baseType: !1365, size: 8, offset: 408)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2510, file: !1976, line: 1090, baseType: !1344, size: 32, offset: 416)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2510, file: !1976, line: 1093, baseType: !1373, size: 16, offset: 448)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2510, file: !1976, line: 1096, baseType: !1365, size: 8, offset: 464)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2510, file: !1976, line: 1098, baseType: !2587, size: 40, offset: 472)
!2587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 40, elements: !2588)
!2588 = !{!2589}
!2589 = !DISubrange(count: 5)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2510, file: !1976, line: 1101, baseType: !2591, size: 832, offset: 512)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1976, line: 836, size: 832, elements: !2592)
!2592 = !{!2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2591, file: !1976, line: 837, baseType: !2518, size: 320)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2591, file: !1976, line: 839, baseType: !1373, size: 16, offset: 320)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2591, file: !1976, line: 839, baseType: !1373, size: 16, offset: 336)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2591, file: !1976, line: 842, baseType: !1373, size: 16, offset: 352)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2591, file: !1976, line: 842, baseType: !1373, size: 16, offset: 368)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2591, file: !1976, line: 843, baseType: !2406, size: 32, offset: 384)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2591, file: !1976, line: 845, baseType: !135, size: 32, offset: 416)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2591, file: !1976, line: 847, baseType: !1343, size: 64, offset: 448)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2591, file: !1976, line: 848, baseType: !2363, size: 64, offset: 512)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2591, file: !1976, line: 849, baseType: !2363, size: 64, offset: 576)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2591, file: !1976, line: 850, baseType: !2363, size: 64, offset: 640)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2591, file: !1976, line: 851, baseType: !1375, size: 96, offset: 704)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2591, file: !1976, line: 852, baseType: !1344, size: 32, offset: 800)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2510, file: !1976, line: 1104, baseType: !2607, size: 1344, offset: 1344)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1976, line: 867, size: 1344, elements: !2608)
!2608 = !{!2609, !2610, !2611, !2612, !2613, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2607, file: !1976, line: 868, baseType: !1373, size: 16)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2607, file: !1976, line: 869, baseType: !1373, size: 16, offset: 16)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2607, file: !1976, line: 870, baseType: !1373, size: 16, offset: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2607, file: !1976, line: 871, baseType: !1373, size: 16, offset: 48)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2607, file: !1976, line: 873, baseType: !2614, size: 896, offset: 64)
!2614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2615, size: 896, elements: !2428)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1976, line: 864, baseType: !2616)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1976, line: 859, size: 128, elements: !2617)
!2617 = !{!2618, !2619, !2620, !2621, !2622, !2623}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2616, file: !1976, line: 860, baseType: !1373, size: 16)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2616, file: !1976, line: 861, baseType: !1373, size: 16, offset: 16)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2616, file: !1976, line: 861, baseType: !1373, size: 16, offset: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2616, file: !1976, line: 861, baseType: !1373, size: 16, offset: 48)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2616, file: !1976, line: 862, baseType: !135, size: 32, offset: 64)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2616, file: !1976, line: 863, baseType: !1344, size: 32, offset: 96)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2607, file: !1976, line: 874, baseType: !1343, size: 64, offset: 960)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2607, file: !1976, line: 876, baseType: !1344, size: 32, offset: 1024)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2607, file: !1976, line: 876, baseType: !1344, size: 32, offset: 1056)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2607, file: !1976, line: 878, baseType: !135, size: 32, offset: 1088)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2607, file: !1976, line: 879, baseType: !135, size: 32, offset: 1120)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2607, file: !1976, line: 881, baseType: !135, size: 32, offset: 1152)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2607, file: !1976, line: 881, baseType: !135, size: 32, offset: 1184)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2607, file: !1976, line: 883, baseType: !1974, size: 64, offset: 1216)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2607, file: !1976, line: 884, baseType: !1730, size: 64, offset: 1280)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2510, file: !1976, line: 1107, baseType: !1344, size: 32, offset: 2688)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2510, file: !1976, line: 1110, baseType: !1344, size: 32, offset: 2720)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2510, file: !1976, line: 1113, baseType: !1373, size: 16, offset: 2752)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2510, file: !1976, line: 1113, baseType: !1373, size: 16, offset: 2768)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2510, file: !1976, line: 1116, baseType: !1365, size: 8, offset: 2784)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2510, file: !1976, line: 1117, baseType: !1697, size: 8, offset: 2792)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2510, file: !1976, line: 1120, baseType: !1373, size: 16, offset: 2800)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2510, file: !1976, line: 1121, baseType: !1344, size: 32, offset: 2816)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2510, file: !1976, line: 1122, baseType: !1344, size: 32, offset: 2848)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2510, file: !1976, line: 1123, baseType: !1344, size: 32, offset: 2880)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2510, file: !1976, line: 1124, baseType: !1344, size: 32, offset: 2912)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2510, file: !1976, line: 1125, baseType: !1344, size: 32, offset: 2944)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2510, file: !1976, line: 1126, baseType: !1344, size: 32, offset: 2976)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2510, file: !1976, line: 1127, baseType: !1344, size: 32, offset: 3008)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2510, file: !1976, line: 1128, baseType: !1344, size: 32, offset: 3040)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2510, file: !1976, line: 1129, baseType: !1344, size: 32, offset: 3072)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2510, file: !1976, line: 1130, baseType: !1344, size: 32, offset: 3104)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2510, file: !1976, line: 1131, baseType: !1373, size: 16, offset: 3136)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2510, file: !1976, line: 1132, baseType: !1365, size: 8, offset: 3152)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2510, file: !1976, line: 1133, baseType: !1365, size: 8, offset: 3160)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2510, file: !1976, line: 1134, baseType: !2499, size: 24, offset: 3168)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2510, file: !1976, line: 1135, baseType: !1365, size: 8, offset: 3192)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2510, file: !1976, line: 1138, baseType: !1730, size: 64, offset: 3200)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2510, file: !1976, line: 1139, baseType: !1365, size: 8, offset: 3264)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2510, file: !1976, line: 1140, baseType: !1365, size: 8, offset: 3272)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2510, file: !1976, line: 1141, baseType: !1365, size: 8, offset: 3280)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2510, file: !1976, line: 1142, baseType: !1365, size: 8, offset: 3288)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2510, file: !1976, line: 1143, baseType: !1365, size: 8, offset: 3296)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2510, file: !1976, line: 1144, baseType: !2662, size: 64, offset: 3304)
!2662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 64, elements: !2380)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2510, file: !1976, line: 1145, baseType: !2662, size: 64, offset: 3368)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2510, file: !1976, line: 1148, baseType: !1365, size: 8, offset: 3432)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2510, file: !1976, line: 1149, baseType: !1365, size: 8, offset: 3440)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2510, file: !1976, line: 1152, baseType: !1365, size: 8, offset: 3448)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2510, file: !1976, line: 1152, baseType: !1365, size: 8, offset: 3456)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2510, file: !1976, line: 1153, baseType: !1365, size: 8, offset: 3464)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2510, file: !1976, line: 1154, baseType: !1373, size: 16, offset: 3472)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2510, file: !1976, line: 1154, baseType: !1373, size: 16, offset: 3488)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2510, file: !1976, line: 1155, baseType: !1373, size: 16, offset: 3504)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2510, file: !1976, line: 1155, baseType: !1373, size: 16, offset: 3520)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2510, file: !1976, line: 1156, baseType: !1365, size: 8, offset: 3536)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2510, file: !1976, line: 1157, baseType: !1365, size: 8, offset: 3544)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2510, file: !1976, line: 1159, baseType: !1365, size: 8, offset: 3552)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2510, file: !1976, line: 1160, baseType: !1365, size: 8, offset: 3560)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2510, file: !1976, line: 1161, baseType: !1365, size: 8, offset: 3568)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2510, file: !1976, line: 1162, baseType: !1365, size: 8, offset: 3576)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2510, file: !1976, line: 1165, baseType: !135, size: 32, offset: 3584)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2510, file: !1976, line: 1166, baseType: !135, size: 32, offset: 3616)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2510, file: !1976, line: 1167, baseType: !135, size: 32, offset: 3648)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2510, file: !1976, line: 1168, baseType: !135, size: 32, offset: 3680)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2510, file: !1976, line: 1171, baseType: !1373, size: 16, offset: 3712)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2510, file: !1976, line: 1171, baseType: !1373, size: 16, offset: 3728)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2510, file: !1976, line: 1172, baseType: !135, size: 32, offset: 3744)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2510, file: !1976, line: 1173, baseType: !1344, size: 32, offset: 3776)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2510, file: !1976, line: 1174, baseType: !1344, size: 32, offset: 3808)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2510, file: !1976, line: 1177, baseType: !2689, size: 1024, offset: 3840)
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1976, line: 963, size: 1024, elements: !2690)
!2690 = !{!2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2714, !2715}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2689, file: !1976, line: 965, baseType: !135, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2689, file: !1976, line: 968, baseType: !1344, size: 32, offset: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2689, file: !1976, line: 971, baseType: !1344, size: 32, offset: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2689, file: !1976, line: 974, baseType: !1344, size: 32, offset: 96)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2689, file: !1976, line: 977, baseType: !1375, size: 96, offset: 128)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2689, file: !1976, line: 979, baseType: !1375, size: 96, offset: 224)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2689, file: !1976, line: 982, baseType: !135, size: 32, offset: 320)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2689, file: !1976, line: 987, baseType: !1964, size: 64, offset: 352)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2689, file: !1976, line: 989, baseType: !1344, size: 32, offset: 416)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2689, file: !1976, line: 994, baseType: !135, size: 32, offset: 448)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2689, file: !1976, line: 995, baseType: !135, size: 32, offset: 480)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2689, file: !1976, line: 997, baseType: !1365, size: 8, offset: 512)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2689, file: !1976, line: 998, baseType: !2427, size: 56, offset: 520)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2689, file: !1976, line: 1000, baseType: !1344, size: 32, offset: 576)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2689, file: !1976, line: 1003, baseType: !1964, size: 64, offset: 608)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2689, file: !1976, line: 1006, baseType: !135, size: 32, offset: 672)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2689, file: !1976, line: 1009, baseType: !1344, size: 32, offset: 704)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2689, file: !1976, line: 1012, baseType: !1964, size: 64, offset: 736)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2689, file: !1976, line: 1015, baseType: !1964, size: 64, offset: 800)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2689, file: !1976, line: 1018, baseType: !135, size: 32, offset: 864)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2689, file: !1976, line: 1019, baseType: !2712, size: 64, offset: 896)
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2713, size: 64)
!2713 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1976, line: 63, flags: DIFlagFwdDecl)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2689, file: !1976, line: 1023, baseType: !1344, size: 32, offset: 960)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2689, file: !1976, line: 1024, baseType: !135, size: 32, offset: 992)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2510, file: !1976, line: 1179, baseType: !2717, size: 320, offset: 4864)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1976, line: 1043, size: 320, elements: !2718)
!2718 = !{!2719, !2720, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2717, file: !1976, line: 1044, baseType: !1365, size: 8)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2717, file: !1976, line: 1045, baseType: !2721, size: 16, offset: 8)
!2721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 16, elements: !1965)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2717, file: !1976, line: 1048, baseType: !1365, size: 8, offset: 24)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2717, file: !1976, line: 1049, baseType: !1344, size: 32, offset: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2717, file: !1976, line: 1049, baseType: !1344, size: 32, offset: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2717, file: !1976, line: 1052, baseType: !1344, size: 32, offset: 96)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2717, file: !1976, line: 1052, baseType: !1344, size: 32, offset: 128)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2717, file: !1976, line: 1053, baseType: !1365, size: 8, offset: 160)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2717, file: !1976, line: 1054, baseType: !2499, size: 24, offset: 168)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2717, file: !1976, line: 1057, baseType: !1344, size: 32, offset: 192)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2717, file: !1976, line: 1057, baseType: !1344, size: 32, offset: 224)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2717, file: !1976, line: 1060, baseType: !1344, size: 32, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2717, file: !1976, line: 1060, baseType: !1344, size: 32, offset: 288)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1975, file: !1976, line: 1247, baseType: !2734, size: 64, offset: 2176)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1976, line: 60, flags: DIFlagFwdDecl)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1975, file: !1976, line: 1251, baseType: !2737, size: 31872, offset: 2240)
!2737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1976, line: 403, size: 31872, elements: !2738)
!2738 = !{!2739, !2814, !2834, !2843, !2863, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !3001, !3002, !3003, !3004, !3020, !3021}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2737, file: !1976, line: 404, baseType: !2740, size: 1984)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1976, line: 259, size: 1984, elements: !2741)
!2741 = !{!2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2759, !2809}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2740, file: !1976, line: 260, baseType: !1365, size: 8)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2740, file: !1976, line: 263, baseType: !1365, size: 8, offset: 8)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2740, file: !1976, line: 266, baseType: !1365, size: 8, offset: 16)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2740, file: !1976, line: 267, baseType: !1365, size: 8, offset: 24)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2740, file: !1976, line: 269, baseType: !1365, size: 8, offset: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2740, file: !1976, line: 270, baseType: !1365, size: 8, offset: 40)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2740, file: !1976, line: 276, baseType: !1365, size: 8, offset: 48)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2740, file: !1976, line: 279, baseType: !1365, size: 8, offset: 56)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2740, file: !1976, line: 280, baseType: !1373, size: 16, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2740, file: !1976, line: 280, baseType: !1373, size: 16, offset: 80)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2740, file: !1976, line: 281, baseType: !1344, size: 32, offset: 96)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2740, file: !1976, line: 284, baseType: !1365, size: 8, offset: 128)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2740, file: !1976, line: 285, baseType: !1365, size: 8, offset: 136)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2740, file: !1976, line: 287, baseType: !2756, size: 48, offset: 144)
!2756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 48, elements: !2757)
!2757 = !{!2758}
!2758 = !DISubrange(count: 6)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2740, file: !1976, line: 290, baseType: !2760, size: 1280, offset: 192)
!2760 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !2187, line: 174, baseType: !2761)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !2187, line: 166, size: 1280, elements: !2762)
!2762 = !{!2763, !2764, !2765, !2766, !2767, !2768, !2769, !2808}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2761, file: !2187, line: 167, baseType: !135, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2761, file: !2187, line: 167, baseType: !135, size: 32, offset: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2761, file: !2187, line: 168, baseType: !1480, size: 512, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2761, file: !2187, line: 169, baseType: !1480, size: 512, offset: 576)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2761, file: !2187, line: 170, baseType: !1344, size: 32, offset: 1088)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2761, file: !2187, line: 171, baseType: !1344, size: 32, offset: 1120)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2761, file: !2187, line: 172, baseType: !2770, size: 64, offset: 1152)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !2187, line: 72, size: 3072, elements: !2772)
!2772 = !{!2773, !2774, !2775, !2776, !2777, !2778, !2779, !2804, !2805, !2806, !2807}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2771, file: !2187, line: 73, baseType: !135, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2771, file: !2187, line: 73, baseType: !135, size: 32, offset: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2771, file: !2187, line: 74, baseType: !135, size: 32, offset: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2771, file: !2187, line: 75, baseType: !135, size: 32, offset: 96)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2771, file: !2187, line: 77, baseType: !2041, size: 128, offset: 128)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2771, file: !2187, line: 77, baseType: !2041, size: 128, offset: 256)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2771, file: !2187, line: 79, baseType: !2780, size: 2304, offset: 384)
!2780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2781, size: 2304, elements: !1680)
!2781 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !2187, line: 67, baseType: !2782)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !2187, line: 55, size: 576, elements: !2783)
!2783 = !{!2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2800, !2801, !2802, !2803}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2782, file: !2187, line: 56, baseType: !1373, size: 16)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2782, file: !2187, line: 56, baseType: !1373, size: 16, offset: 16)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2782, file: !2187, line: 58, baseType: !1344, size: 32, offset: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2782, file: !2187, line: 59, baseType: !1344, size: 32, offset: 64)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2782, file: !2187, line: 59, baseType: !1344, size: 32, offset: 96)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2782, file: !2187, line: 60, baseType: !1964, size: 64, offset: 128)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2782, file: !2187, line: 60, baseType: !1964, size: 64, offset: 192)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2782, file: !2187, line: 61, baseType: !2792, size: 64, offset: 256)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !2187, line: 47, baseType: !2794)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !2187, line: 44, size: 96, elements: !2795)
!2795 = !{!2796, !2797, !2798, !2799}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2794, file: !2187, line: 45, baseType: !1344, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2794, file: !2187, line: 45, baseType: !1344, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2794, file: !2187, line: 46, baseType: !1373, size: 16, offset: 64)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2794, file: !2187, line: 46, baseType: !1373, size: 16, offset: 80)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2782, file: !2187, line: 62, baseType: !2792, size: 64, offset: 320)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2782, file: !2187, line: 64, baseType: !2792, size: 64, offset: 384)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2782, file: !2187, line: 65, baseType: !1964, size: 64, offset: 448)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2782, file: !2187, line: 66, baseType: !1964, size: 64, offset: 512)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2771, file: !2187, line: 80, baseType: !1375, size: 96, offset: 2688)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2771, file: !2187, line: 80, baseType: !1375, size: 96, offset: 2784)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2771, file: !2187, line: 81, baseType: !1375, size: 96, offset: 2880)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2771, file: !2187, line: 83, baseType: !1375, size: 96, offset: 2976)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2761, file: !2187, line: 173, baseType: !1343, size: 64, offset: 1216)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2740, file: !1976, line: 291, baseType: !2810, size: 512, offset: 1472)
!2810 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !2187, line: 178, baseType: !2811)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !2187, line: 176, size: 512, elements: !2812)
!2812 = !{!2813}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2811, file: !2187, line: 177, baseType: !1480, size: 512)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2737, file: !1976, line: 406, baseType: !2815, size: 64, offset: 1984)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1976, line: 80, size: 1472, elements: !2817)
!2817 = !{!2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2816, file: !1976, line: 81, baseType: !1343, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2816, file: !1976, line: 82, baseType: !1343, size: 64, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2816, file: !1976, line: 83, baseType: !7, size: 32, offset: 128)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2816, file: !1976, line: 84, baseType: !7, size: 32, offset: 160)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2816, file: !1976, line: 86, baseType: !7, size: 32, offset: 192)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2816, file: !1976, line: 87, baseType: !7, size: 32, offset: 224)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2816, file: !1976, line: 88, baseType: !7, size: 32, offset: 256)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2816, file: !1976, line: 89, baseType: !7, size: 32, offset: 288)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2816, file: !1976, line: 90, baseType: !7, size: 32, offset: 320)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2816, file: !1976, line: 91, baseType: !7, size: 32, offset: 352)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2816, file: !1976, line: 92, baseType: !7, size: 32, offset: 384)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2816, file: !1976, line: 93, baseType: !7, size: 32, offset: 416)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2816, file: !1976, line: 95, baseType: !2831, size: 1024, offset: 448)
!2831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 1024, elements: !2832)
!2832 = !{!2833}
!2833 = !DISubrange(count: 128)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2737, file: !1976, line: 407, baseType: !2835, size: 64, offset: 2048)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1976, line: 98, size: 1216, elements: !2837)
!2837 = !{!2838, !2839, !2840, !2841, !2842}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2836, file: !1976, line: 100, baseType: !1343, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2836, file: !1976, line: 101, baseType: !1343, size: 64, offset: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2836, file: !1976, line: 103, baseType: !7, size: 32, offset: 128)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2836, file: !1976, line: 104, baseType: !7, size: 32, offset: 160)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2836, file: !1976, line: 106, baseType: !2831, size: 1024, offset: 192)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2737, file: !1976, line: 408, baseType: !2844, size: 512, offset: 2112)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1976, line: 109, size: 512, elements: !2845)
!2845 = !{!2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2844, file: !1976, line: 111, baseType: !135, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2844, file: !1976, line: 112, baseType: !135, size: 32, offset: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2844, file: !1976, line: 115, baseType: !135, size: 32, offset: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2844, file: !1976, line: 116, baseType: !135, size: 32, offset: 96)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2844, file: !1976, line: 117, baseType: !135, size: 32, offset: 128)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2844, file: !1976, line: 118, baseType: !135, size: 32, offset: 160)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2844, file: !1976, line: 119, baseType: !135, size: 32, offset: 192)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2844, file: !1976, line: 120, baseType: !135, size: 32, offset: 224)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2844, file: !1976, line: 121, baseType: !135, size: 32, offset: 256)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2844, file: !1976, line: 122, baseType: !135, size: 32, offset: 288)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2844, file: !1976, line: 125, baseType: !135, size: 32, offset: 320)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2844, file: !1976, line: 126, baseType: !135, size: 32, offset: 352)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2844, file: !1976, line: 127, baseType: !1373, size: 16, offset: 384)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2844, file: !1976, line: 128, baseType: !1373, size: 16, offset: 400)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2844, file: !1976, line: 129, baseType: !135, size: 32, offset: 416)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2844, file: !1976, line: 130, baseType: !135, size: 32, offset: 448)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2844, file: !1976, line: 131, baseType: !135, size: 32, offset: 480)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2737, file: !1976, line: 409, baseType: !2864, size: 576, offset: 2624)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1976, line: 134, size: 576, elements: !2865)
!2865 = !{!2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2864, file: !1976, line: 135, baseType: !135, size: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2864, file: !1976, line: 136, baseType: !135, size: 32, offset: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2864, file: !1976, line: 137, baseType: !135, size: 32, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2864, file: !1976, line: 138, baseType: !135, size: 32, offset: 96)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2864, file: !1976, line: 139, baseType: !135, size: 32, offset: 128)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2864, file: !1976, line: 140, baseType: !135, size: 32, offset: 160)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2864, file: !1976, line: 141, baseType: !135, size: 32, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2864, file: !1976, line: 142, baseType: !135, size: 32, offset: 224)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2864, file: !1976, line: 143, baseType: !1344, size: 32, offset: 256)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2864, file: !1976, line: 144, baseType: !135, size: 32, offset: 288)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2864, file: !1976, line: 145, baseType: !135, size: 32, offset: 320)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2864, file: !1976, line: 147, baseType: !135, size: 32, offset: 352)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2864, file: !1976, line: 148, baseType: !135, size: 32, offset: 384)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2864, file: !1976, line: 149, baseType: !135, size: 32, offset: 416)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2864, file: !1976, line: 150, baseType: !135, size: 32, offset: 448)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2864, file: !1976, line: 151, baseType: !135, size: 32, offset: 480)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2864, file: !1976, line: 152, baseType: !1469, size: 64, offset: 512)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2737, file: !1976, line: 411, baseType: !135, size: 32, offset: 3200)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2737, file: !1976, line: 411, baseType: !135, size: 32, offset: 3232)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2737, file: !1976, line: 411, baseType: !135, size: 32, offset: 3264)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2737, file: !1976, line: 412, baseType: !1344, size: 32, offset: 3296)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2737, file: !1976, line: 413, baseType: !135, size: 32, offset: 3328)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2737, file: !1976, line: 413, baseType: !135, size: 32, offset: 3360)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2737, file: !1976, line: 415, baseType: !135, size: 32, offset: 3392)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2737, file: !1976, line: 415, baseType: !135, size: 32, offset: 3424)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2737, file: !1976, line: 416, baseType: !1373, size: 16, offset: 3456)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2737, file: !1976, line: 416, baseType: !1373, size: 16, offset: 3472)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2737, file: !1976, line: 418, baseType: !1344, size: 32, offset: 3488)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2737, file: !1976, line: 418, baseType: !1344, size: 32, offset: 3520)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2737, file: !1976, line: 421, baseType: !1344, size: 32, offset: 3552)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2737, file: !1976, line: 421, baseType: !1344, size: 32, offset: 3584)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2737, file: !1976, line: 421, baseType: !1344, size: 32, offset: 3616)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2737, file: !1976, line: 425, baseType: !1373, size: 16, offset: 3648)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2737, file: !1976, line: 425, baseType: !1373, size: 16, offset: 3664)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2737, file: !1976, line: 425, baseType: !1373, size: 16, offset: 3680)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2737, file: !1976, line: 426, baseType: !1373, size: 16, offset: 3696)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2737, file: !1976, line: 428, baseType: !1373, size: 16, offset: 3712)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2737, file: !1976, line: 428, baseType: !1373, size: 16, offset: 3728)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2737, file: !1976, line: 431, baseType: !135, size: 32, offset: 3744)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2737, file: !1976, line: 433, baseType: !1373, size: 16, offset: 3776)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2737, file: !1976, line: 435, baseType: !1373, size: 16, offset: 3792)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2737, file: !1976, line: 437, baseType: !1373, size: 16, offset: 3808)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2737, file: !1976, line: 439, baseType: !1373, size: 16, offset: 3824)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2737, file: !1976, line: 441, baseType: !1373, size: 16, offset: 3840)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2737, file: !1976, line: 443, baseType: !1373, size: 16, offset: 3856)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2737, file: !1976, line: 449, baseType: !135, size: 32, offset: 3872)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2737, file: !1976, line: 453, baseType: !135, size: 32, offset: 3904)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2737, file: !1976, line: 458, baseType: !1373, size: 16, offset: 3936)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2737, file: !1976, line: 462, baseType: !1373, size: 16, offset: 3952)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2737, file: !1976, line: 467, baseType: !135, size: 32, offset: 3968)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2737, file: !1976, line: 467, baseType: !135, size: 32, offset: 4000)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2737, file: !1976, line: 469, baseType: !1373, size: 16, offset: 4032)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2737, file: !1976, line: 469, baseType: !1373, size: 16, offset: 4048)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2737, file: !1976, line: 469, baseType: !1373, size: 16, offset: 4064)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2737, file: !1976, line: 469, baseType: !1373, size: 16, offset: 4080)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2737, file: !1976, line: 474, baseType: !1373, size: 16, offset: 4096)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2737, file: !1976, line: 475, baseType: !1365, size: 8, offset: 4112)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2737, file: !1976, line: 476, baseType: !1365, size: 8, offset: 4120)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2737, file: !1976, line: 481, baseType: !135, size: 32, offset: 4128)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2737, file: !1976, line: 486, baseType: !135, size: 32, offset: 4160)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2737, file: !1976, line: 491, baseType: !135, size: 32, offset: 4192)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2737, file: !1976, line: 496, baseType: !1373, size: 16, offset: 4224)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2737, file: !1976, line: 498, baseType: !1373, size: 16, offset: 4240)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2737, file: !1976, line: 501, baseType: !1373, size: 16, offset: 4256)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2737, file: !1976, line: 502, baseType: !1373, size: 16, offset: 4272)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2737, file: !1976, line: 508, baseType: !1373, size: 16, offset: 4288)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2737, file: !1976, line: 513, baseType: !1373, size: 16, offset: 4304)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2737, file: !1976, line: 515, baseType: !1373, size: 16, offset: 4320)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2737, file: !1976, line: 515, baseType: !1373, size: 16, offset: 4336)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2737, file: !1976, line: 519, baseType: !2041, size: 128, offset: 4352)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2737, file: !1976, line: 519, baseType: !2041, size: 128, offset: 4480)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2737, file: !1976, line: 520, baseType: !2938, size: 128, offset: 4608)
!2938 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !2042, line: 89, baseType: !2939)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !2042, line: 86, size: 128, elements: !2940)
!2940 = !{!2941, !2942, !2943, !2944}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2939, file: !2042, line: 87, baseType: !135, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2939, file: !2042, line: 87, baseType: !135, size: 32, offset: 32)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2939, file: !2042, line: 88, baseType: !135, size: 32, offset: 64)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2939, file: !2042, line: 88, baseType: !135, size: 32, offset: 96)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2737, file: !1976, line: 523, baseType: !1490, size: 128, offset: 4736)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2737, file: !1976, line: 524, baseType: !1373, size: 16, offset: 4864)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2737, file: !1976, line: 527, baseType: !1373, size: 16, offset: 4880)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2737, file: !1976, line: 532, baseType: !1344, size: 32, offset: 4896)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2737, file: !1976, line: 532, baseType: !1344, size: 32, offset: 4928)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2737, file: !1976, line: 534, baseType: !1344, size: 32, offset: 4960)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2737, file: !1976, line: 538, baseType: !1344, size: 32, offset: 4992)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2737, file: !1976, line: 542, baseType: !135, size: 32, offset: 5024)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2737, file: !1976, line: 545, baseType: !1344, size: 32, offset: 5056)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2737, file: !1976, line: 545, baseType: !1344, size: 32, offset: 5088)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2737, file: !1976, line: 545, baseType: !1344, size: 32, offset: 5120)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2737, file: !1976, line: 548, baseType: !1344, size: 32, offset: 5152)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2737, file: !1976, line: 551, baseType: !1373, size: 16, offset: 5184)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2737, file: !1976, line: 551, baseType: !1373, size: 16, offset: 5200)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2737, file: !1976, line: 551, baseType: !1373, size: 16, offset: 5216)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2737, file: !1976, line: 551, baseType: !1373, size: 16, offset: 5232)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2737, file: !1976, line: 552, baseType: !1373, size: 16, offset: 5248)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2737, file: !1976, line: 552, baseType: !1373, size: 16, offset: 5264)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2737, file: !1976, line: 553, baseType: !1344, size: 32, offset: 5280)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2737, file: !1976, line: 553, baseType: !1344, size: 32, offset: 5312)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2737, file: !1976, line: 554, baseType: !1373, size: 16, offset: 5344)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2737, file: !1976, line: 554, baseType: !1373, size: 16, offset: 5360)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2737, file: !1976, line: 555, baseType: !1344, size: 32, offset: 5376)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2737, file: !1976, line: 555, baseType: !1344, size: 32, offset: 5408)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2737, file: !1976, line: 558, baseType: !1452, size: 8192, offset: 5440)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2737, file: !1976, line: 561, baseType: !135, size: 32, offset: 13632)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2737, file: !1976, line: 562, baseType: !1373, size: 16, offset: 13664)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2737, file: !1976, line: 562, baseType: !1373, size: 16, offset: 13680)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2737, file: !1976, line: 565, baseType: !2142, size: 6144, offset: 13696)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2737, file: !1976, line: 568, baseType: !1679, size: 128, offset: 19840)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2737, file: !1976, line: 569, baseType: !1679, size: 128, offset: 19968)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2737, file: !1976, line: 572, baseType: !1365, size: 8, offset: 20096)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2737, file: !1976, line: 573, baseType: !1365, size: 8, offset: 20104)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2737, file: !1976, line: 574, baseType: !1365, size: 8, offset: 20112)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2737, file: !1976, line: 575, baseType: !2587, size: 40, offset: 20120)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2737, file: !1976, line: 578, baseType: !135, size: 32, offset: 20160)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2737, file: !1976, line: 579, baseType: !1373, size: 16, offset: 20192)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2737, file: !1976, line: 580, baseType: !1373, size: 16, offset: 20208)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2737, file: !1976, line: 581, baseType: !1344, size: 32, offset: 20224)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2737, file: !1976, line: 582, baseType: !1344, size: 32, offset: 20256)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2737, file: !1976, line: 585, baseType: !1373, size: 16, offset: 20288)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2737, file: !1976, line: 585, baseType: !1373, size: 16, offset: 20304)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2737, file: !1976, line: 586, baseType: !1344, size: 32, offset: 20320)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2737, file: !1976, line: 589, baseType: !1373, size: 16, offset: 20352)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2737, file: !1976, line: 589, baseType: !1373, size: 16, offset: 20368)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2737, file: !1976, line: 590, baseType: !135, size: 32, offset: 20384)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2737, file: !1976, line: 593, baseType: !1373, size: 16, offset: 20416)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2737, file: !1976, line: 593, baseType: !1373, size: 16, offset: 20432)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2737, file: !1976, line: 594, baseType: !1373, size: 16, offset: 20448)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2737, file: !1976, line: 594, baseType: !1373, size: 16, offset: 20464)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2737, file: !1976, line: 595, baseType: !1344, size: 32, offset: 20480)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2737, file: !1976, line: 596, baseType: !1344, size: 32, offset: 20512)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2737, file: !1976, line: 597, baseType: !2998, size: 64, offset: 20544)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 64)
!2999 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !3000, line: 44, flags: DIFlagFwdDecl)
!3000 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2737, file: !1976, line: 600, baseType: !135, size: 32, offset: 20608)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2737, file: !1976, line: 601, baseType: !1344, size: 32, offset: 20640)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2737, file: !1976, line: 604, baseType: !1545, size: 256, offset: 20672)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2737, file: !1976, line: 607, baseType: !3005, size: 10880, offset: 20928)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1976, line: 364, size: 10880, elements: !3006)
!3006 = !{!3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !3005, file: !1976, line: 365, baseType: !2740, size: 1984)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !3005, file: !1976, line: 367, baseType: !1452, size: 8192, offset: 1984)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3005, file: !1976, line: 369, baseType: !1373, size: 16, offset: 10176)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3005, file: !1976, line: 369, baseType: !1373, size: 16, offset: 10192)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !3005, file: !1976, line: 370, baseType: !1373, size: 16, offset: 10208)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3005, file: !1976, line: 370, baseType: !1373, size: 16, offset: 10224)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !3005, file: !1976, line: 372, baseType: !1344, size: 32, offset: 10240)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3005, file: !1976, line: 373, baseType: !1344, size: 32, offset: 10272)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !3005, file: !1976, line: 375, baseType: !2499, size: 24, offset: 10304)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !3005, file: !1976, line: 376, baseType: !1365, size: 8, offset: 10328)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !3005, file: !1976, line: 378, baseType: !1365, size: 8, offset: 10336)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3005, file: !1976, line: 379, baseType: !2499, size: 24, offset: 10344)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !3005, file: !1976, line: 381, baseType: !1480, size: 512, offset: 10368)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2737, file: !1976, line: 609, baseType: !135, size: 32, offset: 31808)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2737, file: !1976, line: 610, baseType: !135, size: 32, offset: 31840)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1975, file: !1976, line: 1252, baseType: !3023, size: 256, offset: 34112)
!3023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1976, line: 158, size: 256, elements: !3024)
!3024 = !{!3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !3023, file: !1976, line: 159, baseType: !135, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !3023, file: !1976, line: 160, baseType: !1344, size: 32, offset: 32)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !3023, file: !1976, line: 161, baseType: !1344, size: 32, offset: 64)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !3023, file: !1976, line: 162, baseType: !1344, size: 32, offset: 96)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !3023, file: !1976, line: 163, baseType: !135, size: 32, offset: 128)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3023, file: !1976, line: 164, baseType: !1373, size: 16, offset: 160)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3023, file: !1976, line: 165, baseType: !1373, size: 16, offset: 176)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !3023, file: !1976, line: 166, baseType: !1344, size: 32, offset: 192)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3023, file: !1976, line: 167, baseType: !1344, size: 32, offset: 224)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1975, file: !1976, line: 1254, baseType: !1490, size: 128, offset: 34368)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1975, file: !1976, line: 1255, baseType: !1490, size: 128, offset: 34496)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1975, file: !1976, line: 1257, baseType: !1343, size: 64, offset: 34624)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1975, file: !1976, line: 1258, baseType: !1343, size: 64, offset: 34688)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1975, file: !1976, line: 1259, baseType: !1343, size: 64, offset: 34752)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1975, file: !1976, line: 1260, baseType: !1343, size: 64, offset: 34816)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1975, file: !1976, line: 1262, baseType: !1343, size: 64, offset: 34880)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1975, file: !1976, line: 1265, baseType: !3042, size: 64, offset: 34944)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1976, line: 1265, flags: DIFlagFwdDecl)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1975, file: !1976, line: 1266, baseType: !1373, size: 16, offset: 35008)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1975, file: !1976, line: 1267, baseType: !1373, size: 16, offset: 35024)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1975, file: !1976, line: 1270, baseType: !135, size: 32, offset: 35040)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1975, file: !1976, line: 1271, baseType: !1490, size: 128, offset: 35072)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1975, file: !1976, line: 1274, baseType: !3049, size: 128, offset: 35200)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1976, line: 650, size: 128, elements: !3050)
!3050 = !{!3051, !3052, !3053, !3054, !3055}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3049, file: !1976, line: 651, baseType: !1375, size: 96)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3049, file: !1976, line: 652, baseType: !1365, size: 8, offset: 96)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3049, file: !1976, line: 652, baseType: !1365, size: 8, offset: 104)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3049, file: !1976, line: 652, baseType: !1365, size: 8, offset: 112)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !3049, file: !1976, line: 652, baseType: !1365, size: 8, offset: 120)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1975, file: !1976, line: 1275, baseType: !3057, size: 1472, offset: 35328)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1976, line: 676, size: 1472, elements: !3058)
!3058 = !{!3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3071, !3081, !3082, !3083, !3084, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !3057, file: !1976, line: 679, baseType: !3049, size: 128)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !3057, file: !1976, line: 680, baseType: !1373, size: 16, offset: 128)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !3057, file: !1976, line: 680, baseType: !1373, size: 16, offset: 144)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !3057, file: !1976, line: 680, baseType: !1373, size: 16, offset: 160)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !3057, file: !1976, line: 680, baseType: !1373, size: 16, offset: 176)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3057, file: !1976, line: 681, baseType: !1373, size: 16, offset: 192)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !3057, file: !1976, line: 681, baseType: !1373, size: 16, offset: 208)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !3057, file: !1976, line: 681, baseType: !1373, size: 16, offset: 224)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !3057, file: !1976, line: 681, baseType: !1373, size: 16, offset: 240)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !3057, file: !1976, line: 682, baseType: !1373, size: 16, offset: 256)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !3057, file: !1976, line: 682, baseType: !3070, size: 48, offset: 272)
!3070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1373, size: 48, elements: !1376)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !3057, file: !1976, line: 685, baseType: !3072, size: 192, offset: 320)
!3072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1976, line: 633, size: 192, elements: !3073)
!3073 = !{!3074, !3075, !3076, !3077, !3078, !3079, !3080}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !3072, file: !1976, line: 634, baseType: !1373, size: 16)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3072, file: !1976, line: 634, baseType: !1373, size: 16, offset: 16)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !3072, file: !1976, line: 635, baseType: !1373, size: 16, offset: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !3072, file: !1976, line: 635, baseType: !1373, size: 16, offset: 48)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !3072, file: !1976, line: 636, baseType: !1344, size: 32, offset: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3072, file: !1976, line: 636, baseType: !1344, size: 32, offset: 96)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !3072, file: !1976, line: 637, baseType: !2998, size: 64, offset: 128)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !3057, file: !1976, line: 686, baseType: !1373, size: 16, offset: 512)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !3057, file: !1976, line: 686, baseType: !1373, size: 16, offset: 528)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !3057, file: !1976, line: 687, baseType: !1344, size: 32, offset: 544)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !3057, file: !1976, line: 688, baseType: !3085, size: 448, offset: 576)
!3085 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1976, line: 674, baseType: !3086)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1976, line: 659, size: 448, elements: !3087)
!3087 = !{!3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !3086, file: !1976, line: 660, baseType: !1344, size: 32)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !3086, file: !1976, line: 661, baseType: !1344, size: 32, offset: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !3086, file: !1976, line: 662, baseType: !1344, size: 32, offset: 64)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !3086, file: !1976, line: 663, baseType: !1344, size: 32, offset: 96)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !3086, file: !1976, line: 664, baseType: !1344, size: 32, offset: 128)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !3086, file: !1976, line: 665, baseType: !1344, size: 32, offset: 160)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !3086, file: !1976, line: 666, baseType: !1344, size: 32, offset: 192)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !3086, file: !1976, line: 667, baseType: !1344, size: 32, offset: 224)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !3086, file: !1976, line: 668, baseType: !1344, size: 32, offset: 256)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !3086, file: !1976, line: 669, baseType: !1344, size: 32, offset: 288)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !3086, file: !1976, line: 670, baseType: !135, size: 32, offset: 320)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !3086, file: !1976, line: 671, baseType: !1344, size: 32, offset: 352)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !3086, file: !1976, line: 672, baseType: !1344, size: 32, offset: 384)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3086, file: !1976, line: 673, baseType: !1373, size: 16, offset: 416)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3086, file: !1976, line: 673, baseType: !1373, size: 16, offset: 432)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3057, file: !1976, line: 692, baseType: !1344, size: 32, offset: 1024)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !3057, file: !1976, line: 697, baseType: !1344, size: 32, offset: 1056)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3057, file: !1976, line: 703, baseType: !135, size: 32, offset: 1088)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3057, file: !1976, line: 704, baseType: !1373, size: 16, offset: 1120)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !3057, file: !1976, line: 704, baseType: !1373, size: 16, offset: 1136)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !3057, file: !1976, line: 705, baseType: !1373, size: 16, offset: 1152)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !3057, file: !1976, line: 706, baseType: !1373, size: 16, offset: 1168)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !3057, file: !1976, line: 707, baseType: !1373, size: 16, offset: 1184)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !3057, file: !1976, line: 708, baseType: !1373, size: 16, offset: 1200)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !3057, file: !1976, line: 709, baseType: !1373, size: 16, offset: 1216)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !3057, file: !1976, line: 709, baseType: !1373, size: 16, offset: 1232)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !3057, file: !1976, line: 709, baseType: !1373, size: 16, offset: 1248)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !3057, file: !1976, line: 709, baseType: !1373, size: 16, offset: 1264)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !3057, file: !1976, line: 710, baseType: !1373, size: 16, offset: 1280)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !3057, file: !1976, line: 711, baseType: !1373, size: 16, offset: 1296)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !3057, file: !1976, line: 712, baseType: !1344, size: 32, offset: 1312)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !3057, file: !1976, line: 713, baseType: !1344, size: 32, offset: 1344)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !3057, file: !1976, line: 713, baseType: !1344, size: 32, offset: 1376)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !3057, file: !1976, line: 713, baseType: !1344, size: 32, offset: 1408)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3057, file: !1976, line: 713, baseType: !1344, size: 32, offset: 1440)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1975, file: !1976, line: 1278, baseType: !3124, size: 64, offset: 36800)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1976, line: 1197, size: 64, elements: !3125)
!3125 = !{!3126, !3127, !3128, !3129}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !3124, file: !1976, line: 1199, baseType: !1344, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !3124, file: !1976, line: 1200, baseType: !1365, size: 8, offset: 32)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !3124, file: !1976, line: 1201, baseType: !1365, size: 8, offset: 40)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3124, file: !1976, line: 1202, baseType: !1373, size: 16, offset: 48)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1975, file: !1976, line: 1281, baseType: !1809, size: 64, offset: 36864)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1975, file: !1976, line: 1284, baseType: !3132, size: 192, offset: 36928)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1976, line: 1208, size: 192, elements: !3133)
!3133 = !{!3134, !3135, !3136, !3137}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3132, file: !1976, line: 1209, baseType: !1375, size: 96)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3132, file: !1976, line: 1210, baseType: !135, size: 32, offset: 96)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !3132, file: !1976, line: 1210, baseType: !135, size: 32, offset: 128)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3132, file: !1976, line: 1210, baseType: !135, size: 32, offset: 160)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1975, file: !1976, line: 1287, baseType: !2195, size: 64, offset: 37120)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1975, file: !1976, line: 1289, baseType: !1945, size: 64, offset: 37184)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1975, file: !1976, line: 1290, baseType: !1945, size: 64, offset: 37248)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1975, file: !1976, line: 1293, baseType: !2760, size: 1280, offset: 37312)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1975, file: !1976, line: 1294, baseType: !2810, size: 512, offset: 38592)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1975, file: !1976, line: 1295, baseType: !2186, size: 512, offset: 39104)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1975, file: !1976, line: 1298, baseType: !3145, size: 64, offset: 39616)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 64)
!3146 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1976, line: 1298, flags: DIFlagFwdDecl)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1971, file: !1970, line: 53, baseType: !135, size: 32, offset: 64)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1971, file: !1970, line: 54, baseType: !135, size: 32, offset: 96)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1971, file: !1970, line: 55, baseType: !135, size: 32, offset: 128)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1971, file: !1970, line: 55, baseType: !135, size: 32, offset: 160)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1971, file: !1970, line: 56, baseType: !1365, size: 8, offset: 192)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1971, file: !1970, line: 56, baseType: !1365, size: 8, offset: 200)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1971, file: !1970, line: 57, baseType: !1365, size: 8, offset: 208)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1971, file: !1970, line: 57, baseType: !1365, size: 8, offset: 216)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1971, file: !1970, line: 59, baseType: !1373, size: 16, offset: 224)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1971, file: !1970, line: 59, baseType: !1373, size: 16, offset: 240)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1971, file: !1970, line: 59, baseType: !1373, size: 16, offset: 256)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1971, file: !1970, line: 61, baseType: !1373, size: 16, offset: 272)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1971, file: !1970, line: 63, baseType: !135, size: 32, offset: 288)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !1731, file: !379, line: 293, baseType: !1490, size: 128, offset: 11200)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !1731, file: !379, line: 294, baseType: !3162, size: 64, offset: 11328)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !379, line: 113, baseType: !3164)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !379, line: 108, size: 256, elements: !3165)
!3165 = !{!3166, !3168, !3169, !3170, !3171}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3164, file: !379, line: 109, baseType: !3167, size: 64)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3164, file: !379, line: 109, baseType: !3167, size: 64, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3164, file: !379, line: 110, baseType: !1730, size: 64, offset: 128)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3164, file: !379, line: 111, baseType: !135, size: 32, offset: 192)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !3164, file: !379, line: 112, baseType: !1344, size: 32, offset: 224)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1723, file: !1689, line: 61, baseType: !3173, size: 64, offset: 128)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !1689, line: 202, size: 3328, elements: !3175)
!3175 = !{!3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3258, !3259, !3289, !3309, !3317, !3318}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3174, file: !1689, line: 203, baseType: !1433, size: 960)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3174, file: !1689, line: 204, baseType: !1501, size: 64, offset: 960)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !3174, file: !1689, line: 206, baseType: !1344, size: 32, offset: 1024)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !3174, file: !1689, line: 206, baseType: !1344, size: 32, offset: 1056)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !3174, file: !1689, line: 207, baseType: !1344, size: 32, offset: 1088)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !3174, file: !1689, line: 207, baseType: !1344, size: 32, offset: 1120)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !3174, file: !1689, line: 207, baseType: !1344, size: 32, offset: 1152)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !3174, file: !1689, line: 207, baseType: !1344, size: 32, offset: 1184)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !3174, file: !1689, line: 207, baseType: !1344, size: 32, offset: 1216)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !3174, file: !1689, line: 207, baseType: !1344, size: 32, offset: 1248)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !3174, file: !1689, line: 208, baseType: !1344, size: 32, offset: 1280)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3174, file: !1689, line: 208, baseType: !1344, size: 32, offset: 1312)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !3174, file: !1689, line: 211, baseType: !1344, size: 32, offset: 1344)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !3174, file: !1689, line: 211, baseType: !1344, size: 32, offset: 1376)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !3174, file: !1689, line: 211, baseType: !1344, size: 32, offset: 1408)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !3174, file: !1689, line: 211, baseType: !1344, size: 32, offset: 1440)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !3174, file: !1689, line: 211, baseType: !1344, size: 32, offset: 1472)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !3174, file: !1689, line: 214, baseType: !1344, size: 32, offset: 1504)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !3174, file: !1689, line: 214, baseType: !1344, size: 32, offset: 1536)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !3174, file: !1689, line: 217, baseType: !1344, size: 32, offset: 1568)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !3174, file: !1689, line: 218, baseType: !1344, size: 32, offset: 1600)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !3174, file: !1689, line: 219, baseType: !1344, size: 32, offset: 1632)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !3174, file: !1689, line: 220, baseType: !1344, size: 32, offset: 1664)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !3174, file: !1689, line: 221, baseType: !1344, size: 32, offset: 1696)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !3174, file: !1689, line: 222, baseType: !1373, size: 16, offset: 1728)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !3174, file: !1689, line: 222, baseType: !1373, size: 16, offset: 1744)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !3174, file: !1689, line: 224, baseType: !1373, size: 16, offset: 1760)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !3174, file: !1689, line: 224, baseType: !1373, size: 16, offset: 1776)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !3174, file: !1689, line: 227, baseType: !1373, size: 16, offset: 1792)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !3174, file: !1689, line: 227, baseType: !1373, size: 16, offset: 1808)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !3174, file: !1689, line: 229, baseType: !1373, size: 16, offset: 1824)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3174, file: !1689, line: 229, baseType: !1373, size: 16, offset: 1840)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3174, file: !1689, line: 230, baseType: !1373, size: 16, offset: 1856)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !3174, file: !1689, line: 230, baseType: !1373, size: 16, offset: 1872)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !3174, file: !1689, line: 232, baseType: !1344, size: 32, offset: 1888)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !3174, file: !1689, line: 232, baseType: !1344, size: 32, offset: 1920)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !3174, file: !1689, line: 232, baseType: !1344, size: 32, offset: 1952)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !3174, file: !1689, line: 232, baseType: !1344, size: 32, offset: 1984)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !3174, file: !1689, line: 233, baseType: !135, size: 32, offset: 2016)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !3174, file: !1689, line: 234, baseType: !135, size: 32, offset: 2048)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !3174, file: !1689, line: 235, baseType: !1373, size: 16, offset: 2080)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !3174, file: !1689, line: 235, baseType: !1373, size: 16, offset: 2096)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !3174, file: !1689, line: 236, baseType: !1373, size: 16, offset: 2112)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !3174, file: !1689, line: 239, baseType: !1373, size: 16, offset: 2128)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3174, file: !1689, line: 240, baseType: !135, size: 32, offset: 2144)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !3174, file: !1689, line: 241, baseType: !135, size: 32, offset: 2176)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3174, file: !1689, line: 241, baseType: !135, size: 32, offset: 2208)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !3174, file: !1689, line: 241, baseType: !135, size: 32, offset: 2240)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !3174, file: !1689, line: 243, baseType: !1344, size: 32, offset: 2272)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !3174, file: !1689, line: 243, baseType: !1344, size: 32, offset: 2304)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3174, file: !1689, line: 244, baseType: !1344, size: 32, offset: 2336)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !3174, file: !1689, line: 246, baseType: !1971, size: 320, offset: 2368)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !3174, file: !1689, line: 248, baseType: !2010, size: 64, offset: 2688)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3174, file: !1689, line: 249, baseType: !1515, size: 64, offset: 2752)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3174, file: !1689, line: 250, baseType: !2363, size: 64, offset: 2816)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !3174, file: !1689, line: 251, baseType: !1687, size: 64, offset: 2880)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !3174, file: !1689, line: 252, baseType: !3233, size: 64, offset: 2944)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !1689, line: 122, size: 1600, elements: !3235)
!3235 = !{!3236, !3237, !3238, !3242, !3243, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3234, file: !1689, line: 123, baseType: !1730, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3234, file: !1689, line: 124, baseType: !2363, size: 64, offset: 64)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !3234, file: !1689, line: 125, baseType: !3239, size: 384, offset: 128)
!3239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3240, size: 384, elements: !2757)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !2187, line: 136, flags: DIFlagFwdDecl)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3234, file: !1689, line: 126, baseType: !1854, size: 512, offset: 512)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !3234, file: !1689, line: 127, baseType: !3244, size: 288, offset: 1024)
!3244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1344, size: 288, elements: !3245)
!3245 = !{!1377, !1377}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3234, file: !1689, line: 128, baseType: !1373, size: 16, offset: 1312)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !3234, file: !1689, line: 128, baseType: !1373, size: 16, offset: 1328)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !3234, file: !1689, line: 129, baseType: !1344, size: 32, offset: 1344)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !3234, file: !1689, line: 129, baseType: !1344, size: 32, offset: 1376)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !3234, file: !1689, line: 130, baseType: !1344, size: 32, offset: 1408)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !3234, file: !1689, line: 131, baseType: !7, size: 32, offset: 1440)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !3234, file: !1689, line: 132, baseType: !1373, size: 16, offset: 1472)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3234, file: !1689, line: 132, baseType: !1373, size: 16, offset: 1488)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3234, file: !1689, line: 133, baseType: !135, size: 32, offset: 1504)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !3234, file: !1689, line: 133, baseType: !135, size: 32, offset: 1536)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !3234, file: !1689, line: 134, baseType: !1373, size: 16, offset: 1568)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !3234, file: !1689, line: 134, baseType: !1373, size: 16, offset: 1584)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !3174, file: !1689, line: 253, baseType: !2399, size: 64, offset: 3008)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !3174, file: !1689, line: 254, baseType: !3260, size: 64, offset: 3072)
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !1689, line: 137, size: 832, elements: !3262)
!3262 = !{!3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3261, file: !1689, line: 138, baseType: !1373, size: 16)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !3261, file: !1689, line: 140, baseType: !1373, size: 16, offset: 16)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !3261, file: !1689, line: 141, baseType: !1344, size: 32, offset: 32)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3261, file: !1689, line: 142, baseType: !1344, size: 32, offset: 64)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3261, file: !1689, line: 143, baseType: !1373, size: 16, offset: 96)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !3261, file: !1689, line: 144, baseType: !1373, size: 16, offset: 112)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !3261, file: !1689, line: 145, baseType: !135, size: 32, offset: 128)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !3261, file: !1689, line: 147, baseType: !135, size: 32, offset: 160)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3261, file: !1689, line: 149, baseType: !1730, size: 64, offset: 192)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !3261, file: !1689, line: 150, baseType: !135, size: 32, offset: 256)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !3261, file: !1689, line: 151, baseType: !1373, size: 16, offset: 288)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !3261, file: !1689, line: 152, baseType: !1373, size: 16, offset: 304)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !3261, file: !1689, line: 154, baseType: !1343, size: 64, offset: 320)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !3261, file: !1689, line: 155, baseType: !3277, size: 64, offset: 384)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !3261, file: !1689, line: 157, baseType: !1344, size: 32, offset: 448)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !3261, file: !1689, line: 158, baseType: !1373, size: 16, offset: 480)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !3261, file: !1689, line: 159, baseType: !1373, size: 16, offset: 496)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !3261, file: !1689, line: 160, baseType: !1373, size: 16, offset: 512)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !3261, file: !1689, line: 161, baseType: !3070, size: 48, offset: 528)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !3261, file: !1689, line: 162, baseType: !1344, size: 32, offset: 576)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !3261, file: !1689, line: 164, baseType: !1344, size: 32, offset: 608)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !3261, file: !1689, line: 164, baseType: !1344, size: 32, offset: 640)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !3261, file: !1689, line: 164, baseType: !1344, size: 32, offset: 672)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !3261, file: !1689, line: 165, baseType: !1687, size: 64, offset: 704)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !3261, file: !1689, line: 167, baseType: !2770, size: 64, offset: 768)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !3174, file: !1689, line: 255, baseType: !3290, size: 64, offset: 3136)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !1689, line: 170, size: 8704, elements: !3292)
!3292 = !{!3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !3291, file: !1689, line: 171, baseType: !2561, size: 96)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !3291, file: !1689, line: 172, baseType: !135, size: 32, offset: 96)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !3291, file: !1689, line: 173, baseType: !1373, size: 16, offset: 128)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3291, file: !1689, line: 174, baseType: !1373, size: 16, offset: 144)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !3291, file: !1689, line: 175, baseType: !1373, size: 16, offset: 160)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !3291, file: !1689, line: 176, baseType: !1373, size: 16, offset: 176)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !3291, file: !1689, line: 177, baseType: !1373, size: 16, offset: 192)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3291, file: !1689, line: 178, baseType: !1373, size: 16, offset: 208)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !3291, file: !1689, line: 179, baseType: !135, size: 32, offset: 224)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3291, file: !1689, line: 181, baseType: !1730, size: 64, offset: 256)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !3291, file: !1689, line: 182, baseType: !1344, size: 32, offset: 320)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !3291, file: !1689, line: 183, baseType: !135, size: 32, offset: 352)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !3291, file: !1689, line: 184, baseType: !1452, size: 8192, offset: 384)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !3291, file: !1689, line: 187, baseType: !3277, size: 64, offset: 8576)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !3291, file: !1689, line: 188, baseType: !135, size: 32, offset: 8640)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3291, file: !1689, line: 189, baseType: !135, size: 32, offset: 8672)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !3174, file: !1689, line: 256, baseType: !3310, size: 64, offset: 3200)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !1689, line: 193, size: 640, elements: !3312)
!3312 = !{!3313, !3314, !3315, !3316}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3311, file: !1689, line: 194, baseType: !1730, size: 64)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !3311, file: !1689, line: 195, baseType: !1480, size: 512, offset: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3311, file: !1689, line: 197, baseType: !135, size: 32, offset: 576)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3311, file: !1689, line: 198, baseType: !135, size: 32, offset: 608)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !3174, file: !1689, line: 258, baseType: !1365, size: 8, offset: 3264)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3174, file: !1689, line: 259, baseType: !2427, size: 56, offset: 3272)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1723, file: !1689, line: 62, baseType: !1480, size: 512, offset: 192)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !1723, file: !1689, line: 64, baseType: !1365, size: 8, offset: 704)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !1723, file: !1689, line: 64, baseType: !1365, size: 8, offset: 712)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !1723, file: !1689, line: 64, baseType: !1365, size: 8, offset: 720)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1723, file: !1689, line: 64, baseType: !1365, size: 8, offset: 728)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !1723, file: !1689, line: 65, baseType: !1375, size: 96, offset: 736)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1723, file: !1689, line: 65, baseType: !1375, size: 96, offset: 832)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1723, file: !1689, line: 65, baseType: !1344, size: 32, offset: 928)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1723, file: !1689, line: 67, baseType: !1373, size: 16, offset: 960)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1723, file: !1689, line: 67, baseType: !1373, size: 16, offset: 976)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !1723, file: !1689, line: 67, baseType: !1373, size: 16, offset: 992)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !1723, file: !1689, line: 67, baseType: !1373, size: 16, offset: 1008)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !1723, file: !1689, line: 68, baseType: !1373, size: 16, offset: 1024)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !1723, file: !1689, line: 68, baseType: !1373, size: 16, offset: 1040)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !1723, file: !1689, line: 69, baseType: !1365, size: 8, offset: 1056)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1723, file: !1689, line: 69, baseType: !2427, size: 56, offset: 1064)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1723, file: !1689, line: 70, baseType: !1344, size: 32, offset: 1120)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1723, file: !1689, line: 70, baseType: !1344, size: 32, offset: 1152)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1723, file: !1689, line: 70, baseType: !1344, size: 32, offset: 1184)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1723, file: !1689, line: 70, baseType: !1344, size: 32, offset: 1216)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !1723, file: !1689, line: 71, baseType: !1344, size: 32, offset: 1248)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1723, file: !1689, line: 71, baseType: !1344, size: 32, offset: 1280)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !1723, file: !1689, line: 74, baseType: !1344, size: 32, offset: 1312)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !1723, file: !1689, line: 74, baseType: !1344, size: 32, offset: 1344)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !1723, file: !1689, line: 77, baseType: !1344, size: 32, offset: 1376)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !1723, file: !1689, line: 77, baseType: !1344, size: 32, offset: 1408)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !1723, file: !1689, line: 77, baseType: !1344, size: 32, offset: 1440)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !1723, file: !1689, line: 78, baseType: !1344, size: 32, offset: 1472)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !1723, file: !1689, line: 78, baseType: !1344, size: 32, offset: 1504)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !1723, file: !1689, line: 78, baseType: !1344, size: 32, offset: 1536)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !1723, file: !1689, line: 79, baseType: !1344, size: 32, offset: 1568)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !1723, file: !1689, line: 79, baseType: !1344, size: 32, offset: 1600)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !1723, file: !1689, line: 79, baseType: !1344, size: 32, offset: 1632)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !1723, file: !1689, line: 79, baseType: !1344, size: 32, offset: 1664)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !1723, file: !1689, line: 80, baseType: !1344, size: 32, offset: 1696)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !1723, file: !1689, line: 80, baseType: !1344, size: 32, offset: 1728)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !1723, file: !1689, line: 80, baseType: !1344, size: 32, offset: 1760)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !1723, file: !1689, line: 81, baseType: !1344, size: 32, offset: 1792)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !1723, file: !1689, line: 81, baseType: !1344, size: 32, offset: 1824)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !1723, file: !1689, line: 81, baseType: !1344, size: 32, offset: 1856)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !1723, file: !1689, line: 82, baseType: !1344, size: 32, offset: 1888)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !1723, file: !1689, line: 82, baseType: !1344, size: 32, offset: 1920)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !1723, file: !1689, line: 82, baseType: !1344, size: 32, offset: 1952)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !1723, file: !1689, line: 85, baseType: !1344, size: 32, offset: 1984)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !1723, file: !1689, line: 85, baseType: !1344, size: 32, offset: 2016)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !1723, file: !1689, line: 85, baseType: !1344, size: 32, offset: 2048)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !1723, file: !1689, line: 85, baseType: !1344, size: 32, offset: 2080)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !1723, file: !1689, line: 86, baseType: !1344, size: 32, offset: 2112)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !1723, file: !1689, line: 86, baseType: !1344, size: 32, offset: 2144)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !1723, file: !1689, line: 86, baseType: !1344, size: 32, offset: 2176)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !1723, file: !1689, line: 86, baseType: !1344, size: 32, offset: 2208)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !1723, file: !1689, line: 87, baseType: !1344, size: 32, offset: 2240)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !1723, file: !1689, line: 87, baseType: !1344, size: 32, offset: 2272)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !1723, file: !1689, line: 87, baseType: !1344, size: 32, offset: 2304)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !1723, file: !1689, line: 87, baseType: !1344, size: 32, offset: 2336)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !1723, file: !1689, line: 90, baseType: !1344, size: 32, offset: 2368)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !1723, file: !1689, line: 93, baseType: !1344, size: 32, offset: 2400)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !1723, file: !1689, line: 93, baseType: !1344, size: 32, offset: 2432)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !1723, file: !1689, line: 93, baseType: !1344, size: 32, offset: 2464)
!3378 = !{!3379}
!3379 = !DISubrange(count: 18)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1562, file: !1563, line: 168, baseType: !2010, size: 64, offset: 6144)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1562, file: !1563, line: 169, baseType: !1515, size: 64, offset: 6208)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1562, file: !1563, line: 170, baseType: !1928, size: 64, offset: 6272)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1562, file: !1563, line: 171, baseType: !2399, size: 64, offset: 6336)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !1562, file: !1563, line: 174, baseType: !1344, size: 32, offset: 6400)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !1562, file: !1563, line: 174, baseType: !1344, size: 32, offset: 6432)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !1562, file: !1563, line: 174, baseType: !1344, size: 32, offset: 6464)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !1562, file: !1563, line: 175, baseType: !1344, size: 32, offset: 6496)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !1562, file: !1563, line: 175, baseType: !1344, size: 32, offset: 6528)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !1562, file: !1563, line: 176, baseType: !1373, size: 16, offset: 6560)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1562, file: !1563, line: 176, baseType: !1373, size: 16, offset: 6576)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !1562, file: !1563, line: 179, baseType: !1375, size: 96, offset: 6592)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !1562, file: !1563, line: 179, baseType: !1375, size: 96, offset: 6688)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !1562, file: !1563, line: 180, baseType: !1344, size: 32, offset: 6784)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !1562, file: !1563, line: 180, baseType: !1344, size: 32, offset: 6816)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !1562, file: !1563, line: 180, baseType: !1344, size: 32, offset: 6848)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !1562, file: !1563, line: 181, baseType: !1344, size: 32, offset: 6880)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !1562, file: !1563, line: 181, baseType: !1344, size: 32, offset: 6912)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !1562, file: !1563, line: 182, baseType: !1344, size: 32, offset: 6944)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !1562, file: !1563, line: 182, baseType: !1344, size: 32, offset: 6976)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !1562, file: !1563, line: 183, baseType: !1373, size: 16, offset: 7008)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !1562, file: !1563, line: 183, baseType: !1373, size: 16, offset: 7024)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !1562, file: !1563, line: 185, baseType: !135, size: 32, offset: 7040)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !1562, file: !1563, line: 186, baseType: !1373, size: 16, offset: 7072)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1562, file: !1563, line: 187, baseType: !1373, size: 16, offset: 7088)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !1562, file: !1563, line: 190, baseType: !1679, size: 128, offset: 7104)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !1562, file: !1563, line: 191, baseType: !1373, size: 16, offset: 7232)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !1562, file: !1563, line: 192, baseType: !1373, size: 16, offset: 7248)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !1562, file: !1563, line: 195, baseType: !1373, size: 16, offset: 7264)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !1562, file: !1563, line: 196, baseType: !1373, size: 16, offset: 7280)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !1562, file: !1563, line: 197, baseType: !1373, size: 16, offset: 7296)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1562, file: !1563, line: 198, baseType: !3070, size: 48, offset: 7312)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !1562, file: !1563, line: 200, baseType: !3413, size: 64, offset: 7360)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !1563, line: 86, size: 192, elements: !3415)
!3415 = !{!3416, !3417, !3418, !3419}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !3414, file: !1563, line: 87, baseType: !2363, size: 64)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !3414, file: !1563, line: 88, baseType: !1836, size: 64, offset: 64)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3414, file: !1563, line: 89, baseType: !135, size: 32, offset: 128)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3414, file: !1563, line: 90, baseType: !135, size: 32, offset: 160)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !1562, file: !1563, line: 202, baseType: !1490, size: 128, offset: 7424)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !1430, file: !1429, line: 67, baseType: !3422, size: 64, offset: 1280)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3423, size: 64)
!3423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !2541, line: 154, size: 64, elements: !3424)
!3424 = !{!3425, !3426}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3423, file: !2541, line: 155, baseType: !135, size: 32)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3423, file: !2541, line: 156, baseType: !135, size: 32, offset: 32)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !1430, file: !1429, line: 71, baseType: !3428, size: 64, offset: 1344)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !2541, line: 79, size: 96, elements: !3430)
!3430 = !{!3431, !3432, !3433, !3434, !3435}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !3429, file: !2541, line: 81, baseType: !135, size: 32)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3429, file: !2541, line: 82, baseType: !135, size: 32, offset: 32)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3429, file: !2541, line: 83, baseType: !1373, size: 16, offset: 64)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3429, file: !2541, line: 84, baseType: !1365, size: 8, offset: 80)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3429, file: !2541, line: 84, baseType: !1365, size: 8, offset: 88)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !1430, file: !1429, line: 72, baseType: !3437, size: 64, offset: 1408)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !2541, line: 93, size: 128, elements: !3439)
!3439 = !{!3440, !3441, !3442, !3443, !3444, !3445}
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3438, file: !2541, line: 94, baseType: !2363, size: 64)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3438, file: !2541, line: 95, baseType: !1365, size: 8, offset: 64)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3438, file: !2541, line: 95, baseType: !1365, size: 8, offset: 72)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3438, file: !2541, line: 96, baseType: !1373, size: 16, offset: 80)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3438, file: !2541, line: 96, baseType: !1373, size: 16, offset: 96)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3438, file: !2541, line: 96, baseType: !1373, size: 16, offset: 112)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !1430, file: !1429, line: 73, baseType: !3447, size: 64, offset: 1472)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !2541, line: 88, size: 64, elements: !3449)
!3449 = !{!3450, !3451}
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3448, file: !2541, line: 89, baseType: !7, size: 32)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !3448, file: !2541, line: 90, baseType: !7, size: 32, offset: 32)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !1430, file: !1429, line: 74, baseType: !3453, size: 64, offset: 1536)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !2541, line: 109, size: 96, elements: !3455)
!3455 = !{!3456, !3457}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3454, file: !2541, line: 110, baseType: !1964, size: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3454, file: !2541, line: 111, baseType: !135, size: 32, offset: 64)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !1430, file: !1429, line: 75, baseType: !3459, size: 64, offset: 1600)
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !2541, line: 129, size: 32, elements: !3461)
!3461 = !{!3462, !3463, !3464, !3465}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3460, file: !2541, line: 130, baseType: !1365, size: 8)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3460, file: !2541, line: 130, baseType: !1365, size: 8, offset: 8)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3460, file: !2541, line: 130, baseType: !1365, size: 8, offset: 16)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3460, file: !2541, line: 130, baseType: !1365, size: 8, offset: 24)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !1430, file: !1429, line: 80, baseType: !3467, size: 64, offset: 1664)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !2541, line: 42, size: 160, elements: !3469)
!3469 = !{!3470, !3471, !3472, !3473, !3474, !3475, !3476}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3468, file: !2541, line: 43, baseType: !7, size: 32)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3468, file: !2541, line: 43, baseType: !7, size: 32, offset: 32)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3468, file: !2541, line: 43, baseType: !7, size: 32, offset: 64)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3468, file: !2541, line: 43, baseType: !7, size: 32, offset: 96)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3468, file: !2541, line: 44, baseType: !1373, size: 16, offset: 128)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !3468, file: !2541, line: 45, baseType: !1365, size: 8, offset: 144)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3468, file: !2541, line: 45, baseType: !1365, size: 8, offset: 152)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !1430, file: !1429, line: 81, baseType: !3478, size: 64, offset: 1728)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !2541, line: 160, size: 384, elements: !3480)
!3480 = !{!3481, !3482, !3483, !3484, !3485, !3486, !3487}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3479, file: !2541, line: 161, baseType: !2311, size: 256)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3479, file: !2541, line: 162, baseType: !2363, size: 64, offset: 256)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3479, file: !2541, line: 163, baseType: !1365, size: 8, offset: 320)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3479, file: !2541, line: 163, baseType: !1365, size: 8, offset: 328)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3479, file: !2541, line: 164, baseType: !1373, size: 16, offset: 336)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3479, file: !2541, line: 164, baseType: !1373, size: 16, offset: 352)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !3479, file: !2541, line: 164, baseType: !1373, size: 16, offset: 368)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !1430, file: !1429, line: 82, baseType: !3489, size: 64, offset: 1792)
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 64)
!3490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !1429, line: 136, size: 512, elements: !3491)
!3491 = !{!3492, !3493, !3494, !3496, !3497, !3498, !3499, !3500}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3490, file: !1429, line: 137, baseType: !1343, size: 64)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3490, file: !1429, line: 138, baseType: !2311, size: 256, offset: 64)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3490, file: !1429, line: 139, baseType: !3495, size: 128, offset: 320)
!3495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1680)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3490, file: !1429, line: 140, baseType: !1365, size: 8, offset: 448)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3490, file: !1429, line: 140, baseType: !1365, size: 8, offset: 456)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3490, file: !1429, line: 141, baseType: !1373, size: 16, offset: 464)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3490, file: !1429, line: 141, baseType: !1373, size: 16, offset: 480)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !3490, file: !1429, line: 141, baseType: !1373, size: 16, offset: 496)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !1430, file: !1429, line: 83, baseType: !3502, size: 64, offset: 1856)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !2541, line: 65, size: 160, elements: !3504)
!3504 = !{!3505, !3506, !3507, !3508}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3503, file: !2541, line: 66, baseType: !1375, size: 96)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3503, file: !2541, line: 67, baseType: !3070, size: 48, offset: 96)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3503, file: !2541, line: 68, baseType: !1365, size: 8, offset: 144)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !3503, file: !2541, line: 68, baseType: !1365, size: 8, offset: 152)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !1430, file: !1429, line: 84, baseType: !3510, size: 64, offset: 1920)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !2541, line: 48, size: 96, elements: !3512)
!3512 = !{!3513, !3514, !3515, !3516, !3517}
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3511, file: !2541, line: 49, baseType: !7, size: 32)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3511, file: !2541, line: 49, baseType: !7, size: 32, offset: 32)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !3511, file: !2541, line: 50, baseType: !1365, size: 8, offset: 64)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !3511, file: !2541, line: 50, baseType: !1365, size: 8, offset: 72)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3511, file: !2541, line: 51, baseType: !1373, size: 16, offset: 80)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !1430, file: !1429, line: 85, baseType: !2539, size: 64, offset: 1984)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !1430, file: !1429, line: 89, baseType: !3520, size: 64, offset: 2048)
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !2541, line: 74, size: 32, elements: !3522)
!3522 = !{!3523, !3524, !3525, !3526}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3521, file: !2541, line: 75, baseType: !1365, size: 8)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3521, file: !2541, line: 75, baseType: !1365, size: 8, offset: 8)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3521, file: !2541, line: 75, baseType: !1365, size: 8, offset: 16)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3521, file: !2541, line: 75, baseType: !1365, size: 8, offset: 24)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !1430, file: !1429, line: 90, baseType: !3528, size: 64, offset: 2112)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !1430, file: !1429, line: 93, baseType: !3530, size: 64, offset: 2176)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !3532, line: 54, size: 896, elements: !3533)
!3532 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3533 = !{!3534, !3663, !3664, !3665, !3668, !3669, !3670, !3671, !3674, !3676, !3677, !3678, !3679, !3680, !3681, !3682}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !3531, file: !3532, line: 55, baseType: !3535, size: 64)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !103, line: 186, size: 8064, elements: !3537)
!3537 = !{!3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3550, !3551, !3552, !3553, !3555, !3557, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3619, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3536, file: !103, line: 187, baseType: !135, size: 32)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !3536, file: !103, line: 187, baseType: !135, size: 32, offset: 32)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3536, file: !103, line: 187, baseType: !135, size: 32, offset: 64)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3536, file: !103, line: 187, baseType: !135, size: 32, offset: 96)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !3536, file: !103, line: 188, baseType: !135, size: 32, offset: 128)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !3536, file: !103, line: 188, baseType: !135, size: 32, offset: 160)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !3536, file: !103, line: 188, baseType: !135, size: 32, offset: 192)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !3536, file: !103, line: 193, baseType: !1365, size: 8, offset: 224)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !3536, file: !103, line: 197, baseType: !1365, size: 8, offset: 232)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !3536, file: !103, line: 201, baseType: !3548, size: 64, offset: 256)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !393, line: 71, flags: DIFlagFwdDecl)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !3536, file: !103, line: 201, baseType: !3548, size: 64, offset: 320)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !3536, file: !103, line: 201, baseType: !3548, size: 64, offset: 384)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !3536, file: !103, line: 201, baseType: !3548, size: 64, offset: 448)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !3536, file: !103, line: 208, baseType: !3554, size: 64, offset: 512)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !3536, file: !103, line: 209, baseType: !3556, size: 64, offset: 576)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !3536, file: !103, line: 210, baseType: !3558, size: 64, offset: 640)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !3536, file: !103, line: 213, baseType: !135, size: 32, offset: 704)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !3536, file: !103, line: 214, baseType: !135, size: 32, offset: 736)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !3536, file: !103, line: 215, baseType: !135, size: 32, offset: 768)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !3536, file: !103, line: 218, baseType: !3548, size: 64, offset: 832)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !3536, file: !103, line: 218, baseType: !3548, size: 64, offset: 896)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !3536, file: !103, line: 218, baseType: !3548, size: 64, offset: 960)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !3536, file: !103, line: 220, baseType: !135, size: 32, offset: 1024)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !3536, file: !103, line: 221, baseType: !3567, size: 64, offset: 1088)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !48, line: 190, size: 10496, elements: !3569)
!3569 = !{!3570, !3605, !3606, !3612, !3615, !3616, !3618}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !3568, file: !48, line: 191, baseType: !3571, size: 5120)
!3571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3572, size: 5120, elements: !3603)
!3572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !48, line: 147, size: 320, elements: !3573)
!3573 = !{!3574, !3577, !3579, !3589, !3590}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !3572, file: !48, line: 148, baseType: !3575, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1365)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !3572, file: !48, line: 149, baseType: !3578, size: 32, offset: 64)
!3578 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !48, line: 112, baseType: !47)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !3572, file: !48, line: 150, baseType: !3580, size: 32, offset: 96)
!3580 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !48, line: 142, baseType: !3581)
!3581 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !48, line: 138, size: 32, elements: !3582)
!3582 = !{!3583, !3585, !3587}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !3581, file: !48, line: 139, baseType: !3584, size: 32)
!3584 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !48, line: 122, baseType: !58)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3581, file: !48, line: 140, baseType: !3586, size: 32)
!3586 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !48, line: 136, baseType: !64)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3581, file: !48, line: 141, baseType: !3588, size: 32)
!3588 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !48, line: 130, baseType: !70)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3572, file: !48, line: 152, baseType: !135, size: 32, offset: 128)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3572, file: !48, line: 162, baseType: !3591, size: 128, offset: 192)
!3591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3572, file: !48, line: 155, size: 128, elements: !3592)
!3592 = !{!3593, !3594, !3595, !3596, !3597, !3599}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !3591, file: !48, line: 156, baseType: !135, size: 32)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3591, file: !48, line: 157, baseType: !1344, size: 32)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3591, file: !48, line: 158, baseType: !1343, size: 64)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3591, file: !48, line: 159, baseType: !1375, size: 96)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3591, file: !48, line: 160, baseType: !3598, size: 64)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !3591, file: !48, line: 161, baseType: !3600, size: 64)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 64)
!3601 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !3602, line: 48, baseType: !1773)
!3602 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3603 = !{!3604}
!3604 = !DISubrange(count: 16)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !3568, file: !48, line: 192, baseType: !3571, size: 5120, offset: 5120)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3568, file: !48, line: 193, baseType: !3607, size: 64, offset: 10240)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DISubroutineType(types: !3609)
!3609 = !{null, !3610, !3567}
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !103, line: 246, baseType: !3536)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !3568, file: !48, line: 194, baseType: !3613, size: 64, offset: 10304)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !48, line: 194, flags: DIFlagFwdDecl)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3568, file: !48, line: 195, baseType: !135, size: 32, offset: 10368)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !3568, file: !48, line: 196, baseType: !3617, size: 32, offset: 10400)
!3617 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !48, line: 188, baseType: !78)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3568, file: !48, line: 197, baseType: !135, size: 32, offset: 10432)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3536, file: !103, line: 223, baseType: !3620, size: 1600, offset: 1152)
!3620 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !393, line: 73, baseType: !3621)
!3621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !393, line: 64, size: 1600, elements: !3622)
!3622 = !{!3623, !3638, !3642, !3643, !3644, !3645, !3646}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !3621, file: !393, line: 65, baseType: !3624, size: 64)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !393, line: 53, baseType: !3626)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !393, line: 42, size: 832, elements: !3627)
!3627 = !{!3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3626, file: !393, line: 43, baseType: !135, size: 32)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3626, file: !393, line: 44, baseType: !135, size: 32, offset: 32)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3626, file: !393, line: 45, baseType: !135, size: 32, offset: 64)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3626, file: !393, line: 46, baseType: !135, size: 32, offset: 96)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !3626, file: !393, line: 47, baseType: !135, size: 32, offset: 128)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !3626, file: !393, line: 48, baseType: !135, size: 32, offset: 160)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !3626, file: !393, line: 49, baseType: !135, size: 32, offset: 192)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3626, file: !393, line: 50, baseType: !135, size: 32, offset: 224)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3626, file: !393, line: 51, baseType: !1480, size: 512, offset: 256)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3626, file: !393, line: 52, baseType: !1343, size: 64, offset: 768)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !3621, file: !393, line: 66, baseType: !3639, size: 1312, offset: 64)
!3639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 1312, elements: !3640)
!3640 = !{!3641}
!3641 = !DISubrange(count: 41)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !3621, file: !393, line: 69, baseType: !135, size: 32, offset: 1376)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !3621, file: !393, line: 69, baseType: !135, size: 32, offset: 1408)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !3621, file: !393, line: 70, baseType: !135, size: 32, offset: 1440)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3621, file: !393, line: 71, baseType: !3548, size: 64, offset: 1472)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !3621, file: !393, line: 72, baseType: !3647, size: 64, offset: 1536)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !393, line: 59, baseType: !3649)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !393, line: 57, size: 8192, elements: !3650)
!3650 = !{!3651}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !3649, file: !393, line: 58, baseType: !1452, size: 8192)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3536, file: !103, line: 223, baseType: !3620, size: 1600, offset: 2752)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3536, file: !103, line: 223, baseType: !3620, size: 1600, offset: 4352)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3536, file: !103, line: 223, baseType: !3620, size: 1600, offset: 5952)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !3536, file: !103, line: 233, baseType: !1373, size: 16, offset: 7552)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !3536, file: !103, line: 236, baseType: !135, size: 32, offset: 7584)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !3536, file: !103, line: 238, baseType: !135, size: 32, offset: 7616)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !3536, file: !103, line: 238, baseType: !135, size: 32, offset: 7648)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !3536, file: !103, line: 239, baseType: !1490, size: 128, offset: 7680)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !3536, file: !103, line: 241, baseType: !1420, size: 64, offset: 7808)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !3536, file: !103, line: 243, baseType: !1490, size: 128, offset: 7872)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !3536, file: !103, line: 245, baseType: !1343, size: 64, offset: 8000)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !3531, file: !3532, line: 58, baseType: !3530, size: 64, offset: 64)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !3531, file: !3532, line: 59, baseType: !135, size: 32, offset: 128)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !3531, file: !3532, line: 63, baseType: !3666, size: 64, offset: 192)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1389, size: 192, elements: !1376)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !3531, file: !3532, line: 64, baseType: !135, size: 32, offset: 256)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !3531, file: !3532, line: 67, baseType: !1941, size: 64, offset: 320)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !3531, file: !3532, line: 67, baseType: !1941, size: 64, offset: 384)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !3531, file: !3532, line: 68, baseType: !3672, size: 64, offset: 448)
!3672 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !3673, line: 48, baseType: !1945)
!3673 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !3531, file: !3532, line: 69, baseType: !3675, size: 64, offset: 512)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !3531, file: !3532, line: 70, baseType: !135, size: 32, offset: 576)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !3531, file: !3532, line: 71, baseType: !3675, size: 64, offset: 640)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !3531, file: !3532, line: 72, baseType: !135, size: 32, offset: 704)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !3531, file: !3532, line: 75, baseType: !1373, size: 16, offset: 736)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3531, file: !3532, line: 76, baseType: !1373, size: 16, offset: 752)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3531, file: !3532, line: 79, baseType: !1730, size: 64, offset: 768)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !3531, file: !3532, line: 82, baseType: !135, size: 32, offset: 832)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !1430, file: !1429, line: 95, baseType: !3621, size: 1600, offset: 2240)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !1430, file: !1429, line: 95, baseType: !3621, size: 1600, offset: 3840)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !1430, file: !1429, line: 95, baseType: !3621, size: 1600, offset: 5440)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !1430, file: !1429, line: 98, baseType: !3621, size: 1600, offset: 7040)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !1430, file: !1429, line: 98, baseType: !3621, size: 1600, offset: 8640)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1430, file: !1429, line: 101, baseType: !135, size: 32, offset: 10240)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !1430, file: !1429, line: 101, baseType: !135, size: 32, offset: 10272)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !1430, file: !1429, line: 101, baseType: !135, size: 32, offset: 10304)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !1430, file: !1429, line: 101, baseType: !135, size: 32, offset: 10336)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !1430, file: !1429, line: 104, baseType: !135, size: 32, offset: 10368)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1430, file: !1429, line: 104, baseType: !135, size: 32, offset: 10400)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !1430, file: !1429, line: 111, baseType: !135, size: 32, offset: 10432)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1430, file: !1429, line: 114, baseType: !1375, size: 96, offset: 10464)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1430, file: !1429, line: 115, baseType: !1375, size: 96, offset: 10560)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1430, file: !1429, line: 116, baseType: !1375, size: 96, offset: 10656)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !1430, file: !1429, line: 118, baseType: !135, size: 32, offset: 10752)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1430, file: !1429, line: 119, baseType: !1373, size: 16, offset: 10784)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1430, file: !1429, line: 119, baseType: !1373, size: 16, offset: 10800)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !1430, file: !1429, line: 120, baseType: !1344, size: 32, offset: 10816)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1430, file: !1429, line: 121, baseType: !135, size: 32, offset: 10848)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !1430, file: !1429, line: 124, baseType: !1365, size: 8, offset: 10880)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1430, file: !1429, line: 124, baseType: !1365, size: 8, offset: 10888)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !1430, file: !1429, line: 126, baseType: !1365, size: 8, offset: 10896)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !1430, file: !1429, line: 126, baseType: !1365, size: 8, offset: 10904)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !1430, file: !1429, line: 127, baseType: !1365, size: 8, offset: 10912)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !1430, file: !1429, line: 128, baseType: !1365, size: 8, offset: 10920)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1430, file: !1429, line: 130, baseType: !1373, size: 16, offset: 10928)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !1430, file: !1429, line: 132, baseType: !3711, size: 64, offset: 10944)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !2541, line: 233, size: 3584, elements: !3713)
!3713 = !{!3714, !3715, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3730}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !3712, file: !2541, line: 234, baseType: !1490, size: 128)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !3712, file: !2541, line: 235, baseType: !3716, size: 64, offset: 128)
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !2541, line: 69, baseType: !3503)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !3712, file: !2541, line: 237, baseType: !2530, size: 8, offset: 192)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !3712, file: !2541, line: 237, baseType: !2530, size: 8, offset: 200)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !3712, file: !2541, line: 237, baseType: !2530, size: 8, offset: 208)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !3712, file: !2541, line: 237, baseType: !2530, size: 8, offset: 216)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !3712, file: !2541, line: 237, baseType: !2530, size: 8, offset: 224)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !3712, file: !2541, line: 237, baseType: !2530, size: 8, offset: 232)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !3712, file: !2541, line: 238, baseType: !2530, size: 8, offset: 240)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3712, file: !2541, line: 238, baseType: !2530, size: 8, offset: 248)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3712, file: !2541, line: 241, baseType: !3620, size: 1600, offset: 256)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !3712, file: !2541, line: 242, baseType: !3620, size: 1600, offset: 1856)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !3712, file: !2541, line: 243, baseType: !3729, size: 64, offset: 3456)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !3712, file: !2541, line: 244, baseType: !1836, size: 64, offset: 3520)
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3732, size: 64)
!3732 = !DIDerivedType(tag: DW_TAG_typedef, name: "MirrorModifierData", file: !236, line: 275, baseType: !3733)
!3733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MirrorModifierData", file: !236, line: 268, size: 1024, elements: !3734)
!3734 = !{!3735, !3749, !3750, !3751, !3752}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3733, file: !236, line: 269, baseType: !3736, size: 896)
!3736 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !236, line: 110, baseType: !3737)
!3737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !236, line: 99, size: 896, elements: !3738)
!3738 = !{!3739, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3737, file: !236, line: 100, baseType: !3740, size: 64)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3737, file: !236, line: 100, baseType: !3740, size: 64, offset: 64)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3737, file: !236, line: 102, baseType: !135, size: 32, offset: 128)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3737, file: !236, line: 102, baseType: !135, size: 32, offset: 160)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !3737, file: !236, line: 103, baseType: !135, size: 32, offset: 192)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3737, file: !236, line: 103, baseType: !135, size: 32, offset: 224)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3737, file: !236, line: 104, baseType: !1480, size: 512, offset: 256)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3737, file: !236, line: 107, baseType: !1974, size: 64, offset: 768)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3737, file: !236, line: 109, baseType: !1836, size: 64, offset: 832)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "axis", scope: !3733, file: !236, line: 271, baseType: !1373, size: 16, offset: 896)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3733, file: !236, line: 272, baseType: !1373, size: 16, offset: 912)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "tolerance", scope: !3733, file: !236, line: 273, baseType: !1344, size: 32, offset: 928)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_ob", scope: !3733, file: !236, line: 274, baseType: !1730, size: 64, offset: 960)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditSelection", file: !3755, line: 34, baseType: !3756)
!3755 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_marking.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditSelection", file: !3755, line: 30, size: 256, elements: !3757)
!3757 = !{!3758, !3760, !3761, !3762}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3756, file: !3755, line: 31, baseType: !3759, size: 64)
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3756, file: !3755, line: 31, baseType: !3759, size: 64, offset: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "ele", scope: !3756, file: !3755, line: 32, baseType: !1422, size: 64, offset: 128)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !3756, file: !3755, line: 33, baseType: !1365, size: 8, offset: 192)
!3763 = !{!3764, !4038, !4042, !4044, !0, !4047, !4053, !4056, !4058, !4060}
!3764 = !DIGlobalVariableExpression(var: !3765, expr: !DIExpression())
!3765 = distinct !DIGlobalVariable(name: "poke_center_modes", scope: !3766, file: !3, line: 3344, type: !4029, isLocal: true, isDefinition: true)
!3766 = distinct !DISubprogram(name: "MESH_OT_poke", scope: !3, file: !3, line: 3341, type: !3767, scopeLine: 3342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{null, !3769}
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !3771, line: 568, baseType: !3772)
!3771 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !3771, line: 508, size: 1536, elements: !3773)
!3773 = !{!3774, !3775, !3776, !3777, !3778, !3954, !3958, !3964, !3968, !3969, !3973, !3974, !3975, !3976, !3980, !3981, !3996, !3997, !4001, !4027}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3772, file: !3771, line: 509, baseType: !3575, size: 64)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3772, file: !3771, line: 510, baseType: !3575, size: 64, offset: 64)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !3772, file: !3771, line: 511, baseType: !3575, size: 64, offset: 128)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3772, file: !3771, line: 512, baseType: !3575, size: 64, offset: 192)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3772, file: !3771, line: 518, baseType: !3779, size: 64, offset: 256)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!135, !3782, !3784}
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 64)
!3783 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !6, line: 44, flags: DIFlagFwdDecl)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !268, line: 328, size: 1344, elements: !3786)
!3786 = !{!3787, !3788, !3789, !3790, !3791, !3793, !3794, !3795, !3805, !3947, !3948, !3949, !3952, !3953}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3785, file: !268, line: 329, baseType: !3784, size: 64)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3785, file: !268, line: 329, baseType: !3784, size: 64, offset: 64)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3785, file: !268, line: 332, baseType: !1480, size: 512, offset: 128)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3785, file: !268, line: 333, baseType: !1469, size: 64, offset: 640)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3785, file: !268, line: 336, baseType: !3792, size: 64, offset: 704)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3785, file: !268, line: 337, baseType: !1343, size: 64, offset: 768)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !3785, file: !268, line: 338, baseType: !1343, size: 64, offset: 832)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3785, file: !268, line: 340, baseType: !3796, size: 64, offset: 896)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !6, line: 55, size: 192, elements: !3798)
!3798 = !{!3799, !3803, !3804}
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3797, file: !6, line: 58, baseType: !3800, size: 64)
!3800 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3797, file: !6, line: 56, size: 64, elements: !3801)
!3801 = !{!3802}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3800, file: !6, line: 57, baseType: !1343, size: 64)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3797, file: !6, line: 60, baseType: !2022, size: 64, offset: 64)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3797, file: !6, line: 61, baseType: !1343, size: 64, offset: 128)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3785, file: !268, line: 341, baseType: !3806, size: 64, offset: 960)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !268, line: 106, size: 320, elements: !3808)
!3808 = !{!3809, !3810, !3811, !3812, !3813, !3814}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3807, file: !268, line: 107, baseType: !1490, size: 128)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !3807, file: !268, line: 108, baseType: !135, size: 32, offset: 128)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !3807, file: !268, line: 109, baseType: !135, size: 32, offset: 160)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3807, file: !268, line: 110, baseType: !135, size: 32, offset: 192)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3807, file: !268, line: 110, baseType: !135, size: 32, offset: 224)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !3807, file: !268, line: 111, baseType: !3815, size: 64, offset: 256)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !3771, line: 490, size: 768, elements: !3817)
!3817 = !{!3818, !3819, !3820, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3816, file: !3771, line: 491, baseType: !3815, size: 64)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3816, file: !3771, line: 491, baseType: !3815, size: 64, offset: 64)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !3816, file: !3771, line: 493, baseType: !3821, size: 64, offset: 128)
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3822, size: 64)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !268, line: 169, size: 2048, elements: !3823)
!3823 = !{!3824, !3825, !3826, !3827, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3913, !3916, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3822, file: !268, line: 170, baseType: !3821, size: 64)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3822, file: !268, line: 170, baseType: !3821, size: 64, offset: 64)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !3822, file: !268, line: 172, baseType: !1343, size: 64, offset: 128)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3822, file: !268, line: 174, baseType: !3828, size: 64, offset: 192)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !3830, line: 49, size: 1984, elements: !3831)
!3830 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3831 = !{!3832, !3833, !3834, !3835, !3836, !3837, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3829, file: !3830, line: 50, baseType: !1433, size: 960)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !3829, file: !3830, line: 52, baseType: !1490, size: 128, offset: 960)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !3829, file: !3830, line: 53, baseType: !1490, size: 128, offset: 1088)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !3829, file: !3830, line: 54, baseType: !1490, size: 128, offset: 1216)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3829, file: !3830, line: 55, baseType: !1490, size: 128, offset: 1344)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3829, file: !3830, line: 57, baseType: !1974, size: 64, offset: 1472)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !3829, file: !3830, line: 58, baseType: !1974, size: 64, offset: 1536)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !3829, file: !3830, line: 60, baseType: !135, size: 32, offset: 1600)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3829, file: !3830, line: 61, baseType: !135, size: 32, offset: 1632)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3829, file: !3830, line: 63, baseType: !1373, size: 16, offset: 1664)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3829, file: !3830, line: 64, baseType: !1373, size: 16, offset: 1680)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3829, file: !3830, line: 65, baseType: !1373, size: 16, offset: 1696)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3829, file: !3830, line: 66, baseType: !1373, size: 16, offset: 1712)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3829, file: !3830, line: 67, baseType: !1373, size: 16, offset: 1728)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !3829, file: !3830, line: 68, baseType: !1373, size: 16, offset: 1744)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !3829, file: !3830, line: 69, baseType: !1373, size: 16, offset: 1760)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !3829, file: !3830, line: 70, baseType: !1373, size: 16, offset: 1776)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3829, file: !3830, line: 71, baseType: !1373, size: 16, offset: 1792)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !3829, file: !3830, line: 73, baseType: !1373, size: 16, offset: 1808)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !3829, file: !3830, line: 74, baseType: !1373, size: 16, offset: 1824)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3829, file: !3830, line: 76, baseType: !1373, size: 16, offset: 1840)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !3829, file: !3830, line: 78, baseType: !3815, size: 64, offset: 1856)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3829, file: !3830, line: 79, baseType: !1343, size: 64, offset: 1920)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !3822, file: !268, line: 175, baseType: !3828, size: 64, offset: 256)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !3822, file: !268, line: 176, baseType: !1480, size: 512, offset: 320)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !3822, file: !268, line: 178, baseType: !1373, size: 16, offset: 832)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !3822, file: !268, line: 178, baseType: !1373, size: 16, offset: 848)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3822, file: !268, line: 178, baseType: !1373, size: 16, offset: 864)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3822, file: !268, line: 178, baseType: !1373, size: 16, offset: 880)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !3822, file: !268, line: 179, baseType: !1373, size: 16, offset: 896)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !3822, file: !268, line: 180, baseType: !1373, size: 16, offset: 912)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3822, file: !268, line: 181, baseType: !1373, size: 16, offset: 928)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3822, file: !268, line: 182, baseType: !1373, size: 16, offset: 944)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !3822, file: !268, line: 183, baseType: !1373, size: 16, offset: 960)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !3822, file: !268, line: 184, baseType: !1373, size: 16, offset: 976)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !3822, file: !268, line: 185, baseType: !1373, size: 16, offset: 992)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !3822, file: !268, line: 186, baseType: !1373, size: 16, offset: 1008)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3822, file: !268, line: 188, baseType: !135, size: 32, offset: 1024)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !3822, file: !268, line: 190, baseType: !1373, size: 16, offset: 1056)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !3822, file: !268, line: 191, baseType: !1373, size: 16, offset: 1072)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !3822, file: !268, line: 194, baseType: !3873, size: 64, offset: 1088)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !3771, line: 421, size: 960, elements: !3875)
!3875 = !{!3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3909, !3910, !3911, !3912}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3874, file: !3771, line: 422, baseType: !3873, size: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3874, file: !3771, line: 422, baseType: !3873, size: 64, offset: 64)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3874, file: !3771, line: 424, baseType: !1373, size: 16, offset: 128)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3874, file: !3771, line: 425, baseType: !1373, size: 16, offset: 144)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3874, file: !3771, line: 426, baseType: !135, size: 32, offset: 160)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3874, file: !3771, line: 426, baseType: !135, size: 32, offset: 192)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !3874, file: !3771, line: 427, baseType: !2205, size: 64, offset: 224)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !3874, file: !3771, line: 428, baseType: !2756, size: 48, offset: 288)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !3874, file: !3771, line: 431, baseType: !1365, size: 8, offset: 336)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3874, file: !3771, line: 432, baseType: !1365, size: 8, offset: 344)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !3874, file: !3771, line: 435, baseType: !1373, size: 16, offset: 352)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !3874, file: !3771, line: 436, baseType: !1373, size: 16, offset: 368)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !3874, file: !3771, line: 437, baseType: !135, size: 32, offset: 384)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !3874, file: !3771, line: 437, baseType: !135, size: 32, offset: 416)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !3874, file: !3771, line: 438, baseType: !3891, size: 64, offset: 448)
!3891 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !3874, file: !3771, line: 439, baseType: !135, size: 32, offset: 512)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !3874, file: !3771, line: 439, baseType: !135, size: 32, offset: 544)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !3874, file: !3771, line: 442, baseType: !1373, size: 16, offset: 576)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !3874, file: !3771, line: 442, baseType: !1373, size: 16, offset: 592)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !3874, file: !3771, line: 442, baseType: !1373, size: 16, offset: 608)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !3874, file: !3771, line: 442, baseType: !1373, size: 16, offset: 624)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !3874, file: !3771, line: 443, baseType: !1373, size: 16, offset: 640)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !3874, file: !3771, line: 446, baseType: !1373, size: 16, offset: 656)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !3874, file: !3771, line: 449, baseType: !3575, size: 64, offset: 704)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !3874, file: !3771, line: 452, baseType: !3902, size: 64, offset: 768)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !3771, line: 463, size: 128, elements: !3904)
!3904 = !{!3905, !3906, !3907, !3908}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !3903, file: !3771, line: 464, baseType: !135, size: 32)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !3903, file: !3771, line: 465, baseType: !1344, size: 32, offset: 32)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !3903, file: !3771, line: 466, baseType: !1344, size: 32, offset: 64)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !3903, file: !3771, line: 467, baseType: !1344, size: 32, offset: 96)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !3874, file: !3771, line: 455, baseType: !1373, size: 16, offset: 832)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !3874, file: !3771, line: 456, baseType: !1373, size: 16, offset: 848)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3874, file: !3771, line: 457, baseType: !135, size: 32, offset: 864)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3874, file: !3771, line: 458, baseType: !1343, size: 64, offset: 896)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !3822, file: !268, line: 196, baseType: !3914, size: 64, offset: 1152)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !268, line: 55, flags: DIFlagFwdDecl)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !3822, file: !268, line: 198, baseType: !3917, size: 64, offset: 1216)
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!3918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !3771, line: 398, size: 448, elements: !3919)
!3919 = !{!3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929}
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3918, file: !3771, line: 399, baseType: !3917, size: 64)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3918, file: !3771, line: 399, baseType: !3917, size: 64, offset: 64)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3918, file: !3771, line: 400, baseType: !135, size: 32, offset: 128)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3918, file: !3771, line: 401, baseType: !135, size: 32, offset: 160)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3918, file: !3771, line: 402, baseType: !135, size: 32, offset: 192)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3918, file: !3771, line: 403, baseType: !135, size: 32, offset: 224)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3918, file: !3771, line: 404, baseType: !135, size: 32, offset: 256)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3918, file: !3771, line: 405, baseType: !135, size: 32, offset: 288)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3918, file: !3771, line: 407, baseType: !1343, size: 64, offset: 320)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !3918, file: !3771, line: 414, baseType: !1343, size: 64, offset: 384)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !3822, file: !268, line: 200, baseType: !135, size: 32, offset: 1280)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !3822, file: !268, line: 200, baseType: !135, size: 32, offset: 1312)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !3822, file: !268, line: 201, baseType: !1343, size: 64, offset: 1344)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3822, file: !268, line: 203, baseType: !1490, size: 128, offset: 1408)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3822, file: !268, line: 204, baseType: !1490, size: 128, offset: 1536)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !3822, file: !268, line: 205, baseType: !1490, size: 128, offset: 1664)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !3822, file: !268, line: 207, baseType: !1490, size: 128, offset: 1792)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !3822, file: !268, line: 208, baseType: !1490, size: 128, offset: 1920)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !3816, file: !3771, line: 495, baseType: !3891, size: 64, offset: 192)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3816, file: !3771, line: 496, baseType: !135, size: 32, offset: 256)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3816, file: !3771, line: 497, baseType: !1343, size: 64, offset: 320)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3816, file: !3771, line: 499, baseType: !3891, size: 64, offset: 384)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3816, file: !3771, line: 500, baseType: !3891, size: 64, offset: 448)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !3816, file: !3771, line: 502, baseType: !3891, size: 64, offset: 512)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !3816, file: !3771, line: 503, baseType: !3891, size: 64, offset: 576)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3816, file: !3771, line: 504, baseType: !3891, size: 64, offset: 640)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !3816, file: !3771, line: 505, baseType: !135, size: 32, offset: 704)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3785, file: !268, line: 343, baseType: !1490, size: 128, offset: 1024)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !3785, file: !268, line: 344, baseType: !3784, size: 64, offset: 1152)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !3785, file: !268, line: 345, baseType: !3950, size: 64, offset: 1216)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !268, line: 61, flags: DIFlagFwdDecl)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3785, file: !268, line: 346, baseType: !1373, size: 16, offset: 1280)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3785, file: !268, line: 346, baseType: !3070, size: 48, offset: 1296)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3772, file: !3771, line: 524, baseType: !3955, size: 64, offset: 320)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = !DISubroutineType(types: !3957)
!3957 = !{!2530, !3782, !3784}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !3772, file: !3771, line: 530, baseType: !3959, size: 64, offset: 384)
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{!135, !3782, !3784, !3962}
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3874)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3772, file: !3771, line: 531, baseType: !3965, size: 64, offset: 448)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{null, !3782, !3784}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !3772, file: !3771, line: 532, baseType: !3959, size: 64, offset: 512)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3772, file: !3771, line: 536, baseType: !3970, size: 64, offset: 576)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!135, !3782}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !3772, file: !3771, line: 539, baseType: !3965, size: 64, offset: 640)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3772, file: !3771, line: 542, baseType: !2022, size: 64, offset: 704)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !3772, file: !3771, line: 545, baseType: !1474, size: 64, offset: 768)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !3772, file: !3771, line: 549, baseType: !3977, size: 64, offset: 832)
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3978, size: 64)
!3978 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !6, line: 333, baseType: !3979)
!3979 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !6, line: 39, flags: DIFlagFwdDecl)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !3772, file: !3771, line: 552, baseType: !1490, size: 128, offset: 896)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !3772, file: !3771, line: 555, baseType: !3982, size: 64, offset: 1024)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !268, line: 281, size: 1088, elements: !3984)
!3984 = !{!3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3983, file: !268, line: 282, baseType: !3982, size: 64)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3983, file: !268, line: 282, baseType: !3982, size: 64, offset: 64)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3983, file: !268, line: 284, baseType: !1490, size: 128, offset: 128)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !3983, file: !268, line: 285, baseType: !1490, size: 128, offset: 256)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3983, file: !268, line: 287, baseType: !1480, size: 512, offset: 384)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3983, file: !268, line: 288, baseType: !1373, size: 16, offset: 896)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !3983, file: !268, line: 289, baseType: !1373, size: 16, offset: 912)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3983, file: !268, line: 291, baseType: !1373, size: 16, offset: 928)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !3983, file: !268, line: 292, baseType: !1373, size: 16, offset: 944)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3983, file: !268, line: 295, baseType: !3970, size: 64, offset: 960)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !3983, file: !268, line: 296, baseType: !1343, size: 64, offset: 1024)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !3772, file: !3771, line: 559, baseType: !1343, size: 64, offset: 1088)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !3772, file: !3771, line: 560, baseType: !3998, size: 64, offset: 1152)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{!135, !3782, !3792}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !3772, file: !3771, line: 563, baseType: !4002, size: 256, offset: 1216)
!4002 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !6, line: 436, baseType: !4003)
!4003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !6, line: 430, size: 256, elements: !4004)
!4004 = !{!4005, !4006, !4009, !4025}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4003, file: !6, line: 431, baseType: !1343, size: 64)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !4003, file: !6, line: 432, baseType: !4007, size: 64, offset: 64)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !6, line: 417, baseType: !2023)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !4003, file: !6, line: 433, baseType: !4010, size: 64, offset: 128)
!4010 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !6, line: 408, baseType: !4011)
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{!135, !3782, !3796, !4014, !4016}
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !6, line: 38, flags: DIFlagFwdDecl)
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!4017 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !6, line: 348, baseType: !4018)
!4018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !6, line: 337, size: 256, elements: !4019)
!4019 = !{!4020, !4021, !4022, !4023, !4024}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4018, file: !6, line: 339, baseType: !1343, size: 64)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4018, file: !6, line: 342, baseType: !4014, size: 64, offset: 64)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !4018, file: !6, line: 345, baseType: !135, size: 32, offset: 128)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !4018, file: !6, line: 347, baseType: !135, size: 32, offset: 160)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !4018, file: !6, line: 347, baseType: !135, size: 32, offset: 192)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4003, file: !6, line: 434, baseType: !4026, size: 64, offset: 192)
!4026 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !6, line: 409, baseType: !1347)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3772, file: !3771, line: 566, baseType: !1373, size: 16, offset: 1472)
!4028 = !{}
!4029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4030, size: 1280, elements: !1680)
!4030 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !6, line: 308, baseType: !4031)
!4031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !6, line: 302, size: 320, elements: !4032)
!4032 = !{!4033, !4034, !4035, !4036, !4037}
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4031, file: !6, line: 303, baseType: !135, size: 32)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !4031, file: !6, line: 304, baseType: !3575, size: 64, offset: 64)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !4031, file: !6, line: 305, baseType: !135, size: 32, offset: 128)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4031, file: !6, line: 306, baseType: !3575, size: 64, offset: 192)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !4031, file: !6, line: 307, baseType: !3575, size: 64, offset: 256)
!4038 = !DIGlobalVariableExpression(var: !4039, expr: !DIExpression())
!4039 = distinct !DIGlobalVariable(name: "type_items", scope: !4040, file: !3, line: 4397, type: !4041, isLocal: true, isDefinition: true)
!4040 = distinct !DISubprogram(name: "MESH_OT_sort_elements", scope: !3, file: !3, line: 4395, type: !3767, scopeLine: 4396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4030, size: 2560, elements: !2380)
!4042 = !DIGlobalVariableExpression(var: !4043, expr: !DIExpression())
!4043 = distinct !DIGlobalVariable(name: "elem_items", scope: !4040, file: !3, line: 4414, type: !4029, isLocal: true, isDefinition: true)
!4044 = !DIGlobalVariableExpression(var: !4045, expr: !DIExpression())
!4045 = distinct !DIGlobalVariable(name: "type_items", scope: !4046, file: !3, line: 4662, type: !4029, isLocal: true, isDefinition: true)
!4046 = distinct !DISubprogram(name: "MESH_OT_bridge_edge_loops", scope: !3, file: !3, line: 4660, type: !3767, scopeLine: 4661, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4047 = !DIGlobalVariableExpression(var: !4048, expr: !DIExpression())
!4048 = distinct !DIGlobalVariable(name: "prop_subd_edgering_types", scope: !4049, file: !3, line: 170, type: !4029, isLocal: true, isDefinition: true)
!4049 = distinct !DISubprogram(name: "mesh_operator_edgering_props", scope: !3, file: !3, line: 167, type: !4050, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4050 = !DISubroutineType(types: !4051)
!4051 = !{null, !3769, !4052}
!4052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!4053 = !DIGlobalVariableExpression(var: !4054, expr: !DIExpression())
!4054 = distinct !DIGlobalVariable(name: "prop_mesh_delete_types", scope: !2, file: !3, line: 324, type: !4055, isLocal: true, isDefinition: true)
!4055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4030, size: 1920, elements: !2757)
!4056 = !DIGlobalVariableExpression(var: !4057, expr: !DIExpression())
!4057 = distinct !DIGlobalVariable(name: "merge_type_items", scope: !2, file: !3, line: 1822, type: !4055, isLocal: true, isDefinition: true)
!4058 = !DIGlobalVariableExpression(var: !4059, expr: !DIExpression())
!4059 = distinct !DIGlobalVariable(name: "knife_items", scope: !2, file: !3, line: 2246, type: !4029, isLocal: true, isDefinition: true)
!4060 = !DIGlobalVariableExpression(var: !4061, expr: !DIExpression())
!4061 = distinct !DIGlobalVariable(name: "prop_separate_types", scope: !2, file: !3, line: 2900, type: !4029, isLocal: true, isDefinition: true)
!4062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4030, size: 1600, elements: !2588)
!4063 = !{i32 7, !"Dwarf Version", i32 4}
!4064 = !{i32 2, !"Debug Info Version", i32 3}
!4065 = !{i32 1, !"wchar_size", i32 4}
!4066 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!4067 = distinct !DISubprogram(name: "MESH_OT_subdivide", scope: !3, file: !3, line: 120, type: !3767, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4068 = !DILocalVariable(name: "ot", arg: 1, scope: !4067, file: !3, line: 120, type: !3769)
!4069 = !DILocation(line: 120, column: 40, scope: !4067)
!4070 = !DILocalVariable(name: "prop", scope: !4067, file: !3, line: 122, type: !3977)
!4071 = !DILocation(line: 122, column: 15, scope: !4067)
!4072 = !DILocation(line: 125, column: 2, scope: !4067)
!4073 = !DILocation(line: 125, column: 6, scope: !4067)
!4074 = !DILocation(line: 125, column: 11, scope: !4067)
!4075 = !DILocation(line: 126, column: 2, scope: !4067)
!4076 = !DILocation(line: 126, column: 6, scope: !4067)
!4077 = !DILocation(line: 126, column: 18, scope: !4067)
!4078 = !DILocation(line: 127, column: 2, scope: !4067)
!4079 = !DILocation(line: 127, column: 6, scope: !4067)
!4080 = !DILocation(line: 127, column: 13, scope: !4067)
!4081 = !DILocation(line: 130, column: 2, scope: !4067)
!4082 = !DILocation(line: 130, column: 6, scope: !4067)
!4083 = !DILocation(line: 130, column: 11, scope: !4067)
!4084 = !DILocation(line: 131, column: 2, scope: !4067)
!4085 = !DILocation(line: 131, column: 6, scope: !4067)
!4086 = !DILocation(line: 131, column: 11, scope: !4067)
!4087 = !DILocation(line: 134, column: 2, scope: !4067)
!4088 = !DILocation(line: 134, column: 6, scope: !4067)
!4089 = !DILocation(line: 134, column: 11, scope: !4067)
!4090 = !DILocation(line: 137, column: 21, scope: !4067)
!4091 = !DILocation(line: 137, column: 25, scope: !4067)
!4092 = !DILocation(line: 137, column: 9, scope: !4067)
!4093 = !DILocation(line: 137, column: 7, scope: !4067)
!4094 = !DILocation(line: 139, column: 24, scope: !4067)
!4095 = !DILocation(line: 139, column: 2, scope: !4067)
!4096 = !DILocation(line: 141, column: 16, scope: !4067)
!4097 = !DILocation(line: 141, column: 20, scope: !4067)
!4098 = !DILocation(line: 141, column: 2, scope: !4067)
!4099 = !DILocation(line: 143, column: 18, scope: !4067)
!4100 = !DILocation(line: 143, column: 22, scope: !4067)
!4101 = !DILocation(line: 143, column: 2, scope: !4067)
!4102 = !DILocation(line: 144, column: 15, scope: !4067)
!4103 = !DILocation(line: 144, column: 19, scope: !4067)
!4104 = !DILocation(line: 144, column: 2, scope: !4067)
!4105 = !DILocation(line: 147, column: 16, scope: !4067)
!4106 = !DILocation(line: 147, column: 20, scope: !4067)
!4107 = !DILocation(line: 147, column: 2, scope: !4067)
!4108 = !DILocation(line: 148, column: 16, scope: !4067)
!4109 = !DILocation(line: 148, column: 20, scope: !4067)
!4110 = !DILocation(line: 148, column: 2, scope: !4067)
!4111 = !DILocation(line: 149, column: 14, scope: !4067)
!4112 = !DILocation(line: 149, column: 18, scope: !4067)
!4113 = !DILocation(line: 149, column: 2, scope: !4067)
!4114 = !DILocation(line: 150, column: 1, scope: !4067)
!4115 = distinct !DISubprogram(name: "edbm_subdivide_exec", scope: !3, file: !3, line: 83, type: !4116, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{!135, !4118, !4120}
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !2475, line: 69, baseType: !3783)
!4120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4121, size: 64)
!4121 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !268, line: 348, baseType: !3785)
!4122 = !DILocalVariable(name: "C", arg: 1, scope: !4115, file: !3, line: 83, type: !4118)
!4123 = !DILocation(line: 83, column: 42, scope: !4115)
!4124 = !DILocalVariable(name: "op", arg: 2, scope: !4115, file: !3, line: 83, type: !4120)
!4125 = !DILocation(line: 83, column: 57, scope: !4115)
!4126 = !DILocalVariable(name: "obedit", scope: !4115, file: !3, line: 85, type: !4127)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !379, line: 295, baseType: !1731)
!4129 = !DILocation(line: 85, column: 10, scope: !4115)
!4130 = !DILocation(line: 85, column: 40, scope: !4115)
!4131 = !DILocation(line: 85, column: 19, scope: !4115)
!4132 = !DILocalVariable(name: "em", scope: !4115, file: !3, line: 86, type: !4133)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !3532, line: 83, baseType: !3531)
!4135 = !DILocation(line: 86, column: 14, scope: !4115)
!4136 = !DILocation(line: 86, column: 44, scope: !4115)
!4137 = !DILocation(line: 86, column: 19, scope: !4115)
!4138 = !DILocalVariable(name: "cuts", scope: !4115, file: !3, line: 87, type: !4052)
!4139 = !DILocation(line: 87, column: 12, scope: !4115)
!4140 = !DILocation(line: 87, column: 31, scope: !4115)
!4141 = !DILocation(line: 87, column: 35, scope: !4115)
!4142 = !DILocation(line: 87, column: 19, scope: !4115)
!4143 = !DILocalVariable(name: "smooth", scope: !4115, file: !3, line: 88, type: !1344)
!4144 = !DILocation(line: 88, column: 8, scope: !4115)
!4145 = !DILocation(line: 88, column: 40, scope: !4115)
!4146 = !DILocation(line: 88, column: 44, scope: !4115)
!4147 = !DILocation(line: 88, column: 26, scope: !4115)
!4148 = !DILocation(line: 88, column: 24, scope: !4115)
!4149 = !DILocalVariable(name: "fractal", scope: !4115, file: !3, line: 89, type: !4150)
!4150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1344)
!4151 = !DILocation(line: 89, column: 14, scope: !4115)
!4152 = !DILocation(line: 89, column: 38, scope: !4115)
!4153 = !DILocation(line: 89, column: 42, scope: !4115)
!4154 = !DILocation(line: 89, column: 24, scope: !4115)
!4155 = !DILocation(line: 89, column: 58, scope: !4115)
!4156 = !DILocalVariable(name: "along_normal", scope: !4115, file: !3, line: 90, type: !4150)
!4157 = !DILocation(line: 90, column: 14, scope: !4115)
!4158 = !DILocation(line: 90, column: 43, scope: !4115)
!4159 = !DILocation(line: 90, column: 47, scope: !4115)
!4160 = !DILocation(line: 90, column: 29, scope: !4115)
!4161 = !DILocation(line: 92, column: 22, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4115, file: !3, line: 92, column: 6)
!4163 = !DILocation(line: 92, column: 26, scope: !4162)
!4164 = !DILocation(line: 92, column: 6, scope: !4162)
!4165 = !DILocation(line: 92, column: 42, scope: !4162)
!4166 = !DILocation(line: 93, column: 19, scope: !4162)
!4167 = !DILocation(line: 93, column: 23, scope: !4162)
!4168 = !DILocation(line: 93, column: 6, scope: !4162)
!4169 = !DILocation(line: 93, column: 42, scope: !4162)
!4170 = !DILocation(line: 92, column: 6, scope: !4115)
!4171 = !DILocation(line: 95, column: 16, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 94, column: 2)
!4173 = !DILocation(line: 95, column: 20, scope: !4172)
!4174 = !DILocation(line: 95, column: 3, scope: !4172)
!4175 = !DILocation(line: 96, column: 2, scope: !4172)
!4176 = !DILocation(line: 98, column: 21, scope: !4115)
!4177 = !DILocation(line: 98, column: 25, scope: !4115)
!4178 = !DILocation(line: 99, column: 21, scope: !4115)
!4179 = !DILocation(line: 100, column: 21, scope: !4115)
!4180 = !DILocation(line: 100, column: 30, scope: !4115)
!4181 = !DILocation(line: 101, column: 21, scope: !4115)
!4182 = !DILocation(line: 102, column: 54, scope: !4115)
!4183 = !DILocation(line: 102, column: 58, scope: !4115)
!4184 = !DILocation(line: 102, column: 41, scope: !4115)
!4185 = !DILocation(line: 103, column: 37, scope: !4115)
!4186 = !DILocation(line: 103, column: 41, scope: !4115)
!4187 = !DILocation(line: 103, column: 21, scope: !4115)
!4188 = !DILocation(line: 104, column: 33, scope: !4115)
!4189 = !DILocation(line: 104, column: 37, scope: !4115)
!4190 = !DILocation(line: 104, column: 21, scope: !4115)
!4191 = !DILocation(line: 98, column: 2, scope: !4115)
!4192 = !DILocation(line: 106, column: 22, scope: !4115)
!4193 = !DILocation(line: 106, column: 2, scope: !4115)
!4194 = !DILocation(line: 108, column: 2, scope: !4115)
!4195 = distinct !DISubprogram(name: "MESH_OT_subdivide_edgering", scope: !3, file: !3, line: 231, type: !3767, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4196 = !DILocalVariable(name: "ot", arg: 1, scope: !4195, file: !3, line: 231, type: !3769)
!4197 = !DILocation(line: 231, column: 49, scope: !4195)
!4198 = !DILocation(line: 234, column: 2, scope: !4195)
!4199 = !DILocation(line: 234, column: 6, scope: !4195)
!4200 = !DILocation(line: 234, column: 11, scope: !4195)
!4201 = !DILocation(line: 235, column: 2, scope: !4195)
!4202 = !DILocation(line: 235, column: 6, scope: !4195)
!4203 = !DILocation(line: 235, column: 18, scope: !4195)
!4204 = !DILocation(line: 236, column: 2, scope: !4195)
!4205 = !DILocation(line: 236, column: 6, scope: !4195)
!4206 = !DILocation(line: 236, column: 13, scope: !4195)
!4207 = !DILocation(line: 239, column: 2, scope: !4195)
!4208 = !DILocation(line: 239, column: 6, scope: !4195)
!4209 = !DILocation(line: 239, column: 11, scope: !4195)
!4210 = !DILocation(line: 240, column: 2, scope: !4195)
!4211 = !DILocation(line: 240, column: 6, scope: !4195)
!4212 = !DILocation(line: 240, column: 11, scope: !4195)
!4213 = !DILocation(line: 243, column: 2, scope: !4195)
!4214 = !DILocation(line: 243, column: 6, scope: !4195)
!4215 = !DILocation(line: 243, column: 11, scope: !4195)
!4216 = !DILocation(line: 246, column: 31, scope: !4195)
!4217 = !DILocation(line: 246, column: 2, scope: !4195)
!4218 = !DILocation(line: 247, column: 1, scope: !4195)
!4219 = distinct !DISubprogram(name: "edbm_subdivide_edge_ring_exec", scope: !3, file: !3, line: 209, type: !4116, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4220 = !DILocalVariable(name: "C", arg: 1, scope: !4219, file: !3, line: 209, type: !4118)
!4221 = !DILocation(line: 209, column: 52, scope: !4219)
!4222 = !DILocalVariable(name: "op", arg: 2, scope: !4219, file: !3, line: 209, type: !4120)
!4223 = !DILocation(line: 209, column: 67, scope: !4219)
!4224 = !DILocalVariable(name: "obedit", scope: !4219, file: !3, line: 211, type: !4127)
!4225 = !DILocation(line: 211, column: 10, scope: !4219)
!4226 = !DILocation(line: 211, column: 40, scope: !4219)
!4227 = !DILocation(line: 211, column: 19, scope: !4219)
!4228 = !DILocalVariable(name: "em", scope: !4219, file: !3, line: 212, type: !4133)
!4229 = !DILocation(line: 212, column: 14, scope: !4219)
!4230 = !DILocation(line: 212, column: 44, scope: !4219)
!4231 = !DILocation(line: 212, column: 19, scope: !4219)
!4232 = !DILocalVariable(name: "op_props", scope: !4219, file: !3, line: 213, type: !4233)
!4233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeRingOpSubdProps", file: !3, line: 157, size: 160, elements: !4234)
!4234 = !{!4235, !4236, !4237, !4238, !4239}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "interp_mode", scope: !4233, file: !3, line: 158, baseType: !135, size: 32)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "cuts", scope: !4233, file: !3, line: 159, baseType: !135, size: 32, offset: 32)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "smooth", scope: !4233, file: !3, line: 160, baseType: !1344, size: 32, offset: 64)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "profile_shape", scope: !4233, file: !3, line: 162, baseType: !135, size: 32, offset: 96)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "profile_shape_factor", scope: !4233, file: !3, line: 163, baseType: !1344, size: 32, offset: 128)
!4240 = !DILocation(line: 213, column: 29, scope: !4219)
!4241 = !DILocation(line: 215, column: 35, scope: !4219)
!4242 = !DILocation(line: 215, column: 2, scope: !4219)
!4243 = !DILocation(line: 217, column: 21, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 217, column: 6)
!4245 = !DILocation(line: 217, column: 25, scope: !4244)
!4246 = !DILocation(line: 220, column: 46, scope: !4244)
!4247 = !DILocation(line: 220, column: 68, scope: !4244)
!4248 = !DILocation(line: 220, column: 83, scope: !4244)
!4249 = !DILocation(line: 220, column: 74, scope: !4244)
!4250 = !DILocation(line: 221, column: 30, scope: !4244)
!4251 = !DILocation(line: 221, column: 54, scope: !4244)
!4252 = !DILocation(line: 221, column: 45, scope: !4244)
!4253 = !DILocation(line: 217, column: 7, scope: !4244)
!4254 = !DILocation(line: 217, column: 6, scope: !4219)
!4255 = !DILocation(line: 223, column: 3, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 222, column: 2)
!4257 = !DILocation(line: 226, column: 22, scope: !4219)
!4258 = !DILocation(line: 226, column: 2, scope: !4219)
!4259 = !DILocation(line: 228, column: 2, scope: !4219)
!4260 = !DILocation(line: 229, column: 1, scope: !4219)
!4261 = !DILocalVariable(name: "ot", arg: 1, scope: !4049, file: !3, line: 167, type: !3769)
!4262 = !DILocation(line: 167, column: 58, scope: !4049)
!4263 = !DILocalVariable(name: "cuts_default", arg: 2, scope: !4049, file: !3, line: 167, type: !4052)
!4264 = !DILocation(line: 167, column: 72, scope: !4049)
!4265 = !DILocalVariable(name: "prop", scope: !4049, file: !3, line: 177, type: !3977)
!4266 = !DILocation(line: 177, column: 15, scope: !4049)
!4267 = !DILocation(line: 179, column: 21, scope: !4049)
!4268 = !DILocation(line: 179, column: 25, scope: !4049)
!4269 = !DILocation(line: 179, column: 46, scope: !4049)
!4270 = !DILocation(line: 179, column: 9, scope: !4049)
!4271 = !DILocation(line: 179, column: 7, scope: !4049)
!4272 = !DILocation(line: 180, column: 24, scope: !4049)
!4273 = !DILocation(line: 180, column: 2, scope: !4049)
!4274 = !DILocation(line: 182, column: 15, scope: !4049)
!4275 = !DILocation(line: 182, column: 19, scope: !4049)
!4276 = !DILocation(line: 182, column: 2, scope: !4049)
!4277 = !DILocation(line: 185, column: 16, scope: !4049)
!4278 = !DILocation(line: 185, column: 20, scope: !4049)
!4279 = !DILocation(line: 185, column: 2, scope: !4049)
!4280 = !DILocation(line: 189, column: 16, scope: !4049)
!4281 = !DILocation(line: 189, column: 20, scope: !4049)
!4282 = !DILocation(line: 189, column: 2, scope: !4049)
!4283 = !DILocation(line: 192, column: 26, scope: !4049)
!4284 = !DILocation(line: 192, column: 30, scope: !4049)
!4285 = !DILocation(line: 192, column: 9, scope: !4049)
!4286 = !DILocation(line: 192, column: 7, scope: !4049)
!4287 = !DILocation(line: 193, column: 30, scope: !4049)
!4288 = !DILocation(line: 193, column: 2, scope: !4049)
!4289 = !DILocation(line: 194, column: 32, scope: !4049)
!4290 = !DILocation(line: 194, column: 2, scope: !4049)
!4291 = !DILocation(line: 195, column: 27, scope: !4049)
!4292 = !DILocation(line: 195, column: 2, scope: !4049)
!4293 = !DILocation(line: 196, column: 39, scope: !4049)
!4294 = !DILocation(line: 196, column: 2, scope: !4049)
!4295 = !DILocation(line: 197, column: 1, scope: !4049)
!4296 = distinct !DISubprogram(name: "MESH_OT_unsubdivide", scope: !3, file: !3, line: 277, type: !3767, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4297 = !DILocalVariable(name: "ot", arg: 1, scope: !4296, file: !3, line: 277, type: !3769)
!4298 = !DILocation(line: 277, column: 42, scope: !4296)
!4299 = !DILocation(line: 280, column: 2, scope: !4296)
!4300 = !DILocation(line: 280, column: 6, scope: !4296)
!4301 = !DILocation(line: 280, column: 11, scope: !4296)
!4302 = !DILocation(line: 281, column: 2, scope: !4296)
!4303 = !DILocation(line: 281, column: 6, scope: !4296)
!4304 = !DILocation(line: 281, column: 18, scope: !4296)
!4305 = !DILocation(line: 282, column: 2, scope: !4296)
!4306 = !DILocation(line: 282, column: 6, scope: !4296)
!4307 = !DILocation(line: 282, column: 13, scope: !4296)
!4308 = !DILocation(line: 285, column: 2, scope: !4296)
!4309 = !DILocation(line: 285, column: 6, scope: !4296)
!4310 = !DILocation(line: 285, column: 11, scope: !4296)
!4311 = !DILocation(line: 286, column: 2, scope: !4296)
!4312 = !DILocation(line: 286, column: 6, scope: !4296)
!4313 = !DILocation(line: 286, column: 11, scope: !4296)
!4314 = !DILocation(line: 289, column: 2, scope: !4296)
!4315 = !DILocation(line: 289, column: 6, scope: !4296)
!4316 = !DILocation(line: 289, column: 11, scope: !4296)
!4317 = !DILocation(line: 292, column: 14, scope: !4296)
!4318 = !DILocation(line: 292, column: 18, scope: !4296)
!4319 = !DILocation(line: 292, column: 2, scope: !4296)
!4320 = !DILocation(line: 293, column: 1, scope: !4296)
!4321 = distinct !DISubprogram(name: "edbm_unsubdivide_exec", scope: !3, file: !3, line: 250, type: !4116, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4322 = !DILocalVariable(name: "C", arg: 1, scope: !4321, file: !3, line: 250, type: !4118)
!4323 = !DILocation(line: 250, column: 44, scope: !4321)
!4324 = !DILocalVariable(name: "op", arg: 2, scope: !4321, file: !3, line: 250, type: !4120)
!4325 = !DILocation(line: 250, column: 59, scope: !4321)
!4326 = !DILocalVariable(name: "obedit", scope: !4321, file: !3, line: 252, type: !4127)
!4327 = !DILocation(line: 252, column: 10, scope: !4321)
!4328 = !DILocation(line: 252, column: 40, scope: !4321)
!4329 = !DILocation(line: 252, column: 19, scope: !4321)
!4330 = !DILocalVariable(name: "em", scope: !4321, file: !3, line: 253, type: !4133)
!4331 = !DILocation(line: 253, column: 14, scope: !4321)
!4332 = !DILocation(line: 253, column: 44, scope: !4321)
!4333 = !DILocation(line: 253, column: 19, scope: !4321)
!4334 = !DILocalVariable(name: "bmop", scope: !4321, file: !3, line: 254, type: !4335)
!4335 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOperator", file: !48, line: 198, baseType: !3568)
!4336 = !DILocation(line: 254, column: 13, scope: !4321)
!4337 = !DILocalVariable(name: "iterations", scope: !4321, file: !3, line: 256, type: !4052)
!4338 = !DILocation(line: 256, column: 12, scope: !4321)
!4339 = !DILocation(line: 256, column: 37, scope: !4321)
!4340 = !DILocation(line: 256, column: 41, scope: !4321)
!4341 = !DILocation(line: 256, column: 25, scope: !4321)
!4342 = !DILocation(line: 258, column: 15, scope: !4321)
!4343 = !DILocation(line: 258, column: 26, scope: !4321)
!4344 = !DILocation(line: 259, column: 70, scope: !4321)
!4345 = !DILocation(line: 258, column: 2, scope: !4321)
!4346 = !DILocation(line: 261, column: 14, scope: !4321)
!4347 = !DILocation(line: 261, column: 18, scope: !4321)
!4348 = !DILocation(line: 261, column: 2, scope: !4321)
!4349 = !DILocation(line: 263, column: 22, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 263, column: 6)
!4351 = !DILocation(line: 263, column: 33, scope: !4350)
!4352 = !DILocation(line: 263, column: 7, scope: !4350)
!4353 = !DILocation(line: 263, column: 6, scope: !4321)
!4354 = !DILocation(line: 264, column: 3, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 263, column: 44)
!4356 = !DILocation(line: 267, column: 7, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 267, column: 6)
!4358 = !DILocation(line: 267, column: 11, scope: !4357)
!4359 = !DILocation(line: 267, column: 22, scope: !4357)
!4360 = !DILocation(line: 267, column: 43, scope: !4357)
!4361 = !DILocation(line: 267, column: 6, scope: !4321)
!4362 = !DILocation(line: 268, column: 28, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 267, column: 49)
!4364 = !DILocation(line: 268, column: 3, scope: !4363)
!4365 = !DILocation(line: 269, column: 2, scope: !4363)
!4366 = !DILocation(line: 270, column: 24, scope: !4321)
!4367 = !DILocation(line: 270, column: 2, scope: !4321)
!4368 = !DILocation(line: 272, column: 22, scope: !4321)
!4369 = !DILocation(line: 272, column: 2, scope: !4321)
!4370 = !DILocation(line: 274, column: 2, scope: !4321)
!4371 = !DILocation(line: 275, column: 1, scope: !4321)
!4372 = distinct !DISubprogram(name: "EMBM_project_snap_verts", scope: !3, file: !3, line: 295, type: !4373, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{null, !4118, !4375, !4133}
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !3830, line: 267, baseType: !4377)
!4377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !3830, line: 230, size: 3072, elements: !4378)
!4378 = !{!4379, !4381, !4382, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444}
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4377, file: !3830, line: 231, baseType: !4380, size: 64)
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4377, file: !3830, line: 231, baseType: !4380, size: 64, offset: 64)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !4377, file: !3830, line: 233, baseType: !4383, size: 1280, offset: 128)
!4383 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !4384, line: 71, baseType: !4385)
!4384 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !4384, line: 40, size: 1280, elements: !4386)
!4386 = !{!4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4414}
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !4385, file: !4384, line: 41, baseType: !2041, size: 128)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !4385, file: !4384, line: 41, baseType: !2041, size: 128, offset: 128)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !4385, file: !4384, line: 42, baseType: !2938, size: 128, offset: 256)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !4385, file: !4384, line: 42, baseType: !2938, size: 128, offset: 384)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4385, file: !4384, line: 43, baseType: !2938, size: 128, offset: 512)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !4385, file: !4384, line: 45, baseType: !1964, size: 64, offset: 640)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4385, file: !4384, line: 45, baseType: !1964, size: 64, offset: 704)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !4385, file: !4384, line: 46, baseType: !1344, size: 32, offset: 768)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !4385, file: !4384, line: 46, baseType: !1344, size: 32, offset: 800)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !4385, file: !4384, line: 48, baseType: !1373, size: 16, offset: 832)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !4385, file: !4384, line: 49, baseType: !1373, size: 16, offset: 848)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !4385, file: !4384, line: 51, baseType: !1373, size: 16, offset: 864)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !4385, file: !4384, line: 52, baseType: !1373, size: 16, offset: 880)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !4385, file: !4384, line: 53, baseType: !1373, size: 16, offset: 896)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4385, file: !4384, line: 55, baseType: !1373, size: 16, offset: 912)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4385, file: !4384, line: 56, baseType: !1373, size: 16, offset: 928)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !4385, file: !4384, line: 58, baseType: !1373, size: 16, offset: 944)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !4385, file: !4384, line: 58, baseType: !1373, size: 16, offset: 960)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !4385, file: !4384, line: 59, baseType: !1373, size: 16, offset: 976)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !4385, file: !4384, line: 59, baseType: !1373, size: 16, offset: 992)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4385, file: !4384, line: 61, baseType: !1373, size: 16, offset: 1008)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !4385, file: !4384, line: 63, baseType: !3277, size: 64, offset: 1024)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !4385, file: !4384, line: 64, baseType: !135, size: 32, offset: 1088)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !4385, file: !4384, line: 65, baseType: !135, size: 32, offset: 1120)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !4385, file: !4384, line: 68, baseType: !4412, size: 64, offset: 1152)
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4413, size: 64)
!4413 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !4384, line: 68, flags: DIFlagFwdDecl)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !4385, file: !4384, line: 69, baseType: !3815, size: 64, offset: 1216)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !4377, file: !3830, line: 234, baseType: !2938, size: 128, offset: 1408)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !4377, file: !3830, line: 235, baseType: !2938, size: 128, offset: 1536)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !4377, file: !3830, line: 236, baseType: !1373, size: 16, offset: 1664)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !4377, file: !3830, line: 236, baseType: !1373, size: 16, offset: 1680)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !4377, file: !3830, line: 238, baseType: !1373, size: 16, offset: 1696)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !4377, file: !3830, line: 239, baseType: !1373, size: 16, offset: 1712)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !4377, file: !3830, line: 240, baseType: !1373, size: 16, offset: 1728)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4377, file: !3830, line: 241, baseType: !1373, size: 16, offset: 1744)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !4377, file: !3830, line: 243, baseType: !1344, size: 32, offset: 1760)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !4377, file: !3830, line: 244, baseType: !1373, size: 16, offset: 1792)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !4377, file: !3830, line: 244, baseType: !1373, size: 16, offset: 1808)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !4377, file: !3830, line: 246, baseType: !1373, size: 16, offset: 1824)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !4377, file: !3830, line: 247, baseType: !1373, size: 16, offset: 1840)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !4377, file: !3830, line: 248, baseType: !1373, size: 16, offset: 1856)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !4377, file: !3830, line: 249, baseType: !1373, size: 16, offset: 1872)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !4377, file: !3830, line: 250, baseType: !1373, size: 16, offset: 1888)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4377, file: !3830, line: 251, baseType: !1373, size: 16, offset: 1904)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4377, file: !3830, line: 253, baseType: !4433, size: 64, offset: 1920)
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4434, size: 64)
!4434 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !3830, line: 42, flags: DIFlagFwdDecl)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !4377, file: !3830, line: 255, baseType: !1490, size: 128, offset: 1984)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !4377, file: !3830, line: 256, baseType: !1490, size: 128, offset: 2112)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !4377, file: !3830, line: 257, baseType: !1490, size: 128, offset: 2240)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !4377, file: !3830, line: 258, baseType: !1490, size: 128, offset: 2368)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !4377, file: !3830, line: 259, baseType: !1490, size: 128, offset: 2496)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !4377, file: !3830, line: 260, baseType: !1490, size: 128, offset: 2624)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !4377, file: !3830, line: 261, baseType: !1490, size: 128, offset: 2752)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !4377, file: !3830, line: 263, baseType: !3815, size: 64, offset: 2880)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !4377, file: !3830, line: 265, baseType: !1836, size: 64, offset: 2944)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !4377, file: !3830, line: 266, baseType: !1343, size: 64, offset: 3008)
!4445 = !DILocalVariable(name: "C", arg: 1, scope: !4372, file: !3, line: 295, type: !4118)
!4446 = !DILocation(line: 295, column: 40, scope: !4372)
!4447 = !DILocalVariable(name: "ar", arg: 2, scope: !4372, file: !3, line: 295, type: !4375)
!4448 = !DILocation(line: 295, column: 52, scope: !4372)
!4449 = !DILocalVariable(name: "em", arg: 3, scope: !4372, file: !3, line: 295, type: !4133)
!4450 = !DILocation(line: 295, column: 68, scope: !4372)
!4451 = !DILocalVariable(name: "obedit", scope: !4372, file: !3, line: 297, type: !4127)
!4452 = !DILocation(line: 297, column: 10, scope: !4372)
!4453 = !DILocation(line: 297, column: 19, scope: !4372)
!4454 = !DILocation(line: 297, column: 23, scope: !4372)
!4455 = !DILocalVariable(name: "iter", scope: !4372, file: !3, line: 298, type: !4456)
!4456 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !86, line: 186, baseType: !4457)
!4457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !86, line: 164, size: 512, elements: !4458)
!4458 = !{!4459, !4539, !4540, !4541, !4542}
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4457, file: !86, line: 179, baseType: !4460, size: 320)
!4460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4457, file: !86, line: 166, size: 320, elements: !4461)
!4461 = !{!4462, !4477, !4483, !4491, !4499, !4505, !4511, !4517, !4521, !4527, !4533}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !4460, file: !86, line: 167, baseType: !4463, size: 192)
!4463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !86, line: 113, size: 192, elements: !4464)
!4464 = !{!4465}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !4463, file: !86, line: 114, baseType: !4466, size: 192)
!4466 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !4467, line: 80, baseType: !4468)
!4467 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !4467, line: 76, size: 192, elements: !4469)
!4469 = !{!4470, !4473, !4476}
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !4468, file: !4467, line: 77, baseType: !4471, size: 64)
!4471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4472, size: 64)
!4472 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !4467, line: 47, baseType: !3549)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !4468, file: !4467, line: 78, baseType: !4474, size: 64, offset: 64)
!4474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4475, size: 64)
!4475 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !4467, line: 45, flags: DIFlagFwdDecl)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !4468, file: !4467, line: 79, baseType: !7, size: 32, offset: 128)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !4460, file: !86, line: 169, baseType: !4478, size: 192)
!4478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !86, line: 116, size: 192, elements: !4479)
!4479 = !{!4480, !4481, !4482}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4478, file: !86, line: 117, baseType: !1354, size: 64)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !4478, file: !86, line: 118, baseType: !1418, size: 64, offset: 64)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !4478, file: !86, line: 118, baseType: !1418, size: 64, offset: 128)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !4460, file: !86, line: 170, baseType: !4484, size: 320)
!4484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !86, line: 120, size: 320, elements: !4485)
!4485 = !{!4486, !4487, !4488, !4489, !4490}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4484, file: !86, line: 121, baseType: !1354, size: 64)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4484, file: !86, line: 122, baseType: !1402, size: 64, offset: 64)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4484, file: !86, line: 122, baseType: !1402, size: 64, offset: 128)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !4484, file: !86, line: 123, baseType: !1418, size: 64, offset: 192)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !4484, file: !86, line: 123, baseType: !1418, size: 64, offset: 256)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !4460, file: !86, line: 171, baseType: !4492, size: 320)
!4492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !86, line: 125, size: 320, elements: !4493)
!4493 = !{!4494, !4495, !4496, !4497, !4498}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4492, file: !86, line: 126, baseType: !1354, size: 64)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4492, file: !86, line: 127, baseType: !1402, size: 64, offset: 64)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4492, file: !86, line: 127, baseType: !1402, size: 64, offset: 128)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !4492, file: !86, line: 128, baseType: !1418, size: 64, offset: 192)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !4492, file: !86, line: 128, baseType: !1418, size: 64, offset: 256)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !4460, file: !86, line: 172, baseType: !4500, size: 192)
!4500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !86, line: 130, size: 192, elements: !4501)
!4501 = !{!4502, !4503, !4504}
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !4500, file: !86, line: 131, baseType: !1418, size: 64)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4500, file: !86, line: 132, baseType: !1402, size: 64, offset: 64)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4500, file: !86, line: 132, baseType: !1402, size: 64, offset: 128)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !4460, file: !86, line: 173, baseType: !4506, size: 192)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !86, line: 134, size: 192, elements: !4507)
!4507 = !{!4508, !4509, !4510}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !4506, file: !86, line: 135, baseType: !1402, size: 64)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4506, file: !86, line: 136, baseType: !1402, size: 64, offset: 64)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4506, file: !86, line: 136, baseType: !1402, size: 64, offset: 128)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !4460, file: !86, line: 174, baseType: !4512, size: 192)
!4512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !86, line: 138, size: 192, elements: !4513)
!4513 = !{!4514, !4515, !4516}
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !4512, file: !86, line: 139, baseType: !1418, size: 64)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4512, file: !86, line: 140, baseType: !1402, size: 64, offset: 64)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4512, file: !86, line: 140, baseType: !1402, size: 64, offset: 128)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !4460, file: !86, line: 175, baseType: !4518, size: 64)
!4518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !86, line: 142, size: 64, elements: !4519)
!4519 = !{!4520}
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !4518, file: !86, line: 143, baseType: !1418, size: 64)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !4460, file: !86, line: 176, baseType: !4522, size: 192)
!4522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !86, line: 145, size: 192, elements: !4523)
!4523 = !{!4524, !4525, !4526}
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !4522, file: !86, line: 146, baseType: !1420, size: 64)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4522, file: !86, line: 147, baseType: !1402, size: 64, offset: 64)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4522, file: !86, line: 147, baseType: !1402, size: 64, offset: 128)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !4460, file: !86, line: 177, baseType: !4528, size: 192)
!4528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !86, line: 149, size: 192, elements: !4529)
!4529 = !{!4530, !4531, !4532}
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !4528, file: !86, line: 150, baseType: !1420, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4528, file: !86, line: 151, baseType: !1402, size: 64, offset: 64)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4528, file: !86, line: 151, baseType: !1402, size: 64, offset: 128)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !4460, file: !86, line: 178, baseType: !4534, size: 192)
!4534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !86, line: 153, size: 192, elements: !4535)
!4535 = !{!4536, !4537, !4538}
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !4534, file: !86, line: 154, baseType: !1420, size: 64)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !4534, file: !86, line: 155, baseType: !1402, size: 64, offset: 64)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !4534, file: !86, line: 155, baseType: !1402, size: 64, offset: 128)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !4457, file: !86, line: 181, baseType: !1346, size: 64, offset: 320)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !4457, file: !86, line: 182, baseType: !1350, size: 64, offset: 384)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4457, file: !86, line: 184, baseType: !135, size: 32, offset: 448)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !4457, file: !86, line: 185, baseType: !1365, size: 8, offset: 480)
!4543 = !DILocation(line: 298, column: 9, scope: !4372)
!4544 = !DILocalVariable(name: "eve", scope: !4372, file: !3, line: 299, type: !1354)
!4545 = !DILocation(line: 299, column: 10, scope: !4372)
!4546 = !DILocation(line: 301, column: 27, scope: !4372)
!4547 = !DILocation(line: 301, column: 35, scope: !4372)
!4548 = !DILocation(line: 301, column: 39, scope: !4372)
!4549 = !DILocation(line: 301, column: 2, scope: !4372)
!4550 = !DILocation(line: 303, column: 2, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 303, column: 2)
!4552 = !DILocation(line: 303, column: 2, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 303, column: 2)
!4554 = !DILocation(line: 304, column: 7, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 304, column: 7)
!4556 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 303, column: 54)
!4557 = !DILocation(line: 304, column: 7, scope: !4556)
!4558 = !DILocalVariable(name: "mval", scope: !4559, file: !3, line: 305, type: !1964)
!4559 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 304, column: 47)
!4560 = !DILocation(line: 305, column: 10, scope: !4559)
!4561 = !DILocalVariable(name: "co_proj", scope: !4559, file: !3, line: 305, type: !1375)
!4562 = !DILocation(line: 305, column: 19, scope: !4559)
!4563 = !DILocalVariable(name: "no_dummy", scope: !4559, file: !3, line: 305, type: !1375)
!4564 = !DILocation(line: 305, column: 31, scope: !4559)
!4565 = !DILocalVariable(name: "dist_px_dummy", scope: !4559, file: !3, line: 306, type: !1344)
!4566 = !DILocation(line: 306, column: 10, scope: !4559)
!4567 = !DILocation(line: 307, column: 39, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 307, column: 8)
!4569 = !DILocation(line: 307, column: 43, scope: !4568)
!4570 = !DILocation(line: 307, column: 48, scope: !4568)
!4571 = !DILocation(line: 307, column: 52, scope: !4568)
!4572 = !DILocation(line: 307, column: 8, scope: !4568)
!4573 = !DILocation(line: 307, column: 77, scope: !4568)
!4574 = !DILocation(line: 307, column: 8, scope: !4559)
!4575 = !DILocation(line: 308, column: 28, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 308, column: 9)
!4577 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 307, column: 97)
!4578 = !DILocation(line: 308, column: 31, scope: !4576)
!4579 = !DILocation(line: 308, column: 53, scope: !4576)
!4580 = !DILocation(line: 308, column: 62, scope: !4576)
!4581 = !DILocation(line: 308, column: 9, scope: !4576)
!4582 = !DILocation(line: 308, column: 9, scope: !4577)
!4583 = !DILocation(line: 309, column: 18, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 308, column: 90)
!4585 = !DILocation(line: 309, column: 23, scope: !4584)
!4586 = !DILocation(line: 309, column: 27, scope: !4584)
!4587 = !DILocation(line: 309, column: 35, scope: !4584)
!4588 = !DILocation(line: 309, column: 41, scope: !4584)
!4589 = !DILocation(line: 309, column: 6, scope: !4584)
!4590 = !DILocation(line: 310, column: 5, scope: !4584)
!4591 = !DILocation(line: 311, column: 4, scope: !4577)
!4592 = !DILocation(line: 312, column: 3, scope: !4559)
!4593 = !DILocation(line: 313, column: 2, scope: !4556)
!4594 = distinct !{!4594, !4550, !4595}
!4595 = !DILocation(line: 313, column: 2, scope: !4551)
!4596 = !DILocation(line: 314, column: 1, scope: !4372)
!4597 = distinct !DISubprogram(name: "BM_iter_new", scope: !4598, file: !4598, line: 172, type: !4599, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4598 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!1343, !4601, !3610, !3576, !1343}
!4601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4602 = !DILocalVariable(name: "iter", arg: 1, scope: !4597, file: !4598, line: 172, type: !4601)
!4603 = !DILocation(line: 172, column: 38, scope: !4597)
!4604 = !DILocalVariable(name: "bm", arg: 2, scope: !4597, file: !4598, line: 172, type: !3610)
!4605 = !DILocation(line: 172, column: 51, scope: !4597)
!4606 = !DILocalVariable(name: "itype", arg: 3, scope: !4597, file: !4598, line: 172, type: !3576)
!4607 = !DILocation(line: 172, column: 66, scope: !4597)
!4608 = !DILocalVariable(name: "data", arg: 4, scope: !4597, file: !4598, line: 172, type: !1343)
!4609 = !DILocation(line: 172, column: 79, scope: !4597)
!4610 = !DILocation(line: 174, column: 6, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4597, file: !4598, line: 174, column: 6)
!4612 = !DILocation(line: 174, column: 6, scope: !4597)
!4613 = !DILocation(line: 175, column: 23, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4611, file: !4598, line: 174, column: 51)
!4615 = !DILocation(line: 175, column: 10, scope: !4614)
!4616 = !DILocation(line: 175, column: 3, scope: !4614)
!4617 = !DILocation(line: 178, column: 3, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4611, file: !4598, line: 177, column: 7)
!4619 = !DILocation(line: 180, column: 1, scope: !4597)
!4620 = distinct !DISubprogram(name: "_bm_elem_flag_test", scope: !4621, file: !4621, line: 42, type: !4622, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4621 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4622 = !DISubroutineType(types: !4623)
!4623 = !{!1365, !4624, !3576}
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4625, size: 64)
!4625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1359)
!4626 = !DILocalVariable(name: "head", arg: 1, scope: !4620, file: !4621, line: 42, type: !4624)
!4627 = !DILocation(line: 42, column: 52, scope: !4620)
!4628 = !DILocalVariable(name: "hflag", arg: 2, scope: !4620, file: !4621, line: 42, type: !3576)
!4629 = !DILocation(line: 42, column: 69, scope: !4620)
!4630 = !DILocation(line: 44, column: 9, scope: !4620)
!4631 = !DILocation(line: 44, column: 15, scope: !4620)
!4632 = !DILocation(line: 44, column: 23, scope: !4620)
!4633 = !DILocation(line: 44, column: 21, scope: !4620)
!4634 = !DILocation(line: 44, column: 2, scope: !4620)
!4635 = distinct !DISubprogram(name: "BM_iter_step", scope: !4598, file: !4598, line: 40, type: !4636, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!1343, !4601}
!4638 = !DILocalVariable(name: "iter", arg: 1, scope: !4635, file: !4598, line: 40, type: !4601)
!4639 = !DILocation(line: 40, column: 39, scope: !4635)
!4640 = !DILocation(line: 42, column: 9, scope: !4635)
!4641 = !DILocation(line: 42, column: 15, scope: !4635)
!4642 = !DILocation(line: 42, column: 20, scope: !4635)
!4643 = !DILocation(line: 42, column: 2, scope: !4635)
!4644 = distinct !DISubprogram(name: "MESH_OT_delete", scope: !3, file: !3, line: 371, type: !3767, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4645 = !DILocalVariable(name: "ot", arg: 1, scope: !4644, file: !3, line: 371, type: !3769)
!4646 = !DILocation(line: 371, column: 37, scope: !4644)
!4647 = !DILocation(line: 374, column: 2, scope: !4644)
!4648 = !DILocation(line: 374, column: 6, scope: !4644)
!4649 = !DILocation(line: 374, column: 11, scope: !4644)
!4650 = !DILocation(line: 375, column: 2, scope: !4644)
!4651 = !DILocation(line: 375, column: 6, scope: !4644)
!4652 = !DILocation(line: 375, column: 18, scope: !4644)
!4653 = !DILocation(line: 376, column: 2, scope: !4644)
!4654 = !DILocation(line: 376, column: 6, scope: !4644)
!4655 = !DILocation(line: 376, column: 13, scope: !4644)
!4656 = !DILocation(line: 379, column: 2, scope: !4644)
!4657 = !DILocation(line: 379, column: 6, scope: !4644)
!4658 = !DILocation(line: 379, column: 13, scope: !4644)
!4659 = !DILocation(line: 380, column: 2, scope: !4644)
!4660 = !DILocation(line: 380, column: 6, scope: !4644)
!4661 = !DILocation(line: 380, column: 11, scope: !4644)
!4662 = !DILocation(line: 382, column: 2, scope: !4644)
!4663 = !DILocation(line: 382, column: 6, scope: !4644)
!4664 = !DILocation(line: 382, column: 11, scope: !4644)
!4665 = !DILocation(line: 385, column: 2, scope: !4644)
!4666 = !DILocation(line: 385, column: 6, scope: !4644)
!4667 = !DILocation(line: 385, column: 11, scope: !4644)
!4668 = !DILocation(line: 388, column: 26, scope: !4644)
!4669 = !DILocation(line: 388, column: 30, scope: !4644)
!4670 = !DILocation(line: 388, column: 13, scope: !4644)
!4671 = !DILocation(line: 388, column: 2, scope: !4644)
!4672 = !DILocation(line: 388, column: 6, scope: !4644)
!4673 = !DILocation(line: 388, column: 11, scope: !4644)
!4674 = !DILocation(line: 389, column: 1, scope: !4644)
!4675 = distinct !DISubprogram(name: "edbm_delete_exec", scope: !3, file: !3, line: 333, type: !4116, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4676 = !DILocalVariable(name: "C", arg: 1, scope: !4675, file: !3, line: 333, type: !4118)
!4677 = !DILocation(line: 333, column: 39, scope: !4675)
!4678 = !DILocalVariable(name: "op", arg: 2, scope: !4675, file: !3, line: 333, type: !4120)
!4679 = !DILocation(line: 333, column: 54, scope: !4675)
!4680 = !DILocalVariable(name: "obedit", scope: !4675, file: !3, line: 335, type: !4127)
!4681 = !DILocation(line: 335, column: 10, scope: !4675)
!4682 = !DILocation(line: 335, column: 40, scope: !4675)
!4683 = !DILocation(line: 335, column: 19, scope: !4675)
!4684 = !DILocalVariable(name: "em", scope: !4675, file: !3, line: 336, type: !4133)
!4685 = !DILocation(line: 336, column: 14, scope: !4675)
!4686 = !DILocation(line: 336, column: 44, scope: !4675)
!4687 = !DILocation(line: 336, column: 19, scope: !4675)
!4688 = !DILocalVariable(name: "type", scope: !4675, file: !3, line: 337, type: !4052)
!4689 = !DILocation(line: 337, column: 12, scope: !4675)
!4690 = !DILocation(line: 337, column: 32, scope: !4675)
!4691 = !DILocation(line: 337, column: 36, scope: !4675)
!4692 = !DILocation(line: 337, column: 19, scope: !4675)
!4693 = !DILocation(line: 339, column: 6, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 339, column: 6)
!4695 = !DILocation(line: 339, column: 11, scope: !4694)
!4696 = !DILocation(line: 339, column: 6, scope: !4675)
!4697 = !DILocation(line: 340, column: 22, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 340, column: 7)
!4699 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 339, column: 17)
!4700 = !DILocation(line: 340, column: 26, scope: !4698)
!4701 = !DILocation(line: 340, column: 8, scope: !4698)
!4702 = !DILocation(line: 340, column: 7, scope: !4699)
!4703 = !DILocation(line: 341, column: 4, scope: !4698)
!4704 = !DILocation(line: 342, column: 2, scope: !4699)
!4705 = !DILocation(line: 343, column: 11, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 343, column: 11)
!4707 = !DILocation(line: 343, column: 16, scope: !4706)
!4708 = !DILocation(line: 343, column: 11, scope: !4694)
!4709 = !DILocation(line: 344, column: 22, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 344, column: 7)
!4711 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 343, column: 22)
!4712 = !DILocation(line: 344, column: 26, scope: !4710)
!4713 = !DILocation(line: 344, column: 8, scope: !4710)
!4714 = !DILocation(line: 344, column: 7, scope: !4711)
!4715 = !DILocation(line: 345, column: 4, scope: !4710)
!4716 = !DILocation(line: 346, column: 2, scope: !4711)
!4717 = !DILocation(line: 347, column: 11, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 347, column: 11)
!4719 = !DILocation(line: 347, column: 16, scope: !4718)
!4720 = !DILocation(line: 347, column: 11, scope: !4706)
!4721 = !DILocation(line: 348, column: 22, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 348, column: 7)
!4723 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 347, column: 22)
!4724 = !DILocation(line: 348, column: 26, scope: !4722)
!4725 = !DILocation(line: 348, column: 8, scope: !4722)
!4726 = !DILocation(line: 348, column: 7, scope: !4723)
!4727 = !DILocation(line: 349, column: 4, scope: !4722)
!4728 = !DILocation(line: 350, column: 2, scope: !4723)
!4729 = !DILocation(line: 351, column: 11, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 351, column: 11)
!4731 = !DILocation(line: 351, column: 16, scope: !4730)
!4732 = !DILocation(line: 351, column: 11, scope: !4718)
!4733 = !DILocation(line: 352, column: 22, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 352, column: 7)
!4735 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 351, column: 22)
!4736 = !DILocation(line: 352, column: 26, scope: !4734)
!4737 = !DILocation(line: 352, column: 8, scope: !4734)
!4738 = !DILocation(line: 352, column: 7, scope: !4735)
!4739 = !DILocation(line: 353, column: 4, scope: !4734)
!4740 = !DILocation(line: 354, column: 2, scope: !4735)
!4741 = !DILocation(line: 355, column: 11, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 355, column: 11)
!4743 = !DILocation(line: 355, column: 16, scope: !4742)
!4744 = !DILocation(line: 355, column: 11, scope: !4730)
!4745 = !DILocation(line: 357, column: 22, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 357, column: 7)
!4747 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 355, column: 22)
!4748 = !DILocation(line: 357, column: 26, scope: !4746)
!4749 = !DILocation(line: 357, column: 8, scope: !4746)
!4750 = !DILocation(line: 357, column: 7, scope: !4747)
!4751 = !DILocation(line: 360, column: 4, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 359, column: 3)
!4753 = !DILocation(line: 362, column: 2, scope: !4747)
!4754 = !DILocation(line: 364, column: 24, scope: !4675)
!4755 = !DILocation(line: 364, column: 2, scope: !4675)
!4756 = !DILocation(line: 366, column: 22, scope: !4675)
!4757 = !DILocation(line: 366, column: 2, scope: !4675)
!4758 = !DILocation(line: 368, column: 2, scope: !4675)
!4759 = !DILocation(line: 369, column: 1, scope: !4675)
!4760 = distinct !DISubprogram(name: "MESH_OT_delete_loose", scope: !3, file: !3, line: 468, type: !3767, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4761 = !DILocalVariable(name: "ot", arg: 1, scope: !4760, file: !3, line: 468, type: !3769)
!4762 = !DILocation(line: 468, column: 43, scope: !4760)
!4763 = !DILocation(line: 471, column: 2, scope: !4760)
!4764 = !DILocation(line: 471, column: 6, scope: !4760)
!4765 = !DILocation(line: 471, column: 11, scope: !4760)
!4766 = !DILocation(line: 472, column: 2, scope: !4760)
!4767 = !DILocation(line: 472, column: 6, scope: !4760)
!4768 = !DILocation(line: 472, column: 18, scope: !4760)
!4769 = !DILocation(line: 473, column: 2, scope: !4760)
!4770 = !DILocation(line: 473, column: 6, scope: !4760)
!4771 = !DILocation(line: 473, column: 13, scope: !4760)
!4772 = !DILocation(line: 476, column: 2, scope: !4760)
!4773 = !DILocation(line: 476, column: 6, scope: !4760)
!4774 = !DILocation(line: 476, column: 11, scope: !4760)
!4775 = !DILocation(line: 478, column: 2, scope: !4760)
!4776 = !DILocation(line: 478, column: 6, scope: !4760)
!4777 = !DILocation(line: 478, column: 11, scope: !4760)
!4778 = !DILocation(line: 481, column: 2, scope: !4760)
!4779 = !DILocation(line: 481, column: 6, scope: !4760)
!4780 = !DILocation(line: 481, column: 11, scope: !4760)
!4781 = !DILocation(line: 484, column: 18, scope: !4760)
!4782 = !DILocation(line: 484, column: 22, scope: !4760)
!4783 = !DILocation(line: 484, column: 2, scope: !4760)
!4784 = !DILocation(line: 485, column: 18, scope: !4760)
!4785 = !DILocation(line: 485, column: 22, scope: !4760)
!4786 = !DILocation(line: 485, column: 2, scope: !4760)
!4787 = !DILocation(line: 486, column: 18, scope: !4760)
!4788 = !DILocation(line: 486, column: 22, scope: !4760)
!4789 = !DILocation(line: 486, column: 2, scope: !4760)
!4790 = !DILocation(line: 487, column: 1, scope: !4760)
!4791 = distinct !DISubprogram(name: "edbm_delete_loose_exec", scope: !3, file: !3, line: 406, type: !4116, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4792 = !DILocalVariable(name: "C", arg: 1, scope: !4791, file: !3, line: 406, type: !4118)
!4793 = !DILocation(line: 406, column: 45, scope: !4791)
!4794 = !DILocalVariable(name: "op", arg: 2, scope: !4791, file: !3, line: 406, type: !4120)
!4795 = !DILocation(line: 406, column: 60, scope: !4791)
!4796 = !DILocalVariable(name: "obedit", scope: !4791, file: !3, line: 408, type: !4127)
!4797 = !DILocation(line: 408, column: 10, scope: !4791)
!4798 = !DILocation(line: 408, column: 40, scope: !4791)
!4799 = !DILocation(line: 408, column: 19, scope: !4791)
!4800 = !DILocalVariable(name: "em", scope: !4791, file: !3, line: 409, type: !4133)
!4801 = !DILocation(line: 409, column: 14, scope: !4791)
!4802 = !DILocation(line: 409, column: 44, scope: !4791)
!4803 = !DILocation(line: 409, column: 19, scope: !4791)
!4804 = !DILocalVariable(name: "bm", scope: !4791, file: !3, line: 410, type: !3610)
!4805 = !DILocation(line: 410, column: 9, scope: !4791)
!4806 = !DILocation(line: 410, column: 14, scope: !4791)
!4807 = !DILocation(line: 410, column: 18, scope: !4791)
!4808 = !DILocalVariable(name: "iter", scope: !4791, file: !3, line: 411, type: !4456)
!4809 = !DILocation(line: 411, column: 9, scope: !4791)
!4810 = !DILocalVariable(name: "use_verts", scope: !4791, file: !3, line: 413, type: !4811)
!4811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2530)
!4812 = !DILocation(line: 413, column: 13, scope: !4791)
!4813 = !DILocation(line: 413, column: 42, scope: !4791)
!4814 = !DILocation(line: 413, column: 46, scope: !4791)
!4815 = !DILocation(line: 413, column: 26, scope: !4791)
!4816 = !DILocation(line: 413, column: 64, scope: !4791)
!4817 = !DILocation(line: 413, column: 67, scope: !4791)
!4818 = !DILocation(line: 413, column: 71, scope: !4791)
!4819 = !DILocation(line: 0, scope: !4791)
!4820 = !DILocation(line: 413, column: 25, scope: !4791)
!4821 = !DILocalVariable(name: "use_edges", scope: !4791, file: !3, line: 414, type: !4811)
!4822 = !DILocation(line: 414, column: 13, scope: !4791)
!4823 = !DILocation(line: 414, column: 42, scope: !4791)
!4824 = !DILocation(line: 414, column: 46, scope: !4791)
!4825 = !DILocation(line: 414, column: 26, scope: !4791)
!4826 = !DILocation(line: 414, column: 64, scope: !4791)
!4827 = !DILocation(line: 414, column: 67, scope: !4791)
!4828 = !DILocation(line: 414, column: 71, scope: !4791)
!4829 = !DILocation(line: 414, column: 25, scope: !4791)
!4830 = !DILocalVariable(name: "use_faces", scope: !4791, file: !3, line: 415, type: !4811)
!4831 = !DILocation(line: 415, column: 13, scope: !4791)
!4832 = !DILocation(line: 415, column: 42, scope: !4791)
!4833 = !DILocation(line: 415, column: 46, scope: !4791)
!4834 = !DILocation(line: 415, column: 26, scope: !4791)
!4835 = !DILocation(line: 415, column: 64, scope: !4791)
!4836 = !DILocation(line: 415, column: 67, scope: !4791)
!4837 = !DILocation(line: 415, column: 71, scope: !4791)
!4838 = !DILocation(line: 415, column: 25, scope: !4791)
!4839 = !DILocalVariable(name: "totelem", scope: !4791, file: !3, line: 417, type: !4840)
!4840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4052, size: 96, elements: !1376)
!4841 = !DILocation(line: 417, column: 12, scope: !4791)
!4842 = !DILocation(line: 417, column: 25, scope: !4791)
!4843 = !DILocation(line: 417, column: 26, scope: !4791)
!4844 = !DILocation(line: 417, column: 30, scope: !4791)
!4845 = !DILocation(line: 417, column: 39, scope: !4791)
!4846 = !DILocation(line: 417, column: 43, scope: !4791)
!4847 = !DILocation(line: 417, column: 52, scope: !4791)
!4848 = !DILocation(line: 417, column: 56, scope: !4791)
!4849 = !DILocation(line: 420, column: 33, scope: !4791)
!4850 = !DILocation(line: 420, column: 2, scope: !4791)
!4851 = !DILocation(line: 422, column: 6, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 422, column: 6)
!4853 = !DILocation(line: 422, column: 6, scope: !4791)
!4854 = !DILocalVariable(name: "f", scope: !4855, file: !3, line: 423, type: !1420)
!4855 = distinct !DILexicalBlock(scope: !4852, file: !3, line: 422, column: 17)
!4856 = !DILocation(line: 423, column: 11, scope: !4855)
!4857 = !DILocation(line: 425, column: 3, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 425, column: 3)
!4859 = !DILocation(line: 425, column: 3, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 425, column: 3)
!4861 = !DILocation(line: 426, column: 8, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 426, column: 8)
!4863 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 425, column: 49)
!4864 = !DILocation(line: 426, column: 8, scope: !4863)
!4865 = !DILocation(line: 427, column: 5, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 426, column: 46)
!4867 = !DILocation(line: 428, column: 4, scope: !4866)
!4868 = !DILocation(line: 429, column: 3, scope: !4863)
!4869 = distinct !{!4869, !4857, !4870}
!4870 = !DILocation(line: 429, column: 3, scope: !4858)
!4871 = !DILocation(line: 431, column: 32, scope: !4855)
!4872 = !DILocation(line: 431, column: 3, scope: !4855)
!4873 = !DILocation(line: 432, column: 2, scope: !4855)
!4874 = !DILocation(line: 434, column: 6, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 434, column: 6)
!4876 = !DILocation(line: 434, column: 6, scope: !4791)
!4877 = !DILocalVariable(name: "e", scope: !4878, file: !3, line: 435, type: !1418)
!4878 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 434, column: 17)
!4879 = !DILocation(line: 435, column: 11, scope: !4878)
!4880 = !DILocation(line: 437, column: 3, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 437, column: 3)
!4882 = !DILocation(line: 437, column: 3, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 437, column: 3)
!4884 = !DILocation(line: 438, column: 8, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 438, column: 8)
!4886 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 437, column: 49)
!4887 = !DILocation(line: 438, column: 8, scope: !4886)
!4888 = !DILocation(line: 439, column: 5, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 438, column: 46)
!4890 = !DILocation(line: 440, column: 4, scope: !4889)
!4891 = !DILocation(line: 441, column: 3, scope: !4886)
!4892 = distinct !{!4892, !4880, !4893}
!4893 = !DILocation(line: 441, column: 3, scope: !4881)
!4894 = !DILocation(line: 443, column: 32, scope: !4878)
!4895 = !DILocation(line: 443, column: 3, scope: !4878)
!4896 = !DILocation(line: 444, column: 2, scope: !4878)
!4897 = !DILocation(line: 446, column: 6, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 446, column: 6)
!4899 = !DILocation(line: 446, column: 6, scope: !4791)
!4900 = !DILocalVariable(name: "v", scope: !4901, file: !3, line: 447, type: !1354)
!4901 = distinct !DILexicalBlock(scope: !4898, file: !3, line: 446, column: 17)
!4902 = !DILocation(line: 447, column: 11, scope: !4901)
!4903 = !DILocation(line: 449, column: 3, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 449, column: 3)
!4905 = !DILocation(line: 449, column: 3, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 449, column: 3)
!4907 = !DILocation(line: 450, column: 8, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 450, column: 8)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 449, column: 49)
!4910 = !DILocation(line: 450, column: 8, scope: !4909)
!4911 = !DILocation(line: 451, column: 5, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4908, file: !3, line: 450, column: 46)
!4913 = !DILocation(line: 452, column: 4, scope: !4912)
!4914 = !DILocation(line: 453, column: 3, scope: !4909)
!4915 = distinct !{!4915, !4903, !4916}
!4916 = !DILocation(line: 453, column: 3, scope: !4904)
!4917 = !DILocation(line: 455, column: 32, scope: !4901)
!4918 = !DILocation(line: 455, column: 3, scope: !4901)
!4919 = !DILocation(line: 456, column: 2, scope: !4901)
!4920 = !DILocation(line: 458, column: 24, scope: !4791)
!4921 = !DILocation(line: 458, column: 2, scope: !4791)
!4922 = !DILocation(line: 460, column: 22, scope: !4791)
!4923 = !DILocation(line: 460, column: 2, scope: !4791)
!4924 = !DILocation(line: 462, column: 26, scope: !4791)
!4925 = !DILocation(line: 462, column: 30, scope: !4791)
!4926 = !DILocation(line: 462, column: 39, scope: !4791)
!4927 = !DILocation(line: 462, column: 43, scope: !4791)
!4928 = !DILocation(line: 462, column: 2, scope: !4791)
!4929 = !DILocation(line: 464, column: 2, scope: !4791)
!4930 = distinct !DISubprogram(name: "MESH_OT_edge_collapse", scope: !3, file: !3, line: 503, type: !3767, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4931 = !DILocalVariable(name: "ot", arg: 1, scope: !4930, file: !3, line: 503, type: !3769)
!4932 = !DILocation(line: 503, column: 44, scope: !4930)
!4933 = !DILocation(line: 506, column: 2, scope: !4930)
!4934 = !DILocation(line: 506, column: 6, scope: !4930)
!4935 = !DILocation(line: 506, column: 11, scope: !4930)
!4936 = !DILocation(line: 507, column: 2, scope: !4930)
!4937 = !DILocation(line: 507, column: 6, scope: !4930)
!4938 = !DILocation(line: 507, column: 18, scope: !4930)
!4939 = !DILocation(line: 508, column: 2, scope: !4930)
!4940 = !DILocation(line: 508, column: 6, scope: !4930)
!4941 = !DILocation(line: 508, column: 13, scope: !4930)
!4942 = !DILocation(line: 511, column: 2, scope: !4930)
!4943 = !DILocation(line: 511, column: 6, scope: !4930)
!4944 = !DILocation(line: 511, column: 11, scope: !4930)
!4945 = !DILocation(line: 512, column: 2, scope: !4930)
!4946 = !DILocation(line: 512, column: 6, scope: !4930)
!4947 = !DILocation(line: 512, column: 11, scope: !4930)
!4948 = !DILocation(line: 515, column: 2, scope: !4930)
!4949 = !DILocation(line: 515, column: 6, scope: !4930)
!4950 = !DILocation(line: 515, column: 11, scope: !4930)
!4951 = !DILocation(line: 516, column: 1, scope: !4930)
!4952 = distinct !DISubprogram(name: "edbm_collapse_edge_exec", scope: !3, file: !3, line: 490, type: !4116, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4953 = !DILocalVariable(name: "C", arg: 1, scope: !4952, file: !3, line: 490, type: !4118)
!4954 = !DILocation(line: 490, column: 46, scope: !4952)
!4955 = !DILocalVariable(name: "op", arg: 2, scope: !4952, file: !3, line: 490, type: !4120)
!4956 = !DILocation(line: 490, column: 61, scope: !4952)
!4957 = !DILocalVariable(name: "obedit", scope: !4952, file: !3, line: 492, type: !4127)
!4958 = !DILocation(line: 492, column: 10, scope: !4952)
!4959 = !DILocation(line: 492, column: 40, scope: !4952)
!4960 = !DILocation(line: 492, column: 19, scope: !4952)
!4961 = !DILocalVariable(name: "em", scope: !4952, file: !3, line: 493, type: !4133)
!4962 = !DILocation(line: 493, column: 14, scope: !4952)
!4963 = !DILocation(line: 493, column: 44, scope: !4952)
!4964 = !DILocation(line: 493, column: 19, scope: !4952)
!4965 = !DILocation(line: 495, column: 21, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 495, column: 6)
!4967 = !DILocation(line: 495, column: 25, scope: !4966)
!4968 = !DILocation(line: 495, column: 7, scope: !4966)
!4969 = !DILocation(line: 495, column: 6, scope: !4952)
!4970 = !DILocation(line: 496, column: 3, scope: !4966)
!4971 = !DILocation(line: 498, column: 22, scope: !4952)
!4972 = !DILocation(line: 498, column: 2, scope: !4952)
!4973 = !DILocation(line: 500, column: 2, scope: !4952)
!4974 = !DILocation(line: 501, column: 1, scope: !4952)
!4975 = distinct !DISubprogram(name: "MESH_OT_edge_face_add", scope: !3, file: !3, line: 742, type: !3767, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4976 = !DILocalVariable(name: "ot", arg: 1, scope: !4975, file: !3, line: 742, type: !3769)
!4977 = !DILocation(line: 742, column: 44, scope: !4975)
!4978 = !DILocation(line: 745, column: 2, scope: !4975)
!4979 = !DILocation(line: 745, column: 6, scope: !4975)
!4980 = !DILocation(line: 745, column: 11, scope: !4975)
!4981 = !DILocation(line: 746, column: 2, scope: !4975)
!4982 = !DILocation(line: 746, column: 6, scope: !4975)
!4983 = !DILocation(line: 746, column: 18, scope: !4975)
!4984 = !DILocation(line: 747, column: 2, scope: !4975)
!4985 = !DILocation(line: 747, column: 6, scope: !4975)
!4986 = !DILocation(line: 747, column: 13, scope: !4975)
!4987 = !DILocation(line: 750, column: 2, scope: !4975)
!4988 = !DILocation(line: 750, column: 6, scope: !4975)
!4989 = !DILocation(line: 750, column: 11, scope: !4975)
!4990 = !DILocation(line: 751, column: 2, scope: !4975)
!4991 = !DILocation(line: 751, column: 6, scope: !4975)
!4992 = !DILocation(line: 751, column: 11, scope: !4975)
!4993 = !DILocation(line: 754, column: 2, scope: !4975)
!4994 = !DILocation(line: 754, column: 6, scope: !4975)
!4995 = !DILocation(line: 754, column: 11, scope: !4975)
!4996 = !DILocation(line: 755, column: 1, scope: !4975)
!4997 = distinct !DISubprogram(name: "edbm_add_edge_face_exec", scope: !3, file: !3, line: 681, type: !4116, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!4998 = !DILocalVariable(name: "C", arg: 1, scope: !4997, file: !3, line: 681, type: !4118)
!4999 = !DILocation(line: 681, column: 46, scope: !4997)
!5000 = !DILocalVariable(name: "op", arg: 2, scope: !4997, file: !3, line: 681, type: !4120)
!5001 = !DILocation(line: 681, column: 61, scope: !4997)
!5002 = !DILocalVariable(name: "bmop", scope: !4997, file: !3, line: 683, type: !4335)
!5003 = !DILocation(line: 683, column: 13, scope: !4997)
!5004 = !DILocalVariable(name: "obedit", scope: !4997, file: !3, line: 684, type: !4127)
!5005 = !DILocation(line: 684, column: 10, scope: !4997)
!5006 = !DILocation(line: 684, column: 40, scope: !4997)
!5007 = !DILocation(line: 684, column: 19, scope: !4997)
!5008 = !DILocalVariable(name: "em", scope: !4997, file: !3, line: 685, type: !4133)
!5009 = !DILocation(line: 685, column: 14, scope: !4997)
!5010 = !DILocation(line: 685, column: 44, scope: !4997)
!5011 = !DILocation(line: 685, column: 19, scope: !4997)
!5012 = !DILocalVariable(name: "use_smooth", scope: !4997, file: !3, line: 686, type: !5013)
!5013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1373)
!5014 = !DILocation(line: 686, column: 14, scope: !4997)
!5015 = !DILocation(line: 686, column: 58, scope: !4997)
!5016 = !DILocation(line: 686, column: 62, scope: !4997)
!5017 = !DILocation(line: 686, column: 27, scope: !4997)
!5018 = !DILocalVariable(name: "totedge_orig", scope: !4997, file: !3, line: 687, type: !4052)
!5019 = !DILocation(line: 687, column: 12, scope: !4997)
!5020 = !DILocation(line: 687, column: 27, scope: !4997)
!5021 = !DILocation(line: 687, column: 31, scope: !4997)
!5022 = !DILocation(line: 687, column: 35, scope: !4997)
!5023 = !DILocalVariable(name: "totface_orig", scope: !4997, file: !3, line: 688, type: !4052)
!5024 = !DILocation(line: 688, column: 12, scope: !4997)
!5025 = !DILocation(line: 688, column: 27, scope: !4997)
!5026 = !DILocation(line: 688, column: 31, scope: !4997)
!5027 = !DILocation(line: 688, column: 35, scope: !4997)
!5028 = !DILocalVariable(name: "ele_desel", scope: !4997, file: !3, line: 692, type: !1422)
!5029 = !DILocation(line: 692, column: 10, scope: !4997)
!5030 = !DILocalVariable(name: "ele_desel_face", scope: !4997, file: !3, line: 693, type: !1420)
!5031 = !DILocation(line: 693, column: 10, scope: !4997)
!5032 = !DILocation(line: 697, column: 57, scope: !4997)
!5033 = !DILocation(line: 697, column: 61, scope: !4997)
!5034 = !DILocation(line: 697, column: 14, scope: !4997)
!5035 = !DILocation(line: 697, column: 12, scope: !4997)
!5036 = !DILocation(line: 700, column: 20, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 700, column: 6)
!5038 = !DILocation(line: 700, column: 31, scope: !5037)
!5039 = !DILocation(line: 702, column: 36, scope: !5037)
!5040 = !DILocation(line: 702, column: 40, scope: !5037)
!5041 = !DILocation(line: 702, column: 48, scope: !5037)
!5042 = !DILocation(line: 700, column: 7, scope: !5037)
!5043 = !DILocation(line: 700, column: 6, scope: !4997)
!5044 = !DILocation(line: 704, column: 3, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 703, column: 2)
!5046 = !DILocation(line: 707, column: 14, scope: !4997)
!5047 = !DILocation(line: 707, column: 18, scope: !4997)
!5048 = !DILocation(line: 707, column: 2, scope: !4997)
!5049 = !DILocation(line: 710, column: 7, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 710, column: 6)
!5051 = !DILocation(line: 710, column: 23, scope: !5050)
!5052 = !DILocation(line: 710, column: 27, scope: !5050)
!5053 = !DILocation(line: 710, column: 31, scope: !5050)
!5054 = !DILocation(line: 710, column: 20, scope: !5050)
!5055 = !DILocation(line: 710, column: 40, scope: !5050)
!5056 = !DILocation(line: 711, column: 7, scope: !5050)
!5057 = !DILocation(line: 711, column: 23, scope: !5050)
!5058 = !DILocation(line: 711, column: 27, scope: !5050)
!5059 = !DILocation(line: 711, column: 31, scope: !5050)
!5060 = !DILocation(line: 711, column: 20, scope: !5050)
!5061 = !DILocation(line: 710, column: 6, scope: !4997)
!5062 = !DILocation(line: 713, column: 18, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 712, column: 2)
!5064 = !DILocation(line: 713, column: 29, scope: !5063)
!5065 = !DILocation(line: 713, column: 3, scope: !5063)
!5066 = !DILocation(line: 714, column: 3, scope: !5063)
!5067 = !DILocation(line: 720, column: 6, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 720, column: 6)
!5069 = !DILocation(line: 720, column: 16, scope: !5068)
!5070 = !DILocation(line: 721, column: 34, scope: !5068)
!5071 = !DILocation(line: 721, column: 29, scope: !5068)
!5072 = !DILocation(line: 721, column: 7, scope: !5068)
!5073 = !DILocation(line: 721, column: 58, scope: !5068)
!5074 = !DILocation(line: 721, column: 64, scope: !5068)
!5075 = !DILocation(line: 722, column: 55, scope: !5068)
!5076 = !DILocation(line: 722, column: 50, scope: !5068)
!5077 = !DILocation(line: 722, column: 24, scope: !5068)
!5078 = !DILocation(line: 722, column: 22, scope: !5068)
!5079 = !DILocation(line: 720, column: 6, scope: !4997)
!5080 = !DILocation(line: 724, column: 48, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 723, column: 2)
!5082 = !DILocation(line: 724, column: 52, scope: !5081)
!5083 = !DILocation(line: 724, column: 56, scope: !5081)
!5084 = !DILocation(line: 724, column: 67, scope: !5081)
!5085 = !DILocation(line: 724, column: 3, scope: !5081)
!5086 = !DILocation(line: 725, column: 2, scope: !5081)
!5087 = !DILocation(line: 729, column: 32, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 728, column: 2)
!5089 = !DILocation(line: 729, column: 36, scope: !5088)
!5090 = !DILocation(line: 729, column: 45, scope: !5088)
!5091 = !DILocation(line: 729, column: 40, scope: !5088)
!5092 = !DILocation(line: 729, column: 3, scope: !5088)
!5093 = !DILocation(line: 730, column: 32, scope: !5088)
!5094 = !DILocation(line: 730, column: 36, scope: !5088)
!5095 = !DILocation(line: 730, column: 45, scope: !5088)
!5096 = !DILocation(line: 730, column: 40, scope: !5088)
!5097 = !DILocation(line: 730, column: 3, scope: !5088)
!5098 = !DILocation(line: 733, column: 22, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 733, column: 6)
!5100 = !DILocation(line: 733, column: 33, scope: !5099)
!5101 = !DILocation(line: 733, column: 7, scope: !5099)
!5102 = !DILocation(line: 733, column: 6, scope: !4997)
!5103 = !DILocation(line: 734, column: 3, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 733, column: 44)
!5105 = !DILocation(line: 737, column: 22, scope: !4997)
!5106 = !DILocation(line: 737, column: 2, scope: !4997)
!5107 = !DILocation(line: 739, column: 2, scope: !4997)
!5108 = !DILocation(line: 740, column: 1, scope: !4997)
!5109 = distinct !DISubprogram(name: "MESH_OT_mark_seam", scope: !3, file: !3, line: 797, type: !3767, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5110 = !DILocalVariable(name: "ot", arg: 1, scope: !5109, file: !3, line: 797, type: !3769)
!5111 = !DILocation(line: 797, column: 40, scope: !5109)
!5112 = !DILocalVariable(name: "prop", scope: !5109, file: !3, line: 799, type: !3977)
!5113 = !DILocation(line: 799, column: 15, scope: !5109)
!5114 = !DILocation(line: 802, column: 2, scope: !5109)
!5115 = !DILocation(line: 802, column: 6, scope: !5109)
!5116 = !DILocation(line: 802, column: 11, scope: !5109)
!5117 = !DILocation(line: 803, column: 2, scope: !5109)
!5118 = !DILocation(line: 803, column: 6, scope: !5109)
!5119 = !DILocation(line: 803, column: 13, scope: !5109)
!5120 = !DILocation(line: 804, column: 2, scope: !5109)
!5121 = !DILocation(line: 804, column: 6, scope: !5109)
!5122 = !DILocation(line: 804, column: 18, scope: !5109)
!5123 = !DILocation(line: 807, column: 2, scope: !5109)
!5124 = !DILocation(line: 807, column: 6, scope: !5109)
!5125 = !DILocation(line: 807, column: 11, scope: !5109)
!5126 = !DILocation(line: 808, column: 2, scope: !5109)
!5127 = !DILocation(line: 808, column: 6, scope: !5109)
!5128 = !DILocation(line: 808, column: 11, scope: !5109)
!5129 = !DILocation(line: 811, column: 2, scope: !5109)
!5130 = !DILocation(line: 811, column: 6, scope: !5109)
!5131 = !DILocation(line: 811, column: 11, scope: !5109)
!5132 = !DILocation(line: 813, column: 25, scope: !5109)
!5133 = !DILocation(line: 813, column: 29, scope: !5109)
!5134 = !DILocation(line: 813, column: 9, scope: !5109)
!5135 = !DILocation(line: 813, column: 7, scope: !5109)
!5136 = !DILocation(line: 814, column: 24, scope: !5109)
!5137 = !DILocation(line: 814, column: 2, scope: !5109)
!5138 = !DILocation(line: 815, column: 1, scope: !5109)
!5139 = distinct !DISubprogram(name: "edbm_mark_seam_exec", scope: !3, file: !3, line: 759, type: !4116, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5140 = !DILocalVariable(name: "C", arg: 1, scope: !5139, file: !3, line: 759, type: !4118)
!5141 = !DILocation(line: 759, column: 42, scope: !5139)
!5142 = !DILocalVariable(name: "op", arg: 2, scope: !5139, file: !3, line: 759, type: !4120)
!5143 = !DILocation(line: 759, column: 57, scope: !5139)
!5144 = !DILocalVariable(name: "scene", scope: !5139, file: !3, line: 761, type: !5145)
!5145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5146, size: 64)
!5146 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1976, line: 1299, baseType: !1975)
!5147 = !DILocation(line: 761, column: 9, scope: !5139)
!5148 = !DILocation(line: 761, column: 32, scope: !5139)
!5149 = !DILocation(line: 761, column: 17, scope: !5139)
!5150 = !DILocalVariable(name: "obedit", scope: !5139, file: !3, line: 762, type: !4127)
!5151 = !DILocation(line: 762, column: 10, scope: !5139)
!5152 = !DILocation(line: 762, column: 40, scope: !5139)
!5153 = !DILocation(line: 762, column: 19, scope: !5139)
!5154 = !DILocalVariable(name: "me", scope: !5139, file: !3, line: 763, type: !1427)
!5155 = !DILocation(line: 763, column: 8, scope: !5139)
!5156 = !DILocation(line: 763, column: 22, scope: !5139)
!5157 = !DILocation(line: 763, column: 30, scope: !5139)
!5158 = !DILocation(line: 763, column: 14, scope: !5139)
!5159 = !DILocalVariable(name: "em", scope: !5139, file: !3, line: 764, type: !4133)
!5160 = !DILocation(line: 764, column: 14, scope: !5139)
!5161 = !DILocation(line: 764, column: 44, scope: !5139)
!5162 = !DILocation(line: 764, column: 19, scope: !5139)
!5163 = !DILocalVariable(name: "bm", scope: !5139, file: !3, line: 765, type: !3610)
!5164 = !DILocation(line: 765, column: 9, scope: !5139)
!5165 = !DILocation(line: 765, column: 14, scope: !5139)
!5166 = !DILocation(line: 765, column: 18, scope: !5139)
!5167 = !DILocalVariable(name: "eed", scope: !5139, file: !3, line: 766, type: !1418)
!5168 = !DILocation(line: 766, column: 10, scope: !5139)
!5169 = !DILocalVariable(name: "iter", scope: !5139, file: !3, line: 767, type: !4456)
!5170 = !DILocation(line: 767, column: 9, scope: !5139)
!5171 = !DILocalVariable(name: "clear", scope: !5139, file: !3, line: 768, type: !4811)
!5172 = !DILocation(line: 768, column: 13, scope: !5139)
!5173 = !DILocation(line: 768, column: 37, scope: !5139)
!5174 = !DILocation(line: 768, column: 41, scope: !5139)
!5175 = !DILocation(line: 768, column: 21, scope: !5139)
!5176 = !DILocation(line: 771, column: 6, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 771, column: 6)
!5178 = !DILocation(line: 771, column: 12, scope: !5177)
!5179 = !DILocation(line: 771, column: 6, scope: !5139)
!5180 = !DILocation(line: 772, column: 3, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 771, column: 18)
!5182 = !DILocation(line: 772, column: 7, scope: !5181)
!5183 = !DILocation(line: 772, column: 16, scope: !5181)
!5184 = !DILocation(line: 773, column: 2, scope: !5181)
!5185 = !DILocation(line: 775, column: 6, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 775, column: 6)
!5187 = !DILocation(line: 775, column: 6, scope: !5139)
!5188 = !DILocation(line: 776, column: 3, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 776, column: 3)
!5190 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 775, column: 13)
!5191 = !DILocation(line: 776, column: 3, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 776, column: 3)
!5193 = !DILocation(line: 777, column: 9, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 777, column: 8)
!5195 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 776, column: 51)
!5196 = !DILocation(line: 777, column: 48, scope: !5194)
!5197 = !DILocation(line: 777, column: 51, scope: !5194)
!5198 = !DILocation(line: 777, column: 8, scope: !5195)
!5199 = !DILocation(line: 778, column: 5, scope: !5194)
!5200 = !DILocation(line: 780, column: 4, scope: !5195)
!5201 = !DILocation(line: 781, column: 3, scope: !5195)
!5202 = distinct !{!5202, !5188, !5203}
!5203 = !DILocation(line: 781, column: 3, scope: !5189)
!5204 = !DILocation(line: 782, column: 2, scope: !5190)
!5205 = !DILocation(line: 784, column: 3, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5207, file: !3, line: 784, column: 3)
!5207 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 783, column: 7)
!5208 = !DILocation(line: 784, column: 3, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 784, column: 3)
!5210 = !DILocation(line: 785, column: 9, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 785, column: 8)
!5212 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 784, column: 51)
!5213 = !DILocation(line: 785, column: 48, scope: !5211)
!5214 = !DILocation(line: 785, column: 51, scope: !5211)
!5215 = !DILocation(line: 785, column: 8, scope: !5212)
!5216 = !DILocation(line: 786, column: 5, scope: !5211)
!5217 = !DILocation(line: 787, column: 4, scope: !5212)
!5218 = !DILocation(line: 788, column: 3, scope: !5212)
!5219 = distinct !{!5219, !5205, !5220}
!5220 = !DILocation(line: 788, column: 3, scope: !5206)
!5221 = !DILocation(line: 791, column: 24, scope: !5139)
!5222 = !DILocation(line: 791, column: 31, scope: !5139)
!5223 = !DILocation(line: 791, column: 2, scope: !5139)
!5224 = !DILocation(line: 792, column: 22, scope: !5139)
!5225 = !DILocation(line: 792, column: 2, scope: !5139)
!5226 = !DILocation(line: 794, column: 2, scope: !5139)
!5227 = distinct !DISubprogram(name: "MESH_OT_mark_sharp", scope: !3, file: !3, line: 851, type: !3767, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5228 = !DILocalVariable(name: "ot", arg: 1, scope: !5227, file: !3, line: 851, type: !3769)
!5229 = !DILocation(line: 851, column: 41, scope: !5227)
!5230 = !DILocalVariable(name: "prop", scope: !5227, file: !3, line: 853, type: !3977)
!5231 = !DILocation(line: 853, column: 15, scope: !5227)
!5232 = !DILocation(line: 856, column: 2, scope: !5227)
!5233 = !DILocation(line: 856, column: 6, scope: !5227)
!5234 = !DILocation(line: 856, column: 11, scope: !5227)
!5235 = !DILocation(line: 857, column: 2, scope: !5227)
!5236 = !DILocation(line: 857, column: 6, scope: !5227)
!5237 = !DILocation(line: 857, column: 13, scope: !5227)
!5238 = !DILocation(line: 858, column: 2, scope: !5227)
!5239 = !DILocation(line: 858, column: 6, scope: !5227)
!5240 = !DILocation(line: 858, column: 18, scope: !5227)
!5241 = !DILocation(line: 861, column: 2, scope: !5227)
!5242 = !DILocation(line: 861, column: 6, scope: !5227)
!5243 = !DILocation(line: 861, column: 11, scope: !5227)
!5244 = !DILocation(line: 862, column: 2, scope: !5227)
!5245 = !DILocation(line: 862, column: 6, scope: !5227)
!5246 = !DILocation(line: 862, column: 11, scope: !5227)
!5247 = !DILocation(line: 865, column: 2, scope: !5227)
!5248 = !DILocation(line: 865, column: 6, scope: !5227)
!5249 = !DILocation(line: 865, column: 11, scope: !5227)
!5250 = !DILocation(line: 867, column: 25, scope: !5227)
!5251 = !DILocation(line: 867, column: 29, scope: !5227)
!5252 = !DILocation(line: 867, column: 9, scope: !5227)
!5253 = !DILocation(line: 867, column: 7, scope: !5227)
!5254 = !DILocation(line: 868, column: 24, scope: !5227)
!5255 = !DILocation(line: 868, column: 2, scope: !5227)
!5256 = !DILocation(line: 869, column: 25, scope: !5227)
!5257 = !DILocation(line: 869, column: 29, scope: !5227)
!5258 = !DILocation(line: 869, column: 9, scope: !5227)
!5259 = !DILocation(line: 869, column: 7, scope: !5227)
!5260 = !DILocation(line: 871, column: 24, scope: !5227)
!5261 = !DILocation(line: 871, column: 2, scope: !5227)
!5262 = !DILocation(line: 872, column: 1, scope: !5227)
!5263 = distinct !DISubprogram(name: "edbm_mark_sharp_exec", scope: !3, file: !3, line: 817, type: !4116, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5264 = !DILocalVariable(name: "C", arg: 1, scope: !5263, file: !3, line: 817, type: !4118)
!5265 = !DILocation(line: 817, column: 43, scope: !5263)
!5266 = !DILocalVariable(name: "op", arg: 2, scope: !5263, file: !3, line: 817, type: !4120)
!5267 = !DILocation(line: 817, column: 58, scope: !5263)
!5268 = !DILocalVariable(name: "obedit", scope: !5263, file: !3, line: 819, type: !4127)
!5269 = !DILocation(line: 819, column: 10, scope: !5263)
!5270 = !DILocation(line: 819, column: 40, scope: !5263)
!5271 = !DILocation(line: 819, column: 19, scope: !5263)
!5272 = !DILocalVariable(name: "me", scope: !5263, file: !3, line: 820, type: !1427)
!5273 = !DILocation(line: 820, column: 8, scope: !5263)
!5274 = !DILocation(line: 820, column: 22, scope: !5263)
!5275 = !DILocation(line: 820, column: 30, scope: !5263)
!5276 = !DILocation(line: 820, column: 14, scope: !5263)
!5277 = !DILocalVariable(name: "em", scope: !5263, file: !3, line: 821, type: !4133)
!5278 = !DILocation(line: 821, column: 14, scope: !5263)
!5279 = !DILocation(line: 821, column: 44, scope: !5263)
!5280 = !DILocation(line: 821, column: 19, scope: !5263)
!5281 = !DILocalVariable(name: "bm", scope: !5263, file: !3, line: 822, type: !3610)
!5282 = !DILocation(line: 822, column: 9, scope: !5263)
!5283 = !DILocation(line: 822, column: 14, scope: !5263)
!5284 = !DILocation(line: 822, column: 18, scope: !5263)
!5285 = !DILocalVariable(name: "eed", scope: !5263, file: !3, line: 823, type: !1418)
!5286 = !DILocation(line: 823, column: 10, scope: !5263)
!5287 = !DILocalVariable(name: "iter", scope: !5263, file: !3, line: 824, type: !4456)
!5288 = !DILocation(line: 824, column: 9, scope: !5263)
!5289 = !DILocalVariable(name: "clear", scope: !5263, file: !3, line: 825, type: !4811)
!5290 = !DILocation(line: 825, column: 13, scope: !5263)
!5291 = !DILocation(line: 825, column: 37, scope: !5263)
!5292 = !DILocation(line: 825, column: 41, scope: !5263)
!5293 = !DILocation(line: 825, column: 21, scope: !5263)
!5294 = !DILocalVariable(name: "use_verts", scope: !5263, file: !3, line: 826, type: !4811)
!5295 = !DILocation(line: 826, column: 13, scope: !5263)
!5296 = !DILocation(line: 826, column: 41, scope: !5263)
!5297 = !DILocation(line: 826, column: 45, scope: !5263)
!5298 = !DILocation(line: 826, column: 25, scope: !5263)
!5299 = !DILocation(line: 829, column: 6, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 829, column: 6)
!5301 = !DILocation(line: 829, column: 12, scope: !5300)
!5302 = !DILocation(line: 829, column: 6, scope: !5263)
!5303 = !DILocation(line: 830, column: 3, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 829, column: 18)
!5305 = !DILocation(line: 830, column: 7, scope: !5304)
!5306 = !DILocation(line: 830, column: 16, scope: !5304)
!5307 = !DILocation(line: 831, column: 2, scope: !5304)
!5308 = !DILocation(line: 833, column: 2, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 833, column: 2)
!5310 = !DILocation(line: 833, column: 2, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5309, file: !3, line: 833, column: 2)
!5312 = !DILocation(line: 834, column: 7, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 834, column: 7)
!5314 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 833, column: 50)
!5315 = !DILocation(line: 834, column: 7, scope: !5314)
!5316 = !DILocation(line: 835, column: 10, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 835, column: 8)
!5318 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 834, column: 18)
!5319 = !DILocation(line: 835, column: 53, scope: !5317)
!5320 = !DILocation(line: 835, column: 56, scope: !5317)
!5321 = !DILocation(line: 835, column: 8, scope: !5318)
!5322 = !DILocation(line: 836, column: 5, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 835, column: 101)
!5324 = !DILocation(line: 838, column: 3, scope: !5318)
!5325 = !DILocation(line: 839, column: 13, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 839, column: 12)
!5327 = !DILocation(line: 839, column: 12, scope: !5313)
!5328 = !DILocation(line: 840, column: 4, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5326, file: !3, line: 839, column: 53)
!5330 = !DILocation(line: 843, column: 3, scope: !5314)
!5331 = !DILocation(line: 844, column: 2, scope: !5314)
!5332 = distinct !{!5332, !5308, !5333}
!5333 = !DILocation(line: 844, column: 2, scope: !5309)
!5334 = !DILocation(line: 846, column: 22, scope: !5263)
!5335 = !DILocation(line: 846, column: 2, scope: !5263)
!5336 = !DILocation(line: 848, column: 2, scope: !5263)
!5337 = distinct !DISubprogram(name: "MESH_OT_vert_connect", scope: !3, file: !3, line: 922, type: !3767, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5338 = !DILocalVariable(name: "ot", arg: 1, scope: !5337, file: !3, line: 922, type: !3769)
!5339 = !DILocation(line: 922, column: 43, scope: !5337)
!5340 = !DILocation(line: 925, column: 2, scope: !5337)
!5341 = !DILocation(line: 925, column: 6, scope: !5337)
!5342 = !DILocation(line: 925, column: 11, scope: !5337)
!5343 = !DILocation(line: 926, column: 2, scope: !5337)
!5344 = !DILocation(line: 926, column: 6, scope: !5337)
!5345 = !DILocation(line: 926, column: 13, scope: !5337)
!5346 = !DILocation(line: 927, column: 2, scope: !5337)
!5347 = !DILocation(line: 927, column: 6, scope: !5337)
!5348 = !DILocation(line: 927, column: 18, scope: !5337)
!5349 = !DILocation(line: 930, column: 2, scope: !5337)
!5350 = !DILocation(line: 930, column: 6, scope: !5337)
!5351 = !DILocation(line: 930, column: 11, scope: !5337)
!5352 = !DILocation(line: 931, column: 2, scope: !5337)
!5353 = !DILocation(line: 931, column: 6, scope: !5337)
!5354 = !DILocation(line: 931, column: 11, scope: !5337)
!5355 = !DILocation(line: 934, column: 2, scope: !5337)
!5356 = !DILocation(line: 934, column: 6, scope: !5337)
!5357 = !DILocation(line: 934, column: 11, scope: !5337)
!5358 = !DILocation(line: 935, column: 1, scope: !5337)
!5359 = distinct !DISubprogram(name: "edbm_vert_connect_exec", scope: !3, file: !3, line: 874, type: !4116, scopeLine: 875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5360 = !DILocalVariable(name: "C", arg: 1, scope: !5359, file: !3, line: 874, type: !4118)
!5361 = !DILocation(line: 874, column: 45, scope: !5359)
!5362 = !DILocalVariable(name: "op", arg: 2, scope: !5359, file: !3, line: 874, type: !4120)
!5363 = !DILocation(line: 874, column: 60, scope: !5359)
!5364 = !DILocalVariable(name: "obedit", scope: !5359, file: !3, line: 876, type: !4127)
!5365 = !DILocation(line: 876, column: 10, scope: !5359)
!5366 = !DILocation(line: 876, column: 40, scope: !5359)
!5367 = !DILocation(line: 876, column: 19, scope: !5359)
!5368 = !DILocalVariable(name: "em", scope: !5359, file: !3, line: 877, type: !4133)
!5369 = !DILocation(line: 877, column: 14, scope: !5359)
!5370 = !DILocation(line: 877, column: 44, scope: !5359)
!5371 = !DILocation(line: 877, column: 19, scope: !5359)
!5372 = !DILocalVariable(name: "bm", scope: !5359, file: !3, line: 878, type: !3610)
!5373 = !DILocation(line: 878, column: 9, scope: !5359)
!5374 = !DILocation(line: 878, column: 14, scope: !5359)
!5375 = !DILocation(line: 878, column: 18, scope: !5359)
!5376 = !DILocalVariable(name: "bmop", scope: !5359, file: !3, line: 879, type: !4335)
!5377 = !DILocation(line: 879, column: 13, scope: !5359)
!5378 = !DILocalVariable(name: "is_pair", scope: !5359, file: !3, line: 880, type: !4811)
!5379 = !DILocation(line: 880, column: 13, scope: !5359)
!5380 = !DILocation(line: 880, column: 24, scope: !5359)
!5381 = !DILocation(line: 880, column: 28, scope: !5359)
!5382 = !DILocation(line: 880, column: 39, scope: !5359)
!5383 = !DILocation(line: 880, column: 23, scope: !5359)
!5384 = !DILocalVariable(name: "len", scope: !5359, file: !3, line: 881, type: !135)
!5385 = !DILocation(line: 881, column: 6, scope: !5359)
!5386 = !DILocation(line: 883, column: 6, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 883, column: 6)
!5388 = !DILocation(line: 883, column: 6, scope: !5359)
!5389 = !DILocation(line: 884, column: 21, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 884, column: 7)
!5391 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 883, column: 15)
!5392 = !DILocation(line: 884, column: 32, scope: !5390)
!5393 = !DILocation(line: 884, column: 8, scope: !5390)
!5394 = !DILocation(line: 884, column: 7, scope: !5391)
!5395 = !DILocation(line: 888, column: 4, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 887, column: 3)
!5397 = !DILocation(line: 890, column: 2, scope: !5391)
!5398 = !DILocation(line: 892, column: 21, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 892, column: 7)
!5400 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 891, column: 7)
!5401 = !DILocation(line: 892, column: 32, scope: !5399)
!5402 = !DILocation(line: 892, column: 8, scope: !5399)
!5403 = !DILocation(line: 892, column: 7, scope: !5400)
!5404 = !DILocation(line: 896, column: 4, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5399, file: !3, line: 895, column: 3)
!5406 = !DILocation(line: 900, column: 14, scope: !5359)
!5407 = !DILocation(line: 900, column: 2, scope: !5359)
!5408 = !DILocation(line: 901, column: 26, scope: !5359)
!5409 = !DILocation(line: 901, column: 21, scope: !5359)
!5410 = !DILocation(line: 901, column: 8, scope: !5359)
!5411 = !DILocation(line: 901, column: 51, scope: !5359)
!5412 = !DILocation(line: 901, column: 6, scope: !5359)
!5413 = !DILocation(line: 903, column: 6, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 903, column: 6)
!5415 = !DILocation(line: 903, column: 6, scope: !5359)
!5416 = !DILocation(line: 904, column: 7, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 904, column: 7)
!5418 = distinct !DILexicalBlock(scope: !5414, file: !3, line: 903, column: 11)
!5419 = !DILocation(line: 904, column: 7, scope: !5418)
!5420 = !DILocation(line: 906, column: 33, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 904, column: 16)
!5422 = !DILocation(line: 906, column: 37, scope: !5421)
!5423 = !DILocation(line: 906, column: 46, scope: !5421)
!5424 = !DILocation(line: 906, column: 41, scope: !5421)
!5425 = !DILocation(line: 906, column: 4, scope: !5421)
!5426 = !DILocation(line: 907, column: 3, scope: !5421)
!5427 = !DILocation(line: 908, column: 2, scope: !5418)
!5428 = !DILocation(line: 910, column: 22, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 910, column: 6)
!5430 = !DILocation(line: 910, column: 33, scope: !5429)
!5431 = !DILocation(line: 910, column: 7, scope: !5429)
!5432 = !DILocation(line: 910, column: 6, scope: !5359)
!5433 = !DILocation(line: 911, column: 3, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 910, column: 44)
!5435 = !DILocation(line: 914, column: 25, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 913, column: 7)
!5437 = !DILocation(line: 914, column: 3, scope: !5436)
!5438 = !DILocation(line: 916, column: 23, scope: !5436)
!5439 = !DILocation(line: 916, column: 3, scope: !5436)
!5440 = !DILocation(line: 918, column: 10, scope: !5436)
!5441 = !DILocation(line: 918, column: 3, scope: !5436)
!5442 = !DILocation(line: 920, column: 1, scope: !5359)
!5443 = distinct !DISubprogram(name: "MESH_OT_vert_connect_nonplanar", scope: !3, file: !3, line: 959, type: !3767, scopeLine: 960, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5444 = !DILocalVariable(name: "ot", arg: 1, scope: !5443, file: !3, line: 959, type: !3769)
!5445 = !DILocation(line: 959, column: 53, scope: !5443)
!5446 = !DILocalVariable(name: "prop", scope: !5443, file: !3, line: 961, type: !3977)
!5447 = !DILocation(line: 961, column: 15, scope: !5443)
!5448 = !DILocation(line: 964, column: 2, scope: !5443)
!5449 = !DILocation(line: 964, column: 6, scope: !5443)
!5450 = !DILocation(line: 964, column: 11, scope: !5443)
!5451 = !DILocation(line: 965, column: 2, scope: !5443)
!5452 = !DILocation(line: 965, column: 6, scope: !5443)
!5453 = !DILocation(line: 965, column: 13, scope: !5443)
!5454 = !DILocation(line: 966, column: 2, scope: !5443)
!5455 = !DILocation(line: 966, column: 6, scope: !5443)
!5456 = !DILocation(line: 966, column: 18, scope: !5443)
!5457 = !DILocation(line: 969, column: 2, scope: !5443)
!5458 = !DILocation(line: 969, column: 6, scope: !5443)
!5459 = !DILocation(line: 969, column: 11, scope: !5443)
!5460 = !DILocation(line: 970, column: 2, scope: !5443)
!5461 = !DILocation(line: 970, column: 6, scope: !5443)
!5462 = !DILocation(line: 970, column: 11, scope: !5443)
!5463 = !DILocation(line: 973, column: 2, scope: !5443)
!5464 = !DILocation(line: 973, column: 6, scope: !5443)
!5465 = !DILocation(line: 973, column: 11, scope: !5443)
!5466 = !DILocation(line: 976, column: 32, scope: !5443)
!5467 = !DILocation(line: 976, column: 36, scope: !5443)
!5468 = !DILocation(line: 976, column: 9, scope: !5443)
!5469 = !DILocation(line: 976, column: 7, scope: !5443)
!5470 = !DILocation(line: 978, column: 33, scope: !5443)
!5471 = !DILocation(line: 978, column: 2, scope: !5443)
!5472 = !DILocation(line: 979, column: 1, scope: !5443)
!5473 = distinct !DISubprogram(name: "edbm_vert_connect_nonplaner_exec", scope: !3, file: !3, line: 938, type: !4116, scopeLine: 939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5474 = !DILocalVariable(name: "C", arg: 1, scope: !5473, file: !3, line: 938, type: !4118)
!5475 = !DILocation(line: 938, column: 55, scope: !5473)
!5476 = !DILocalVariable(name: "op", arg: 2, scope: !5473, file: !3, line: 938, type: !4120)
!5477 = !DILocation(line: 938, column: 70, scope: !5473)
!5478 = !DILocalVariable(name: "obedit", scope: !5473, file: !3, line: 940, type: !4127)
!5479 = !DILocation(line: 940, column: 10, scope: !5473)
!5480 = !DILocation(line: 940, column: 40, scope: !5473)
!5481 = !DILocation(line: 940, column: 19, scope: !5473)
!5482 = !DILocalVariable(name: "em", scope: !5473, file: !3, line: 941, type: !4133)
!5483 = !DILocation(line: 941, column: 14, scope: !5473)
!5484 = !DILocation(line: 941, column: 44, scope: !5473)
!5485 = !DILocation(line: 941, column: 19, scope: !5473)
!5486 = !DILocalVariable(name: "angle_limit", scope: !5473, file: !3, line: 943, type: !4150)
!5487 = !DILocation(line: 943, column: 14, scope: !5473)
!5488 = !DILocation(line: 943, column: 42, scope: !5473)
!5489 = !DILocation(line: 943, column: 46, scope: !5473)
!5490 = !DILocation(line: 943, column: 28, scope: !5473)
!5491 = !DILocation(line: 946, column: 15, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 945, column: 6)
!5493 = !DILocation(line: 946, column: 19, scope: !5492)
!5494 = !DILocation(line: 949, column: 31, scope: !5492)
!5495 = !DILocation(line: 945, column: 7, scope: !5492)
!5496 = !DILocation(line: 945, column: 6, scope: !5473)
!5497 = !DILocation(line: 951, column: 3, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 950, column: 2)
!5499 = !DILocation(line: 955, column: 22, scope: !5473)
!5500 = !DILocation(line: 955, column: 2, scope: !5473)
!5501 = !DILocation(line: 956, column: 2, scope: !5473)
!5502 = !DILocation(line: 957, column: 1, scope: !5473)
!5503 = distinct !DISubprogram(name: "MESH_OT_edge_split", scope: !3, file: !3, line: 1005, type: !3767, scopeLine: 1006, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5504 = !DILocalVariable(name: "ot", arg: 1, scope: !5503, file: !3, line: 1005, type: !3769)
!5505 = !DILocation(line: 1005, column: 41, scope: !5503)
!5506 = !DILocation(line: 1008, column: 2, scope: !5503)
!5507 = !DILocation(line: 1008, column: 6, scope: !5503)
!5508 = !DILocation(line: 1008, column: 11, scope: !5503)
!5509 = !DILocation(line: 1009, column: 2, scope: !5503)
!5510 = !DILocation(line: 1009, column: 6, scope: !5503)
!5511 = !DILocation(line: 1009, column: 13, scope: !5503)
!5512 = !DILocation(line: 1010, column: 2, scope: !5503)
!5513 = !DILocation(line: 1010, column: 6, scope: !5503)
!5514 = !DILocation(line: 1010, column: 18, scope: !5503)
!5515 = !DILocation(line: 1013, column: 2, scope: !5503)
!5516 = !DILocation(line: 1013, column: 6, scope: !5503)
!5517 = !DILocation(line: 1013, column: 11, scope: !5503)
!5518 = !DILocation(line: 1014, column: 2, scope: !5503)
!5519 = !DILocation(line: 1014, column: 6, scope: !5503)
!5520 = !DILocation(line: 1014, column: 11, scope: !5503)
!5521 = !DILocation(line: 1017, column: 2, scope: !5503)
!5522 = !DILocation(line: 1017, column: 6, scope: !5503)
!5523 = !DILocation(line: 1017, column: 11, scope: !5503)
!5524 = !DILocation(line: 1018, column: 1, scope: !5503)
!5525 = distinct !DISubprogram(name: "edbm_edge_split_exec", scope: !3, file: !3, line: 982, type: !4116, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5526 = !DILocalVariable(name: "C", arg: 1, scope: !5525, file: !3, line: 982, type: !4118)
!5527 = !DILocation(line: 982, column: 43, scope: !5525)
!5528 = !DILocalVariable(name: "op", arg: 2, scope: !5525, file: !3, line: 982, type: !4120)
!5529 = !DILocation(line: 982, column: 58, scope: !5525)
!5530 = !DILocalVariable(name: "obedit", scope: !5525, file: !3, line: 984, type: !4127)
!5531 = !DILocation(line: 984, column: 10, scope: !5525)
!5532 = !DILocation(line: 984, column: 40, scope: !5525)
!5533 = !DILocation(line: 984, column: 19, scope: !5525)
!5534 = !DILocalVariable(name: "em", scope: !5525, file: !3, line: 985, type: !4133)
!5535 = !DILocation(line: 985, column: 14, scope: !5525)
!5536 = !DILocation(line: 985, column: 44, scope: !5525)
!5537 = !DILocation(line: 985, column: 19, scope: !5525)
!5538 = !DILocation(line: 988, column: 10, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 987, column: 6)
!5540 = !DILocation(line: 988, column: 14, scope: !5539)
!5541 = !DILocation(line: 987, column: 7, scope: !5539)
!5542 = !DILocation(line: 987, column: 6, scope: !5525)
!5543 = !DILocation(line: 993, column: 3, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 992, column: 2)
!5545 = !DILocation(line: 996, column: 6, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 996, column: 6)
!5547 = !DILocation(line: 996, column: 10, scope: !5546)
!5548 = !DILocation(line: 996, column: 21, scope: !5546)
!5549 = !DILocation(line: 996, column: 6, scope: !5525)
!5550 = !DILocation(line: 997, column: 21, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 996, column: 41)
!5552 = !DILocation(line: 997, column: 3, scope: !5551)
!5553 = !DILocation(line: 998, column: 2, scope: !5551)
!5554 = !DILocation(line: 1000, column: 22, scope: !5525)
!5555 = !DILocation(line: 1000, column: 2, scope: !5525)
!5556 = !DILocation(line: 1002, column: 2, scope: !5525)
!5557 = !DILocation(line: 1003, column: 1, scope: !5525)
!5558 = distinct !DISubprogram(name: "MESH_OT_duplicate", scope: !3, file: !3, line: 1064, type: !3767, scopeLine: 1065, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5559 = !DILocalVariable(name: "ot", arg: 1, scope: !5558, file: !3, line: 1064, type: !3769)
!5560 = !DILocation(line: 1064, column: 40, scope: !5558)
!5561 = !DILocation(line: 1067, column: 2, scope: !5558)
!5562 = !DILocation(line: 1067, column: 6, scope: !5558)
!5563 = !DILocation(line: 1067, column: 11, scope: !5558)
!5564 = !DILocation(line: 1068, column: 2, scope: !5558)
!5565 = !DILocation(line: 1068, column: 6, scope: !5558)
!5566 = !DILocation(line: 1068, column: 18, scope: !5558)
!5567 = !DILocation(line: 1069, column: 2, scope: !5558)
!5568 = !DILocation(line: 1069, column: 6, scope: !5558)
!5569 = !DILocation(line: 1069, column: 13, scope: !5558)
!5570 = !DILocation(line: 1072, column: 2, scope: !5558)
!5571 = !DILocation(line: 1072, column: 6, scope: !5558)
!5572 = !DILocation(line: 1072, column: 13, scope: !5558)
!5573 = !DILocation(line: 1073, column: 2, scope: !5558)
!5574 = !DILocation(line: 1073, column: 6, scope: !5558)
!5575 = !DILocation(line: 1073, column: 11, scope: !5558)
!5576 = !DILocation(line: 1075, column: 2, scope: !5558)
!5577 = !DILocation(line: 1075, column: 6, scope: !5558)
!5578 = !DILocation(line: 1075, column: 11, scope: !5558)
!5579 = !DILocation(line: 1078, column: 14, scope: !5558)
!5580 = !DILocation(line: 1078, column: 18, scope: !5558)
!5581 = !DILocation(line: 1078, column: 2, scope: !5558)
!5582 = !DILocation(line: 1079, column: 1, scope: !5558)
!5583 = distinct !DISubprogram(name: "edbm_duplicate_invoke", scope: !3, file: !3, line: 1055, type: !5584, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5584 = !DISubroutineType(types: !5585)
!5585 = !{!135, !4118, !4120, !5586}
!5586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5587, size: 64)
!5587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5588)
!5588 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !3771, line: 460, baseType: !3874)
!5589 = !DILocalVariable(name: "C", arg: 1, scope: !5583, file: !3, line: 1055, type: !4118)
!5590 = !DILocation(line: 1055, column: 44, scope: !5583)
!5591 = !DILocalVariable(name: "op", arg: 2, scope: !5583, file: !3, line: 1055, type: !4120)
!5592 = !DILocation(line: 1055, column: 59, scope: !5583)
!5593 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !5583, file: !3, line: 1055, type: !5586)
!5594 = !DILocation(line: 1055, column: 78, scope: !5583)
!5595 = !DILocation(line: 1057, column: 2, scope: !5583)
!5596 = !DILocation(line: 1058, column: 22, scope: !5583)
!5597 = !DILocation(line: 1058, column: 25, scope: !5583)
!5598 = !DILocation(line: 1058, column: 2, scope: !5583)
!5599 = !DILocation(line: 1059, column: 2, scope: !5583)
!5600 = !DILocation(line: 1061, column: 2, scope: !5583)
!5601 = distinct !DISubprogram(name: "edbm_duplicate_exec", scope: !3, file: !3, line: 1022, type: !4116, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5602 = !DILocalVariable(name: "C", arg: 1, scope: !5601, file: !3, line: 1022, type: !4118)
!5603 = !DILocation(line: 1022, column: 42, scope: !5601)
!5604 = !DILocalVariable(name: "op", arg: 2, scope: !5601, file: !3, line: 1022, type: !4120)
!5605 = !DILocation(line: 1022, column: 57, scope: !5601)
!5606 = !DILocalVariable(name: "ob", scope: !5601, file: !3, line: 1024, type: !4127)
!5607 = !DILocation(line: 1024, column: 10, scope: !5601)
!5608 = !DILocation(line: 1024, column: 36, scope: !5601)
!5609 = !DILocation(line: 1024, column: 15, scope: !5601)
!5610 = !DILocalVariable(name: "em", scope: !5601, file: !3, line: 1025, type: !4133)
!5611 = !DILocation(line: 1025, column: 14, scope: !5601)
!5612 = !DILocation(line: 1025, column: 44, scope: !5601)
!5613 = !DILocation(line: 1025, column: 19, scope: !5601)
!5614 = !DILocalVariable(name: "bm", scope: !5601, file: !3, line: 1026, type: !3610)
!5615 = !DILocation(line: 1026, column: 9, scope: !5601)
!5616 = !DILocation(line: 1026, column: 14, scope: !5601)
!5617 = !DILocation(line: 1026, column: 18, scope: !5601)
!5618 = !DILocalVariable(name: "bmop", scope: !5601, file: !3, line: 1027, type: !4335)
!5619 = !DILocation(line: 1027, column: 13, scope: !5601)
!5620 = !DILocation(line: 1030, column: 10, scope: !5601)
!5621 = !DILocation(line: 1030, column: 21, scope: !5601)
!5622 = !DILocation(line: 1029, column: 2, scope: !5601)
!5623 = !DILocation(line: 1034, column: 14, scope: !5601)
!5624 = !DILocation(line: 1034, column: 2, scope: !5601)
!5625 = !DILocalVariable(name: "_bm_prev_selected", scope: !5626, file: !3, line: 1037, type: !1490)
!5626 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1037, column: 2)
!5627 = !DILocation(line: 1037, column: 2, scope: !5626)
!5628 = !DILocation(line: 1039, column: 24, scope: !5626)
!5629 = !DILocation(line: 1039, column: 2, scope: !5626)
!5630 = !DILocation(line: 1041, column: 31, scope: !5626)
!5631 = !DILocation(line: 1041, column: 40, scope: !5626)
!5632 = !DILocation(line: 1041, column: 35, scope: !5626)
!5633 = !DILocation(line: 1041, column: 2, scope: !5626)
!5634 = !DILocation(line: 1044, column: 2, scope: !5626)
!5635 = !DILocation(line: 1046, column: 22, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1046, column: 6)
!5637 = !DILocation(line: 1046, column: 33, scope: !5636)
!5638 = !DILocation(line: 1046, column: 7, scope: !5636)
!5639 = !DILocation(line: 1046, column: 6, scope: !5601)
!5640 = !DILocation(line: 1047, column: 3, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 1046, column: 44)
!5642 = !DILocation(line: 1050, column: 22, scope: !5601)
!5643 = !DILocation(line: 1050, column: 2, scope: !5601)
!5644 = !DILocation(line: 1052, column: 2, scope: !5601)
!5645 = !DILocation(line: 1053, column: 1, scope: !5601)
!5646 = distinct !DISubprogram(name: "MESH_OT_flip_normals", scope: !3, file: !3, line: 1094, type: !3767, scopeLine: 1095, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5647 = !DILocalVariable(name: "ot", arg: 1, scope: !5646, file: !3, line: 1094, type: !3769)
!5648 = !DILocation(line: 1094, column: 43, scope: !5646)
!5649 = !DILocation(line: 1097, column: 2, scope: !5646)
!5650 = !DILocation(line: 1097, column: 6, scope: !5646)
!5651 = !DILocation(line: 1097, column: 11, scope: !5646)
!5652 = !DILocation(line: 1098, column: 2, scope: !5646)
!5653 = !DILocation(line: 1098, column: 6, scope: !5646)
!5654 = !DILocation(line: 1098, column: 18, scope: !5646)
!5655 = !DILocation(line: 1099, column: 2, scope: !5646)
!5656 = !DILocation(line: 1099, column: 6, scope: !5646)
!5657 = !DILocation(line: 1099, column: 13, scope: !5646)
!5658 = !DILocation(line: 1102, column: 2, scope: !5646)
!5659 = !DILocation(line: 1102, column: 6, scope: !5646)
!5660 = !DILocation(line: 1102, column: 11, scope: !5646)
!5661 = !DILocation(line: 1103, column: 2, scope: !5646)
!5662 = !DILocation(line: 1103, column: 6, scope: !5646)
!5663 = !DILocation(line: 1103, column: 11, scope: !5646)
!5664 = !DILocation(line: 1106, column: 2, scope: !5646)
!5665 = !DILocation(line: 1106, column: 6, scope: !5646)
!5666 = !DILocation(line: 1106, column: 11, scope: !5646)
!5667 = !DILocation(line: 1107, column: 1, scope: !5646)
!5668 = distinct !DISubprogram(name: "edbm_flip_normals_exec", scope: !3, file: !3, line: 1081, type: !4116, scopeLine: 1082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5669 = !DILocalVariable(name: "C", arg: 1, scope: !5668, file: !3, line: 1081, type: !4118)
!5670 = !DILocation(line: 1081, column: 45, scope: !5668)
!5671 = !DILocalVariable(name: "op", arg: 2, scope: !5668, file: !3, line: 1081, type: !4120)
!5672 = !DILocation(line: 1081, column: 60, scope: !5668)
!5673 = !DILocalVariable(name: "obedit", scope: !5668, file: !3, line: 1083, type: !4127)
!5674 = !DILocation(line: 1083, column: 10, scope: !5668)
!5675 = !DILocation(line: 1083, column: 40, scope: !5668)
!5676 = !DILocation(line: 1083, column: 19, scope: !5668)
!5677 = !DILocalVariable(name: "em", scope: !5668, file: !3, line: 1084, type: !4133)
!5678 = !DILocation(line: 1084, column: 14, scope: !5668)
!5679 = !DILocation(line: 1084, column: 44, scope: !5668)
!5680 = !DILocation(line: 1084, column: 19, scope: !5668)
!5681 = !DILocation(line: 1086, column: 21, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 1086, column: 6)
!5683 = !DILocation(line: 1086, column: 25, scope: !5682)
!5684 = !DILocation(line: 1086, column: 7, scope: !5682)
!5685 = !DILocation(line: 1086, column: 6, scope: !5668)
!5686 = !DILocation(line: 1087, column: 3, scope: !5682)
!5687 = !DILocation(line: 1089, column: 22, scope: !5668)
!5688 = !DILocation(line: 1089, column: 2, scope: !5668)
!5689 = !DILocation(line: 1091, column: 2, scope: !5668)
!5690 = !DILocation(line: 1092, column: 1, scope: !5668)
!5691 = distinct !DISubprogram(name: "MESH_OT_edge_rotate", scope: !3, file: !3, line: 1169, type: !3767, scopeLine: 1170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5692 = !DILocalVariable(name: "ot", arg: 1, scope: !5691, file: !3, line: 1169, type: !3769)
!5693 = !DILocation(line: 1169, column: 42, scope: !5691)
!5694 = !DILocation(line: 1172, column: 2, scope: !5691)
!5695 = !DILocation(line: 1172, column: 6, scope: !5691)
!5696 = !DILocation(line: 1172, column: 11, scope: !5691)
!5697 = !DILocation(line: 1173, column: 2, scope: !5691)
!5698 = !DILocation(line: 1173, column: 6, scope: !5691)
!5699 = !DILocation(line: 1173, column: 18, scope: !5691)
!5700 = !DILocation(line: 1174, column: 2, scope: !5691)
!5701 = !DILocation(line: 1174, column: 6, scope: !5691)
!5702 = !DILocation(line: 1174, column: 13, scope: !5691)
!5703 = !DILocation(line: 1177, column: 2, scope: !5691)
!5704 = !DILocation(line: 1177, column: 6, scope: !5691)
!5705 = !DILocation(line: 1177, column: 11, scope: !5691)
!5706 = !DILocation(line: 1178, column: 2, scope: !5691)
!5707 = !DILocation(line: 1178, column: 6, scope: !5691)
!5708 = !DILocation(line: 1178, column: 11, scope: !5691)
!5709 = !DILocation(line: 1181, column: 2, scope: !5691)
!5710 = !DILocation(line: 1181, column: 6, scope: !5691)
!5711 = !DILocation(line: 1181, column: 11, scope: !5691)
!5712 = !DILocation(line: 1184, column: 18, scope: !5691)
!5713 = !DILocation(line: 1184, column: 22, scope: !5691)
!5714 = !DILocation(line: 1184, column: 2, scope: !5691)
!5715 = !DILocation(line: 1185, column: 1, scope: !5691)
!5716 = distinct !DISubprogram(name: "edbm_edge_rotate_selected_exec", scope: !3, file: !3, line: 1110, type: !4116, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5717 = !DILocalVariable(name: "C", arg: 1, scope: !5716, file: !3, line: 1110, type: !4118)
!5718 = !DILocation(line: 1110, column: 53, scope: !5716)
!5719 = !DILocalVariable(name: "op", arg: 2, scope: !5716, file: !3, line: 1110, type: !4120)
!5720 = !DILocation(line: 1110, column: 68, scope: !5716)
!5721 = !DILocalVariable(name: "obedit", scope: !5716, file: !3, line: 1112, type: !4127)
!5722 = !DILocation(line: 1112, column: 10, scope: !5716)
!5723 = !DILocation(line: 1112, column: 40, scope: !5716)
!5724 = !DILocation(line: 1112, column: 19, scope: !5716)
!5725 = !DILocalVariable(name: "em", scope: !5716, file: !3, line: 1113, type: !4133)
!5726 = !DILocation(line: 1113, column: 14, scope: !5716)
!5727 = !DILocation(line: 1113, column: 44, scope: !5716)
!5728 = !DILocation(line: 1113, column: 19, scope: !5716)
!5729 = !DILocalVariable(name: "bmop", scope: !5716, file: !3, line: 1114, type: !4335)
!5730 = !DILocation(line: 1114, column: 13, scope: !5716)
!5731 = !DILocalVariable(name: "eed", scope: !5716, file: !3, line: 1115, type: !1418)
!5732 = !DILocation(line: 1115, column: 10, scope: !5716)
!5733 = !DILocalVariable(name: "iter", scope: !5716, file: !3, line: 1116, type: !4456)
!5734 = !DILocation(line: 1116, column: 9, scope: !5716)
!5735 = !DILocalVariable(name: "use_ccw", scope: !5716, file: !3, line: 1117, type: !4811)
!5736 = !DILocation(line: 1117, column: 13, scope: !5716)
!5737 = !DILocation(line: 1117, column: 39, scope: !5716)
!5738 = !DILocation(line: 1117, column: 43, scope: !5716)
!5739 = !DILocation(line: 1117, column: 23, scope: !5716)
!5740 = !DILocalVariable(name: "tot", scope: !5716, file: !3, line: 1118, type: !135)
!5741 = !DILocation(line: 1118, column: 6, scope: !5716)
!5742 = !DILocation(line: 1120, column: 6, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1120, column: 6)
!5744 = !DILocation(line: 1120, column: 10, scope: !5743)
!5745 = !DILocation(line: 1120, column: 14, scope: !5743)
!5746 = !DILocation(line: 1120, column: 25, scope: !5743)
!5747 = !DILocation(line: 1120, column: 6, scope: !5716)
!5748 = !DILocation(line: 1121, column: 14, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 1120, column: 31)
!5750 = !DILocation(line: 1121, column: 18, scope: !5749)
!5751 = !DILocation(line: 1121, column: 3, scope: !5749)
!5752 = !DILocation(line: 1122, column: 3, scope: !5749)
!5753 = !DILocation(line: 1126, column: 2, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1126, column: 2)
!5755 = !DILocation(line: 1126, column: 2, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 1126, column: 2)
!5757 = !DILocation(line: 1127, column: 3, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 1126, column: 54)
!5759 = !DILocation(line: 1128, column: 7, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 1128, column: 7)
!5761 = !DILocation(line: 1128, column: 7, scope: !5758)
!5762 = !DILocalVariable(name: "fa", scope: !5763, file: !3, line: 1129, type: !1420)
!5763 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 1128, column: 47)
!5764 = !DILocation(line: 1129, column: 12, scope: !5763)
!5765 = !DILocalVariable(name: "fb", scope: !5763, file: !3, line: 1129, type: !1420)
!5766 = !DILocation(line: 1129, column: 17, scope: !5763)
!5767 = !DILocation(line: 1130, column: 26, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 1130, column: 8)
!5769 = !DILocation(line: 1130, column: 8, scope: !5768)
!5770 = !DILocation(line: 1130, column: 8, scope: !5763)
!5771 = !DILocation(line: 1133, column: 9, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 1133, column: 9)
!5773 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 1130, column: 42)
!5774 = !DILocation(line: 1133, column: 50, scope: !5772)
!5775 = !DILocation(line: 1133, column: 47, scope: !5772)
!5776 = !DILocation(line: 1133, column: 9, scope: !5773)
!5777 = !DILocation(line: 1134, column: 6, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1133, column: 89)
!5779 = !DILocation(line: 1135, column: 9, scope: !5778)
!5780 = !DILocation(line: 1136, column: 5, scope: !5778)
!5781 = !DILocation(line: 1137, column: 4, scope: !5773)
!5782 = !DILocation(line: 1138, column: 3, scope: !5763)
!5783 = !DILocation(line: 1139, column: 2, scope: !5758)
!5784 = distinct !{!5784, !5753, !5785}
!5785 = !DILocation(line: 1139, column: 2, scope: !5754)
!5786 = !DILocation(line: 1143, column: 6, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1143, column: 6)
!5788 = !DILocation(line: 1143, column: 10, scope: !5787)
!5789 = !DILocation(line: 1143, column: 6, scope: !5716)
!5790 = !DILocation(line: 1144, column: 14, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 1143, column: 16)
!5792 = !DILocation(line: 1144, column: 18, scope: !5791)
!5793 = !DILocation(line: 1144, column: 3, scope: !5791)
!5794 = !DILocation(line: 1145, column: 3, scope: !5791)
!5795 = !DILocation(line: 1148, column: 15, scope: !5716)
!5796 = !DILocation(line: 1148, column: 26, scope: !5716)
!5797 = !DILocation(line: 1148, column: 80, scope: !5716)
!5798 = !DILocation(line: 1148, column: 2, scope: !5716)
!5799 = !DILocation(line: 1152, column: 32, scope: !5716)
!5800 = !DILocation(line: 1152, column: 36, scope: !5716)
!5801 = !DILocation(line: 1152, column: 45, scope: !5716)
!5802 = !DILocation(line: 1152, column: 40, scope: !5716)
!5803 = !DILocation(line: 1152, column: 2, scope: !5716)
!5804 = !DILocation(line: 1154, column: 14, scope: !5716)
!5805 = !DILocation(line: 1154, column: 18, scope: !5716)
!5806 = !DILocation(line: 1154, column: 2, scope: !5716)
!5807 = !DILocation(line: 1156, column: 32, scope: !5716)
!5808 = !DILocation(line: 1156, column: 36, scope: !5716)
!5809 = !DILocation(line: 1156, column: 45, scope: !5716)
!5810 = !DILocation(line: 1156, column: 40, scope: !5716)
!5811 = !DILocation(line: 1156, column: 2, scope: !5716)
!5812 = !DILocation(line: 1157, column: 31, scope: !5716)
!5813 = !DILocation(line: 1157, column: 35, scope: !5716)
!5814 = !DILocation(line: 1157, column: 44, scope: !5716)
!5815 = !DILocation(line: 1157, column: 39, scope: !5716)
!5816 = !DILocation(line: 1157, column: 2, scope: !5716)
!5817 = !DILocation(line: 1158, column: 24, scope: !5716)
!5818 = !DILocation(line: 1158, column: 2, scope: !5716)
!5819 = !DILocation(line: 1160, column: 22, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1160, column: 6)
!5821 = !DILocation(line: 1160, column: 33, scope: !5820)
!5822 = !DILocation(line: 1160, column: 7, scope: !5820)
!5823 = !DILocation(line: 1160, column: 6, scope: !5716)
!5824 = !DILocation(line: 1161, column: 3, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5820, file: !3, line: 1160, column: 44)
!5826 = !DILocation(line: 1164, column: 22, scope: !5716)
!5827 = !DILocation(line: 1164, column: 2, scope: !5716)
!5828 = !DILocation(line: 1166, column: 2, scope: !5716)
!5829 = !DILocation(line: 1167, column: 1, scope: !5716)
!5830 = distinct !DISubprogram(name: "MESH_OT_hide", scope: !3, file: !3, line: 1200, type: !3767, scopeLine: 1201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5831 = !DILocalVariable(name: "ot", arg: 1, scope: !5830, file: !3, line: 1200, type: !3769)
!5832 = !DILocation(line: 1200, column: 35, scope: !5830)
!5833 = !DILocation(line: 1203, column: 2, scope: !5830)
!5834 = !DILocation(line: 1203, column: 6, scope: !5830)
!5835 = !DILocation(line: 1203, column: 11, scope: !5830)
!5836 = !DILocation(line: 1204, column: 2, scope: !5830)
!5837 = !DILocation(line: 1204, column: 6, scope: !5830)
!5838 = !DILocation(line: 1204, column: 13, scope: !5830)
!5839 = !DILocation(line: 1205, column: 2, scope: !5830)
!5840 = !DILocation(line: 1205, column: 6, scope: !5830)
!5841 = !DILocation(line: 1205, column: 18, scope: !5830)
!5842 = !DILocation(line: 1208, column: 2, scope: !5830)
!5843 = !DILocation(line: 1208, column: 6, scope: !5830)
!5844 = !DILocation(line: 1208, column: 11, scope: !5830)
!5845 = !DILocation(line: 1209, column: 2, scope: !5830)
!5846 = !DILocation(line: 1209, column: 6, scope: !5830)
!5847 = !DILocation(line: 1209, column: 11, scope: !5830)
!5848 = !DILocation(line: 1212, column: 2, scope: !5830)
!5849 = !DILocation(line: 1212, column: 6, scope: !5830)
!5850 = !DILocation(line: 1212, column: 11, scope: !5830)
!5851 = !DILocation(line: 1215, column: 18, scope: !5830)
!5852 = !DILocation(line: 1215, column: 22, scope: !5830)
!5853 = !DILocation(line: 1215, column: 2, scope: !5830)
!5854 = !DILocation(line: 1216, column: 1, scope: !5830)
!5855 = distinct !DISubprogram(name: "edbm_hide_exec", scope: !3, file: !3, line: 1188, type: !4116, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5856 = !DILocalVariable(name: "C", arg: 1, scope: !5855, file: !3, line: 1188, type: !4118)
!5857 = !DILocation(line: 1188, column: 37, scope: !5855)
!5858 = !DILocalVariable(name: "op", arg: 2, scope: !5855, file: !3, line: 1188, type: !4120)
!5859 = !DILocation(line: 1188, column: 52, scope: !5855)
!5860 = !DILocalVariable(name: "obedit", scope: !5855, file: !3, line: 1190, type: !4127)
!5861 = !DILocation(line: 1190, column: 10, scope: !5855)
!5862 = !DILocation(line: 1190, column: 40, scope: !5855)
!5863 = !DILocation(line: 1190, column: 19, scope: !5855)
!5864 = !DILocalVariable(name: "em", scope: !5855, file: !3, line: 1191, type: !4133)
!5865 = !DILocation(line: 1191, column: 14, scope: !5855)
!5866 = !DILocation(line: 1191, column: 44, scope: !5855)
!5867 = !DILocation(line: 1191, column: 19, scope: !5855)
!5868 = !DILocation(line: 1193, column: 17, scope: !5855)
!5869 = !DILocation(line: 1193, column: 37, scope: !5855)
!5870 = !DILocation(line: 1193, column: 41, scope: !5855)
!5871 = !DILocation(line: 1193, column: 21, scope: !5855)
!5872 = !DILocation(line: 1193, column: 2, scope: !5855)
!5873 = !DILocation(line: 1195, column: 22, scope: !5855)
!5874 = !DILocation(line: 1195, column: 2, scope: !5855)
!5875 = !DILocation(line: 1197, column: 2, scope: !5855)
!5876 = distinct !DISubprogram(name: "MESH_OT_reveal", scope: !3, file: !3, line: 1230, type: !3767, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5877 = !DILocalVariable(name: "ot", arg: 1, scope: !5876, file: !3, line: 1230, type: !3769)
!5878 = !DILocation(line: 1230, column: 37, scope: !5876)
!5879 = !DILocation(line: 1233, column: 2, scope: !5876)
!5880 = !DILocation(line: 1233, column: 6, scope: !5876)
!5881 = !DILocation(line: 1233, column: 11, scope: !5876)
!5882 = !DILocation(line: 1234, column: 2, scope: !5876)
!5883 = !DILocation(line: 1234, column: 6, scope: !5876)
!5884 = !DILocation(line: 1234, column: 13, scope: !5876)
!5885 = !DILocation(line: 1235, column: 2, scope: !5876)
!5886 = !DILocation(line: 1235, column: 6, scope: !5876)
!5887 = !DILocation(line: 1235, column: 18, scope: !5876)
!5888 = !DILocation(line: 1238, column: 2, scope: !5876)
!5889 = !DILocation(line: 1238, column: 6, scope: !5876)
!5890 = !DILocation(line: 1238, column: 11, scope: !5876)
!5891 = !DILocation(line: 1239, column: 2, scope: !5876)
!5892 = !DILocation(line: 1239, column: 6, scope: !5876)
!5893 = !DILocation(line: 1239, column: 11, scope: !5876)
!5894 = !DILocation(line: 1242, column: 2, scope: !5876)
!5895 = !DILocation(line: 1242, column: 6, scope: !5876)
!5896 = !DILocation(line: 1242, column: 11, scope: !5876)
!5897 = !DILocation(line: 1243, column: 1, scope: !5876)
!5898 = distinct !DISubprogram(name: "edbm_reveal_exec", scope: !3, file: !3, line: 1218, type: !4116, scopeLine: 1219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5899 = !DILocalVariable(name: "C", arg: 1, scope: !5898, file: !3, line: 1218, type: !4118)
!5900 = !DILocation(line: 1218, column: 39, scope: !5898)
!5901 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !5898, file: !3, line: 1218, type: !4120)
!5902 = !DILocation(line: 1218, column: 54, scope: !5898)
!5903 = !DILocalVariable(name: "obedit", scope: !5898, file: !3, line: 1220, type: !4127)
!5904 = !DILocation(line: 1220, column: 10, scope: !5898)
!5905 = !DILocation(line: 1220, column: 40, scope: !5898)
!5906 = !DILocation(line: 1220, column: 19, scope: !5898)
!5907 = !DILocalVariable(name: "em", scope: !5898, file: !3, line: 1221, type: !4133)
!5908 = !DILocation(line: 1221, column: 14, scope: !5898)
!5909 = !DILocation(line: 1221, column: 44, scope: !5898)
!5910 = !DILocation(line: 1221, column: 19, scope: !5898)
!5911 = !DILocation(line: 1223, column: 19, scope: !5898)
!5912 = !DILocation(line: 1223, column: 2, scope: !5898)
!5913 = !DILocation(line: 1225, column: 22, scope: !5898)
!5914 = !DILocation(line: 1225, column: 2, scope: !5898)
!5915 = !DILocation(line: 1227, column: 2, scope: !5898)
!5916 = distinct !DISubprogram(name: "MESH_OT_normals_make_consistent", scope: !3, file: !3, line: 1263, type: !3767, scopeLine: 1264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5917 = !DILocalVariable(name: "ot", arg: 1, scope: !5916, file: !3, line: 1263, type: !3769)
!5918 = !DILocation(line: 1263, column: 54, scope: !5916)
!5919 = !DILocation(line: 1266, column: 2, scope: !5916)
!5920 = !DILocation(line: 1266, column: 6, scope: !5916)
!5921 = !DILocation(line: 1266, column: 11, scope: !5916)
!5922 = !DILocation(line: 1267, column: 2, scope: !5916)
!5923 = !DILocation(line: 1267, column: 6, scope: !5916)
!5924 = !DILocation(line: 1267, column: 18, scope: !5916)
!5925 = !DILocation(line: 1268, column: 2, scope: !5916)
!5926 = !DILocation(line: 1268, column: 6, scope: !5916)
!5927 = !DILocation(line: 1268, column: 13, scope: !5916)
!5928 = !DILocation(line: 1271, column: 2, scope: !5916)
!5929 = !DILocation(line: 1271, column: 6, scope: !5916)
!5930 = !DILocation(line: 1271, column: 11, scope: !5916)
!5931 = !DILocation(line: 1272, column: 2, scope: !5916)
!5932 = !DILocation(line: 1272, column: 6, scope: !5916)
!5933 = !DILocation(line: 1272, column: 11, scope: !5916)
!5934 = !DILocation(line: 1275, column: 2, scope: !5916)
!5935 = !DILocation(line: 1275, column: 6, scope: !5916)
!5936 = !DILocation(line: 1275, column: 11, scope: !5916)
!5937 = !DILocation(line: 1277, column: 18, scope: !5916)
!5938 = !DILocation(line: 1277, column: 22, scope: !5916)
!5939 = !DILocation(line: 1277, column: 2, scope: !5916)
!5940 = !DILocation(line: 1278, column: 1, scope: !5916)
!5941 = distinct !DISubprogram(name: "edbm_normals_make_consistent_exec", scope: !3, file: !3, line: 1245, type: !4116, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5942 = !DILocalVariable(name: "C", arg: 1, scope: !5941, file: !3, line: 1245, type: !4118)
!5943 = !DILocation(line: 1245, column: 56, scope: !5941)
!5944 = !DILocalVariable(name: "op", arg: 2, scope: !5941, file: !3, line: 1245, type: !4120)
!5945 = !DILocation(line: 1245, column: 71, scope: !5941)
!5946 = !DILocalVariable(name: "obedit", scope: !5941, file: !3, line: 1247, type: !4127)
!5947 = !DILocation(line: 1247, column: 10, scope: !5941)
!5948 = !DILocation(line: 1247, column: 40, scope: !5941)
!5949 = !DILocation(line: 1247, column: 19, scope: !5941)
!5950 = !DILocalVariable(name: "em", scope: !5941, file: !3, line: 1248, type: !4133)
!5951 = !DILocation(line: 1248, column: 14, scope: !5941)
!5952 = !DILocation(line: 1248, column: 44, scope: !5941)
!5953 = !DILocation(line: 1248, column: 19, scope: !5941)
!5954 = !DILocation(line: 1252, column: 21, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1252, column: 6)
!5956 = !DILocation(line: 1252, column: 25, scope: !5955)
!5957 = !DILocation(line: 1252, column: 7, scope: !5955)
!5958 = !DILocation(line: 1252, column: 6, scope: !5941)
!5959 = !DILocation(line: 1253, column: 3, scope: !5955)
!5960 = !DILocation(line: 1255, column: 22, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1255, column: 6)
!5962 = !DILocation(line: 1255, column: 26, scope: !5961)
!5963 = !DILocation(line: 1255, column: 6, scope: !5961)
!5964 = !DILocation(line: 1255, column: 6, scope: !5941)
!5965 = !DILocation(line: 1256, column: 17, scope: !5961)
!5966 = !DILocation(line: 1256, column: 21, scope: !5961)
!5967 = !DILocation(line: 1256, column: 3, scope: !5961)
!5968 = !DILocation(line: 1258, column: 22, scope: !5941)
!5969 = !DILocation(line: 1258, column: 2, scope: !5941)
!5970 = !DILocation(line: 1260, column: 2, scope: !5941)
!5971 = !DILocation(line: 1261, column: 1, scope: !5941)
!5972 = distinct !DISubprogram(name: "MESH_OT_vertices_smooth", scope: !3, file: !3, line: 1348, type: !3767, scopeLine: 1349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!5973 = !DILocalVariable(name: "ot", arg: 1, scope: !5972, file: !3, line: 1348, type: !3769)
!5974 = !DILocation(line: 1348, column: 46, scope: !5972)
!5975 = !DILocation(line: 1351, column: 2, scope: !5972)
!5976 = !DILocation(line: 1351, column: 6, scope: !5972)
!5977 = !DILocation(line: 1351, column: 11, scope: !5972)
!5978 = !DILocation(line: 1352, column: 2, scope: !5972)
!5979 = !DILocation(line: 1352, column: 6, scope: !5972)
!5980 = !DILocation(line: 1352, column: 18, scope: !5972)
!5981 = !DILocation(line: 1353, column: 2, scope: !5972)
!5982 = !DILocation(line: 1353, column: 6, scope: !5972)
!5983 = !DILocation(line: 1353, column: 13, scope: !5972)
!5984 = !DILocation(line: 1356, column: 2, scope: !5972)
!5985 = !DILocation(line: 1356, column: 6, scope: !5972)
!5986 = !DILocation(line: 1356, column: 11, scope: !5972)
!5987 = !DILocation(line: 1357, column: 2, scope: !5972)
!5988 = !DILocation(line: 1357, column: 6, scope: !5972)
!5989 = !DILocation(line: 1357, column: 11, scope: !5972)
!5990 = !DILocation(line: 1360, column: 2, scope: !5972)
!5991 = !DILocation(line: 1360, column: 6, scope: !5972)
!5992 = !DILocation(line: 1360, column: 11, scope: !5972)
!5993 = !DILocation(line: 1362, column: 16, scope: !5972)
!5994 = !DILocation(line: 1362, column: 20, scope: !5972)
!5995 = !DILocation(line: 1362, column: 2, scope: !5972)
!5996 = !DILocation(line: 1363, column: 14, scope: !5972)
!5997 = !DILocation(line: 1363, column: 18, scope: !5972)
!5998 = !DILocation(line: 1363, column: 2, scope: !5972)
!5999 = !DILocation(line: 1364, column: 18, scope: !5972)
!6000 = !DILocation(line: 1364, column: 22, scope: !5972)
!6001 = !DILocation(line: 1364, column: 2, scope: !5972)
!6002 = !DILocation(line: 1365, column: 18, scope: !5972)
!6003 = !DILocation(line: 1365, column: 22, scope: !5972)
!6004 = !DILocation(line: 1365, column: 2, scope: !5972)
!6005 = !DILocation(line: 1366, column: 18, scope: !5972)
!6006 = !DILocation(line: 1366, column: 22, scope: !5972)
!6007 = !DILocation(line: 1366, column: 2, scope: !5972)
!6008 = !DILocation(line: 1367, column: 1, scope: !5972)
!6009 = distinct !DISubprogram(name: "edbm_do_smooth_vertex_exec", scope: !3, file: !3, line: 1282, type: !4116, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6010 = !DILocalVariable(name: "C", arg: 1, scope: !6009, file: !3, line: 1282, type: !4118)
!6011 = !DILocation(line: 1282, column: 49, scope: !6009)
!6012 = !DILocalVariable(name: "op", arg: 2, scope: !6009, file: !3, line: 1282, type: !4120)
!6013 = !DILocation(line: 1282, column: 64, scope: !6009)
!6014 = !DILocalVariable(name: "obedit", scope: !6009, file: !3, line: 1284, type: !4127)
!6015 = !DILocation(line: 1284, column: 10, scope: !6009)
!6016 = !DILocation(line: 1284, column: 40, scope: !6009)
!6017 = !DILocation(line: 1284, column: 19, scope: !6009)
!6018 = !DILocalVariable(name: "me", scope: !6009, file: !3, line: 1285, type: !1427)
!6019 = !DILocation(line: 1285, column: 8, scope: !6009)
!6020 = !DILocation(line: 1285, column: 13, scope: !6009)
!6021 = !DILocation(line: 1285, column: 21, scope: !6009)
!6022 = !DILocalVariable(name: "em", scope: !6009, file: !3, line: 1286, type: !4133)
!6023 = !DILocation(line: 1286, column: 14, scope: !6009)
!6024 = !DILocation(line: 1286, column: 44, scope: !6009)
!6025 = !DILocation(line: 1286, column: 19, scope: !6009)
!6026 = !DILocalVariable(name: "md", scope: !6009, file: !3, line: 1287, type: !6027)
!6027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3736, size: 64)
!6028 = !DILocation(line: 1287, column: 16, scope: !6009)
!6029 = !DILocalVariable(name: "mirrx", scope: !6009, file: !3, line: 1288, type: !2530)
!6030 = !DILocation(line: 1288, column: 7, scope: !6009)
!6031 = !DILocalVariable(name: "mirry", scope: !6009, file: !3, line: 1288, type: !2530)
!6032 = !DILocation(line: 1288, column: 22, scope: !6009)
!6033 = !DILocalVariable(name: "mirrz", scope: !6009, file: !3, line: 1288, type: !2530)
!6034 = !DILocation(line: 1288, column: 37, scope: !6009)
!6035 = !DILocalVariable(name: "i", scope: !6009, file: !3, line: 1289, type: !135)
!6036 = !DILocation(line: 1289, column: 6, scope: !6009)
!6037 = !DILocalVariable(name: "repeat", scope: !6009, file: !3, line: 1289, type: !135)
!6038 = !DILocation(line: 1289, column: 9, scope: !6009)
!6039 = !DILocalVariable(name: "clip_dist", scope: !6009, file: !3, line: 1290, type: !1344)
!6040 = !DILocation(line: 1290, column: 8, scope: !6009)
!6041 = !DILocalVariable(name: "fac", scope: !6009, file: !3, line: 1291, type: !4150)
!6042 = !DILocation(line: 1291, column: 14, scope: !6009)
!6043 = !DILocation(line: 1291, column: 34, scope: !6009)
!6044 = !DILocation(line: 1291, column: 38, scope: !6009)
!6045 = !DILocation(line: 1291, column: 20, scope: !6009)
!6046 = !DILocalVariable(name: "use_topology", scope: !6009, file: !3, line: 1292, type: !4811)
!6047 = !DILocation(line: 1292, column: 13, scope: !6009)
!6048 = !DILocation(line: 1292, column: 29, scope: !6009)
!6049 = !DILocation(line: 1292, column: 33, scope: !6009)
!6050 = !DILocation(line: 1292, column: 42, scope: !6009)
!6051 = !DILocation(line: 1292, column: 65, scope: !6009)
!6052 = !DILocation(line: 1292, column: 28, scope: !6009)
!6053 = !DILocalVariable(name: "xaxis", scope: !6009, file: !3, line: 1294, type: !4811)
!6054 = !DILocation(line: 1294, column: 13, scope: !6009)
!6055 = !DILocation(line: 1294, column: 37, scope: !6009)
!6056 = !DILocation(line: 1294, column: 41, scope: !6009)
!6057 = !DILocation(line: 1294, column: 21, scope: !6009)
!6058 = !DILocalVariable(name: "yaxis", scope: !6009, file: !3, line: 1295, type: !4811)
!6059 = !DILocation(line: 1295, column: 13, scope: !6009)
!6060 = !DILocation(line: 1295, column: 37, scope: !6009)
!6061 = !DILocation(line: 1295, column: 41, scope: !6009)
!6062 = !DILocation(line: 1295, column: 21, scope: !6009)
!6063 = !DILocalVariable(name: "zaxis", scope: !6009, file: !3, line: 1296, type: !4811)
!6064 = !DILocation(line: 1296, column: 13, scope: !6009)
!6065 = !DILocation(line: 1296, column: 37, scope: !6009)
!6066 = !DILocation(line: 1296, column: 41, scope: !6009)
!6067 = !DILocation(line: 1296, column: 21, scope: !6009)
!6068 = !DILocation(line: 1299, column: 15, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 1299, column: 6)
!6070 = !DILocation(line: 1299, column: 23, scope: !6069)
!6071 = !DILocation(line: 1299, column: 7, scope: !6069)
!6072 = !DILocation(line: 1299, column: 30, scope: !6069)
!6073 = !DILocation(line: 1299, column: 6, scope: !6069)
!6074 = !DILocation(line: 1299, column: 39, scope: !6069)
!6075 = !DILocation(line: 1299, column: 6, scope: !6009)
!6076 = !DILocation(line: 1300, column: 33, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 1299, column: 59)
!6078 = !DILocation(line: 1300, column: 53, scope: !6077)
!6079 = !DILocation(line: 1300, column: 3, scope: !6077)
!6080 = !DILocation(line: 1301, column: 2, scope: !6077)
!6081 = !DILocation(line: 1306, column: 12, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 1306, column: 2)
!6083 = !DILocation(line: 1306, column: 20, scope: !6082)
!6084 = !DILocation(line: 1306, column: 30, scope: !6082)
!6085 = !DILocation(line: 1306, column: 10, scope: !6082)
!6086 = !DILocation(line: 1306, column: 7, scope: !6082)
!6087 = !DILocation(line: 1306, column: 37, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6082, file: !3, line: 1306, column: 2)
!6089 = !DILocation(line: 1306, column: 2, scope: !6082)
!6090 = !DILocation(line: 1307, column: 7, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 1307, column: 7)
!6092 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 1306, column: 56)
!6093 = !DILocation(line: 1307, column: 11, scope: !6091)
!6094 = !DILocation(line: 1307, column: 16, scope: !6091)
!6095 = !DILocation(line: 1307, column: 40, scope: !6091)
!6096 = !DILocation(line: 1307, column: 44, scope: !6091)
!6097 = !DILocation(line: 1307, column: 48, scope: !6091)
!6098 = !DILocation(line: 1307, column: 53, scope: !6091)
!6099 = !DILocation(line: 1307, column: 7, scope: !6092)
!6100 = !DILocalVariable(name: "mmd", scope: !6101, file: !3, line: 1308, type: !3731)
!6101 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 1307, column: 80)
!6102 = !DILocation(line: 1308, column: 24, scope: !6101)
!6103 = !DILocation(line: 1308, column: 52, scope: !6101)
!6104 = !DILocation(line: 1308, column: 30, scope: !6101)
!6105 = !DILocation(line: 1310, column: 8, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 1310, column: 8)
!6107 = !DILocation(line: 1310, column: 13, scope: !6106)
!6108 = !DILocation(line: 1310, column: 18, scope: !6106)
!6109 = !DILocation(line: 1310, column: 8, scope: !6101)
!6110 = !DILocation(line: 1311, column: 9, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 1311, column: 9)
!6112 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 1310, column: 38)
!6113 = !DILocation(line: 1311, column: 14, scope: !6111)
!6114 = !DILocation(line: 1311, column: 19, scope: !6111)
!6115 = !DILocation(line: 1311, column: 9, scope: !6112)
!6116 = !DILocation(line: 1312, column: 12, scope: !6111)
!6117 = !DILocation(line: 1312, column: 6, scope: !6111)
!6118 = !DILocation(line: 1313, column: 9, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 1313, column: 9)
!6120 = !DILocation(line: 1313, column: 14, scope: !6119)
!6121 = !DILocation(line: 1313, column: 19, scope: !6119)
!6122 = !DILocation(line: 1313, column: 9, scope: !6112)
!6123 = !DILocation(line: 1314, column: 12, scope: !6119)
!6124 = !DILocation(line: 1314, column: 6, scope: !6119)
!6125 = !DILocation(line: 1315, column: 9, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 1315, column: 9)
!6127 = !DILocation(line: 1315, column: 14, scope: !6126)
!6128 = !DILocation(line: 1315, column: 19, scope: !6126)
!6129 = !DILocation(line: 1315, column: 9, scope: !6112)
!6130 = !DILocation(line: 1316, column: 12, scope: !6126)
!6131 = !DILocation(line: 1316, column: 6, scope: !6126)
!6132 = !DILocation(line: 1318, column: 17, scope: !6112)
!6133 = !DILocation(line: 1318, column: 22, scope: !6112)
!6134 = !DILocation(line: 1318, column: 15, scope: !6112)
!6135 = !DILocation(line: 1319, column: 4, scope: !6112)
!6136 = !DILocation(line: 1320, column: 3, scope: !6101)
!6137 = !DILocation(line: 1321, column: 2, scope: !6092)
!6138 = !DILocation(line: 1306, column: 46, scope: !6088)
!6139 = !DILocation(line: 1306, column: 50, scope: !6088)
!6140 = !DILocation(line: 1306, column: 44, scope: !6088)
!6141 = !DILocation(line: 1306, column: 2, scope: !6088)
!6142 = distinct !{!6142, !6089, !6143}
!6143 = !DILocation(line: 1321, column: 2, scope: !6082)
!6144 = !DILocation(line: 1323, column: 23, scope: !6009)
!6145 = !DILocation(line: 1323, column: 27, scope: !6009)
!6146 = !DILocation(line: 1323, column: 11, scope: !6009)
!6147 = !DILocation(line: 1323, column: 9, scope: !6009)
!6148 = !DILocation(line: 1324, column: 7, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 1324, column: 6)
!6150 = !DILocation(line: 1324, column: 6, scope: !6009)
!6151 = !DILocation(line: 1325, column: 10, scope: !6149)
!6152 = !DILocation(line: 1325, column: 3, scope: !6149)
!6153 = !DILocation(line: 1327, column: 9, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 1327, column: 2)
!6155 = !DILocation(line: 1327, column: 7, scope: !6154)
!6156 = !DILocation(line: 1327, column: 14, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 1327, column: 2)
!6158 = !DILocation(line: 1327, column: 18, scope: !6157)
!6159 = !DILocation(line: 1327, column: 16, scope: !6157)
!6160 = !DILocation(line: 1327, column: 2, scope: !6154)
!6161 = !DILocation(line: 1328, column: 22, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 1328, column: 7)
!6163 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 1327, column: 31)
!6164 = !DILocation(line: 1328, column: 26, scope: !6162)
!6165 = !DILocation(line: 1331, column: 38, scope: !6162)
!6166 = !DILocation(line: 1331, column: 43, scope: !6162)
!6167 = !DILocation(line: 1331, column: 50, scope: !6162)
!6168 = !DILocation(line: 1331, column: 57, scope: !6162)
!6169 = !DILocation(line: 1331, column: 64, scope: !6162)
!6170 = !DILocation(line: 1331, column: 75, scope: !6162)
!6171 = !DILocation(line: 1331, column: 82, scope: !6162)
!6172 = !DILocation(line: 1331, column: 89, scope: !6162)
!6173 = !DILocation(line: 1328, column: 8, scope: !6162)
!6174 = !DILocation(line: 1328, column: 7, scope: !6163)
!6175 = !DILocation(line: 1333, column: 4, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6162, file: !3, line: 1332, column: 3)
!6177 = !DILocation(line: 1335, column: 2, scope: !6163)
!6178 = !DILocation(line: 1327, column: 27, scope: !6157)
!6179 = !DILocation(line: 1327, column: 2, scope: !6157)
!6180 = distinct !{!6180, !6160, !6181}
!6181 = !DILocation(line: 1335, column: 2, scope: !6154)
!6182 = !DILocation(line: 1338, column: 15, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 1338, column: 6)
!6184 = !DILocation(line: 1338, column: 23, scope: !6183)
!6185 = !DILocation(line: 1338, column: 7, scope: !6183)
!6186 = !DILocation(line: 1338, column: 30, scope: !6183)
!6187 = !DILocation(line: 1338, column: 6, scope: !6183)
!6188 = !DILocation(line: 1338, column: 39, scope: !6183)
!6189 = !DILocation(line: 1338, column: 6, scope: !6009)
!6190 = !DILocation(line: 1339, column: 27, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 1338, column: 59)
!6192 = !DILocation(line: 1339, column: 3, scope: !6191)
!6193 = !DILocation(line: 1340, column: 31, scope: !6191)
!6194 = !DILocation(line: 1340, column: 3, scope: !6191)
!6195 = !DILocation(line: 1341, column: 2, scope: !6191)
!6196 = !DILocation(line: 1343, column: 22, scope: !6009)
!6197 = !DILocation(line: 1343, column: 2, scope: !6009)
!6198 = !DILocation(line: 1345, column: 2, scope: !6009)
!6199 = !DILocation(line: 1346, column: 1, scope: !6009)
!6200 = distinct !DISubprogram(name: "MESH_OT_vertices_smooth_laplacian", scope: !3, file: !3, line: 1427, type: !3767, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6201 = !DILocalVariable(name: "ot", arg: 1, scope: !6200, file: !3, line: 1427, type: !3769)
!6202 = !DILocation(line: 1427, column: 56, scope: !6200)
!6203 = !DILocation(line: 1430, column: 2, scope: !6200)
!6204 = !DILocation(line: 1430, column: 6, scope: !6200)
!6205 = !DILocation(line: 1430, column: 11, scope: !6200)
!6206 = !DILocation(line: 1431, column: 2, scope: !6200)
!6207 = !DILocation(line: 1431, column: 6, scope: !6200)
!6208 = !DILocation(line: 1431, column: 18, scope: !6200)
!6209 = !DILocation(line: 1432, column: 2, scope: !6200)
!6210 = !DILocation(line: 1432, column: 6, scope: !6200)
!6211 = !DILocation(line: 1432, column: 13, scope: !6200)
!6212 = !DILocation(line: 1435, column: 2, scope: !6200)
!6213 = !DILocation(line: 1435, column: 6, scope: !6200)
!6214 = !DILocation(line: 1435, column: 11, scope: !6200)
!6215 = !DILocation(line: 1436, column: 2, scope: !6200)
!6216 = !DILocation(line: 1436, column: 6, scope: !6200)
!6217 = !DILocation(line: 1436, column: 11, scope: !6200)
!6218 = !DILocation(line: 1439, column: 2, scope: !6200)
!6219 = !DILocation(line: 1439, column: 6, scope: !6200)
!6220 = !DILocation(line: 1439, column: 11, scope: !6200)
!6221 = !DILocation(line: 1441, column: 14, scope: !6200)
!6222 = !DILocation(line: 1441, column: 18, scope: !6200)
!6223 = !DILocation(line: 1441, column: 2, scope: !6200)
!6224 = !DILocation(line: 1443, column: 16, scope: !6200)
!6225 = !DILocation(line: 1443, column: 20, scope: !6200)
!6226 = !DILocation(line: 1443, column: 2, scope: !6200)
!6227 = !DILocation(line: 1445, column: 16, scope: !6200)
!6228 = !DILocation(line: 1445, column: 20, scope: !6200)
!6229 = !DILocation(line: 1445, column: 2, scope: !6200)
!6230 = !DILocation(line: 1447, column: 18, scope: !6200)
!6231 = !DILocation(line: 1447, column: 22, scope: !6200)
!6232 = !DILocation(line: 1447, column: 2, scope: !6200)
!6233 = !DILocation(line: 1448, column: 18, scope: !6200)
!6234 = !DILocation(line: 1448, column: 22, scope: !6200)
!6235 = !DILocation(line: 1448, column: 2, scope: !6200)
!6236 = !DILocation(line: 1449, column: 18, scope: !6200)
!6237 = !DILocation(line: 1449, column: 22, scope: !6200)
!6238 = !DILocation(line: 1449, column: 2, scope: !6200)
!6239 = !DILocation(line: 1450, column: 18, scope: !6200)
!6240 = !DILocation(line: 1450, column: 22, scope: !6200)
!6241 = !DILocation(line: 1450, column: 2, scope: !6200)
!6242 = !DILocation(line: 1451, column: 1, scope: !6200)
!6243 = distinct !DISubprogram(name: "edbm_do_smooth_laplacian_vertex_exec", scope: !3, file: !3, line: 1369, type: !4116, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6244 = !DILocalVariable(name: "C", arg: 1, scope: !6243, file: !3, line: 1369, type: !4118)
!6245 = !DILocation(line: 1369, column: 59, scope: !6243)
!6246 = !DILocalVariable(name: "op", arg: 2, scope: !6243, file: !3, line: 1369, type: !4120)
!6247 = !DILocation(line: 1369, column: 74, scope: !6243)
!6248 = !DILocalVariable(name: "obedit", scope: !6243, file: !3, line: 1371, type: !4127)
!6249 = !DILocation(line: 1371, column: 10, scope: !6243)
!6250 = !DILocation(line: 1371, column: 40, scope: !6243)
!6251 = !DILocation(line: 1371, column: 19, scope: !6243)
!6252 = !DILocalVariable(name: "em", scope: !6243, file: !3, line: 1372, type: !4133)
!6253 = !DILocation(line: 1372, column: 14, scope: !6243)
!6254 = !DILocation(line: 1372, column: 44, scope: !6243)
!6255 = !DILocation(line: 1372, column: 19, scope: !6243)
!6256 = !DILocalVariable(name: "me", scope: !6243, file: !3, line: 1373, type: !1427)
!6257 = !DILocation(line: 1373, column: 8, scope: !6243)
!6258 = !DILocation(line: 1373, column: 13, scope: !6243)
!6259 = !DILocation(line: 1373, column: 21, scope: !6243)
!6260 = !DILocalVariable(name: "use_topology", scope: !6243, file: !3, line: 1374, type: !2530)
!6261 = !DILocation(line: 1374, column: 7, scope: !6243)
!6262 = !DILocation(line: 1374, column: 23, scope: !6243)
!6263 = !DILocation(line: 1374, column: 27, scope: !6243)
!6264 = !DILocation(line: 1374, column: 36, scope: !6243)
!6265 = !DILocation(line: 1374, column: 59, scope: !6243)
!6266 = !DILocation(line: 1374, column: 22, scope: !6243)
!6267 = !DILocalVariable(name: "usex", scope: !6243, file: !3, line: 1375, type: !2530)
!6268 = !DILocation(line: 1375, column: 7, scope: !6243)
!6269 = !DILocalVariable(name: "usey", scope: !6243, file: !3, line: 1375, type: !2530)
!6270 = !DILocation(line: 1375, column: 20, scope: !6243)
!6271 = !DILocalVariable(name: "usez", scope: !6243, file: !3, line: 1375, type: !2530)
!6272 = !DILocation(line: 1375, column: 33, scope: !6243)
!6273 = !DILocalVariable(name: "preserve_volume", scope: !6243, file: !3, line: 1375, type: !2530)
!6274 = !DILocation(line: 1375, column: 46, scope: !6243)
!6275 = !DILocalVariable(name: "i", scope: !6243, file: !3, line: 1376, type: !135)
!6276 = !DILocation(line: 1376, column: 6, scope: !6243)
!6277 = !DILocalVariable(name: "repeat", scope: !6243, file: !3, line: 1376, type: !135)
!6278 = !DILocation(line: 1376, column: 9, scope: !6243)
!6279 = !DILocalVariable(name: "lambda_factor", scope: !6243, file: !3, line: 1377, type: !1344)
!6280 = !DILocation(line: 1377, column: 8, scope: !6243)
!6281 = !DILocalVariable(name: "lambda_border", scope: !6243, file: !3, line: 1378, type: !1344)
!6282 = !DILocation(line: 1378, column: 8, scope: !6243)
!6283 = !DILocalVariable(name: "fiter", scope: !6243, file: !3, line: 1379, type: !4456)
!6284 = !DILocation(line: 1379, column: 9, scope: !6243)
!6285 = !DILocalVariable(name: "f", scope: !6243, file: !3, line: 1380, type: !1420)
!6286 = !DILocation(line: 1380, column: 10, scope: !6243)
!6287 = !DILocation(line: 1383, column: 2, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1383, column: 2)
!6289 = !DILocation(line: 1383, column: 2, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 1383, column: 2)
!6291 = !DILocation(line: 1384, column: 7, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 1384, column: 7)
!6293 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 1383, column: 53)
!6294 = !DILocation(line: 1384, column: 7, scope: !6293)
!6295 = !DILocation(line: 1385, column: 8, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 1385, column: 8)
!6297 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1384, column: 45)
!6298 = !DILocation(line: 1385, column: 11, scope: !6296)
!6299 = !DILocation(line: 1385, column: 15, scope: !6296)
!6300 = !DILocation(line: 1385, column: 8, scope: !6297)
!6301 = !DILocation(line: 1386, column: 16, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 1385, column: 20)
!6303 = !DILocation(line: 1386, column: 20, scope: !6302)
!6304 = !DILocation(line: 1386, column: 5, scope: !6302)
!6305 = !DILocation(line: 1387, column: 5, scope: !6302)
!6306 = !DILocation(line: 1389, column: 3, scope: !6297)
!6307 = !DILocation(line: 1390, column: 2, scope: !6293)
!6308 = distinct !{!6308, !6287, !6309}
!6309 = !DILocation(line: 1390, column: 2, scope: !6288)
!6310 = !DILocation(line: 1393, column: 15, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1393, column: 6)
!6312 = !DILocation(line: 1393, column: 23, scope: !6311)
!6313 = !DILocation(line: 1393, column: 7, scope: !6311)
!6314 = !DILocation(line: 1393, column: 30, scope: !6311)
!6315 = !DILocation(line: 1393, column: 6, scope: !6311)
!6316 = !DILocation(line: 1393, column: 39, scope: !6311)
!6317 = !DILocation(line: 1393, column: 6, scope: !6243)
!6318 = !DILocation(line: 1394, column: 33, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 1393, column: 59)
!6320 = !DILocation(line: 1394, column: 53, scope: !6319)
!6321 = !DILocation(line: 1394, column: 3, scope: !6319)
!6322 = !DILocation(line: 1395, column: 2, scope: !6319)
!6323 = !DILocation(line: 1397, column: 23, scope: !6243)
!6324 = !DILocation(line: 1397, column: 27, scope: !6243)
!6325 = !DILocation(line: 1397, column: 11, scope: !6243)
!6326 = !DILocation(line: 1397, column: 9, scope: !6243)
!6327 = !DILocation(line: 1398, column: 32, scope: !6243)
!6328 = !DILocation(line: 1398, column: 36, scope: !6243)
!6329 = !DILocation(line: 1398, column: 18, scope: !6243)
!6330 = !DILocation(line: 1398, column: 16, scope: !6243)
!6331 = !DILocation(line: 1399, column: 32, scope: !6243)
!6332 = !DILocation(line: 1399, column: 36, scope: !6243)
!6333 = !DILocation(line: 1399, column: 18, scope: !6243)
!6334 = !DILocation(line: 1399, column: 16, scope: !6243)
!6335 = !DILocation(line: 1400, column: 25, scope: !6243)
!6336 = !DILocation(line: 1400, column: 29, scope: !6243)
!6337 = !DILocation(line: 1400, column: 9, scope: !6243)
!6338 = !DILocation(line: 1400, column: 7, scope: !6243)
!6339 = !DILocation(line: 1401, column: 25, scope: !6243)
!6340 = !DILocation(line: 1401, column: 29, scope: !6243)
!6341 = !DILocation(line: 1401, column: 9, scope: !6243)
!6342 = !DILocation(line: 1401, column: 7, scope: !6243)
!6343 = !DILocation(line: 1402, column: 25, scope: !6243)
!6344 = !DILocation(line: 1402, column: 29, scope: !6243)
!6345 = !DILocation(line: 1402, column: 9, scope: !6243)
!6346 = !DILocation(line: 1402, column: 7, scope: !6243)
!6347 = !DILocation(line: 1403, column: 36, scope: !6243)
!6348 = !DILocation(line: 1403, column: 40, scope: !6243)
!6349 = !DILocation(line: 1403, column: 20, scope: !6243)
!6350 = !DILocation(line: 1403, column: 18, scope: !6243)
!6351 = !DILocation(line: 1404, column: 7, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1404, column: 6)
!6353 = !DILocation(line: 1404, column: 6, scope: !6243)
!6354 = !DILocation(line: 1405, column: 10, scope: !6352)
!6355 = !DILocation(line: 1405, column: 3, scope: !6352)
!6356 = !DILocation(line: 1407, column: 9, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1407, column: 2)
!6358 = !DILocation(line: 1407, column: 7, scope: !6357)
!6359 = !DILocation(line: 1407, column: 14, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 1407, column: 2)
!6361 = !DILocation(line: 1407, column: 18, scope: !6360)
!6362 = !DILocation(line: 1407, column: 16, scope: !6360)
!6363 = !DILocation(line: 1407, column: 2, scope: !6357)
!6364 = !DILocation(line: 1408, column: 22, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 1408, column: 7)
!6366 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1407, column: 31)
!6367 = !DILocation(line: 1408, column: 26, scope: !6365)
!6368 = !DILocation(line: 1410, column: 38, scope: !6365)
!6369 = !DILocation(line: 1410, column: 53, scope: !6365)
!6370 = !DILocation(line: 1410, column: 68, scope: !6365)
!6371 = !DILocation(line: 1410, column: 74, scope: !6365)
!6372 = !DILocation(line: 1410, column: 80, scope: !6365)
!6373 = !DILocation(line: 1410, column: 86, scope: !6365)
!6374 = !DILocation(line: 1408, column: 8, scope: !6365)
!6375 = !DILocation(line: 1408, column: 7, scope: !6366)
!6376 = !DILocation(line: 1412, column: 4, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 1411, column: 3)
!6378 = !DILocation(line: 1414, column: 2, scope: !6366)
!6379 = !DILocation(line: 1407, column: 27, scope: !6360)
!6380 = !DILocation(line: 1407, column: 2, scope: !6360)
!6381 = distinct !{!6381, !6363, !6382}
!6382 = !DILocation(line: 1414, column: 2, scope: !6357)
!6383 = !DILocation(line: 1417, column: 15, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1417, column: 6)
!6385 = !DILocation(line: 1417, column: 23, scope: !6384)
!6386 = !DILocation(line: 1417, column: 7, scope: !6384)
!6387 = !DILocation(line: 1417, column: 30, scope: !6384)
!6388 = !DILocation(line: 1417, column: 6, scope: !6384)
!6389 = !DILocation(line: 1417, column: 39, scope: !6384)
!6390 = !DILocation(line: 1417, column: 6, scope: !6243)
!6391 = !DILocation(line: 1418, column: 27, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1417, column: 59)
!6393 = !DILocation(line: 1418, column: 3, scope: !6392)
!6394 = !DILocation(line: 1419, column: 31, scope: !6392)
!6395 = !DILocation(line: 1419, column: 3, scope: !6392)
!6396 = !DILocation(line: 1420, column: 2, scope: !6392)
!6397 = !DILocation(line: 1422, column: 22, scope: !6243)
!6398 = !DILocation(line: 1422, column: 2, scope: !6243)
!6399 = !DILocation(line: 1424, column: 2, scope: !6243)
!6400 = !DILocation(line: 1425, column: 1, scope: !6243)
!6401 = distinct !DISubprogram(name: "MESH_OT_faces_shade_smooth", scope: !3, file: !3, line: 1481, type: !3767, scopeLine: 1482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6402 = !DILocalVariable(name: "ot", arg: 1, scope: !6401, file: !3, line: 1481, type: !3769)
!6403 = !DILocation(line: 1481, column: 49, scope: !6401)
!6404 = !DILocation(line: 1484, column: 2, scope: !6401)
!6405 = !DILocation(line: 1484, column: 6, scope: !6401)
!6406 = !DILocation(line: 1484, column: 11, scope: !6401)
!6407 = !DILocation(line: 1485, column: 2, scope: !6401)
!6408 = !DILocation(line: 1485, column: 6, scope: !6401)
!6409 = !DILocation(line: 1485, column: 18, scope: !6401)
!6410 = !DILocation(line: 1486, column: 2, scope: !6401)
!6411 = !DILocation(line: 1486, column: 6, scope: !6401)
!6412 = !DILocation(line: 1486, column: 13, scope: !6401)
!6413 = !DILocation(line: 1489, column: 2, scope: !6401)
!6414 = !DILocation(line: 1489, column: 6, scope: !6401)
!6415 = !DILocation(line: 1489, column: 11, scope: !6401)
!6416 = !DILocation(line: 1490, column: 2, scope: !6401)
!6417 = !DILocation(line: 1490, column: 6, scope: !6401)
!6418 = !DILocation(line: 1490, column: 11, scope: !6401)
!6419 = !DILocation(line: 1493, column: 2, scope: !6401)
!6420 = !DILocation(line: 1493, column: 6, scope: !6401)
!6421 = !DILocation(line: 1493, column: 11, scope: !6401)
!6422 = !DILocation(line: 1494, column: 1, scope: !6401)
!6423 = distinct !DISubprogram(name: "edbm_faces_shade_smooth_exec", scope: !3, file: !3, line: 1469, type: !4116, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6424 = !DILocalVariable(name: "C", arg: 1, scope: !6423, file: !3, line: 1469, type: !4118)
!6425 = !DILocation(line: 1469, column: 51, scope: !6423)
!6426 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6423, file: !3, line: 1469, type: !4120)
!6427 = !DILocation(line: 1469, column: 66, scope: !6423)
!6428 = !DILocalVariable(name: "obedit", scope: !6423, file: !3, line: 1471, type: !4127)
!6429 = !DILocation(line: 1471, column: 10, scope: !6423)
!6430 = !DILocation(line: 1471, column: 40, scope: !6423)
!6431 = !DILocation(line: 1471, column: 19, scope: !6423)
!6432 = !DILocalVariable(name: "em", scope: !6423, file: !3, line: 1472, type: !4133)
!6433 = !DILocation(line: 1472, column: 14, scope: !6423)
!6434 = !DILocation(line: 1472, column: 44, scope: !6423)
!6435 = !DILocation(line: 1472, column: 19, scope: !6423)
!6436 = !DILocation(line: 1474, column: 24, scope: !6423)
!6437 = !DILocation(line: 1474, column: 2, scope: !6423)
!6438 = !DILocation(line: 1476, column: 22, scope: !6423)
!6439 = !DILocation(line: 1476, column: 2, scope: !6423)
!6440 = !DILocation(line: 1478, column: 2, scope: !6423)
!6441 = distinct !DISubprogram(name: "MESH_OT_faces_shade_flat", scope: !3, file: !3, line: 1508, type: !3767, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6442 = !DILocalVariable(name: "ot", arg: 1, scope: !6441, file: !3, line: 1508, type: !3769)
!6443 = !DILocation(line: 1508, column: 47, scope: !6441)
!6444 = !DILocation(line: 1511, column: 2, scope: !6441)
!6445 = !DILocation(line: 1511, column: 6, scope: !6441)
!6446 = !DILocation(line: 1511, column: 11, scope: !6441)
!6447 = !DILocation(line: 1512, column: 2, scope: !6441)
!6448 = !DILocation(line: 1512, column: 6, scope: !6441)
!6449 = !DILocation(line: 1512, column: 18, scope: !6441)
!6450 = !DILocation(line: 1513, column: 2, scope: !6441)
!6451 = !DILocation(line: 1513, column: 6, scope: !6441)
!6452 = !DILocation(line: 1513, column: 13, scope: !6441)
!6453 = !DILocation(line: 1516, column: 2, scope: !6441)
!6454 = !DILocation(line: 1516, column: 6, scope: !6441)
!6455 = !DILocation(line: 1516, column: 11, scope: !6441)
!6456 = !DILocation(line: 1517, column: 2, scope: !6441)
!6457 = !DILocation(line: 1517, column: 6, scope: !6441)
!6458 = !DILocation(line: 1517, column: 11, scope: !6441)
!6459 = !DILocation(line: 1520, column: 2, scope: !6441)
!6460 = !DILocation(line: 1520, column: 6, scope: !6441)
!6461 = !DILocation(line: 1520, column: 11, scope: !6441)
!6462 = !DILocation(line: 1521, column: 1, scope: !6441)
!6463 = distinct !DISubprogram(name: "edbm_faces_shade_flat_exec", scope: !3, file: !3, line: 1496, type: !4116, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6464 = !DILocalVariable(name: "C", arg: 1, scope: !6463, file: !3, line: 1496, type: !4118)
!6465 = !DILocation(line: 1496, column: 49, scope: !6463)
!6466 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !6463, file: !3, line: 1496, type: !4120)
!6467 = !DILocation(line: 1496, column: 64, scope: !6463)
!6468 = !DILocalVariable(name: "obedit", scope: !6463, file: !3, line: 1498, type: !4127)
!6469 = !DILocation(line: 1498, column: 10, scope: !6463)
!6470 = !DILocation(line: 1498, column: 40, scope: !6463)
!6471 = !DILocation(line: 1498, column: 19, scope: !6463)
!6472 = !DILocalVariable(name: "em", scope: !6463, file: !3, line: 1499, type: !4133)
!6473 = !DILocation(line: 1499, column: 14, scope: !6463)
!6474 = !DILocation(line: 1499, column: 44, scope: !6463)
!6475 = !DILocation(line: 1499, column: 19, scope: !6463)
!6476 = !DILocation(line: 1501, column: 24, scope: !6463)
!6477 = !DILocation(line: 1501, column: 2, scope: !6463)
!6478 = !DILocation(line: 1503, column: 22, scope: !6463)
!6479 = !DILocation(line: 1503, column: 2, scope: !6463)
!6480 = !DILocation(line: 1505, column: 2, scope: !6463)
!6481 = distinct !DISubprogram(name: "MESH_OT_uvs_rotate", scope: !3, file: !3, line: 1622, type: !3767, scopeLine: 1623, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6482 = !DILocalVariable(name: "ot", arg: 1, scope: !6481, file: !3, line: 1622, type: !3769)
!6483 = !DILocation(line: 1622, column: 41, scope: !6481)
!6484 = !DILocation(line: 1625, column: 2, scope: !6481)
!6485 = !DILocation(line: 1625, column: 6, scope: !6481)
!6486 = !DILocation(line: 1625, column: 11, scope: !6481)
!6487 = !DILocation(line: 1626, column: 2, scope: !6481)
!6488 = !DILocation(line: 1626, column: 6, scope: !6481)
!6489 = !DILocation(line: 1626, column: 13, scope: !6481)
!6490 = !DILocation(line: 1627, column: 2, scope: !6481)
!6491 = !DILocation(line: 1627, column: 6, scope: !6481)
!6492 = !DILocation(line: 1627, column: 18, scope: !6481)
!6493 = !DILocation(line: 1630, column: 2, scope: !6481)
!6494 = !DILocation(line: 1630, column: 6, scope: !6481)
!6495 = !DILocation(line: 1630, column: 11, scope: !6481)
!6496 = !DILocation(line: 1631, column: 2, scope: !6481)
!6497 = !DILocation(line: 1631, column: 6, scope: !6481)
!6498 = !DILocation(line: 1631, column: 11, scope: !6481)
!6499 = !DILocation(line: 1634, column: 2, scope: !6481)
!6500 = !DILocation(line: 1634, column: 6, scope: !6481)
!6501 = !DILocation(line: 1634, column: 11, scope: !6481)
!6502 = !DILocation(line: 1637, column: 18, scope: !6481)
!6503 = !DILocation(line: 1637, column: 22, scope: !6481)
!6504 = !DILocation(line: 1637, column: 2, scope: !6481)
!6505 = !DILocation(line: 1638, column: 1, scope: !6481)
!6506 = distinct !DISubprogram(name: "edbm_rotate_uvs_exec", scope: !3, file: !3, line: 1526, type: !4116, scopeLine: 1527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6507 = !DILocalVariable(name: "C", arg: 1, scope: !6506, file: !3, line: 1526, type: !4118)
!6508 = !DILocation(line: 1526, column: 43, scope: !6506)
!6509 = !DILocalVariable(name: "op", arg: 2, scope: !6506, file: !3, line: 1526, type: !4120)
!6510 = !DILocation(line: 1526, column: 58, scope: !6506)
!6511 = !DILocalVariable(name: "ob", scope: !6506, file: !3, line: 1528, type: !4127)
!6512 = !DILocation(line: 1528, column: 10, scope: !6506)
!6513 = !DILocation(line: 1528, column: 36, scope: !6506)
!6514 = !DILocation(line: 1528, column: 15, scope: !6506)
!6515 = !DILocalVariable(name: "em", scope: !6506, file: !3, line: 1529, type: !4133)
!6516 = !DILocation(line: 1529, column: 14, scope: !6506)
!6517 = !DILocation(line: 1529, column: 44, scope: !6506)
!6518 = !DILocation(line: 1529, column: 19, scope: !6506)
!6519 = !DILocalVariable(name: "bmop", scope: !6506, file: !3, line: 1530, type: !4335)
!6520 = !DILocation(line: 1530, column: 13, scope: !6506)
!6521 = !DILocalVariable(name: "use_ccw", scope: !6506, file: !3, line: 1533, type: !4811)
!6522 = !DILocation(line: 1533, column: 13, scope: !6506)
!6523 = !DILocation(line: 1533, column: 39, scope: !6506)
!6524 = !DILocation(line: 1533, column: 43, scope: !6506)
!6525 = !DILocation(line: 1533, column: 23, scope: !6506)
!6526 = !DILocation(line: 1536, column: 15, scope: !6506)
!6527 = !DILocation(line: 1536, column: 26, scope: !6506)
!6528 = !DILocation(line: 1536, column: 81, scope: !6506)
!6529 = !DILocation(line: 1536, column: 2, scope: !6506)
!6530 = !DILocation(line: 1539, column: 14, scope: !6506)
!6531 = !DILocation(line: 1539, column: 18, scope: !6506)
!6532 = !DILocation(line: 1539, column: 2, scope: !6506)
!6533 = !DILocation(line: 1542, column: 22, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 1542, column: 6)
!6535 = !DILocation(line: 1542, column: 33, scope: !6534)
!6536 = !DILocation(line: 1542, column: 7, scope: !6534)
!6537 = !DILocation(line: 1542, column: 6, scope: !6506)
!6538 = !DILocation(line: 1543, column: 3, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 1542, column: 44)
!6540 = !DILocation(line: 1546, column: 22, scope: !6506)
!6541 = !DILocation(line: 1546, column: 2, scope: !6506)
!6542 = !DILocation(line: 1548, column: 2, scope: !6506)
!6543 = !DILocation(line: 1549, column: 1, scope: !6506)
!6544 = distinct !DISubprogram(name: "MESH_OT_uvs_reverse", scope: !3, file: !3, line: 1640, type: !3767, scopeLine: 1641, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6545 = !DILocalVariable(name: "ot", arg: 1, scope: !6544, file: !3, line: 1640, type: !3769)
!6546 = !DILocation(line: 1640, column: 42, scope: !6544)
!6547 = !DILocation(line: 1643, column: 2, scope: !6544)
!6548 = !DILocation(line: 1643, column: 6, scope: !6544)
!6549 = !DILocation(line: 1643, column: 11, scope: !6544)
!6550 = !DILocation(line: 1644, column: 2, scope: !6544)
!6551 = !DILocation(line: 1644, column: 6, scope: !6544)
!6552 = !DILocation(line: 1644, column: 13, scope: !6544)
!6553 = !DILocation(line: 1645, column: 2, scope: !6544)
!6554 = !DILocation(line: 1645, column: 6, scope: !6544)
!6555 = !DILocation(line: 1645, column: 18, scope: !6544)
!6556 = !DILocation(line: 1648, column: 2, scope: !6544)
!6557 = !DILocation(line: 1648, column: 6, scope: !6544)
!6558 = !DILocation(line: 1648, column: 11, scope: !6544)
!6559 = !DILocation(line: 1649, column: 2, scope: !6544)
!6560 = !DILocation(line: 1649, column: 6, scope: !6544)
!6561 = !DILocation(line: 1649, column: 11, scope: !6544)
!6562 = !DILocation(line: 1652, column: 2, scope: !6544)
!6563 = !DILocation(line: 1652, column: 6, scope: !6544)
!6564 = !DILocation(line: 1652, column: 11, scope: !6544)
!6565 = !DILocation(line: 1656, column: 1, scope: !6544)
!6566 = distinct !DISubprogram(name: "edbm_reverse_uvs_exec", scope: !3, file: !3, line: 1551, type: !4116, scopeLine: 1552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6567 = !DILocalVariable(name: "C", arg: 1, scope: !6566, file: !3, line: 1551, type: !4118)
!6568 = !DILocation(line: 1551, column: 44, scope: !6566)
!6569 = !DILocalVariable(name: "op", arg: 2, scope: !6566, file: !3, line: 1551, type: !4120)
!6570 = !DILocation(line: 1551, column: 59, scope: !6566)
!6571 = !DILocalVariable(name: "ob", scope: !6566, file: !3, line: 1553, type: !4127)
!6572 = !DILocation(line: 1553, column: 10, scope: !6566)
!6573 = !DILocation(line: 1553, column: 36, scope: !6566)
!6574 = !DILocation(line: 1553, column: 15, scope: !6566)
!6575 = !DILocalVariable(name: "em", scope: !6566, file: !3, line: 1554, type: !4133)
!6576 = !DILocation(line: 1554, column: 14, scope: !6566)
!6577 = !DILocation(line: 1554, column: 44, scope: !6566)
!6578 = !DILocation(line: 1554, column: 19, scope: !6566)
!6579 = !DILocalVariable(name: "bmop", scope: !6566, file: !3, line: 1555, type: !4335)
!6580 = !DILocation(line: 1555, column: 13, scope: !6566)
!6581 = !DILocation(line: 1558, column: 15, scope: !6566)
!6582 = !DILocation(line: 1558, column: 26, scope: !6566)
!6583 = !DILocation(line: 1558, column: 2, scope: !6566)
!6584 = !DILocation(line: 1561, column: 14, scope: !6566)
!6585 = !DILocation(line: 1561, column: 18, scope: !6566)
!6586 = !DILocation(line: 1561, column: 2, scope: !6566)
!6587 = !DILocation(line: 1564, column: 22, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 1564, column: 6)
!6589 = !DILocation(line: 1564, column: 33, scope: !6588)
!6590 = !DILocation(line: 1564, column: 7, scope: !6588)
!6591 = !DILocation(line: 1564, column: 6, scope: !6566)
!6592 = !DILocation(line: 1565, column: 3, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 1564, column: 44)
!6594 = !DILocation(line: 1568, column: 22, scope: !6566)
!6595 = !DILocation(line: 1568, column: 2, scope: !6566)
!6596 = !DILocation(line: 1570, column: 2, scope: !6566)
!6597 = !DILocation(line: 1571, column: 1, scope: !6566)
!6598 = distinct !DISubprogram(name: "MESH_OT_colors_rotate", scope: !3, file: !3, line: 1658, type: !3767, scopeLine: 1659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6599 = !DILocalVariable(name: "ot", arg: 1, scope: !6598, file: !3, line: 1658, type: !3769)
!6600 = !DILocation(line: 1658, column: 44, scope: !6598)
!6601 = !DILocation(line: 1661, column: 2, scope: !6598)
!6602 = !DILocation(line: 1661, column: 6, scope: !6598)
!6603 = !DILocation(line: 1661, column: 11, scope: !6598)
!6604 = !DILocation(line: 1662, column: 2, scope: !6598)
!6605 = !DILocation(line: 1662, column: 6, scope: !6598)
!6606 = !DILocation(line: 1662, column: 13, scope: !6598)
!6607 = !DILocation(line: 1663, column: 2, scope: !6598)
!6608 = !DILocation(line: 1663, column: 6, scope: !6598)
!6609 = !DILocation(line: 1663, column: 18, scope: !6598)
!6610 = !DILocation(line: 1666, column: 2, scope: !6598)
!6611 = !DILocation(line: 1666, column: 6, scope: !6598)
!6612 = !DILocation(line: 1666, column: 11, scope: !6598)
!6613 = !DILocation(line: 1667, column: 2, scope: !6598)
!6614 = !DILocation(line: 1667, column: 6, scope: !6598)
!6615 = !DILocation(line: 1667, column: 11, scope: !6598)
!6616 = !DILocation(line: 1670, column: 2, scope: !6598)
!6617 = !DILocation(line: 1670, column: 6, scope: !6598)
!6618 = !DILocation(line: 1670, column: 11, scope: !6598)
!6619 = !DILocation(line: 1673, column: 18, scope: !6598)
!6620 = !DILocation(line: 1673, column: 22, scope: !6598)
!6621 = !DILocation(line: 1673, column: 2, scope: !6598)
!6622 = !DILocation(line: 1674, column: 1, scope: !6598)
!6623 = distinct !DISubprogram(name: "edbm_rotate_colors_exec", scope: !3, file: !3, line: 1573, type: !4116, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6624 = !DILocalVariable(name: "C", arg: 1, scope: !6623, file: !3, line: 1573, type: !4118)
!6625 = !DILocation(line: 1573, column: 46, scope: !6623)
!6626 = !DILocalVariable(name: "op", arg: 2, scope: !6623, file: !3, line: 1573, type: !4120)
!6627 = !DILocation(line: 1573, column: 61, scope: !6623)
!6628 = !DILocalVariable(name: "ob", scope: !6623, file: !3, line: 1575, type: !4127)
!6629 = !DILocation(line: 1575, column: 10, scope: !6623)
!6630 = !DILocation(line: 1575, column: 36, scope: !6623)
!6631 = !DILocation(line: 1575, column: 15, scope: !6623)
!6632 = !DILocalVariable(name: "em", scope: !6623, file: !3, line: 1576, type: !4133)
!6633 = !DILocation(line: 1576, column: 14, scope: !6623)
!6634 = !DILocation(line: 1576, column: 44, scope: !6623)
!6635 = !DILocation(line: 1576, column: 19, scope: !6623)
!6636 = !DILocalVariable(name: "bmop", scope: !6623, file: !3, line: 1577, type: !4335)
!6637 = !DILocation(line: 1577, column: 13, scope: !6623)
!6638 = !DILocalVariable(name: "use_ccw", scope: !6623, file: !3, line: 1580, type: !4811)
!6639 = !DILocation(line: 1580, column: 13, scope: !6623)
!6640 = !DILocation(line: 1580, column: 39, scope: !6623)
!6641 = !DILocation(line: 1580, column: 43, scope: !6623)
!6642 = !DILocation(line: 1580, column: 23, scope: !6623)
!6643 = !DILocation(line: 1583, column: 15, scope: !6623)
!6644 = !DILocation(line: 1583, column: 26, scope: !6623)
!6645 = !DILocation(line: 1583, column: 84, scope: !6623)
!6646 = !DILocation(line: 1583, column: 2, scope: !6623)
!6647 = !DILocation(line: 1586, column: 14, scope: !6623)
!6648 = !DILocation(line: 1586, column: 18, scope: !6623)
!6649 = !DILocation(line: 1586, column: 2, scope: !6623)
!6650 = !DILocation(line: 1589, column: 22, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 1589, column: 6)
!6652 = !DILocation(line: 1589, column: 33, scope: !6651)
!6653 = !DILocation(line: 1589, column: 7, scope: !6651)
!6654 = !DILocation(line: 1589, column: 6, scope: !6623)
!6655 = !DILocation(line: 1590, column: 3, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1589, column: 44)
!6657 = !DILocation(line: 1594, column: 22, scope: !6623)
!6658 = !DILocation(line: 1594, column: 2, scope: !6623)
!6659 = !DILocation(line: 1596, column: 2, scope: !6623)
!6660 = !DILocation(line: 1597, column: 1, scope: !6623)
!6661 = distinct !DISubprogram(name: "MESH_OT_colors_reverse", scope: !3, file: !3, line: 1676, type: !3767, scopeLine: 1677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6662 = !DILocalVariable(name: "ot", arg: 1, scope: !6661, file: !3, line: 1676, type: !3769)
!6663 = !DILocation(line: 1676, column: 45, scope: !6661)
!6664 = !DILocation(line: 1679, column: 2, scope: !6661)
!6665 = !DILocation(line: 1679, column: 6, scope: !6661)
!6666 = !DILocation(line: 1679, column: 11, scope: !6661)
!6667 = !DILocation(line: 1680, column: 2, scope: !6661)
!6668 = !DILocation(line: 1680, column: 6, scope: !6661)
!6669 = !DILocation(line: 1680, column: 13, scope: !6661)
!6670 = !DILocation(line: 1681, column: 2, scope: !6661)
!6671 = !DILocation(line: 1681, column: 6, scope: !6661)
!6672 = !DILocation(line: 1681, column: 18, scope: !6661)
!6673 = !DILocation(line: 1684, column: 2, scope: !6661)
!6674 = !DILocation(line: 1684, column: 6, scope: !6661)
!6675 = !DILocation(line: 1684, column: 11, scope: !6661)
!6676 = !DILocation(line: 1685, column: 2, scope: !6661)
!6677 = !DILocation(line: 1685, column: 6, scope: !6661)
!6678 = !DILocation(line: 1685, column: 11, scope: !6661)
!6679 = !DILocation(line: 1688, column: 2, scope: !6661)
!6680 = !DILocation(line: 1688, column: 6, scope: !6661)
!6681 = !DILocation(line: 1688, column: 11, scope: !6661)
!6682 = !DILocation(line: 1692, column: 1, scope: !6661)
!6683 = distinct !DISubprogram(name: "edbm_reverse_colors_exec", scope: !3, file: !3, line: 1600, type: !4116, scopeLine: 1601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6684 = !DILocalVariable(name: "C", arg: 1, scope: !6683, file: !3, line: 1600, type: !4118)
!6685 = !DILocation(line: 1600, column: 47, scope: !6683)
!6686 = !DILocalVariable(name: "op", arg: 2, scope: !6683, file: !3, line: 1600, type: !4120)
!6687 = !DILocation(line: 1600, column: 62, scope: !6683)
!6688 = !DILocalVariable(name: "ob", scope: !6683, file: !3, line: 1602, type: !4127)
!6689 = !DILocation(line: 1602, column: 10, scope: !6683)
!6690 = !DILocation(line: 1602, column: 36, scope: !6683)
!6691 = !DILocation(line: 1602, column: 15, scope: !6683)
!6692 = !DILocalVariable(name: "em", scope: !6683, file: !3, line: 1603, type: !4133)
!6693 = !DILocation(line: 1603, column: 14, scope: !6683)
!6694 = !DILocation(line: 1603, column: 44, scope: !6683)
!6695 = !DILocation(line: 1603, column: 19, scope: !6683)
!6696 = !DILocalVariable(name: "bmop", scope: !6683, file: !3, line: 1604, type: !4335)
!6697 = !DILocation(line: 1604, column: 13, scope: !6683)
!6698 = !DILocation(line: 1607, column: 15, scope: !6683)
!6699 = !DILocation(line: 1607, column: 26, scope: !6683)
!6700 = !DILocation(line: 1607, column: 2, scope: !6683)
!6701 = !DILocation(line: 1610, column: 14, scope: !6683)
!6702 = !DILocation(line: 1610, column: 18, scope: !6683)
!6703 = !DILocation(line: 1610, column: 2, scope: !6683)
!6704 = !DILocation(line: 1613, column: 22, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 1613, column: 6)
!6706 = !DILocation(line: 1613, column: 33, scope: !6705)
!6707 = !DILocation(line: 1613, column: 7, scope: !6705)
!6708 = !DILocation(line: 1613, column: 6, scope: !6683)
!6709 = !DILocation(line: 1614, column: 3, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 1613, column: 44)
!6711 = !DILocation(line: 1617, column: 22, scope: !6683)
!6712 = !DILocation(line: 1617, column: 2, scope: !6683)
!6713 = !DILocation(line: 1619, column: 2, scope: !6683)
!6714 = !DILocation(line: 1620, column: 1, scope: !6683)
!6715 = distinct !DISubprogram(name: "MESH_OT_merge", scope: !3, file: !3, line: 1873, type: !3767, scopeLine: 1874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6716 = !DILocalVariable(name: "ot", arg: 1, scope: !6715, file: !3, line: 1873, type: !3769)
!6717 = !DILocation(line: 1873, column: 36, scope: !6715)
!6718 = !DILocation(line: 1876, column: 2, scope: !6715)
!6719 = !DILocation(line: 1876, column: 6, scope: !6715)
!6720 = !DILocation(line: 1876, column: 11, scope: !6715)
!6721 = !DILocation(line: 1877, column: 2, scope: !6715)
!6722 = !DILocation(line: 1877, column: 6, scope: !6715)
!6723 = !DILocation(line: 1877, column: 18, scope: !6715)
!6724 = !DILocation(line: 1878, column: 2, scope: !6715)
!6725 = !DILocation(line: 1878, column: 6, scope: !6715)
!6726 = !DILocation(line: 1878, column: 13, scope: !6715)
!6727 = !DILocation(line: 1881, column: 2, scope: !6715)
!6728 = !DILocation(line: 1881, column: 6, scope: !6715)
!6729 = !DILocation(line: 1881, column: 11, scope: !6715)
!6730 = !DILocation(line: 1882, column: 2, scope: !6715)
!6731 = !DILocation(line: 1882, column: 6, scope: !6715)
!6732 = !DILocation(line: 1882, column: 13, scope: !6715)
!6733 = !DILocation(line: 1883, column: 2, scope: !6715)
!6734 = !DILocation(line: 1883, column: 6, scope: !6715)
!6735 = !DILocation(line: 1883, column: 11, scope: !6715)
!6736 = !DILocation(line: 1886, column: 2, scope: !6715)
!6737 = !DILocation(line: 1886, column: 6, scope: !6715)
!6738 = !DILocation(line: 1886, column: 11, scope: !6715)
!6739 = !DILocation(line: 1889, column: 26, scope: !6715)
!6740 = !DILocation(line: 1889, column: 30, scope: !6715)
!6741 = !DILocation(line: 1889, column: 13, scope: !6715)
!6742 = !DILocation(line: 1889, column: 2, scope: !6715)
!6743 = !DILocation(line: 1889, column: 6, scope: !6715)
!6744 = !DILocation(line: 1889, column: 11, scope: !6715)
!6745 = !DILocation(line: 1890, column: 21, scope: !6715)
!6746 = !DILocation(line: 1890, column: 25, scope: !6715)
!6747 = !DILocation(line: 1890, column: 2, scope: !6715)
!6748 = !DILocation(line: 1891, column: 18, scope: !6715)
!6749 = !DILocation(line: 1891, column: 22, scope: !6715)
!6750 = !DILocation(line: 1891, column: 2, scope: !6715)
!6751 = !DILocation(line: 1892, column: 1, scope: !6715)
!6752 = distinct !DISubprogram(name: "edbm_merge_exec", scope: !3, file: !3, line: 1780, type: !4116, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6753 = !DILocalVariable(name: "C", arg: 1, scope: !6752, file: !3, line: 1780, type: !4118)
!6754 = !DILocation(line: 1780, column: 38, scope: !6752)
!6755 = !DILocalVariable(name: "op", arg: 2, scope: !6752, file: !3, line: 1780, type: !4120)
!6756 = !DILocation(line: 1780, column: 53, scope: !6752)
!6757 = !DILocalVariable(name: "scene", scope: !6752, file: !3, line: 1782, type: !5145)
!6758 = !DILocation(line: 1782, column: 9, scope: !6752)
!6759 = !DILocation(line: 1782, column: 32, scope: !6752)
!6760 = !DILocation(line: 1782, column: 17, scope: !6752)
!6761 = !DILocalVariable(name: "v3d", scope: !6752, file: !3, line: 1783, type: !6762)
!6762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6763, size: 64)
!6763 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !6764, line: 221, baseType: !6765)
!6764 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !6764, line: 151, size: 3008, elements: !6766)
!6766 = !{!6767, !6779, !6780, !6781, !6782, !6783, !6784, !6785, !6786, !6787, !6788, !6789, !6790, !6791, !6792, !6793, !6794, !6795, !6796, !6797, !6820, !6822, !6823, !6824, !6825, !6826, !6827, !6828, !6829, !6830, !6831, !6832, !6833, !6834, !6835, !6836, !6837, !6838, !6839, !6840, !6841, !6842, !6843, !6844, !6845, !6846, !6847, !6848, !6849, !6850, !6851, !6852, !6853, !6854}
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6765, file: !6764, line: 152, baseType: !6768, size: 64)
!6768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6769, size: 64)
!6769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !6770, line: 85, size: 448, elements: !6771)
!6770 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6771 = !{!6772, !6773, !6774, !6775, !6776, !6777}
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6769, file: !6770, line: 86, baseType: !6768, size: 64)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6769, file: !6770, line: 86, baseType: !6768, size: 64, offset: 64)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !6769, file: !6770, line: 87, baseType: !1490, size: 128, offset: 128)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !6769, file: !6770, line: 88, baseType: !135, size: 32, offset: 256)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !6769, file: !6770, line: 89, baseType: !1344, size: 32, offset: 288)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !6769, file: !6770, line: 90, baseType: !6778, size: 128, offset: 320)
!6778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1373, size: 128, elements: !2380)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6765, file: !6764, line: 152, baseType: !6768, size: 64, offset: 64)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !6765, file: !6764, line: 153, baseType: !1490, size: 128, offset: 128)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !6765, file: !6764, line: 154, baseType: !135, size: 32, offset: 256)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !6765, file: !6764, line: 155, baseType: !1344, size: 32, offset: 288)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !6765, file: !6764, line: 156, baseType: !6778, size: 128, offset: 320)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !6765, file: !6764, line: 158, baseType: !1679, size: 128, offset: 448)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !6765, file: !6764, line: 159, baseType: !1344, size: 32, offset: 576)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !6765, file: !6764, line: 161, baseType: !1344, size: 32, offset: 608)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !6765, file: !6764, line: 162, baseType: !1365, size: 8, offset: 640)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6765, file: !6764, line: 163, baseType: !2499, size: 24, offset: 648)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !6765, file: !6764, line: 165, baseType: !7, size: 32, offset: 672)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !6765, file: !6764, line: 166, baseType: !7, size: 32, offset: 704)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !6765, file: !6764, line: 168, baseType: !1373, size: 16, offset: 736)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !6765, file: !6764, line: 169, baseType: !1373, size: 16, offset: 752)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !6765, file: !6764, line: 171, baseType: !1730, size: 64, offset: 768)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !6765, file: !6764, line: 171, baseType: !1730, size: 64, offset: 832)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !6765, file: !6764, line: 172, baseType: !2041, size: 128, offset: 896)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !6765, file: !6764, line: 174, baseType: !1492, size: 128, offset: 1024)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !6765, file: !6764, line: 175, baseType: !6798, size: 64, offset: 1152)
!6798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6799, size: 64)
!6799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !6764, line: 70, size: 832, elements: !6800)
!6800 = !{!6801, !6802, !6803, !6804, !6805, !6806, !6812, !6813, !6814, !6815, !6816, !6817, !6818, !6819}
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6799, file: !6764, line: 71, baseType: !6798, size: 64)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6799, file: !6764, line: 71, baseType: !6798, size: 64, offset: 64)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !6799, file: !6764, line: 73, baseType: !2363, size: 64, offset: 128)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !6799, file: !6764, line: 74, baseType: !1971, size: 320, offset: 192)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !6799, file: !6764, line: 75, baseType: !2195, size: 64, offset: 512)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !6799, file: !6764, line: 76, baseType: !6807, size: 64, offset: 576)
!6807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !2197, line: 50, size: 64, elements: !6808)
!6808 = !{!6809, !6810, !6811}
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !6807, file: !2197, line: 51, baseType: !135, size: 32)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !6807, file: !2197, line: 52, baseType: !1373, size: 16, offset: 32)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !6807, file: !2197, line: 52, baseType: !1373, size: 16, offset: 48)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !6799, file: !6764, line: 77, baseType: !1344, size: 32, offset: 640)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !6799, file: !6764, line: 77, baseType: !1344, size: 32, offset: 672)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6799, file: !6764, line: 77, baseType: !1344, size: 32, offset: 704)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !6799, file: !6764, line: 77, baseType: !1344, size: 32, offset: 736)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !6799, file: !6764, line: 78, baseType: !1373, size: 16, offset: 768)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6799, file: !6764, line: 79, baseType: !1373, size: 16, offset: 784)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !6799, file: !6764, line: 80, baseType: !1373, size: 16, offset: 800)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6799, file: !6764, line: 80, baseType: !1373, size: 16, offset: 816)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !6765, file: !6764, line: 177, baseType: !6821, size: 64, offset: 1216)
!6821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6765, size: 64)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !6765, file: !6764, line: 179, baseType: !1480, size: 512, offset: 1280)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !6765, file: !6764, line: 181, baseType: !7, size: 32, offset: 1792)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !6765, file: !6764, line: 182, baseType: !135, size: 32, offset: 1824)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !6765, file: !6764, line: 187, baseType: !1373, size: 16, offset: 1856)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !6765, file: !6764, line: 188, baseType: !1373, size: 16, offset: 1872)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !6765, file: !6764, line: 189, baseType: !1373, size: 16, offset: 1888)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !6765, file: !6764, line: 189, baseType: !1373, size: 16, offset: 1904)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6765, file: !6764, line: 190, baseType: !1373, size: 16, offset: 1920)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !6765, file: !6764, line: 190, baseType: !1373, size: 16, offset: 1936)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !6765, file: !6764, line: 192, baseType: !1344, size: 32, offset: 1952)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !6765, file: !6764, line: 192, baseType: !1344, size: 32, offset: 1984)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !6765, file: !6764, line: 193, baseType: !1344, size: 32, offset: 2016)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !6765, file: !6764, line: 193, baseType: !1344, size: 32, offset: 2048)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !6765, file: !6764, line: 194, baseType: !1375, size: 96, offset: 2080)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !6765, file: !6764, line: 195, baseType: !1375, size: 96, offset: 2176)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !6765, file: !6764, line: 197, baseType: !1373, size: 16, offset: 2272)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !6765, file: !6764, line: 199, baseType: !1373, size: 16, offset: 2288)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !6765, file: !6764, line: 200, baseType: !1373, size: 16, offset: 2304)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !6765, file: !6764, line: 201, baseType: !1365, size: 8, offset: 2320)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !6765, file: !6764, line: 204, baseType: !1365, size: 8, offset: 2328)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !6765, file: !6764, line: 204, baseType: !1365, size: 8, offset: 2336)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !6765, file: !6764, line: 204, baseType: !1365, size: 8, offset: 2344)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6765, file: !6764, line: 204, baseType: !2721, size: 16, offset: 2352)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !6765, file: !6764, line: 207, baseType: !1492, size: 128, offset: 2368)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !6765, file: !6764, line: 208, baseType: !1492, size: 128, offset: 2496)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !6765, file: !6764, line: 209, baseType: !1492, size: 128, offset: 2624)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !6765, file: !6764, line: 212, baseType: !1365, size: 8, offset: 2752)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !6765, file: !6764, line: 212, baseType: !1365, size: 8, offset: 2760)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !6765, file: !6764, line: 212, baseType: !1365, size: 8, offset: 2768)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !6765, file: !6764, line: 213, baseType: !2587, size: 40, offset: 2776)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !6765, file: !6764, line: 215, baseType: !1343, size: 64, offset: 2816)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !6765, file: !6764, line: 216, baseType: !1561, size: 64, offset: 2880)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !6765, file: !6764, line: 219, baseType: !1809, size: 64, offset: 2944)
!6855 = !DILocation(line: 1783, column: 10, scope: !6752)
!6856 = !DILocation(line: 1783, column: 30, scope: !6752)
!6857 = !DILocation(line: 1783, column: 16, scope: !6752)
!6858 = !DILocalVariable(name: "obedit", scope: !6752, file: !3, line: 1784, type: !4127)
!6859 = !DILocation(line: 1784, column: 10, scope: !6752)
!6860 = !DILocation(line: 1784, column: 40, scope: !6752)
!6861 = !DILocation(line: 1784, column: 19, scope: !6752)
!6862 = !DILocalVariable(name: "em", scope: !6752, file: !3, line: 1785, type: !4133)
!6863 = !DILocation(line: 1785, column: 14, scope: !6752)
!6864 = !DILocation(line: 1785, column: 44, scope: !6752)
!6865 = !DILocation(line: 1785, column: 19, scope: !6752)
!6866 = !DILocalVariable(name: "type", scope: !6752, file: !3, line: 1786, type: !4052)
!6867 = !DILocation(line: 1786, column: 12, scope: !6752)
!6868 = !DILocation(line: 1786, column: 32, scope: !6752)
!6869 = !DILocation(line: 1786, column: 36, scope: !6752)
!6870 = !DILocation(line: 1786, column: 19, scope: !6752)
!6871 = !DILocalVariable(name: "uvs", scope: !6752, file: !3, line: 1787, type: !4811)
!6872 = !DILocation(line: 1787, column: 13, scope: !6752)
!6873 = !DILocation(line: 1787, column: 35, scope: !6752)
!6874 = !DILocation(line: 1787, column: 39, scope: !6752)
!6875 = !DILocation(line: 1787, column: 19, scope: !6752)
!6876 = !DILocalVariable(name: "ok", scope: !6752, file: !3, line: 1788, type: !2530)
!6877 = !DILocation(line: 1788, column: 7, scope: !6752)
!6878 = !DILocation(line: 1790, column: 10, scope: !6752)
!6879 = !DILocation(line: 1790, column: 2, scope: !6752)
!6880 = !DILocation(line: 1792, column: 22, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 1790, column: 16)
!6882 = !DILocation(line: 1792, column: 26, scope: !6881)
!6883 = !DILocation(line: 1792, column: 33, scope: !6881)
!6884 = !DILocation(line: 1792, column: 38, scope: !6881)
!6885 = !DILocation(line: 1792, column: 53, scope: !6881)
!6886 = !DILocation(line: 1792, column: 58, scope: !6881)
!6887 = !DILocation(line: 1792, column: 9, scope: !6881)
!6888 = !DILocation(line: 1792, column: 7, scope: !6881)
!6889 = !DILocation(line: 1793, column: 4, scope: !6881)
!6890 = !DILocation(line: 1795, column: 22, scope: !6881)
!6891 = !DILocation(line: 1795, column: 26, scope: !6881)
!6892 = !DILocation(line: 1795, column: 33, scope: !6881)
!6893 = !DILocation(line: 1795, column: 38, scope: !6881)
!6894 = !DILocation(line: 1795, column: 52, scope: !6881)
!6895 = !DILocation(line: 1795, column: 57, scope: !6881)
!6896 = !DILocation(line: 1795, column: 9, scope: !6881)
!6897 = !DILocation(line: 1795, column: 7, scope: !6881)
!6898 = !DILocation(line: 1796, column: 4, scope: !6881)
!6899 = !DILocation(line: 1798, column: 25, scope: !6881)
!6900 = !DILocation(line: 1798, column: 36, scope: !6881)
!6901 = !DILocation(line: 1798, column: 41, scope: !6881)
!6902 = !DILocation(line: 1798, column: 9, scope: !6881)
!6903 = !DILocation(line: 1798, column: 7, scope: !6881)
!6904 = !DILocation(line: 1799, column: 4, scope: !6881)
!6905 = !DILocation(line: 1801, column: 25, scope: !6881)
!6906 = !DILocation(line: 1801, column: 35, scope: !6881)
!6907 = !DILocation(line: 1801, column: 40, scope: !6881)
!6908 = !DILocation(line: 1801, column: 9, scope: !6881)
!6909 = !DILocation(line: 1801, column: 7, scope: !6881)
!6910 = !DILocation(line: 1802, column: 4, scope: !6881)
!6911 = !DILocation(line: 1804, column: 7, scope: !6881)
!6912 = !DILocation(line: 1805, column: 23, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6881, file: !3, line: 1805, column: 8)
!6914 = !DILocation(line: 1805, column: 27, scope: !6913)
!6915 = !DILocation(line: 1805, column: 9, scope: !6913)
!6916 = !DILocation(line: 1805, column: 8, scope: !6881)
!6917 = !DILocation(line: 1806, column: 8, scope: !6913)
!6918 = !DILocation(line: 1806, column: 5, scope: !6913)
!6919 = !DILocation(line: 1807, column: 4, scope: !6881)
!6920 = !DILocation(line: 1810, column: 4, scope: !6881)
!6921 = !DILocation(line: 1813, column: 7, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 1813, column: 6)
!6923 = !DILocation(line: 1813, column: 6, scope: !6752)
!6924 = !DILocation(line: 1814, column: 3, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 1813, column: 11)
!6926 = !DILocation(line: 1817, column: 22, scope: !6752)
!6927 = !DILocation(line: 1817, column: 2, scope: !6752)
!6928 = !DILocation(line: 1819, column: 2, scope: !6752)
!6929 = !DILocation(line: 1820, column: 1, scope: !6752)
!6930 = distinct !DISubprogram(name: "merge_type_itemf", scope: !3, file: !3, line: 1831, type: !6931, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!6931 = !DISubroutineType(types: !6932)
!6932 = !{!6933, !4118, !6934, !3977, !6936}
!6933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!6934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6935, size: 64)
!6935 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !6, line: 62, baseType: !3797)
!6936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!6937 = !DILocalVariable(name: "C", arg: 1, scope: !6930, file: !3, line: 1831, type: !4118)
!6938 = !DILocation(line: 1831, column: 53, scope: !6930)
!6939 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !6930, file: !3, line: 1831, type: !6934)
!6940 = !DILocation(line: 1831, column: 68, scope: !6930)
!6941 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !6930, file: !3, line: 1831, type: !3977)
!6942 = !DILocation(line: 1831, column: 95, scope: !6930)
!6943 = !DILocalVariable(name: "r_free", arg: 4, scope: !6930, file: !3, line: 1831, type: !6936)
!6944 = !DILocation(line: 1831, column: 115, scope: !6930)
!6945 = !DILocalVariable(name: "obedit", scope: !6930, file: !3, line: 1833, type: !4127)
!6946 = !DILocation(line: 1833, column: 10, scope: !6930)
!6947 = !DILocalVariable(name: "item", scope: !6930, file: !3, line: 1834, type: !6933)
!6948 = !DILocation(line: 1834, column: 20, scope: !6930)
!6949 = !DILocalVariable(name: "totitem", scope: !6930, file: !3, line: 1835, type: !135)
!6950 = !DILocation(line: 1835, column: 6, scope: !6930)
!6951 = !DILocation(line: 1837, column: 7, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1837, column: 6)
!6953 = !DILocation(line: 1837, column: 6, scope: !6930)
!6954 = !DILocation(line: 1838, column: 3, scope: !6952)
!6955 = !DILocation(line: 1840, column: 32, scope: !6930)
!6956 = !DILocation(line: 1840, column: 11, scope: !6930)
!6957 = !DILocation(line: 1840, column: 9, scope: !6930)
!6958 = !DILocation(line: 1841, column: 6, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1841, column: 6)
!6960 = !DILocation(line: 1841, column: 13, scope: !6959)
!6961 = !DILocation(line: 1841, column: 16, scope: !6959)
!6962 = !DILocation(line: 1841, column: 24, scope: !6959)
!6963 = !DILocation(line: 1841, column: 29, scope: !6959)
!6964 = !DILocation(line: 1841, column: 6, scope: !6930)
!6965 = !DILocalVariable(name: "em", scope: !6966, file: !3, line: 1842, type: !4133)
!6966 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 1841, column: 41)
!6967 = !DILocation(line: 1842, column: 15, scope: !6966)
!6968 = !DILocation(line: 1842, column: 45, scope: !6966)
!6969 = !DILocation(line: 1842, column: 20, scope: !6966)
!6970 = !DILocation(line: 1844, column: 7, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 1844, column: 7)
!6972 = !DILocation(line: 1844, column: 11, scope: !6971)
!6973 = !DILocation(line: 1844, column: 22, scope: !6971)
!6974 = !DILocation(line: 1844, column: 7, scope: !6966)
!6975 = !DILocation(line: 1845, column: 8, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 1845, column: 8)
!6977 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 1844, column: 43)
!6978 = !DILocation(line: 1845, column: 12, scope: !6976)
!6979 = !DILocation(line: 1845, column: 16, scope: !6976)
!6980 = !DILocation(line: 1845, column: 25, scope: !6976)
!6981 = !DILocation(line: 1845, column: 31, scope: !6976)
!6982 = !DILocation(line: 1845, column: 34, scope: !6976)
!6983 = !DILocation(line: 1845, column: 38, scope: !6976)
!6984 = !DILocation(line: 1845, column: 42, scope: !6976)
!6985 = !DILocation(line: 1845, column: 51, scope: !6976)
!6986 = !DILocation(line: 1845, column: 56, scope: !6976)
!6987 = !DILocation(line: 1846, column: 28, scope: !6976)
!6988 = !DILocation(line: 1846, column: 32, scope: !6976)
!6989 = !DILocation(line: 1846, column: 36, scope: !6976)
!6990 = !DILocation(line: 1846, column: 45, scope: !6976)
!6991 = !DILocation(line: 1846, column: 9, scope: !6976)
!6992 = !DILocation(line: 1846, column: 53, scope: !6976)
!6993 = !DILocation(line: 1846, column: 8, scope: !6976)
!6994 = !DILocation(line: 1846, column: 59, scope: !6976)
!6995 = !DILocation(line: 1846, column: 70, scope: !6976)
!6996 = !DILocation(line: 1847, column: 28, scope: !6976)
!6997 = !DILocation(line: 1847, column: 32, scope: !6976)
!6998 = !DILocation(line: 1847, column: 36, scope: !6976)
!6999 = !DILocation(line: 1847, column: 45, scope: !6976)
!7000 = !DILocation(line: 1847, column: 9, scope: !6976)
!7001 = !DILocation(line: 1847, column: 52, scope: !6976)
!7002 = !DILocation(line: 1847, column: 8, scope: !6976)
!7003 = !DILocation(line: 1847, column: 58, scope: !6976)
!7004 = !DILocation(line: 1845, column: 8, scope: !6977)
!7005 = !DILocation(line: 1849, column: 5, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 1848, column: 4)
!7007 = !DILocation(line: 1850, column: 5, scope: !7006)
!7008 = !DILocation(line: 1851, column: 4, scope: !7006)
!7009 = !DILocation(line: 1852, column: 13, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 1852, column: 13)
!7011 = !DILocation(line: 1852, column: 17, scope: !7010)
!7012 = !DILocation(line: 1852, column: 21, scope: !7010)
!7013 = !DILocation(line: 1852, column: 30, scope: !7010)
!7014 = !DILocation(line: 1852, column: 36, scope: !7010)
!7015 = !DILocation(line: 1852, column: 59, scope: !7010)
!7016 = !DILocation(line: 1852, column: 63, scope: !7010)
!7017 = !DILocation(line: 1852, column: 67, scope: !7010)
!7018 = !DILocation(line: 1852, column: 76, scope: !7010)
!7019 = !DILocation(line: 1852, column: 40, scope: !7010)
!7020 = !DILocation(line: 1852, column: 84, scope: !7010)
!7021 = !DILocation(line: 1852, column: 39, scope: !7010)
!7022 = !DILocation(line: 1852, column: 90, scope: !7010)
!7023 = !DILocation(line: 1852, column: 13, scope: !6976)
!7024 = !DILocation(line: 1853, column: 5, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 1852, column: 102)
!7026 = !DILocation(line: 1854, column: 4, scope: !7025)
!7027 = !DILocation(line: 1855, column: 13, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 1855, column: 13)
!7029 = !DILocation(line: 1855, column: 17, scope: !7028)
!7030 = !DILocation(line: 1855, column: 21, scope: !7028)
!7031 = !DILocation(line: 1855, column: 30, scope: !7028)
!7032 = !DILocation(line: 1855, column: 35, scope: !7028)
!7033 = !DILocation(line: 1855, column: 58, scope: !7028)
!7034 = !DILocation(line: 1855, column: 62, scope: !7028)
!7035 = !DILocation(line: 1855, column: 66, scope: !7028)
!7036 = !DILocation(line: 1855, column: 75, scope: !7028)
!7037 = !DILocation(line: 1855, column: 39, scope: !7028)
!7038 = !DILocation(line: 1855, column: 82, scope: !7028)
!7039 = !DILocation(line: 1855, column: 38, scope: !7028)
!7040 = !DILocation(line: 1855, column: 88, scope: !7028)
!7041 = !DILocation(line: 1855, column: 13, scope: !7010)
!7042 = !DILocation(line: 1856, column: 5, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 1855, column: 100)
!7044 = !DILocation(line: 1857, column: 4, scope: !7043)
!7045 = !DILocation(line: 1858, column: 3, scope: !6977)
!7046 = !DILocation(line: 1860, column: 3, scope: !6966)
!7047 = !DILocation(line: 1861, column: 3, scope: !6966)
!7048 = !DILocation(line: 1862, column: 3, scope: !6966)
!7049 = !DILocation(line: 1863, column: 3, scope: !6966)
!7050 = !DILocation(line: 1865, column: 4, scope: !6966)
!7051 = !DILocation(line: 1865, column: 11, scope: !6966)
!7052 = !DILocation(line: 1867, column: 10, scope: !6966)
!7053 = !DILocation(line: 1867, column: 3, scope: !6966)
!7054 = !DILocation(line: 1870, column: 2, scope: !6930)
!7055 = !DILocation(line: 1871, column: 1, scope: !6930)
!7056 = distinct !DISubprogram(name: "MESH_OT_remove_doubles", scope: !3, file: !3, line: 1953, type: !3767, scopeLine: 1954, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!7057 = !DILocalVariable(name: "ot", arg: 1, scope: !7056, file: !3, line: 1953, type: !3769)
!7058 = !DILocation(line: 1953, column: 45, scope: !7056)
!7059 = !DILocation(line: 1956, column: 2, scope: !7056)
!7060 = !DILocation(line: 1956, column: 6, scope: !7056)
!7061 = !DILocation(line: 1956, column: 11, scope: !7056)
!7062 = !DILocation(line: 1957, column: 2, scope: !7056)
!7063 = !DILocation(line: 1957, column: 6, scope: !7056)
!7064 = !DILocation(line: 1957, column: 18, scope: !7056)
!7065 = !DILocation(line: 1958, column: 2, scope: !7056)
!7066 = !DILocation(line: 1958, column: 6, scope: !7056)
!7067 = !DILocation(line: 1958, column: 13, scope: !7056)
!7068 = !DILocation(line: 1961, column: 2, scope: !7056)
!7069 = !DILocation(line: 1961, column: 6, scope: !7056)
!7070 = !DILocation(line: 1961, column: 11, scope: !7056)
!7071 = !DILocation(line: 1962, column: 2, scope: !7056)
!7072 = !DILocation(line: 1962, column: 6, scope: !7056)
!7073 = !DILocation(line: 1962, column: 11, scope: !7056)
!7074 = !DILocation(line: 1965, column: 2, scope: !7056)
!7075 = !DILocation(line: 1965, column: 6, scope: !7056)
!7076 = !DILocation(line: 1965, column: 11, scope: !7056)
!7077 = !DILocation(line: 1967, column: 16, scope: !7056)
!7078 = !DILocation(line: 1967, column: 20, scope: !7056)
!7079 = !DILocation(line: 1967, column: 2, scope: !7056)
!7080 = !DILocation(line: 1969, column: 18, scope: !7056)
!7081 = !DILocation(line: 1969, column: 22, scope: !7056)
!7082 = !DILocation(line: 1969, column: 2, scope: !7056)
!7083 = !DILocation(line: 1970, column: 1, scope: !7056)
!7084 = distinct !DISubprogram(name: "edbm_remove_doubles_exec", scope: !3, file: !3, line: 1895, type: !4116, scopeLine: 1896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!7085 = !DILocalVariable(name: "C", arg: 1, scope: !7084, file: !3, line: 1895, type: !4118)
!7086 = !DILocation(line: 1895, column: 47, scope: !7084)
!7087 = !DILocalVariable(name: "op", arg: 2, scope: !7084, file: !3, line: 1895, type: !4120)
!7088 = !DILocation(line: 1895, column: 62, scope: !7084)
!7089 = !DILocalVariable(name: "obedit", scope: !7084, file: !3, line: 1897, type: !4127)
!7090 = !DILocation(line: 1897, column: 10, scope: !7084)
!7091 = !DILocation(line: 1897, column: 40, scope: !7084)
!7092 = !DILocation(line: 1897, column: 19, scope: !7084)
!7093 = !DILocalVariable(name: "em", scope: !7084, file: !3, line: 1898, type: !4133)
!7094 = !DILocation(line: 1898, column: 14, scope: !7084)
!7095 = !DILocation(line: 1898, column: 44, scope: !7084)
!7096 = !DILocation(line: 1898, column: 19, scope: !7084)
!7097 = !DILocalVariable(name: "bmop", scope: !7084, file: !3, line: 1899, type: !4335)
!7098 = !DILocation(line: 1899, column: 13, scope: !7084)
!7099 = !DILocalVariable(name: "threshold", scope: !7084, file: !3, line: 1900, type: !4150)
!7100 = !DILocation(line: 1900, column: 14, scope: !7084)
!7101 = !DILocation(line: 1900, column: 40, scope: !7084)
!7102 = !DILocation(line: 1900, column: 44, scope: !7084)
!7103 = !DILocation(line: 1900, column: 26, scope: !7084)
!7104 = !DILocalVariable(name: "use_unselected", scope: !7084, file: !3, line: 1901, type: !4811)
!7105 = !DILocation(line: 1901, column: 13, scope: !7084)
!7106 = !DILocation(line: 1901, column: 46, scope: !7084)
!7107 = !DILocation(line: 1901, column: 50, scope: !7084)
!7108 = !DILocation(line: 1901, column: 30, scope: !7084)
!7109 = !DILocalVariable(name: "totvert_orig", scope: !7084, file: !3, line: 1902, type: !4052)
!7110 = !DILocation(line: 1902, column: 12, scope: !7084)
!7111 = !DILocation(line: 1902, column: 27, scope: !7084)
!7112 = !DILocation(line: 1902, column: 31, scope: !7084)
!7113 = !DILocation(line: 1902, column: 35, scope: !7084)
!7114 = !DILocalVariable(name: "count", scope: !7084, file: !3, line: 1903, type: !135)
!7115 = !DILocation(line: 1903, column: 6, scope: !7084)
!7116 = !DILocalVariable(name: "htype_select", scope: !7084, file: !3, line: 1904, type: !1365)
!7117 = !DILocation(line: 1904, column: 7, scope: !7084)
!7118 = !DILocation(line: 1907, column: 11, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 1907, column: 11)
!7120 = !DILocation(line: 1907, column: 15, scope: !7119)
!7121 = !DILocation(line: 1907, column: 26, scope: !7119)
!7122 = !DILocation(line: 1907, column: 11, scope: !7084)
!7123 = !DILocation(line: 1907, column: 60, scope: !7119)
!7124 = !DILocation(line: 1907, column: 47, scope: !7119)
!7125 = !DILocation(line: 1908, column: 11, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 1908, column: 11)
!7127 = !DILocation(line: 1908, column: 15, scope: !7126)
!7128 = !DILocation(line: 1908, column: 26, scope: !7126)
!7129 = !DILocation(line: 1908, column: 11, scope: !7119)
!7130 = !DILocation(line: 1908, column: 60, scope: !7126)
!7131 = !DILocation(line: 1908, column: 47, scope: !7126)
!7132 = !DILocation(line: 1909, column: 60, scope: !7126)
!7133 = !DILocation(line: 1912, column: 33, scope: !7084)
!7134 = !DILocation(line: 1912, column: 37, scope: !7084)
!7135 = !DILocation(line: 1912, column: 41, scope: !7084)
!7136 = !DILocation(line: 1912, column: 2, scope: !7084)
!7137 = !DILocation(line: 1915, column: 6, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 1915, column: 6)
!7139 = !DILocation(line: 1915, column: 6, scope: !7084)
!7140 = !DILocation(line: 1916, column: 16, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1915, column: 22)
!7142 = !DILocation(line: 1916, column: 27, scope: !7141)
!7143 = !DILocation(line: 1918, column: 32, scope: !7141)
!7144 = !DILocation(line: 1916, column: 3, scope: !7141)
!7145 = !DILocation(line: 1919, column: 15, scope: !7141)
!7146 = !DILocation(line: 1919, column: 19, scope: !7141)
!7147 = !DILocation(line: 1919, column: 3, scope: !7141)
!7148 = !DILocation(line: 1921, column: 23, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 1921, column: 7)
!7150 = !DILocation(line: 1921, column: 34, scope: !7149)
!7151 = !DILocation(line: 1921, column: 8, scope: !7149)
!7152 = !DILocation(line: 1921, column: 7, scope: !7141)
!7153 = !DILocation(line: 1922, column: 4, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 1921, column: 45)
!7155 = !DILocation(line: 1924, column: 2, scope: !7141)
!7156 = !DILocation(line: 1926, column: 16, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1925, column: 7)
!7158 = !DILocation(line: 1926, column: 27, scope: !7157)
!7159 = !DILocation(line: 1928, column: 32, scope: !7157)
!7160 = !DILocation(line: 1926, column: 3, scope: !7157)
!7161 = !DILocation(line: 1929, column: 15, scope: !7157)
!7162 = !DILocation(line: 1929, column: 19, scope: !7157)
!7163 = !DILocation(line: 1929, column: 3, scope: !7157)
!7164 = !DILocation(line: 1931, column: 22, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1931, column: 7)
!7166 = !DILocation(line: 1931, column: 26, scope: !7165)
!7167 = !DILocation(line: 1931, column: 8, scope: !7165)
!7168 = !DILocation(line: 1931, column: 7, scope: !7157)
!7169 = !DILocation(line: 1932, column: 18, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1931, column: 82)
!7171 = !DILocation(line: 1932, column: 22, scope: !7170)
!7172 = !DILocation(line: 1932, column: 4, scope: !7170)
!7173 = !DILocation(line: 1933, column: 4, scope: !7170)
!7174 = !DILocation(line: 1936, column: 23, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1936, column: 7)
!7176 = !DILocation(line: 1936, column: 34, scope: !7175)
!7177 = !DILocation(line: 1936, column: 8, scope: !7175)
!7178 = !DILocation(line: 1936, column: 7, scope: !7157)
!7179 = !DILocation(line: 1937, column: 4, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 1936, column: 45)
!7181 = !DILocation(line: 1941, column: 10, scope: !7084)
!7182 = !DILocation(line: 1941, column: 25, scope: !7084)
!7183 = !DILocation(line: 1941, column: 29, scope: !7084)
!7184 = !DILocation(line: 1941, column: 33, scope: !7084)
!7185 = !DILocation(line: 1941, column: 23, scope: !7084)
!7186 = !DILocation(line: 1941, column: 8, scope: !7084)
!7187 = !DILocation(line: 1942, column: 14, scope: !7084)
!7188 = !DILocation(line: 1942, column: 18, scope: !7084)
!7189 = !DILocation(line: 1942, column: 60, scope: !7084)
!7190 = !DILocation(line: 1942, column: 2, scope: !7084)
!7191 = !DILocation(line: 1945, column: 33, scope: !7084)
!7192 = !DILocation(line: 1945, column: 37, scope: !7084)
!7193 = !DILocation(line: 1945, column: 41, scope: !7084)
!7194 = !DILocation(line: 1945, column: 2, scope: !7084)
!7195 = !DILocation(line: 1946, column: 24, scope: !7084)
!7196 = !DILocation(line: 1946, column: 2, scope: !7084)
!7197 = !DILocation(line: 1948, column: 22, scope: !7084)
!7198 = !DILocation(line: 1948, column: 2, scope: !7084)
!7199 = !DILocation(line: 1950, column: 2, scope: !7084)
!7200 = !DILocation(line: 1951, column: 1, scope: !7084)
!7201 = distinct !DISubprogram(name: "MESH_OT_shape_propagate_to_all", scope: !3, file: !3, line: 2023, type: !3767, scopeLine: 2024, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!7202 = !DILocalVariable(name: "ot", arg: 1, scope: !7201, file: !3, line: 2023, type: !3769)
!7203 = !DILocation(line: 2023, column: 53, scope: !7201)
!7204 = !DILocation(line: 2026, column: 2, scope: !7201)
!7205 = !DILocation(line: 2026, column: 6, scope: !7201)
!7206 = !DILocation(line: 2026, column: 11, scope: !7201)
!7207 = !DILocation(line: 2027, column: 2, scope: !7201)
!7208 = !DILocation(line: 2027, column: 6, scope: !7201)
!7209 = !DILocation(line: 2027, column: 18, scope: !7201)
!7210 = !DILocation(line: 2028, column: 2, scope: !7201)
!7211 = !DILocation(line: 2028, column: 6, scope: !7201)
!7212 = !DILocation(line: 2028, column: 13, scope: !7201)
!7213 = !DILocation(line: 2031, column: 2, scope: !7201)
!7214 = !DILocation(line: 2031, column: 6, scope: !7201)
!7215 = !DILocation(line: 2031, column: 11, scope: !7201)
!7216 = !DILocation(line: 2032, column: 2, scope: !7201)
!7217 = !DILocation(line: 2032, column: 6, scope: !7201)
!7218 = !DILocation(line: 2032, column: 11, scope: !7201)
!7219 = !DILocation(line: 2035, column: 2, scope: !7201)
!7220 = !DILocation(line: 2035, column: 6, scope: !7201)
!7221 = !DILocation(line: 2035, column: 11, scope: !7201)
!7222 = !DILocation(line: 2036, column: 1, scope: !7201)
!7223 = distinct !DISubprogram(name: "edbm_shape_propagate_to_all_exec", scope: !3, file: !3, line: 2009, type: !4116, scopeLine: 2010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!7224 = !DILocalVariable(name: "C", arg: 1, scope: !7223, file: !3, line: 2009, type: !4118)
!7225 = !DILocation(line: 2009, column: 55, scope: !7223)
!7226 = !DILocalVariable(name: "op", arg: 2, scope: !7223, file: !3, line: 2009, type: !4120)
!7227 = !DILocation(line: 2009, column: 70, scope: !7223)
!7228 = !DILocalVariable(name: "obedit", scope: !7223, file: !3, line: 2011, type: !4127)
!7229 = !DILocation(line: 2011, column: 10, scope: !7223)
!7230 = !DILocation(line: 2011, column: 40, scope: !7223)
!7231 = !DILocation(line: 2011, column: 19, scope: !7223)
!7232 = !DILocalVariable(name: "me", scope: !7223, file: !3, line: 2012, type: !1427)
!7233 = !DILocation(line: 2012, column: 8, scope: !7223)
!7234 = !DILocation(line: 2012, column: 13, scope: !7223)
!7235 = !DILocation(line: 2012, column: 21, scope: !7223)
!7236 = !DILocalVariable(name: "em", scope: !7223, file: !3, line: 2013, type: !4133)
!7237 = !DILocation(line: 2013, column: 14, scope: !7223)
!7238 = !DILocation(line: 2013, column: 19, scope: !7223)
!7239 = !DILocation(line: 2013, column: 23, scope: !7223)
!7240 = !DILocation(line: 2015, column: 18, scope: !7223)
!7241 = !DILocation(line: 2015, column: 22, scope: !7223)
!7242 = !DILocation(line: 2015, column: 2, scope: !7223)
!7243 = !DILocation(line: 2017, column: 22, scope: !7223)
!7244 = !DILocation(line: 2017, column: 2, scope: !7223)
!7245 = !DILocation(line: 2019, column: 2, scope: !7223)
!7246 = distinct !DISubprogram(name: "MESH_OT_blend_from_shape", scope: !3, file: !3, line: 2142, type: !3767, scopeLine: 2143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!7247 = !DILocalVariable(name: "ot", arg: 1, scope: !7246, file: !3, line: 2142, type: !3769)
!7248 = !DILocation(line: 2142, column: 47, scope: !7246)
!7249 = !DILocalVariable(name: "prop", scope: !7246, file: !3, line: 2144, type: !3977)
!7250 = !DILocation(line: 2144, column: 15, scope: !7246)
!7251 = !DILocation(line: 2147, column: 2, scope: !7246)
!7252 = !DILocation(line: 2147, column: 6, scope: !7246)
!7253 = !DILocation(line: 2147, column: 11, scope: !7246)
!7254 = !DILocation(line: 2148, column: 2, scope: !7246)
!7255 = !DILocation(line: 2148, column: 6, scope: !7246)
!7256 = !DILocation(line: 2148, column: 18, scope: !7246)
!7257 = !DILocation(line: 2149, column: 2, scope: !7246)
!7258 = !DILocation(line: 2149, column: 6, scope: !7246)
!7259 = !DILocation(line: 2149, column: 13, scope: !7246)
!7260 = !DILocation(line: 2152, column: 2, scope: !7246)
!7261 = !DILocation(line: 2152, column: 6, scope: !7246)
!7262 = !DILocation(line: 2152, column: 11, scope: !7246)
!7263 = !DILocation(line: 2154, column: 2, scope: !7246)
!7264 = !DILocation(line: 2154, column: 6, scope: !7246)
!7265 = !DILocation(line: 2154, column: 9, scope: !7246)
!7266 = !DILocation(line: 2155, column: 2, scope: !7246)
!7267 = !DILocation(line: 2155, column: 6, scope: !7246)
!7268 = !DILocation(line: 2155, column: 11, scope: !7246)
!7269 = !DILocation(line: 2158, column: 2, scope: !7246)
!7270 = !DILocation(line: 2158, column: 6, scope: !7246)
!7271 = !DILocation(line: 2158, column: 11, scope: !7246)
!7272 = !DILocation(line: 2161, column: 22, scope: !7246)
!7273 = !DILocation(line: 2161, column: 26, scope: !7246)
!7274 = !DILocation(line: 2161, column: 9, scope: !7246)
!7275 = !DILocation(line: 2161, column: 7, scope: !7246)
!7276 = !DILocation(line: 2162, column: 21, scope: !7246)
!7277 = !DILocation(line: 2162, column: 2, scope: !7246)
!7278 = !DILocation(line: 2163, column: 24, scope: !7246)
!7279 = !DILocation(line: 2163, column: 2, scope: !7246)
!7280 = !DILocation(line: 2164, column: 16, scope: !7246)
!7281 = !DILocation(line: 2164, column: 20, scope: !7246)
!7282 = !DILocation(line: 2164, column: 2, scope: !7246)
!7283 = !DILocation(line: 2165, column: 18, scope: !7246)
!7284 = !DILocation(line: 2165, column: 22, scope: !7246)
!7285 = !DILocation(line: 2165, column: 2, scope: !7246)
!7286 = !DILocation(line: 2166, column: 1, scope: !7246)
!7287 = distinct !DISubprogram(name: "edbm_blend_from_shape_exec", scope: !3, file: !3, line: 2039, type: !4116, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!7288 = !DILocalVariable(name: "C", arg: 1, scope: !7287, file: !3, line: 2039, type: !4118)
!7289 = !DILocation(line: 2039, column: 49, scope: !7287)
!7290 = !DILocalVariable(name: "op", arg: 2, scope: !7287, file: !3, line: 2039, type: !4120)
!7291 = !DILocation(line: 2039, column: 64, scope: !7287)
!7292 = !DILocalVariable(name: "obedit", scope: !7287, file: !3, line: 2041, type: !4127)
!7293 = !DILocation(line: 2041, column: 10, scope: !7287)
!7294 = !DILocation(line: 2041, column: 40, scope: !7287)
!7295 = !DILocation(line: 2041, column: 19, scope: !7287)
!7296 = !DILocalVariable(name: "me", scope: !7287, file: !3, line: 2042, type: !1427)
!7297 = !DILocation(line: 2042, column: 8, scope: !7287)
!7298 = !DILocation(line: 2042, column: 13, scope: !7287)
!7299 = !DILocation(line: 2042, column: 21, scope: !7287)
!7300 = !DILocalVariable(name: "key", scope: !7287, file: !3, line: 2043, type: !7301)
!7301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7302, size: 64)
!7302 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key", file: !1503, line: 105, baseType: !1519)
!7303 = !DILocation(line: 2043, column: 7, scope: !7287)
!7304 = !DILocation(line: 2043, column: 13, scope: !7287)
!7305 = !DILocation(line: 2043, column: 17, scope: !7287)
!7306 = !DILocalVariable(name: "kb", scope: !7287, file: !3, line: 2044, type: !1524)
!7307 = !DILocation(line: 2044, column: 12, scope: !7287)
!7308 = !DILocalVariable(name: "em", scope: !7287, file: !3, line: 2045, type: !4133)
!7309 = !DILocation(line: 2045, column: 14, scope: !7287)
!7310 = !DILocation(line: 2045, column: 19, scope: !7287)
!7311 = !DILocation(line: 2045, column: 23, scope: !7287)
!7312 = !DILocalVariable(name: "eve", scope: !7287, file: !3, line: 2046, type: !1354)
!7313 = !DILocation(line: 2046, column: 10, scope: !7287)
!7314 = !DILocalVariable(name: "iter", scope: !7287, file: !3, line: 2047, type: !4456)
!7315 = !DILocation(line: 2047, column: 9, scope: !7287)
!7316 = !DILocalVariable(name: "co", scope: !7287, file: !3, line: 2048, type: !1375)
!7317 = !DILocation(line: 2048, column: 8, scope: !7287)
!7318 = !DILocalVariable(name: "sco", scope: !7287, file: !3, line: 2048, type: !3277)
!7319 = !DILocation(line: 2048, column: 16, scope: !7287)
!7320 = !DILocalVariable(name: "totshape", scope: !7287, file: !3, line: 2049, type: !135)
!7321 = !DILocation(line: 2049, column: 6, scope: !7287)
!7322 = !DILocalVariable(name: "blend", scope: !7287, file: !3, line: 2051, type: !4150)
!7323 = !DILocation(line: 2051, column: 14, scope: !7287)
!7324 = !DILocation(line: 2051, column: 36, scope: !7287)
!7325 = !DILocation(line: 2051, column: 40, scope: !7287)
!7326 = !DILocation(line: 2051, column: 22, scope: !7287)
!7327 = !DILocalVariable(name: "shape", scope: !7287, file: !3, line: 2052, type: !4052)
!7328 = !DILocation(line: 2052, column: 12, scope: !7287)
!7329 = !DILocation(line: 2052, column: 33, scope: !7287)
!7330 = !DILocation(line: 2052, column: 37, scope: !7287)
!7331 = !DILocation(line: 2052, column: 20, scope: !7287)
!7332 = !DILocalVariable(name: "use_add", scope: !7287, file: !3, line: 2053, type: !4811)
!7333 = !DILocation(line: 2053, column: 13, scope: !7287)
!7334 = !DILocation(line: 2053, column: 39, scope: !7287)
!7335 = !DILocation(line: 2053, column: 43, scope: !7287)
!7336 = !DILocation(line: 2053, column: 23, scope: !7287)
!7337 = !DILocation(line: 2056, column: 42, scope: !7287)
!7338 = !DILocation(line: 2056, column: 46, scope: !7287)
!7339 = !DILocation(line: 2056, column: 50, scope: !7287)
!7340 = !DILocation(line: 2056, column: 13, scope: !7287)
!7341 = !DILocation(line: 2056, column: 11, scope: !7287)
!7342 = !DILocation(line: 2057, column: 6, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 2057, column: 6)
!7344 = !DILocation(line: 2057, column: 15, scope: !7343)
!7345 = !DILocation(line: 2057, column: 20, scope: !7343)
!7346 = !DILocation(line: 2057, column: 23, scope: !7343)
!7347 = !DILocation(line: 2057, column: 29, scope: !7343)
!7348 = !DILocation(line: 2057, column: 33, scope: !7343)
!7349 = !DILocation(line: 2057, column: 36, scope: !7343)
!7350 = !DILocation(line: 2057, column: 45, scope: !7343)
!7351 = !DILocation(line: 2057, column: 42, scope: !7343)
!7352 = !DILocation(line: 2057, column: 6, scope: !7287)
!7353 = !DILocation(line: 2058, column: 3, scope: !7343)
!7354 = !DILocation(line: 2061, column: 6, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 2061, column: 6)
!7356 = !DILocation(line: 2061, column: 6, scope: !7287)
!7357 = !DILocation(line: 2062, column: 22, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 2061, column: 11)
!7359 = !DILocation(line: 2062, column: 27, scope: !7358)
!7360 = !DILocation(line: 2062, column: 34, scope: !7358)
!7361 = !DILocation(line: 2062, column: 8, scope: !7358)
!7362 = !DILocation(line: 2062, column: 6, scope: !7358)
!7363 = !DILocation(line: 2063, column: 2, scope: !7358)
!7364 = !DILocation(line: 2066, column: 2, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 2066, column: 2)
!7366 = !DILocation(line: 2066, column: 2, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7365, file: !3, line: 2066, column: 2)
!7368 = !DILocation(line: 2067, column: 8, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7370, file: !3, line: 2067, column: 7)
!7370 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 2066, column: 54)
!7371 = !DILocation(line: 2067, column: 47, scope: !7369)
!7372 = !DILocation(line: 2067, column: 50, scope: !7369)
!7373 = !DILocation(line: 2067, column: 7, scope: !7370)
!7374 = !DILocation(line: 2068, column: 4, scope: !7369)
!7375 = !DILocation(line: 2071, column: 33, scope: !7370)
!7376 = !DILocation(line: 2071, column: 37, scope: !7370)
!7377 = !DILocation(line: 2071, column: 41, scope: !7370)
!7378 = !DILocation(line: 2071, column: 48, scope: !7370)
!7379 = !DILocation(line: 2071, column: 53, scope: !7370)
!7380 = !DILocation(line: 2071, column: 58, scope: !7370)
!7381 = !DILocation(line: 2071, column: 77, scope: !7370)
!7382 = !DILocation(line: 2071, column: 9, scope: !7370)
!7383 = !DILocation(line: 2071, column: 7, scope: !7370)
!7384 = !DILocation(line: 2072, column: 14, scope: !7370)
!7385 = !DILocation(line: 2072, column: 18, scope: !7370)
!7386 = !DILocation(line: 2072, column: 3, scope: !7370)
!7387 = !DILocation(line: 2074, column: 7, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7370, file: !3, line: 2074, column: 7)
!7389 = !DILocation(line: 2074, column: 7, scope: !7370)
!7390 = !DILocation(line: 2076, column: 8, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2076, column: 8)
!7392 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 2074, column: 16)
!7393 = !DILocation(line: 2076, column: 8, scope: !7392)
!7394 = !DILocalVariable(name: "rco", scope: !7395, file: !3, line: 2077, type: !7396)
!7395 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 2076, column: 12)
!7396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!7397 = !DILocation(line: 2077, column: 18, scope: !7395)
!7398 = !DILocation(line: 2077, column: 48, scope: !7395)
!7399 = !DILocation(line: 2077, column: 52, scope: !7395)
!7400 = !DILocation(line: 2077, column: 56, scope: !7395)
!7401 = !DILocation(line: 2077, column: 63, scope: !7395)
!7402 = !DILocation(line: 2077, column: 68, scope: !7395)
!7403 = !DILocation(line: 2077, column: 73, scope: !7395)
!7404 = !DILocation(line: 2077, column: 92, scope: !7395)
!7405 = !DILocation(line: 2077, column: 96, scope: !7395)
!7406 = !DILocation(line: 2077, column: 24, scope: !7395)
!7407 = !DILocation(line: 2078, column: 17, scope: !7395)
!7408 = !DILocation(line: 2078, column: 21, scope: !7395)
!7409 = !DILocation(line: 2078, column: 25, scope: !7395)
!7410 = !DILocation(line: 2078, column: 5, scope: !7395)
!7411 = !DILocation(line: 2079, column: 4, scope: !7395)
!7412 = !DILocation(line: 2081, column: 17, scope: !7392)
!7413 = !DILocation(line: 2081, column: 22, scope: !7392)
!7414 = !DILocation(line: 2081, column: 26, scope: !7392)
!7415 = !DILocation(line: 2081, column: 30, scope: !7392)
!7416 = !DILocation(line: 2081, column: 4, scope: !7392)
!7417 = !DILocation(line: 2082, column: 3, scope: !7392)
!7418 = !DILocation(line: 2085, column: 19, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 2083, column: 8)
!7420 = !DILocation(line: 2085, column: 24, scope: !7419)
!7421 = !DILocation(line: 2085, column: 28, scope: !7419)
!7422 = !DILocation(line: 2085, column: 33, scope: !7419)
!7423 = !DILocation(line: 2085, column: 37, scope: !7419)
!7424 = !DILocation(line: 2085, column: 41, scope: !7419)
!7425 = !DILocation(line: 2085, column: 4, scope: !7419)
!7426 = !DILocation(line: 2087, column: 2, scope: !7370)
!7427 = distinct !{!7427, !7364, !7428}
!7428 = !DILocation(line: 2087, column: 2, scope: !7365)
!7429 = !DILocation(line: 2089, column: 22, scope: !7287)
!7430 = !DILocation(line: 2089, column: 2, scope: !7287)
!7431 = !DILocation(line: 2091, column: 2, scope: !7287)
!7432 = !DILocation(line: 2092, column: 1, scope: !7287)
!7433 = distinct !DISubprogram(name: "edbm_blend_from_shape_ui", scope: !3, file: !3, line: 2126, type: !7434, scopeLine: 2127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!7434 = !DISubroutineType(types: !7435)
!7435 = !{null, !4118, !4120}
!7436 = !DILocalVariable(name: "C", arg: 1, scope: !7433, file: !3, line: 2126, type: !4118)
!7437 = !DILocation(line: 2126, column: 48, scope: !7433)
!7438 = !DILocalVariable(name: "op", arg: 2, scope: !7433, file: !3, line: 2126, type: !4120)
!7439 = !DILocation(line: 2126, column: 63, scope: !7433)
!7440 = !DILocalVariable(name: "layout", scope: !7433, file: !3, line: 2128, type: !7441)
!7441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7442, size: 64)
!7442 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayout", file: !7443, line: 85, baseType: !3951)
!7443 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7444 = !DILocation(line: 2128, column: 12, scope: !7433)
!7445 = !DILocation(line: 2128, column: 21, scope: !7433)
!7446 = !DILocation(line: 2128, column: 25, scope: !7433)
!7447 = !DILocalVariable(name: "ptr", scope: !7433, file: !3, line: 2129, type: !6935)
!7448 = !DILocation(line: 2129, column: 13, scope: !7433)
!7449 = !DILocalVariable(name: "obedit", scope: !7433, file: !3, line: 2130, type: !4127)
!7450 = !DILocation(line: 2130, column: 10, scope: !7433)
!7451 = !DILocation(line: 2130, column: 40, scope: !7433)
!7452 = !DILocation(line: 2130, column: 19, scope: !7433)
!7453 = !DILocalVariable(name: "me", scope: !7433, file: !3, line: 2131, type: !1427)
!7454 = !DILocation(line: 2131, column: 8, scope: !7433)
!7455 = !DILocation(line: 2131, column: 13, scope: !7433)
!7456 = !DILocation(line: 2131, column: 21, scope: !7433)
!7457 = !DILocalVariable(name: "ptr_key", scope: !7433, file: !3, line: 2132, type: !6935)
!7458 = !DILocation(line: 2132, column: 13, scope: !7433)
!7459 = !DILocation(line: 2134, column: 27, scope: !7433)
!7460 = !DILocation(line: 2134, column: 31, scope: !7433)
!7461 = !DILocation(line: 2134, column: 37, scope: !7433)
!7462 = !DILocation(line: 2134, column: 43, scope: !7433)
!7463 = !DILocation(line: 2134, column: 47, scope: !7433)
!7464 = !DILocation(line: 2134, column: 2, scope: !7433)
!7465 = !DILocation(line: 2135, column: 30, scope: !7433)
!7466 = !DILocation(line: 2135, column: 34, scope: !7433)
!7467 = !DILocation(line: 2135, column: 24, scope: !7433)
!7468 = !DILocation(line: 2135, column: 2, scope: !7433)
!7469 = !DILocation(line: 2137, column: 17, scope: !7433)
!7470 = !DILocation(line: 2137, column: 2, scope: !7433)
!7471 = !DILocation(line: 2138, column: 10, scope: !7433)
!7472 = !DILocation(line: 2138, column: 2, scope: !7433)
!7473 = !DILocation(line: 2139, column: 10, scope: !7433)
!7474 = !DILocation(line: 2139, column: 2, scope: !7433)
!7475 = !DILocation(line: 2140, column: 1, scope: !7433)
!7476 = distinct !DISubprogram(name: "shape_itemf", scope: !3, file: !3, line: 2094, type: !6931, scopeLine: 2095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!7477 = !DILocalVariable(name: "C", arg: 1, scope: !7476, file: !3, line: 2094, type: !4118)
!7478 = !DILocation(line: 2094, column: 48, scope: !7476)
!7479 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !7476, file: !3, line: 2094, type: !6934)
!7480 = !DILocation(line: 2094, column: 63, scope: !7476)
!7481 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !7476, file: !3, line: 2094, type: !3977)
!7482 = !DILocation(line: 2094, column: 90, scope: !7476)
!7483 = !DILocalVariable(name: "r_free", arg: 4, scope: !7476, file: !3, line: 2094, type: !6936)
!7484 = !DILocation(line: 2094, column: 110, scope: !7476)
!7485 = !DILocalVariable(name: "obedit", scope: !7476, file: !3, line: 2096, type: !4127)
!7486 = !DILocation(line: 2096, column: 10, scope: !7476)
!7487 = !DILocation(line: 2096, column: 40, scope: !7476)
!7488 = !DILocation(line: 2096, column: 19, scope: !7476)
!7489 = !DILocalVariable(name: "em", scope: !7476, file: !3, line: 2097, type: !4133)
!7490 = !DILocation(line: 2097, column: 14, scope: !7476)
!7491 = !DILocalVariable(name: "item", scope: !7476, file: !3, line: 2098, type: !6933)
!7492 = !DILocation(line: 2098, column: 20, scope: !7476)
!7493 = !DILocalVariable(name: "totitem", scope: !7476, file: !3, line: 2099, type: !135)
!7494 = !DILocation(line: 2099, column: 6, scope: !7476)
!7495 = !DILocation(line: 2101, column: 7, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 2101, column: 6)
!7497 = !DILocation(line: 2101, column: 14, scope: !7496)
!7498 = !DILocation(line: 2101, column: 17, scope: !7496)
!7499 = !DILocation(line: 2101, column: 25, scope: !7496)
!7500 = !DILocation(line: 2101, column: 30, scope: !7496)
!7501 = !DILocation(line: 2101, column: 42, scope: !7496)
!7502 = !DILocation(line: 2102, column: 37, scope: !7496)
!7503 = !DILocation(line: 2102, column: 12, scope: !7496)
!7504 = !DILocation(line: 2102, column: 10, scope: !7496)
!7505 = !DILocation(line: 2102, column: 46, scope: !7496)
!7506 = !DILocation(line: 2103, column: 28, scope: !7496)
!7507 = !DILocation(line: 2103, column: 32, scope: !7496)
!7508 = !DILocation(line: 2103, column: 36, scope: !7496)
!7509 = !DILocation(line: 2103, column: 6, scope: !7496)
!7510 = !DILocation(line: 2101, column: 6, scope: !7476)
!7511 = !DILocalVariable(name: "tmp", scope: !7512, file: !3, line: 2105, type: !4030)
!7512 = distinct !DILexicalBlock(scope: !7496, file: !3, line: 2104, column: 2)
!7513 = !DILocation(line: 2105, column: 20, scope: !7512)
!7514 = !DILocalVariable(name: "a", scope: !7512, file: !3, line: 2106, type: !135)
!7515 = !DILocation(line: 2106, column: 7, scope: !7512)
!7516 = !DILocation(line: 2108, column: 10, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7512, file: !3, line: 2108, column: 3)
!7518 = !DILocation(line: 2108, column: 8, scope: !7517)
!7519 = !DILocation(line: 2108, column: 15, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 2108, column: 3)
!7521 = !DILocation(line: 2108, column: 19, scope: !7520)
!7522 = !DILocation(line: 2108, column: 23, scope: !7520)
!7523 = !DILocation(line: 2108, column: 27, scope: !7520)
!7524 = !DILocation(line: 2108, column: 33, scope: !7520)
!7525 = !DILocation(line: 2108, column: 17, scope: !7520)
!7526 = !DILocation(line: 2108, column: 3, scope: !7517)
!7527 = !DILocation(line: 2109, column: 8, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !3, line: 2109, column: 8)
!7529 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 2108, column: 48)
!7530 = !DILocation(line: 2109, column: 12, scope: !7528)
!7531 = !DILocation(line: 2109, column: 16, scope: !7528)
!7532 = !DILocation(line: 2109, column: 22, scope: !7528)
!7533 = !DILocation(line: 2109, column: 29, scope: !7528)
!7534 = !DILocation(line: 2109, column: 32, scope: !7528)
!7535 = !DILocation(line: 2109, column: 37, scope: !7528)
!7536 = !DILocation(line: 2109, column: 8, scope: !7529)
!7537 = !DILocation(line: 2110, column: 5, scope: !7528)
!7538 = !DILocation(line: 2112, column: 16, scope: !7529)
!7539 = !DILocation(line: 2112, column: 8, scope: !7529)
!7540 = !DILocation(line: 2112, column: 14, scope: !7529)
!7541 = !DILocation(line: 2113, column: 21, scope: !7529)
!7542 = !DILocation(line: 2113, column: 25, scope: !7529)
!7543 = !DILocation(line: 2113, column: 29, scope: !7529)
!7544 = !DILocation(line: 2113, column: 35, scope: !7529)
!7545 = !DILocation(line: 2113, column: 42, scope: !7529)
!7546 = !DILocation(line: 2113, column: 45, scope: !7529)
!7547 = !DILocation(line: 2113, column: 8, scope: !7529)
!7548 = !DILocation(line: 2113, column: 19, scope: !7529)
!7549 = !DILocation(line: 2114, column: 15, scope: !7529)
!7550 = !DILocation(line: 2114, column: 19, scope: !7529)
!7551 = !DILocation(line: 2114, column: 23, scope: !7529)
!7552 = !DILocation(line: 2114, column: 29, scope: !7529)
!7553 = !DILocation(line: 2114, column: 36, scope: !7529)
!7554 = !DILocation(line: 2114, column: 39, scope: !7529)
!7555 = !DILocation(line: 2114, column: 8, scope: !7529)
!7556 = !DILocation(line: 2114, column: 13, scope: !7529)
!7557 = !DILocation(line: 2116, column: 4, scope: !7529)
!7558 = !DILocation(line: 2117, column: 3, scope: !7529)
!7559 = !DILocation(line: 2108, column: 44, scope: !7520)
!7560 = !DILocation(line: 2108, column: 3, scope: !7520)
!7561 = distinct !{!7561, !7526, !7562}
!7562 = !DILocation(line: 2117, column: 3, scope: !7517)
!7563 = !DILocation(line: 2118, column: 2, scope: !7512)
!7564 = !DILocation(line: 2120, column: 2, scope: !7476)
!7565 = !DILocation(line: 2121, column: 3, scope: !7476)
!7566 = !DILocation(line: 2121, column: 10, scope: !7476)
!7567 = !DILocation(line: 2123, column: 9, scope: !7476)
!7568 = !DILocation(line: 2123, column: 2, scope: !7476)
!7569 = distinct !DISubprogram(name: "MESH_OT_solidify", scope: !3, file: !3, line: 2203, type: !3767, scopeLine: 2204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!7570 = !DILocalVariable(name: "ot", arg: 1, scope: !7569, file: !3, line: 2203, type: !3769)
!7571 = !DILocation(line: 2203, column: 39, scope: !7569)
!7572 = !DILocalVariable(name: "prop", scope: !7569, file: !3, line: 2205, type: !3977)
!7573 = !DILocation(line: 2205, column: 15, scope: !7569)
!7574 = !DILocation(line: 2207, column: 2, scope: !7569)
!7575 = !DILocation(line: 2207, column: 6, scope: !7569)
!7576 = !DILocation(line: 2207, column: 11, scope: !7569)
!7577 = !DILocation(line: 2208, column: 2, scope: !7569)
!7578 = !DILocation(line: 2208, column: 6, scope: !7569)
!7579 = !DILocation(line: 2208, column: 18, scope: !7569)
!7580 = !DILocation(line: 2209, column: 2, scope: !7569)
!7581 = !DILocation(line: 2209, column: 6, scope: !7569)
!7582 = !DILocation(line: 2209, column: 13, scope: !7569)
!7583 = !DILocation(line: 2212, column: 2, scope: !7569)
!7584 = !DILocation(line: 2212, column: 6, scope: !7569)
!7585 = !DILocation(line: 2212, column: 11, scope: !7569)
!7586 = !DILocation(line: 2213, column: 2, scope: !7569)
!7587 = !DILocation(line: 2213, column: 6, scope: !7569)
!7588 = !DILocation(line: 2213, column: 11, scope: !7569)
!7589 = !DILocation(line: 2216, column: 2, scope: !7569)
!7590 = !DILocation(line: 2216, column: 6, scope: !7569)
!7591 = !DILocation(line: 2216, column: 11, scope: !7569)
!7592 = !DILocation(line: 2218, column: 23, scope: !7569)
!7593 = !DILocation(line: 2218, column: 27, scope: !7569)
!7594 = !DILocation(line: 2218, column: 9, scope: !7569)
!7595 = !DILocation(line: 2218, column: 7, scope: !7569)
!7596 = !DILocation(line: 2219, column: 28, scope: !7569)
!7597 = !DILocation(line: 2219, column: 2, scope: !7569)
!7598 = !DILocation(line: 2220, column: 1, scope: !7569)
!7599 = distinct !DISubprogram(name: "edbm_solidify_exec", scope: !3, file: !3, line: 2168, type: !4116, scopeLine: 2169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!7600 = !DILocalVariable(name: "C", arg: 1, scope: !7599, file: !3, line: 2168, type: !4118)
!7601 = !DILocation(line: 2168, column: 41, scope: !7599)
!7602 = !DILocalVariable(name: "op", arg: 2, scope: !7599, file: !3, line: 2168, type: !4120)
!7603 = !DILocation(line: 2168, column: 56, scope: !7599)
!7604 = !DILocalVariable(name: "obedit", scope: !7599, file: !3, line: 2170, type: !4127)
!7605 = !DILocation(line: 2170, column: 10, scope: !7599)
!7606 = !DILocation(line: 2170, column: 40, scope: !7599)
!7607 = !DILocation(line: 2170, column: 19, scope: !7599)
!7608 = !DILocalVariable(name: "me", scope: !7599, file: !3, line: 2171, type: !1427)
!7609 = !DILocation(line: 2171, column: 8, scope: !7599)
!7610 = !DILocation(line: 2171, column: 13, scope: !7599)
!7611 = !DILocation(line: 2171, column: 21, scope: !7599)
!7612 = !DILocalVariable(name: "em", scope: !7599, file: !3, line: 2172, type: !4133)
!7613 = !DILocation(line: 2172, column: 14, scope: !7599)
!7614 = !DILocation(line: 2172, column: 19, scope: !7599)
!7615 = !DILocation(line: 2172, column: 23, scope: !7599)
!7616 = !DILocalVariable(name: "bm", scope: !7599, file: !3, line: 2173, type: !3610)
!7617 = !DILocation(line: 2173, column: 9, scope: !7599)
!7618 = !DILocation(line: 2173, column: 14, scope: !7599)
!7619 = !DILocation(line: 2173, column: 18, scope: !7599)
!7620 = !DILocalVariable(name: "bmop", scope: !7599, file: !3, line: 2174, type: !4335)
!7621 = !DILocation(line: 2174, column: 13, scope: !7599)
!7622 = !DILocalVariable(name: "thickness", scope: !7599, file: !3, line: 2176, type: !4150)
!7623 = !DILocation(line: 2176, column: 14, scope: !7599)
!7624 = !DILocation(line: 2176, column: 40, scope: !7599)
!7625 = !DILocation(line: 2176, column: 44, scope: !7599)
!7626 = !DILocation(line: 2176, column: 26, scope: !7599)
!7627 = !DILocation(line: 2178, column: 20, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 2178, column: 6)
!7629 = !DILocation(line: 2178, column: 31, scope: !7628)
!7630 = !DILocation(line: 2178, column: 85, scope: !7628)
!7631 = !DILocation(line: 2178, column: 7, scope: !7628)
!7632 = !DILocation(line: 2178, column: 6, scope: !7599)
!7633 = !DILocation(line: 2179, column: 3, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 2178, column: 97)
!7635 = !DILocation(line: 2185, column: 32, scope: !7599)
!7636 = !DILocation(line: 2185, column: 41, scope: !7599)
!7637 = !DILocation(line: 2185, column: 36, scope: !7599)
!7638 = !DILocation(line: 2185, column: 2, scope: !7599)
!7639 = !DILocation(line: 2188, column: 14, scope: !7599)
!7640 = !DILocation(line: 2188, column: 2, scope: !7599)
!7641 = !DILocation(line: 2191, column: 31, scope: !7599)
!7642 = !DILocation(line: 2191, column: 40, scope: !7599)
!7643 = !DILocation(line: 2191, column: 35, scope: !7599)
!7644 = !DILocation(line: 2191, column: 2, scope: !7599)
!7645 = !DILocation(line: 2193, column: 22, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 2193, column: 6)
!7647 = !DILocation(line: 2193, column: 33, scope: !7646)
!7648 = !DILocation(line: 2193, column: 7, scope: !7646)
!7649 = !DILocation(line: 2193, column: 6, scope: !7599)
!7650 = !DILocation(line: 2194, column: 3, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 2193, column: 44)
!7652 = !DILocation(line: 2197, column: 22, scope: !7599)
!7653 = !DILocation(line: 2197, column: 2, scope: !7599)
!7654 = !DILocation(line: 2199, column: 2, scope: !7599)
!7655 = !DILocation(line: 2200, column: 1, scope: !7599)
!7656 = distinct !DISubprogram(name: "MESH_OT_knife_cut", scope: !3, file: !3, line: 2530, type: !3767, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!7657 = !DILocalVariable(name: "ot", arg: 1, scope: !7656, file: !3, line: 2530, type: !3769)
!7658 = !DILocation(line: 2530, column: 40, scope: !7656)
!7659 = !DILocalVariable(name: "prop", scope: !7656, file: !3, line: 2532, type: !3977)
!7660 = !DILocation(line: 2532, column: 15, scope: !7656)
!7661 = !DILocation(line: 2534, column: 2, scope: !7656)
!7662 = !DILocation(line: 2534, column: 6, scope: !7656)
!7663 = !DILocation(line: 2534, column: 11, scope: !7656)
!7664 = !DILocation(line: 2535, column: 2, scope: !7656)
!7665 = !DILocation(line: 2535, column: 6, scope: !7656)
!7666 = !DILocation(line: 2535, column: 18, scope: !7656)
!7667 = !DILocation(line: 2536, column: 2, scope: !7656)
!7668 = !DILocation(line: 2536, column: 6, scope: !7656)
!7669 = !DILocation(line: 2536, column: 13, scope: !7656)
!7670 = !DILocation(line: 2538, column: 2, scope: !7656)
!7671 = !DILocation(line: 2538, column: 6, scope: !7656)
!7672 = !DILocation(line: 2538, column: 13, scope: !7656)
!7673 = !DILocation(line: 2539, column: 2, scope: !7656)
!7674 = !DILocation(line: 2539, column: 6, scope: !7656)
!7675 = !DILocation(line: 2539, column: 12, scope: !7656)
!7676 = !DILocation(line: 2540, column: 2, scope: !7656)
!7677 = !DILocation(line: 2540, column: 6, scope: !7656)
!7678 = !DILocation(line: 2540, column: 11, scope: !7656)
!7679 = !DILocation(line: 2542, column: 2, scope: !7656)
!7680 = !DILocation(line: 2542, column: 6, scope: !7656)
!7681 = !DILocation(line: 2542, column: 11, scope: !7656)
!7682 = !DILocation(line: 2545, column: 2, scope: !7656)
!7683 = !DILocation(line: 2545, column: 6, scope: !7656)
!7684 = !DILocation(line: 2545, column: 11, scope: !7656)
!7685 = !DILocation(line: 2547, column: 15, scope: !7656)
!7686 = !DILocation(line: 2547, column: 19, scope: !7656)
!7687 = !DILocation(line: 2547, column: 2, scope: !7656)
!7688 = !DILocation(line: 2548, column: 26, scope: !7656)
!7689 = !DILocation(line: 2548, column: 30, scope: !7656)
!7690 = !DILocation(line: 2548, column: 9, scope: !7656)
!7691 = !DILocation(line: 2548, column: 7, scope: !7656)
!7692 = !DILocation(line: 2549, column: 34, scope: !7656)
!7693 = !DILocation(line: 2549, column: 2, scope: !7656)
!7694 = !DILocation(line: 2552, column: 14, scope: !7656)
!7695 = !DILocation(line: 2552, column: 18, scope: !7656)
!7696 = !DILocation(line: 2552, column: 2, scope: !7656)
!7697 = !DILocation(line: 2553, column: 1, scope: !7656)
!7698 = distinct !DISubprogram(name: "edbm_knife_cut_exec", scope: !3, file: !3, line: 2410, type: !4116, scopeLine: 2411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!7699 = !DILocalVariable(name: "C", arg: 1, scope: !7698, file: !3, line: 2410, type: !4118)
!7700 = !DILocation(line: 2410, column: 42, scope: !7698)
!7701 = !DILocalVariable(name: "op", arg: 2, scope: !7698, file: !3, line: 2410, type: !4120)
!7702 = !DILocation(line: 2410, column: 57, scope: !7698)
!7703 = !DILocalVariable(name: "obedit", scope: !7698, file: !3, line: 2412, type: !4127)
!7704 = !DILocation(line: 2412, column: 10, scope: !7698)
!7705 = !DILocation(line: 2412, column: 40, scope: !7698)
!7706 = !DILocation(line: 2412, column: 19, scope: !7698)
!7707 = !DILocalVariable(name: "em", scope: !7698, file: !3, line: 2413, type: !4133)
!7708 = !DILocation(line: 2413, column: 14, scope: !7698)
!7709 = !DILocation(line: 2413, column: 44, scope: !7698)
!7710 = !DILocation(line: 2413, column: 19, scope: !7698)
!7711 = !DILocalVariable(name: "bm", scope: !7698, file: !3, line: 2414, type: !3610)
!7712 = !DILocation(line: 2414, column: 9, scope: !7698)
!7713 = !DILocation(line: 2414, column: 14, scope: !7698)
!7714 = !DILocation(line: 2414, column: 18, scope: !7698)
!7715 = !DILocalVariable(name: "ar", scope: !7698, file: !3, line: 2415, type: !4375)
!7716 = !DILocation(line: 2415, column: 11, scope: !7698)
!7717 = !DILocation(line: 2415, column: 30, scope: !7698)
!7718 = !DILocation(line: 2415, column: 16, scope: !7698)
!7719 = !DILocalVariable(name: "bv", scope: !7698, file: !3, line: 2416, type: !1354)
!7720 = !DILocation(line: 2416, column: 10, scope: !7698)
!7721 = !DILocalVariable(name: "iter", scope: !7698, file: !3, line: 2417, type: !4456)
!7722 = !DILocation(line: 2417, column: 9, scope: !7698)
!7723 = !DILocalVariable(name: "be", scope: !7698, file: !3, line: 2418, type: !1418)
!7724 = !DILocation(line: 2418, column: 10, scope: !7698)
!7725 = !DILocalVariable(name: "bmop", scope: !7698, file: !3, line: 2419, type: !4335)
!7726 = !DILocation(line: 2419, column: 13, scope: !7698)
!7727 = !DILocalVariable(name: "isect", scope: !7698, file: !3, line: 2420, type: !1344)
!7728 = !DILocation(line: 2420, column: 8, scope: !7698)
!7729 = !DILocalVariable(name: "len", scope: !7698, file: !3, line: 2421, type: !135)
!7730 = !DILocation(line: 2421, column: 6, scope: !7698)
!7731 = !DILocalVariable(name: "isected", scope: !7698, file: !3, line: 2421, type: !135)
!7732 = !DILocation(line: 2421, column: 15, scope: !7698)
!7733 = !DILocalVariable(name: "i", scope: !7698, file: !3, line: 2421, type: !135)
!7734 = !DILocation(line: 2421, column: 24, scope: !7698)
!7735 = !DILocalVariable(name: "numcuts", scope: !7698, file: !3, line: 2422, type: !1373)
!7736 = !DILocation(line: 2422, column: 8, scope: !7698)
!7737 = !DILocalVariable(name: "mode", scope: !7698, file: !3, line: 2423, type: !5013)
!7738 = !DILocation(line: 2423, column: 14, scope: !7698)
!7739 = !DILocation(line: 2423, column: 33, scope: !7698)
!7740 = !DILocation(line: 2423, column: 37, scope: !7698)
!7741 = !DILocation(line: 2423, column: 21, scope: !7698)
!7742 = !DILocalVariable(name: "slot_edge_percents", scope: !7698, file: !3, line: 2424, type: !7743)
!7743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7744, size: 64)
!7744 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpSlot", file: !48, line: 163, baseType: !3572)
!7745 = !DILocation(line: 2424, column: 12, scope: !7698)
!7746 = !DILocalVariable(name: "screen_vert_coords", scope: !7698, file: !3, line: 2427, type: !7747)
!7747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!7748 = !DILocation(line: 2427, column: 10, scope: !7698)
!7749 = !DILocalVariable(name: "sco", scope: !7698, file: !3, line: 2427, type: !7747)
!7750 = !DILocation(line: 2427, column: 36, scope: !7698)
!7751 = !DILocalVariable(name: "mouse_path", scope: !7698, file: !3, line: 2427, type: !7747)
!7752 = !DILocation(line: 2427, column: 47, scope: !7698)
!7753 = !DILocation(line: 2430, column: 6, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2430, column: 6)
!7755 = !DILocation(line: 2430, column: 6, scope: !7698)
!7756 = !DILocation(line: 2431, column: 3, scope: !7754)
!7757 = !DILocation(line: 2433, column: 6, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2433, column: 6)
!7759 = !DILocation(line: 2433, column: 10, scope: !7758)
!7760 = !DILocation(line: 2433, column: 21, scope: !7758)
!7761 = !DILocation(line: 2433, column: 6, scope: !7698)
!7762 = !DILocation(line: 2434, column: 14, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 2433, column: 26)
!7764 = !DILocation(line: 2434, column: 18, scope: !7763)
!7765 = !DILocation(line: 2434, column: 3, scope: !7763)
!7766 = !DILocation(line: 2435, column: 3, scope: !7763)
!7767 = !DILocation(line: 2438, column: 30, scope: !7698)
!7768 = !DILocation(line: 2438, column: 34, scope: !7698)
!7769 = !DILocation(line: 2438, column: 8, scope: !7698)
!7770 = !DILocation(line: 2438, column: 6, scope: !7698)
!7771 = !DILocation(line: 2440, column: 6, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2440, column: 6)
!7773 = !DILocation(line: 2440, column: 10, scope: !7772)
!7774 = !DILocation(line: 2440, column: 6, scope: !7698)
!7775 = !DILocation(line: 2441, column: 14, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 2440, column: 15)
!7777 = !DILocation(line: 2441, column: 18, scope: !7776)
!7778 = !DILocation(line: 2441, column: 3, scope: !7776)
!7779 = !DILocation(line: 2442, column: 3, scope: !7776)
!7780 = !DILocation(line: 2445, column: 15, scope: !7698)
!7781 = !DILocation(line: 2445, column: 27, scope: !7698)
!7782 = !DILocation(line: 2445, column: 31, scope: !7698)
!7783 = !DILocation(line: 2445, column: 13, scope: !7698)
!7784 = !DILocalVariable(name: "rna_macro_iter", scope: !7785, file: !3, line: 2448, type: !7786)
!7785 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2448, column: 2)
!7786 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPropertyIterator", file: !6, line: 279, baseType: !7787)
!7787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPropertyIterator", file: !6, line: 264, size: 1088, elements: !7788)
!7788 = !{!7789, !7790, !7791, !7793, !7823, !7824, !7825, !7826}
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7787, file: !6, line: 266, baseType: !6935, size: 192)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "builtin_parent", scope: !7787, file: !6, line: 267, baseType: !6935, size: 192, offset: 192)
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !7787, file: !6, line: 268, baseType: !7792, size: 64, offset: 384)
!7792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !7787, file: !6, line: 272, baseType: !7794, size: 320, offset: 448)
!7794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7787, file: !6, line: 269, size: 320, elements: !7795)
!7795 = !{!7796, !7811}
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !7794, file: !6, line: 270, baseType: !7797, size: 320)
!7797 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArrayIterator", file: !6, line: 262, baseType: !7798)
!7798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArrayIterator", file: !6, line: 249, size: 320, elements: !7799)
!7799 = !{!7800, !7801, !7802, !7803, !7804, !7805}
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !7798, file: !6, line: 250, baseType: !1836, size: 64)
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "endptr", scope: !7798, file: !6, line: 251, baseType: !1836, size: 64, offset: 64)
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "free_ptr", scope: !7798, file: !6, line: 252, baseType: !1343, size: 64, offset: 128)
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !7798, file: !6, line: 253, baseType: !135, size: 32, offset: 192)
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7798, file: !6, line: 257, baseType: !135, size: 32, offset: 224)
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !7798, file: !6, line: 261, baseType: !7806, size: 64, offset: 256)
!7806 = !DIDerivedType(tag: DW_TAG_typedef, name: "IteratorSkipFunc", file: !6, line: 241, baseType: !7807)
!7807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7808, size: 64)
!7808 = !DISubroutineType(types: !7809)
!7809 = !{!135, !7810, !1343}
!7810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7787, size: 64)
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "listbase", scope: !7794, file: !6, line: 271, baseType: !7812, size: 192)
!7812 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBaseIterator", file: !6, line: 247, baseType: !7813)
!7813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBaseIterator", file: !6, line: 243, size: 192, elements: !7814)
!7814 = !{!7815, !7821, !7822}
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7813, file: !6, line: 244, baseType: !7816, size: 64)
!7816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7817, size: 64)
!7817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Link", file: !1491, line: 57, size: 128, elements: !7818)
!7818 = !{!7819, !7820}
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7817, file: !1491, line: 58, baseType: !7816, size: 64)
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7817, file: !1491, line: 58, baseType: !7816, size: 64, offset: 64)
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7813, file: !6, line: 245, baseType: !135, size: 32, offset: 64)
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !7813, file: !6, line: 246, baseType: !7806, size: 64, offset: 128)
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "idprop", scope: !7787, file: !6, line: 273, baseType: !135, size: 32, offset: 768)
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !7787, file: !6, line: 274, baseType: !135, size: 32, offset: 800)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !7787, file: !6, line: 277, baseType: !6935, size: 192, offset: 832)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !7787, file: !6, line: 278, baseType: !135, size: 32, offset: 1024)
!7827 = !DILocation(line: 2448, column: 2, scope: !7785)
!7828 = !DILocation(line: 2448, column: 2, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2448, column: 2)
!7830 = !DILocation(line: 2448, column: 2, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 2448, column: 2)
!7832 = !DILocalVariable(name: "itemptr", scope: !7833, file: !3, line: 2448, type: !6935)
!7833 = distinct !DILexicalBlock(scope: !7831, file: !3, line: 2448, column: 2)
!7834 = !DILocation(line: 2448, column: 2, scope: !7833)
!7835 = !DILocation(line: 2450, column: 50, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7833, file: !3, line: 2449, column: 2)
!7837 = !DILocation(line: 2450, column: 61, scope: !7836)
!7838 = !DILocation(line: 2450, column: 40, scope: !7836)
!7839 = !DILocation(line: 2450, column: 3, scope: !7836)
!7840 = !DILocation(line: 2452, column: 2, scope: !7833)
!7841 = distinct !{!7841, !7828, !7842}
!7842 = !DILocation(line: 2452, column: 2, scope: !7829)
!7843 = !DILocation(line: 2452, column: 2, scope: !7785)
!7844 = !DILocation(line: 2455, column: 27, scope: !7698)
!7845 = !DILocation(line: 2455, column: 35, scope: !7698)
!7846 = !DILocation(line: 2455, column: 39, scope: !7698)
!7847 = !DILocation(line: 2455, column: 2, scope: !7698)
!7848 = !DILocation(line: 2460, column: 29, scope: !7698)
!7849 = !DILocation(line: 2460, column: 41, scope: !7698)
!7850 = !DILocation(line: 2460, column: 45, scope: !7698)
!7851 = !DILocation(line: 2460, column: 53, scope: !7698)
!7852 = !DILocation(line: 2460, column: 69, scope: !7698)
!7853 = !DILocation(line: 2460, column: 27, scope: !7698)
!7854 = !DILocation(line: 2460, column: 21, scope: !7698)
!7855 = !DILocation(line: 2462, column: 2, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2462, column: 2)
!7857 = !DILocation(line: 2462, column: 2, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 2462, column: 2)
!7859 = !DILocation(line: 2463, column: 38, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7861, file: !3, line: 2463, column: 7)
!7861 = distinct !DILexicalBlock(scope: !7858, file: !3, line: 2462, column: 58)
!7862 = !DILocation(line: 2463, column: 42, scope: !7860)
!7863 = !DILocation(line: 2463, column: 46, scope: !7860)
!7864 = !DILocation(line: 2463, column: 51, scope: !7860)
!7865 = !DILocation(line: 2463, column: 50, scope: !7860)
!7866 = !DILocation(line: 2463, column: 7, scope: !7860)
!7867 = !DILocation(line: 2463, column: 81, scope: !7860)
!7868 = !DILocation(line: 2463, column: 7, scope: !7861)
!7869 = !DILocation(line: 2464, column: 16, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7860, file: !3, line: 2463, column: 101)
!7871 = !DILocation(line: 2464, column: 15, scope: !7870)
!7872 = !DILocation(line: 2464, column: 4, scope: !7870)
!7873 = !DILocation(line: 2465, column: 3, scope: !7870)
!7874 = !DILocation(line: 2466, column: 3, scope: !7861)
!7875 = !DILocation(line: 2467, column: 6, scope: !7861)
!7876 = !DILocation(line: 2469, column: 2, scope: !7861)
!7877 = distinct !{!7877, !7855, !7878}
!7878 = !DILocation(line: 2469, column: 2, scope: !7856)
!7879 = !DILocation(line: 2470, column: 2, scope: !7698)
!7880 = !DILocation(line: 2470, column: 6, scope: !7698)
!7881 = !DILocation(line: 2470, column: 23, scope: !7698)
!7882 = !DILocation(line: 2472, column: 20, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2472, column: 6)
!7884 = !DILocation(line: 2472, column: 31, scope: !7883)
!7885 = !DILocation(line: 2472, column: 7, scope: !7883)
!7886 = !DILocation(line: 2472, column: 6, scope: !7698)
!7887 = !DILocation(line: 2473, column: 3, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 2472, column: 55)
!7889 = !DILocation(line: 2473, column: 13, scope: !7888)
!7890 = !DILocation(line: 2474, column: 3, scope: !7888)
!7891 = !DILocation(line: 2474, column: 13, scope: !7888)
!7892 = !DILocation(line: 2475, column: 3, scope: !7888)
!7893 = !DILocation(line: 2479, column: 41, scope: !7698)
!7894 = !DILocation(line: 2479, column: 36, scope: !7698)
!7895 = !DILocation(line: 2479, column: 23, scope: !7698)
!7896 = !DILocation(line: 2479, column: 21, scope: !7698)
!7897 = !DILocation(line: 2480, column: 2, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2480, column: 2)
!7899 = !DILocation(line: 2480, column: 2, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 2480, column: 2)
!7901 = !DILocalVariable(name: "is_cut", scope: !7902, file: !3, line: 2481, type: !2530)
!7902 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 2480, column: 49)
!7903 = !DILocation(line: 2481, column: 8, scope: !7902)
!7904 = !DILocation(line: 2482, column: 7, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 2482, column: 7)
!7906 = !DILocation(line: 2482, column: 7, scope: !7902)
!7907 = !DILocalVariable(name: "sco_a", scope: !7908, file: !3, line: 2483, type: !7396)
!7908 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2482, column: 46)
!7909 = !DILocation(line: 2483, column: 17, scope: !7908)
!7910 = !DILocation(line: 2483, column: 25, scope: !7908)
!7911 = !DILocation(line: 2483, column: 44, scope: !7908)
!7912 = !DILocalVariable(name: "sco_b", scope: !7908, file: !3, line: 2484, type: !7396)
!7913 = !DILocation(line: 2484, column: 17, scope: !7908)
!7914 = !DILocation(line: 2484, column: 25, scope: !7908)
!7915 = !DILocation(line: 2484, column: 44, scope: !7908)
!7916 = !DILocation(line: 2487, column: 9, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 2487, column: 8)
!7918 = !DILocation(line: 2487, column: 18, scope: !7917)
!7919 = !DILocation(line: 2487, column: 30, scope: !7917)
!7920 = !DILocation(line: 2487, column: 34, scope: !7917)
!7921 = !DILocation(line: 2487, column: 43, scope: !7917)
!7922 = !DILocation(line: 2487, column: 8, scope: !7908)
!7923 = !DILocation(line: 2488, column: 31, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 2487, column: 56)
!7925 = !DILocation(line: 2488, column: 38, scope: !7924)
!7926 = !DILocation(line: 2488, column: 45, scope: !7924)
!7927 = !DILocation(line: 2488, column: 57, scope: !7924)
!7928 = !DILocation(line: 2488, column: 62, scope: !7924)
!7929 = !DILocation(line: 2488, column: 13, scope: !7924)
!7930 = !DILocation(line: 2488, column: 11, scope: !7924)
!7931 = !DILocation(line: 2490, column: 9, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7924, file: !3, line: 2490, column: 9)
!7933 = !DILocation(line: 2490, column: 15, scope: !7932)
!7934 = !DILocation(line: 2490, column: 9, scope: !7924)
!7935 = !DILocation(line: 2491, column: 10, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 2491, column: 10)
!7937 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 2490, column: 24)
!7938 = !DILocation(line: 2491, column: 15, scope: !7936)
!7939 = !DILocation(line: 2491, column: 33, scope: !7936)
!7940 = !DILocation(line: 2491, column: 36, scope: !7936)
!7941 = !DILocation(line: 2491, column: 41, scope: !7936)
!7942 = !DILocation(line: 2491, column: 10, scope: !7937)
!7943 = !DILocation(line: 2492, column: 40, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 2491, column: 60)
!7945 = !DILocation(line: 2492, column: 60, scope: !7944)
!7946 = !DILocation(line: 2492, column: 64, scope: !7944)
!7947 = !DILocation(line: 2492, column: 7, scope: !7944)
!7948 = !DILocation(line: 2493, column: 6, scope: !7944)
!7949 = !DILocation(line: 2494, column: 5, scope: !7937)
!7950 = !DILocation(line: 2495, column: 4, scope: !7924)
!7951 = !DILocation(line: 2496, column: 3, scope: !7908)
!7952 = !DILocation(line: 2498, column: 3, scope: !7902)
!7953 = !DILocation(line: 2499, column: 2, scope: !7902)
!7954 = distinct !{!7954, !7897, !7955}
!7955 = !DILocation(line: 2499, column: 2, scope: !7898)
!7956 = !DILocation(line: 2503, column: 2, scope: !7698)
!7957 = !DILocation(line: 2503, column: 12, scope: !7698)
!7958 = !DILocation(line: 2504, column: 2, scope: !7698)
!7959 = !DILocation(line: 2504, column: 12, scope: !7698)
!7960 = !DILocation(line: 2507, column: 36, scope: !7698)
!7961 = !DILocation(line: 2507, column: 52, scope: !7698)
!7962 = !DILocation(line: 2507, column: 47, scope: !7698)
!7963 = !DILocation(line: 2507, column: 2, scope: !7698)
!7964 = !DILocation(line: 2509, column: 6, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2509, column: 6)
!7966 = !DILocation(line: 2509, column: 11, scope: !7965)
!7967 = !DILocation(line: 2509, column: 6, scope: !7698)
!7968 = !DILocation(line: 2509, column: 38, scope: !7965)
!7969 = !DILocation(line: 2509, column: 30, scope: !7965)
!7970 = !DILocation(line: 2510, column: 24, scope: !7698)
!7971 = !DILocation(line: 2510, column: 19, scope: !7698)
!7972 = !DILocation(line: 2510, column: 42, scope: !7698)
!7973 = !DILocation(line: 2510, column: 2, scope: !7698)
!7974 = !DILocation(line: 2512, column: 24, scope: !7698)
!7975 = !DILocation(line: 2512, column: 19, scope: !7698)
!7976 = !DILocation(line: 2512, column: 2, scope: !7698)
!7977 = !DILocation(line: 2513, column: 25, scope: !7698)
!7978 = !DILocation(line: 2513, column: 20, scope: !7698)
!7979 = !DILocation(line: 2513, column: 2, scope: !7698)
!7980 = !DILocation(line: 2514, column: 25, scope: !7698)
!7981 = !DILocation(line: 2514, column: 20, scope: !7698)
!7982 = !DILocation(line: 2514, column: 2, scope: !7698)
!7983 = !DILocation(line: 2516, column: 26, scope: !7698)
!7984 = !DILocation(line: 2516, column: 21, scope: !7698)
!7985 = !DILocation(line: 2516, column: 2, scope: !7698)
!7986 = !DILocation(line: 2518, column: 14, scope: !7698)
!7987 = !DILocation(line: 2518, column: 2, scope: !7698)
!7988 = !DILocation(line: 2519, column: 22, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 2519, column: 6)
!7990 = !DILocation(line: 2519, column: 33, scope: !7989)
!7991 = !DILocation(line: 2519, column: 7, scope: !7989)
!7992 = !DILocation(line: 2519, column: 6, scope: !7698)
!7993 = !DILocation(line: 2520, column: 3, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7989, file: !3, line: 2519, column: 44)
!7995 = !DILocation(line: 2523, column: 22, scope: !7698)
!7996 = !DILocation(line: 2523, column: 2, scope: !7698)
!7997 = !DILocation(line: 2525, column: 2, scope: !7698)
!7998 = !DILocation(line: 2526, column: 1, scope: !7698)
!7999 = distinct !DISubprogram(name: "MESH_OT_separate", scope: !3, file: !3, line: 2907, type: !3767, scopeLine: 2908, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8000 = !DILocalVariable(name: "ot", arg: 1, scope: !7999, file: !3, line: 2907, type: !3769)
!8001 = !DILocation(line: 2907, column: 39, scope: !7999)
!8002 = !DILocation(line: 2910, column: 2, scope: !7999)
!8003 = !DILocation(line: 2910, column: 6, scope: !7999)
!8004 = !DILocation(line: 2910, column: 11, scope: !7999)
!8005 = !DILocation(line: 2911, column: 2, scope: !7999)
!8006 = !DILocation(line: 2911, column: 6, scope: !7999)
!8007 = !DILocation(line: 2911, column: 18, scope: !7999)
!8008 = !DILocation(line: 2912, column: 2, scope: !7999)
!8009 = !DILocation(line: 2912, column: 6, scope: !7999)
!8010 = !DILocation(line: 2912, column: 13, scope: !7999)
!8011 = !DILocation(line: 2915, column: 2, scope: !7999)
!8012 = !DILocation(line: 2915, column: 6, scope: !7999)
!8013 = !DILocation(line: 2915, column: 13, scope: !7999)
!8014 = !DILocation(line: 2916, column: 2, scope: !7999)
!8015 = !DILocation(line: 2916, column: 6, scope: !7999)
!8016 = !DILocation(line: 2916, column: 11, scope: !7999)
!8017 = !DILocation(line: 2917, column: 2, scope: !7999)
!8018 = !DILocation(line: 2917, column: 6, scope: !7999)
!8019 = !DILocation(line: 2917, column: 11, scope: !7999)
!8020 = !DILocation(line: 2920, column: 2, scope: !7999)
!8021 = !DILocation(line: 2920, column: 6, scope: !7999)
!8022 = !DILocation(line: 2920, column: 11, scope: !7999)
!8023 = !DILocation(line: 2922, column: 26, scope: !7999)
!8024 = !DILocation(line: 2922, column: 30, scope: !7999)
!8025 = !DILocation(line: 2922, column: 13, scope: !7999)
!8026 = !DILocation(line: 2922, column: 2, scope: !7999)
!8027 = !DILocation(line: 2922, column: 6, scope: !7999)
!8028 = !DILocation(line: 2922, column: 11, scope: !7999)
!8029 = !DILocation(line: 2923, column: 1, scope: !7999)
!8030 = distinct !DISubprogram(name: "edbm_separate_exec", scope: !3, file: !3, line: 2816, type: !4116, scopeLine: 2817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8031 = !DILocalVariable(name: "C", arg: 1, scope: !8030, file: !3, line: 2816, type: !4118)
!8032 = !DILocation(line: 2816, column: 41, scope: !8030)
!8033 = !DILocalVariable(name: "op", arg: 2, scope: !8030, file: !3, line: 2816, type: !4120)
!8034 = !DILocation(line: 2816, column: 56, scope: !8030)
!8035 = !DILocalVariable(name: "bmain", scope: !8030, file: !3, line: 2818, type: !8036)
!8036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8037, size: 64)
!8037 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !8038, line: 104, baseType: !8039)
!8038 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !8038, line: 53, size: 15232, elements: !8040)
!8040 = !{!8041, !8043, !8044, !8045, !8046, !8047, !8048, !8049, !8050, !8052, !8053, !8054, !8055, !8056, !8057, !8058, !8059, !8060, !8061, !8062, !8063, !8064, !8065, !8066, !8067, !8068, !8069, !8070, !8071, !8072, !8073, !8074, !8075, !8076, !8077, !8078, !8079, !8080, !8081, !8082, !8083, !8084, !8085, !8086, !8087, !8088, !8089, !8095}
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8039, file: !8038, line: 54, baseType: !8042, size: 64)
!8042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8039, size: 64)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8039, file: !8038, line: 54, baseType: !8042, size: 64, offset: 64)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8039, file: !8038, line: 55, baseType: !1452, size: 8192, offset: 128)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !8039, file: !8038, line: 56, baseType: !1373, size: 16, offset: 8320)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !8039, file: !8038, line: 56, baseType: !1373, size: 16, offset: 8336)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !8039, file: !8038, line: 57, baseType: !1373, size: 16, offset: 8352)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !8039, file: !8038, line: 57, baseType: !1373, size: 16, offset: 8368)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !8039, file: !8038, line: 58, baseType: !1945, size: 64, offset: 8384)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !8039, file: !8038, line: 59, baseType: !8051, size: 128, offset: 8448)
!8051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1365, size: 128, elements: !3603)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !8039, file: !8038, line: 60, baseType: !1373, size: 16, offset: 8576)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !8039, file: !8038, line: 62, baseType: !1442, size: 64, offset: 8640)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !8039, file: !8038, line: 63, baseType: !1490, size: 128, offset: 8704)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !8039, file: !8038, line: 64, baseType: !1490, size: 128, offset: 8832)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !8039, file: !8038, line: 65, baseType: !1490, size: 128, offset: 8960)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !8039, file: !8038, line: 66, baseType: !1490, size: 128, offset: 9088)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !8039, file: !8038, line: 67, baseType: !1490, size: 128, offset: 9216)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !8039, file: !8038, line: 68, baseType: !1490, size: 128, offset: 9344)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !8039, file: !8038, line: 69, baseType: !1490, size: 128, offset: 9472)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !8039, file: !8038, line: 70, baseType: !1490, size: 128, offset: 9600)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !8039, file: !8038, line: 71, baseType: !1490, size: 128, offset: 9728)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !8039, file: !8038, line: 72, baseType: !1490, size: 128, offset: 9856)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !8039, file: !8038, line: 73, baseType: !1490, size: 128, offset: 9984)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !8039, file: !8038, line: 74, baseType: !1490, size: 128, offset: 10112)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !8039, file: !8038, line: 75, baseType: !1490, size: 128, offset: 10240)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8039, file: !8038, line: 76, baseType: !1490, size: 128, offset: 10368)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !8039, file: !8038, line: 77, baseType: !1490, size: 128, offset: 10496)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !8039, file: !8038, line: 78, baseType: !1490, size: 128, offset: 10624)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !8039, file: !8038, line: 79, baseType: !1490, size: 128, offset: 10752)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !8039, file: !8038, line: 80, baseType: !1490, size: 128, offset: 10880)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !8039, file: !8038, line: 81, baseType: !1490, size: 128, offset: 11008)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !8039, file: !8038, line: 82, baseType: !1490, size: 128, offset: 11136)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !8039, file: !8038, line: 83, baseType: !1490, size: 128, offset: 11264)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !8039, file: !8038, line: 84, baseType: !1490, size: 128, offset: 11392)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !8039, file: !8038, line: 85, baseType: !1490, size: 128, offset: 11520)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !8039, file: !8038, line: 86, baseType: !1490, size: 128, offset: 11648)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !8039, file: !8038, line: 87, baseType: !1490, size: 128, offset: 11776)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !8039, file: !8038, line: 88, baseType: !1490, size: 128, offset: 11904)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !8039, file: !8038, line: 89, baseType: !1490, size: 128, offset: 12032)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !8039, file: !8038, line: 90, baseType: !1490, size: 128, offset: 12160)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !8039, file: !8038, line: 91, baseType: !1490, size: 128, offset: 12288)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !8039, file: !8038, line: 92, baseType: !1490, size: 128, offset: 12416)
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !8039, file: !8038, line: 93, baseType: !1490, size: 128, offset: 12544)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !8039, file: !8038, line: 94, baseType: !1490, size: 128, offset: 12672)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !8039, file: !8038, line: 95, baseType: !1490, size: 128, offset: 12800)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !8039, file: !8038, line: 96, baseType: !1490, size: 128, offset: 12928)
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !8039, file: !8038, line: 98, baseType: !2136, size: 2048, offset: 13056)
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !8039, file: !8038, line: 101, baseType: !8090, size: 64, offset: 15104)
!8090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8091, size: 64)
!8091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !8092, line: 58, size: 32, elements: !8093)
!8092 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8093 = !{!8094}
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !8091, file: !8092, line: 59, baseType: !135, size: 32)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8039, file: !8038, line: 103, baseType: !8096, size: 64, offset: 15168)
!8096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8097, size: 64)
!8097 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !8038, line: 51, flags: DIFlagFwdDecl)
!8098 = !DILocation(line: 2818, column: 8, scope: !8030)
!8099 = !DILocation(line: 2818, column: 30, scope: !8030)
!8100 = !DILocation(line: 2818, column: 16, scope: !8030)
!8101 = !DILocalVariable(name: "scene", scope: !8030, file: !3, line: 2819, type: !5145)
!8102 = !DILocation(line: 2819, column: 9, scope: !8030)
!8103 = !DILocation(line: 2819, column: 32, scope: !8030)
!8104 = !DILocation(line: 2819, column: 17, scope: !8030)
!8105 = !DILocalVariable(name: "type", scope: !8030, file: !3, line: 2820, type: !4052)
!8106 = !DILocation(line: 2820, column: 12, scope: !8030)
!8107 = !DILocation(line: 2820, column: 32, scope: !8030)
!8108 = !DILocation(line: 2820, column: 36, scope: !8030)
!8109 = !DILocation(line: 2820, column: 19, scope: !8030)
!8110 = !DILocalVariable(name: "retval", scope: !8030, file: !3, line: 2821, type: !135)
!8111 = !DILocation(line: 2821, column: 6, scope: !8030)
!8112 = !DILocation(line: 2823, column: 27, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 2823, column: 6)
!8114 = !DILocation(line: 2823, column: 6, scope: !8113)
!8115 = !DILocation(line: 2823, column: 6, scope: !8030)
!8116 = !DILocalVariable(name: "base", scope: !8117, file: !3, line: 2824, type: !8118)
!8117 = distinct !DILexicalBlock(scope: !8113, file: !3, line: 2823, column: 31)
!8118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8119, size: 64)
!8119 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !1976, line: 75, baseType: !1988)
!8120 = !DILocation(line: 2824, column: 9, scope: !8117)
!8121 = !DILocation(line: 2824, column: 37, scope: !8117)
!8122 = !DILocation(line: 2824, column: 16, scope: !8117)
!8123 = !DILocalVariable(name: "em", scope: !8117, file: !3, line: 2825, type: !4133)
!8124 = !DILocation(line: 2825, column: 15, scope: !8117)
!8125 = !DILocation(line: 2825, column: 45, scope: !8117)
!8126 = !DILocation(line: 2825, column: 51, scope: !8117)
!8127 = !DILocation(line: 2825, column: 20, scope: !8117)
!8128 = !DILocation(line: 2827, column: 7, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8117, file: !3, line: 2827, column: 7)
!8130 = !DILocation(line: 2827, column: 12, scope: !8129)
!8131 = !DILocation(line: 2827, column: 7, scope: !8117)
!8132 = !DILocation(line: 2828, column: 9, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 2828, column: 8)
!8134 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 2827, column: 18)
!8135 = !DILocation(line: 2828, column: 13, scope: !8133)
!8136 = !DILocation(line: 2828, column: 17, scope: !8133)
!8137 = !DILocation(line: 2828, column: 28, scope: !8133)
!8138 = !DILocation(line: 2828, column: 34, scope: !8133)
!8139 = !DILocation(line: 2829, column: 9, scope: !8133)
!8140 = !DILocation(line: 2829, column: 13, scope: !8133)
!8141 = !DILocation(line: 2829, column: 17, scope: !8133)
!8142 = !DILocation(line: 2829, column: 28, scope: !8133)
!8143 = !DILocation(line: 2829, column: 34, scope: !8133)
!8144 = !DILocation(line: 2830, column: 9, scope: !8133)
!8145 = !DILocation(line: 2830, column: 13, scope: !8133)
!8146 = !DILocation(line: 2830, column: 17, scope: !8133)
!8147 = !DILocation(line: 2830, column: 28, scope: !8133)
!8148 = !DILocation(line: 2828, column: 8, scope: !8134)
!8149 = !DILocation(line: 2832, column: 16, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 2831, column: 4)
!8151 = !DILocation(line: 2832, column: 20, scope: !8150)
!8152 = !DILocation(line: 2832, column: 5, scope: !8150)
!8153 = !DILocation(line: 2833, column: 5, scope: !8150)
!8154 = !DILocation(line: 2835, column: 3, scope: !8134)
!8155 = !DILocation(line: 2838, column: 12, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8117, file: !3, line: 2838, column: 12)
!8157 = !DILocation(line: 2838, column: 17, scope: !8156)
!8158 = !DILocation(line: 2838, column: 12, scope: !8117)
!8159 = !DILocation(line: 2838, column: 55, scope: !8156)
!8160 = !DILocation(line: 2838, column: 62, scope: !8156)
!8161 = !DILocation(line: 2838, column: 69, scope: !8156)
!8162 = !DILocation(line: 2838, column: 75, scope: !8156)
!8163 = !DILocation(line: 2838, column: 79, scope: !8156)
!8164 = !DILocation(line: 2838, column: 32, scope: !8156)
!8165 = !DILocation(line: 2838, column: 30, scope: !8156)
!8166 = !DILocation(line: 2838, column: 23, scope: !8156)
!8167 = !DILocation(line: 2839, column: 12, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 2839, column: 12)
!8169 = !DILocation(line: 2839, column: 17, scope: !8168)
!8170 = !DILocation(line: 2839, column: 12, scope: !8156)
!8171 = !DILocation(line: 2839, column: 55, scope: !8168)
!8172 = !DILocation(line: 2839, column: 62, scope: !8168)
!8173 = !DILocation(line: 2839, column: 69, scope: !8168)
!8174 = !DILocation(line: 2839, column: 75, scope: !8168)
!8175 = !DILocation(line: 2839, column: 79, scope: !8168)
!8176 = !DILocation(line: 2839, column: 32, scope: !8168)
!8177 = !DILocation(line: 2839, column: 30, scope: !8168)
!8178 = !DILocation(line: 2839, column: 23, scope: !8168)
!8179 = !DILocation(line: 2840, column: 12, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 2840, column: 12)
!8181 = !DILocation(line: 2840, column: 17, scope: !8180)
!8182 = !DILocation(line: 2840, column: 12, scope: !8168)
!8183 = !DILocation(line: 2840, column: 52, scope: !8180)
!8184 = !DILocation(line: 2840, column: 59, scope: !8180)
!8185 = !DILocation(line: 2840, column: 66, scope: !8180)
!8186 = !DILocation(line: 2840, column: 72, scope: !8180)
!8187 = !DILocation(line: 2840, column: 76, scope: !8180)
!8188 = !DILocation(line: 2840, column: 32, scope: !8180)
!8189 = !DILocation(line: 2840, column: 30, scope: !8180)
!8190 = !DILocation(line: 2840, column: 23, scope: !8180)
!8191 = !DILocation(line: 2843, column: 7, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8117, file: !3, line: 2843, column: 7)
!8193 = !DILocation(line: 2843, column: 7, scope: !8117)
!8194 = !DILocation(line: 2844, column: 24, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 2843, column: 15)
!8196 = !DILocation(line: 2844, column: 4, scope: !8195)
!8197 = !DILocation(line: 2845, column: 3, scope: !8195)
!8198 = !DILocation(line: 2846, column: 2, scope: !8117)
!8199 = !DILocation(line: 2848, column: 7, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 2848, column: 7)
!8201 = distinct !DILexicalBlock(scope: !8113, file: !3, line: 2847, column: 7)
!8202 = !DILocation(line: 2848, column: 12, scope: !8200)
!8203 = !DILocation(line: 2848, column: 7, scope: !8201)
!8204 = !DILocation(line: 2849, column: 15, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 2848, column: 18)
!8206 = !DILocation(line: 2849, column: 19, scope: !8205)
!8207 = !DILocation(line: 2849, column: 4, scope: !8205)
!8208 = !DILocation(line: 2850, column: 4, scope: !8205)
!8209 = !DILocalVariable(name: "ctx_data_list", scope: !8210, file: !3, line: 2854, type: !1490)
!8210 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 2854, column: 3)
!8211 = !DILocation(line: 2854, column: 3, scope: !8210)
!8212 = !DILocalVariable(name: "ctx_link", scope: !8210, file: !3, line: 2854, type: !8213)
!8213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8214, size: 64)
!8214 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPointerLink", file: !6, line: 284, baseType: !8215)
!8215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPointerLink", file: !6, line: 281, size: 320, elements: !8216)
!8216 = !{!8217, !8219, !8220}
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8215, file: !6, line: 282, baseType: !8218, size: 64)
!8218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8215, size: 64)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8215, file: !6, line: 282, baseType: !8218, size: 64, offset: 64)
!8220 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !8215, file: !6, line: 283, baseType: !6935, size: 192, offset: 128)
!8221 = !DILocation(line: 2854, column: 3, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 2854, column: 3)
!8223 = !DILocation(line: 2854, column: 3, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 2854, column: 3)
!8225 = !DILocalVariable(name: "base_iter", scope: !8226, file: !3, line: 2854, type: !8118)
!8226 = distinct !DILexicalBlock(scope: !8224, file: !3, line: 2854, column: 3)
!8227 = !DILocation(line: 2854, column: 3, scope: !8226)
!8228 = !DILocalVariable(name: "ob", scope: !8229, file: !3, line: 2856, type: !4127)
!8229 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 2855, column: 3)
!8230 = !DILocation(line: 2856, column: 12, scope: !8229)
!8231 = !DILocation(line: 2856, column: 17, scope: !8229)
!8232 = !DILocation(line: 2856, column: 28, scope: !8229)
!8233 = !DILocation(line: 2857, column: 8, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8229, file: !3, line: 2857, column: 8)
!8235 = !DILocation(line: 2857, column: 12, scope: !8234)
!8236 = !DILocation(line: 2857, column: 17, scope: !8234)
!8237 = !DILocation(line: 2857, column: 8, scope: !8229)
!8238 = !DILocalVariable(name: "me", scope: !8239, file: !3, line: 2858, type: !1427)
!8239 = distinct !DILexicalBlock(scope: !8234, file: !3, line: 2857, column: 29)
!8240 = !DILocation(line: 2858, column: 11, scope: !8239)
!8241 = !DILocation(line: 2858, column: 16, scope: !8239)
!8242 = !DILocation(line: 2858, column: 20, scope: !8239)
!8243 = !DILocation(line: 2859, column: 9, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 2859, column: 9)
!8245 = !DILocation(line: 2859, column: 13, scope: !8244)
!8246 = !DILocation(line: 2859, column: 16, scope: !8244)
!8247 = !DILocation(line: 2859, column: 20, scope: !8244)
!8248 = !DILocation(line: 2859, column: 9, scope: !8239)
!8249 = !DILocalVariable(name: "bm_old", scope: !8250, file: !3, line: 2860, type: !3610)
!8250 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 2859, column: 29)
!8251 = !DILocation(line: 2860, column: 13, scope: !8250)
!8252 = !DILocalVariable(name: "retval_iter", scope: !8250, file: !3, line: 2861, type: !135)
!8253 = !DILocation(line: 2861, column: 10, scope: !8250)
!8254 = !DILocation(line: 2863, column: 15, scope: !8250)
!8255 = !DILocation(line: 2863, column: 13, scope: !8250)
!8256 = !DILocation(line: 2865, column: 25, scope: !8250)
!8257 = !DILocation(line: 2865, column: 33, scope: !8250)
!8258 = !DILocation(line: 2865, column: 6, scope: !8250)
!8259 = !DILocation(line: 2867, column: 15, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 2867, column: 15)
!8261 = !DILocation(line: 2867, column: 20, scope: !8260)
!8262 = !DILocation(line: 2867, column: 15, scope: !8250)
!8263 = !DILocation(line: 2867, column: 63, scope: !8260)
!8264 = !DILocation(line: 2867, column: 70, scope: !8260)
!8265 = !DILocation(line: 2867, column: 77, scope: !8260)
!8266 = !DILocation(line: 2867, column: 88, scope: !8260)
!8267 = !DILocation(line: 2867, column: 40, scope: !8260)
!8268 = !DILocation(line: 2867, column: 38, scope: !8260)
!8269 = !DILocation(line: 2867, column: 26, scope: !8260)
!8270 = !DILocation(line: 2868, column: 15, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2868, column: 15)
!8272 = !DILocation(line: 2868, column: 20, scope: !8271)
!8273 = !DILocation(line: 2868, column: 15, scope: !8260)
!8274 = !DILocation(line: 2868, column: 60, scope: !8271)
!8275 = !DILocation(line: 2868, column: 67, scope: !8271)
!8276 = !DILocation(line: 2868, column: 74, scope: !8271)
!8277 = !DILocation(line: 2868, column: 85, scope: !8271)
!8278 = !DILocation(line: 2868, column: 40, scope: !8271)
!8279 = !DILocation(line: 2868, column: 38, scope: !8271)
!8280 = !DILocation(line: 2868, column: 26, scope: !8271)
!8281 = !DILocation(line: 2871, column: 10, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 2871, column: 10)
!8283 = !DILocation(line: 2871, column: 10, scope: !8250)
!8284 = !DILocation(line: 2872, column: 24, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 2871, column: 23)
!8286 = !DILocation(line: 2872, column: 32, scope: !8285)
!8287 = !DILocation(line: 2872, column: 7, scope: !8285)
!8288 = !DILocation(line: 2874, column: 26, scope: !8285)
!8289 = !DILocation(line: 2874, column: 30, scope: !8285)
!8290 = !DILocation(line: 2874, column: 7, scope: !8285)
!8291 = !DILocation(line: 2875, column: 29, scope: !8285)
!8292 = !DILocation(line: 2875, column: 51, scope: !8285)
!8293 = !DILocation(line: 2875, column: 7, scope: !8285)
!8294 = !DILocation(line: 2876, column: 6, scope: !8285)
!8295 = !DILocation(line: 2878, column: 19, scope: !8250)
!8296 = !DILocation(line: 2878, column: 6, scope: !8250)
!8297 = !DILocation(line: 2880, column: 16, scope: !8250)
!8298 = !DILocation(line: 2880, column: 13, scope: !8250)
!8299 = !DILocation(line: 2881, column: 5, scope: !8250)
!8300 = !DILocation(line: 2882, column: 4, scope: !8239)
!8301 = !DILocation(line: 2884, column: 3, scope: !8226)
!8302 = distinct !{!8302, !8221, !8303}
!8303 = !DILocation(line: 2884, column: 3, scope: !8222)
!8304 = !DILocation(line: 2884, column: 3, scope: !8210)
!8305 = !DILocation(line: 2887, column: 6, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 2887, column: 6)
!8307 = !DILocation(line: 2887, column: 6, scope: !8030)
!8308 = !DILocation(line: 2889, column: 28, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 2887, column: 14)
!8310 = !DILocation(line: 2889, column: 3, scope: !8309)
!8311 = !DILocation(line: 2890, column: 25, scope: !8309)
!8312 = !DILocation(line: 2890, column: 3, scope: !8309)
!8313 = !DILocation(line: 2892, column: 3, scope: !8309)
!8314 = !DILocation(line: 2895, column: 2, scope: !8030)
!8315 = !DILocation(line: 2896, column: 1, scope: !8030)
!8316 = distinct !DISubprogram(name: "MESH_OT_fill", scope: !3, file: !3, line: 2955, type: !3767, scopeLine: 2956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8317 = !DILocalVariable(name: "ot", arg: 1, scope: !8316, file: !3, line: 2955, type: !3769)
!8318 = !DILocation(line: 2955, column: 35, scope: !8316)
!8319 = !DILocation(line: 2958, column: 2, scope: !8316)
!8320 = !DILocation(line: 2958, column: 6, scope: !8316)
!8321 = !DILocation(line: 2958, column: 11, scope: !8316)
!8322 = !DILocation(line: 2959, column: 2, scope: !8316)
!8323 = !DILocation(line: 2959, column: 6, scope: !8316)
!8324 = !DILocation(line: 2959, column: 13, scope: !8316)
!8325 = !DILocation(line: 2960, column: 2, scope: !8316)
!8326 = !DILocation(line: 2960, column: 6, scope: !8316)
!8327 = !DILocation(line: 2960, column: 18, scope: !8316)
!8328 = !DILocation(line: 2963, column: 2, scope: !8316)
!8329 = !DILocation(line: 2963, column: 6, scope: !8316)
!8330 = !DILocation(line: 2963, column: 11, scope: !8316)
!8331 = !DILocation(line: 2964, column: 2, scope: !8316)
!8332 = !DILocation(line: 2964, column: 6, scope: !8316)
!8333 = !DILocation(line: 2964, column: 11, scope: !8316)
!8334 = !DILocation(line: 2967, column: 2, scope: !8316)
!8335 = !DILocation(line: 2967, column: 6, scope: !8316)
!8336 = !DILocation(line: 2967, column: 11, scope: !8316)
!8337 = !DILocation(line: 2969, column: 18, scope: !8316)
!8338 = !DILocation(line: 2969, column: 22, scope: !8316)
!8339 = !DILocation(line: 2969, column: 2, scope: !8316)
!8340 = !DILocation(line: 2970, column: 1, scope: !8316)
!8341 = distinct !DISubprogram(name: "edbm_fill_exec", scope: !3, file: !3, line: 2926, type: !4116, scopeLine: 2927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8342 = !DILocalVariable(name: "C", arg: 1, scope: !8341, file: !3, line: 2926, type: !4118)
!8343 = !DILocation(line: 2926, column: 37, scope: !8341)
!8344 = !DILocalVariable(name: "op", arg: 2, scope: !8341, file: !3, line: 2926, type: !4120)
!8345 = !DILocation(line: 2926, column: 52, scope: !8341)
!8346 = !DILocalVariable(name: "obedit", scope: !8341, file: !3, line: 2928, type: !4127)
!8347 = !DILocation(line: 2928, column: 10, scope: !8341)
!8348 = !DILocation(line: 2928, column: 40, scope: !8341)
!8349 = !DILocation(line: 2928, column: 19, scope: !8341)
!8350 = !DILocalVariable(name: "em", scope: !8341, file: !3, line: 2929, type: !4133)
!8351 = !DILocation(line: 2929, column: 14, scope: !8341)
!8352 = !DILocation(line: 2929, column: 44, scope: !8341)
!8353 = !DILocation(line: 2929, column: 19, scope: !8341)
!8354 = !DILocalVariable(name: "use_beauty", scope: !8341, file: !3, line: 2930, type: !4811)
!8355 = !DILocation(line: 2930, column: 13, scope: !8341)
!8356 = !DILocation(line: 2930, column: 42, scope: !8341)
!8357 = !DILocation(line: 2930, column: 46, scope: !8341)
!8358 = !DILocation(line: 2930, column: 26, scope: !8341)
!8359 = !DILocalVariable(name: "bmop", scope: !8341, file: !3, line: 2931, type: !4335)
!8360 = !DILocation(line: 2931, column: 13, scope: !8341)
!8361 = !DILocation(line: 2933, column: 20, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 2933, column: 6)
!8363 = !DILocation(line: 2933, column: 31, scope: !8362)
!8364 = !DILocation(line: 2935, column: 36, scope: !8362)
!8365 = !DILocation(line: 2933, column: 7, scope: !8362)
!8366 = !DILocation(line: 2933, column: 6, scope: !8341)
!8367 = !DILocation(line: 2937, column: 3, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 2936, column: 2)
!8369 = !DILocation(line: 2940, column: 14, scope: !8341)
!8370 = !DILocation(line: 2940, column: 18, scope: !8341)
!8371 = !DILocation(line: 2940, column: 2, scope: !8341)
!8372 = !DILocation(line: 2943, column: 31, scope: !8341)
!8373 = !DILocation(line: 2943, column: 35, scope: !8341)
!8374 = !DILocation(line: 2943, column: 44, scope: !8341)
!8375 = !DILocation(line: 2943, column: 39, scope: !8341)
!8376 = !DILocation(line: 2943, column: 2, scope: !8341)
!8377 = !DILocation(line: 2945, column: 22, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 2945, column: 6)
!8379 = !DILocation(line: 2945, column: 33, scope: !8378)
!8380 = !DILocation(line: 2945, column: 7, scope: !8378)
!8381 = !DILocation(line: 2945, column: 6, scope: !8341)
!8382 = !DILocation(line: 2946, column: 3, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 2945, column: 44)
!8384 = !DILocation(line: 2949, column: 22, scope: !8341)
!8385 = !DILocation(line: 2949, column: 2, scope: !8341)
!8386 = !DILocation(line: 2951, column: 2, scope: !8341)
!8387 = !DILocation(line: 2953, column: 1, scope: !8341)
!8388 = distinct !DISubprogram(name: "MESH_OT_fill_grid", scope: !3, file: !3, line: 3184, type: !3767, scopeLine: 3185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8389 = !DILocalVariable(name: "ot", arg: 1, scope: !8388, file: !3, line: 3184, type: !3769)
!8390 = !DILocation(line: 3184, column: 40, scope: !8388)
!8391 = !DILocalVariable(name: "prop", scope: !8388, file: !3, line: 3186, type: !3977)
!8392 = !DILocation(line: 3186, column: 15, scope: !8388)
!8393 = !DILocation(line: 3189, column: 2, scope: !8388)
!8394 = !DILocation(line: 3189, column: 6, scope: !8388)
!8395 = !DILocation(line: 3189, column: 11, scope: !8388)
!8396 = !DILocation(line: 3190, column: 2, scope: !8388)
!8397 = !DILocation(line: 3190, column: 6, scope: !8388)
!8398 = !DILocation(line: 3190, column: 18, scope: !8388)
!8399 = !DILocation(line: 3191, column: 2, scope: !8388)
!8400 = !DILocation(line: 3191, column: 6, scope: !8388)
!8401 = !DILocation(line: 3191, column: 13, scope: !8388)
!8402 = !DILocation(line: 3194, column: 2, scope: !8388)
!8403 = !DILocation(line: 3194, column: 6, scope: !8388)
!8404 = !DILocation(line: 3194, column: 11, scope: !8388)
!8405 = !DILocation(line: 3195, column: 2, scope: !8388)
!8406 = !DILocation(line: 3195, column: 6, scope: !8388)
!8407 = !DILocation(line: 3195, column: 11, scope: !8388)
!8408 = !DILocation(line: 3198, column: 2, scope: !8388)
!8409 = !DILocation(line: 3198, column: 6, scope: !8388)
!8410 = !DILocation(line: 3198, column: 11, scope: !8388)
!8411 = !DILocation(line: 3201, column: 21, scope: !8388)
!8412 = !DILocation(line: 3201, column: 25, scope: !8388)
!8413 = !DILocation(line: 3201, column: 9, scope: !8388)
!8414 = !DILocation(line: 3201, column: 7, scope: !8388)
!8415 = !DILocation(line: 3202, column: 24, scope: !8388)
!8416 = !DILocation(line: 3202, column: 2, scope: !8388)
!8417 = !DILocation(line: 3203, column: 21, scope: !8388)
!8418 = !DILocation(line: 3203, column: 25, scope: !8388)
!8419 = !DILocation(line: 3203, column: 9, scope: !8388)
!8420 = !DILocation(line: 3203, column: 7, scope: !8388)
!8421 = !DILocation(line: 3204, column: 24, scope: !8388)
!8422 = !DILocation(line: 3204, column: 2, scope: !8388)
!8423 = !DILocation(line: 3205, column: 18, scope: !8388)
!8424 = !DILocation(line: 3205, column: 22, scope: !8388)
!8425 = !DILocation(line: 3205, column: 2, scope: !8388)
!8426 = !DILocation(line: 3206, column: 1, scope: !8388)
!8427 = distinct !DISubprogram(name: "edbm_fill_grid_exec", scope: !3, file: !3, line: 3112, type: !4116, scopeLine: 3113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8428 = !DILocalVariable(name: "C", arg: 1, scope: !8427, file: !3, line: 3112, type: !4118)
!8429 = !DILocation(line: 3112, column: 42, scope: !8427)
!8430 = !DILocalVariable(name: "op", arg: 2, scope: !8427, file: !3, line: 3112, type: !4120)
!8431 = !DILocation(line: 3112, column: 57, scope: !8427)
!8432 = !DILocalVariable(name: "bmop", scope: !8427, file: !3, line: 3114, type: !4335)
!8433 = !DILocation(line: 3114, column: 13, scope: !8427)
!8434 = !DILocalVariable(name: "obedit", scope: !8427, file: !3, line: 3115, type: !4127)
!8435 = !DILocation(line: 3115, column: 10, scope: !8427)
!8436 = !DILocation(line: 3115, column: 40, scope: !8427)
!8437 = !DILocation(line: 3115, column: 19, scope: !8427)
!8438 = !DILocalVariable(name: "em", scope: !8427, file: !3, line: 3116, type: !4133)
!8439 = !DILocation(line: 3116, column: 14, scope: !8427)
!8440 = !DILocation(line: 3116, column: 44, scope: !8427)
!8441 = !DILocation(line: 3116, column: 19, scope: !8427)
!8442 = !DILocalVariable(name: "use_smooth", scope: !8427, file: !3, line: 3117, type: !5013)
!8443 = !DILocation(line: 3117, column: 14, scope: !8427)
!8444 = !DILocation(line: 3117, column: 58, scope: !8427)
!8445 = !DILocation(line: 3117, column: 62, scope: !8427)
!8446 = !DILocation(line: 3117, column: 27, scope: !8427)
!8447 = !DILocalVariable(name: "totedge_orig", scope: !8427, file: !3, line: 3118, type: !4052)
!8448 = !DILocation(line: 3118, column: 12, scope: !8427)
!8449 = !DILocation(line: 3118, column: 27, scope: !8427)
!8450 = !DILocation(line: 3118, column: 31, scope: !8427)
!8451 = !DILocation(line: 3118, column: 35, scope: !8427)
!8452 = !DILocalVariable(name: "totface_orig", scope: !8427, file: !3, line: 3119, type: !4052)
!8453 = !DILocation(line: 3119, column: 12, scope: !8427)
!8454 = !DILocation(line: 3119, column: 27, scope: !8427)
!8455 = !DILocation(line: 3119, column: 31, scope: !8427)
!8456 = !DILocation(line: 3119, column: 35, scope: !8427)
!8457 = !DILocalVariable(name: "use_interp_simple", scope: !8427, file: !3, line: 3120, type: !4811)
!8458 = !DILocation(line: 3120, column: 13, scope: !8427)
!8459 = !DILocation(line: 3120, column: 49, scope: !8427)
!8460 = !DILocation(line: 3120, column: 53, scope: !8427)
!8461 = !DILocation(line: 3120, column: 33, scope: !8427)
!8462 = !DILocalVariable(name: "use_prepare", scope: !8427, file: !3, line: 3121, type: !4811)
!8463 = !DILocation(line: 3121, column: 13, scope: !8427)
!8464 = !DILocalVariable(name: "prop_span", scope: !8465, file: !3, line: 3126, type: !3977)
!8465 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 3124, column: 19)
!8466 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 3124, column: 6)
!8467 = !DILocation(line: 3126, column: 16, scope: !8465)
!8468 = !DILocation(line: 3126, column: 53, scope: !8465)
!8469 = !DILocation(line: 3126, column: 57, scope: !8465)
!8470 = !DILocation(line: 3126, column: 28, scope: !8465)
!8471 = !DILocalVariable(name: "prop_offset", scope: !8465, file: !3, line: 3127, type: !3977)
!8472 = !DILocation(line: 3127, column: 16, scope: !8465)
!8473 = !DILocation(line: 3127, column: 55, scope: !8465)
!8474 = !DILocation(line: 3127, column: 59, scope: !8465)
!8475 = !DILocation(line: 3127, column: 30, scope: !8465)
!8476 = !DILocalVariable(name: "calc_span", scope: !8465, file: !3, line: 3128, type: !2530)
!8477 = !DILocation(line: 3128, column: 8, scope: !8465)
!8478 = !DILocalVariable(name: "clamp", scope: !8465, file: !3, line: 3130, type: !4052)
!8479 = !DILocation(line: 3130, column: 13, scope: !8465)
!8480 = !DILocation(line: 3130, column: 21, scope: !8465)
!8481 = !DILocation(line: 3130, column: 25, scope: !8465)
!8482 = !DILocation(line: 3130, column: 29, scope: !8465)
!8483 = !DILocalVariable(name: "span", scope: !8465, file: !3, line: 3131, type: !135)
!8484 = !DILocation(line: 3131, column: 7, scope: !8465)
!8485 = !DILocalVariable(name: "offset", scope: !8465, file: !3, line: 3132, type: !135)
!8486 = !DILocation(line: 3132, column: 7, scope: !8465)
!8487 = !DILocation(line: 3134, column: 27, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 3134, column: 7)
!8489 = !DILocation(line: 3134, column: 31, scope: !8488)
!8490 = !DILocation(line: 3134, column: 36, scope: !8488)
!8491 = !DILocation(line: 3134, column: 7, scope: !8488)
!8492 = !DILocation(line: 3134, column: 7, scope: !8465)
!8493 = !DILocation(line: 3135, column: 32, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 3134, column: 48)
!8495 = !DILocation(line: 3135, column: 36, scope: !8494)
!8496 = !DILocation(line: 3135, column: 41, scope: !8494)
!8497 = !DILocation(line: 3135, column: 11, scope: !8494)
!8498 = !DILocation(line: 3135, column: 9, scope: !8494)
!8499 = !DILocation(line: 3136, column: 18, scope: !8494)
!8500 = !DILocation(line: 3136, column: 25, scope: !8494)
!8501 = !DILocation(line: 3136, column: 31, scope: !8494)
!8502 = !DILocation(line: 3136, column: 36, scope: !8494)
!8503 = !DILocation(line: 3136, column: 11, scope: !8494)
!8504 = !DILocation(line: 3136, column: 9, scope: !8494)
!8505 = !DILocation(line: 3137, column: 14, scope: !8494)
!8506 = !DILocation(line: 3138, column: 3, scope: !8494)
!8507 = !DILocation(line: 3140, column: 11, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 3139, column: 8)
!8509 = !DILocation(line: 3140, column: 17, scope: !8508)
!8510 = !DILocation(line: 3140, column: 9, scope: !8508)
!8511 = !DILocation(line: 3141, column: 14, scope: !8508)
!8512 = !DILocation(line: 3144, column: 33, scope: !8465)
!8513 = !DILocation(line: 3144, column: 37, scope: !8465)
!8514 = !DILocation(line: 3144, column: 42, scope: !8465)
!8515 = !DILocation(line: 3144, column: 12, scope: !8465)
!8516 = !DILocation(line: 3144, column: 10, scope: !8465)
!8517 = !DILocation(line: 3145, column: 12, scope: !8465)
!8518 = !DILocation(line: 3145, column: 26, scope: !8465)
!8519 = !DILocation(line: 3145, column: 34, scope: !8465)
!8520 = !DILocation(line: 3145, column: 20, scope: !8465)
!8521 = !DILocation(line: 3145, column: 10, scope: !8465)
!8522 = !DILocation(line: 3148, column: 26, scope: !8465)
!8523 = !DILocation(line: 3148, column: 30, scope: !8465)
!8524 = !DILocation(line: 3148, column: 34, scope: !8465)
!8525 = !DILocation(line: 3148, column: 49, scope: !8465)
!8526 = !DILocation(line: 3148, column: 3, scope: !8465)
!8527 = !DILocation(line: 3150, column: 24, scope: !8465)
!8528 = !DILocation(line: 3150, column: 28, scope: !8465)
!8529 = !DILocation(line: 3150, column: 33, scope: !8465)
!8530 = !DILocation(line: 3150, column: 44, scope: !8465)
!8531 = !DILocation(line: 3150, column: 3, scope: !8465)
!8532 = !DILocation(line: 3155, column: 20, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 3155, column: 6)
!8534 = !DILocation(line: 3155, column: 31, scope: !8533)
!8535 = !DILocation(line: 3158, column: 20, scope: !8533)
!8536 = !DILocation(line: 3158, column: 24, scope: !8533)
!8537 = !DILocation(line: 3158, column: 32, scope: !8533)
!8538 = !DILocation(line: 3158, column: 44, scope: !8533)
!8539 = !DILocation(line: 3155, column: 7, scope: !8533)
!8540 = !DILocation(line: 3155, column: 6, scope: !8427)
!8541 = !DILocation(line: 3160, column: 3, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8533, file: !3, line: 3159, column: 2)
!8543 = !DILocation(line: 3163, column: 14, scope: !8427)
!8544 = !DILocation(line: 3163, column: 18, scope: !8427)
!8545 = !DILocation(line: 3163, column: 2, scope: !8427)
!8546 = !DILocation(line: 3166, column: 7, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 3166, column: 6)
!8548 = !DILocation(line: 3166, column: 23, scope: !8547)
!8549 = !DILocation(line: 3166, column: 27, scope: !8547)
!8550 = !DILocation(line: 3166, column: 31, scope: !8547)
!8551 = !DILocation(line: 3166, column: 20, scope: !8547)
!8552 = !DILocation(line: 3166, column: 40, scope: !8547)
!8553 = !DILocation(line: 3167, column: 7, scope: !8547)
!8554 = !DILocation(line: 3167, column: 23, scope: !8547)
!8555 = !DILocation(line: 3167, column: 27, scope: !8547)
!8556 = !DILocation(line: 3167, column: 31, scope: !8547)
!8557 = !DILocation(line: 3167, column: 20, scope: !8547)
!8558 = !DILocation(line: 3166, column: 6, scope: !8427)
!8559 = !DILocation(line: 3169, column: 18, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 3168, column: 2)
!8561 = !DILocation(line: 3169, column: 29, scope: !8560)
!8562 = !DILocation(line: 3169, column: 3, scope: !8560)
!8563 = !DILocation(line: 3170, column: 3, scope: !8560)
!8564 = !DILocation(line: 3173, column: 31, scope: !8427)
!8565 = !DILocation(line: 3173, column: 35, scope: !8427)
!8566 = !DILocation(line: 3173, column: 44, scope: !8427)
!8567 = !DILocation(line: 3173, column: 39, scope: !8427)
!8568 = !DILocation(line: 3173, column: 2, scope: !8427)
!8569 = !DILocation(line: 3175, column: 22, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 3175, column: 6)
!8571 = !DILocation(line: 3175, column: 33, scope: !8570)
!8572 = !DILocation(line: 3175, column: 7, scope: !8570)
!8573 = !DILocation(line: 3175, column: 6, scope: !8427)
!8574 = !DILocation(line: 3176, column: 3, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 3175, column: 44)
!8576 = !DILocation(line: 3179, column: 22, scope: !8427)
!8577 = !DILocation(line: 3179, column: 2, scope: !8427)
!8578 = !DILocation(line: 3181, column: 2, scope: !8427)
!8579 = !DILocation(line: 3182, column: 1, scope: !8427)
!8580 = distinct !DISubprogram(name: "MESH_OT_fill_holes", scope: !3, file: !3, line: 3229, type: !3767, scopeLine: 3230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8581 = !DILocalVariable(name: "ot", arg: 1, scope: !8580, file: !3, line: 3229, type: !3769)
!8582 = !DILocation(line: 3229, column: 41, scope: !8580)
!8583 = !DILocation(line: 3232, column: 2, scope: !8580)
!8584 = !DILocation(line: 3232, column: 6, scope: !8580)
!8585 = !DILocation(line: 3232, column: 11, scope: !8580)
!8586 = !DILocation(line: 3233, column: 2, scope: !8580)
!8587 = !DILocation(line: 3233, column: 6, scope: !8580)
!8588 = !DILocation(line: 3233, column: 13, scope: !8580)
!8589 = !DILocation(line: 3234, column: 2, scope: !8580)
!8590 = !DILocation(line: 3234, column: 6, scope: !8580)
!8591 = !DILocation(line: 3234, column: 18, scope: !8580)
!8592 = !DILocation(line: 3237, column: 2, scope: !8580)
!8593 = !DILocation(line: 3237, column: 6, scope: !8580)
!8594 = !DILocation(line: 3237, column: 11, scope: !8580)
!8595 = !DILocation(line: 3238, column: 2, scope: !8580)
!8596 = !DILocation(line: 3238, column: 6, scope: !8580)
!8597 = !DILocation(line: 3238, column: 11, scope: !8580)
!8598 = !DILocation(line: 3241, column: 2, scope: !8580)
!8599 = !DILocation(line: 3241, column: 6, scope: !8580)
!8600 = !DILocation(line: 3241, column: 11, scope: !8580)
!8601 = !DILocation(line: 3243, column: 14, scope: !8580)
!8602 = !DILocation(line: 3243, column: 18, scope: !8580)
!8603 = !DILocation(line: 3243, column: 2, scope: !8580)
!8604 = !DILocation(line: 3244, column: 1, scope: !8580)
!8605 = distinct !DISubprogram(name: "edbm_fill_holes_exec", scope: !3, file: !3, line: 3208, type: !4116, scopeLine: 3209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8606 = !DILocalVariable(name: "C", arg: 1, scope: !8605, file: !3, line: 3208, type: !4118)
!8607 = !DILocation(line: 3208, column: 43, scope: !8605)
!8608 = !DILocalVariable(name: "op", arg: 2, scope: !8605, file: !3, line: 3208, type: !4120)
!8609 = !DILocation(line: 3208, column: 58, scope: !8605)
!8610 = !DILocalVariable(name: "obedit", scope: !8605, file: !3, line: 3210, type: !4127)
!8611 = !DILocation(line: 3210, column: 10, scope: !8605)
!8612 = !DILocation(line: 3210, column: 40, scope: !8605)
!8613 = !DILocation(line: 3210, column: 19, scope: !8605)
!8614 = !DILocalVariable(name: "em", scope: !8605, file: !3, line: 3211, type: !4133)
!8615 = !DILocation(line: 3211, column: 14, scope: !8605)
!8616 = !DILocation(line: 3211, column: 44, scope: !8605)
!8617 = !DILocation(line: 3211, column: 19, scope: !8605)
!8618 = !DILocalVariable(name: "sides", scope: !8605, file: !3, line: 3212, type: !4052)
!8619 = !DILocation(line: 3212, column: 12, scope: !8605)
!8620 = !DILocation(line: 3212, column: 32, scope: !8605)
!8621 = !DILocation(line: 3212, column: 36, scope: !8605)
!8622 = !DILocation(line: 3212, column: 20, scope: !8605)
!8623 = !DILocation(line: 3215, column: 10, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 3214, column: 6)
!8625 = !DILocation(line: 3215, column: 14, scope: !8624)
!8626 = !DILocation(line: 3218, column: 26, scope: !8624)
!8627 = !DILocation(line: 3214, column: 7, scope: !8624)
!8628 = !DILocation(line: 3214, column: 6, scope: !8605)
!8629 = !DILocation(line: 3220, column: 3, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8624, file: !3, line: 3219, column: 2)
!8631 = !DILocation(line: 3223, column: 22, scope: !8605)
!8632 = !DILocation(line: 3223, column: 2, scope: !8605)
!8633 = !DILocation(line: 3225, column: 2, scope: !8605)
!8634 = !DILocation(line: 3227, column: 1, scope: !8605)
!8635 = distinct !DISubprogram(name: "MESH_OT_beautify_fill", scope: !3, file: !3, line: 3285, type: !3767, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8636 = !DILocalVariable(name: "ot", arg: 1, scope: !8635, file: !3, line: 3285, type: !3769)
!8637 = !DILocation(line: 3285, column: 44, scope: !8635)
!8638 = !DILocalVariable(name: "prop", scope: !8635, file: !3, line: 3287, type: !3977)
!8639 = !DILocation(line: 3287, column: 15, scope: !8635)
!8640 = !DILocation(line: 3290, column: 2, scope: !8635)
!8641 = !DILocation(line: 3290, column: 6, scope: !8635)
!8642 = !DILocation(line: 3290, column: 11, scope: !8635)
!8643 = !DILocation(line: 3291, column: 2, scope: !8635)
!8644 = !DILocation(line: 3291, column: 6, scope: !8635)
!8645 = !DILocation(line: 3291, column: 13, scope: !8635)
!8646 = !DILocation(line: 3292, column: 2, scope: !8635)
!8647 = !DILocation(line: 3292, column: 6, scope: !8635)
!8648 = !DILocation(line: 3292, column: 18, scope: !8635)
!8649 = !DILocation(line: 3295, column: 2, scope: !8635)
!8650 = !DILocation(line: 3295, column: 6, scope: !8635)
!8651 = !DILocation(line: 3295, column: 11, scope: !8635)
!8652 = !DILocation(line: 3296, column: 2, scope: !8635)
!8653 = !DILocation(line: 3296, column: 6, scope: !8635)
!8654 = !DILocation(line: 3296, column: 11, scope: !8635)
!8655 = !DILocation(line: 3299, column: 2, scope: !8635)
!8656 = !DILocation(line: 3299, column: 6, scope: !8635)
!8657 = !DILocation(line: 3299, column: 11, scope: !8635)
!8658 = !DILocation(line: 3302, column: 32, scope: !8635)
!8659 = !DILocation(line: 3302, column: 36, scope: !8635)
!8660 = !DILocation(line: 3302, column: 9, scope: !8635)
!8661 = !DILocation(line: 3302, column: 7, scope: !8635)
!8662 = !DILocation(line: 3304, column: 33, scope: !8635)
!8663 = !DILocation(line: 3304, column: 2, scope: !8635)
!8664 = !DILocation(line: 3305, column: 1, scope: !8635)
!8665 = distinct !DISubprogram(name: "edbm_beautify_fill_exec", scope: !3, file: !3, line: 3246, type: !4116, scopeLine: 3247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8666 = !DILocalVariable(name: "C", arg: 1, scope: !8665, file: !3, line: 3246, type: !4118)
!8667 = !DILocation(line: 3246, column: 46, scope: !8665)
!8668 = !DILocalVariable(name: "op", arg: 2, scope: !8665, file: !3, line: 3246, type: !4120)
!8669 = !DILocation(line: 3246, column: 61, scope: !8665)
!8670 = !DILocalVariable(name: "obedit", scope: !8665, file: !3, line: 3248, type: !4127)
!8671 = !DILocation(line: 3248, column: 10, scope: !8665)
!8672 = !DILocation(line: 3248, column: 40, scope: !8665)
!8673 = !DILocation(line: 3248, column: 19, scope: !8665)
!8674 = !DILocalVariable(name: "em", scope: !8665, file: !3, line: 3249, type: !4133)
!8675 = !DILocation(line: 3249, column: 14, scope: !8665)
!8676 = !DILocation(line: 3249, column: 44, scope: !8665)
!8677 = !DILocation(line: 3249, column: 19, scope: !8665)
!8678 = !DILocalVariable(name: "angle_max", scope: !8665, file: !3, line: 3251, type: !4150)
!8679 = !DILocation(line: 3251, column: 14, scope: !8665)
!8680 = !DILocalVariable(name: "angle_limit", scope: !8665, file: !3, line: 3252, type: !4150)
!8681 = !DILocation(line: 3252, column: 14, scope: !8665)
!8682 = !DILocation(line: 3252, column: 42, scope: !8665)
!8683 = !DILocation(line: 3252, column: 46, scope: !8665)
!8684 = !DILocation(line: 3252, column: 28, scope: !8665)
!8685 = !DILocalVariable(name: "hflag", scope: !8665, file: !3, line: 3253, type: !1365)
!8686 = !DILocation(line: 3253, column: 7, scope: !8665)
!8687 = !DILocation(line: 3255, column: 6, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8665, file: !3, line: 3255, column: 6)
!8689 = !DILocation(line: 3255, column: 18, scope: !8688)
!8690 = !DILocation(line: 3255, column: 6, scope: !8665)
!8691 = !DILocation(line: 3256, column: 9, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3255, column: 32)
!8693 = !DILocation(line: 3257, column: 2, scope: !8692)
!8694 = !DILocalVariable(name: "iter", scope: !8695, file: !3, line: 3259, type: !4456)
!8695 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 3258, column: 7)
!8696 = !DILocation(line: 3259, column: 10, scope: !8695)
!8697 = !DILocalVariable(name: "e", scope: !8695, file: !3, line: 3260, type: !1418)
!8698 = !DILocation(line: 3260, column: 11, scope: !8695)
!8699 = !DILocation(line: 3262, column: 3, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 3262, column: 3)
!8701 = !DILocation(line: 3262, column: 3, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 3262, column: 3)
!8703 = !DILocation(line: 3263, column: 4, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 3262, column: 53)
!8705 = !DILocation(line: 0, scope: !8704)
!8706 = !DILocation(line: 3267, column: 3, scope: !8704)
!8707 = distinct !{!8707, !8699, !8708}
!8708 = !DILocation(line: 3267, column: 3, scope: !8700)
!8709 = !DILocation(line: 3269, column: 9, scope: !8695)
!8710 = !DILocation(line: 3273, column: 10, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8665, file: !3, line: 3272, column: 6)
!8712 = !DILocation(line: 3273, column: 14, scope: !8711)
!8713 = !DILocation(line: 3275, column: 26, scope: !8711)
!8714 = !DILocation(line: 3272, column: 7, scope: !8711)
!8715 = !DILocation(line: 3272, column: 6, scope: !8665)
!8716 = !DILocation(line: 3277, column: 3, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 3276, column: 2)
!8718 = !DILocation(line: 3280, column: 22, scope: !8665)
!8719 = !DILocation(line: 3280, column: 2, scope: !8665)
!8720 = !DILocation(line: 3282, column: 2, scope: !8665)
!8721 = !DILocation(line: 3283, column: 1, scope: !8665)
!8722 = !DILocalVariable(name: "ot", arg: 1, scope: !3766, file: !3, line: 3341, type: !3769)
!8723 = !DILocation(line: 3341, column: 35, scope: !3766)
!8724 = !DILocation(line: 3352, column: 2, scope: !3766)
!8725 = !DILocation(line: 3352, column: 6, scope: !3766)
!8726 = !DILocation(line: 3352, column: 11, scope: !3766)
!8727 = !DILocation(line: 3353, column: 2, scope: !3766)
!8728 = !DILocation(line: 3353, column: 6, scope: !3766)
!8729 = !DILocation(line: 3353, column: 13, scope: !3766)
!8730 = !DILocation(line: 3354, column: 2, scope: !3766)
!8731 = !DILocation(line: 3354, column: 6, scope: !3766)
!8732 = !DILocation(line: 3354, column: 18, scope: !3766)
!8733 = !DILocation(line: 3357, column: 2, scope: !3766)
!8734 = !DILocation(line: 3357, column: 6, scope: !3766)
!8735 = !DILocation(line: 3357, column: 11, scope: !3766)
!8736 = !DILocation(line: 3358, column: 2, scope: !3766)
!8737 = !DILocation(line: 3358, column: 6, scope: !3766)
!8738 = !DILocation(line: 3358, column: 11, scope: !3766)
!8739 = !DILocation(line: 3361, column: 2, scope: !3766)
!8740 = !DILocation(line: 3361, column: 6, scope: !3766)
!8741 = !DILocation(line: 3361, column: 11, scope: !3766)
!8742 = !DILocation(line: 3363, column: 16, scope: !3766)
!8743 = !DILocation(line: 3363, column: 20, scope: !3766)
!8744 = !DILocation(line: 3363, column: 2, scope: !3766)
!8745 = !DILocation(line: 3364, column: 18, scope: !3766)
!8746 = !DILocation(line: 3364, column: 22, scope: !3766)
!8747 = !DILocation(line: 3364, column: 2, scope: !3766)
!8748 = !DILocation(line: 3365, column: 15, scope: !3766)
!8749 = !DILocation(line: 3365, column: 19, scope: !3766)
!8750 = !DILocation(line: 3365, column: 2, scope: !3766)
!8751 = !DILocation(line: 3366, column: 1, scope: !3766)
!8752 = distinct !DISubprogram(name: "edbm_poke_face_exec", scope: !3, file: !3, line: 3310, type: !4116, scopeLine: 3311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8753 = !DILocalVariable(name: "C", arg: 1, scope: !8752, file: !3, line: 3310, type: !4118)
!8754 = !DILocation(line: 3310, column: 42, scope: !8752)
!8755 = !DILocalVariable(name: "op", arg: 2, scope: !8752, file: !3, line: 3310, type: !4120)
!8756 = !DILocation(line: 3310, column: 57, scope: !8752)
!8757 = !DILocalVariable(name: "obedit", scope: !8752, file: !3, line: 3312, type: !4127)
!8758 = !DILocation(line: 3312, column: 10, scope: !8752)
!8759 = !DILocation(line: 3312, column: 40, scope: !8752)
!8760 = !DILocation(line: 3312, column: 19, scope: !8752)
!8761 = !DILocalVariable(name: "em", scope: !8752, file: !3, line: 3313, type: !4133)
!8762 = !DILocation(line: 3313, column: 14, scope: !8752)
!8763 = !DILocation(line: 3313, column: 44, scope: !8752)
!8764 = !DILocation(line: 3313, column: 19, scope: !8752)
!8765 = !DILocalVariable(name: "bmop", scope: !8752, file: !3, line: 3314, type: !4335)
!8766 = !DILocation(line: 3314, column: 13, scope: !8752)
!8767 = !DILocalVariable(name: "offset", scope: !8752, file: !3, line: 3316, type: !4150)
!8768 = !DILocation(line: 3316, column: 14, scope: !8752)
!8769 = !DILocation(line: 3316, column: 37, scope: !8752)
!8770 = !DILocation(line: 3316, column: 41, scope: !8752)
!8771 = !DILocation(line: 3316, column: 23, scope: !8752)
!8772 = !DILocalVariable(name: "use_relative_offset", scope: !8752, file: !3, line: 3317, type: !4811)
!8773 = !DILocation(line: 3317, column: 13, scope: !8752)
!8774 = !DILocation(line: 3317, column: 51, scope: !8752)
!8775 = !DILocation(line: 3317, column: 55, scope: !8752)
!8776 = !DILocation(line: 3317, column: 35, scope: !8752)
!8777 = !DILocalVariable(name: "center_mode", scope: !8752, file: !3, line: 3318, type: !4052)
!8778 = !DILocation(line: 3318, column: 12, scope: !8752)
!8779 = !DILocation(line: 3318, column: 39, scope: !8752)
!8780 = !DILocation(line: 3318, column: 43, scope: !8752)
!8781 = !DILocation(line: 3318, column: 26, scope: !8752)
!8782 = !DILocation(line: 3320, column: 15, scope: !8752)
!8783 = !DILocation(line: 3320, column: 26, scope: !8752)
!8784 = !DILocation(line: 3321, column: 31, scope: !8752)
!8785 = !DILocation(line: 3321, column: 39, scope: !8752)
!8786 = !DILocation(line: 3321, column: 60, scope: !8752)
!8787 = !DILocation(line: 3320, column: 2, scope: !8752)
!8788 = !DILocation(line: 3322, column: 14, scope: !8752)
!8789 = !DILocation(line: 3322, column: 18, scope: !8752)
!8790 = !DILocation(line: 3322, column: 2, scope: !8752)
!8791 = !DILocation(line: 3324, column: 24, scope: !8752)
!8792 = !DILocation(line: 3324, column: 2, scope: !8752)
!8793 = !DILocation(line: 3326, column: 31, scope: !8752)
!8794 = !DILocation(line: 3326, column: 35, scope: !8752)
!8795 = !DILocation(line: 3326, column: 44, scope: !8752)
!8796 = !DILocation(line: 3326, column: 39, scope: !8752)
!8797 = !DILocation(line: 3326, column: 2, scope: !8752)
!8798 = !DILocation(line: 3327, column: 31, scope: !8752)
!8799 = !DILocation(line: 3327, column: 35, scope: !8752)
!8800 = !DILocation(line: 3327, column: 44, scope: !8752)
!8801 = !DILocation(line: 3327, column: 39, scope: !8752)
!8802 = !DILocation(line: 3327, column: 2, scope: !8752)
!8803 = !DILocation(line: 3329, column: 22, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8752, file: !3, line: 3329, column: 6)
!8805 = !DILocation(line: 3329, column: 33, scope: !8804)
!8806 = !DILocation(line: 3329, column: 7, scope: !8804)
!8807 = !DILocation(line: 3329, column: 6, scope: !8752)
!8808 = !DILocation(line: 3330, column: 3, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 3329, column: 44)
!8810 = !DILocation(line: 3333, column: 27, scope: !8752)
!8811 = !DILocation(line: 3333, column: 2, scope: !8752)
!8812 = !DILocation(line: 3335, column: 22, scope: !8752)
!8813 = !DILocation(line: 3335, column: 2, scope: !8752)
!8814 = !DILocation(line: 3337, column: 2, scope: !8752)
!8815 = !DILocation(line: 3339, column: 1, scope: !8752)
!8816 = distinct !DISubprogram(name: "MESH_OT_quads_convert_to_tris", scope: !3, file: !3, line: 3395, type: !3767, scopeLine: 3396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8817 = !DILocalVariable(name: "ot", arg: 1, scope: !8816, file: !3, line: 3395, type: !3769)
!8818 = !DILocation(line: 3395, column: 52, scope: !8816)
!8819 = !DILocation(line: 3398, column: 2, scope: !8816)
!8820 = !DILocation(line: 3398, column: 6, scope: !8816)
!8821 = !DILocation(line: 3398, column: 11, scope: !8816)
!8822 = !DILocation(line: 3399, column: 2, scope: !8816)
!8823 = !DILocation(line: 3399, column: 6, scope: !8816)
!8824 = !DILocation(line: 3399, column: 13, scope: !8816)
!8825 = !DILocation(line: 3400, column: 2, scope: !8816)
!8826 = !DILocation(line: 3400, column: 6, scope: !8816)
!8827 = !DILocation(line: 3400, column: 18, scope: !8816)
!8828 = !DILocation(line: 3403, column: 2, scope: !8816)
!8829 = !DILocation(line: 3403, column: 6, scope: !8816)
!8830 = !DILocation(line: 3403, column: 11, scope: !8816)
!8831 = !DILocation(line: 3404, column: 2, scope: !8816)
!8832 = !DILocation(line: 3404, column: 6, scope: !8816)
!8833 = !DILocation(line: 3404, column: 11, scope: !8816)
!8834 = !DILocation(line: 3407, column: 2, scope: !8816)
!8835 = !DILocation(line: 3407, column: 6, scope: !8816)
!8836 = !DILocation(line: 3407, column: 11, scope: !8816)
!8837 = !DILocation(line: 3409, column: 15, scope: !8816)
!8838 = !DILocation(line: 3409, column: 19, scope: !8816)
!8839 = !DILocation(line: 3409, column: 2, scope: !8816)
!8840 = !DILocation(line: 3411, column: 15, scope: !8816)
!8841 = !DILocation(line: 3411, column: 19, scope: !8816)
!8842 = !DILocation(line: 3411, column: 2, scope: !8816)
!8843 = !DILocation(line: 3413, column: 1, scope: !8816)
!8844 = distinct !DISubprogram(name: "edbm_quads_convert_to_tris_exec", scope: !3, file: !3, line: 3370, type: !4116, scopeLine: 3371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8845 = !DILocalVariable(name: "C", arg: 1, scope: !8844, file: !3, line: 3370, type: !4118)
!8846 = !DILocation(line: 3370, column: 54, scope: !8844)
!8847 = !DILocalVariable(name: "op", arg: 2, scope: !8844, file: !3, line: 3370, type: !4120)
!8848 = !DILocation(line: 3370, column: 69, scope: !8844)
!8849 = !DILocalVariable(name: "obedit", scope: !8844, file: !3, line: 3372, type: !4127)
!8850 = !DILocation(line: 3372, column: 10, scope: !8844)
!8851 = !DILocation(line: 3372, column: 40, scope: !8844)
!8852 = !DILocation(line: 3372, column: 19, scope: !8844)
!8853 = !DILocalVariable(name: "em", scope: !8844, file: !3, line: 3373, type: !4133)
!8854 = !DILocation(line: 3373, column: 14, scope: !8844)
!8855 = !DILocation(line: 3373, column: 44, scope: !8844)
!8856 = !DILocation(line: 3373, column: 19, scope: !8844)
!8857 = !DILocalVariable(name: "bmop", scope: !8844, file: !3, line: 3374, type: !4335)
!8858 = !DILocation(line: 3374, column: 13, scope: !8844)
!8859 = !DILocalVariable(name: "quad_method", scope: !8844, file: !3, line: 3375, type: !4052)
!8860 = !DILocation(line: 3375, column: 12, scope: !8844)
!8861 = !DILocation(line: 3375, column: 39, scope: !8844)
!8862 = !DILocation(line: 3375, column: 43, scope: !8844)
!8863 = !DILocation(line: 3375, column: 26, scope: !8844)
!8864 = !DILocalVariable(name: "ngon_method", scope: !8844, file: !3, line: 3376, type: !4052)
!8865 = !DILocation(line: 3376, column: 12, scope: !8844)
!8866 = !DILocation(line: 3376, column: 39, scope: !8844)
!8867 = !DILocation(line: 3376, column: 43, scope: !8844)
!8868 = !DILocation(line: 3376, column: 26, scope: !8844)
!8869 = !DILocation(line: 3378, column: 15, scope: !8844)
!8870 = !DILocation(line: 3378, column: 26, scope: !8844)
!8871 = !DILocation(line: 3378, column: 101, scope: !8844)
!8872 = !DILocation(line: 3378, column: 114, scope: !8844)
!8873 = !DILocation(line: 3378, column: 2, scope: !8844)
!8874 = !DILocation(line: 3379, column: 14, scope: !8844)
!8875 = !DILocation(line: 3379, column: 18, scope: !8844)
!8876 = !DILocation(line: 3379, column: 2, scope: !8844)
!8877 = !DILocation(line: 3382, column: 31, scope: !8844)
!8878 = !DILocation(line: 3382, column: 35, scope: !8844)
!8879 = !DILocation(line: 3382, column: 44, scope: !8844)
!8880 = !DILocation(line: 3382, column: 39, scope: !8844)
!8881 = !DILocation(line: 3382, column: 2, scope: !8844)
!8882 = !DILocation(line: 3383, column: 24, scope: !8844)
!8883 = !DILocation(line: 3383, column: 2, scope: !8844)
!8884 = !DILocation(line: 3385, column: 22, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 3385, column: 6)
!8886 = !DILocation(line: 3385, column: 33, scope: !8885)
!8887 = !DILocation(line: 3385, column: 7, scope: !8885)
!8888 = !DILocation(line: 3385, column: 6, scope: !8844)
!8889 = !DILocation(line: 3386, column: 3, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 3385, column: 44)
!8891 = !DILocation(line: 3389, column: 22, scope: !8844)
!8892 = !DILocation(line: 3389, column: 2, scope: !8844)
!8893 = !DILocation(line: 3391, column: 2, scope: !8844)
!8894 = !DILocation(line: 3392, column: 1, scope: !8844)
!8895 = distinct !DISubprogram(name: "MESH_OT_tris_convert_to_quads", scope: !3, file: !3, line: 3455, type: !3767, scopeLine: 3456, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8896 = !DILocalVariable(name: "ot", arg: 1, scope: !8895, file: !3, line: 3455, type: !3769)
!8897 = !DILocation(line: 3455, column: 52, scope: !8895)
!8898 = !DILocation(line: 3458, column: 2, scope: !8895)
!8899 = !DILocation(line: 3458, column: 6, scope: !8895)
!8900 = !DILocation(line: 3458, column: 11, scope: !8895)
!8901 = !DILocation(line: 3459, column: 2, scope: !8895)
!8902 = !DILocation(line: 3459, column: 6, scope: !8895)
!8903 = !DILocation(line: 3459, column: 13, scope: !8895)
!8904 = !DILocation(line: 3460, column: 2, scope: !8895)
!8905 = !DILocation(line: 3460, column: 6, scope: !8895)
!8906 = !DILocation(line: 3460, column: 18, scope: !8895)
!8907 = !DILocation(line: 3463, column: 2, scope: !8895)
!8908 = !DILocation(line: 3463, column: 6, scope: !8895)
!8909 = !DILocation(line: 3463, column: 11, scope: !8895)
!8910 = !DILocation(line: 3464, column: 2, scope: !8895)
!8911 = !DILocation(line: 3464, column: 6, scope: !8895)
!8912 = !DILocation(line: 3464, column: 11, scope: !8895)
!8913 = !DILocation(line: 3467, column: 2, scope: !8895)
!8914 = !DILocation(line: 3467, column: 6, scope: !8895)
!8915 = !DILocation(line: 3467, column: 11, scope: !8895)
!8916 = !DILocation(line: 3469, column: 22, scope: !8895)
!8917 = !DILocation(line: 3469, column: 2, scope: !8895)
!8918 = !DILocation(line: 3470, column: 1, scope: !8895)
!8919 = distinct !DISubprogram(name: "edbm_tris_convert_to_quads_exec", scope: !3, file: !3, line: 3415, type: !4116, scopeLine: 3416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8920 = !DILocalVariable(name: "C", arg: 1, scope: !8919, file: !3, line: 3415, type: !4118)
!8921 = !DILocation(line: 3415, column: 54, scope: !8919)
!8922 = !DILocalVariable(name: "op", arg: 2, scope: !8919, file: !3, line: 3415, type: !4120)
!8923 = !DILocation(line: 3415, column: 69, scope: !8919)
!8924 = !DILocalVariable(name: "obedit", scope: !8919, file: !3, line: 3417, type: !4127)
!8925 = !DILocation(line: 3417, column: 10, scope: !8919)
!8926 = !DILocation(line: 3417, column: 40, scope: !8919)
!8927 = !DILocation(line: 3417, column: 19, scope: !8919)
!8928 = !DILocalVariable(name: "em", scope: !8919, file: !3, line: 3418, type: !4133)
!8929 = !DILocation(line: 3418, column: 14, scope: !8919)
!8930 = !DILocation(line: 3418, column: 44, scope: !8919)
!8931 = !DILocation(line: 3418, column: 19, scope: !8919)
!8932 = !DILocalVariable(name: "dosharp", scope: !8919, file: !3, line: 3419, type: !135)
!8933 = !DILocation(line: 3419, column: 6, scope: !8919)
!8934 = !DILocalVariable(name: "douvs", scope: !8919, file: !3, line: 3419, type: !135)
!8935 = !DILocation(line: 3419, column: 15, scope: !8919)
!8936 = !DILocalVariable(name: "dovcols", scope: !8919, file: !3, line: 3419, type: !135)
!8937 = !DILocation(line: 3419, column: 22, scope: !8919)
!8938 = !DILocalVariable(name: "domaterials", scope: !8919, file: !3, line: 3419, type: !135)
!8939 = !DILocation(line: 3419, column: 31, scope: !8919)
!8940 = !DILocalVariable(name: "limit", scope: !8919, file: !3, line: 3420, type: !4150)
!8941 = !DILocation(line: 3420, column: 14, scope: !8919)
!8942 = !DILocation(line: 3420, column: 36, scope: !8919)
!8943 = !DILocation(line: 3420, column: 40, scope: !8919)
!8944 = !DILocation(line: 3420, column: 22, scope: !8919)
!8945 = !DILocation(line: 3422, column: 28, scope: !8919)
!8946 = !DILocation(line: 3422, column: 32, scope: !8919)
!8947 = !DILocation(line: 3422, column: 12, scope: !8919)
!8948 = !DILocation(line: 3422, column: 10, scope: !8919)
!8949 = !DILocation(line: 3423, column: 26, scope: !8919)
!8950 = !DILocation(line: 3423, column: 30, scope: !8919)
!8951 = !DILocation(line: 3423, column: 10, scope: !8919)
!8952 = !DILocation(line: 3423, column: 8, scope: !8919)
!8953 = !DILocation(line: 3424, column: 28, scope: !8919)
!8954 = !DILocation(line: 3424, column: 32, scope: !8919)
!8955 = !DILocation(line: 3424, column: 12, scope: !8919)
!8956 = !DILocation(line: 3424, column: 10, scope: !8919)
!8957 = !DILocation(line: 3425, column: 32, scope: !8919)
!8958 = !DILocation(line: 3425, column: 36, scope: !8919)
!8959 = !DILocation(line: 3425, column: 16, scope: !8919)
!8960 = !DILocation(line: 3425, column: 14, scope: !8919)
!8961 = !DILocation(line: 3428, column: 10, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 3427, column: 6)
!8963 = !DILocation(line: 3428, column: 14, scope: !8962)
!8964 = !DILocation(line: 3431, column: 26, scope: !8962)
!8965 = !DILocation(line: 3431, column: 33, scope: !8962)
!8966 = !DILocation(line: 3431, column: 42, scope: !8962)
!8967 = !DILocation(line: 3431, column: 49, scope: !8962)
!8968 = !DILocation(line: 3431, column: 58, scope: !8962)
!8969 = !DILocation(line: 3427, column: 7, scope: !8962)
!8970 = !DILocation(line: 3427, column: 6, scope: !8919)
!8971 = !DILocation(line: 3433, column: 3, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 3432, column: 2)
!8973 = !DILocation(line: 3436, column: 22, scope: !8919)
!8974 = !DILocation(line: 3436, column: 2, scope: !8919)
!8975 = !DILocation(line: 3438, column: 2, scope: !8919)
!8976 = !DILocation(line: 3439, column: 1, scope: !8919)
!8977 = distinct !DISubprogram(name: "join_triangle_props", scope: !3, file: !3, line: 3441, type: !3767, scopeLine: 3442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!8978 = !DILocalVariable(name: "ot", arg: 1, scope: !8977, file: !3, line: 3441, type: !3769)
!8979 = !DILocation(line: 3441, column: 49, scope: !8977)
!8980 = !DILocalVariable(name: "prop", scope: !8977, file: !3, line: 3443, type: !3977)
!8981 = !DILocation(line: 3443, column: 15, scope: !8977)
!8982 = !DILocation(line: 3445, column: 32, scope: !8977)
!8983 = !DILocation(line: 3445, column: 36, scope: !8977)
!8984 = !DILocation(line: 3445, column: 9, scope: !8977)
!8985 = !DILocation(line: 3445, column: 7, scope: !8977)
!8986 = !DILocation(line: 3447, column: 33, scope: !8977)
!8987 = !DILocation(line: 3447, column: 2, scope: !8977)
!8988 = !DILocation(line: 3449, column: 18, scope: !8977)
!8989 = !DILocation(line: 3449, column: 22, scope: !8977)
!8990 = !DILocation(line: 3449, column: 2, scope: !8977)
!8991 = !DILocation(line: 3450, column: 18, scope: !8977)
!8992 = !DILocation(line: 3450, column: 22, scope: !8977)
!8993 = !DILocation(line: 3450, column: 2, scope: !8977)
!8994 = !DILocation(line: 3451, column: 18, scope: !8977)
!8995 = !DILocation(line: 3451, column: 22, scope: !8977)
!8996 = !DILocation(line: 3451, column: 2, scope: !8977)
!8997 = !DILocation(line: 3452, column: 18, scope: !8977)
!8998 = !DILocation(line: 3452, column: 22, scope: !8977)
!8999 = !DILocation(line: 3452, column: 2, scope: !8977)
!9000 = !DILocation(line: 3453, column: 1, scope: !8977)
!9001 = distinct !DISubprogram(name: "MESH_OT_dissolve_verts", scope: !3, file: !3, line: 3511, type: !3767, scopeLine: 3512, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9002 = !DILocalVariable(name: "ot", arg: 1, scope: !9001, file: !3, line: 3511, type: !3769)
!9003 = !DILocation(line: 3511, column: 45, scope: !9001)
!9004 = !DILocation(line: 3514, column: 2, scope: !9001)
!9005 = !DILocation(line: 3514, column: 6, scope: !9001)
!9006 = !DILocation(line: 3514, column: 11, scope: !9001)
!9007 = !DILocation(line: 3515, column: 2, scope: !9001)
!9008 = !DILocation(line: 3515, column: 6, scope: !9001)
!9009 = !DILocation(line: 3515, column: 18, scope: !9001)
!9010 = !DILocation(line: 3516, column: 2, scope: !9001)
!9011 = !DILocation(line: 3516, column: 6, scope: !9001)
!9012 = !DILocation(line: 3516, column: 13, scope: !9001)
!9013 = !DILocation(line: 3519, column: 2, scope: !9001)
!9014 = !DILocation(line: 3519, column: 6, scope: !9001)
!9015 = !DILocation(line: 3519, column: 11, scope: !9001)
!9016 = !DILocation(line: 3520, column: 2, scope: !9001)
!9017 = !DILocation(line: 3520, column: 6, scope: !9001)
!9018 = !DILocation(line: 3520, column: 11, scope: !9001)
!9019 = !DILocation(line: 3523, column: 2, scope: !9001)
!9020 = !DILocation(line: 3523, column: 6, scope: !9001)
!9021 = !DILocation(line: 3523, column: 11, scope: !9001)
!9022 = !DILocation(line: 3525, column: 37, scope: !9001)
!9023 = !DILocation(line: 3525, column: 2, scope: !9001)
!9024 = !DILocation(line: 3526, column: 40, scope: !9001)
!9025 = !DILocation(line: 3526, column: 2, scope: !9001)
!9026 = !DILocation(line: 3527, column: 1, scope: !9001)
!9027 = distinct !DISubprogram(name: "edbm_dissolve_verts_exec", scope: !3, file: !3, line: 3491, type: !4116, scopeLine: 3492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9028 = !DILocalVariable(name: "C", arg: 1, scope: !9027, file: !3, line: 3491, type: !4118)
!9029 = !DILocation(line: 3491, column: 47, scope: !9027)
!9030 = !DILocalVariable(name: "op", arg: 2, scope: !9027, file: !3, line: 3491, type: !4120)
!9031 = !DILocation(line: 3491, column: 62, scope: !9027)
!9032 = !DILocalVariable(name: "obedit", scope: !9027, file: !3, line: 3493, type: !4127)
!9033 = !DILocation(line: 3493, column: 10, scope: !9027)
!9034 = !DILocation(line: 3493, column: 40, scope: !9027)
!9035 = !DILocation(line: 3493, column: 19, scope: !9027)
!9036 = !DILocalVariable(name: "em", scope: !9027, file: !3, line: 3494, type: !4133)
!9037 = !DILocation(line: 3494, column: 14, scope: !9027)
!9038 = !DILocation(line: 3494, column: 44, scope: !9027)
!9039 = !DILocation(line: 3494, column: 19, scope: !9027)
!9040 = !DILocalVariable(name: "use_face_split", scope: !9027, file: !3, line: 3496, type: !4811)
!9041 = !DILocation(line: 3496, column: 13, scope: !9027)
!9042 = !DILocation(line: 3496, column: 46, scope: !9027)
!9043 = !DILocation(line: 3496, column: 50, scope: !9027)
!9044 = !DILocation(line: 3496, column: 30, scope: !9027)
!9045 = !DILocalVariable(name: "use_boundary_tear", scope: !9027, file: !3, line: 3497, type: !4811)
!9046 = !DILocation(line: 3497, column: 13, scope: !9027)
!9047 = !DILocation(line: 3497, column: 49, scope: !9027)
!9048 = !DILocation(line: 3497, column: 53, scope: !9027)
!9049 = !DILocation(line: 3497, column: 33, scope: !9027)
!9050 = !DILocation(line: 3499, column: 21, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9027, file: !3, line: 3499, column: 6)
!9052 = !DILocation(line: 3499, column: 25, scope: !9051)
!9053 = !DILocation(line: 3501, column: 37, scope: !9051)
!9054 = !DILocation(line: 3501, column: 53, scope: !9051)
!9055 = !DILocation(line: 3499, column: 7, scope: !9051)
!9056 = !DILocation(line: 3499, column: 6, scope: !9027)
!9057 = !DILocation(line: 3503, column: 3, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 3502, column: 2)
!9059 = !DILocation(line: 3506, column: 22, scope: !9027)
!9060 = !DILocation(line: 3506, column: 2, scope: !9027)
!9061 = !DILocation(line: 3508, column: 2, scope: !9027)
!9062 = !DILocation(line: 3509, column: 1, scope: !9027)
!9063 = distinct !DISubprogram(name: "edbm_dissolve_prop__use_face_split", scope: !3, file: !3, line: 3480, type: !3767, scopeLine: 3481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9064 = !DILocalVariable(name: "ot", arg: 1, scope: !9063, file: !3, line: 3480, type: !3769)
!9065 = !DILocation(line: 3480, column: 64, scope: !9063)
!9066 = !DILocation(line: 3482, column: 18, scope: !9063)
!9067 = !DILocation(line: 3482, column: 22, scope: !9063)
!9068 = !DILocation(line: 3482, column: 2, scope: !9063)
!9069 = !DILocation(line: 3484, column: 1, scope: !9063)
!9070 = distinct !DISubprogram(name: "edbm_dissolve_prop__use_boundary_tear", scope: !3, file: !3, line: 3485, type: !3767, scopeLine: 3486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9071 = !DILocalVariable(name: "ot", arg: 1, scope: !9070, file: !3, line: 3485, type: !3769)
!9072 = !DILocation(line: 3485, column: 67, scope: !9070)
!9073 = !DILocation(line: 3487, column: 18, scope: !9070)
!9074 = !DILocation(line: 3487, column: 22, scope: !9070)
!9075 = !DILocation(line: 3487, column: 2, scope: !9070)
!9076 = !DILocation(line: 3489, column: 1, scope: !9070)
!9077 = distinct !DISubprogram(name: "MESH_OT_dissolve_edges", scope: !3, file: !3, line: 3549, type: !3767, scopeLine: 3550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9078 = !DILocalVariable(name: "ot", arg: 1, scope: !9077, file: !3, line: 3549, type: !3769)
!9079 = !DILocation(line: 3549, column: 45, scope: !9077)
!9080 = !DILocation(line: 3552, column: 2, scope: !9077)
!9081 = !DILocation(line: 3552, column: 6, scope: !9077)
!9082 = !DILocation(line: 3552, column: 11, scope: !9077)
!9083 = !DILocation(line: 3553, column: 2, scope: !9077)
!9084 = !DILocation(line: 3553, column: 6, scope: !9077)
!9085 = !DILocation(line: 3553, column: 18, scope: !9077)
!9086 = !DILocation(line: 3554, column: 2, scope: !9077)
!9087 = !DILocation(line: 3554, column: 6, scope: !9077)
!9088 = !DILocation(line: 3554, column: 13, scope: !9077)
!9089 = !DILocation(line: 3557, column: 2, scope: !9077)
!9090 = !DILocation(line: 3557, column: 6, scope: !9077)
!9091 = !DILocation(line: 3557, column: 11, scope: !9077)
!9092 = !DILocation(line: 3558, column: 2, scope: !9077)
!9093 = !DILocation(line: 3558, column: 6, scope: !9077)
!9094 = !DILocation(line: 3558, column: 11, scope: !9077)
!9095 = !DILocation(line: 3561, column: 2, scope: !9077)
!9096 = !DILocation(line: 3561, column: 6, scope: !9077)
!9097 = !DILocation(line: 3561, column: 11, scope: !9077)
!9098 = !DILocation(line: 3563, column: 32, scope: !9077)
!9099 = !DILocation(line: 3563, column: 2, scope: !9077)
!9100 = !DILocation(line: 3564, column: 37, scope: !9077)
!9101 = !DILocation(line: 3564, column: 2, scope: !9077)
!9102 = !DILocation(line: 3565, column: 1, scope: !9077)
!9103 = distinct !DISubprogram(name: "edbm_dissolve_edges_exec", scope: !3, file: !3, line: 3529, type: !4116, scopeLine: 3530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9104 = !DILocalVariable(name: "C", arg: 1, scope: !9103, file: !3, line: 3529, type: !4118)
!9105 = !DILocation(line: 3529, column: 47, scope: !9103)
!9106 = !DILocalVariable(name: "op", arg: 2, scope: !9103, file: !3, line: 3529, type: !4120)
!9107 = !DILocation(line: 3529, column: 62, scope: !9103)
!9108 = !DILocalVariable(name: "obedit", scope: !9103, file: !3, line: 3531, type: !4127)
!9109 = !DILocation(line: 3531, column: 10, scope: !9103)
!9110 = !DILocation(line: 3531, column: 40, scope: !9103)
!9111 = !DILocation(line: 3531, column: 19, scope: !9103)
!9112 = !DILocalVariable(name: "em", scope: !9103, file: !3, line: 3532, type: !4133)
!9113 = !DILocation(line: 3532, column: 14, scope: !9103)
!9114 = !DILocation(line: 3532, column: 44, scope: !9103)
!9115 = !DILocation(line: 3532, column: 19, scope: !9103)
!9116 = !DILocalVariable(name: "use_verts", scope: !9103, file: !3, line: 3534, type: !4811)
!9117 = !DILocation(line: 3534, column: 13, scope: !9103)
!9118 = !DILocation(line: 3534, column: 41, scope: !9103)
!9119 = !DILocation(line: 3534, column: 45, scope: !9103)
!9120 = !DILocation(line: 3534, column: 25, scope: !9103)
!9121 = !DILocalVariable(name: "use_face_split", scope: !9103, file: !3, line: 3535, type: !4811)
!9122 = !DILocation(line: 3535, column: 13, scope: !9103)
!9123 = !DILocation(line: 3535, column: 46, scope: !9103)
!9124 = !DILocation(line: 3535, column: 50, scope: !9103)
!9125 = !DILocation(line: 3535, column: 30, scope: !9103)
!9126 = !DILocation(line: 3537, column: 21, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 3537, column: 6)
!9128 = !DILocation(line: 3537, column: 25, scope: !9127)
!9129 = !DILocation(line: 3539, column: 37, scope: !9127)
!9130 = !DILocation(line: 3539, column: 48, scope: !9127)
!9131 = !DILocation(line: 3537, column: 7, scope: !9127)
!9132 = !DILocation(line: 3537, column: 6, scope: !9103)
!9133 = !DILocation(line: 3541, column: 3, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9127, file: !3, line: 3540, column: 2)
!9135 = !DILocation(line: 3544, column: 22, scope: !9103)
!9136 = !DILocation(line: 3544, column: 2, scope: !9103)
!9137 = !DILocation(line: 3546, column: 2, scope: !9103)
!9138 = !DILocation(line: 3547, column: 1, scope: !9103)
!9139 = distinct !DISubprogram(name: "edbm_dissolve_prop__use_verts", scope: !3, file: !3, line: 3475, type: !3767, scopeLine: 3476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9140 = !DILocalVariable(name: "ot", arg: 1, scope: !9139, file: !3, line: 3475, type: !3769)
!9141 = !DILocation(line: 3475, column: 59, scope: !9139)
!9142 = !DILocation(line: 3477, column: 18, scope: !9139)
!9143 = !DILocation(line: 3477, column: 22, scope: !9139)
!9144 = !DILocation(line: 3477, column: 2, scope: !9139)
!9145 = !DILocation(line: 3479, column: 1, scope: !9139)
!9146 = distinct !DISubprogram(name: "MESH_OT_dissolve_faces", scope: !3, file: !3, line: 3588, type: !3767, scopeLine: 3589, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9147 = !DILocalVariable(name: "ot", arg: 1, scope: !9146, file: !3, line: 3588, type: !3769)
!9148 = !DILocation(line: 3588, column: 45, scope: !9146)
!9149 = !DILocation(line: 3591, column: 2, scope: !9146)
!9150 = !DILocation(line: 3591, column: 6, scope: !9146)
!9151 = !DILocation(line: 3591, column: 11, scope: !9146)
!9152 = !DILocation(line: 3592, column: 2, scope: !9146)
!9153 = !DILocation(line: 3592, column: 6, scope: !9146)
!9154 = !DILocation(line: 3592, column: 18, scope: !9146)
!9155 = !DILocation(line: 3593, column: 2, scope: !9146)
!9156 = !DILocation(line: 3593, column: 6, scope: !9146)
!9157 = !DILocation(line: 3593, column: 13, scope: !9146)
!9158 = !DILocation(line: 3596, column: 2, scope: !9146)
!9159 = !DILocation(line: 3596, column: 6, scope: !9146)
!9160 = !DILocation(line: 3596, column: 11, scope: !9146)
!9161 = !DILocation(line: 3597, column: 2, scope: !9146)
!9162 = !DILocation(line: 3597, column: 6, scope: !9146)
!9163 = !DILocation(line: 3597, column: 11, scope: !9146)
!9164 = !DILocation(line: 3600, column: 2, scope: !9146)
!9165 = !DILocation(line: 3600, column: 6, scope: !9146)
!9166 = !DILocation(line: 3600, column: 11, scope: !9146)
!9167 = !DILocation(line: 3602, column: 32, scope: !9146)
!9168 = !DILocation(line: 3602, column: 2, scope: !9146)
!9169 = !DILocation(line: 3603, column: 1, scope: !9146)
!9170 = distinct !DISubprogram(name: "edbm_dissolve_faces_exec", scope: !3, file: !3, line: 3567, type: !4116, scopeLine: 3568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9171 = !DILocalVariable(name: "C", arg: 1, scope: !9170, file: !3, line: 3567, type: !4118)
!9172 = !DILocation(line: 3567, column: 47, scope: !9170)
!9173 = !DILocalVariable(name: "op", arg: 2, scope: !9170, file: !3, line: 3567, type: !4120)
!9174 = !DILocation(line: 3567, column: 62, scope: !9170)
!9175 = !DILocalVariable(name: "obedit", scope: !9170, file: !3, line: 3569, type: !4127)
!9176 = !DILocation(line: 3569, column: 10, scope: !9170)
!9177 = !DILocation(line: 3569, column: 40, scope: !9170)
!9178 = !DILocation(line: 3569, column: 19, scope: !9170)
!9179 = !DILocalVariable(name: "em", scope: !9170, file: !3, line: 3570, type: !4133)
!9180 = !DILocation(line: 3570, column: 14, scope: !9170)
!9181 = !DILocation(line: 3570, column: 44, scope: !9170)
!9182 = !DILocation(line: 3570, column: 19, scope: !9170)
!9183 = !DILocalVariable(name: "use_verts", scope: !9170, file: !3, line: 3572, type: !4811)
!9184 = !DILocation(line: 3572, column: 13, scope: !9170)
!9185 = !DILocation(line: 3572, column: 41, scope: !9170)
!9186 = !DILocation(line: 3572, column: 45, scope: !9170)
!9187 = !DILocation(line: 3572, column: 25, scope: !9170)
!9188 = !DILocation(line: 3575, column: 10, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 3574, column: 6)
!9190 = !DILocation(line: 3575, column: 14, scope: !9189)
!9191 = !DILocation(line: 3578, column: 26, scope: !9189)
!9192 = !DILocation(line: 3574, column: 7, scope: !9189)
!9193 = !DILocation(line: 3574, column: 6, scope: !9170)
!9194 = !DILocation(line: 3580, column: 3, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 3579, column: 2)
!9196 = !DILocation(line: 3583, column: 22, scope: !9170)
!9197 = !DILocation(line: 3583, column: 2, scope: !9170)
!9198 = !DILocation(line: 3585, column: 2, scope: !9170)
!9199 = !DILocation(line: 3586, column: 1, scope: !9170)
!9200 = distinct !DISubprogram(name: "MESH_OT_dissolve_mode", scope: !3, file: !3, line: 3622, type: !3767, scopeLine: 3623, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9201 = !DILocalVariable(name: "ot", arg: 1, scope: !9200, file: !3, line: 3622, type: !3769)
!9202 = !DILocation(line: 3622, column: 44, scope: !9200)
!9203 = !DILocation(line: 3625, column: 2, scope: !9200)
!9204 = !DILocation(line: 3625, column: 6, scope: !9200)
!9205 = !DILocation(line: 3625, column: 11, scope: !9200)
!9206 = !DILocation(line: 3626, column: 2, scope: !9200)
!9207 = !DILocation(line: 3626, column: 6, scope: !9200)
!9208 = !DILocation(line: 3626, column: 18, scope: !9200)
!9209 = !DILocation(line: 3627, column: 2, scope: !9200)
!9210 = !DILocation(line: 3627, column: 6, scope: !9200)
!9211 = !DILocation(line: 3627, column: 13, scope: !9200)
!9212 = !DILocation(line: 3630, column: 2, scope: !9200)
!9213 = !DILocation(line: 3630, column: 6, scope: !9200)
!9214 = !DILocation(line: 3630, column: 11, scope: !9200)
!9215 = !DILocation(line: 3631, column: 2, scope: !9200)
!9216 = !DILocation(line: 3631, column: 6, scope: !9200)
!9217 = !DILocation(line: 3631, column: 11, scope: !9200)
!9218 = !DILocation(line: 3634, column: 2, scope: !9200)
!9219 = !DILocation(line: 3634, column: 6, scope: !9200)
!9220 = !DILocation(line: 3634, column: 11, scope: !9200)
!9221 = !DILocation(line: 3636, column: 32, scope: !9200)
!9222 = !DILocation(line: 3636, column: 2, scope: !9200)
!9223 = !DILocation(line: 3637, column: 37, scope: !9200)
!9224 = !DILocation(line: 3637, column: 2, scope: !9200)
!9225 = !DILocation(line: 3638, column: 40, scope: !9200)
!9226 = !DILocation(line: 3638, column: 2, scope: !9200)
!9227 = !DILocation(line: 3639, column: 1, scope: !9200)
!9228 = distinct !DISubprogram(name: "edbm_dissolve_mode_exec", scope: !3, file: !3, line: 3606, type: !4116, scopeLine: 3607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9229 = !DILocalVariable(name: "C", arg: 1, scope: !9228, file: !3, line: 3606, type: !4118)
!9230 = !DILocation(line: 3606, column: 46, scope: !9228)
!9231 = !DILocalVariable(name: "op", arg: 2, scope: !9228, file: !3, line: 3606, type: !4120)
!9232 = !DILocation(line: 3606, column: 61, scope: !9228)
!9233 = !DILocalVariable(name: "obedit", scope: !9228, file: !3, line: 3608, type: !4127)
!9234 = !DILocation(line: 3608, column: 10, scope: !9228)
!9235 = !DILocation(line: 3608, column: 40, scope: !9228)
!9236 = !DILocation(line: 3608, column: 19, scope: !9228)
!9237 = !DILocalVariable(name: "em", scope: !9228, file: !3, line: 3609, type: !4133)
!9238 = !DILocation(line: 3609, column: 14, scope: !9228)
!9239 = !DILocation(line: 3609, column: 44, scope: !9228)
!9240 = !DILocation(line: 3609, column: 19, scope: !9228)
!9241 = !DILocation(line: 3611, column: 6, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9228, file: !3, line: 3611, column: 6)
!9243 = !DILocation(line: 3611, column: 10, scope: !9242)
!9244 = !DILocation(line: 3611, column: 21, scope: !9242)
!9245 = !DILocation(line: 3611, column: 6, scope: !9228)
!9246 = !DILocation(line: 3612, column: 35, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 3611, column: 42)
!9248 = !DILocation(line: 3612, column: 38, scope: !9247)
!9249 = !DILocation(line: 3612, column: 10, scope: !9247)
!9250 = !DILocation(line: 3612, column: 3, scope: !9247)
!9251 = !DILocation(line: 3614, column: 11, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 3614, column: 11)
!9253 = !DILocation(line: 3614, column: 15, scope: !9252)
!9254 = !DILocation(line: 3614, column: 26, scope: !9252)
!9255 = !DILocation(line: 3614, column: 11, scope: !9242)
!9256 = !DILocation(line: 3615, column: 35, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3614, column: 45)
!9258 = !DILocation(line: 3615, column: 38, scope: !9257)
!9259 = !DILocation(line: 3615, column: 10, scope: !9257)
!9260 = !DILocation(line: 3615, column: 3, scope: !9257)
!9261 = !DILocation(line: 3618, column: 35, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3617, column: 7)
!9263 = !DILocation(line: 3618, column: 38, scope: !9262)
!9264 = !DILocation(line: 3618, column: 10, scope: !9262)
!9265 = !DILocation(line: 3618, column: 3, scope: !9262)
!9266 = !DILocation(line: 3620, column: 1, scope: !9228)
!9267 = distinct !DISubprogram(name: "MESH_OT_dissolve_limited", scope: !3, file: !3, line: 3693, type: !3767, scopeLine: 3694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9268 = !DILocalVariable(name: "ot", arg: 1, scope: !9267, file: !3, line: 3693, type: !3769)
!9269 = !DILocation(line: 3693, column: 47, scope: !9267)
!9270 = !DILocalVariable(name: "prop", scope: !9267, file: !3, line: 3695, type: !3977)
!9271 = !DILocation(line: 3695, column: 15, scope: !9267)
!9272 = !DILocation(line: 3698, column: 2, scope: !9267)
!9273 = !DILocation(line: 3698, column: 6, scope: !9267)
!9274 = !DILocation(line: 3698, column: 11, scope: !9267)
!9275 = !DILocation(line: 3699, column: 2, scope: !9267)
!9276 = !DILocation(line: 3699, column: 6, scope: !9267)
!9277 = !DILocation(line: 3699, column: 13, scope: !9267)
!9278 = !DILocation(line: 3700, column: 2, scope: !9267)
!9279 = !DILocation(line: 3700, column: 6, scope: !9267)
!9280 = !DILocation(line: 3700, column: 18, scope: !9267)
!9281 = !DILocation(line: 3703, column: 2, scope: !9267)
!9282 = !DILocation(line: 3703, column: 6, scope: !9267)
!9283 = !DILocation(line: 3703, column: 11, scope: !9267)
!9284 = !DILocation(line: 3704, column: 2, scope: !9267)
!9285 = !DILocation(line: 3704, column: 6, scope: !9267)
!9286 = !DILocation(line: 3704, column: 11, scope: !9267)
!9287 = !DILocation(line: 3707, column: 2, scope: !9267)
!9288 = !DILocation(line: 3707, column: 6, scope: !9267)
!9289 = !DILocation(line: 3707, column: 11, scope: !9267)
!9290 = !DILocation(line: 3709, column: 32, scope: !9267)
!9291 = !DILocation(line: 3709, column: 36, scope: !9267)
!9292 = !DILocation(line: 3709, column: 9, scope: !9267)
!9293 = !DILocation(line: 3709, column: 7, scope: !9267)
!9294 = !DILocation(line: 3711, column: 33, scope: !9267)
!9295 = !DILocation(line: 3711, column: 2, scope: !9267)
!9296 = !DILocation(line: 3712, column: 18, scope: !9267)
!9297 = !DILocation(line: 3712, column: 22, scope: !9267)
!9298 = !DILocation(line: 3712, column: 2, scope: !9267)
!9299 = !DILocation(line: 3714, column: 20, scope: !9267)
!9300 = !DILocation(line: 3714, column: 24, scope: !9267)
!9301 = !DILocation(line: 3714, column: 2, scope: !9267)
!9302 = !DILocation(line: 3716, column: 1, scope: !9267)
!9303 = distinct !DISubprogram(name: "edbm_dissolve_limited_exec", scope: !3, file: !3, line: 3641, type: !4116, scopeLine: 3642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9304 = !DILocalVariable(name: "C", arg: 1, scope: !9303, file: !3, line: 3641, type: !4118)
!9305 = !DILocation(line: 3641, column: 49, scope: !9303)
!9306 = !DILocalVariable(name: "op", arg: 2, scope: !9303, file: !3, line: 3641, type: !4120)
!9307 = !DILocation(line: 3641, column: 64, scope: !9303)
!9308 = !DILocalVariable(name: "obedit", scope: !9303, file: !3, line: 3643, type: !4127)
!9309 = !DILocation(line: 3643, column: 10, scope: !9303)
!9310 = !DILocation(line: 3643, column: 40, scope: !9303)
!9311 = !DILocation(line: 3643, column: 19, scope: !9303)
!9312 = !DILocalVariable(name: "em", scope: !9303, file: !3, line: 3644, type: !4133)
!9313 = !DILocation(line: 3644, column: 14, scope: !9303)
!9314 = !DILocation(line: 3644, column: 44, scope: !9303)
!9315 = !DILocation(line: 3644, column: 19, scope: !9303)
!9316 = !DILocalVariable(name: "bm", scope: !9303, file: !3, line: 3645, type: !3610)
!9317 = !DILocation(line: 3645, column: 9, scope: !9303)
!9318 = !DILocation(line: 3645, column: 14, scope: !9303)
!9319 = !DILocation(line: 3645, column: 18, scope: !9303)
!9320 = !DILocalVariable(name: "angle_limit", scope: !9303, file: !3, line: 3646, type: !4150)
!9321 = !DILocation(line: 3646, column: 14, scope: !9303)
!9322 = !DILocation(line: 3646, column: 42, scope: !9303)
!9323 = !DILocation(line: 3646, column: 46, scope: !9303)
!9324 = !DILocation(line: 3646, column: 28, scope: !9303)
!9325 = !DILocalVariable(name: "use_dissolve_boundaries", scope: !9303, file: !3, line: 3647, type: !4811)
!9326 = !DILocation(line: 3647, column: 13, scope: !9303)
!9327 = !DILocation(line: 3647, column: 55, scope: !9303)
!9328 = !DILocation(line: 3647, column: 59, scope: !9303)
!9329 = !DILocation(line: 3647, column: 39, scope: !9303)
!9330 = !DILocalVariable(name: "delimit", scope: !9303, file: !3, line: 3648, type: !4052)
!9331 = !DILocation(line: 3648, column: 12, scope: !9303)
!9332 = !DILocation(line: 3648, column: 35, scope: !9303)
!9333 = !DILocation(line: 3648, column: 39, scope: !9303)
!9334 = !DILocation(line: 3648, column: 22, scope: !9303)
!9335 = !DILocalVariable(name: "dissolve_flag", scope: !9303, file: !3, line: 3650, type: !1365)
!9336 = !DILocation(line: 3650, column: 7, scope: !9303)
!9337 = !DILocation(line: 3652, column: 6, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 3652, column: 6)
!9339 = !DILocation(line: 3652, column: 10, scope: !9338)
!9340 = !DILocation(line: 3652, column: 21, scope: !9338)
!9341 = !DILocation(line: 3652, column: 6, scope: !9303)
!9342 = !DILocalVariable(name: "iter", scope: !9343, file: !3, line: 3654, type: !4456)
!9343 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 3652, column: 41)
!9344 = !DILocation(line: 3654, column: 10, scope: !9343)
!9345 = !DILocalVariable(name: "liter", scope: !9343, file: !3, line: 3655, type: !4456)
!9346 = !DILocation(line: 3655, column: 10, scope: !9343)
!9347 = !DILocalVariable(name: "ele", scope: !9343, file: !3, line: 3657, type: !1422)
!9348 = !DILocation(line: 3657, column: 11, scope: !9343)
!9349 = !DILocalVariable(name: "f", scope: !9343, file: !3, line: 3658, type: !1420)
!9350 = !DILocation(line: 3658, column: 11, scope: !9343)
!9351 = !DILocalVariable(name: "l", scope: !9343, file: !3, line: 3659, type: !1402)
!9352 = !DILocation(line: 3659, column: 11, scope: !9343)
!9353 = !DILocation(line: 3661, column: 3, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 3661, column: 3)
!9355 = !DILocation(line: 3661, column: 3, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9354, file: !3, line: 3661, column: 3)
!9357 = !DILocation(line: 3662, column: 4, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 3661, column: 51)
!9359 = !DILocation(line: 3663, column: 3, scope: !9358)
!9360 = distinct !{!9360, !9353, !9361}
!9361 = !DILocation(line: 3663, column: 3, scope: !9354)
!9362 = !DILocation(line: 3664, column: 3, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 3664, column: 3)
!9364 = !DILocation(line: 3664, column: 3, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 3664, column: 3)
!9366 = !DILocation(line: 3665, column: 4, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 3664, column: 51)
!9368 = !DILocation(line: 3666, column: 3, scope: !9367)
!9369 = distinct !{!9369, !9362, !9370}
!9370 = !DILocation(line: 3666, column: 3, scope: !9363)
!9371 = !DILocation(line: 3668, column: 3, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 3668, column: 3)
!9373 = !DILocation(line: 3668, column: 3, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 3668, column: 3)
!9375 = !DILocation(line: 3669, column: 9, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9377, file: !3, line: 3669, column: 8)
!9377 = distinct !DILexicalBlock(scope: !9374, file: !3, line: 3668, column: 49)
!9378 = !DILocation(line: 3669, column: 8, scope: !9377)
!9379 = !DILocation(line: 3670, column: 5, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 3670, column: 5)
!9381 = distinct !DILexicalBlock(scope: !9376, file: !3, line: 3669, column: 47)
!9382 = !DILocation(line: 3670, column: 5, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9380, file: !3, line: 3670, column: 5)
!9384 = !DILocation(line: 3671, column: 6, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 3670, column: 51)
!9386 = !DILocation(line: 3672, column: 6, scope: !9385)
!9387 = !DILocation(line: 3673, column: 5, scope: !9385)
!9388 = distinct !{!9388, !9379, !9389}
!9389 = !DILocation(line: 3673, column: 5, scope: !9380)
!9390 = !DILocation(line: 3674, column: 4, scope: !9381)
!9391 = !DILocation(line: 3675, column: 3, scope: !9377)
!9392 = distinct !{!9392, !9371, !9393}
!9393 = !DILocation(line: 3675, column: 3, scope: !9372)
!9394 = !DILocation(line: 3677, column: 17, scope: !9343)
!9395 = !DILocation(line: 3678, column: 2, scope: !9343)
!9396 = !DILocation(line: 3680, column: 17, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 3679, column: 7)
!9398 = !DILocation(line: 3684, column: 14, scope: !9303)
!9399 = !DILocation(line: 3684, column: 18, scope: !9303)
!9400 = !DILocation(line: 3686, column: 14, scope: !9303)
!9401 = !DILocation(line: 3686, column: 29, scope: !9303)
!9402 = !DILocation(line: 3686, column: 44, scope: !9303)
!9403 = !DILocation(line: 3686, column: 57, scope: !9303)
!9404 = !DILocation(line: 3686, column: 82, scope: !9303)
!9405 = !DILocation(line: 3683, column: 2, scope: !9303)
!9406 = !DILocation(line: 3688, column: 22, scope: !9303)
!9407 = !DILocation(line: 3688, column: 2, scope: !9303)
!9408 = !DILocation(line: 3690, column: 2, scope: !9303)
!9409 = distinct !DISubprogram(name: "MESH_OT_dissolve_degenerate", scope: !3, file: !3, line: 3744, type: !3767, scopeLine: 3745, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9410 = !DILocalVariable(name: "ot", arg: 1, scope: !9409, file: !3, line: 3744, type: !3769)
!9411 = !DILocation(line: 3744, column: 50, scope: !9409)
!9412 = !DILocation(line: 3747, column: 2, scope: !9409)
!9413 = !DILocation(line: 3747, column: 6, scope: !9409)
!9414 = !DILocation(line: 3747, column: 11, scope: !9409)
!9415 = !DILocation(line: 3748, column: 2, scope: !9409)
!9416 = !DILocation(line: 3748, column: 6, scope: !9409)
!9417 = !DILocation(line: 3748, column: 13, scope: !9409)
!9418 = !DILocation(line: 3749, column: 2, scope: !9409)
!9419 = !DILocation(line: 3749, column: 6, scope: !9409)
!9420 = !DILocation(line: 3749, column: 18, scope: !9409)
!9421 = !DILocation(line: 3752, column: 2, scope: !9409)
!9422 = !DILocation(line: 3752, column: 6, scope: !9409)
!9423 = !DILocation(line: 3752, column: 11, scope: !9409)
!9424 = !DILocation(line: 3753, column: 2, scope: !9409)
!9425 = !DILocation(line: 3753, column: 6, scope: !9409)
!9426 = !DILocation(line: 3753, column: 11, scope: !9409)
!9427 = !DILocation(line: 3756, column: 2, scope: !9409)
!9428 = !DILocation(line: 3756, column: 6, scope: !9409)
!9429 = !DILocation(line: 3756, column: 11, scope: !9409)
!9430 = !DILocation(line: 3758, column: 16, scope: !9409)
!9431 = !DILocation(line: 3758, column: 20, scope: !9409)
!9432 = !DILocation(line: 3758, column: 2, scope: !9409)
!9433 = !DILocation(line: 3760, column: 1, scope: !9409)
!9434 = distinct !DISubprogram(name: "edbm_dissolve_degenerate_exec", scope: !3, file: !3, line: 3718, type: !4116, scopeLine: 3719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9435 = !DILocalVariable(name: "C", arg: 1, scope: !9434, file: !3, line: 3718, type: !4118)
!9436 = !DILocation(line: 3718, column: 52, scope: !9434)
!9437 = !DILocalVariable(name: "op", arg: 2, scope: !9434, file: !3, line: 3718, type: !4120)
!9438 = !DILocation(line: 3718, column: 67, scope: !9434)
!9439 = !DILocalVariable(name: "obedit", scope: !9434, file: !3, line: 3720, type: !4127)
!9440 = !DILocation(line: 3720, column: 10, scope: !9434)
!9441 = !DILocation(line: 3720, column: 40, scope: !9434)
!9442 = !DILocation(line: 3720, column: 19, scope: !9434)
!9443 = !DILocalVariable(name: "em", scope: !9434, file: !3, line: 3721, type: !4133)
!9444 = !DILocation(line: 3721, column: 14, scope: !9434)
!9445 = !DILocation(line: 3721, column: 44, scope: !9434)
!9446 = !DILocation(line: 3721, column: 19, scope: !9434)
!9447 = !DILocalVariable(name: "thresh", scope: !9434, file: !3, line: 3722, type: !4150)
!9448 = !DILocation(line: 3722, column: 14, scope: !9434)
!9449 = !DILocation(line: 3722, column: 37, scope: !9434)
!9450 = !DILocation(line: 3722, column: 41, scope: !9434)
!9451 = !DILocation(line: 3722, column: 23, scope: !9434)
!9452 = !DILocalVariable(name: "bm", scope: !9434, file: !3, line: 3723, type: !3610)
!9453 = !DILocation(line: 3723, column: 9, scope: !9434)
!9454 = !DILocation(line: 3723, column: 14, scope: !9434)
!9455 = !DILocation(line: 3723, column: 18, scope: !9434)
!9456 = !DILocalVariable(name: "totelem", scope: !9434, file: !3, line: 3724, type: !4840)
!9457 = !DILocation(line: 3724, column: 12, scope: !9434)
!9458 = !DILocation(line: 3724, column: 25, scope: !9434)
!9459 = !DILocation(line: 3724, column: 26, scope: !9434)
!9460 = !DILocation(line: 3724, column: 30, scope: !9434)
!9461 = !DILocation(line: 3724, column: 39, scope: !9434)
!9462 = !DILocation(line: 3724, column: 43, scope: !9434)
!9463 = !DILocation(line: 3724, column: 52, scope: !9434)
!9464 = !DILocation(line: 3724, column: 56, scope: !9434)
!9465 = !DILocation(line: 3727, column: 10, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9434, file: !3, line: 3726, column: 6)
!9467 = !DILocation(line: 3727, column: 14, scope: !9466)
!9468 = !DILocation(line: 3729, column: 26, scope: !9466)
!9469 = !DILocation(line: 3726, column: 7, scope: !9466)
!9470 = !DILocation(line: 3726, column: 6, scope: !9434)
!9471 = !DILocation(line: 3731, column: 3, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 3730, column: 2)
!9473 = !DILocation(line: 3735, column: 20, scope: !9434)
!9474 = !DILocation(line: 3735, column: 2, scope: !9434)
!9475 = !DILocation(line: 3737, column: 22, scope: !9434)
!9476 = !DILocation(line: 3737, column: 2, scope: !9434)
!9477 = !DILocation(line: 3739, column: 26, scope: !9434)
!9478 = !DILocation(line: 3739, column: 30, scope: !9434)
!9479 = !DILocation(line: 3739, column: 39, scope: !9434)
!9480 = !DILocation(line: 3739, column: 43, scope: !9434)
!9481 = !DILocation(line: 3739, column: 2, scope: !9434)
!9482 = !DILocation(line: 3741, column: 2, scope: !9434)
!9483 = !DILocation(line: 3742, column: 1, scope: !9434)
!9484 = distinct !DISubprogram(name: "MESH_OT_delete_edgeloop", scope: !3, file: !3, line: 3802, type: !3767, scopeLine: 3803, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9485 = !DILocalVariable(name: "ot", arg: 1, scope: !9484, file: !3, line: 3802, type: !3769)
!9486 = !DILocation(line: 3802, column: 46, scope: !9484)
!9487 = !DILocation(line: 3805, column: 2, scope: !9484)
!9488 = !DILocation(line: 3805, column: 6, scope: !9484)
!9489 = !DILocation(line: 3805, column: 11, scope: !9484)
!9490 = !DILocation(line: 3806, column: 2, scope: !9484)
!9491 = !DILocation(line: 3806, column: 6, scope: !9484)
!9492 = !DILocation(line: 3806, column: 18, scope: !9484)
!9493 = !DILocation(line: 3807, column: 2, scope: !9484)
!9494 = !DILocation(line: 3807, column: 6, scope: !9484)
!9495 = !DILocation(line: 3807, column: 13, scope: !9484)
!9496 = !DILocation(line: 3810, column: 2, scope: !9484)
!9497 = !DILocation(line: 3810, column: 6, scope: !9484)
!9498 = !DILocation(line: 3810, column: 11, scope: !9484)
!9499 = !DILocation(line: 3811, column: 2, scope: !9484)
!9500 = !DILocation(line: 3811, column: 6, scope: !9484)
!9501 = !DILocation(line: 3811, column: 11, scope: !9484)
!9502 = !DILocation(line: 3814, column: 2, scope: !9484)
!9503 = !DILocation(line: 3814, column: 6, scope: !9484)
!9504 = !DILocation(line: 3814, column: 11, scope: !9484)
!9505 = !DILocation(line: 3816, column: 18, scope: !9484)
!9506 = !DILocation(line: 3816, column: 22, scope: !9484)
!9507 = !DILocation(line: 3816, column: 2, scope: !9484)
!9508 = !DILocation(line: 3818, column: 1, scope: !9484)
!9509 = distinct !DISubprogram(name: "edbm_delete_edgeloop_exec", scope: !3, file: !3, line: 3764, type: !4116, scopeLine: 3765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9510 = !DILocalVariable(name: "C", arg: 1, scope: !9509, file: !3, line: 3764, type: !4118)
!9511 = !DILocation(line: 3764, column: 48, scope: !9509)
!9512 = !DILocalVariable(name: "op", arg: 2, scope: !9509, file: !3, line: 3764, type: !4120)
!9513 = !DILocation(line: 3764, column: 63, scope: !9509)
!9514 = !DILocalVariable(name: "obedit", scope: !9509, file: !3, line: 3766, type: !4127)
!9515 = !DILocation(line: 3766, column: 10, scope: !9509)
!9516 = !DILocation(line: 3766, column: 40, scope: !9509)
!9517 = !DILocation(line: 3766, column: 19, scope: !9509)
!9518 = !DILocalVariable(name: "em", scope: !9509, file: !3, line: 3767, type: !4133)
!9519 = !DILocation(line: 3767, column: 14, scope: !9509)
!9520 = !DILocation(line: 3767, column: 44, scope: !9509)
!9521 = !DILocation(line: 3767, column: 19, scope: !9509)
!9522 = !DILocalVariable(name: "use_face_split", scope: !9509, file: !3, line: 3769, type: !4811)
!9523 = !DILocation(line: 3769, column: 13, scope: !9509)
!9524 = !DILocation(line: 3769, column: 46, scope: !9509)
!9525 = !DILocation(line: 3769, column: 50, scope: !9509)
!9526 = !DILocation(line: 3769, column: 30, scope: !9509)
!9527 = !DILocalVariable(name: "e", scope: !9528, file: !3, line: 3773, type: !1418)
!9528 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 3772, column: 2)
!9529 = !DILocation(line: 3773, column: 11, scope: !9528)
!9530 = !DILocalVariable(name: "iter", scope: !9528, file: !3, line: 3774, type: !4456)
!9531 = !DILocation(line: 3774, column: 10, scope: !9528)
!9532 = !DILocation(line: 3776, column: 34, scope: !9528)
!9533 = !DILocation(line: 3776, column: 38, scope: !9528)
!9534 = !DILocation(line: 3776, column: 3, scope: !9528)
!9535 = !DILocation(line: 3778, column: 3, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9528, file: !3, line: 3778, column: 3)
!9537 = !DILocation(line: 3778, column: 3, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 3778, column: 3)
!9539 = !DILocation(line: 3779, column: 8, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 3779, column: 8)
!9541 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 3778, column: 53)
!9542 = !DILocation(line: 3779, column: 45, scope: !9540)
!9543 = !DILocation(line: 3779, column: 48, scope: !9540)
!9544 = !DILocation(line: 3779, column: 51, scope: !9540)
!9545 = !DILocation(line: 3779, column: 8, scope: !9541)
!9546 = !DILocalVariable(name: "l_iter", scope: !9547, file: !3, line: 3780, type: !1402)
!9547 = distinct !DILexicalBlock(scope: !9540, file: !3, line: 3779, column: 54)
!9548 = !DILocation(line: 3780, column: 13, scope: !9547)
!9549 = !DILocation(line: 3780, column: 22, scope: !9547)
!9550 = !DILocation(line: 3780, column: 25, scope: !9547)
!9551 = !DILocation(line: 3781, column: 5, scope: !9547)
!9552 = !DILocation(line: 3782, column: 6, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9547, file: !3, line: 3781, column: 8)
!9554 = !DILocation(line: 3783, column: 5, scope: !9553)
!9555 = !DILocation(line: 3783, column: 24, scope: !9547)
!9556 = !DILocation(line: 3783, column: 32, scope: !9547)
!9557 = !DILocation(line: 3783, column: 22, scope: !9547)
!9558 = !DILocation(line: 3783, column: 48, scope: !9547)
!9559 = !DILocation(line: 3783, column: 51, scope: !9547)
!9560 = !DILocation(line: 3783, column: 45, scope: !9547)
!9561 = distinct !{!9561, !9551, !9562}
!9562 = !DILocation(line: 3783, column: 52, scope: !9547)
!9563 = !DILocation(line: 3784, column: 4, scope: !9547)
!9564 = !DILocation(line: 3785, column: 3, scope: !9541)
!9565 = distinct !{!9565, !9535, !9566}
!9566 = !DILocation(line: 3785, column: 3, scope: !9536)
!9567 = !DILocation(line: 3788, column: 21, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 3788, column: 6)
!9569 = !DILocation(line: 3788, column: 25, scope: !9568)
!9570 = !DILocation(line: 3790, column: 43, scope: !9568)
!9571 = !DILocation(line: 3788, column: 7, scope: !9568)
!9572 = !DILocation(line: 3788, column: 6, scope: !9509)
!9573 = !DILocation(line: 3792, column: 3, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 3791, column: 2)
!9575 = !DILocation(line: 3795, column: 33, scope: !9509)
!9576 = !DILocation(line: 3795, column: 37, scope: !9509)
!9577 = !DILocation(line: 3795, column: 2, scope: !9509)
!9578 = !DILocation(line: 3797, column: 22, scope: !9509)
!9579 = !DILocation(line: 3797, column: 2, scope: !9509)
!9580 = !DILocation(line: 3799, column: 2, scope: !9509)
!9581 = !DILocation(line: 3800, column: 1, scope: !9509)
!9582 = distinct !DISubprogram(name: "MESH_OT_split", scope: !3, file: !3, line: 3842, type: !3767, scopeLine: 3843, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9583 = !DILocalVariable(name: "ot", arg: 1, scope: !9582, file: !3, line: 3842, type: !3769)
!9584 = !DILocation(line: 3842, column: 36, scope: !9582)
!9585 = !DILocation(line: 3845, column: 2, scope: !9582)
!9586 = !DILocation(line: 3845, column: 6, scope: !9582)
!9587 = !DILocation(line: 3845, column: 11, scope: !9582)
!9588 = !DILocation(line: 3846, column: 2, scope: !9582)
!9589 = !DILocation(line: 3846, column: 6, scope: !9582)
!9590 = !DILocation(line: 3846, column: 13, scope: !9582)
!9591 = !DILocation(line: 3847, column: 2, scope: !9582)
!9592 = !DILocation(line: 3847, column: 6, scope: !9582)
!9593 = !DILocation(line: 3847, column: 18, scope: !9582)
!9594 = !DILocation(line: 3850, column: 2, scope: !9582)
!9595 = !DILocation(line: 3850, column: 6, scope: !9582)
!9596 = !DILocation(line: 3850, column: 11, scope: !9582)
!9597 = !DILocation(line: 3851, column: 2, scope: !9582)
!9598 = !DILocation(line: 3851, column: 6, scope: !9582)
!9599 = !DILocation(line: 3851, column: 11, scope: !9582)
!9600 = !DILocation(line: 3854, column: 2, scope: !9582)
!9601 = !DILocation(line: 3854, column: 6, scope: !9582)
!9602 = !DILocation(line: 3854, column: 11, scope: !9582)
!9603 = !DILocation(line: 3855, column: 1, scope: !9582)
!9604 = distinct !DISubprogram(name: "edbm_split_exec", scope: !3, file: !3, line: 3820, type: !4116, scopeLine: 3821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9605 = !DILocalVariable(name: "C", arg: 1, scope: !9604, file: !3, line: 3820, type: !4118)
!9606 = !DILocation(line: 3820, column: 38, scope: !9604)
!9607 = !DILocalVariable(name: "op", arg: 2, scope: !9604, file: !3, line: 3820, type: !4120)
!9608 = !DILocation(line: 3820, column: 53, scope: !9604)
!9609 = !DILocalVariable(name: "ob", scope: !9604, file: !3, line: 3822, type: !4127)
!9610 = !DILocation(line: 3822, column: 10, scope: !9604)
!9611 = !DILocation(line: 3822, column: 36, scope: !9604)
!9612 = !DILocation(line: 3822, column: 15, scope: !9604)
!9613 = !DILocalVariable(name: "em", scope: !9604, file: !3, line: 3823, type: !4133)
!9614 = !DILocation(line: 3823, column: 14, scope: !9604)
!9615 = !DILocation(line: 3823, column: 44, scope: !9604)
!9616 = !DILocation(line: 3823, column: 19, scope: !9604)
!9617 = !DILocalVariable(name: "bmop", scope: !9604, file: !3, line: 3824, type: !4335)
!9618 = !DILocation(line: 3824, column: 13, scope: !9604)
!9619 = !DILocation(line: 3826, column: 15, scope: !9604)
!9620 = !DILocation(line: 3826, column: 26, scope: !9604)
!9621 = !DILocation(line: 3826, column: 2, scope: !9604)
!9622 = !DILocation(line: 3827, column: 14, scope: !9604)
!9623 = !DILocation(line: 3827, column: 18, scope: !9604)
!9624 = !DILocation(line: 3827, column: 2, scope: !9604)
!9625 = !DILocation(line: 3828, column: 33, scope: !9604)
!9626 = !DILocation(line: 3828, column: 37, scope: !9604)
!9627 = !DILocation(line: 3828, column: 2, scope: !9604)
!9628 = !DILocation(line: 3829, column: 31, scope: !9604)
!9629 = !DILocation(line: 3829, column: 35, scope: !9604)
!9630 = !DILocation(line: 3829, column: 44, scope: !9604)
!9631 = !DILocation(line: 3829, column: 39, scope: !9604)
!9632 = !DILocation(line: 3829, column: 2, scope: !9604)
!9633 = !DILocation(line: 3830, column: 22, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 3830, column: 6)
!9635 = !DILocation(line: 3830, column: 33, scope: !9634)
!9636 = !DILocation(line: 3830, column: 7, scope: !9634)
!9637 = !DILocation(line: 3830, column: 6, scope: !9604)
!9638 = !DILocation(line: 3831, column: 3, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 3830, column: 44)
!9640 = !DILocation(line: 3835, column: 27, scope: !9604)
!9641 = !DILocation(line: 3835, column: 2, scope: !9604)
!9642 = !DILocation(line: 3837, column: 22, scope: !9604)
!9643 = !DILocation(line: 3837, column: 2, scope: !9604)
!9644 = !DILocation(line: 3839, column: 2, scope: !9604)
!9645 = !DILocation(line: 3840, column: 1, scope: !9604)
!9646 = !DILocalVariable(name: "ot", arg: 1, scope: !4040, file: !3, line: 4395, type: !3769)
!9647 = !DILocation(line: 4395, column: 44, scope: !4040)
!9648 = !DILocation(line: 4422, column: 2, scope: !4040)
!9649 = !DILocation(line: 4422, column: 6, scope: !4040)
!9650 = !DILocation(line: 4422, column: 11, scope: !4040)
!9651 = !DILocation(line: 4423, column: 2, scope: !4040)
!9652 = !DILocation(line: 4423, column: 6, scope: !4040)
!9653 = !DILocation(line: 4423, column: 18, scope: !4040)
!9654 = !DILocation(line: 4424, column: 2, scope: !4040)
!9655 = !DILocation(line: 4424, column: 6, scope: !4040)
!9656 = !DILocation(line: 4424, column: 13, scope: !4040)
!9657 = !DILocation(line: 4427, column: 2, scope: !4040)
!9658 = !DILocation(line: 4427, column: 6, scope: !4040)
!9659 = !DILocation(line: 4427, column: 13, scope: !4040)
!9660 = !DILocation(line: 4428, column: 2, scope: !4040)
!9661 = !DILocation(line: 4428, column: 6, scope: !4040)
!9662 = !DILocation(line: 4428, column: 11, scope: !4040)
!9663 = !DILocation(line: 4429, column: 2, scope: !4040)
!9664 = !DILocation(line: 4429, column: 6, scope: !4040)
!9665 = !DILocation(line: 4429, column: 11, scope: !4040)
!9666 = !DILocation(line: 4430, column: 2, scope: !4040)
!9667 = !DILocation(line: 4430, column: 6, scope: !4040)
!9668 = !DILocation(line: 4430, column: 9, scope: !4040)
!9669 = !DILocation(line: 4433, column: 2, scope: !4040)
!9670 = !DILocation(line: 4433, column: 6, scope: !4040)
!9671 = !DILocation(line: 4433, column: 11, scope: !4040)
!9672 = !DILocation(line: 4436, column: 26, scope: !4040)
!9673 = !DILocation(line: 4436, column: 30, scope: !4040)
!9674 = !DILocation(line: 4436, column: 13, scope: !4040)
!9675 = !DILocation(line: 4436, column: 2, scope: !4040)
!9676 = !DILocation(line: 4436, column: 6, scope: !4040)
!9677 = !DILocation(line: 4436, column: 11, scope: !4040)
!9678 = !DILocation(line: 4437, column: 20, scope: !4040)
!9679 = !DILocation(line: 4437, column: 24, scope: !4040)
!9680 = !DILocation(line: 4437, column: 2, scope: !4040)
!9681 = !DILocation(line: 4439, column: 18, scope: !4040)
!9682 = !DILocation(line: 4439, column: 22, scope: !4040)
!9683 = !DILocation(line: 4439, column: 2, scope: !4040)
!9684 = !DILocation(line: 4440, column: 14, scope: !4040)
!9685 = !DILocation(line: 4440, column: 18, scope: !4040)
!9686 = !DILocation(line: 4440, column: 2, scope: !4040)
!9687 = !DILocation(line: 4441, column: 1, scope: !4040)
!9688 = distinct !DISubprogram(name: "edbm_sort_elements_exec", scope: !3, file: !3, line: 4317, type: !4116, scopeLine: 4318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9689 = !DILocalVariable(name: "C", arg: 1, scope: !9688, file: !3, line: 4317, type: !4118)
!9690 = !DILocation(line: 4317, column: 46, scope: !9688)
!9691 = !DILocalVariable(name: "op", arg: 2, scope: !9688, file: !3, line: 4317, type: !4120)
!9692 = !DILocation(line: 4317, column: 61, scope: !9688)
!9693 = !DILocalVariable(name: "scene", scope: !9688, file: !3, line: 4319, type: !5145)
!9694 = !DILocation(line: 4319, column: 9, scope: !9688)
!9695 = !DILocation(line: 4319, column: 32, scope: !9688)
!9696 = !DILocation(line: 4319, column: 17, scope: !9688)
!9697 = !DILocalVariable(name: "ob", scope: !9688, file: !3, line: 4320, type: !4127)
!9698 = !DILocation(line: 4320, column: 10, scope: !9688)
!9699 = !DILocation(line: 4320, column: 36, scope: !9688)
!9700 = !DILocation(line: 4320, column: 15, scope: !9688)
!9701 = !DILocalVariable(name: "v3d", scope: !9688, file: !3, line: 4323, type: !6762)
!9702 = !DILocation(line: 4323, column: 10, scope: !9688)
!9703 = !DILocation(line: 4323, column: 30, scope: !9688)
!9704 = !DILocation(line: 4323, column: 16, scope: !9688)
!9705 = !DILocalVariable(name: "rv3d", scope: !9688, file: !3, line: 4324, type: !9706)
!9706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9707, size: 64)
!9707 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionView3D", file: !6764, line: 148, baseType: !9708)
!9708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !6764, line: 85, size: 7040, elements: !9709)
!9709 = !{!9710, !9711, !9712, !9713, !9714, !9715, !9716, !9717, !9720, !9721, !9722, !9724, !9727, !9739, !9740, !9743, !9744, !9745, !9746, !9747, !9748, !9749, !9750, !9751, !9752, !9753, !9754, !9755, !9756, !9757, !9758, !9759, !9760, !9761, !9762, !9763, !9764, !9765, !9766, !9767}
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !9708, file: !6764, line: 87, baseType: !1854, size: 512)
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !9708, file: !6764, line: 88, baseType: !1854, size: 512, offset: 512)
!9712 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !9708, file: !6764, line: 89, baseType: !1854, size: 512, offset: 1024)
!9713 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !9708, file: !6764, line: 90, baseType: !1854, size: 512, offset: 1536)
!9714 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !9708, file: !6764, line: 91, baseType: !1854, size: 512, offset: 2048)
!9715 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !9708, file: !6764, line: 94, baseType: !1854, size: 512, offset: 2560)
!9716 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !9708, file: !6764, line: 95, baseType: !1854, size: 512, offset: 3072)
!9717 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !9708, file: !6764, line: 99, baseType: !9718, size: 768, offset: 3584)
!9718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1344, size: 768, elements: !9719)
!9719 = !{!2758, !1681}
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !9708, file: !6764, line: 100, baseType: !9718, size: 768, offset: 4352)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !9708, file: !6764, line: 101, baseType: !1505, size: 64, offset: 5120)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !9708, file: !6764, line: 103, baseType: !9723, size: 64, offset: 5184)
!9723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9708, size: 64)
!9724 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !9708, file: !6764, line: 104, baseType: !9725, size: 64, offset: 5248)
!9725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9726, size: 64)
!9726 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !6764, line: 44, flags: DIFlagFwdDecl)
!9727 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !9708, file: !6764, line: 105, baseType: !9728, size: 64, offset: 5312)
!9728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9729, size: 64)
!9729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !113, line: 77, size: 320, elements: !9730)
!9730 = !{!9731, !9732, !9733, !9734, !9735, !9736, !9738}
!9731 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !9729, file: !113, line: 78, baseType: !1890, size: 16)
!9732 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !9729, file: !113, line: 78, baseType: !1890, size: 16, offset: 16)
!9733 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !9729, file: !113, line: 79, baseType: !1373, size: 16, offset: 32)
!9734 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !9729, file: !113, line: 79, baseType: !1373, size: 16, offset: 48)
!9735 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !9729, file: !113, line: 80, baseType: !3277, size: 64, offset: 64)
!9736 = !DIDerivedType(tag: DW_TAG_member, name: "depth_range", scope: !9729, file: !113, line: 81, baseType: !9737, size: 128, offset: 128)
!9737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3891, size: 128, elements: !1965)
!9738 = !DIDerivedType(tag: DW_TAG_member, name: "damaged", scope: !9729, file: !113, line: 83, baseType: !2530, size: 8, offset: 256)
!9739 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !9708, file: !6764, line: 106, baseType: !1343, size: 64, offset: 5376)
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !9708, file: !6764, line: 109, baseType: !9741, size: 64, offset: 5440)
!9741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9742, size: 64)
!9742 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !6764, line: 46, flags: DIFlagFwdDecl)
!9743 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !9708, file: !6764, line: 110, baseType: !3815, size: 64, offset: 5504)
!9744 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !9708, file: !6764, line: 114, baseType: !1854, size: 512, offset: 5568)
!9745 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !9708, file: !6764, line: 116, baseType: !1679, size: 128, offset: 6080)
!9746 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !9708, file: !6764, line: 117, baseType: !1344, size: 32, offset: 6208)
!9747 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !9708, file: !6764, line: 118, baseType: !1344, size: 32, offset: 6240)
!9748 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !9708, file: !6764, line: 118, baseType: !1344, size: 32, offset: 6272)
!9749 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !9708, file: !6764, line: 119, baseType: !1344, size: 32, offset: 6304)
!9750 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !9708, file: !6764, line: 120, baseType: !1375, size: 96, offset: 6336)
!9751 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !9708, file: !6764, line: 122, baseType: !1344, size: 32, offset: 6432)
!9752 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !9708, file: !6764, line: 123, baseType: !1365, size: 8, offset: 6464)
!9753 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !9708, file: !6764, line: 125, baseType: !1365, size: 8, offset: 6472)
!9754 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !9708, file: !6764, line: 126, baseType: !1365, size: 8, offset: 6480)
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !9708, file: !6764, line: 127, baseType: !1365, size: 8, offset: 6488)
!9756 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !9708, file: !6764, line: 128, baseType: !1365, size: 8, offset: 6496)
!9757 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9708, file: !6764, line: 129, baseType: !2499, size: 24, offset: 6504)
!9758 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !9708, file: !6764, line: 130, baseType: !1964, size: 64, offset: 6528)
!9759 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !9708, file: !6764, line: 132, baseType: !1373, size: 16, offset: 6592)
!9760 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !9708, file: !6764, line: 133, baseType: !1373, size: 16, offset: 6608)
!9761 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !9708, file: !6764, line: 137, baseType: !1679, size: 128, offset: 6624)
!9762 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !9708, file: !6764, line: 138, baseType: !1373, size: 16, offset: 6752)
!9763 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !9708, file: !6764, line: 138, baseType: !1373, size: 16, offset: 6768)
!9764 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !9708, file: !6764, line: 140, baseType: !1344, size: 32, offset: 6784)
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !9708, file: !6764, line: 141, baseType: !1375, size: 96, offset: 6816)
!9766 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !9708, file: !6764, line: 145, baseType: !1344, size: 32, offset: 6912)
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !9708, file: !6764, line: 146, baseType: !1375, size: 96, offset: 6944)
!9768 = !DILocation(line: 4324, column: 16, scope: !9688)
!9769 = !DILocation(line: 4324, column: 46, scope: !9688)
!9770 = !DILocation(line: 4324, column: 23, scope: !9688)
!9771 = !DILocalVariable(name: "action", scope: !9688, file: !3, line: 4326, type: !4052)
!9772 = !DILocation(line: 4326, column: 12, scope: !9688)
!9773 = !DILocation(line: 4326, column: 34, scope: !9688)
!9774 = !DILocation(line: 4326, column: 38, scope: !9688)
!9775 = !DILocation(line: 4326, column: 21, scope: !9688)
!9776 = !DILocalVariable(name: "prop_elem_types", scope: !9688, file: !3, line: 4327, type: !3977)
!9777 = !DILocation(line: 4327, column: 15, scope: !9688)
!9778 = !DILocation(line: 4327, column: 58, scope: !9688)
!9779 = !DILocation(line: 4327, column: 62, scope: !9688)
!9780 = !DILocation(line: 4327, column: 33, scope: !9688)
!9781 = !DILocalVariable(name: "use_reverse", scope: !9688, file: !3, line: 4328, type: !4811)
!9782 = !DILocation(line: 4328, column: 13, scope: !9688)
!9783 = !DILocation(line: 4328, column: 43, scope: !9688)
!9784 = !DILocation(line: 4328, column: 47, scope: !9688)
!9785 = !DILocation(line: 4328, column: 27, scope: !9688)
!9786 = !DILocalVariable(name: "seed", scope: !9688, file: !3, line: 4329, type: !7)
!9787 = !DILocation(line: 4329, column: 15, scope: !9688)
!9788 = !DILocation(line: 4329, column: 34, scope: !9688)
!9789 = !DILocation(line: 4329, column: 38, scope: !9688)
!9790 = !DILocation(line: 4329, column: 22, scope: !9688)
!9791 = !DILocalVariable(name: "elem_types", scope: !9688, file: !3, line: 4330, type: !135)
!9792 = !DILocation(line: 4330, column: 6, scope: !9688)
!9793 = !DILocation(line: 4332, column: 6, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 4332, column: 6)
!9795 = !DILocation(line: 4332, column: 6, scope: !9688)
!9796 = !DILocation(line: 4333, column: 7, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 4333, column: 7)
!9798 = distinct !DILexicalBlock(scope: !9794, file: !3, line: 4332, column: 52)
!9799 = !DILocation(line: 4333, column: 12, scope: !9797)
!9800 = !DILocation(line: 4333, column: 7, scope: !9798)
!9801 = !DILocation(line: 4334, column: 15, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 4333, column: 21)
!9803 = !DILocation(line: 4334, column: 19, scope: !9802)
!9804 = !DILocation(line: 4334, column: 4, scope: !9802)
!9805 = !DILocation(line: 4335, column: 4, scope: !9802)
!9806 = !DILocation(line: 4337, column: 2, scope: !9798)
!9807 = !DILocation(line: 4340, column: 26, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 4340, column: 6)
!9809 = !DILocation(line: 4340, column: 30, scope: !9808)
!9810 = !DILocation(line: 4340, column: 35, scope: !9808)
!9811 = !DILocation(line: 4340, column: 6, scope: !9808)
!9812 = !DILocation(line: 4340, column: 6, scope: !9688)
!9813 = !DILocation(line: 4341, column: 38, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 4340, column: 53)
!9815 = !DILocation(line: 4341, column: 42, scope: !9814)
!9816 = !DILocation(line: 4341, column: 47, scope: !9814)
!9817 = !DILocation(line: 4341, column: 16, scope: !9814)
!9818 = !DILocation(line: 4341, column: 14, scope: !9814)
!9819 = !DILocation(line: 4342, column: 2, scope: !9814)
!9820 = !DILocalVariable(name: "em", scope: !9821, file: !3, line: 4344, type: !4133)
!9821 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 4343, column: 7)
!9822 = !DILocation(line: 4344, column: 15, scope: !9821)
!9823 = !DILocation(line: 4344, column: 45, scope: !9821)
!9824 = !DILocation(line: 4344, column: 20, scope: !9821)
!9825 = !DILocation(line: 4345, column: 7, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 4345, column: 7)
!9827 = !DILocation(line: 4345, column: 11, scope: !9826)
!9828 = !DILocation(line: 4345, column: 22, scope: !9826)
!9829 = !DILocation(line: 4345, column: 7, scope: !9821)
!9830 = !DILocation(line: 4346, column: 15, scope: !9826)
!9831 = !DILocation(line: 4346, column: 4, scope: !9826)
!9832 = !DILocation(line: 4347, column: 7, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 4347, column: 7)
!9834 = !DILocation(line: 4347, column: 11, scope: !9833)
!9835 = !DILocation(line: 4347, column: 22, scope: !9833)
!9836 = !DILocation(line: 4347, column: 7, scope: !9821)
!9837 = !DILocation(line: 4348, column: 15, scope: !9833)
!9838 = !DILocation(line: 4348, column: 4, scope: !9833)
!9839 = !DILocation(line: 4349, column: 7, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 4349, column: 7)
!9841 = !DILocation(line: 4349, column: 11, scope: !9840)
!9842 = !DILocation(line: 4349, column: 22, scope: !9840)
!9843 = !DILocation(line: 4349, column: 7, scope: !9821)
!9844 = !DILocation(line: 4350, column: 15, scope: !9840)
!9845 = !DILocation(line: 4350, column: 4, scope: !9840)
!9846 = !DILocation(line: 4351, column: 16, scope: !9821)
!9847 = !DILocation(line: 4351, column: 20, scope: !9821)
!9848 = !DILocation(line: 4351, column: 37, scope: !9821)
!9849 = !DILocation(line: 4351, column: 3, scope: !9821)
!9850 = !DILocation(line: 4354, column: 19, scope: !9688)
!9851 = !DILocation(line: 4354, column: 26, scope: !9688)
!9852 = !DILocation(line: 4354, column: 30, scope: !9688)
!9853 = !DILocation(line: 4354, column: 35, scope: !9688)
!9854 = !DILocation(line: 4355, column: 19, scope: !9688)
!9855 = !DILocation(line: 4355, column: 47, scope: !9688)
!9856 = !DILocation(line: 4355, column: 55, scope: !9688)
!9857 = !DILocation(line: 4355, column: 68, scope: !9688)
!9858 = !DILocation(line: 4354, column: 2, scope: !9688)
!9859 = !DILocation(line: 4356, column: 2, scope: !9688)
!9860 = !DILocation(line: 4357, column: 1, scope: !9688)
!9861 = distinct !DISubprogram(name: "edbm_sort_elements_ui", scope: !3, file: !3, line: 4383, type: !7434, scopeLine: 4384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9862 = !DILocalVariable(name: "C", arg: 1, scope: !9861, file: !3, line: 4383, type: !4118)
!9863 = !DILocation(line: 4383, column: 45, scope: !9861)
!9864 = !DILocalVariable(name: "op", arg: 2, scope: !9861, file: !3, line: 4383, type: !4120)
!9865 = !DILocation(line: 4383, column: 60, scope: !9861)
!9866 = !DILocalVariable(name: "layout", scope: !9861, file: !3, line: 4385, type: !7441)
!9867 = !DILocation(line: 4385, column: 12, scope: !9861)
!9868 = !DILocation(line: 4385, column: 21, scope: !9861)
!9869 = !DILocation(line: 4385, column: 25, scope: !9861)
!9870 = !DILocalVariable(name: "wm", scope: !9861, file: !3, line: 4386, type: !9871)
!9871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9872, size: 64)
!9872 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindowManager", file: !268, line: 160, baseType: !9873)
!9873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !268, line: 128, size: 2816, elements: !9874)
!9874 = !{!9875, !9876, !9877, !9878, !9879, !9880, !9881, !9882, !9883, !9884, !9885, !9886, !9887, !9888, !9889, !9900, !9901, !9902, !9903, !9904, !9905}
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9873, file: !268, line: 129, baseType: !1433, size: 960)
!9876 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !9873, file: !268, line: 131, baseType: !3821, size: 64, offset: 960)
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !9873, file: !268, line: 131, baseType: !3821, size: 64, offset: 1024)
!9878 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !9873, file: !268, line: 132, baseType: !1490, size: 128, offset: 1088)
!9879 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !9873, file: !268, line: 134, baseType: !135, size: 32, offset: 1216)
!9880 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !9873, file: !268, line: 135, baseType: !1373, size: 16, offset: 1248)
!9881 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !9873, file: !268, line: 136, baseType: !1373, size: 16, offset: 1264)
!9882 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !9873, file: !268, line: 138, baseType: !1490, size: 128, offset: 1280)
!9883 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9873, file: !268, line: 140, baseType: !1490, size: 128, offset: 1408)
!9884 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !9873, file: !268, line: 142, baseType: !3807, size: 320, offset: 1536)
!9885 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !9873, file: !268, line: 144, baseType: !1490, size: 128, offset: 1856)
!9886 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !9873, file: !268, line: 146, baseType: !1490, size: 128, offset: 1984)
!9887 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !9873, file: !268, line: 148, baseType: !1490, size: 128, offset: 2112)
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !9873, file: !268, line: 150, baseType: !1490, size: 128, offset: 2240)
!9889 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !9873, file: !268, line: 151, baseType: !9890, size: 64, offset: 2368)
!9890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9891, size: 64)
!9891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !268, line: 310, size: 1344, elements: !9892)
!9892 = !{!9893, !9894, !9895, !9896, !9897, !9898, !9899}
!9893 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9891, file: !268, line: 311, baseType: !9890, size: 64)
!9894 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9891, file: !268, line: 311, baseType: !9890, size: 64, offset: 64)
!9895 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !9891, file: !268, line: 313, baseType: !1480, size: 512, offset: 128)
!9896 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !9891, file: !268, line: 314, baseType: !1480, size: 512, offset: 640)
!9897 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !9891, file: !268, line: 316, baseType: !1490, size: 128, offset: 1152)
!9898 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !9891, file: !268, line: 317, baseType: !135, size: 32, offset: 1280)
!9899 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9891, file: !268, line: 317, baseType: !135, size: 32, offset: 1312)
!9900 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !9873, file: !268, line: 152, baseType: !9890, size: 64, offset: 2432)
!9901 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !9873, file: !268, line: 153, baseType: !9890, size: 64, offset: 2496)
!9902 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !9873, file: !268, line: 155, baseType: !1490, size: 128, offset: 2560)
!9903 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !9873, file: !268, line: 156, baseType: !3815, size: 64, offset: 2688)
!9904 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !9873, file: !268, line: 158, baseType: !1365, size: 8, offset: 2752)
!9905 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !9873, file: !268, line: 159, baseType: !2427, size: 56, offset: 2760)
!9906 = !DILocation(line: 4386, column: 19, scope: !9861)
!9907 = !DILocation(line: 4386, column: 39, scope: !9861)
!9908 = !DILocation(line: 4386, column: 24, scope: !9861)
!9909 = !DILocalVariable(name: "ptr", scope: !9861, file: !3, line: 4387, type: !6935)
!9910 = !DILocation(line: 4387, column: 13, scope: !9861)
!9911 = !DILocation(line: 4389, column: 22, scope: !9861)
!9912 = !DILocation(line: 4389, column: 26, scope: !9861)
!9913 = !DILocation(line: 4389, column: 30, scope: !9861)
!9914 = !DILocation(line: 4389, column: 34, scope: !9861)
!9915 = !DILocation(line: 4389, column: 40, scope: !9861)
!9916 = !DILocation(line: 4389, column: 46, scope: !9861)
!9917 = !DILocation(line: 4389, column: 50, scope: !9861)
!9918 = !DILocation(line: 4389, column: 2, scope: !9861)
!9919 = !DILocation(line: 4392, column: 19, scope: !9861)
!9920 = !DILocation(line: 4392, column: 2, scope: !9861)
!9921 = !DILocation(line: 4393, column: 1, scope: !9861)
!9922 = distinct !DISubprogram(name: "MESH_OT_noise", scope: !3, file: !3, line: 4498, type: !3767, scopeLine: 4499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9923 = !DILocalVariable(name: "ot", arg: 1, scope: !9922, file: !3, line: 4498, type: !3769)
!9924 = !DILocation(line: 4498, column: 36, scope: !9922)
!9925 = !DILocation(line: 4501, column: 2, scope: !9922)
!9926 = !DILocation(line: 4501, column: 6, scope: !9922)
!9927 = !DILocation(line: 4501, column: 11, scope: !9922)
!9928 = !DILocation(line: 4502, column: 2, scope: !9922)
!9929 = !DILocation(line: 4502, column: 6, scope: !9922)
!9930 = !DILocation(line: 4502, column: 18, scope: !9922)
!9931 = !DILocation(line: 4503, column: 2, scope: !9922)
!9932 = !DILocation(line: 4503, column: 6, scope: !9922)
!9933 = !DILocation(line: 4503, column: 13, scope: !9922)
!9934 = !DILocation(line: 4506, column: 2, scope: !9922)
!9935 = !DILocation(line: 4506, column: 6, scope: !9922)
!9936 = !DILocation(line: 4506, column: 11, scope: !9922)
!9937 = !DILocation(line: 4507, column: 2, scope: !9922)
!9938 = !DILocation(line: 4507, column: 6, scope: !9922)
!9939 = !DILocation(line: 4507, column: 11, scope: !9922)
!9940 = !DILocation(line: 4510, column: 2, scope: !9922)
!9941 = !DILocation(line: 4510, column: 6, scope: !9922)
!9942 = !DILocation(line: 4510, column: 11, scope: !9922)
!9943 = !DILocation(line: 4512, column: 16, scope: !9922)
!9944 = !DILocation(line: 4512, column: 20, scope: !9922)
!9945 = !DILocation(line: 4512, column: 2, scope: !9922)
!9946 = !DILocation(line: 4513, column: 1, scope: !9922)
!9947 = distinct !DISubprogram(name: "edbm_noise_exec", scope: !3, file: !3, line: 4445, type: !4116, scopeLine: 4446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!9948 = !DILocalVariable(name: "C", arg: 1, scope: !9947, file: !3, line: 4445, type: !4118)
!9949 = !DILocation(line: 4445, column: 38, scope: !9947)
!9950 = !DILocalVariable(name: "op", arg: 2, scope: !9947, file: !3, line: 4445, type: !4120)
!9951 = !DILocation(line: 4445, column: 53, scope: !9947)
!9952 = !DILocalVariable(name: "obedit", scope: !9947, file: !3, line: 4447, type: !4127)
!9953 = !DILocation(line: 4447, column: 10, scope: !9947)
!9954 = !DILocation(line: 4447, column: 40, scope: !9947)
!9955 = !DILocation(line: 4447, column: 19, scope: !9947)
!9956 = !DILocalVariable(name: "em", scope: !9947, file: !3, line: 4448, type: !4133)
!9957 = !DILocation(line: 4448, column: 14, scope: !9947)
!9958 = !DILocation(line: 4448, column: 44, scope: !9947)
!9959 = !DILocation(line: 4448, column: 19, scope: !9947)
!9960 = !DILocalVariable(name: "ma", scope: !9947, file: !3, line: 4449, type: !9961)
!9961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9962, size: 64)
!9962 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !1563, line: 203, baseType: !1562)
!9963 = !DILocation(line: 4449, column: 12, scope: !9947)
!9964 = !DILocalVariable(name: "tex", scope: !9947, file: !3, line: 4450, type: !9965)
!9965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9966, size: 64)
!9966 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !1689, line: 261, baseType: !3174)
!9967 = !DILocation(line: 4450, column: 7, scope: !9947)
!9968 = !DILocalVariable(name: "eve", scope: !9947, file: !3, line: 4451, type: !1354)
!9969 = !DILocation(line: 4451, column: 10, scope: !9947)
!9970 = !DILocalVariable(name: "iter", scope: !9947, file: !3, line: 4452, type: !4456)
!9971 = !DILocation(line: 4452, column: 9, scope: !9947)
!9972 = !DILocalVariable(name: "fac", scope: !9947, file: !3, line: 4453, type: !4150)
!9973 = !DILocation(line: 4453, column: 14, scope: !9947)
!9974 = !DILocation(line: 4453, column: 34, scope: !9947)
!9975 = !DILocation(line: 4453, column: 38, scope: !9947)
!9976 = !DILocation(line: 4453, column: 20, scope: !9947)
!9977 = !DILocation(line: 4455, column: 6, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 4455, column: 6)
!9979 = !DILocation(line: 4455, column: 9, scope: !9978)
!9980 = !DILocation(line: 4455, column: 6, scope: !9947)
!9981 = !DILocation(line: 4456, column: 3, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 4455, column: 18)
!9983 = !DILocation(line: 4459, column: 35, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 4459, column: 6)
!9985 = !DILocation(line: 4459, column: 43, scope: !9984)
!9986 = !DILocation(line: 4459, column: 51, scope: !9984)
!9987 = !DILocation(line: 4459, column: 13, scope: !9984)
!9988 = !DILocation(line: 4459, column: 11, scope: !9984)
!9989 = !DILocation(line: 4459, column: 60, scope: !9984)
!9990 = !DILocation(line: 4459, column: 68, scope: !9984)
!9991 = !DILocation(line: 4460, column: 43, scope: !9984)
!9992 = !DILocation(line: 4460, column: 13, scope: !9984)
!9993 = !DILocation(line: 4460, column: 11, scope: !9984)
!9994 = !DILocation(line: 4460, column: 48, scope: !9984)
!9995 = !DILocation(line: 4459, column: 6, scope: !9947)
!9996 = !DILocation(line: 4462, column: 14, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 4461, column: 2)
!9998 = !DILocation(line: 4462, column: 18, scope: !9997)
!9999 = !DILocation(line: 4462, column: 3, scope: !9997)
!10000 = !DILocation(line: 4463, column: 3, scope: !9997)
!10001 = !DILocation(line: 4466, column: 6, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 4466, column: 6)
!10003 = !DILocation(line: 4466, column: 11, scope: !10002)
!10004 = !DILocation(line: 4466, column: 16, scope: !10002)
!10005 = !DILocation(line: 4466, column: 6, scope: !9947)
!10006 = !DILocalVariable(name: "b2", scope: !10007, file: !3, line: 4467, type: !1344)
!10007 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 4466, column: 31)
!10008 = !DILocation(line: 4467, column: 9, scope: !10007)
!10009 = !DILocalVariable(name: "vec", scope: !10007, file: !3, line: 4467, type: !1375)
!10010 = !DILocation(line: 4467, column: 13, scope: !10007)
!10011 = !DILocalVariable(name: "ofs", scope: !10007, file: !3, line: 4468, type: !1344)
!10012 = !DILocation(line: 4468, column: 9, scope: !10007)
!10013 = !DILocation(line: 4468, column: 15, scope: !10007)
!10014 = !DILocation(line: 4468, column: 20, scope: !10007)
!10015 = !DILocation(line: 4468, column: 27, scope: !10007)
!10016 = !DILocation(line: 4469, column: 3, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10007, file: !3, line: 4469, column: 3)
!10018 = !DILocation(line: 4469, column: 3, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10017, file: !3, line: 4469, column: 3)
!10020 = !DILocation(line: 4470, column: 8, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10022, file: !3, line: 4470, column: 8)
!10022 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 4469, column: 55)
!10023 = !DILocation(line: 4470, column: 8, scope: !10022)
!10024 = !DILocation(line: 4471, column: 21, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10021, file: !3, line: 4470, column: 48)
!10026 = !DILocation(line: 4471, column: 26, scope: !10025)
!10027 = !DILocation(line: 4471, column: 37, scope: !10025)
!10028 = !DILocation(line: 4471, column: 42, scope: !10025)
!10029 = !DILocation(line: 4471, column: 49, scope: !10025)
!10030 = !DILocation(line: 4471, column: 54, scope: !10025)
!10031 = !DILocation(line: 4471, column: 61, scope: !10025)
!10032 = !DILocation(line: 4471, column: 66, scope: !10025)
!10033 = !DILocation(line: 4471, column: 10, scope: !10025)
!10034 = !DILocation(line: 4471, column: 8, scope: !10025)
!10035 = !DILocation(line: 4472, column: 9, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 4472, column: 9)
!10037 = !DILocation(line: 4472, column: 14, scope: !10036)
!10038 = !DILocation(line: 4472, column: 9, scope: !10025)
!10039 = !DILocation(line: 4472, column: 29, scope: !10036)
!10040 = !DILocation(line: 4472, column: 34, scope: !10036)
!10041 = !DILocation(line: 4472, column: 32, scope: !10036)
!10042 = !DILocation(line: 4472, column: 25, scope: !10036)
!10043 = !DILocation(line: 4472, column: 21, scope: !10036)
!10044 = !DILocation(line: 4473, column: 14, scope: !10025)
!10045 = !DILocation(line: 4473, column: 21, scope: !10025)
!10046 = !DILocation(line: 4473, column: 37, scope: !10025)
!10047 = !DILocation(line: 4473, column: 42, scope: !10025)
!10048 = !DILocation(line: 4473, column: 53, scope: !10025)
!10049 = !DILocation(line: 4473, column: 58, scope: !10025)
!10050 = !DILocation(line: 4473, column: 66, scope: !10025)
!10051 = !DILocation(line: 4473, column: 64, scope: !10025)
!10052 = !DILocation(line: 4473, column: 71, scope: !10025)
!10053 = !DILocation(line: 4473, column: 76, scope: !10025)
!10054 = !DILocation(line: 4473, column: 83, scope: !10025)
!10055 = !DILocation(line: 4473, column: 88, scope: !10025)
!10056 = !DILocation(line: 4473, column: 26, scope: !10025)
!10057 = !DILocation(line: 4473, column: 24, scope: !10025)
!10058 = !DILocation(line: 4473, column: 18, scope: !10025)
!10059 = !DILocation(line: 4473, column: 5, scope: !10025)
!10060 = !DILocation(line: 4473, column: 12, scope: !10025)
!10061 = !DILocation(line: 4474, column: 14, scope: !10025)
!10062 = !DILocation(line: 4474, column: 21, scope: !10025)
!10063 = !DILocation(line: 4474, column: 37, scope: !10025)
!10064 = !DILocation(line: 4474, column: 42, scope: !10025)
!10065 = !DILocation(line: 4474, column: 53, scope: !10025)
!10066 = !DILocation(line: 4474, column: 58, scope: !10025)
!10067 = !DILocation(line: 4474, column: 65, scope: !10025)
!10068 = !DILocation(line: 4474, column: 70, scope: !10025)
!10069 = !DILocation(line: 4474, column: 78, scope: !10025)
!10070 = !DILocation(line: 4474, column: 76, scope: !10025)
!10071 = !DILocation(line: 4474, column: 83, scope: !10025)
!10072 = !DILocation(line: 4474, column: 88, scope: !10025)
!10073 = !DILocation(line: 4474, column: 26, scope: !10025)
!10074 = !DILocation(line: 4474, column: 24, scope: !10025)
!10075 = !DILocation(line: 4474, column: 18, scope: !10025)
!10076 = !DILocation(line: 4474, column: 5, scope: !10025)
!10077 = !DILocation(line: 4474, column: 12, scope: !10025)
!10078 = !DILocation(line: 4475, column: 14, scope: !10025)
!10079 = !DILocation(line: 4475, column: 21, scope: !10025)
!10080 = !DILocation(line: 4475, column: 37, scope: !10025)
!10081 = !DILocation(line: 4475, column: 42, scope: !10025)
!10082 = !DILocation(line: 4475, column: 53, scope: !10025)
!10083 = !DILocation(line: 4475, column: 58, scope: !10025)
!10084 = !DILocation(line: 4475, column: 65, scope: !10025)
!10085 = !DILocation(line: 4475, column: 70, scope: !10025)
!10086 = !DILocation(line: 4475, column: 77, scope: !10025)
!10087 = !DILocation(line: 4475, column: 82, scope: !10025)
!10088 = !DILocation(line: 4475, column: 90, scope: !10025)
!10089 = !DILocation(line: 4475, column: 88, scope: !10025)
!10090 = !DILocation(line: 4475, column: 26, scope: !10025)
!10091 = !DILocation(line: 4475, column: 24, scope: !10025)
!10092 = !DILocation(line: 4475, column: 18, scope: !10025)
!10093 = !DILocation(line: 4475, column: 5, scope: !10025)
!10094 = !DILocation(line: 4475, column: 12, scope: !10025)
!10095 = !DILocation(line: 4477, column: 15, scope: !10025)
!10096 = !DILocation(line: 4477, column: 20, scope: !10025)
!10097 = !DILocation(line: 4477, column: 24, scope: !10025)
!10098 = !DILocation(line: 4477, column: 5, scope: !10025)
!10099 = !DILocation(line: 4478, column: 4, scope: !10025)
!10100 = !DILocation(line: 4479, column: 3, scope: !10022)
!10101 = distinct !{!10101, !10016, !10102}
!10102 = !DILocation(line: 4479, column: 3, scope: !10017)
!10103 = !DILocation(line: 4480, column: 2, scope: !10007)
!10104 = !DILocation(line: 4482, column: 3, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10106, file: !3, line: 4482, column: 3)
!10106 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 4481, column: 7)
!10107 = !DILocation(line: 4482, column: 3, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 4482, column: 3)
!10109 = !DILocation(line: 4483, column: 8, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10111, file: !3, line: 4483, column: 8)
!10111 = distinct !DILexicalBlock(scope: !10108, file: !3, line: 4482, column: 55)
!10112 = !DILocation(line: 4483, column: 8, scope: !10111)
!10113 = !DILocalVariable(name: "tin", scope: !10114, file: !3, line: 4484, type: !1344)
!10114 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 4483, column: 48)
!10115 = !DILocation(line: 4484, column: 11, scope: !10114)
!10116 = !DILocalVariable(name: "dum", scope: !10114, file: !3, line: 4484, type: !1344)
!10117 = !DILocation(line: 4484, column: 16, scope: !10114)
!10118 = !DILocation(line: 4485, column: 15, scope: !10114)
!10119 = !DILocation(line: 4485, column: 19, scope: !10114)
!10120 = !DILocation(line: 4485, column: 28, scope: !10114)
!10121 = !DILocation(line: 4485, column: 33, scope: !10114)
!10122 = !DILocation(line: 4485, column: 5, scope: !10114)
!10123 = !DILocation(line: 4486, column: 19, scope: !10114)
!10124 = !DILocation(line: 4486, column: 25, scope: !10114)
!10125 = !DILocation(line: 4486, column: 23, scope: !10114)
!10126 = !DILocation(line: 4486, column: 5, scope: !10114)
!10127 = !DILocation(line: 4486, column: 10, scope: !10114)
!10128 = !DILocation(line: 4486, column: 16, scope: !10114)
!10129 = !DILocation(line: 4487, column: 4, scope: !10114)
!10130 = !DILocation(line: 4488, column: 3, scope: !10111)
!10131 = distinct !{!10131, !10104, !10132}
!10132 = !DILocation(line: 4488, column: 3, scope: !10105)
!10133 = !DILocation(line: 4491, column: 27, scope: !9947)
!10134 = !DILocation(line: 4491, column: 2, scope: !9947)
!10135 = !DILocation(line: 4493, column: 22, scope: !9947)
!10136 = !DILocation(line: 4493, column: 2, scope: !9947)
!10137 = !DILocation(line: 4495, column: 2, scope: !9947)
!10138 = !DILocation(line: 4496, column: 1, scope: !9947)
!10139 = !DILocalVariable(name: "ot", arg: 1, scope: !4046, file: !3, line: 4660, type: !3769)
!10140 = !DILocation(line: 4660, column: 48, scope: !4046)
!10141 = !DILocation(line: 4670, column: 2, scope: !4046)
!10142 = !DILocation(line: 4670, column: 6, scope: !4046)
!10143 = !DILocation(line: 4670, column: 11, scope: !4046)
!10144 = !DILocation(line: 4671, column: 2, scope: !4046)
!10145 = !DILocation(line: 4671, column: 6, scope: !4046)
!10146 = !DILocation(line: 4671, column: 18, scope: !4046)
!10147 = !DILocation(line: 4672, column: 2, scope: !4046)
!10148 = !DILocation(line: 4672, column: 6, scope: !4046)
!10149 = !DILocation(line: 4672, column: 13, scope: !4046)
!10150 = !DILocation(line: 4675, column: 2, scope: !4046)
!10151 = !DILocation(line: 4675, column: 6, scope: !4046)
!10152 = !DILocation(line: 4675, column: 11, scope: !4046)
!10153 = !DILocation(line: 4676, column: 2, scope: !4046)
!10154 = !DILocation(line: 4676, column: 6, scope: !4046)
!10155 = !DILocation(line: 4676, column: 11, scope: !4046)
!10156 = !DILocation(line: 4679, column: 2, scope: !4046)
!10157 = !DILocation(line: 4679, column: 6, scope: !4046)
!10158 = !DILocation(line: 4679, column: 11, scope: !4046)
!10159 = !DILocation(line: 4681, column: 26, scope: !4046)
!10160 = !DILocation(line: 4681, column: 30, scope: !4046)
!10161 = !DILocation(line: 4681, column: 13, scope: !4046)
!10162 = !DILocation(line: 4681, column: 2, scope: !4046)
!10163 = !DILocation(line: 4681, column: 6, scope: !4046)
!10164 = !DILocation(line: 4681, column: 11, scope: !4046)
!10165 = !DILocation(line: 4684, column: 18, scope: !4046)
!10166 = !DILocation(line: 4684, column: 22, scope: !4046)
!10167 = !DILocation(line: 4684, column: 2, scope: !4046)
!10168 = !DILocation(line: 4685, column: 16, scope: !4046)
!10169 = !DILocation(line: 4685, column: 20, scope: !4046)
!10170 = !DILocation(line: 4685, column: 2, scope: !4046)
!10171 = !DILocation(line: 4686, column: 14, scope: !4046)
!10172 = !DILocation(line: 4686, column: 18, scope: !4046)
!10173 = !DILocation(line: 4686, column: 2, scope: !4046)
!10174 = !DILocation(line: 4688, column: 31, scope: !4046)
!10175 = !DILocation(line: 4688, column: 2, scope: !4046)
!10176 = !DILocation(line: 4689, column: 1, scope: !4046)
!10177 = distinct !DISubprogram(name: "edbm_bridge_edge_loops_exec", scope: !3, file: !3, line: 4558, type: !4116, scopeLine: 4559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!10178 = !DILocalVariable(name: "C", arg: 1, scope: !10177, file: !3, line: 4558, type: !4118)
!10179 = !DILocation(line: 4558, column: 50, scope: !10177)
!10180 = !DILocalVariable(name: "op", arg: 2, scope: !10177, file: !3, line: 4558, type: !4120)
!10181 = !DILocation(line: 4558, column: 65, scope: !10177)
!10182 = !DILocalVariable(name: "bmop", scope: !10177, file: !3, line: 4560, type: !4335)
!10183 = !DILocation(line: 4560, column: 13, scope: !10177)
!10184 = !DILocalVariable(name: "obedit", scope: !10177, file: !3, line: 4561, type: !4127)
!10185 = !DILocation(line: 4561, column: 10, scope: !10177)
!10186 = !DILocation(line: 4561, column: 40, scope: !10177)
!10187 = !DILocation(line: 4561, column: 19, scope: !10177)
!10188 = !DILocalVariable(name: "em", scope: !10177, file: !3, line: 4562, type: !4133)
!10189 = !DILocation(line: 4562, column: 14, scope: !10177)
!10190 = !DILocation(line: 4562, column: 44, scope: !10177)
!10191 = !DILocation(line: 4562, column: 19, scope: !10177)
!10192 = !DILocalVariable(name: "type", scope: !10177, file: !3, line: 4563, type: !4052)
!10193 = !DILocation(line: 4563, column: 12, scope: !10177)
!10194 = !DILocation(line: 4563, column: 32, scope: !10177)
!10195 = !DILocation(line: 4563, column: 36, scope: !10177)
!10196 = !DILocation(line: 4563, column: 19, scope: !10177)
!10197 = !DILocalVariable(name: "use_pairs", scope: !10177, file: !3, line: 4564, type: !4811)
!10198 = !DILocation(line: 4564, column: 13, scope: !10177)
!10199 = !DILocation(line: 4564, column: 26, scope: !10177)
!10200 = !DILocation(line: 4564, column: 31, scope: !10177)
!10201 = !DILocation(line: 4564, column: 25, scope: !10177)
!10202 = !DILocalVariable(name: "use_cyclic", scope: !10177, file: !3, line: 4565, type: !4811)
!10203 = !DILocation(line: 4565, column: 13, scope: !10177)
!10204 = !DILocation(line: 4565, column: 27, scope: !10177)
!10205 = !DILocation(line: 4565, column: 32, scope: !10177)
!10206 = !DILocation(line: 4565, column: 26, scope: !10177)
!10207 = !DILocalVariable(name: "use_merge", scope: !10177, file: !3, line: 4566, type: !4811)
!10208 = !DILocation(line: 4566, column: 13, scope: !10177)
!10209 = !DILocation(line: 4566, column: 41, scope: !10177)
!10210 = !DILocation(line: 4566, column: 45, scope: !10177)
!10211 = !DILocation(line: 4566, column: 25, scope: !10177)
!10212 = !DILocalVariable(name: "merge_factor", scope: !10177, file: !3, line: 4567, type: !4150)
!10213 = !DILocation(line: 4567, column: 14, scope: !10177)
!10214 = !DILocation(line: 4567, column: 43, scope: !10177)
!10215 = !DILocation(line: 4567, column: 47, scope: !10177)
!10216 = !DILocation(line: 4567, column: 29, scope: !10177)
!10217 = !DILocalVariable(name: "twist_offset", scope: !10177, file: !3, line: 4568, type: !4052)
!10218 = !DILocation(line: 4568, column: 12, scope: !10177)
!10219 = !DILocation(line: 4568, column: 39, scope: !10177)
!10220 = !DILocation(line: 4568, column: 43, scope: !10177)
!10221 = !DILocation(line: 4568, column: 27, scope: !10177)
!10222 = !DILocalVariable(name: "use_faces", scope: !10177, file: !3, line: 4569, type: !4811)
!10223 = !DILocation(line: 4569, column: 13, scope: !10177)
!10224 = !DILocation(line: 4569, column: 26, scope: !10177)
!10225 = !DILocation(line: 4569, column: 30, scope: !10177)
!10226 = !DILocation(line: 4569, column: 34, scope: !10177)
!10227 = !DILocation(line: 4569, column: 45, scope: !10177)
!10228 = !DILocation(line: 4569, column: 25, scope: !10177)
!10229 = !DILocalVariable(name: "edge_hflag", scope: !10177, file: !3, line: 4570, type: !1365)
!10230 = !DILocation(line: 4570, column: 7, scope: !10177)
!10231 = !DILocalVariable(name: "totface_del", scope: !10177, file: !3, line: 4572, type: !135)
!10232 = !DILocation(line: 4572, column: 6, scope: !10177)
!10233 = !DILocalVariable(name: "totface_del_arr", scope: !10177, file: !3, line: 4573, type: !3558)
!10234 = !DILocation(line: 4573, column: 11, scope: !10177)
!10235 = !DILocation(line: 4575, column: 6, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10177, file: !3, line: 4575, column: 6)
!10237 = !DILocation(line: 4575, column: 6, scope: !10177)
!10238 = !DILocalVariable(name: "iter", scope: !10239, file: !3, line: 4576, type: !4456)
!10239 = distinct !DILexicalBlock(scope: !10236, file: !3, line: 4575, column: 17)
!10240 = !DILocation(line: 4576, column: 10, scope: !10239)
!10241 = !DILocalVariable(name: "f", scope: !10239, file: !3, line: 4577, type: !1420)
!10242 = !DILocation(line: 4577, column: 11, scope: !10239)
!10243 = !DILocalVariable(name: "i", scope: !10239, file: !3, line: 4578, type: !135)
!10244 = !DILocation(line: 4578, column: 7, scope: !10239)
!10245 = !DILocation(line: 4580, column: 48, scope: !10239)
!10246 = !DILocation(line: 4580, column: 52, scope: !10239)
!10247 = !DILocation(line: 4580, column: 17, scope: !10239)
!10248 = !DILocation(line: 4580, column: 15, scope: !10239)
!10249 = !DILocation(line: 4581, column: 21, scope: !10239)
!10250 = !DILocation(line: 4581, column: 60, scope: !10239)
!10251 = !DILocation(line: 4581, column: 58, scope: !10239)
!10252 = !DILocation(line: 4581, column: 19, scope: !10239)
!10253 = !DILocation(line: 4583, column: 5, scope: !10239)
!10254 = !DILocation(line: 4584, column: 3, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 4584, column: 3)
!10256 = !DILocation(line: 4584, column: 3, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 4584, column: 3)
!10258 = !DILocation(line: 4585, column: 8, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10260, file: !3, line: 4585, column: 8)
!10260 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 4584, column: 53)
!10261 = !DILocation(line: 4585, column: 8, scope: !10260)
!10262 = !DILocation(line: 4586, column: 28, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10259, file: !3, line: 4585, column: 43)
!10264 = !DILocation(line: 4586, column: 5, scope: !10263)
!10265 = !DILocation(line: 4586, column: 22, scope: !10263)
!10266 = !DILocation(line: 4586, column: 26, scope: !10263)
!10267 = !DILocation(line: 4587, column: 4, scope: !10263)
!10268 = !DILocation(line: 4588, column: 3, scope: !10260)
!10269 = distinct !{!10269, !10254, !10270}
!10270 = !DILocation(line: 4588, column: 3, scope: !10255)
!10271 = !DILocation(line: 4589, column: 14, scope: !10239)
!10272 = !DILocation(line: 4590, column: 2, scope: !10239)
!10273 = !DILocation(line: 4592, column: 14, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10236, file: !3, line: 4591, column: 7)
!10275 = !DILocation(line: 4595, column: 15, scope: !10177)
!10276 = !DILocation(line: 4595, column: 26, scope: !10177)
!10277 = !DILocation(line: 4597, column: 15, scope: !10177)
!10278 = !DILocation(line: 4597, column: 27, scope: !10177)
!10279 = !DILocation(line: 4597, column: 38, scope: !10177)
!10280 = !DILocation(line: 4597, column: 50, scope: !10177)
!10281 = !DILocation(line: 4597, column: 61, scope: !10177)
!10282 = !DILocation(line: 4597, column: 75, scope: !10177)
!10283 = !DILocation(line: 4595, column: 2, scope: !10177)
!10284 = !DILocation(line: 4599, column: 14, scope: !10177)
!10285 = !DILocation(line: 4599, column: 18, scope: !10177)
!10286 = !DILocation(line: 4599, column: 2, scope: !10177)
!10287 = !DILocation(line: 4601, column: 26, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10177, file: !3, line: 4601, column: 6)
!10289 = !DILocation(line: 4601, column: 30, scope: !10288)
!10290 = !DILocation(line: 4601, column: 7, scope: !10288)
!10291 = !DILocation(line: 4601, column: 6, scope: !10177)
!10292 = !DILocation(line: 4603, column: 7, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 4603, column: 7)
!10294 = distinct !DILexicalBlock(scope: !10288, file: !3, line: 4601, column: 35)
!10295 = !DILocation(line: 4603, column: 17, scope: !10293)
!10296 = !DILocation(line: 4603, column: 7, scope: !10294)
!10297 = !DILocation(line: 4604, column: 26, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 4603, column: 27)
!10299 = !DILocation(line: 4604, column: 4, scope: !10298)
!10300 = !DILocation(line: 4605, column: 33, scope: !10298)
!10301 = !DILocation(line: 4605, column: 37, scope: !10298)
!10302 = !DILocation(line: 4605, column: 46, scope: !10298)
!10303 = !DILocation(line: 4605, column: 41, scope: !10298)
!10304 = !DILocation(line: 4605, column: 4, scope: !10298)
!10305 = !DILocation(line: 4606, column: 3, scope: !10298)
!10306 = !DILocation(line: 4608, column: 7, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 4608, column: 7)
!10308 = !DILocation(line: 4608, column: 17, scope: !10307)
!10309 = !DILocation(line: 4608, column: 20, scope: !10307)
!10310 = !DILocation(line: 4608, column: 7, scope: !10294)
!10311 = !DILocalVariable(name: "i", scope: !10312, file: !3, line: 4609, type: !135)
!10312 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 4608, column: 33)
!10313 = !DILocation(line: 4609, column: 8, scope: !10312)
!10314 = !DILocation(line: 4610, column: 35, scope: !10312)
!10315 = !DILocation(line: 4610, column: 39, scope: !10312)
!10316 = !DILocation(line: 4610, column: 4, scope: !10312)
!10317 = !DILocation(line: 4611, column: 11, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 4611, column: 4)
!10319 = !DILocation(line: 4611, column: 9, scope: !10318)
!10320 = !DILocation(line: 4611, column: 16, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 4611, column: 4)
!10322 = !DILocation(line: 4611, column: 20, scope: !10321)
!10323 = !DILocation(line: 4611, column: 18, scope: !10321)
!10324 = !DILocation(line: 4611, column: 4, scope: !10318)
!10325 = !DILocation(line: 4612, column: 5, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 4611, column: 38)
!10327 = !DILocation(line: 4613, column: 4, scope: !10326)
!10328 = !DILocation(line: 4611, column: 34, scope: !10321)
!10329 = !DILocation(line: 4611, column: 4, scope: !10321)
!10330 = distinct !{!10330, !10324, !10331}
!10331 = !DILocation(line: 4613, column: 4, scope: !10318)
!10332 = !DILocation(line: 4614, column: 17, scope: !10312)
!10333 = !DILocation(line: 4614, column: 21, scope: !10312)
!10334 = !DILocation(line: 4614, column: 4, scope: !10312)
!10335 = !DILocation(line: 4617, column: 3, scope: !10312)
!10336 = !DILocation(line: 4619, column: 7, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 4619, column: 7)
!10338 = !DILocation(line: 4619, column: 17, scope: !10337)
!10339 = !DILocation(line: 4619, column: 7, scope: !10294)
!10340 = !DILocalVariable(name: "op_props", scope: !10341, file: !3, line: 4620, type: !4233)
!10341 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 4619, column: 27)
!10342 = !DILocation(line: 4620, column: 31, scope: !10341)
!10343 = !DILocation(line: 4621, column: 37, scope: !10341)
!10344 = !DILocation(line: 4621, column: 4, scope: !10341)
!10345 = !DILocation(line: 4623, column: 17, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 4623, column: 8)
!10347 = !DILocation(line: 4623, column: 8, scope: !10346)
!10348 = !DILocation(line: 4623, column: 8, scope: !10341)
!10349 = !DILocalVariable(name: "bmop_subd", scope: !10350, file: !3, line: 4624, type: !4335)
!10350 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 4623, column: 23)
!10351 = !DILocation(line: 4624, column: 16, scope: !10350)
!10352 = !DILocation(line: 4626, column: 30, scope: !10350)
!10353 = !DILocation(line: 4626, column: 5, scope: !10350)
!10354 = !DILocation(line: 4629, column: 13, scope: !10350)
!10355 = !DILocation(line: 4629, column: 17, scope: !10350)
!10356 = !DILocation(line: 4629, column: 33, scope: !10350)
!10357 = !DILocation(line: 4629, column: 37, scope: !10350)
!10358 = !DILocation(line: 4632, column: 42, scope: !10350)
!10359 = !DILocation(line: 4632, column: 64, scope: !10350)
!10360 = !DILocation(line: 4632, column: 79, scope: !10350)
!10361 = !DILocation(line: 4632, column: 70, scope: !10350)
!10362 = !DILocation(line: 4633, column: 22, scope: !10350)
!10363 = !DILocation(line: 4633, column: 46, scope: !10350)
!10364 = !DILocation(line: 4633, column: 37, scope: !10350)
!10365 = !DILocation(line: 4628, column: 5, scope: !10350)
!10366 = !DILocation(line: 4635, column: 17, scope: !10350)
!10367 = !DILocation(line: 4635, column: 21, scope: !10350)
!10368 = !DILocation(line: 4635, column: 5, scope: !10350)
!10369 = !DILocation(line: 4637, column: 34, scope: !10350)
!10370 = !DILocation(line: 4637, column: 38, scope: !10350)
!10371 = !DILocation(line: 4637, column: 52, scope: !10350)
!10372 = !DILocation(line: 4637, column: 42, scope: !10350)
!10373 = !DILocation(line: 4637, column: 5, scope: !10350)
!10374 = !DILocation(line: 4639, column: 19, scope: !10350)
!10375 = !DILocation(line: 4639, column: 23, scope: !10350)
!10376 = !DILocation(line: 4639, column: 5, scope: !10350)
!10377 = !DILocation(line: 4641, column: 4, scope: !10350)
!10378 = !DILocation(line: 4642, column: 3, scope: !10341)
!10379 = !DILocation(line: 4643, column: 2, scope: !10294)
!10380 = !DILocation(line: 4645, column: 6, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10177, file: !3, line: 4645, column: 6)
!10382 = !DILocation(line: 4645, column: 6, scope: !10177)
!10383 = !DILocation(line: 4646, column: 3, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10381, file: !3, line: 4645, column: 23)
!10385 = !DILocation(line: 4646, column: 13, scope: !10384)
!10386 = !DILocation(line: 4647, column: 2, scope: !10384)
!10387 = !DILocation(line: 4649, column: 22, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10177, file: !3, line: 4649, column: 6)
!10389 = !DILocation(line: 4649, column: 33, scope: !10388)
!10390 = !DILocation(line: 4649, column: 7, scope: !10388)
!10391 = !DILocation(line: 4649, column: 6, scope: !10177)
!10392 = !DILocation(line: 4652, column: 3, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 4649, column: 44)
!10394 = !DILocation(line: 4655, column: 23, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 4654, column: 7)
!10396 = !DILocation(line: 4655, column: 3, scope: !10395)
!10397 = !DILocation(line: 4656, column: 3, scope: !10395)
!10398 = !DILocation(line: 4658, column: 1, scope: !10177)
!10399 = distinct !DISubprogram(name: "MESH_OT_wireframe", scope: !3, file: !3, line: 4725, type: !3767, scopeLine: 4726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!10400 = !DILocalVariable(name: "ot", arg: 1, scope: !10399, file: !3, line: 4725, type: !3769)
!10401 = !DILocation(line: 4725, column: 40, scope: !10399)
!10402 = !DILocalVariable(name: "prop", scope: !10399, file: !3, line: 4727, type: !3977)
!10403 = !DILocation(line: 4727, column: 15, scope: !10399)
!10404 = !DILocation(line: 4730, column: 2, scope: !10399)
!10405 = !DILocation(line: 4730, column: 6, scope: !10399)
!10406 = !DILocation(line: 4730, column: 11, scope: !10399)
!10407 = !DILocation(line: 4731, column: 2, scope: !10399)
!10408 = !DILocation(line: 4731, column: 6, scope: !10399)
!10409 = !DILocation(line: 4731, column: 13, scope: !10399)
!10410 = !DILocation(line: 4732, column: 2, scope: !10399)
!10411 = !DILocation(line: 4732, column: 6, scope: !10399)
!10412 = !DILocation(line: 4732, column: 18, scope: !10399)
!10413 = !DILocation(line: 4735, column: 2, scope: !10399)
!10414 = !DILocation(line: 4735, column: 6, scope: !10399)
!10415 = !DILocation(line: 4735, column: 11, scope: !10399)
!10416 = !DILocation(line: 4736, column: 2, scope: !10399)
!10417 = !DILocation(line: 4736, column: 6, scope: !10399)
!10418 = !DILocation(line: 4736, column: 11, scope: !10399)
!10419 = !DILocation(line: 4739, column: 2, scope: !10399)
!10420 = !DILocation(line: 4739, column: 6, scope: !10399)
!10421 = !DILocation(line: 4739, column: 11, scope: !10399)
!10422 = !DILocation(line: 4742, column: 18, scope: !10399)
!10423 = !DILocation(line: 4742, column: 22, scope: !10399)
!10424 = !DILocation(line: 4742, column: 2, scope: !10399)
!10425 = !DILocation(line: 4743, column: 18, scope: !10399)
!10426 = !DILocation(line: 4743, column: 22, scope: !10399)
!10427 = !DILocation(line: 4743, column: 2, scope: !10399)
!10428 = !DILocation(line: 4744, column: 18, scope: !10399)
!10429 = !DILocation(line: 4744, column: 22, scope: !10399)
!10430 = !DILocation(line: 4744, column: 2, scope: !10399)
!10431 = !DILocation(line: 4745, column: 18, scope: !10399)
!10432 = !DILocation(line: 4745, column: 22, scope: !10399)
!10433 = !DILocation(line: 4745, column: 2, scope: !10399)
!10434 = !DILocation(line: 4746, column: 23, scope: !10399)
!10435 = !DILocation(line: 4746, column: 27, scope: !10399)
!10436 = !DILocation(line: 4746, column: 9, scope: !10399)
!10437 = !DILocation(line: 4746, column: 7, scope: !10399)
!10438 = !DILocation(line: 4748, column: 28, scope: !10399)
!10439 = !DILocation(line: 4748, column: 2, scope: !10399)
!10440 = !DILocation(line: 4749, column: 16, scope: !10399)
!10441 = !DILocation(line: 4749, column: 20, scope: !10399)
!10442 = !DILocation(line: 4749, column: 2, scope: !10399)
!10443 = !DILocation(line: 4750, column: 18, scope: !10399)
!10444 = !DILocation(line: 4750, column: 22, scope: !10399)
!10445 = !DILocation(line: 4750, column: 2, scope: !10399)
!10446 = !DILocation(line: 4751, column: 23, scope: !10399)
!10447 = !DILocation(line: 4751, column: 27, scope: !10399)
!10448 = !DILocation(line: 4751, column: 9, scope: !10399)
!10449 = !DILocation(line: 4751, column: 7, scope: !10399)
!10450 = !DILocation(line: 4752, column: 28, scope: !10399)
!10451 = !DILocation(line: 4752, column: 2, scope: !10399)
!10452 = !DILocation(line: 4753, column: 1, scope: !10399)
!10453 = distinct !DISubprogram(name: "edbm_wireframe_exec", scope: !3, file: !3, line: 4691, type: !4116, scopeLine: 4692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!10454 = !DILocalVariable(name: "C", arg: 1, scope: !10453, file: !3, line: 4691, type: !4118)
!10455 = !DILocation(line: 4691, column: 42, scope: !10453)
!10456 = !DILocalVariable(name: "op", arg: 2, scope: !10453, file: !3, line: 4691, type: !4120)
!10457 = !DILocation(line: 4691, column: 57, scope: !10453)
!10458 = !DILocalVariable(name: "obedit", scope: !10453, file: !3, line: 4693, type: !4127)
!10459 = !DILocation(line: 4693, column: 10, scope: !10453)
!10460 = !DILocation(line: 4693, column: 40, scope: !10453)
!10461 = !DILocation(line: 4693, column: 19, scope: !10453)
!10462 = !DILocalVariable(name: "em", scope: !10453, file: !3, line: 4694, type: !4133)
!10463 = !DILocation(line: 4694, column: 14, scope: !10453)
!10464 = !DILocation(line: 4694, column: 44, scope: !10453)
!10465 = !DILocation(line: 4694, column: 19, scope: !10453)
!10466 = !DILocalVariable(name: "bmop", scope: !10453, file: !3, line: 4695, type: !4335)
!10467 = !DILocation(line: 4695, column: 13, scope: !10453)
!10468 = !DILocalVariable(name: "use_boundary", scope: !10453, file: !3, line: 4696, type: !4811)
!10469 = !DILocation(line: 4696, column: 13, scope: !10453)
!10470 = !DILocation(line: 4696, column: 51, scope: !10453)
!10471 = !DILocation(line: 4696, column: 55, scope: !10453)
!10472 = !DILocation(line: 4696, column: 35, scope: !10453)
!10473 = !DILocalVariable(name: "use_even_offset", scope: !10453, file: !3, line: 4697, type: !4811)
!10474 = !DILocation(line: 4697, column: 13, scope: !10453)
!10475 = !DILocation(line: 4697, column: 51, scope: !10453)
!10476 = !DILocation(line: 4697, column: 55, scope: !10453)
!10477 = !DILocation(line: 4697, column: 35, scope: !10453)
!10478 = !DILocalVariable(name: "use_replace", scope: !10453, file: !3, line: 4698, type: !4811)
!10479 = !DILocation(line: 4698, column: 13, scope: !10453)
!10480 = !DILocation(line: 4698, column: 51, scope: !10453)
!10481 = !DILocation(line: 4698, column: 55, scope: !10453)
!10482 = !DILocation(line: 4698, column: 35, scope: !10453)
!10483 = !DILocalVariable(name: "use_relative_offset", scope: !10453, file: !3, line: 4699, type: !4811)
!10484 = !DILocation(line: 4699, column: 13, scope: !10453)
!10485 = !DILocation(line: 4699, column: 51, scope: !10453)
!10486 = !DILocation(line: 4699, column: 55, scope: !10453)
!10487 = !DILocation(line: 4699, column: 35, scope: !10453)
!10488 = !DILocalVariable(name: "use_crease", scope: !10453, file: !3, line: 4700, type: !4811)
!10489 = !DILocation(line: 4700, column: 13, scope: !10453)
!10490 = !DILocation(line: 4700, column: 51, scope: !10453)
!10491 = !DILocation(line: 4700, column: 55, scope: !10453)
!10492 = !DILocation(line: 4700, column: 35, scope: !10453)
!10493 = !DILocalVariable(name: "crease_weight", scope: !10453, file: !3, line: 4701, type: !4150)
!10494 = !DILocation(line: 4701, column: 14, scope: !10453)
!10495 = !DILocation(line: 4701, column: 49, scope: !10453)
!10496 = !DILocation(line: 4701, column: 53, scope: !10453)
!10497 = !DILocation(line: 4701, column: 35, scope: !10453)
!10498 = !DILocalVariable(name: "thickness", scope: !10453, file: !3, line: 4702, type: !4150)
!10499 = !DILocation(line: 4702, column: 14, scope: !10453)
!10500 = !DILocation(line: 4702, column: 49, scope: !10453)
!10501 = !DILocation(line: 4702, column: 53, scope: !10453)
!10502 = !DILocation(line: 4702, column: 35, scope: !10453)
!10503 = !DILocalVariable(name: "offset", scope: !10453, file: !3, line: 4703, type: !4150)
!10504 = !DILocation(line: 4703, column: 14, scope: !10453)
!10505 = !DILocation(line: 4703, column: 49, scope: !10453)
!10506 = !DILocation(line: 4703, column: 53, scope: !10453)
!10507 = !DILocation(line: 4703, column: 35, scope: !10453)
!10508 = !DILocation(line: 4705, column: 15, scope: !10453)
!10509 = !DILocation(line: 4705, column: 26, scope: !10453)
!10510 = !DILocation(line: 4708, column: 31, scope: !10453)
!10511 = !DILocation(line: 4708, column: 44, scope: !10453)
!10512 = !DILocation(line: 4708, column: 58, scope: !10453)
!10513 = !DILocation(line: 4708, column: 75, scope: !10453)
!10514 = !DILocation(line: 4709, column: 15, scope: !10453)
!10515 = !DILocation(line: 4709, column: 27, scope: !10453)
!10516 = !DILocation(line: 4709, column: 42, scope: !10453)
!10517 = !DILocation(line: 4709, column: 53, scope: !10453)
!10518 = !DILocation(line: 4705, column: 2, scope: !10453)
!10519 = !DILocation(line: 4711, column: 14, scope: !10453)
!10520 = !DILocation(line: 4711, column: 18, scope: !10453)
!10521 = !DILocation(line: 4711, column: 2, scope: !10453)
!10522 = !DILocation(line: 4713, column: 33, scope: !10453)
!10523 = !DILocation(line: 4713, column: 37, scope: !10453)
!10524 = !DILocation(line: 4713, column: 2, scope: !10453)
!10525 = !DILocation(line: 4714, column: 31, scope: !10453)
!10526 = !DILocation(line: 4714, column: 35, scope: !10453)
!10527 = !DILocation(line: 4714, column: 44, scope: !10453)
!10528 = !DILocation(line: 4714, column: 39, scope: !10453)
!10529 = !DILocation(line: 4714, column: 2, scope: !10453)
!10530 = !DILocation(line: 4716, column: 22, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 4716, column: 6)
!10532 = !DILocation(line: 4716, column: 33, scope: !10531)
!10533 = !DILocation(line: 4716, column: 7, scope: !10531)
!10534 = !DILocation(line: 4716, column: 6, scope: !10453)
!10535 = !DILocation(line: 4717, column: 3, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10531, file: !3, line: 4716, column: 44)
!10537 = !DILocation(line: 4720, column: 23, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10531, file: !3, line: 4719, column: 7)
!10539 = !DILocation(line: 4720, column: 3, scope: !10538)
!10540 = !DILocation(line: 4721, column: 3, scope: !10538)
!10541 = !DILocation(line: 4723, column: 1, scope: !10453)
!10542 = distinct !DISubprogram(name: "MESH_OT_symmetrize", scope: !3, file: !3, line: 4881, type: !10543, scopeLine: 4882, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!10543 = !DISubroutineType(types: !10544)
!10544 = !{null, !3792}
!10545 = !DILocalVariable(name: "ot", arg: 1, scope: !10542, file: !3, line: 4881, type: !3792)
!10546 = !DILocation(line: 4881, column: 48, scope: !10542)
!10547 = !DILocation(line: 4884, column: 2, scope: !10542)
!10548 = !DILocation(line: 4884, column: 6, scope: !10542)
!10549 = !DILocation(line: 4884, column: 11, scope: !10542)
!10550 = !DILocation(line: 4885, column: 2, scope: !10542)
!10551 = !DILocation(line: 4885, column: 6, scope: !10542)
!10552 = !DILocation(line: 4885, column: 18, scope: !10542)
!10553 = !DILocation(line: 4886, column: 2, scope: !10542)
!10554 = !DILocation(line: 4886, column: 6, scope: !10542)
!10555 = !DILocation(line: 4886, column: 13, scope: !10542)
!10556 = !DILocation(line: 4889, column: 2, scope: !10542)
!10557 = !DILocation(line: 4889, column: 6, scope: !10542)
!10558 = !DILocation(line: 4889, column: 11, scope: !10542)
!10559 = !DILocation(line: 4890, column: 2, scope: !10542)
!10560 = !DILocation(line: 4890, column: 6, scope: !10542)
!10561 = !DILocation(line: 4890, column: 11, scope: !10542)
!10562 = !DILocation(line: 4893, column: 2, scope: !10542)
!10563 = !DILocation(line: 4893, column: 6, scope: !10542)
!10564 = !DILocation(line: 4893, column: 11, scope: !10542)
!10565 = !DILocation(line: 4895, column: 26, scope: !10542)
!10566 = !DILocation(line: 4895, column: 30, scope: !10542)
!10567 = !DILocation(line: 4895, column: 13, scope: !10542)
!10568 = !DILocation(line: 4895, column: 2, scope: !10542)
!10569 = !DILocation(line: 4895, column: 6, scope: !10542)
!10570 = !DILocation(line: 4895, column: 11, scope: !10542)
!10571 = !DILocation(line: 4898, column: 16, scope: !10542)
!10572 = !DILocation(line: 4898, column: 20, scope: !10542)
!10573 = !DILocation(line: 4898, column: 2, scope: !10542)
!10574 = !DILocation(line: 4899, column: 1, scope: !10542)
!10575 = distinct !DISubprogram(name: "mesh_symmetrize_exec", scope: !3, file: !3, line: 4854, type: !4116, scopeLine: 4855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!10576 = !DILocalVariable(name: "C", arg: 1, scope: !10575, file: !3, line: 4854, type: !4118)
!10577 = !DILocation(line: 4854, column: 43, scope: !10575)
!10578 = !DILocalVariable(name: "op", arg: 2, scope: !10575, file: !3, line: 4854, type: !4120)
!10579 = !DILocation(line: 4854, column: 58, scope: !10575)
!10580 = !DILocalVariable(name: "obedit", scope: !10575, file: !3, line: 4856, type: !4127)
!10581 = !DILocation(line: 4856, column: 10, scope: !10575)
!10582 = !DILocation(line: 4856, column: 40, scope: !10575)
!10583 = !DILocation(line: 4856, column: 19, scope: !10575)
!10584 = !DILocalVariable(name: "em", scope: !10575, file: !3, line: 4857, type: !4133)
!10585 = !DILocation(line: 4857, column: 14, scope: !10575)
!10586 = !DILocation(line: 4857, column: 44, scope: !10575)
!10587 = !DILocation(line: 4857, column: 19, scope: !10575)
!10588 = !DILocalVariable(name: "bmop", scope: !10575, file: !3, line: 4858, type: !4335)
!10589 = !DILocation(line: 4858, column: 13, scope: !10575)
!10590 = !DILocalVariable(name: "thresh", scope: !10575, file: !3, line: 4860, type: !4150)
!10591 = !DILocation(line: 4860, column: 14, scope: !10575)
!10592 = !DILocation(line: 4860, column: 37, scope: !10575)
!10593 = !DILocation(line: 4860, column: 41, scope: !10575)
!10594 = !DILocation(line: 4860, column: 23, scope: !10575)
!10595 = !DILocation(line: 4862, column: 15, scope: !10575)
!10596 = !DILocation(line: 4862, column: 26, scope: !10575)
!10597 = !DILocation(line: 4864, column: 44, scope: !10575)
!10598 = !DILocation(line: 4864, column: 48, scope: !10575)
!10599 = !DILocation(line: 4864, column: 31, scope: !10575)
!10600 = !DILocation(line: 4864, column: 67, scope: !10575)
!10601 = !DILocation(line: 4862, column: 2, scope: !10575)
!10602 = !DILocation(line: 4865, column: 14, scope: !10575)
!10603 = !DILocation(line: 4865, column: 18, scope: !10575)
!10604 = !DILocation(line: 4865, column: 2, scope: !10575)
!10605 = !DILocation(line: 4867, column: 24, scope: !10575)
!10606 = !DILocation(line: 4867, column: 2, scope: !10575)
!10607 = !DILocation(line: 4869, column: 31, scope: !10575)
!10608 = !DILocation(line: 4869, column: 35, scope: !10575)
!10609 = !DILocation(line: 4869, column: 44, scope: !10575)
!10610 = !DILocation(line: 4869, column: 39, scope: !10575)
!10611 = !DILocation(line: 4869, column: 2, scope: !10575)
!10612 = !DILocation(line: 4871, column: 22, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 4871, column: 6)
!10614 = !DILocation(line: 4871, column: 33, scope: !10613)
!10615 = !DILocation(line: 4871, column: 7, scope: !10613)
!10616 = !DILocation(line: 4871, column: 6, scope: !10575)
!10617 = !DILocation(line: 4872, column: 3, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 4871, column: 44)
!10619 = !DILocation(line: 4875, column: 23, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 4874, column: 7)
!10621 = !DILocation(line: 4875, column: 3, scope: !10620)
!10622 = !DILocation(line: 4876, column: 25, scope: !10620)
!10623 = !DILocation(line: 4876, column: 3, scope: !10620)
!10624 = !DILocation(line: 4877, column: 3, scope: !10620)
!10625 = !DILocation(line: 4879, column: 1, scope: !10575)
!10626 = distinct !DISubprogram(name: "MESH_OT_symmetry_snap", scope: !3, file: !3, line: 5005, type: !10543, scopeLine: 5006, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!10627 = !DILocalVariable(name: "ot", arg: 1, scope: !10626, file: !3, line: 5005, type: !3792)
!10628 = !DILocation(line: 5005, column: 51, scope: !10626)
!10629 = !DILocation(line: 5008, column: 2, scope: !10626)
!10630 = !DILocation(line: 5008, column: 6, scope: !10626)
!10631 = !DILocation(line: 5008, column: 11, scope: !10626)
!10632 = !DILocation(line: 5009, column: 2, scope: !10626)
!10633 = !DILocation(line: 5009, column: 6, scope: !10626)
!10634 = !DILocation(line: 5009, column: 18, scope: !10626)
!10635 = !DILocation(line: 5010, column: 2, scope: !10626)
!10636 = !DILocation(line: 5010, column: 6, scope: !10626)
!10637 = !DILocation(line: 5010, column: 13, scope: !10626)
!10638 = !DILocation(line: 5013, column: 2, scope: !10626)
!10639 = !DILocation(line: 5013, column: 6, scope: !10626)
!10640 = !DILocation(line: 5013, column: 11, scope: !10626)
!10641 = !DILocation(line: 5014, column: 2, scope: !10626)
!10642 = !DILocation(line: 5014, column: 6, scope: !10626)
!10643 = !DILocation(line: 5014, column: 11, scope: !10626)
!10644 = !DILocation(line: 5017, column: 2, scope: !10626)
!10645 = !DILocation(line: 5017, column: 6, scope: !10626)
!10646 = !DILocation(line: 5017, column: 11, scope: !10626)
!10647 = !DILocation(line: 5019, column: 26, scope: !10626)
!10648 = !DILocation(line: 5019, column: 30, scope: !10626)
!10649 = !DILocation(line: 5019, column: 13, scope: !10626)
!10650 = !DILocation(line: 5019, column: 2, scope: !10626)
!10651 = !DILocation(line: 5019, column: 6, scope: !10626)
!10652 = !DILocation(line: 5019, column: 11, scope: !10626)
!10653 = !DILocation(line: 5022, column: 16, scope: !10626)
!10654 = !DILocation(line: 5022, column: 20, scope: !10626)
!10655 = !DILocation(line: 5022, column: 2, scope: !10626)
!10656 = !DILocation(line: 5023, column: 16, scope: !10626)
!10657 = !DILocation(line: 5023, column: 20, scope: !10626)
!10658 = !DILocation(line: 5023, column: 2, scope: !10626)
!10659 = !DILocation(line: 5024, column: 18, scope: !10626)
!10660 = !DILocation(line: 5024, column: 22, scope: !10626)
!10661 = !DILocation(line: 5024, column: 2, scope: !10626)
!10662 = !DILocation(line: 5025, column: 1, scope: !10626)
!10663 = distinct !DISubprogram(name: "mesh_symmetry_snap_exec", scope: !3, file: !3, line: 4901, type: !4116, scopeLine: 4902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!10664 = !DILocalVariable(name: "C", arg: 1, scope: !10663, file: !3, line: 4901, type: !4118)
!10665 = !DILocation(line: 4901, column: 46, scope: !10663)
!10666 = !DILocalVariable(name: "op", arg: 2, scope: !10663, file: !3, line: 4901, type: !4120)
!10667 = !DILocation(line: 4901, column: 61, scope: !10663)
!10668 = !DILocalVariable(name: "eps", scope: !10663, file: !3, line: 4903, type: !4150)
!10669 = !DILocation(line: 4903, column: 14, scope: !10663)
!10670 = !DILocalVariable(name: "eps_sq", scope: !10663, file: !3, line: 4904, type: !4150)
!10671 = !DILocation(line: 4904, column: 14, scope: !10663)
!10672 = !DILocalVariable(name: "obedit", scope: !10663, file: !3, line: 4906, type: !4127)
!10673 = !DILocation(line: 4906, column: 10, scope: !10663)
!10674 = !DILocation(line: 4906, column: 40, scope: !10663)
!10675 = !DILocation(line: 4906, column: 19, scope: !10663)
!10676 = !DILocalVariable(name: "em", scope: !10663, file: !3, line: 4907, type: !4133)
!10677 = !DILocation(line: 4907, column: 14, scope: !10663)
!10678 = !DILocation(line: 4907, column: 44, scope: !10663)
!10679 = !DILocation(line: 4907, column: 19, scope: !10663)
!10680 = !DILocalVariable(name: "bm", scope: !10663, file: !3, line: 4908, type: !3610)
!10681 = !DILocation(line: 4908, column: 9, scope: !10663)
!10682 = !DILocation(line: 4908, column: 14, scope: !10663)
!10683 = !DILocation(line: 4908, column: 18, scope: !10663)
!10684 = !DILocalVariable(name: "index", scope: !10663, file: !3, line: 4909, type: !10685)
!10685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!10686 = !DILocation(line: 4909, column: 7, scope: !10663)
!10687 = !DILocation(line: 4909, column: 15, scope: !10663)
!10688 = !DILocation(line: 4909, column: 27, scope: !10663)
!10689 = !DILocation(line: 4909, column: 31, scope: !10663)
!10690 = !DILocation(line: 4909, column: 39, scope: !10663)
!10691 = !DILocalVariable(name: "use_topology", scope: !10663, file: !3, line: 4910, type: !4811)
!10692 = !DILocation(line: 4910, column: 13, scope: !10663)
!10693 = !DILocalVariable(name: "thresh", scope: !10663, file: !3, line: 4912, type: !4150)
!10694 = !DILocation(line: 4912, column: 14, scope: !10663)
!10695 = !DILocation(line: 4912, column: 37, scope: !10663)
!10696 = !DILocation(line: 4912, column: 41, scope: !10663)
!10697 = !DILocation(line: 4912, column: 23, scope: !10663)
!10698 = !DILocalVariable(name: "fac", scope: !10663, file: !3, line: 4913, type: !4150)
!10699 = !DILocation(line: 4913, column: 14, scope: !10663)
!10700 = !DILocation(line: 4913, column: 34, scope: !10663)
!10701 = !DILocation(line: 4913, column: 38, scope: !10663)
!10702 = !DILocation(line: 4913, column: 20, scope: !10663)
!10703 = !DILocalVariable(name: "use_center", scope: !10663, file: !3, line: 4914, type: !4811)
!10704 = !DILocation(line: 4914, column: 13, scope: !10663)
!10705 = !DILocation(line: 4914, column: 42, scope: !10663)
!10706 = !DILocation(line: 4914, column: 46, scope: !10663)
!10707 = !DILocation(line: 4914, column: 26, scope: !10663)
!10708 = !DILocalVariable(name: "totmirr", scope: !10663, file: !3, line: 4917, type: !135)
!10709 = !DILocation(line: 4917, column: 6, scope: !10663)
!10710 = !DILocalVariable(name: "totfail", scope: !10663, file: !3, line: 4917, type: !135)
!10711 = !DILocation(line: 4917, column: 19, scope: !10663)
!10712 = !DILocalVariable(name: "totfound", scope: !10663, file: !3, line: 4917, type: !135)
!10713 = !DILocation(line: 4917, column: 32, scope: !10663)
!10714 = !DILocalVariable(name: "axis_dir", scope: !10663, file: !3, line: 4920, type: !4052)
!10715 = !DILocation(line: 4920, column: 12, scope: !10663)
!10716 = !DILocation(line: 4920, column: 36, scope: !10663)
!10717 = !DILocation(line: 4920, column: 40, scope: !10663)
!10718 = !DILocation(line: 4920, column: 23, scope: !10663)
!10719 = !DILocalVariable(name: "axis", scope: !10663, file: !3, line: 4921, type: !135)
!10720 = !DILocation(line: 4921, column: 6, scope: !10663)
!10721 = !DILocation(line: 4921, column: 13, scope: !10663)
!10722 = !DILocation(line: 4921, column: 22, scope: !10663)
!10723 = !DILocalVariable(name: "axis_sign", scope: !10663, file: !3, line: 4922, type: !2530)
!10724 = !DILocation(line: 4922, column: 7, scope: !10663)
!10725 = !DILocation(line: 4922, column: 19, scope: !10663)
!10726 = !DILocation(line: 4922, column: 27, scope: !10663)
!10727 = !DILocation(line: 4922, column: 24, scope: !10663)
!10728 = !DILocalVariable(name: "iter", scope: !10663, file: !3, line: 4925, type: !4456)
!10729 = !DILocation(line: 4925, column: 9, scope: !10663)
!10730 = !DILocalVariable(name: "v", scope: !10663, file: !3, line: 4926, type: !1354)
!10731 = !DILocation(line: 4926, column: 10, scope: !10663)
!10732 = !DILocalVariable(name: "i", scope: !10663, file: !3, line: 4927, type: !135)
!10733 = !DILocation(line: 4927, column: 6, scope: !10663)
!10734 = !DILocation(line: 4929, column: 35, scope: !10663)
!10735 = !DILocation(line: 4929, column: 39, scope: !10663)
!10736 = !DILocation(line: 4929, column: 71, scope: !10663)
!10737 = !DILocation(line: 4929, column: 79, scope: !10663)
!10738 = !DILocation(line: 4929, column: 2, scope: !10663)
!10739 = !DILocation(line: 4931, column: 28, scope: !10663)
!10740 = !DILocation(line: 4931, column: 2, scope: !10663)
!10741 = !DILocation(line: 4933, column: 33, scope: !10663)
!10742 = !DILocation(line: 4933, column: 2, scope: !10663)
!10743 = !DILocation(line: 4936, column: 2, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 4936, column: 2)
!10745 = !DILocation(line: 4936, column: 2, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10744, file: !3, line: 4936, column: 2)
!10747 = !DILocation(line: 4937, column: 8, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 4937, column: 7)
!10749 = distinct !DILexicalBlock(scope: !10746, file: !3, line: 4936, column: 57)
!10750 = !DILocation(line: 4937, column: 45, scope: !10748)
!10751 = !DILocation(line: 4937, column: 55, scope: !10748)
!10752 = !DILocation(line: 4938, column: 8, scope: !10748)
!10753 = !DILocation(line: 4938, column: 42, scope: !10748)
!10754 = !DILocation(line: 4937, column: 7, scope: !10749)
!10755 = !DILocalVariable(name: "i_mirr", scope: !10756, file: !3, line: 4940, type: !135)
!10756 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 4939, column: 3)
!10757 = !DILocation(line: 4940, column: 8, scope: !10756)
!10758 = !DILocation(line: 4940, column: 17, scope: !10756)
!10759 = !DILocation(line: 4940, column: 23, scope: !10756)
!10760 = !DILocation(line: 4941, column: 8, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10756, file: !3, line: 4941, column: 8)
!10762 = !DILocation(line: 4941, column: 15, scope: !10761)
!10763 = !DILocation(line: 4941, column: 8, scope: !10756)
!10764 = !DILocalVariable(name: "v_mirr", scope: !10765, file: !3, line: 4943, type: !1354)
!10765 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 4941, column: 22)
!10766 = !DILocation(line: 4943, column: 13, scope: !10765)
!10767 = !DILocation(line: 4943, column: 39, scope: !10765)
!10768 = !DILocation(line: 4943, column: 43, scope: !10765)
!10769 = !DILocation(line: 4943, column: 49, scope: !10765)
!10770 = !DILocation(line: 4943, column: 22, scope: !10765)
!10771 = !DILocation(line: 4945, column: 9, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 4945, column: 9)
!10773 = !DILocation(line: 4945, column: 14, scope: !10772)
!10774 = !DILocation(line: 4945, column: 11, scope: !10772)
!10775 = !DILocation(line: 4945, column: 9, scope: !10765)
!10776 = !DILocalVariable(name: "co", scope: !10777, file: !3, line: 4946, type: !1375)
!10777 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 4945, column: 22)
!10778 = !DILocation(line: 4946, column: 12, scope: !10777)
!10779 = !DILocalVariable(name: "co_mirr", scope: !10777, file: !3, line: 4946, type: !1375)
!10780 = !DILocation(line: 4946, column: 19, scope: !10777)
!10781 = !DILocation(line: 4948, column: 11, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10777, file: !3, line: 4948, column: 10)
!10783 = !DILocation(line: 4948, column: 14, scope: !10782)
!10784 = !DILocation(line: 4948, column: 17, scope: !10782)
!10785 = !DILocation(line: 4948, column: 25, scope: !10782)
!10786 = !DILocation(line: 4948, column: 33, scope: !10782)
!10787 = !DILocation(line: 4948, column: 36, scope: !10782)
!10788 = !DILocation(line: 4948, column: 23, scope: !10782)
!10789 = !DILocation(line: 4948, column: 46, scope: !10782)
!10790 = !DILocation(line: 4948, column: 43, scope: !10782)
!10791 = !DILocation(line: 4948, column: 10, scope: !10777)
!10792 = !DILocalVariable(name: "sw_ap", scope: !10793, file: !3, line: 4949, type: !1354)
!10793 = distinct !DILexicalBlock(scope: !10794, file: !3, line: 4949, column: 7)
!10794 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 4948, column: 57)
!10795 = !DILocation(line: 4949, column: 7, scope: !10793)
!10796 = !DILocation(line: 4950, column: 6, scope: !10794)
!10797 = !DILocation(line: 4952, column: 17, scope: !10777)
!10798 = !DILocation(line: 4952, column: 26, scope: !10777)
!10799 = !DILocation(line: 4952, column: 34, scope: !10777)
!10800 = !DILocation(line: 4952, column: 6, scope: !10777)
!10801 = !DILocation(line: 4953, column: 14, scope: !10777)
!10802 = !DILocation(line: 4953, column: 6, scope: !10777)
!10803 = !DILocation(line: 4953, column: 20, scope: !10777)
!10804 = !DILocation(line: 4955, column: 27, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10777, file: !3, line: 4955, column: 10)
!10806 = !DILocation(line: 4955, column: 30, scope: !10805)
!10807 = !DILocation(line: 4955, column: 34, scope: !10805)
!10808 = !DILocation(line: 4955, column: 10, scope: !10805)
!10809 = !DILocation(line: 4955, column: 43, scope: !10805)
!10810 = !DILocation(line: 4955, column: 10, scope: !10777)
!10811 = !DILocation(line: 4956, column: 14, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 4955, column: 53)
!10813 = !DILocation(line: 4957, column: 6, scope: !10812)
!10814 = !DILocation(line: 4959, column: 21, scope: !10777)
!10815 = !DILocation(line: 4959, column: 25, scope: !10777)
!10816 = !DILocation(line: 4959, column: 28, scope: !10777)
!10817 = !DILocation(line: 4959, column: 32, scope: !10777)
!10818 = !DILocation(line: 4959, column: 41, scope: !10777)
!10819 = !DILocation(line: 4959, column: 6, scope: !10777)
!10820 = !DILocation(line: 4961, column: 17, scope: !10777)
!10821 = !DILocation(line: 4961, column: 20, scope: !10777)
!10822 = !DILocation(line: 4961, column: 24, scope: !10777)
!10823 = !DILocation(line: 4961, column: 6, scope: !10777)
!10824 = !DILocation(line: 4963, column: 9, scope: !10777)
!10825 = !DILocation(line: 4963, column: 6, scope: !10777)
!10826 = !DILocation(line: 4963, column: 15, scope: !10777)
!10827 = !DILocation(line: 4964, column: 17, scope: !10777)
!10828 = !DILocation(line: 4964, column: 25, scope: !10777)
!10829 = !DILocation(line: 4964, column: 29, scope: !10777)
!10830 = !DILocation(line: 4964, column: 6, scope: !10777)
!10831 = !DILocation(line: 4966, column: 6, scope: !10777)
!10832 = !DILocation(line: 4967, column: 6, scope: !10777)
!10833 = !DILocation(line: 4968, column: 14, scope: !10777)
!10834 = !DILocation(line: 4969, column: 5, scope: !10777)
!10835 = !DILocation(line: 4971, column: 10, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 4971, column: 10)
!10837 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 4970, column: 10)
!10838 = !DILocation(line: 4971, column: 10, scope: !10837)
!10839 = !DILocation(line: 4973, column: 17, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10841, file: !3, line: 4973, column: 11)
!10841 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 4971, column: 22)
!10842 = !DILocation(line: 4973, column: 20, scope: !10840)
!10843 = !DILocation(line: 4973, column: 23, scope: !10840)
!10844 = !DILocation(line: 4973, column: 11, scope: !10840)
!10845 = !DILocation(line: 4973, column: 30, scope: !10840)
!10846 = !DILocation(line: 4973, column: 11, scope: !10841)
!10847 = !DILocation(line: 4974, column: 15, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4973, column: 37)
!10849 = !DILocation(line: 4975, column: 7, scope: !10848)
!10850 = !DILocation(line: 4977, column: 7, scope: !10841)
!10851 = !DILocation(line: 4977, column: 10, scope: !10841)
!10852 = !DILocation(line: 4977, column: 13, scope: !10841)
!10853 = !DILocation(line: 4977, column: 19, scope: !10841)
!10854 = !DILocation(line: 4978, column: 6, scope: !10841)
!10855 = !DILocation(line: 4979, column: 6, scope: !10837)
!10856 = !DILocation(line: 4980, column: 14, scope: !10837)
!10857 = !DILocation(line: 4982, column: 4, scope: !10765)
!10858 = !DILocation(line: 4984, column: 12, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 4983, column: 9)
!10860 = !DILocation(line: 4986, column: 3, scope: !10756)
!10861 = !DILocation(line: 4987, column: 2, scope: !10749)
!10862 = distinct !{!10862, !10743, !10863}
!10863 = !DILocation(line: 4987, column: 2, scope: !10744)
!10864 = !DILocation(line: 4990, column: 6, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 4990, column: 6)
!10866 = !DILocation(line: 4990, column: 6, scope: !10663)
!10867 = !DILocation(line: 4991, column: 15, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 4990, column: 15)
!10869 = !DILocation(line: 4991, column: 19, scope: !10868)
!10870 = !DILocation(line: 4992, column: 15, scope: !10868)
!10871 = !DILocation(line: 4992, column: 26, scope: !10868)
!10872 = !DILocation(line: 4992, column: 24, scope: !10868)
!10873 = !DILocation(line: 4992, column: 35, scope: !10868)
!10874 = !DILocation(line: 4992, column: 44, scope: !10868)
!10875 = !DILocation(line: 4991, column: 3, scope: !10868)
!10876 = !DILocation(line: 4993, column: 2, scope: !10868)
!10877 = !DILocation(line: 4995, column: 15, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 4994, column: 7)
!10879 = !DILocation(line: 4995, column: 19, scope: !10878)
!10880 = !DILocation(line: 4996, column: 15, scope: !10878)
!10881 = !DILocation(line: 4996, column: 26, scope: !10878)
!10882 = !DILocation(line: 4996, column: 24, scope: !10878)
!10883 = !DILocation(line: 4996, column: 35, scope: !10878)
!10884 = !DILocation(line: 4995, column: 3, scope: !10878)
!10885 = !DILocation(line: 5000, column: 2, scope: !10663)
!10886 = !DILocation(line: 5000, column: 12, scope: !10663)
!10887 = !DILocation(line: 5002, column: 2, scope: !10663)
!10888 = distinct !DISubprogram(name: "mesh_operator_edgering_props_get", scope: !3, file: !3, line: 199, type: !10889, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!10889 = !DISubroutineType(types: !10890)
!10890 = !{null, !4120, !10891}
!10891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!10892 = !DILocalVariable(name: "op", arg: 1, scope: !10888, file: !3, line: 199, type: !4120)
!10893 = !DILocation(line: 199, column: 58, scope: !10888)
!10894 = !DILocalVariable(name: "op_props", arg: 2, scope: !10888, file: !3, line: 199, type: !10891)
!10895 = !DILocation(line: 199, column: 90, scope: !10888)
!10896 = !DILocation(line: 201, column: 39, scope: !10888)
!10897 = !DILocation(line: 201, column: 43, scope: !10888)
!10898 = !DILocation(line: 201, column: 26, scope: !10888)
!10899 = !DILocation(line: 201, column: 2, scope: !10888)
!10900 = !DILocation(line: 201, column: 12, scope: !10888)
!10901 = !DILocation(line: 201, column: 24, scope: !10888)
!10902 = !DILocation(line: 202, column: 31, scope: !10888)
!10903 = !DILocation(line: 202, column: 35, scope: !10888)
!10904 = !DILocation(line: 202, column: 19, scope: !10888)
!10905 = !DILocation(line: 202, column: 2, scope: !10888)
!10906 = !DILocation(line: 202, column: 12, scope: !10888)
!10907 = !DILocation(line: 202, column: 17, scope: !10888)
!10908 = !DILocation(line: 203, column: 35, scope: !10888)
!10909 = !DILocation(line: 203, column: 39, scope: !10888)
!10910 = !DILocation(line: 203, column: 21, scope: !10888)
!10911 = !DILocation(line: 203, column: 2, scope: !10888)
!10912 = !DILocation(line: 203, column: 12, scope: !10888)
!10913 = !DILocation(line: 203, column: 19, scope: !10888)
!10914 = !DILocation(line: 205, column: 41, scope: !10888)
!10915 = !DILocation(line: 205, column: 45, scope: !10888)
!10916 = !DILocation(line: 205, column: 28, scope: !10888)
!10917 = !DILocation(line: 205, column: 2, scope: !10888)
!10918 = !DILocation(line: 205, column: 12, scope: !10888)
!10919 = !DILocation(line: 205, column: 26, scope: !10888)
!10920 = !DILocation(line: 206, column: 49, scope: !10888)
!10921 = !DILocation(line: 206, column: 53, scope: !10888)
!10922 = !DILocation(line: 206, column: 35, scope: !10888)
!10923 = !DILocation(line: 206, column: 2, scope: !10888)
!10924 = !DILocation(line: 206, column: 12, scope: !10888)
!10925 = !DILocation(line: 206, column: 33, scope: !10888)
!10926 = !DILocation(line: 207, column: 1, scope: !10888)
!10927 = distinct !DISubprogram(name: "BM_iter_init", scope: !4598, file: !4598, line: 53, type: !10928, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!10928 = !DISubroutineType(types: !10929)
!10929 = !{!2530, !4601, !3610, !3576, !1343}
!10930 = !DILocalVariable(name: "iter", arg: 1, scope: !10927, file: !4598, line: 53, type: !4601)
!10931 = !DILocation(line: 53, column: 38, scope: !10927)
!10932 = !DILocalVariable(name: "bm", arg: 2, scope: !10927, file: !4598, line: 53, type: !3610)
!10933 = !DILocation(line: 53, column: 51, scope: !10927)
!10934 = !DILocalVariable(name: "itype", arg: 3, scope: !10927, file: !4598, line: 53, type: !3576)
!10935 = !DILocation(line: 53, column: 66, scope: !10927)
!10936 = !DILocalVariable(name: "data", arg: 4, scope: !10927, file: !4598, line: 53, type: !1343)
!10937 = !DILocation(line: 53, column: 79, scope: !10927)
!10938 = !DILocation(line: 56, column: 16, scope: !10927)
!10939 = !DILocation(line: 56, column: 2, scope: !10927)
!10940 = !DILocation(line: 56, column: 8, scope: !10927)
!10941 = !DILocation(line: 56, column: 14, scope: !10927)
!10942 = !DILocation(line: 59, column: 22, scope: !10927)
!10943 = !DILocation(line: 59, column: 10, scope: !10927)
!10944 = !DILocation(line: 59, column: 2, scope: !10927)
!10945 = !DILocation(line: 63, column: 4, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10927, file: !4598, line: 59, column: 29)
!10947 = !DILocation(line: 63, column: 10, scope: !10946)
!10948 = !DILocation(line: 63, column: 16, scope: !10946)
!10949 = !DILocation(line: 64, column: 4, scope: !10946)
!10950 = !DILocation(line: 64, column: 10, scope: !10946)
!10951 = !DILocation(line: 64, column: 16, scope: !10946)
!10952 = !DILocation(line: 65, column: 44, scope: !10946)
!10953 = !DILocation(line: 65, column: 48, scope: !10946)
!10954 = !DILocation(line: 65, column: 4, scope: !10946)
!10955 = !DILocation(line: 65, column: 10, scope: !10946)
!10956 = !DILocation(line: 65, column: 15, scope: !10946)
!10957 = !DILocation(line: 65, column: 28, scope: !10946)
!10958 = !DILocation(line: 65, column: 37, scope: !10946)
!10959 = !DILocation(line: 65, column: 42, scope: !10946)
!10960 = !DILocation(line: 66, column: 4, scope: !10946)
!10961 = !DILocation(line: 70, column: 4, scope: !10946)
!10962 = !DILocation(line: 70, column: 10, scope: !10946)
!10963 = !DILocation(line: 70, column: 16, scope: !10946)
!10964 = !DILocation(line: 71, column: 4, scope: !10946)
!10965 = !DILocation(line: 71, column: 10, scope: !10946)
!10966 = !DILocation(line: 71, column: 16, scope: !10946)
!10967 = !DILocation(line: 72, column: 44, scope: !10946)
!10968 = !DILocation(line: 72, column: 48, scope: !10946)
!10969 = !DILocation(line: 72, column: 4, scope: !10946)
!10970 = !DILocation(line: 72, column: 10, scope: !10946)
!10971 = !DILocation(line: 72, column: 15, scope: !10946)
!10972 = !DILocation(line: 72, column: 28, scope: !10946)
!10973 = !DILocation(line: 72, column: 37, scope: !10946)
!10974 = !DILocation(line: 72, column: 42, scope: !10946)
!10975 = !DILocation(line: 73, column: 4, scope: !10946)
!10976 = !DILocation(line: 77, column: 4, scope: !10946)
!10977 = !DILocation(line: 77, column: 10, scope: !10946)
!10978 = !DILocation(line: 77, column: 16, scope: !10946)
!10979 = !DILocation(line: 78, column: 4, scope: !10946)
!10980 = !DILocation(line: 78, column: 10, scope: !10946)
!10981 = !DILocation(line: 78, column: 16, scope: !10946)
!10982 = !DILocation(line: 79, column: 44, scope: !10946)
!10983 = !DILocation(line: 79, column: 48, scope: !10946)
!10984 = !DILocation(line: 79, column: 4, scope: !10946)
!10985 = !DILocation(line: 79, column: 10, scope: !10946)
!10986 = !DILocation(line: 79, column: 15, scope: !10946)
!10987 = !DILocation(line: 79, column: 28, scope: !10946)
!10988 = !DILocation(line: 79, column: 37, scope: !10946)
!10989 = !DILocation(line: 79, column: 42, scope: !10946)
!10990 = !DILocation(line: 80, column: 4, scope: !10946)
!10991 = !DILocation(line: 84, column: 4, scope: !10946)
!10992 = !DILocation(line: 84, column: 10, scope: !10946)
!10993 = !DILocation(line: 84, column: 16, scope: !10946)
!10994 = !DILocation(line: 85, column: 4, scope: !10946)
!10995 = !DILocation(line: 85, column: 10, scope: !10946)
!10996 = !DILocation(line: 85, column: 16, scope: !10946)
!10997 = !DILocation(line: 86, column: 46, scope: !10946)
!10998 = !DILocation(line: 86, column: 36, scope: !10946)
!10999 = !DILocation(line: 86, column: 4, scope: !10946)
!11000 = !DILocation(line: 86, column: 10, scope: !10946)
!11001 = !DILocation(line: 86, column: 15, scope: !10946)
!11002 = !DILocation(line: 86, column: 28, scope: !10946)
!11003 = !DILocation(line: 86, column: 34, scope: !10946)
!11004 = !DILocation(line: 87, column: 4, scope: !10946)
!11005 = !DILocation(line: 91, column: 4, scope: !10946)
!11006 = !DILocation(line: 91, column: 10, scope: !10946)
!11007 = !DILocation(line: 91, column: 16, scope: !10946)
!11008 = !DILocation(line: 92, column: 4, scope: !10946)
!11009 = !DILocation(line: 92, column: 10, scope: !10946)
!11010 = !DILocation(line: 92, column: 16, scope: !10946)
!11011 = !DILocation(line: 93, column: 46, scope: !10946)
!11012 = !DILocation(line: 93, column: 36, scope: !10946)
!11013 = !DILocation(line: 93, column: 4, scope: !10946)
!11014 = !DILocation(line: 93, column: 10, scope: !10946)
!11015 = !DILocation(line: 93, column: 15, scope: !10946)
!11016 = !DILocation(line: 93, column: 28, scope: !10946)
!11017 = !DILocation(line: 93, column: 34, scope: !10946)
!11018 = !DILocation(line: 94, column: 4, scope: !10946)
!11019 = !DILocation(line: 98, column: 4, scope: !10946)
!11020 = !DILocation(line: 98, column: 10, scope: !10946)
!11021 = !DILocation(line: 98, column: 16, scope: !10946)
!11022 = !DILocation(line: 99, column: 4, scope: !10946)
!11023 = !DILocation(line: 99, column: 10, scope: !10946)
!11024 = !DILocation(line: 99, column: 16, scope: !10946)
!11025 = !DILocation(line: 100, column: 46, scope: !10946)
!11026 = !DILocation(line: 100, column: 36, scope: !10946)
!11027 = !DILocation(line: 100, column: 4, scope: !10946)
!11028 = !DILocation(line: 100, column: 10, scope: !10946)
!11029 = !DILocation(line: 100, column: 15, scope: !10946)
!11030 = !DILocation(line: 100, column: 28, scope: !10946)
!11031 = !DILocation(line: 100, column: 34, scope: !10946)
!11032 = !DILocation(line: 101, column: 4, scope: !10946)
!11033 = !DILocation(line: 105, column: 4, scope: !10946)
!11034 = !DILocation(line: 105, column: 10, scope: !10946)
!11035 = !DILocation(line: 105, column: 16, scope: !10946)
!11036 = !DILocation(line: 106, column: 4, scope: !10946)
!11037 = !DILocation(line: 106, column: 10, scope: !10946)
!11038 = !DILocation(line: 106, column: 16, scope: !10946)
!11039 = !DILocation(line: 107, column: 46, scope: !10946)
!11040 = !DILocation(line: 107, column: 36, scope: !10946)
!11041 = !DILocation(line: 107, column: 4, scope: !10946)
!11042 = !DILocation(line: 107, column: 10, scope: !10946)
!11043 = !DILocation(line: 107, column: 15, scope: !10946)
!11044 = !DILocation(line: 107, column: 28, scope: !10946)
!11045 = !DILocation(line: 107, column: 34, scope: !10946)
!11046 = !DILocation(line: 108, column: 4, scope: !10946)
!11047 = !DILocation(line: 112, column: 4, scope: !10946)
!11048 = !DILocation(line: 112, column: 10, scope: !10946)
!11049 = !DILocation(line: 112, column: 16, scope: !10946)
!11050 = !DILocation(line: 113, column: 4, scope: !10946)
!11051 = !DILocation(line: 113, column: 10, scope: !10946)
!11052 = !DILocation(line: 113, column: 16, scope: !10946)
!11053 = !DILocation(line: 114, column: 46, scope: !10946)
!11054 = !DILocation(line: 114, column: 36, scope: !10946)
!11055 = !DILocation(line: 114, column: 4, scope: !10946)
!11056 = !DILocation(line: 114, column: 10, scope: !10946)
!11057 = !DILocation(line: 114, column: 15, scope: !10946)
!11058 = !DILocation(line: 114, column: 28, scope: !10946)
!11059 = !DILocation(line: 114, column: 34, scope: !10946)
!11060 = !DILocation(line: 115, column: 4, scope: !10946)
!11061 = !DILocation(line: 119, column: 4, scope: !10946)
!11062 = !DILocation(line: 119, column: 10, scope: !10946)
!11063 = !DILocation(line: 119, column: 16, scope: !10946)
!11064 = !DILocation(line: 120, column: 4, scope: !10946)
!11065 = !DILocation(line: 120, column: 10, scope: !10946)
!11066 = !DILocation(line: 120, column: 16, scope: !10946)
!11067 = !DILocation(line: 121, column: 46, scope: !10946)
!11068 = !DILocation(line: 121, column: 36, scope: !10946)
!11069 = !DILocation(line: 121, column: 4, scope: !10946)
!11070 = !DILocation(line: 121, column: 10, scope: !10946)
!11071 = !DILocation(line: 121, column: 15, scope: !10946)
!11072 = !DILocation(line: 121, column: 28, scope: !10946)
!11073 = !DILocation(line: 121, column: 34, scope: !10946)
!11074 = !DILocation(line: 122, column: 4, scope: !10946)
!11075 = !DILocation(line: 126, column: 4, scope: !10946)
!11076 = !DILocation(line: 126, column: 10, scope: !10946)
!11077 = !DILocation(line: 126, column: 16, scope: !10946)
!11078 = !DILocation(line: 127, column: 4, scope: !10946)
!11079 = !DILocation(line: 127, column: 10, scope: !10946)
!11080 = !DILocation(line: 127, column: 16, scope: !10946)
!11081 = !DILocation(line: 128, column: 46, scope: !10946)
!11082 = !DILocation(line: 128, column: 36, scope: !10946)
!11083 = !DILocation(line: 128, column: 4, scope: !10946)
!11084 = !DILocation(line: 128, column: 10, scope: !10946)
!11085 = !DILocation(line: 128, column: 15, scope: !10946)
!11086 = !DILocation(line: 128, column: 28, scope: !10946)
!11087 = !DILocation(line: 128, column: 34, scope: !10946)
!11088 = !DILocation(line: 129, column: 4, scope: !10946)
!11089 = !DILocation(line: 133, column: 4, scope: !10946)
!11090 = !DILocation(line: 133, column: 10, scope: !10946)
!11091 = !DILocation(line: 133, column: 16, scope: !10946)
!11092 = !DILocation(line: 134, column: 4, scope: !10946)
!11093 = !DILocation(line: 134, column: 10, scope: !10946)
!11094 = !DILocation(line: 134, column: 16, scope: !10946)
!11095 = !DILocation(line: 135, column: 46, scope: !10946)
!11096 = !DILocation(line: 135, column: 36, scope: !10946)
!11097 = !DILocation(line: 135, column: 4, scope: !10946)
!11098 = !DILocation(line: 135, column: 10, scope: !10946)
!11099 = !DILocation(line: 135, column: 15, scope: !10946)
!11100 = !DILocation(line: 135, column: 28, scope: !10946)
!11101 = !DILocation(line: 135, column: 34, scope: !10946)
!11102 = !DILocation(line: 136, column: 4, scope: !10946)
!11103 = !DILocation(line: 140, column: 4, scope: !10946)
!11104 = !DILocation(line: 140, column: 10, scope: !10946)
!11105 = !DILocation(line: 140, column: 16, scope: !10946)
!11106 = !DILocation(line: 141, column: 4, scope: !10946)
!11107 = !DILocation(line: 141, column: 10, scope: !10946)
!11108 = !DILocation(line: 141, column: 16, scope: !10946)
!11109 = !DILocation(line: 142, column: 46, scope: !10946)
!11110 = !DILocation(line: 142, column: 36, scope: !10946)
!11111 = !DILocation(line: 142, column: 4, scope: !10946)
!11112 = !DILocation(line: 142, column: 10, scope: !10946)
!11113 = !DILocation(line: 142, column: 15, scope: !10946)
!11114 = !DILocation(line: 142, column: 28, scope: !10946)
!11115 = !DILocation(line: 142, column: 34, scope: !10946)
!11116 = !DILocation(line: 143, column: 4, scope: !10946)
!11117 = !DILocation(line: 147, column: 4, scope: !10946)
!11118 = !DILocation(line: 147, column: 10, scope: !10946)
!11119 = !DILocation(line: 147, column: 16, scope: !10946)
!11120 = !DILocation(line: 148, column: 4, scope: !10946)
!11121 = !DILocation(line: 148, column: 10, scope: !10946)
!11122 = !DILocation(line: 148, column: 16, scope: !10946)
!11123 = !DILocation(line: 149, column: 46, scope: !10946)
!11124 = !DILocation(line: 149, column: 36, scope: !10946)
!11125 = !DILocation(line: 149, column: 4, scope: !10946)
!11126 = !DILocation(line: 149, column: 10, scope: !10946)
!11127 = !DILocation(line: 149, column: 15, scope: !10946)
!11128 = !DILocation(line: 149, column: 28, scope: !10946)
!11129 = !DILocation(line: 149, column: 34, scope: !10946)
!11130 = !DILocation(line: 150, column: 4, scope: !10946)
!11131 = !DILocation(line: 154, column: 4, scope: !10946)
!11132 = !DILocation(line: 158, column: 2, scope: !10927)
!11133 = !DILocation(line: 158, column: 8, scope: !10927)
!11134 = !DILocation(line: 158, column: 14, scope: !10927)
!11135 = !DILocation(line: 160, column: 2, scope: !10927)
!11136 = !DILocation(line: 161, column: 1, scope: !10927)
!11137 = distinct !DISubprogram(name: "_bm_elem_flag_set", scope: !4621, file: !4621, line: 62, type: !11138, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11138 = !DISubroutineType(types: !11139)
!11139 = !{null, !11140, !3576, !4052}
!11140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!11141 = !DILocalVariable(name: "head", arg: 1, scope: !11137, file: !4621, line: 62, type: !11140)
!11142 = !DILocation(line: 62, column: 45, scope: !11137)
!11143 = !DILocalVariable(name: "hflag", arg: 2, scope: !11137, file: !4621, line: 62, type: !3576)
!11144 = !DILocation(line: 62, column: 62, scope: !11137)
!11145 = !DILocalVariable(name: "val", arg: 3, scope: !11137, file: !4621, line: 62, type: !4052)
!11146 = !DILocation(line: 62, column: 79, scope: !11137)
!11147 = !DILocation(line: 64, column: 6, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11137, file: !4621, line: 64, column: 6)
!11149 = !DILocation(line: 64, column: 6, scope: !11137)
!11150 = !DILocation(line: 64, column: 33, scope: !11148)
!11151 = !DILocation(line: 64, column: 40, scope: !11148)
!11152 = !DILocation(line: 64, column: 12, scope: !11148)
!11153 = !DILocation(line: 65, column: 34, scope: !11148)
!11154 = !DILocation(line: 65, column: 40, scope: !11148)
!11155 = !DILocation(line: 65, column: 12, scope: !11148)
!11156 = !DILocation(line: 66, column: 1, scope: !11137)
!11157 = distinct !DISubprogram(name: "bm_face_is_loose", scope: !3, file: !3, line: 392, type: !11158, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11158 = !DISubroutineType(types: !11159)
!11159 = !{!2530, !1420}
!11160 = !DILocalVariable(name: "f", arg: 1, scope: !11157, file: !3, line: 392, type: !1420)
!11161 = !DILocation(line: 392, column: 38, scope: !11157)
!11162 = !DILocalVariable(name: "l_iter", scope: !11157, file: !3, line: 394, type: !1402)
!11163 = !DILocation(line: 394, column: 10, scope: !11157)
!11164 = !DILocalVariable(name: "l_first", scope: !11157, file: !3, line: 394, type: !1402)
!11165 = !DILocation(line: 394, column: 19, scope: !11157)
!11166 = !DILocation(line: 396, column: 21, scope: !11157)
!11167 = !DILocation(line: 396, column: 19, scope: !11157)
!11168 = !DILocation(line: 396, column: 9, scope: !11157)
!11169 = !DILocation(line: 397, column: 2, scope: !11157)
!11170 = !DILocation(line: 398, column: 28, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11172, file: !3, line: 398, column: 7)
!11172 = distinct !DILexicalBlock(scope: !11157, file: !3, line: 397, column: 5)
!11173 = !DILocation(line: 398, column: 36, scope: !11171)
!11174 = !DILocation(line: 398, column: 8, scope: !11171)
!11175 = !DILocation(line: 398, column: 7, scope: !11172)
!11176 = !DILocation(line: 399, column: 4, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11171, file: !3, line: 398, column: 40)
!11178 = !DILocation(line: 401, column: 2, scope: !11172)
!11179 = !DILocation(line: 401, column: 21, scope: !11157)
!11180 = !DILocation(line: 401, column: 29, scope: !11157)
!11181 = !DILocation(line: 401, column: 19, scope: !11157)
!11182 = !DILocation(line: 401, column: 38, scope: !11157)
!11183 = !DILocation(line: 401, column: 35, scope: !11157)
!11184 = distinct !{!11184, !11169, !11185}
!11185 = !DILocation(line: 401, column: 45, scope: !11157)
!11186 = !DILocation(line: 403, column: 2, scope: !11157)
!11187 = !DILocation(line: 404, column: 1, scope: !11157)
!11188 = distinct !DISubprogram(name: "BM_edge_is_wire", scope: !11189, file: !11189, line: 75, type: !11190, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11189 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_queries_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11190 = !DISubroutineType(types: !11191)
!11191 = !{!2530, !11192}
!11192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11193, size: 64)
!11193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!11194 = !DILocalVariable(name: "e", arg: 1, scope: !11188, file: !11189, line: 75, type: !11192)
!11195 = !DILocation(line: 75, column: 47, scope: !11188)
!11196 = !DILocation(line: 77, column: 10, scope: !11188)
!11197 = !DILocation(line: 77, column: 13, scope: !11188)
!11198 = !DILocation(line: 77, column: 15, scope: !11188)
!11199 = !DILocation(line: 77, column: 9, scope: !11188)
!11200 = !DILocation(line: 77, column: 2, scope: !11188)
!11201 = distinct !DISubprogram(name: "edbm_report_delete_info", scope: !3, file: !3, line: 316, type: !11202, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11202 = !DISubroutineType(types: !11203)
!11203 = !{null, !11204, !3610, !11206}
!11204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11205, size: 64)
!11205 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReportList", file: !268, line: 112, baseType: !3807)
!11206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4052, size: 64)
!11207 = !DILocalVariable(name: "reports", arg: 1, scope: !11201, file: !3, line: 316, type: !11204)
!11208 = !DILocation(line: 316, column: 49, scope: !11201)
!11209 = !DILocalVariable(name: "bm", arg: 2, scope: !11201, file: !3, line: 316, type: !3610)
!11210 = !DILocation(line: 316, column: 65, scope: !11201)
!11211 = !DILocalVariable(name: "totelem", arg: 3, scope: !11201, file: !3, line: 316, type: !11206)
!11212 = !DILocation(line: 316, column: 79, scope: !11201)
!11213 = !DILocation(line: 318, column: 14, scope: !11201)
!11214 = !DILocation(line: 320, column: 14, scope: !11201)
!11215 = !DILocation(line: 320, column: 27, scope: !11201)
!11216 = !DILocation(line: 320, column: 31, scope: !11201)
!11217 = !DILocation(line: 320, column: 25, scope: !11201)
!11218 = !DILocation(line: 320, column: 40, scope: !11201)
!11219 = !DILocation(line: 320, column: 53, scope: !11201)
!11220 = !DILocation(line: 320, column: 57, scope: !11201)
!11221 = !DILocation(line: 320, column: 51, scope: !11201)
!11222 = !DILocation(line: 320, column: 66, scope: !11201)
!11223 = !DILocation(line: 320, column: 79, scope: !11201)
!11224 = !DILocation(line: 320, column: 83, scope: !11201)
!11225 = !DILocation(line: 320, column: 77, scope: !11201)
!11226 = !DILocation(line: 318, column: 2, scope: !11201)
!11227 = !DILocation(line: 321, column: 1, scope: !11201)
!11228 = distinct !DISubprogram(name: "_bm_elem_flag_enable", scope: !4621, file: !4621, line: 52, type: !11229, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11229 = !DISubroutineType(types: !11230)
!11230 = !{null, !11140, !3576}
!11231 = !DILocalVariable(name: "head", arg: 1, scope: !11228, file: !4621, line: 52, type: !11140)
!11232 = !DILocation(line: 52, column: 48, scope: !11228)
!11233 = !DILocalVariable(name: "hflag", arg: 2, scope: !11228, file: !4621, line: 52, type: !3576)
!11234 = !DILocation(line: 52, column: 65, scope: !11228)
!11235 = !DILocation(line: 54, column: 17, scope: !11228)
!11236 = !DILocation(line: 54, column: 2, scope: !11228)
!11237 = !DILocation(line: 54, column: 8, scope: !11228)
!11238 = !DILocation(line: 54, column: 14, scope: !11228)
!11239 = !DILocation(line: 55, column: 1, scope: !11228)
!11240 = distinct !DISubprogram(name: "_bm_elem_flag_disable", scope: !4621, file: !4621, line: 57, type: !11229, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11241 = !DILocalVariable(name: "head", arg: 1, scope: !11240, file: !4621, line: 57, type: !11140)
!11242 = !DILocation(line: 57, column: 49, scope: !11240)
!11243 = !DILocalVariable(name: "hflag", arg: 2, scope: !11240, file: !4621, line: 57, type: !3576)
!11244 = !DILocation(line: 57, column: 66, scope: !11240)
!11245 = !DILocation(line: 59, column: 24, scope: !11240)
!11246 = !DILocation(line: 59, column: 23, scope: !11240)
!11247 = !DILocation(line: 59, column: 17, scope: !11240)
!11248 = !DILocation(line: 59, column: 2, scope: !11240)
!11249 = !DILocation(line: 59, column: 8, scope: !11240)
!11250 = !DILocation(line: 59, column: 14, scope: !11240)
!11251 = !DILocation(line: 60, column: 1, scope: !11240)
!11252 = distinct !DISubprogram(name: "BM_edge_is_boundary", scope: !11189, file: !11189, line: 118, type: !11190, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11253 = !DILocalVariable(name: "e", arg: 1, scope: !11252, file: !11189, line: 118, type: !11192)
!11254 = !DILocation(line: 118, column: 51, scope: !11252)
!11255 = !DILocalVariable(name: "l", scope: !11252, file: !11189, line: 120, type: !11256)
!11256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11257, size: 64)
!11257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!11258 = !DILocation(line: 120, column: 16, scope: !11252)
!11259 = !DILocation(line: 120, column: 20, scope: !11252)
!11260 = !DILocation(line: 120, column: 23, scope: !11252)
!11261 = !DILocation(line: 121, column: 10, scope: !11252)
!11262 = !DILocation(line: 121, column: 12, scope: !11252)
!11263 = !DILocation(line: 121, column: 16, scope: !11252)
!11264 = !DILocation(line: 121, column: 19, scope: !11252)
!11265 = !DILocation(line: 121, column: 34, scope: !11252)
!11266 = !DILocation(line: 121, column: 31, scope: !11252)
!11267 = !DILocation(line: 0, scope: !11252)
!11268 = !DILocation(line: 121, column: 9, scope: !11252)
!11269 = !DILocation(line: 121, column: 2, scope: !11252)
!11270 = distinct !DISubprogram(name: "edbm_add_edge_face__smooth_get", scope: !3, file: !3, line: 518, type: !11271, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11271 = !DISubroutineType(types: !11272)
!11272 = !{!135, !3610}
!11273 = !DILocalVariable(name: "bm", arg: 1, scope: !11270, file: !3, line: 518, type: !3610)
!11274 = !DILocation(line: 518, column: 50, scope: !11270)
!11275 = !DILocalVariable(name: "e", scope: !11270, file: !3, line: 520, type: !1418)
!11276 = !DILocation(line: 520, column: 10, scope: !11270)
!11277 = !DILocalVariable(name: "iter", scope: !11270, file: !3, line: 521, type: !4456)
!11278 = !DILocation(line: 521, column: 9, scope: !11270)
!11279 = !DILocalVariable(name: "vote_on_smooth", scope: !11270, file: !3, line: 523, type: !2403)
!11280 = !DILocation(line: 523, column: 15, scope: !11270)
!11281 = !DILocation(line: 525, column: 2, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11270, file: !3, line: 525, column: 2)
!11283 = !DILocation(line: 525, column: 2, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11282, file: !3, line: 525, column: 2)
!11285 = !DILocation(line: 526, column: 7, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 526, column: 7)
!11287 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 525, column: 48)
!11288 = !DILocation(line: 526, column: 44, scope: !11286)
!11289 = !DILocation(line: 526, column: 47, scope: !11286)
!11290 = !DILocation(line: 526, column: 50, scope: !11286)
!11291 = !DILocation(line: 526, column: 7, scope: !11287)
!11292 = !DILocation(line: 527, column: 19, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 526, column: 53)
!11294 = !DILocation(line: 527, column: 4, scope: !11293)
!11295 = !DILocation(line: 527, column: 67, scope: !11293)
!11296 = !DILocation(line: 528, column: 3, scope: !11293)
!11297 = !DILocation(line: 529, column: 2, scope: !11287)
!11298 = distinct !{!11298, !11281, !11299}
!11299 = !DILocation(line: 529, column: 2, scope: !11282)
!11300 = !DILocation(line: 531, column: 10, scope: !11270)
!11301 = !DILocation(line: 531, column: 30, scope: !11270)
!11302 = !DILocation(line: 531, column: 28, scope: !11270)
!11303 = !DILocation(line: 531, column: 2, scope: !11270)
!11304 = distinct !DISubprogram(name: "edbm_add_edge_face_exec__tricky_extend_sel", scope: !3, file: !3, line: 561, type: !11305, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11305 = !DISubroutineType(types: !11306)
!11306 = !{!1422, !3610}
!11307 = !DILocalVariable(name: "bm", arg: 1, scope: !11304, file: !3, line: 561, type: !3610)
!11308 = !DILocation(line: 561, column: 66, scope: !11304)
!11309 = !DILocalVariable(name: "iter", scope: !11304, file: !3, line: 563, type: !4456)
!11310 = !DILocation(line: 563, column: 9, scope: !11304)
!11311 = !DILocalVariable(name: "found", scope: !11304, file: !3, line: 564, type: !2530)
!11312 = !DILocation(line: 564, column: 7, scope: !11304)
!11313 = !DILocation(line: 566, column: 6, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 566, column: 6)
!11315 = !DILocation(line: 566, column: 10, scope: !11314)
!11316 = !DILocation(line: 566, column: 21, scope: !11314)
!11317 = !DILocation(line: 566, column: 26, scope: !11314)
!11318 = !DILocation(line: 566, column: 29, scope: !11314)
!11319 = !DILocation(line: 566, column: 33, scope: !11314)
!11320 = !DILocation(line: 566, column: 44, scope: !11314)
!11321 = !DILocation(line: 566, column: 49, scope: !11314)
!11322 = !DILocation(line: 566, column: 52, scope: !11314)
!11323 = !DILocation(line: 566, column: 56, scope: !11314)
!11324 = !DILocation(line: 566, column: 67, scope: !11314)
!11325 = !DILocation(line: 566, column: 6, scope: !11304)
!11326 = !DILocalVariable(name: "v", scope: !11327, file: !3, line: 568, type: !1354)
!11327 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 566, column: 73)
!11328 = !DILocation(line: 568, column: 11, scope: !11327)
!11329 = !DILocation(line: 570, column: 3, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 570, column: 3)
!11331 = !DILocation(line: 570, column: 3, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 570, column: 3)
!11333 = !DILocation(line: 571, column: 8, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !3, line: 571, column: 8)
!11335 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 570, column: 49)
!11336 = !DILocation(line: 571, column: 8, scope: !11335)
!11337 = !DILocation(line: 572, column: 11, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 571, column: 46)
!11339 = !DILocation(line: 573, column: 5, scope: !11338)
!11340 = !DILocation(line: 575, column: 3, scope: !11335)
!11341 = distinct !{!11341, !11329, !11342}
!11342 = !DILocation(line: 575, column: 3, scope: !11330)
!11343 = !DILocation(line: 577, column: 7, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 577, column: 7)
!11345 = !DILocation(line: 577, column: 7, scope: !11327)
!11346 = !DILocalVariable(name: "ed_pair", scope: !11347, file: !3, line: 578, type: !11348)
!11347 = distinct !DILexicalBlock(scope: !11344, file: !3, line: 577, column: 14)
!11348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1418, size: 192, elements: !1376)
!11349 = !DILocation(line: 578, column: 12, scope: !11347)
!11350 = !DILocation(line: 580, column: 52, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11347, file: !3, line: 580, column: 8)
!11352 = !DILocation(line: 580, column: 61, scope: !11351)
!11353 = !DILocation(line: 580, column: 10, scope: !11351)
!11354 = !DILocation(line: 580, column: 90, scope: !11351)
!11355 = !DILocation(line: 580, column: 96, scope: !11351)
!11356 = !DILocation(line: 581, column: 35, scope: !11351)
!11357 = !DILocation(line: 581, column: 47, scope: !11351)
!11358 = !DILocation(line: 581, column: 10, scope: !11351)
!11359 = !DILocation(line: 581, column: 59, scope: !11351)
!11360 = !DILocation(line: 581, column: 70, scope: !11351)
!11361 = !DILocation(line: 583, column: 52, scope: !11351)
!11362 = !DILocation(line: 583, column: 61, scope: !11351)
!11363 = !DILocation(line: 583, column: 10, scope: !11351)
!11364 = !DILocation(line: 583, column: 94, scope: !11351)
!11365 = !DILocation(line: 583, column: 100, scope: !11351)
!11366 = !DILocation(line: 584, column: 35, scope: !11351)
!11367 = !DILocation(line: 584, column: 47, scope: !11351)
!11368 = !DILocation(line: 584, column: 10, scope: !11351)
!11369 = !DILocation(line: 584, column: 59, scope: !11351)
!11370 = !DILocation(line: 580, column: 8, scope: !11347)
!11371 = !DILocalVariable(name: "e_other", scope: !11372, file: !3, line: 587, type: !1418)
!11372 = distinct !DILexicalBlock(scope: !11351, file: !3, line: 586, column: 4)
!11373 = !DILocation(line: 587, column: 13, scope: !11372)
!11374 = !DILocation(line: 587, column: 57, scope: !11372)
!11375 = !DILocation(line: 587, column: 69, scope: !11372)
!11376 = !DILocation(line: 587, column: 38, scope: !11372)
!11377 = !DILocation(line: 588, column: 57, scope: !11372)
!11378 = !DILocation(line: 588, column: 69, scope: !11372)
!11379 = !DILocation(line: 588, column: 38, scope: !11372)
!11380 = !DILocation(line: 587, column: 23, scope: !11372)
!11381 = !DILocation(line: 589, column: 24, scope: !11372)
!11382 = !DILocation(line: 589, column: 28, scope: !11372)
!11383 = !DILocation(line: 589, column: 5, scope: !11372)
!11384 = !DILocation(line: 590, column: 24, scope: !11372)
!11385 = !DILocation(line: 590, column: 28, scope: !11372)
!11386 = !DILocation(line: 590, column: 5, scope: !11372)
!11387 = !DILocation(line: 591, column: 9, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 591, column: 9)
!11389 = !DILocation(line: 591, column: 9, scope: !11372)
!11390 = !DILocation(line: 592, column: 25, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11388, file: !3, line: 591, column: 18)
!11392 = !DILocation(line: 592, column: 29, scope: !11391)
!11393 = !DILocation(line: 592, column: 6, scope: !11391)
!11394 = !DILocation(line: 593, column: 5, scope: !11391)
!11395 = !DILocation(line: 594, column: 22, scope: !11372)
!11396 = !DILocation(line: 594, column: 12, scope: !11372)
!11397 = !DILocation(line: 594, column: 5, scope: !11372)
!11398 = !DILocation(line: 596, column: 3, scope: !11347)
!11399 = !DILocation(line: 597, column: 2, scope: !11327)
!11400 = !DILocation(line: 598, column: 11, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 598, column: 11)
!11402 = !DILocation(line: 598, column: 15, scope: !11401)
!11403 = !DILocation(line: 598, column: 26, scope: !11401)
!11404 = !DILocation(line: 598, column: 31, scope: !11401)
!11405 = !DILocation(line: 598, column: 34, scope: !11401)
!11406 = !DILocation(line: 598, column: 38, scope: !11401)
!11407 = !DILocation(line: 598, column: 49, scope: !11401)
!11408 = !DILocation(line: 598, column: 54, scope: !11401)
!11409 = !DILocation(line: 598, column: 57, scope: !11401)
!11410 = !DILocation(line: 598, column: 61, scope: !11401)
!11411 = !DILocation(line: 598, column: 72, scope: !11401)
!11412 = !DILocation(line: 598, column: 11, scope: !11314)
!11413 = !DILocalVariable(name: "e", scope: !11414, file: !3, line: 600, type: !1418)
!11414 = distinct !DILexicalBlock(scope: !11401, file: !3, line: 598, column: 78)
!11415 = !DILocation(line: 600, column: 11, scope: !11414)
!11416 = !DILocation(line: 602, column: 3, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11414, file: !3, line: 602, column: 3)
!11418 = !DILocation(line: 602, column: 3, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11417, file: !3, line: 602, column: 3)
!11420 = !DILocation(line: 603, column: 8, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 603, column: 8)
!11422 = distinct !DILexicalBlock(scope: !11419, file: !3, line: 602, column: 49)
!11423 = !DILocation(line: 603, column: 8, scope: !11422)
!11424 = !DILocation(line: 604, column: 11, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11421, file: !3, line: 603, column: 46)
!11426 = !DILocation(line: 605, column: 5, scope: !11425)
!11427 = !DILocation(line: 607, column: 3, scope: !11422)
!11428 = distinct !{!11428, !11416, !11429}
!11429 = !DILocation(line: 607, column: 3, scope: !11417)
!11430 = !DILocation(line: 608, column: 7, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11414, file: !3, line: 608, column: 7)
!11432 = !DILocation(line: 608, column: 7, scope: !11414)
!11433 = !DILocalVariable(name: "ed_pair_v1", scope: !11434, file: !3, line: 609, type: !11435)
!11434 = distinct !DILexicalBlock(scope: !11431, file: !3, line: 608, column: 14)
!11435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1418, size: 128, elements: !1965)
!11436 = !DILocation(line: 609, column: 12, scope: !11434)
!11437 = !DILocalVariable(name: "ed_pair_v2", scope: !11434, file: !3, line: 610, type: !11435)
!11438 = !DILocation(line: 610, column: 12, scope: !11434)
!11439 = !DILocation(line: 612, column: 52, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 612, column: 8)
!11441 = !DILocation(line: 612, column: 55, scope: !11440)
!11442 = !DILocation(line: 612, column: 59, scope: !11440)
!11443 = !DILocation(line: 612, column: 62, scope: !11440)
!11444 = !DILocation(line: 612, column: 10, scope: !11440)
!11445 = !DILocation(line: 612, column: 94, scope: !11440)
!11446 = !DILocation(line: 612, column: 100, scope: !11440)
!11447 = !DILocation(line: 613, column: 52, scope: !11440)
!11448 = !DILocation(line: 613, column: 55, scope: !11440)
!11449 = !DILocation(line: 613, column: 59, scope: !11440)
!11450 = !DILocation(line: 613, column: 62, scope: !11440)
!11451 = !DILocation(line: 613, column: 10, scope: !11440)
!11452 = !DILocation(line: 613, column: 94, scope: !11440)
!11453 = !DILocation(line: 613, column: 100, scope: !11440)
!11454 = !DILocation(line: 614, column: 35, scope: !11440)
!11455 = !DILocation(line: 614, column: 38, scope: !11440)
!11456 = !DILocation(line: 614, column: 10, scope: !11440)
!11457 = !DILocation(line: 614, column: 53, scope: !11440)
!11458 = !DILocation(line: 614, column: 63, scope: !11440)
!11459 = !DILocation(line: 615, column: 35, scope: !11440)
!11460 = !DILocation(line: 615, column: 38, scope: !11440)
!11461 = !DILocation(line: 615, column: 10, scope: !11440)
!11462 = !DILocation(line: 615, column: 53, scope: !11440)
!11463 = !DILocation(line: 615, column: 64, scope: !11440)
!11464 = !DILocation(line: 618, column: 52, scope: !11440)
!11465 = !DILocation(line: 618, column: 55, scope: !11440)
!11466 = !DILocation(line: 618, column: 59, scope: !11440)
!11467 = !DILocation(line: 618, column: 62, scope: !11440)
!11468 = !DILocation(line: 618, column: 10, scope: !11440)
!11469 = !DILocation(line: 618, column: 98, scope: !11440)
!11470 = !DILocation(line: 618, column: 104, scope: !11440)
!11471 = !DILocation(line: 619, column: 52, scope: !11440)
!11472 = !DILocation(line: 619, column: 55, scope: !11440)
!11473 = !DILocation(line: 619, column: 59, scope: !11440)
!11474 = !DILocation(line: 619, column: 62, scope: !11440)
!11475 = !DILocation(line: 619, column: 10, scope: !11440)
!11476 = !DILocation(line: 619, column: 98, scope: !11440)
!11477 = !DILocation(line: 619, column: 104, scope: !11440)
!11478 = !DILocation(line: 620, column: 35, scope: !11440)
!11479 = !DILocation(line: 620, column: 38, scope: !11440)
!11480 = !DILocation(line: 620, column: 10, scope: !11440)
!11481 = !DILocation(line: 620, column: 53, scope: !11440)
!11482 = !DILocation(line: 620, column: 63, scope: !11440)
!11483 = !DILocation(line: 621, column: 35, scope: !11440)
!11484 = !DILocation(line: 621, column: 38, scope: !11440)
!11485 = !DILocation(line: 621, column: 10, scope: !11440)
!11486 = !DILocation(line: 621, column: 53, scope: !11440)
!11487 = !DILocation(line: 621, column: 64, scope: !11440)
!11488 = !DILocation(line: 623, column: 52, scope: !11440)
!11489 = !DILocation(line: 623, column: 55, scope: !11440)
!11490 = !DILocation(line: 623, column: 59, scope: !11440)
!11491 = !DILocation(line: 623, column: 62, scope: !11440)
!11492 = !DILocation(line: 623, column: 10, scope: !11440)
!11493 = !DILocation(line: 623, column: 98, scope: !11440)
!11494 = !DILocation(line: 623, column: 104, scope: !11440)
!11495 = !DILocation(line: 624, column: 52, scope: !11440)
!11496 = !DILocation(line: 624, column: 55, scope: !11440)
!11497 = !DILocation(line: 624, column: 59, scope: !11440)
!11498 = !DILocation(line: 624, column: 62, scope: !11440)
!11499 = !DILocation(line: 624, column: 10, scope: !11440)
!11500 = !DILocation(line: 624, column: 98, scope: !11440)
!11501 = !DILocation(line: 624, column: 104, scope: !11440)
!11502 = !DILocation(line: 625, column: 35, scope: !11440)
!11503 = !DILocation(line: 625, column: 38, scope: !11440)
!11504 = !DILocation(line: 625, column: 10, scope: !11440)
!11505 = !DILocation(line: 625, column: 53, scope: !11440)
!11506 = !DILocation(line: 625, column: 63, scope: !11440)
!11507 = !DILocation(line: 626, column: 35, scope: !11440)
!11508 = !DILocation(line: 626, column: 38, scope: !11440)
!11509 = !DILocation(line: 626, column: 10, scope: !11440)
!11510 = !DILocation(line: 626, column: 53, scope: !11440)
!11511 = !DILocation(line: 626, column: 64, scope: !11440)
!11512 = !DILocation(line: 629, column: 52, scope: !11440)
!11513 = !DILocation(line: 629, column: 55, scope: !11440)
!11514 = !DILocation(line: 629, column: 59, scope: !11440)
!11515 = !DILocation(line: 629, column: 62, scope: !11440)
!11516 = !DILocation(line: 629, column: 10, scope: !11440)
!11517 = !DILocation(line: 629, column: 98, scope: !11440)
!11518 = !DILocation(line: 629, column: 104, scope: !11440)
!11519 = !DILocation(line: 630, column: 52, scope: !11440)
!11520 = !DILocation(line: 630, column: 55, scope: !11440)
!11521 = !DILocation(line: 630, column: 59, scope: !11440)
!11522 = !DILocation(line: 630, column: 62, scope: !11440)
!11523 = !DILocation(line: 630, column: 10, scope: !11440)
!11524 = !DILocation(line: 630, column: 98, scope: !11440)
!11525 = !DILocation(line: 630, column: 104, scope: !11440)
!11526 = !DILocation(line: 631, column: 35, scope: !11440)
!11527 = !DILocation(line: 631, column: 38, scope: !11440)
!11528 = !DILocation(line: 631, column: 10, scope: !11440)
!11529 = !DILocation(line: 631, column: 53, scope: !11440)
!11530 = !DILocation(line: 631, column: 63, scope: !11440)
!11531 = !DILocation(line: 632, column: 35, scope: !11440)
!11532 = !DILocation(line: 632, column: 38, scope: !11440)
!11533 = !DILocation(line: 632, column: 10, scope: !11440)
!11534 = !DILocation(line: 632, column: 53, scope: !11440)
!11535 = !DILocation(line: 612, column: 8, scope: !11434)
!11536 = !DILocalVariable(name: "v1_other", scope: !11537, file: !3, line: 635, type: !1354)
!11537 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 634, column: 4)
!11538 = !DILocation(line: 635, column: 13, scope: !11537)
!11539 = !DILocation(line: 635, column: 43, scope: !11537)
!11540 = !DILocation(line: 635, column: 58, scope: !11537)
!11541 = !DILocation(line: 635, column: 61, scope: !11537)
!11542 = !DILocation(line: 635, column: 24, scope: !11537)
!11543 = !DILocalVariable(name: "v2_other", scope: !11537, file: !3, line: 636, type: !1354)
!11544 = !DILocation(line: 636, column: 13, scope: !11537)
!11545 = !DILocation(line: 636, column: 43, scope: !11537)
!11546 = !DILocation(line: 636, column: 58, scope: !11537)
!11547 = !DILocation(line: 636, column: 61, scope: !11537)
!11548 = !DILocation(line: 636, column: 24, scope: !11537)
!11549 = !DILocalVariable(name: "e_other", scope: !11537, file: !3, line: 637, type: !1418)
!11550 = !DILocation(line: 637, column: 13, scope: !11537)
!11551 = !DILocation(line: 637, column: 24, scope: !11537)
!11552 = !DILocation(line: 637, column: 36, scope: !11537)
!11553 = !DILocation(line: 637, column: 33, scope: !11537)
!11554 = !DILocation(line: 637, column: 23, scope: !11537)
!11555 = !DILocation(line: 637, column: 63, scope: !11537)
!11556 = !DILocation(line: 637, column: 73, scope: !11537)
!11557 = !DILocation(line: 637, column: 48, scope: !11537)
!11558 = !DILocation(line: 638, column: 24, scope: !11537)
!11559 = !DILocation(line: 638, column: 28, scope: !11537)
!11560 = !DILocation(line: 638, column: 5, scope: !11537)
!11561 = !DILocation(line: 639, column: 24, scope: !11537)
!11562 = !DILocation(line: 639, column: 28, scope: !11537)
!11563 = !DILocation(line: 639, column: 5, scope: !11537)
!11564 = !DILocation(line: 640, column: 9, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 640, column: 9)
!11566 = !DILocation(line: 640, column: 9, scope: !11537)
!11567 = !DILocation(line: 641, column: 25, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 640, column: 18)
!11569 = !DILocation(line: 641, column: 29, scope: !11568)
!11570 = !DILocation(line: 641, column: 6, scope: !11568)
!11571 = !DILocation(line: 642, column: 5, scope: !11568)
!11572 = !DILocation(line: 643, column: 22, scope: !11537)
!11573 = !DILocation(line: 643, column: 12, scope: !11537)
!11574 = !DILocation(line: 643, column: 5, scope: !11537)
!11575 = !DILocation(line: 645, column: 3, scope: !11434)
!11576 = !DILocation(line: 646, column: 2, scope: !11414)
!11577 = !DILocation(line: 648, column: 2, scope: !11304)
!11578 = !DILocation(line: 649, column: 1, scope: !11304)
!11579 = distinct !DISubprogram(name: "edbm_add_edge_face_exec__tricky_finalize_sel", scope: !3, file: !3, line: 650, type: !11580, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11580 = !DISubroutineType(types: !11581)
!11581 = !{null, !3610, !1422, !1420}
!11582 = !DILocalVariable(name: "bm", arg: 1, scope: !11579, file: !3, line: 650, type: !3610)
!11583 = !DILocation(line: 650, column: 65, scope: !11579)
!11584 = !DILocalVariable(name: "ele_desel", arg: 2, scope: !11579, file: !3, line: 650, type: !1422)
!11585 = !DILocation(line: 650, column: 77, scope: !11579)
!11586 = !DILocalVariable(name: "f", arg: 3, scope: !11579, file: !3, line: 650, type: !1420)
!11587 = !DILocation(line: 650, column: 96, scope: !11579)
!11588 = !DILocation(line: 653, column: 26, scope: !11579)
!11589 = !DILocation(line: 653, column: 2, scope: !11579)
!11590 = !DILocation(line: 655, column: 6, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11579, file: !3, line: 655, column: 6)
!11592 = !DILocation(line: 655, column: 17, scope: !11591)
!11593 = !DILocation(line: 655, column: 22, scope: !11591)
!11594 = !DILocation(line: 655, column: 28, scope: !11591)
!11595 = !DILocation(line: 655, column: 6, scope: !11579)
!11596 = !DILocalVariable(name: "l", scope: !11597, file: !3, line: 656, type: !1402)
!11597 = distinct !DILexicalBlock(scope: !11591, file: !3, line: 655, column: 40)
!11598 = !DILocation(line: 656, column: 11, scope: !11597)
!11599 = !DILocation(line: 656, column: 39, scope: !11597)
!11600 = !DILocation(line: 656, column: 52, scope: !11597)
!11601 = !DILocation(line: 656, column: 42, scope: !11597)
!11602 = !DILocation(line: 656, column: 15, scope: !11597)
!11603 = !DILocation(line: 658, column: 22, scope: !11597)
!11604 = !DILocation(line: 658, column: 26, scope: !11597)
!11605 = !DILocation(line: 658, column: 3, scope: !11597)
!11606 = !DILocation(line: 659, column: 22, scope: !11597)
!11607 = !DILocation(line: 659, column: 36, scope: !11597)
!11608 = !DILocation(line: 659, column: 26, scope: !11597)
!11609 = !DILocation(line: 659, column: 3, scope: !11597)
!11610 = !DILocation(line: 661, column: 22, scope: !11597)
!11611 = !DILocation(line: 661, column: 26, scope: !11597)
!11612 = !DILocation(line: 661, column: 29, scope: !11597)
!11613 = !DILocation(line: 661, column: 35, scope: !11597)
!11614 = !DILocation(line: 661, column: 3, scope: !11597)
!11615 = !DILocation(line: 662, column: 3, scope: !11597)
!11616 = !DILocation(line: 663, column: 2, scope: !11597)
!11617 = !DILocalVariable(name: "l", scope: !11618, file: !3, line: 665, type: !1402)
!11618 = distinct !DILexicalBlock(scope: !11591, file: !3, line: 664, column: 7)
!11619 = !DILocation(line: 665, column: 11, scope: !11618)
!11620 = !DILocation(line: 665, column: 39, scope: !11618)
!11621 = !DILocation(line: 665, column: 52, scope: !11618)
!11622 = !DILocation(line: 665, column: 42, scope: !11618)
!11623 = !DILocation(line: 665, column: 15, scope: !11618)
!11624 = !DILocation(line: 667, column: 22, scope: !11618)
!11625 = !DILocation(line: 667, column: 26, scope: !11618)
!11626 = !DILocation(line: 667, column: 3, scope: !11618)
!11627 = !DILocation(line: 668, column: 22, scope: !11618)
!11628 = !DILocation(line: 668, column: 36, scope: !11618)
!11629 = !DILocation(line: 668, column: 26, scope: !11618)
!11630 = !DILocation(line: 668, column: 3, scope: !11618)
!11631 = !DILocation(line: 669, column: 7, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11618, file: !3, line: 669, column: 7)
!11633 = !DILocation(line: 669, column: 10, scope: !11632)
!11634 = !DILocation(line: 669, column: 14, scope: !11632)
!11635 = !DILocation(line: 669, column: 7, scope: !11618)
!11636 = !DILocation(line: 670, column: 23, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 669, column: 20)
!11638 = !DILocation(line: 670, column: 27, scope: !11637)
!11639 = !DILocation(line: 670, column: 30, scope: !11637)
!11640 = !DILocation(line: 670, column: 36, scope: !11637)
!11641 = !DILocation(line: 670, column: 42, scope: !11637)
!11642 = !DILocation(line: 670, column: 4, scope: !11637)
!11643 = !DILocation(line: 671, column: 4, scope: !11637)
!11644 = !DILocation(line: 672, column: 3, scope: !11637)
!11645 = !DILocation(line: 674, column: 23, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 673, column: 8)
!11647 = !DILocation(line: 674, column: 27, scope: !11646)
!11648 = !DILocation(line: 674, column: 30, scope: !11646)
!11649 = !DILocation(line: 674, column: 36, scope: !11646)
!11650 = !DILocation(line: 674, column: 42, scope: !11646)
!11651 = !DILocation(line: 674, column: 4, scope: !11646)
!11652 = !DILocation(line: 675, column: 4, scope: !11646)
!11653 = !DILocation(line: 678, column: 1, scope: !11579)
!11654 = distinct !DISubprogram(name: "_bm_elem_flag_test_bool", scope: !4621, file: !4621, line: 47, type: !11655, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11655 = !DISubroutineType(types: !11656)
!11656 = !{!2530, !4624, !3576}
!11657 = !DILocalVariable(name: "head", arg: 1, scope: !11654, file: !4621, line: 47, type: !4624)
!11658 = !DILocation(line: 47, column: 57, scope: !11654)
!11659 = !DILocalVariable(name: "hflag", arg: 2, scope: !11654, file: !4621, line: 47, type: !3576)
!11660 = !DILocation(line: 47, column: 74, scope: !11654)
!11661 = !DILocation(line: 49, column: 10, scope: !11654)
!11662 = !DILocation(line: 49, column: 16, scope: !11654)
!11663 = !DILocation(line: 49, column: 24, scope: !11654)
!11664 = !DILocation(line: 49, column: 22, scope: !11654)
!11665 = !DILocation(line: 49, column: 31, scope: !11654)
!11666 = !DILocation(line: 49, column: 9, scope: !11654)
!11667 = !DILocation(line: 49, column: 2, scope: !11654)
!11668 = distinct !DISubprogram(name: "edbm_add_edge_face_exec__vert_edge_lookup", scope: !3, file: !3, line: 539, type: !11669, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11669 = !DISubroutineType(types: !11670)
!11670 = !{!135, !1354, !1418, !3556, !4052, !11671}
!11671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11190, size: 64)
!11672 = !DILocalVariable(name: "v", arg: 1, scope: !11668, file: !3, line: 540, type: !1354)
!11673 = !DILocation(line: 540, column: 17, scope: !11668)
!11674 = !DILocalVariable(name: "e_used", arg: 2, scope: !11668, file: !3, line: 540, type: !1418)
!11675 = !DILocation(line: 540, column: 28, scope: !11668)
!11676 = !DILocalVariable(name: "e_arr", arg: 3, scope: !11668, file: !3, line: 540, type: !3556)
!11677 = !DILocation(line: 540, column: 45, scope: !11668)
!11678 = !DILocalVariable(name: "e_arr_len", arg: 4, scope: !11668, file: !3, line: 540, type: !4052)
!11679 = !DILocation(line: 540, column: 62, scope: !11668)
!11680 = !DILocalVariable(name: "func", arg: 5, scope: !11668, file: !3, line: 541, type: !11671)
!11681 = !DILocation(line: 541, column: 17, scope: !11668)
!11682 = !DILocalVariable(name: "iter", scope: !11668, file: !3, line: 543, type: !4456)
!11683 = !DILocation(line: 543, column: 9, scope: !11668)
!11684 = !DILocalVariable(name: "e_iter", scope: !11668, file: !3, line: 544, type: !1418)
!11685 = !DILocation(line: 544, column: 10, scope: !11668)
!11686 = !DILocalVariable(name: "i", scope: !11668, file: !3, line: 545, type: !135)
!11687 = !DILocation(line: 545, column: 6, scope: !11668)
!11688 = !DILocation(line: 546, column: 2, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11668, file: !3, line: 546, column: 2)
!11690 = !DILocation(line: 546, column: 2, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11689, file: !3, line: 546, column: 2)
!11692 = !DILocation(line: 547, column: 7, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11694, file: !3, line: 547, column: 7)
!11694 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 546, column: 52)
!11695 = !DILocation(line: 547, column: 49, scope: !11693)
!11696 = !DILocation(line: 547, column: 7, scope: !11694)
!11697 = !DILocation(line: 548, column: 9, scope: !11698)
!11698 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 548, column: 8)
!11699 = distinct !DILexicalBlock(scope: !11693, file: !3, line: 547, column: 59)
!11700 = !DILocation(line: 548, column: 16, scope: !11698)
!11701 = !DILocation(line: 548, column: 25, scope: !11698)
!11702 = !DILocation(line: 548, column: 29, scope: !11698)
!11703 = !DILocation(line: 548, column: 39, scope: !11698)
!11704 = !DILocation(line: 548, column: 36, scope: !11698)
!11705 = !DILocation(line: 548, column: 8, scope: !11699)
!11706 = !DILocation(line: 549, column: 9, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11708, file: !3, line: 549, column: 9)
!11708 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 548, column: 48)
!11709 = !DILocation(line: 549, column: 14, scope: !11707)
!11710 = !DILocation(line: 549, column: 9, scope: !11708)
!11711 = !DILocation(line: 550, column: 19, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 549, column: 23)
!11713 = !DILocation(line: 550, column: 6, scope: !11712)
!11714 = !DILocation(line: 550, column: 13, scope: !11712)
!11715 = !DILocation(line: 550, column: 17, scope: !11712)
!11716 = !DILocation(line: 551, column: 10, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11712, file: !3, line: 551, column: 10)
!11718 = !DILocation(line: 551, column: 15, scope: !11717)
!11719 = !DILocation(line: 551, column: 12, scope: !11717)
!11720 = !DILocation(line: 551, column: 10, scope: !11712)
!11721 = !DILocation(line: 552, column: 7, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11717, file: !3, line: 551, column: 26)
!11723 = !DILocation(line: 554, column: 5, scope: !11712)
!11724 = !DILocation(line: 555, column: 4, scope: !11708)
!11725 = !DILocation(line: 556, column: 3, scope: !11699)
!11726 = !DILocation(line: 557, column: 2, scope: !11694)
!11727 = distinct !{!11727, !11688, !11728}
!11728 = !DILocation(line: 557, column: 2, scope: !11689)
!11729 = !DILocation(line: 558, column: 9, scope: !11668)
!11730 = !DILocation(line: 558, column: 2, scope: !11668)
!11731 = distinct !DISubprogram(name: "BM_edge_other_vert", scope: !11189, file: !11189, line: 60, type: !11732, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11732 = !DISubroutineType(types: !11733)
!11733 = !{!1354, !1418, !11734}
!11734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11735, size: 64)
!11735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1355)
!11736 = !DILocalVariable(name: "e", arg: 1, scope: !11731, file: !11189, line: 60, type: !1418)
!11737 = !DILocation(line: 60, column: 47, scope: !11731)
!11738 = !DILocalVariable(name: "v", arg: 2, scope: !11731, file: !11189, line: 60, type: !11734)
!11739 = !DILocation(line: 60, column: 64, scope: !11731)
!11740 = !DILocation(line: 62, column: 6, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11731, file: !11189, line: 62, column: 6)
!11742 = !DILocation(line: 62, column: 9, scope: !11741)
!11743 = !DILocation(line: 62, column: 15, scope: !11741)
!11744 = !DILocation(line: 62, column: 12, scope: !11741)
!11745 = !DILocation(line: 62, column: 6, scope: !11731)
!11746 = !DILocation(line: 63, column: 10, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11741, file: !11189, line: 62, column: 18)
!11748 = !DILocation(line: 63, column: 13, scope: !11747)
!11749 = !DILocation(line: 63, column: 3, scope: !11747)
!11750 = !DILocation(line: 65, column: 11, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11741, file: !11189, line: 65, column: 11)
!11752 = !DILocation(line: 65, column: 14, scope: !11751)
!11753 = !DILocation(line: 65, column: 20, scope: !11751)
!11754 = !DILocation(line: 65, column: 17, scope: !11751)
!11755 = !DILocation(line: 65, column: 11, scope: !11741)
!11756 = !DILocation(line: 66, column: 10, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11751, file: !11189, line: 65, column: 23)
!11758 = !DILocation(line: 66, column: 13, scope: !11757)
!11759 = !DILocation(line: 66, column: 3, scope: !11757)
!11760 = !DILocation(line: 68, column: 2, scope: !11731)
!11761 = !DILocation(line: 69, column: 1, scope: !11731)
!11762 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !11763, file: !11763, line: 89, type: !11764, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11763 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11764 = !DISubroutineType(types: !11765)
!11765 = !{null, !11766}
!11766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!11767 = !DILocalVariable(name: "lb", arg: 1, scope: !11762, file: !11763, line: 89, type: !11766)
!11768 = !DILocation(line: 89, column: 53, scope: !11762)
!11769 = !DILocation(line: 89, column: 71, scope: !11762)
!11770 = !DILocation(line: 89, column: 75, scope: !11762)
!11771 = !DILocation(line: 89, column: 80, scope: !11762)
!11772 = !DILocation(line: 89, column: 59, scope: !11762)
!11773 = !DILocation(line: 89, column: 63, scope: !11762)
!11774 = !DILocation(line: 89, column: 69, scope: !11762)
!11775 = !DILocation(line: 89, column: 93, scope: !11762)
!11776 = distinct !DISubprogram(name: "mesh_set_smooth_faces", scope: !3, file: !3, line: 1455, type: !11777, scopeLine: 1456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11777 = !DISubroutineType(types: !11778)
!11778 = !{null, !4133, !1373}
!11779 = !DILocalVariable(name: "em", arg: 1, scope: !11776, file: !3, line: 1455, type: !4133)
!11780 = !DILocation(line: 1455, column: 47, scope: !11776)
!11781 = !DILocalVariable(name: "smooth", arg: 2, scope: !11776, file: !3, line: 1455, type: !1373)
!11782 = !DILocation(line: 1455, column: 57, scope: !11776)
!11783 = !DILocalVariable(name: "iter", scope: !11776, file: !3, line: 1457, type: !4456)
!11784 = !DILocation(line: 1457, column: 9, scope: !11776)
!11785 = !DILocalVariable(name: "efa", scope: !11776, file: !3, line: 1458, type: !1420)
!11786 = !DILocation(line: 1458, column: 10, scope: !11776)
!11787 = !DILocation(line: 1460, column: 6, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11776, file: !3, line: 1460, column: 6)
!11789 = !DILocation(line: 1460, column: 9, scope: !11788)
!11790 = !DILocation(line: 1460, column: 6, scope: !11776)
!11791 = !DILocation(line: 1460, column: 18, scope: !11788)
!11792 = !DILocation(line: 1462, column: 2, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11776, file: !3, line: 1462, column: 2)
!11794 = !DILocation(line: 1462, column: 2, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11793, file: !3, line: 1462, column: 2)
!11796 = !DILocation(line: 1463, column: 7, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11798, file: !3, line: 1463, column: 7)
!11798 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1462, column: 54)
!11799 = !DILocation(line: 1463, column: 7, scope: !11798)
!11800 = !DILocation(line: 1464, column: 4, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11797, file: !3, line: 1463, column: 47)
!11802 = !DILocation(line: 1465, column: 3, scope: !11801)
!11803 = !DILocation(line: 1466, column: 2, scope: !11798)
!11804 = distinct !{!11804, !11792, !11805}
!11805 = !DILocation(line: 1466, column: 2, scope: !11793)
!11806 = !DILocation(line: 1467, column: 1, scope: !11776)
!11807 = distinct !DISubprogram(name: "merge_target", scope: !3, file: !3, line: 1734, type: !11808, scopeLine: 1736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11808 = !DISubroutineType(types: !11809)
!11809 = !{!2530, !4133, !5145, !6762, !4127, !4811, !4811, !4120}
!11810 = !DILocalVariable(name: "em", arg: 1, scope: !11807, file: !3, line: 1734, type: !4133)
!11811 = !DILocation(line: 1734, column: 38, scope: !11807)
!11812 = !DILocalVariable(name: "scene", arg: 2, scope: !11807, file: !3, line: 1734, type: !5145)
!11813 = !DILocation(line: 1734, column: 49, scope: !11807)
!11814 = !DILocalVariable(name: "v3d", arg: 3, scope: !11807, file: !3, line: 1734, type: !6762)
!11815 = !DILocation(line: 1734, column: 64, scope: !11807)
!11816 = !DILocalVariable(name: "ob", arg: 4, scope: !11807, file: !3, line: 1734, type: !4127)
!11817 = !DILocation(line: 1734, column: 77, scope: !11807)
!11818 = !DILocalVariable(name: "use_cursor", arg: 5, scope: !11807, file: !3, line: 1735, type: !4811)
!11819 = !DILocation(line: 1735, column: 37, scope: !11807)
!11820 = !DILocalVariable(name: "use_uvmerge", arg: 6, scope: !11807, file: !3, line: 1735, type: !4811)
!11821 = !DILocation(line: 1735, column: 60, scope: !11807)
!11822 = !DILocalVariable(name: "wmop", arg: 7, scope: !11807, file: !3, line: 1735, type: !4120)
!11823 = !DILocation(line: 1735, column: 85, scope: !11807)
!11824 = !DILocalVariable(name: "iter", scope: !11807, file: !3, line: 1737, type: !4456)
!11825 = !DILocation(line: 1737, column: 9, scope: !11807)
!11826 = !DILocalVariable(name: "v", scope: !11807, file: !3, line: 1738, type: !1354)
!11827 = !DILocation(line: 1738, column: 10, scope: !11807)
!11828 = !DILocalVariable(name: "co", scope: !11807, file: !3, line: 1739, type: !1375)
!11829 = !DILocation(line: 1739, column: 8, scope: !11807)
!11830 = !DILocalVariable(name: "cent", scope: !11807, file: !3, line: 1739, type: !1375)
!11831 = !DILocation(line: 1739, column: 15, scope: !11807)
!11832 = !DILocalVariable(name: "vco", scope: !11807, file: !3, line: 1740, type: !7396)
!11833 = !DILocation(line: 1740, column: 15, scope: !11807)
!11834 = !DILocation(line: 1742, column: 6, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 1742, column: 6)
!11836 = !DILocation(line: 1742, column: 6, scope: !11807)
!11837 = !DILocation(line: 1743, column: 32, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 1742, column: 18)
!11839 = !DILocation(line: 1743, column: 39, scope: !11838)
!11840 = !DILocation(line: 1743, column: 9, scope: !11838)
!11841 = !DILocation(line: 1743, column: 7, scope: !11838)
!11842 = !DILocation(line: 1744, column: 14, scope: !11838)
!11843 = !DILocation(line: 1744, column: 18, scope: !11838)
!11844 = !DILocation(line: 1744, column: 3, scope: !11838)
!11845 = !DILocation(line: 1745, column: 13, scope: !11838)
!11846 = !DILocation(line: 1745, column: 17, scope: !11838)
!11847 = !DILocation(line: 1745, column: 23, scope: !11838)
!11848 = !DILocation(line: 1745, column: 3, scope: !11838)
!11849 = !DILocation(line: 1746, column: 2, scope: !11838)
!11850 = !DILocalVariable(name: "fac", scope: !11851, file: !3, line: 1748, type: !1344)
!11851 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 1747, column: 7)
!11852 = !DILocation(line: 1748, column: 9, scope: !11851)
!11853 = !DILocalVariable(name: "i", scope: !11851, file: !3, line: 1749, type: !135)
!11854 = !DILocation(line: 1749, column: 7, scope: !11851)
!11855 = !DILocation(line: 1750, column: 3, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11851, file: !3, line: 1750, column: 3)
!11857 = !DILocation(line: 1750, column: 3, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11856, file: !3, line: 1750, column: 3)
!11859 = !DILocation(line: 1751, column: 9, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11861, file: !3, line: 1751, column: 8)
!11861 = distinct !DILexicalBlock(scope: !11858, file: !3, line: 1750, column: 53)
!11862 = !DILocation(line: 1751, column: 8, scope: !11861)
!11863 = !DILocation(line: 1752, column: 5, scope: !11860)
!11864 = !DILocation(line: 1753, column: 14, scope: !11861)
!11865 = !DILocation(line: 1753, column: 20, scope: !11861)
!11866 = !DILocation(line: 1753, column: 23, scope: !11861)
!11867 = !DILocation(line: 1753, column: 4, scope: !11861)
!11868 = !DILocation(line: 1754, column: 5, scope: !11861)
!11869 = !DILocation(line: 1755, column: 3, scope: !11861)
!11870 = distinct !{!11870, !11855, !11871}
!11871 = !DILocation(line: 1755, column: 3, scope: !11856)
!11872 = !DILocation(line: 1757, column: 8, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11851, file: !3, line: 1757, column: 7)
!11874 = !DILocation(line: 1757, column: 7, scope: !11851)
!11875 = !DILocation(line: 1758, column: 4, scope: !11873)
!11876 = !DILocation(line: 1760, column: 23, scope: !11851)
!11877 = !DILocation(line: 1760, column: 16, scope: !11851)
!11878 = !DILocation(line: 1760, column: 14, scope: !11851)
!11879 = !DILocation(line: 1760, column: 7, scope: !11851)
!11880 = !DILocation(line: 1761, column: 13, scope: !11851)
!11881 = !DILocation(line: 1761, column: 19, scope: !11851)
!11882 = !DILocation(line: 1761, column: 3, scope: !11851)
!11883 = !DILocation(line: 1762, column: 14, scope: !11851)
!11884 = !DILocation(line: 1762, column: 18, scope: !11851)
!11885 = !DILocation(line: 1762, column: 3, scope: !11851)
!11886 = !DILocation(line: 1763, column: 9, scope: !11851)
!11887 = !DILocation(line: 1763, column: 7, scope: !11851)
!11888 = !DILocation(line: 1766, column: 7, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 1766, column: 6)
!11890 = !DILocation(line: 1766, column: 6, scope: !11807)
!11891 = !DILocation(line: 1767, column: 3, scope: !11889)
!11892 = !DILocation(line: 1769, column: 6, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 1769, column: 6)
!11894 = !DILocation(line: 1769, column: 6, scope: !11807)
!11895 = !DILocation(line: 1770, column: 22, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 1770, column: 7)
!11897 = distinct !DILexicalBlock(scope: !11893, file: !3, line: 1769, column: 19)
!11898 = !DILocation(line: 1770, column: 26, scope: !11896)
!11899 = !DILocation(line: 1770, column: 8, scope: !11896)
!11900 = !DILocation(line: 1770, column: 7, scope: !11897)
!11901 = !DILocation(line: 1771, column: 4, scope: !11896)
!11902 = !DILocation(line: 1772, column: 2, scope: !11897)
!11903 = !DILocation(line: 1774, column: 21, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 1774, column: 6)
!11905 = !DILocation(line: 1774, column: 25, scope: !11904)
!11906 = !DILocation(line: 1774, column: 83, scope: !11904)
!11907 = !DILocation(line: 1774, column: 7, scope: !11904)
!11908 = !DILocation(line: 1774, column: 6, scope: !11807)
!11909 = !DILocation(line: 1775, column: 3, scope: !11904)
!11910 = !DILocation(line: 1777, column: 2, scope: !11807)
!11911 = !DILocation(line: 1778, column: 1, scope: !11807)
!11912 = distinct !DISubprogram(name: "merge_firstlast", scope: !3, file: !3, line: 1695, type: !11913, scopeLine: 1696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!11913 = !DISubroutineType(types: !11914)
!11914 = !{!2530, !4133, !4811, !4811, !4120}
!11915 = !DILocalVariable(name: "em", arg: 1, scope: !11912, file: !3, line: 1695, type: !4133)
!11916 = !DILocation(line: 1695, column: 41, scope: !11912)
!11917 = !DILocalVariable(name: "use_first", arg: 2, scope: !11912, file: !3, line: 1695, type: !4811)
!11918 = !DILocation(line: 1695, column: 56, scope: !11912)
!11919 = !DILocalVariable(name: "use_uvmerge", arg: 3, scope: !11912, file: !3, line: 1695, type: !4811)
!11920 = !DILocation(line: 1695, column: 78, scope: !11912)
!11921 = !DILocalVariable(name: "wmop", arg: 4, scope: !11912, file: !3, line: 1695, type: !4120)
!11922 = !DILocation(line: 1695, column: 103, scope: !11912)
!11923 = !DILocalVariable(name: "mergevert", scope: !11912, file: !3, line: 1697, type: !1354)
!11924 = !DILocation(line: 1697, column: 10, scope: !11912)
!11925 = !DILocalVariable(name: "ese", scope: !11912, file: !3, line: 1698, type: !3753)
!11926 = !DILocation(line: 1698, column: 19, scope: !11912)
!11927 = !DILocation(line: 1705, column: 6, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 1705, column: 6)
!11929 = !DILocation(line: 1705, column: 16, scope: !11928)
!11930 = !DILocation(line: 1705, column: 6, scope: !11912)
!11931 = !DILocation(line: 1706, column: 8, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11933, file: !3, line: 1706, column: 7)
!11933 = distinct !DILexicalBlock(scope: !11928, file: !3, line: 1705, column: 26)
!11934 = !DILocation(line: 1706, column: 12, scope: !11932)
!11935 = !DILocation(line: 1706, column: 16, scope: !11932)
!11936 = !DILocation(line: 1706, column: 25, scope: !11932)
!11937 = !DILocation(line: 1706, column: 30, scope: !11932)
!11938 = !DILocation(line: 1706, column: 53, scope: !11932)
!11939 = !DILocation(line: 1706, column: 57, scope: !11932)
!11940 = !DILocation(line: 1706, column: 61, scope: !11932)
!11941 = !DILocation(line: 1706, column: 70, scope: !11932)
!11942 = !DILocation(line: 1706, column: 34, scope: !11932)
!11943 = !DILocation(line: 1706, column: 77, scope: !11932)
!11944 = !DILocation(line: 1706, column: 33, scope: !11932)
!11945 = !DILocation(line: 1706, column: 83, scope: !11932)
!11946 = !DILocation(line: 1706, column: 7, scope: !11933)
!11947 = !DILocation(line: 1707, column: 4, scope: !11932)
!11948 = !DILocation(line: 1709, column: 9, scope: !11933)
!11949 = !DILocation(line: 1709, column: 13, scope: !11933)
!11950 = !DILocation(line: 1709, column: 17, scope: !11933)
!11951 = !DILocation(line: 1709, column: 26, scope: !11933)
!11952 = !DILocation(line: 1709, column: 7, scope: !11933)
!11953 = !DILocation(line: 1710, column: 25, scope: !11933)
!11954 = !DILocation(line: 1710, column: 30, scope: !11933)
!11955 = !DILocation(line: 1710, column: 15, scope: !11933)
!11956 = !DILocation(line: 1710, column: 13, scope: !11933)
!11957 = !DILocation(line: 1711, column: 2, scope: !11933)
!11958 = !DILocation(line: 1713, column: 8, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11960, file: !3, line: 1713, column: 7)
!11960 = distinct !DILexicalBlock(scope: !11928, file: !3, line: 1712, column: 7)
!11961 = !DILocation(line: 1713, column: 12, scope: !11959)
!11962 = !DILocation(line: 1713, column: 16, scope: !11959)
!11963 = !DILocation(line: 1713, column: 25, scope: !11959)
!11964 = !DILocation(line: 1713, column: 31, scope: !11959)
!11965 = !DILocation(line: 1713, column: 54, scope: !11959)
!11966 = !DILocation(line: 1713, column: 58, scope: !11959)
!11967 = !DILocation(line: 1713, column: 62, scope: !11959)
!11968 = !DILocation(line: 1713, column: 71, scope: !11959)
!11969 = !DILocation(line: 1713, column: 35, scope: !11959)
!11970 = !DILocation(line: 1713, column: 79, scope: !11959)
!11971 = !DILocation(line: 1713, column: 34, scope: !11959)
!11972 = !DILocation(line: 1713, column: 85, scope: !11959)
!11973 = !DILocation(line: 1713, column: 7, scope: !11960)
!11974 = !DILocation(line: 1714, column: 4, scope: !11959)
!11975 = !DILocation(line: 1716, column: 9, scope: !11960)
!11976 = !DILocation(line: 1716, column: 13, scope: !11960)
!11977 = !DILocation(line: 1716, column: 17, scope: !11960)
!11978 = !DILocation(line: 1716, column: 26, scope: !11960)
!11979 = !DILocation(line: 1716, column: 7, scope: !11960)
!11980 = !DILocation(line: 1717, column: 25, scope: !11960)
!11981 = !DILocation(line: 1717, column: 30, scope: !11960)
!11982 = !DILocation(line: 1717, column: 15, scope: !11960)
!11983 = !DILocation(line: 1717, column: 13, scope: !11960)
!11984 = !DILocation(line: 1720, column: 7, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 1720, column: 6)
!11986 = !DILocation(line: 1720, column: 6, scope: !11912)
!11987 = !DILocation(line: 1721, column: 3, scope: !11985)
!11988 = !DILocation(line: 1723, column: 6, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 1723, column: 6)
!11990 = !DILocation(line: 1723, column: 6, scope: !11912)
!11991 = !DILocation(line: 1724, column: 22, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 1724, column: 7)
!11993 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 1723, column: 19)
!11994 = !DILocation(line: 1724, column: 26, scope: !11992)
!11995 = !DILocation(line: 1724, column: 94, scope: !11992)
!11996 = !DILocation(line: 1724, column: 8, scope: !11992)
!11997 = !DILocation(line: 1724, column: 7, scope: !11993)
!11998 = !DILocation(line: 1725, column: 4, scope: !11992)
!11999 = !DILocation(line: 1726, column: 2, scope: !11993)
!12000 = !DILocation(line: 1728, column: 21, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 1728, column: 6)
!12002 = !DILocation(line: 1728, column: 25, scope: !12001)
!12003 = !DILocation(line: 1728, column: 83, scope: !12001)
!12004 = !DILocation(line: 1728, column: 94, scope: !12001)
!12005 = !DILocation(line: 1728, column: 7, scope: !12001)
!12006 = !DILocation(line: 1728, column: 6, scope: !11912)
!12007 = !DILocation(line: 1729, column: 3, scope: !12001)
!12008 = !DILocation(line: 1731, column: 2, scope: !11912)
!12009 = !DILocation(line: 1732, column: 1, scope: !11912)
!12010 = distinct !DISubprogram(name: "copy_v3_v3", scope: !12011, file: !12011, line: 64, type: !12012, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12011 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12012 = !DISubroutineType(types: !12013)
!12013 = !{null, !3277, !7396}
!12014 = !DILocalVariable(name: "r", arg: 1, scope: !12010, file: !12011, line: 64, type: !3277)
!12015 = !DILocation(line: 64, column: 31, scope: !12010)
!12016 = !DILocalVariable(name: "a", arg: 2, scope: !12010, file: !12011, line: 64, type: !7396)
!12017 = !DILocation(line: 64, column: 49, scope: !12010)
!12018 = !DILocation(line: 66, column: 9, scope: !12010)
!12019 = !DILocation(line: 66, column: 2, scope: !12010)
!12020 = !DILocation(line: 66, column: 7, scope: !12010)
!12021 = !DILocation(line: 67, column: 9, scope: !12010)
!12022 = !DILocation(line: 67, column: 2, scope: !12010)
!12023 = !DILocation(line: 67, column: 7, scope: !12010)
!12024 = !DILocation(line: 68, column: 9, scope: !12010)
!12025 = !DILocation(line: 68, column: 2, scope: !12010)
!12026 = !DILocation(line: 68, column: 7, scope: !12010)
!12027 = !DILocation(line: 69, column: 1, scope: !12010)
!12028 = distinct !DISubprogram(name: "add_v3_v3", scope: !12011, file: !12011, line: 302, type: !12012, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12029 = !DILocalVariable(name: "r", arg: 1, scope: !12028, file: !12011, line: 302, type: !3277)
!12030 = !DILocation(line: 302, column: 30, scope: !12028)
!12031 = !DILocalVariable(name: "a", arg: 2, scope: !12028, file: !12011, line: 302, type: !7396)
!12032 = !DILocation(line: 302, column: 48, scope: !12028)
!12033 = !DILocation(line: 304, column: 10, scope: !12028)
!12034 = !DILocation(line: 304, column: 2, scope: !12028)
!12035 = !DILocation(line: 304, column: 7, scope: !12028)
!12036 = !DILocation(line: 305, column: 10, scope: !12028)
!12037 = !DILocation(line: 305, column: 2, scope: !12028)
!12038 = !DILocation(line: 305, column: 7, scope: !12028)
!12039 = !DILocation(line: 306, column: 10, scope: !12028)
!12040 = !DILocation(line: 306, column: 2, scope: !12028)
!12041 = !DILocation(line: 306, column: 7, scope: !12028)
!12042 = !DILocation(line: 307, column: 1, scope: !12028)
!12043 = distinct !DISubprogram(name: "mul_v3_fl", scope: !12011, file: !12011, line: 392, type: !12044, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12044 = !DISubroutineType(types: !12045)
!12045 = !{null, !3277, !1344}
!12046 = !DILocalVariable(name: "r", arg: 1, scope: !12043, file: !12011, line: 392, type: !3277)
!12047 = !DILocation(line: 392, column: 30, scope: !12043)
!12048 = !DILocalVariable(name: "f", arg: 2, scope: !12043, file: !12011, line: 392, type: !1344)
!12049 = !DILocation(line: 392, column: 42, scope: !12043)
!12050 = !DILocation(line: 394, column: 10, scope: !12043)
!12051 = !DILocation(line: 394, column: 2, scope: !12043)
!12052 = !DILocation(line: 394, column: 7, scope: !12043)
!12053 = !DILocation(line: 395, column: 10, scope: !12043)
!12054 = !DILocation(line: 395, column: 2, scope: !12043)
!12055 = !DILocation(line: 395, column: 7, scope: !12043)
!12056 = !DILocation(line: 396, column: 10, scope: !12043)
!12057 = !DILocation(line: 396, column: 2, scope: !12043)
!12058 = !DILocation(line: 396, column: 7, scope: !12043)
!12059 = !DILocation(line: 397, column: 1, scope: !12043)
!12060 = distinct !DISubprogram(name: "shape_propagate", scope: !3, file: !3, line: 1976, type: !12061, scopeLine: 1977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12061 = !DISubroutineType(types: !12062)
!12062 = !{null, !4133, !4120}
!12063 = !DILocalVariable(name: "em", arg: 1, scope: !12060, file: !3, line: 1976, type: !4133)
!12064 = !DILocation(line: 1976, column: 41, scope: !12060)
!12065 = !DILocalVariable(name: "op", arg: 2, scope: !12060, file: !3, line: 1976, type: !4120)
!12066 = !DILocation(line: 1976, column: 57, scope: !12060)
!12067 = !DILocalVariable(name: "iter", scope: !12060, file: !3, line: 1978, type: !4456)
!12068 = !DILocation(line: 1978, column: 9, scope: !12060)
!12069 = !DILocalVariable(name: "eve", scope: !12060, file: !3, line: 1979, type: !1354)
!12070 = !DILocation(line: 1979, column: 10, scope: !12060)
!12071 = !DILocalVariable(name: "co", scope: !12060, file: !3, line: 1980, type: !3277)
!12072 = !DILocation(line: 1980, column: 9, scope: !12060)
!12073 = !DILocalVariable(name: "i", scope: !12060, file: !3, line: 1981, type: !135)
!12074 = !DILocation(line: 1981, column: 6, scope: !12060)
!12075 = !DILocalVariable(name: "totshape", scope: !12060, file: !3, line: 1981, type: !135)
!12076 = !DILocation(line: 1981, column: 9, scope: !12060)
!12077 = !DILocation(line: 1981, column: 49, scope: !12060)
!12078 = !DILocation(line: 1981, column: 53, scope: !12060)
!12079 = !DILocation(line: 1981, column: 57, scope: !12060)
!12080 = !DILocation(line: 1981, column: 20, scope: !12060)
!12081 = !DILocation(line: 1983, column: 29, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 1983, column: 6)
!12083 = !DILocation(line: 1983, column: 33, scope: !12082)
!12084 = !DILocation(line: 1983, column: 37, scope: !12082)
!12085 = !DILocation(line: 1983, column: 7, scope: !12082)
!12086 = !DILocation(line: 1983, column: 6, scope: !12060)
!12087 = !DILocation(line: 1984, column: 14, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12082, file: !3, line: 1983, column: 58)
!12089 = !DILocation(line: 1984, column: 18, scope: !12088)
!12090 = !DILocation(line: 1984, column: 3, scope: !12088)
!12091 = !DILocation(line: 1985, column: 3, scope: !12088)
!12092 = !DILocation(line: 1988, column: 2, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 1988, column: 2)
!12094 = !DILocation(line: 1988, column: 2, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12093, file: !3, line: 1988, column: 2)
!12096 = !DILocation(line: 1989, column: 8, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12098, file: !3, line: 1989, column: 7)
!12098 = distinct !DILexicalBlock(scope: !12095, file: !3, line: 1988, column: 54)
!12099 = !DILocation(line: 1989, column: 47, scope: !12097)
!12100 = !DILocation(line: 1989, column: 50, scope: !12097)
!12101 = !DILocation(line: 1989, column: 7, scope: !12098)
!12102 = !DILocation(line: 1990, column: 4, scope: !12097)
!12103 = !DILocation(line: 1992, column: 10, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12098, file: !3, line: 1992, column: 3)
!12105 = !DILocation(line: 1992, column: 8, scope: !12104)
!12106 = !DILocation(line: 1992, column: 15, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 1992, column: 3)
!12108 = !DILocation(line: 1992, column: 19, scope: !12107)
!12109 = !DILocation(line: 1992, column: 17, scope: !12107)
!12110 = !DILocation(line: 1992, column: 3, scope: !12104)
!12111 = !DILocation(line: 1993, column: 33, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !12107, file: !3, line: 1992, column: 34)
!12113 = !DILocation(line: 1993, column: 37, scope: !12112)
!12114 = !DILocation(line: 1993, column: 41, scope: !12112)
!12115 = !DILocation(line: 1993, column: 48, scope: !12112)
!12116 = !DILocation(line: 1993, column: 53, scope: !12112)
!12117 = !DILocation(line: 1993, column: 58, scope: !12112)
!12118 = !DILocation(line: 1993, column: 77, scope: !12112)
!12119 = !DILocation(line: 1993, column: 9, scope: !12112)
!12120 = !DILocation(line: 1993, column: 7, scope: !12112)
!12121 = !DILocation(line: 1994, column: 15, scope: !12112)
!12122 = !DILocation(line: 1994, column: 19, scope: !12112)
!12123 = !DILocation(line: 1994, column: 24, scope: !12112)
!12124 = !DILocation(line: 1994, column: 4, scope: !12112)
!12125 = !DILocation(line: 1995, column: 3, scope: !12112)
!12126 = !DILocation(line: 1992, column: 30, scope: !12107)
!12127 = !DILocation(line: 1992, column: 3, scope: !12107)
!12128 = distinct !{!12128, !12110, !12129}
!12129 = !DILocation(line: 1995, column: 3, scope: !12104)
!12130 = !DILocation(line: 1996, column: 2, scope: !12098)
!12131 = distinct !{!12131, !12092, !12132}
!12132 = !DILocation(line: 1996, column: 2, scope: !12093)
!12133 = !DILocation(line: 2006, column: 1, scope: !12060)
!12134 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !12011, file: !12011, line: 357, type: !12135, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12135 = !DISubroutineType(types: !12136)
!12136 = !{null, !3277, !7396, !7396}
!12137 = !DILocalVariable(name: "r", arg: 1, scope: !12134, file: !12011, line: 357, type: !3277)
!12138 = !DILocation(line: 357, column: 32, scope: !12134)
!12139 = !DILocalVariable(name: "a", arg: 2, scope: !12134, file: !12011, line: 357, type: !7396)
!12140 = !DILocation(line: 357, column: 50, scope: !12134)
!12141 = !DILocalVariable(name: "b", arg: 3, scope: !12134, file: !12011, line: 357, type: !7396)
!12142 = !DILocation(line: 357, column: 68, scope: !12134)
!12143 = !DILocation(line: 359, column: 9, scope: !12134)
!12144 = !DILocation(line: 359, column: 16, scope: !12134)
!12145 = !DILocation(line: 359, column: 14, scope: !12134)
!12146 = !DILocation(line: 359, column: 2, scope: !12134)
!12147 = !DILocation(line: 359, column: 7, scope: !12134)
!12148 = !DILocation(line: 360, column: 9, scope: !12134)
!12149 = !DILocation(line: 360, column: 16, scope: !12134)
!12150 = !DILocation(line: 360, column: 14, scope: !12134)
!12151 = !DILocation(line: 360, column: 2, scope: !12134)
!12152 = !DILocation(line: 360, column: 7, scope: !12134)
!12153 = !DILocation(line: 361, column: 9, scope: !12134)
!12154 = !DILocation(line: 361, column: 16, scope: !12134)
!12155 = !DILocation(line: 361, column: 14, scope: !12134)
!12156 = !DILocation(line: 361, column: 2, scope: !12134)
!12157 = !DILocation(line: 361, column: 7, scope: !12134)
!12158 = !DILocation(line: 362, column: 1, scope: !12134)
!12159 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !12011, file: !12011, line: 507, type: !12160, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12160 = !DISubroutineType(types: !12161)
!12161 = !{null, !3277, !7396, !1344}
!12162 = !DILocalVariable(name: "r", arg: 1, scope: !12159, file: !12011, line: 507, type: !3277)
!12163 = !DILocation(line: 507, column: 33, scope: !12159)
!12164 = !DILocalVariable(name: "a", arg: 2, scope: !12159, file: !12011, line: 507, type: !7396)
!12165 = !DILocation(line: 507, column: 51, scope: !12159)
!12166 = !DILocalVariable(name: "f", arg: 3, scope: !12159, file: !12011, line: 507, type: !1344)
!12167 = !DILocation(line: 507, column: 63, scope: !12159)
!12168 = !DILocation(line: 509, column: 10, scope: !12159)
!12169 = !DILocation(line: 509, column: 17, scope: !12159)
!12170 = !DILocation(line: 509, column: 15, scope: !12159)
!12171 = !DILocation(line: 509, column: 2, scope: !12159)
!12172 = !DILocation(line: 509, column: 7, scope: !12159)
!12173 = !DILocation(line: 510, column: 10, scope: !12159)
!12174 = !DILocation(line: 510, column: 17, scope: !12159)
!12175 = !DILocation(line: 510, column: 15, scope: !12159)
!12176 = !DILocation(line: 510, column: 2, scope: !12159)
!12177 = !DILocation(line: 510, column: 7, scope: !12159)
!12178 = !DILocation(line: 511, column: 10, scope: !12159)
!12179 = !DILocation(line: 511, column: 17, scope: !12159)
!12180 = !DILocation(line: 511, column: 15, scope: !12159)
!12181 = !DILocation(line: 511, column: 2, scope: !12159)
!12182 = !DILocation(line: 511, column: 7, scope: !12159)
!12183 = !DILocation(line: 512, column: 1, scope: !12159)
!12184 = distinct !DISubprogram(name: "copy_v2_fl", scope: !12011, file: !12011, line: 79, type: !12044, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12185 = !DILocalVariable(name: "r", arg: 1, scope: !12184, file: !12011, line: 79, type: !3277)
!12186 = !DILocation(line: 79, column: 31, scope: !12184)
!12187 = !DILocalVariable(name: "f", arg: 2, scope: !12184, file: !12011, line: 79, type: !1344)
!12188 = !DILocation(line: 79, column: 43, scope: !12184)
!12189 = !DILocation(line: 81, column: 9, scope: !12184)
!12190 = !DILocation(line: 81, column: 2, scope: !12184)
!12191 = !DILocation(line: 81, column: 7, scope: !12184)
!12192 = !DILocation(line: 82, column: 9, scope: !12184)
!12193 = !DILocation(line: 82, column: 2, scope: !12184)
!12194 = !DILocation(line: 82, column: 7, scope: !12184)
!12195 = !DILocation(line: 83, column: 1, scope: !12184)
!12196 = distinct !DISubprogram(name: "_bm_elem_index_set", scope: !4621, file: !4621, line: 114, type: !12197, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12197 = !DISubroutineType(types: !12198)
!12198 = !{null, !11140, !4052}
!12199 = !DILocalVariable(name: "head", arg: 1, scope: !12196, file: !4621, line: 114, type: !11140)
!12200 = !DILocation(line: 114, column: 46, scope: !12196)
!12201 = !DILocalVariable(name: "index", arg: 2, scope: !12196, file: !4621, line: 114, type: !4052)
!12202 = !DILocation(line: 114, column: 62, scope: !12196)
!12203 = !DILocation(line: 116, column: 16, scope: !12196)
!12204 = !DILocation(line: 116, column: 2, scope: !12196)
!12205 = !DILocation(line: 116, column: 8, scope: !12196)
!12206 = !DILocation(line: 116, column: 14, scope: !12196)
!12207 = !DILocation(line: 117, column: 1, scope: !12196)
!12208 = distinct !DISubprogram(name: "_bm_elem_index_get", scope: !4621, file: !4621, line: 119, type: !12209, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12209 = !DISubroutineType(types: !12210)
!12210 = !{!135, !4624}
!12211 = !DILocalVariable(name: "head", arg: 1, scope: !12208, file: !4621, line: 119, type: !4624)
!12212 = !DILocation(line: 119, column: 51, scope: !12208)
!12213 = !DILocation(line: 121, column: 9, scope: !12208)
!12214 = !DILocation(line: 121, column: 15, scope: !12208)
!12215 = !DILocation(line: 121, column: 2, scope: !12208)
!12216 = distinct !DISubprogram(name: "bm_edge_seg_isect", scope: !3, file: !3, line: 2255, type: !12217, scopeLine: 2257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12217 = !DISubroutineType(types: !12218)
!12218 = !{!1344, !7396, !7396, !7747, !135, !1365, !10685}
!12219 = !DILocalVariable(name: "sco_a", arg: 1, scope: !12216, file: !3, line: 2255, type: !7396)
!12220 = !DILocation(line: 2255, column: 44, scope: !12216)
!12221 = !DILocalVariable(name: "sco_b", arg: 2, scope: !12216, file: !3, line: 2255, type: !7396)
!12222 = !DILocation(line: 2255, column: 66, scope: !12216)
!12223 = !DILocalVariable(name: "mouse_path", arg: 3, scope: !12216, file: !3, line: 2256, type: !7747)
!12224 = !DILocation(line: 2256, column: 40, scope: !12216)
!12225 = !DILocalVariable(name: "len", arg: 4, scope: !12216, file: !3, line: 2256, type: !135)
!12226 = !DILocation(line: 2256, column: 60, scope: !12216)
!12227 = !DILocalVariable(name: "mode", arg: 5, scope: !12216, file: !3, line: 2256, type: !1365)
!12228 = !DILocation(line: 2256, column: 70, scope: !12216)
!12229 = !DILocalVariable(name: "isected", arg: 6, scope: !12216, file: !3, line: 2256, type: !10685)
!12230 = !DILocation(line: 2256, column: 81, scope: !12216)
!12231 = !DILocalVariable(name: "x11", scope: !12216, file: !3, line: 2259, type: !1344)
!12232 = !DILocation(line: 2259, column: 8, scope: !12216)
!12233 = !DILocalVariable(name: "y11", scope: !12216, file: !3, line: 2259, type: !1344)
!12234 = !DILocation(line: 2259, column: 13, scope: !12216)
!12235 = !DILocalVariable(name: "x12", scope: !12216, file: !3, line: 2259, type: !1344)
!12236 = !DILocation(line: 2259, column: 18, scope: !12216)
!12237 = !DILocalVariable(name: "y12", scope: !12216, file: !3, line: 2259, type: !1344)
!12238 = !DILocation(line: 2259, column: 27, scope: !12216)
!12239 = !DILocalVariable(name: "x2max", scope: !12216, file: !3, line: 2259, type: !1344)
!12240 = !DILocation(line: 2259, column: 36, scope: !12216)
!12241 = !DILocalVariable(name: "x2min", scope: !12216, file: !3, line: 2259, type: !1344)
!12242 = !DILocation(line: 2259, column: 43, scope: !12216)
!12243 = !DILocalVariable(name: "y2max", scope: !12216, file: !3, line: 2259, type: !1344)
!12244 = !DILocation(line: 2259, column: 50, scope: !12216)
!12245 = !DILocalVariable(name: "y2min", scope: !12216, file: !3, line: 2260, type: !1344)
!12246 = !DILocation(line: 2260, column: 8, scope: !12216)
!12247 = !DILocalVariable(name: "dist", scope: !12216, file: !3, line: 2260, type: !1344)
!12248 = !DILocation(line: 2260, column: 15, scope: !12216)
!12249 = !DILocalVariable(name: "lastdist", scope: !12216, file: !3, line: 2260, type: !1344)
!12250 = !DILocation(line: 2260, column: 21, scope: !12216)
!12251 = !DILocalVariable(name: "xdiff2", scope: !12216, file: !3, line: 2260, type: !1344)
!12252 = !DILocation(line: 2260, column: 35, scope: !12216)
!12253 = !DILocalVariable(name: "xdiff1", scope: !12216, file: !3, line: 2260, type: !1344)
!12254 = !DILocation(line: 2260, column: 43, scope: !12216)
!12255 = !DILocalVariable(name: "m1", scope: !12216, file: !3, line: 2261, type: !1344)
!12256 = !DILocation(line: 2261, column: 8, scope: !12216)
!12257 = !DILocalVariable(name: "b1", scope: !12216, file: !3, line: 2261, type: !1344)
!12258 = !DILocation(line: 2261, column: 12, scope: !12216)
!12259 = !DILocalVariable(name: "m2", scope: !12216, file: !3, line: 2261, type: !1344)
!12260 = !DILocation(line: 2261, column: 16, scope: !12216)
!12261 = !DILocalVariable(name: "b2", scope: !12216, file: !3, line: 2261, type: !1344)
!12262 = !DILocation(line: 2261, column: 20, scope: !12216)
!12263 = !DILocalVariable(name: "x21", scope: !12216, file: !3, line: 2261, type: !1344)
!12264 = !DILocation(line: 2261, column: 24, scope: !12216)
!12265 = !DILocalVariable(name: "x22", scope: !12216, file: !3, line: 2261, type: !1344)
!12266 = !DILocation(line: 2261, column: 29, scope: !12216)
!12267 = !DILocalVariable(name: "y21", scope: !12216, file: !3, line: 2261, type: !1344)
!12268 = !DILocation(line: 2261, column: 34, scope: !12216)
!12269 = !DILocalVariable(name: "y22", scope: !12216, file: !3, line: 2261, type: !1344)
!12270 = !DILocation(line: 2261, column: 39, scope: !12216)
!12271 = !DILocalVariable(name: "xi", scope: !12216, file: !3, line: 2261, type: !1344)
!12272 = !DILocation(line: 2261, column: 44, scope: !12216)
!12273 = !DILocalVariable(name: "yi", scope: !12216, file: !3, line: 2262, type: !1344)
!12274 = !DILocation(line: 2262, column: 8, scope: !12216)
!12275 = !DILocalVariable(name: "x1min", scope: !12216, file: !3, line: 2262, type: !1344)
!12276 = !DILocation(line: 2262, column: 12, scope: !12216)
!12277 = !DILocalVariable(name: "x1max", scope: !12216, file: !3, line: 2262, type: !1344)
!12278 = !DILocation(line: 2262, column: 19, scope: !12216)
!12279 = !DILocalVariable(name: "y1max", scope: !12216, file: !3, line: 2262, type: !1344)
!12280 = !DILocation(line: 2262, column: 26, scope: !12216)
!12281 = !DILocalVariable(name: "y1min", scope: !12216, file: !3, line: 2262, type: !1344)
!12282 = !DILocation(line: 2262, column: 33, scope: !12216)
!12283 = !DILocalVariable(name: "perc", scope: !12216, file: !3, line: 2262, type: !1344)
!12284 = !DILocation(line: 2262, column: 40, scope: !12216)
!12285 = !DILocalVariable(name: "threshold", scope: !12216, file: !3, line: 2263, type: !1344)
!12286 = !DILocation(line: 2263, column: 8, scope: !12216)
!12287 = !DILocalVariable(name: "i", scope: !12216, file: !3, line: 2264, type: !135)
!12288 = !DILocation(line: 2264, column: 6, scope: !12216)
!12289 = !DILocation(line: 2270, column: 8, scope: !12216)
!12290 = !DILocation(line: 2270, column: 6, scope: !12216)
!12291 = !DILocation(line: 2271, column: 8, scope: !12216)
!12292 = !DILocation(line: 2271, column: 6, scope: !12216)
!12293 = !DILocation(line: 2273, column: 8, scope: !12216)
!12294 = !DILocation(line: 2273, column: 6, scope: !12216)
!12295 = !DILocation(line: 2274, column: 8, scope: !12216)
!12296 = !DILocation(line: 2274, column: 6, scope: !12216)
!12297 = !DILocation(line: 2276, column: 12, scope: !12216)
!12298 = !DILocation(line: 2276, column: 18, scope: !12216)
!12299 = !DILocation(line: 2276, column: 16, scope: !12216)
!12300 = !DILocation(line: 2276, column: 9, scope: !12216)
!12301 = !DILocation(line: 2277, column: 6, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12216, file: !3, line: 2277, column: 6)
!12303 = !DILocation(line: 2277, column: 6, scope: !12216)
!12304 = !DILocation(line: 2278, column: 9, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 2277, column: 14)
!12306 = !DILocation(line: 2278, column: 15, scope: !12305)
!12307 = !DILocation(line: 2278, column: 13, scope: !12305)
!12308 = !DILocation(line: 2278, column: 22, scope: !12305)
!12309 = !DILocation(line: 2278, column: 20, scope: !12305)
!12310 = !DILocation(line: 2278, column: 6, scope: !12305)
!12311 = !DILocation(line: 2279, column: 10, scope: !12305)
!12312 = !DILocation(line: 2279, column: 16, scope: !12305)
!12313 = !DILocation(line: 2279, column: 14, scope: !12305)
!12314 = !DILocation(line: 2279, column: 24, scope: !12305)
!12315 = !DILocation(line: 2279, column: 30, scope: !12305)
!12316 = !DILocation(line: 2279, column: 28, scope: !12305)
!12317 = !DILocation(line: 2279, column: 21, scope: !12305)
!12318 = !DILocation(line: 2279, column: 38, scope: !12305)
!12319 = !DILocation(line: 2279, column: 36, scope: !12305)
!12320 = !DILocation(line: 2279, column: 6, scope: !12305)
!12321 = !DILocation(line: 2280, column: 2, scope: !12305)
!12322 = !DILocation(line: 2282, column: 6, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 2281, column: 7)
!12324 = !DILocation(line: 2283, column: 8, scope: !12323)
!12325 = !DILocation(line: 2283, column: 6, scope: !12323)
!12326 = !DILocation(line: 2286, column: 3, scope: !12216)
!12327 = !DILocation(line: 2286, column: 11, scope: !12216)
!12328 = !DILocation(line: 2289, column: 6, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12216, file: !3, line: 2289, column: 6)
!12330 = !DILocation(line: 2289, column: 11, scope: !12329)
!12331 = !DILocation(line: 2289, column: 6, scope: !12216)
!12332 = !DILocation(line: 2290, column: 10, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12334, file: !3, line: 2290, column: 3)
!12334 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 2289, column: 30)
!12335 = !DILocation(line: 2290, column: 8, scope: !12333)
!12336 = !DILocation(line: 2290, column: 15, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12333, file: !3, line: 2290, column: 3)
!12338 = !DILocation(line: 2290, column: 19, scope: !12337)
!12339 = !DILocation(line: 2290, column: 17, scope: !12337)
!12340 = !DILocation(line: 2290, column: 3, scope: !12333)
!12341 = !DILocation(line: 2291, column: 8, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 2291, column: 8)
!12343 = distinct !DILexicalBlock(scope: !12337, file: !3, line: 2290, column: 29)
!12344 = !DILocation(line: 2291, column: 10, scope: !12342)
!12345 = !DILocation(line: 2291, column: 8, scope: !12343)
!12346 = !DILocation(line: 2292, column: 11, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12342, file: !3, line: 2291, column: 15)
!12348 = !DILocation(line: 2292, column: 9, scope: !12347)
!12349 = !DILocation(line: 2293, column: 11, scope: !12347)
!12350 = !DILocation(line: 2293, column: 9, scope: !12347)
!12351 = !DILocation(line: 2294, column: 4, scope: !12347)
!12352 = !DILocation(line: 2296, column: 11, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12342, file: !3, line: 2295, column: 9)
!12354 = !DILocation(line: 2296, column: 22, scope: !12353)
!12355 = !DILocation(line: 2296, column: 9, scope: !12353)
!12356 = !DILocation(line: 2297, column: 11, scope: !12353)
!12357 = !DILocation(line: 2297, column: 22, scope: !12353)
!12358 = !DILocation(line: 2297, column: 9, scope: !12353)
!12359 = !DILocation(line: 2299, column: 10, scope: !12343)
!12360 = !DILocation(line: 2299, column: 21, scope: !12343)
!12361 = !DILocation(line: 2299, column: 8, scope: !12343)
!12362 = !DILocation(line: 2300, column: 10, scope: !12343)
!12363 = !DILocation(line: 2300, column: 21, scope: !12343)
!12364 = !DILocation(line: 2300, column: 8, scope: !12343)
!12365 = !DILocation(line: 2303, column: 9, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 2303, column: 8)
!12367 = !DILocation(line: 2303, column: 16, scope: !12366)
!12368 = !DILocation(line: 2303, column: 13, scope: !12366)
!12369 = !DILocation(line: 2303, column: 20, scope: !12366)
!12370 = !DILocation(line: 2303, column: 23, scope: !12366)
!12371 = !DILocation(line: 2303, column: 30, scope: !12366)
!12372 = !DILocation(line: 2303, column: 27, scope: !12366)
!12373 = !DILocation(line: 2303, column: 35, scope: !12366)
!12374 = !DILocation(line: 2303, column: 39, scope: !12366)
!12375 = !DILocation(line: 2303, column: 46, scope: !12366)
!12376 = !DILocation(line: 2303, column: 43, scope: !12366)
!12377 = !DILocation(line: 2303, column: 50, scope: !12366)
!12378 = !DILocation(line: 2303, column: 53, scope: !12366)
!12379 = !DILocation(line: 2303, column: 60, scope: !12366)
!12380 = !DILocation(line: 2303, column: 57, scope: !12366)
!12381 = !DILocation(line: 2303, column: 8, scope: !12343)
!12382 = !DILocation(line: 2304, column: 10, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 2303, column: 66)
!12384 = !DILocation(line: 2305, column: 6, scope: !12383)
!12385 = !DILocation(line: 2305, column: 14, scope: !12383)
!12386 = !DILocation(line: 2306, column: 12, scope: !12383)
!12387 = !DILocation(line: 2306, column: 5, scope: !12383)
!12388 = !DILocation(line: 2309, column: 14, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 2309, column: 13)
!12390 = !DILocation(line: 2309, column: 21, scope: !12389)
!12391 = !DILocation(line: 2309, column: 18, scope: !12389)
!12392 = !DILocation(line: 2309, column: 25, scope: !12389)
!12393 = !DILocation(line: 2309, column: 28, scope: !12389)
!12394 = !DILocation(line: 2309, column: 35, scope: !12389)
!12395 = !DILocation(line: 2309, column: 32, scope: !12389)
!12396 = !DILocation(line: 2309, column: 40, scope: !12389)
!12397 = !DILocation(line: 2309, column: 44, scope: !12389)
!12398 = !DILocation(line: 2309, column: 51, scope: !12389)
!12399 = !DILocation(line: 2309, column: 48, scope: !12389)
!12400 = !DILocation(line: 2309, column: 55, scope: !12389)
!12401 = !DILocation(line: 2309, column: 58, scope: !12389)
!12402 = !DILocation(line: 2309, column: 65, scope: !12389)
!12403 = !DILocation(line: 2309, column: 62, scope: !12389)
!12404 = !DILocation(line: 2309, column: 13, scope: !12366)
!12405 = !DILocation(line: 2310, column: 10, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12389, file: !3, line: 2309, column: 71)
!12407 = !DILocation(line: 2311, column: 6, scope: !12406)
!12408 = !DILocation(line: 2311, column: 14, scope: !12406)
!12409 = !DILocation(line: 2312, column: 12, scope: !12406)
!12410 = !DILocation(line: 2312, column: 5, scope: !12406)
!12411 = !DILocation(line: 2314, column: 3, scope: !12343)
!12412 = !DILocation(line: 2290, column: 25, scope: !12337)
!12413 = !DILocation(line: 2290, column: 3, scope: !12337)
!12414 = distinct !{!12414, !12340, !12415}
!12415 = !DILocation(line: 2314, column: 3, scope: !12333)
!12416 = !DILocation(line: 2315, column: 2, scope: !12334)
!12417 = !DILocation(line: 2318, column: 9, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12216, file: !3, line: 2318, column: 2)
!12419 = !DILocation(line: 2318, column: 7, scope: !12418)
!12420 = !DILocation(line: 2318, column: 14, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12418, file: !3, line: 2318, column: 2)
!12422 = !DILocation(line: 2318, column: 18, scope: !12421)
!12423 = !DILocation(line: 2318, column: 16, scope: !12421)
!12424 = !DILocation(line: 2318, column: 2, scope: !12418)
!12425 = !DILocation(line: 2319, column: 7, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12427, file: !3, line: 2319, column: 7)
!12427 = distinct !DILexicalBlock(scope: !12421, file: !3, line: 2318, column: 28)
!12428 = !DILocation(line: 2319, column: 9, scope: !12426)
!12429 = !DILocation(line: 2319, column: 7, scope: !12427)
!12430 = !DILocation(line: 2320, column: 10, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12426, file: !3, line: 2319, column: 14)
!12432 = !DILocation(line: 2320, column: 8, scope: !12431)
!12433 = !DILocation(line: 2321, column: 10, scope: !12431)
!12434 = !DILocation(line: 2321, column: 8, scope: !12431)
!12435 = !DILocation(line: 2322, column: 3, scope: !12431)
!12436 = !DILocation(line: 2324, column: 10, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12426, file: !3, line: 2323, column: 8)
!12438 = !DILocation(line: 2324, column: 21, scope: !12437)
!12439 = !DILocation(line: 2324, column: 8, scope: !12437)
!12440 = !DILocation(line: 2325, column: 10, scope: !12437)
!12441 = !DILocation(line: 2325, column: 21, scope: !12437)
!12442 = !DILocation(line: 2325, column: 8, scope: !12437)
!12443 = !DILocation(line: 2327, column: 9, scope: !12427)
!12444 = !DILocation(line: 2327, column: 20, scope: !12427)
!12445 = !DILocation(line: 2327, column: 7, scope: !12427)
!12446 = !DILocation(line: 2328, column: 9, scope: !12427)
!12447 = !DILocation(line: 2328, column: 20, scope: !12427)
!12448 = !DILocation(line: 2328, column: 7, scope: !12427)
!12449 = !DILocation(line: 2331, column: 7, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12427, file: !3, line: 2331, column: 7)
!12451 = !DILocation(line: 2331, column: 10, scope: !12450)
!12452 = !DILocation(line: 2331, column: 7, scope: !12427)
!12453 = !DILocation(line: 2331, column: 31, scope: !12450)
!12454 = !DILocation(line: 2331, column: 37, scope: !12450)
!12455 = !DILocation(line: 2331, column: 42, scope: !12450)
!12456 = !DILocation(line: 2331, column: 40, scope: !12450)
!12457 = !DILocation(line: 2331, column: 35, scope: !12450)
!12458 = !DILocation(line: 2331, column: 48, scope: !12450)
!12459 = !DILocation(line: 2331, column: 46, scope: !12450)
!12460 = !DILocation(line: 2331, column: 28, scope: !12450)
!12461 = !DILocation(line: 2331, column: 23, scope: !12450)
!12462 = !DILocation(line: 2333, column: 15, scope: !12450)
!12463 = !DILocation(line: 2333, column: 21, scope: !12450)
!12464 = !DILocation(line: 2333, column: 19, scope: !12450)
!12465 = !DILocation(line: 2333, column: 13, scope: !12450)
!12466 = !DILocation(line: 2335, column: 7, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12427, file: !3, line: 2335, column: 7)
!12468 = !DILocation(line: 2335, column: 9, scope: !12467)
!12469 = !DILocation(line: 2335, column: 7, scope: !12427)
!12470 = !DILocation(line: 2335, column: 26, scope: !12467)
!12471 = !DILocation(line: 2335, column: 24, scope: !12467)
!12472 = !DILocation(line: 2335, column: 15, scope: !12467)
!12473 = !DILocation(line: 2338, column: 8, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12427, file: !3, line: 2338, column: 7)
!12475 = !DILocation(line: 2338, column: 19, scope: !12474)
!12476 = !DILocation(line: 2338, column: 17, scope: !12474)
!12477 = !DILocation(line: 2338, column: 25, scope: !12474)
!12478 = !DILocation(line: 2338, column: 7, scope: !12427)
!12479 = !DILocation(line: 2339, column: 14, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12474, file: !3, line: 2338, column: 31)
!12481 = !DILocation(line: 2339, column: 20, scope: !12480)
!12482 = !DILocation(line: 2339, column: 18, scope: !12480)
!12483 = !DILocation(line: 2339, column: 11, scope: !12480)
!12484 = !DILocation(line: 2340, column: 8, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12480, file: !3, line: 2340, column: 8)
!12486 = !DILocation(line: 2340, column: 8, scope: !12480)
!12487 = !DILocation(line: 2341, column: 11, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12485, file: !3, line: 2340, column: 16)
!12489 = !DILocation(line: 2341, column: 17, scope: !12488)
!12490 = !DILocation(line: 2341, column: 15, scope: !12488)
!12491 = !DILocation(line: 2341, column: 24, scope: !12488)
!12492 = !DILocation(line: 2341, column: 22, scope: !12488)
!12493 = !DILocation(line: 2341, column: 8, scope: !12488)
!12494 = !DILocation(line: 2342, column: 12, scope: !12488)
!12495 = !DILocation(line: 2342, column: 18, scope: !12488)
!12496 = !DILocation(line: 2342, column: 16, scope: !12488)
!12497 = !DILocation(line: 2342, column: 26, scope: !12488)
!12498 = !DILocation(line: 2342, column: 32, scope: !12488)
!12499 = !DILocation(line: 2342, column: 30, scope: !12488)
!12500 = !DILocation(line: 2342, column: 23, scope: !12488)
!12501 = !DILocation(line: 2342, column: 40, scope: !12488)
!12502 = !DILocation(line: 2342, column: 38, scope: !12488)
!12503 = !DILocation(line: 2342, column: 8, scope: !12488)
!12504 = !DILocation(line: 2343, column: 4, scope: !12488)
!12505 = !DILocation(line: 2345, column: 8, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12485, file: !3, line: 2344, column: 9)
!12507 = !DILocation(line: 2346, column: 10, scope: !12506)
!12508 = !DILocation(line: 2346, column: 8, scope: !12506)
!12509 = !DILocation(line: 2348, column: 19, scope: !12480)
!12510 = !DILocation(line: 2348, column: 24, scope: !12480)
!12511 = !DILocation(line: 2348, column: 12, scope: !12480)
!12512 = !DILocation(line: 2348, column: 29, scope: !12480)
!12513 = !DILocation(line: 2348, column: 10, scope: !12480)
!12514 = !DILocation(line: 2349, column: 19, scope: !12480)
!12515 = !DILocation(line: 2349, column: 24, scope: !12480)
!12516 = !DILocation(line: 2349, column: 12, scope: !12480)
!12517 = !DILocation(line: 2349, column: 29, scope: !12480)
!12518 = !DILocation(line: 2349, column: 10, scope: !12480)
!12519 = !DILocation(line: 2350, column: 19, scope: !12480)
!12520 = !DILocation(line: 2350, column: 24, scope: !12480)
!12521 = !DILocation(line: 2350, column: 12, scope: !12480)
!12522 = !DILocation(line: 2350, column: 29, scope: !12480)
!12523 = !DILocation(line: 2350, column: 10, scope: !12480)
!12524 = !DILocation(line: 2351, column: 19, scope: !12480)
!12525 = !DILocation(line: 2351, column: 24, scope: !12480)
!12526 = !DILocation(line: 2351, column: 12, scope: !12480)
!12527 = !DILocation(line: 2351, column: 29, scope: !12480)
!12528 = !DILocation(line: 2351, column: 10, scope: !12480)
!12529 = !DILocation(line: 2354, column: 8, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12480, file: !3, line: 2354, column: 8)
!12531 = !DILocation(line: 2354, column: 14, scope: !12530)
!12532 = !DILocation(line: 2354, column: 11, scope: !12530)
!12533 = !DILocation(line: 2354, column: 8, scope: !12480)
!12534 = !DILocation(line: 2356, column: 20, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 2354, column: 18)
!12536 = !DILocation(line: 2356, column: 25, scope: !12535)
!12537 = !DILocation(line: 2356, column: 13, scope: !12535)
!12538 = !DILocation(line: 2356, column: 11, scope: !12535)
!12539 = !DILocation(line: 2357, column: 20, scope: !12535)
!12540 = !DILocation(line: 2357, column: 25, scope: !12535)
!12541 = !DILocation(line: 2357, column: 13, scope: !12535)
!12542 = !DILocation(line: 2357, column: 11, scope: !12535)
!12543 = !DILocation(line: 2358, column: 18, scope: !12535)
!12544 = !DILocation(line: 2358, column: 25, scope: !12535)
!12545 = !DILocation(line: 2358, column: 11, scope: !12535)
!12546 = !DILocation(line: 2358, column: 41, scope: !12535)
!12547 = !DILocation(line: 2358, column: 48, scope: !12535)
!12548 = !DILocation(line: 2358, column: 34, scope: !12535)
!12549 = !DILocation(line: 2358, column: 32, scope: !12535)
!12550 = !DILocation(line: 2358, column: 56, scope: !12535)
!12551 = !DILocation(line: 2358, column: 8, scope: !12535)
!12552 = !DILocation(line: 2360, column: 20, scope: !12535)
!12553 = !DILocation(line: 2360, column: 25, scope: !12535)
!12554 = !DILocation(line: 2360, column: 13, scope: !12535)
!12555 = !DILocation(line: 2360, column: 11, scope: !12535)
!12556 = !DILocation(line: 2361, column: 20, scope: !12535)
!12557 = !DILocation(line: 2361, column: 25, scope: !12535)
!12558 = !DILocation(line: 2361, column: 13, scope: !12535)
!12559 = !DILocation(line: 2361, column: 11, scope: !12535)
!12560 = !DILocation(line: 2362, column: 18, scope: !12535)
!12561 = !DILocation(line: 2362, column: 25, scope: !12535)
!12562 = !DILocation(line: 2362, column: 11, scope: !12535)
!12563 = !DILocation(line: 2362, column: 41, scope: !12535)
!12564 = !DILocation(line: 2362, column: 48, scope: !12535)
!12565 = !DILocation(line: 2362, column: 34, scope: !12535)
!12566 = !DILocation(line: 2362, column: 32, scope: !12535)
!12567 = !DILocation(line: 2362, column: 56, scope: !12535)
!12568 = !DILocation(line: 2362, column: 8, scope: !12535)
!12569 = !DILocation(line: 2363, column: 4, scope: !12535)
!12570 = !DILocation(line: 2364, column: 13, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 2364, column: 13)
!12572 = !DILocation(line: 2364, column: 16, scope: !12571)
!12573 = !DILocation(line: 2364, column: 13, scope: !12530)
!12574 = !DILocation(line: 2365, column: 10, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12571, file: !3, line: 2364, column: 29)
!12576 = !DILocation(line: 2365, column: 8, scope: !12575)
!12577 = !DILocation(line: 2366, column: 10, scope: !12575)
!12578 = !DILocation(line: 2366, column: 15, scope: !12575)
!12579 = !DILocation(line: 2366, column: 13, scope: !12575)
!12580 = !DILocation(line: 2366, column: 21, scope: !12575)
!12581 = !DILocation(line: 2366, column: 19, scope: !12575)
!12582 = !DILocation(line: 2366, column: 8, scope: !12575)
!12583 = !DILocation(line: 2367, column: 4, scope: !12575)
!12584 = !DILocation(line: 2368, column: 13, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12571, file: !3, line: 2368, column: 13)
!12586 = !DILocation(line: 2368, column: 16, scope: !12585)
!12587 = !DILocation(line: 2368, column: 13, scope: !12571)
!12588 = !DILocation(line: 2369, column: 10, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 2368, column: 29)
!12590 = !DILocation(line: 2369, column: 8, scope: !12589)
!12591 = !DILocation(line: 2370, column: 10, scope: !12589)
!12592 = !DILocation(line: 2370, column: 15, scope: !12589)
!12593 = !DILocation(line: 2370, column: 13, scope: !12589)
!12594 = !DILocation(line: 2370, column: 21, scope: !12589)
!12595 = !DILocation(line: 2370, column: 19, scope: !12589)
!12596 = !DILocation(line: 2370, column: 8, scope: !12589)
!12597 = !DILocation(line: 2371, column: 4, scope: !12589)
!12598 = !DILocation(line: 2373, column: 11, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12585, file: !3, line: 2372, column: 9)
!12600 = !DILocation(line: 2373, column: 16, scope: !12599)
!12601 = !DILocation(line: 2373, column: 14, scope: !12599)
!12602 = !DILocation(line: 2373, column: 23, scope: !12599)
!12603 = !DILocation(line: 2373, column: 28, scope: !12599)
!12604 = !DILocation(line: 2373, column: 26, scope: !12599)
!12605 = !DILocation(line: 2373, column: 20, scope: !12599)
!12606 = !DILocation(line: 2373, column: 8, scope: !12599)
!12607 = !DILocation(line: 2374, column: 11, scope: !12599)
!12608 = !DILocation(line: 2374, column: 16, scope: !12599)
!12609 = !DILocation(line: 2374, column: 14, scope: !12599)
!12610 = !DILocation(line: 2374, column: 21, scope: !12599)
!12611 = !DILocation(line: 2374, column: 26, scope: !12599)
!12612 = !DILocation(line: 2374, column: 24, scope: !12599)
!12613 = !DILocation(line: 2374, column: 19, scope: !12599)
!12614 = !DILocation(line: 2374, column: 33, scope: !12599)
!12615 = !DILocation(line: 2374, column: 38, scope: !12599)
!12616 = !DILocation(line: 2374, column: 36, scope: !12599)
!12617 = !DILocation(line: 2374, column: 30, scope: !12599)
!12618 = !DILocation(line: 2374, column: 8, scope: !12599)
!12619 = !DILocation(line: 2378, column: 9, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12480, file: !3, line: 2378, column: 8)
!12621 = !DILocation(line: 2378, column: 15, scope: !12620)
!12622 = !DILocation(line: 2378, column: 12, scope: !12620)
!12623 = !DILocation(line: 2378, column: 22, scope: !12620)
!12624 = !DILocation(line: 2378, column: 26, scope: !12620)
!12625 = !DILocation(line: 2378, column: 32, scope: !12620)
!12626 = !DILocation(line: 2378, column: 29, scope: !12620)
!12627 = !DILocation(line: 2378, column: 39, scope: !12620)
!12628 = !DILocation(line: 2378, column: 43, scope: !12620)
!12629 = !DILocation(line: 2378, column: 49, scope: !12620)
!12630 = !DILocation(line: 2378, column: 46, scope: !12620)
!12631 = !DILocation(line: 2378, column: 56, scope: !12620)
!12632 = !DILocation(line: 2378, column: 60, scope: !12620)
!12633 = !DILocation(line: 2378, column: 66, scope: !12620)
!12634 = !DILocation(line: 2378, column: 63, scope: !12620)
!12635 = !DILocation(line: 2378, column: 8, scope: !12480)
!12636 = !DILocation(line: 2380, column: 9, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12638, file: !3, line: 2380, column: 9)
!12638 = distinct !DILexicalBlock(scope: !12620, file: !3, line: 2378, column: 74)
!12639 = !DILocation(line: 2380, column: 14, scope: !12637)
!12640 = !DILocation(line: 2380, column: 9, scope: !12638)
!12641 = !DILocation(line: 2381, column: 10, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12643, file: !3, line: 2381, column: 10)
!12643 = distinct !DILexicalBlock(scope: !12637, file: !3, line: 2380, column: 33)
!12644 = !DILocation(line: 2381, column: 17, scope: !12642)
!12645 = !DILocation(line: 2381, column: 23, scope: !12642)
!12646 = !DILocation(line: 2381, column: 21, scope: !12642)
!12647 = !DILocation(line: 2381, column: 13, scope: !12642)
!12648 = !DILocation(line: 2381, column: 34, scope: !12642)
!12649 = !DILocation(line: 2381, column: 37, scope: !12642)
!12650 = !DILocation(line: 2381, column: 44, scope: !12642)
!12651 = !DILocation(line: 2381, column: 50, scope: !12642)
!12652 = !DILocation(line: 2381, column: 48, scope: !12642)
!12653 = !DILocation(line: 2381, column: 40, scope: !12642)
!12654 = !DILocation(line: 2381, column: 10, scope: !12643)
!12655 = !DILocation(line: 2382, column: 11, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12657, file: !3, line: 2382, column: 11)
!12657 = distinct !DILexicalBlock(scope: !12642, file: !3, line: 2381, column: 62)
!12658 = !DILocation(line: 2382, column: 18, scope: !12656)
!12659 = !DILocation(line: 2382, column: 24, scope: !12656)
!12660 = !DILocation(line: 2382, column: 22, scope: !12656)
!12661 = !DILocation(line: 2382, column: 14, scope: !12656)
!12662 = !DILocation(line: 2382, column: 35, scope: !12656)
!12663 = !DILocation(line: 2382, column: 38, scope: !12656)
!12664 = !DILocation(line: 2382, column: 45, scope: !12656)
!12665 = !DILocation(line: 2382, column: 51, scope: !12656)
!12666 = !DILocation(line: 2382, column: 49, scope: !12656)
!12667 = !DILocation(line: 2382, column: 41, scope: !12656)
!12668 = !DILocation(line: 2382, column: 11, scope: !12657)
!12669 = !DILocation(line: 2383, column: 9, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12656, file: !3, line: 2382, column: 63)
!12671 = !DILocation(line: 2383, column: 17, scope: !12670)
!12672 = !DILocation(line: 2384, column: 13, scope: !12670)
!12673 = !DILocation(line: 2385, column: 8, scope: !12670)
!12674 = !DILocation(line: 2387, column: 6, scope: !12657)
!12675 = !DILocation(line: 2388, column: 10, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12643, file: !3, line: 2388, column: 10)
!12677 = !DILocation(line: 2388, column: 17, scope: !12676)
!12678 = !DILocation(line: 2388, column: 23, scope: !12676)
!12679 = !DILocation(line: 2388, column: 21, scope: !12676)
!12680 = !DILocation(line: 2388, column: 13, scope: !12676)
!12681 = !DILocation(line: 2388, column: 34, scope: !12676)
!12682 = !DILocation(line: 2388, column: 37, scope: !12676)
!12683 = !DILocation(line: 2388, column: 44, scope: !12676)
!12684 = !DILocation(line: 2388, column: 50, scope: !12676)
!12685 = !DILocation(line: 2388, column: 48, scope: !12676)
!12686 = !DILocation(line: 2388, column: 40, scope: !12676)
!12687 = !DILocation(line: 2388, column: 10, scope: !12643)
!12688 = !DILocation(line: 2389, column: 11, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12690, file: !3, line: 2389, column: 11)
!12690 = distinct !DILexicalBlock(scope: !12676, file: !3, line: 2388, column: 62)
!12691 = !DILocation(line: 2389, column: 18, scope: !12689)
!12692 = !DILocation(line: 2389, column: 24, scope: !12689)
!12693 = !DILocation(line: 2389, column: 22, scope: !12689)
!12694 = !DILocation(line: 2389, column: 14, scope: !12689)
!12695 = !DILocation(line: 2389, column: 35, scope: !12689)
!12696 = !DILocation(line: 2389, column: 38, scope: !12689)
!12697 = !DILocation(line: 2389, column: 45, scope: !12689)
!12698 = !DILocation(line: 2389, column: 51, scope: !12689)
!12699 = !DILocation(line: 2389, column: 49, scope: !12689)
!12700 = !DILocation(line: 2389, column: 41, scope: !12689)
!12701 = !DILocation(line: 2389, column: 11, scope: !12690)
!12702 = !DILocation(line: 2390, column: 9, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12689, file: !3, line: 2389, column: 63)
!12704 = !DILocation(line: 2390, column: 17, scope: !12703)
!12705 = !DILocation(line: 2391, column: 13, scope: !12703)
!12706 = !DILocation(line: 2392, column: 8, scope: !12703)
!12707 = !DILocation(line: 2394, column: 6, scope: !12690)
!12708 = !DILocation(line: 2395, column: 5, scope: !12643)
!12709 = !DILocation(line: 2396, column: 10, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12638, file: !3, line: 2396, column: 9)
!12711 = !DILocation(line: 2396, column: 13, scope: !12710)
!12712 = !DILocation(line: 2396, column: 22, scope: !12710)
!12713 = !DILocation(line: 2396, column: 26, scope: !12710)
!12714 = !DILocation(line: 2396, column: 29, scope: !12710)
!12715 = !DILocation(line: 2396, column: 9, scope: !12638)
!12716 = !DILocation(line: 2396, column: 48, scope: !12710)
!12717 = !DILocation(line: 2396, column: 53, scope: !12710)
!12718 = !DILocation(line: 2396, column: 51, scope: !12710)
!12719 = !DILocation(line: 2396, column: 61, scope: !12710)
!12720 = !DILocation(line: 2396, column: 67, scope: !12710)
!12721 = !DILocation(line: 2396, column: 65, scope: !12710)
!12722 = !DILocation(line: 2396, column: 58, scope: !12710)
!12723 = !DILocation(line: 2396, column: 45, scope: !12710)
!12724 = !DILocation(line: 2396, column: 40, scope: !12710)
!12725 = !DILocation(line: 2397, column: 18, scope: !12710)
!12726 = !DILocation(line: 2397, column: 23, scope: !12710)
!12727 = !DILocation(line: 2397, column: 21, scope: !12710)
!12728 = !DILocation(line: 2397, column: 31, scope: !12710)
!12729 = !DILocation(line: 2397, column: 37, scope: !12710)
!12730 = !DILocation(line: 2397, column: 35, scope: !12710)
!12731 = !DILocation(line: 2397, column: 28, scope: !12710)
!12732 = !DILocation(line: 2397, column: 15, scope: !12710)
!12733 = !DILocation(line: 2400, column: 5, scope: !12638)
!12734 = !DILocation(line: 2402, column: 3, scope: !12480)
!12735 = !DILocation(line: 2403, column: 14, scope: !12427)
!12736 = !DILocation(line: 2403, column: 12, scope: !12427)
!12737 = !DILocation(line: 2404, column: 2, scope: !12427)
!12738 = !DILocation(line: 2318, column: 24, scope: !12421)
!12739 = !DILocation(line: 2318, column: 2, scope: !12421)
!12740 = distinct !{!12740, !12424, !12741}
!12741 = !DILocation(line: 2404, column: 2, scope: !12418)
!12742 = !DILocation(line: 2405, column: 9, scope: !12216)
!12743 = !DILocation(line: 2405, column: 2, scope: !12216)
!12744 = !DILocation(line: 2406, column: 1, scope: !12216)
!12745 = distinct !DISubprogram(name: "BMO_slot_map_float_insert", scope: !12746, file: !12746, line: 88, type: !12747, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12746 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12747 = !DISubroutineType(types: !12748)
!12748 = !{null, !12749, !7743, !1343, !4150}
!12749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!12750 = !DILocalVariable(name: "op", arg: 1, scope: !12745, file: !12746, line: 88, type: !12749)
!12751 = !DILocation(line: 88, column: 55, scope: !12745)
!12752 = !DILocalVariable(name: "slot", arg: 2, scope: !12745, file: !12746, line: 88, type: !7743)
!12753 = !DILocation(line: 88, column: 69, scope: !12745)
!12754 = !DILocalVariable(name: "element", arg: 3, scope: !12745, file: !12746, line: 89, type: !1343)
!12755 = !DILocation(line: 89, column: 49, scope: !12745)
!12756 = !DILocalVariable(name: "val", arg: 4, scope: !12745, file: !12746, line: 89, type: !4150)
!12757 = !DILocation(line: 89, column: 70, scope: !12745)
!12758 = !DILocalVariable(name: "t", scope: !12745, file: !12746, line: 91, type: !12759)
!12759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12745, file: !12746, line: 91, size: 64, elements: !12760)
!12760 = !{!12761, !12762}
!12761 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !12759, file: !12746, line: 91, baseType: !1343, size: 64)
!12762 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !12759, file: !12746, line: 91, baseType: !1344, size: 32)
!12763 = !DILocation(line: 91, column: 34, scope: !12745)
!12764 = !DILocation(line: 93, column: 22, scope: !12745)
!12765 = !DILocation(line: 93, column: 26, scope: !12745)
!12766 = !DILocation(line: 93, column: 32, scope: !12745)
!12767 = !DILocation(line: 93, column: 51, scope: !12745)
!12768 = !DILocation(line: 93, column: 45, scope: !12745)
!12769 = !DILocation(line: 93, column: 49, scope: !12745)
!12770 = !DILocation(line: 93, column: 59, scope: !12745)
!12771 = !DILocation(line: 93, column: 2, scope: !12745)
!12772 = !DILocation(line: 94, column: 1, scope: !12745)
!12773 = distinct !DISubprogram(name: "_bmo_elem_flag_set", scope: !12746, file: !12746, line: 61, type: !12774, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12774 = !DISubroutineType(types: !12775)
!12775 = !{null, !3610, !12776, !5013, !135}
!12776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12777, size: 64)
!12777 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFlagLayer", file: !103, line: 182, baseType: !1370)
!12778 = !DILocalVariable(name: "bm", arg: 1, scope: !12773, file: !12746, line: 61, type: !3610)
!12779 = !DILocation(line: 61, column: 43, scope: !12773)
!12780 = !DILocalVariable(name: "oflags", arg: 2, scope: !12773, file: !12746, line: 61, type: !12776)
!12781 = !DILocation(line: 61, column: 60, scope: !12773)
!12782 = !DILocalVariable(name: "oflag", arg: 3, scope: !12773, file: !12746, line: 61, type: !5013)
!12783 = !DILocation(line: 61, column: 80, scope: !12773)
!12784 = !DILocalVariable(name: "val", arg: 4, scope: !12773, file: !12746, line: 61, type: !135)
!12785 = !DILocation(line: 61, column: 91, scope: !12773)
!12786 = !DILocation(line: 63, column: 6, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12773, file: !12746, line: 63, column: 6)
!12788 = !DILocation(line: 63, column: 6, scope: !12773)
!12789 = !DILocation(line: 63, column: 43, scope: !12787)
!12790 = !DILocation(line: 63, column: 11, scope: !12787)
!12791 = !DILocation(line: 63, column: 18, scope: !12787)
!12792 = !DILocation(line: 63, column: 22, scope: !12787)
!12793 = !DILocation(line: 63, column: 33, scope: !12787)
!12794 = !DILocation(line: 63, column: 38, scope: !12787)
!12795 = !DILocation(line: 63, column: 40, scope: !12787)
!12796 = !DILocation(line: 64, column: 51, scope: !12787)
!12797 = !DILocation(line: 64, column: 50, scope: !12787)
!12798 = !DILocation(line: 64, column: 43, scope: !12787)
!12799 = !DILocation(line: 64, column: 11, scope: !12787)
!12800 = !DILocation(line: 64, column: 18, scope: !12787)
!12801 = !DILocation(line: 64, column: 22, scope: !12787)
!12802 = !DILocation(line: 64, column: 33, scope: !12787)
!12803 = !DILocation(line: 64, column: 38, scope: !12787)
!12804 = !DILocation(line: 64, column: 40, scope: !12787)
!12805 = !DILocation(line: 65, column: 1, scope: !12773)
!12806 = distinct !DISubprogram(name: "max_ff", scope: !12807, file: !12807, line: 206, type: !12808, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12807 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12808 = !DISubroutineType(types: !12809)
!12809 = !{!1344, !1344, !1344}
!12810 = !DILocalVariable(name: "a", arg: 1, scope: !12806, file: !12807, line: 206, type: !1344)
!12811 = !DILocation(line: 206, column: 28, scope: !12806)
!12812 = !DILocalVariable(name: "b", arg: 2, scope: !12806, file: !12807, line: 206, type: !1344)
!12813 = !DILocation(line: 206, column: 37, scope: !12806)
!12814 = !DILocation(line: 208, column: 10, scope: !12806)
!12815 = !DILocation(line: 208, column: 14, scope: !12806)
!12816 = !DILocation(line: 208, column: 12, scope: !12806)
!12817 = !DILocation(line: 208, column: 9, scope: !12806)
!12818 = !DILocation(line: 208, column: 19, scope: !12806)
!12819 = !DILocation(line: 208, column: 23, scope: !12806)
!12820 = !DILocation(line: 208, column: 2, scope: !12806)
!12821 = distinct !DISubprogram(name: "min_ff", scope: !12807, file: !12807, line: 202, type: !12808, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12822 = !DILocalVariable(name: "a", arg: 1, scope: !12821, file: !12807, line: 202, type: !1344)
!12823 = !DILocation(line: 202, column: 28, scope: !12821)
!12824 = !DILocalVariable(name: "b", arg: 2, scope: !12821, file: !12807, line: 202, type: !1344)
!12825 = !DILocation(line: 202, column: 37, scope: !12821)
!12826 = !DILocation(line: 204, column: 10, scope: !12821)
!12827 = !DILocation(line: 204, column: 14, scope: !12821)
!12828 = !DILocation(line: 204, column: 12, scope: !12821)
!12829 = !DILocation(line: 204, column: 9, scope: !12821)
!12830 = !DILocation(line: 204, column: 19, scope: !12821)
!12831 = !DILocation(line: 204, column: 23, scope: !12821)
!12832 = !DILocation(line: 204, column: 2, scope: !12821)
!12833 = distinct !DISubprogram(name: "mesh_separate_selected", scope: !3, file: !3, line: 2600, type: !12834, scopeLine: 2601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12834 = !DISubroutineType(types: !12835)
!12835 = !{!2530, !8036, !5145, !8118, !3610}
!12836 = !DILocalVariable(name: "bmain", arg: 1, scope: !12833, file: !3, line: 2600, type: !8036)
!12837 = !DILocation(line: 2600, column: 42, scope: !12833)
!12838 = !DILocalVariable(name: "scene", arg: 2, scope: !12833, file: !3, line: 2600, type: !5145)
!12839 = !DILocation(line: 2600, column: 56, scope: !12833)
!12840 = !DILocalVariable(name: "base_old", arg: 3, scope: !12833, file: !3, line: 2600, type: !8118)
!12841 = !DILocation(line: 2600, column: 69, scope: !12833)
!12842 = !DILocalVariable(name: "bm_old", arg: 4, scope: !12833, file: !3, line: 2600, type: !3610)
!12843 = !DILocation(line: 2600, column: 86, scope: !12833)
!12844 = !DILocation(line: 2603, column: 33, scope: !12833)
!12845 = !DILocation(line: 2603, column: 2, scope: !12833)
!12846 = !DILocation(line: 2606, column: 33, scope: !12833)
!12847 = !DILocation(line: 2606, column: 2, scope: !12833)
!12848 = !DILocation(line: 2608, column: 31, scope: !12833)
!12849 = !DILocation(line: 2608, column: 38, scope: !12833)
!12850 = !DILocation(line: 2608, column: 45, scope: !12833)
!12851 = !DILocation(line: 2608, column: 55, scope: !12833)
!12852 = !DILocation(line: 2608, column: 10, scope: !12833)
!12853 = !DILocation(line: 2608, column: 63, scope: !12833)
!12854 = !DILocation(line: 2608, column: 9, scope: !12833)
!12855 = !DILocation(line: 2608, column: 2, scope: !12833)
!12856 = distinct !DISubprogram(name: "mesh_separate_material", scope: !3, file: !3, line: 2705, type: !12834, scopeLine: 2706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12857 = !DILocalVariable(name: "bmain", arg: 1, scope: !12856, file: !3, line: 2705, type: !8036)
!12858 = !DILocation(line: 2705, column: 42, scope: !12856)
!12859 = !DILocalVariable(name: "scene", arg: 2, scope: !12856, file: !3, line: 2705, type: !5145)
!12860 = !DILocation(line: 2705, column: 56, scope: !12856)
!12861 = !DILocalVariable(name: "base_old", arg: 3, scope: !12856, file: !3, line: 2705, type: !8118)
!12862 = !DILocation(line: 2705, column: 69, scope: !12856)
!12863 = !DILocalVariable(name: "bm_old", arg: 4, scope: !12856, file: !3, line: 2705, type: !3610)
!12864 = !DILocation(line: 2705, column: 86, scope: !12856)
!12865 = !DILocalVariable(name: "f_cmp", scope: !12856, file: !3, line: 2707, type: !1420)
!12866 = !DILocation(line: 2707, column: 10, scope: !12856)
!12867 = !DILocalVariable(name: "f", scope: !12856, file: !3, line: 2707, type: !1420)
!12868 = !DILocation(line: 2707, column: 18, scope: !12856)
!12869 = !DILocalVariable(name: "iter", scope: !12856, file: !3, line: 2708, type: !4456)
!12870 = !DILocation(line: 2708, column: 9, scope: !12856)
!12871 = !DILocalVariable(name: "result", scope: !12856, file: !3, line: 2709, type: !2530)
!12872 = !DILocation(line: 2709, column: 7, scope: !12856)
!12873 = !DILocation(line: 2711, column: 2, scope: !12856)
!12874 = !DILocation(line: 2711, column: 35, scope: !12856)
!12875 = !DILocation(line: 2711, column: 18, scope: !12856)
!12876 = !DILocation(line: 2711, column: 16, scope: !12856)
!12877 = !DILocalVariable(name: "base_new", scope: !12878, file: !3, line: 2712, type: !8118)
!12878 = distinct !DILexicalBlock(scope: !12856, file: !3, line: 2711, column: 72)
!12879 = !DILocation(line: 2712, column: 9, scope: !12878)
!12880 = !DILocalVariable(name: "mat_nr", scope: !12878, file: !3, line: 2713, type: !5013)
!12881 = !DILocation(line: 2713, column: 15, scope: !12878)
!12882 = !DILocation(line: 2713, column: 24, scope: !12878)
!12883 = !DILocation(line: 2713, column: 31, scope: !12878)
!12884 = !DILocalVariable(name: "tot", scope: !12878, file: !3, line: 2714, type: !135)
!12885 = !DILocation(line: 2714, column: 7, scope: !12878)
!12886 = !DILocation(line: 2716, column: 34, scope: !12878)
!12887 = !DILocation(line: 2716, column: 3, scope: !12878)
!12888 = !DILocation(line: 2718, column: 3, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12878, file: !3, line: 2718, column: 3)
!12890 = !DILocation(line: 2718, column: 3, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12889, file: !3, line: 2718, column: 3)
!12892 = !DILocation(line: 2719, column: 8, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12894, file: !3, line: 2719, column: 8)
!12894 = distinct !DILexicalBlock(scope: !12891, file: !3, line: 2718, column: 53)
!12895 = !DILocation(line: 2719, column: 11, scope: !12893)
!12896 = !DILocation(line: 2719, column: 21, scope: !12893)
!12897 = !DILocation(line: 2719, column: 18, scope: !12893)
!12898 = !DILocation(line: 2719, column: 8, scope: !12894)
!12899 = !DILocalVariable(name: "l_iter", scope: !12900, file: !3, line: 2720, type: !1402)
!12900 = distinct !DILexicalBlock(scope: !12893, file: !3, line: 2719, column: 29)
!12901 = !DILocation(line: 2720, column: 13, scope: !12900)
!12902 = !DILocalVariable(name: "l_first", scope: !12900, file: !3, line: 2721, type: !1402)
!12903 = !DILocation(line: 2721, column: 13, scope: !12900)
!12904 = !DILocation(line: 2723, column: 5, scope: !12900)
!12905 = !DILocation(line: 2724, column: 24, scope: !12900)
!12906 = !DILocation(line: 2724, column: 22, scope: !12900)
!12907 = !DILocation(line: 2724, column: 12, scope: !12900)
!12908 = !DILocation(line: 2725, column: 5, scope: !12900)
!12909 = !DILocation(line: 2726, column: 6, scope: !12910)
!12910 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 2725, column: 8)
!12911 = !DILocation(line: 2727, column: 6, scope: !12910)
!12912 = !DILocation(line: 2728, column: 5, scope: !12910)
!12913 = !DILocation(line: 2728, column: 24, scope: !12900)
!12914 = !DILocation(line: 2728, column: 32, scope: !12900)
!12915 = !DILocation(line: 2728, column: 22, scope: !12900)
!12916 = !DILocation(line: 2728, column: 41, scope: !12900)
!12917 = !DILocation(line: 2728, column: 38, scope: !12900)
!12918 = distinct !{!12918, !12908, !12919}
!12919 = !DILocation(line: 2728, column: 48, scope: !12900)
!12920 = !DILocation(line: 2730, column: 8, scope: !12900)
!12921 = !DILocation(line: 2731, column: 4, scope: !12900)
!12922 = !DILocation(line: 2732, column: 3, scope: !12894)
!12923 = distinct !{!12923, !12888, !12924}
!12924 = !DILocation(line: 2732, column: 3, scope: !12889)
!12925 = !DILocation(line: 2735, column: 7, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12878, file: !3, line: 2735, column: 7)
!12927 = !DILocation(line: 2735, column: 14, scope: !12926)
!12928 = !DILocation(line: 2735, column: 22, scope: !12926)
!12929 = !DILocation(line: 2735, column: 11, scope: !12926)
!12930 = !DILocation(line: 2735, column: 7, scope: !12878)
!12931 = !DILocation(line: 2736, column: 41, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12926, file: !3, line: 2735, column: 31)
!12933 = !DILocation(line: 2736, column: 51, scope: !12932)
!12934 = !DILocation(line: 2736, column: 59, scope: !12932)
!12935 = !DILocation(line: 2736, column: 4, scope: !12932)
!12936 = !DILocation(line: 2739, column: 4, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12932, file: !3, line: 2739, column: 4)
!12938 = !DILocation(line: 2739, column: 4, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12937, file: !3, line: 2739, column: 4)
!12940 = !DILocation(line: 2740, column: 5, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12939, file: !3, line: 2739, column: 54)
!12942 = !DILocation(line: 2740, column: 8, scope: !12941)
!12943 = !DILocation(line: 2740, column: 15, scope: !12941)
!12944 = !DILocation(line: 2741, column: 4, scope: !12941)
!12945 = distinct !{!12945, !12936, !12946}
!12946 = !DILocation(line: 2741, column: 4, scope: !12937)
!12947 = !DILocation(line: 2742, column: 4, scope: !12932)
!12948 = !DILocation(line: 2746, column: 35, scope: !12878)
!12949 = !DILocation(line: 2746, column: 42, scope: !12878)
!12950 = !DILocation(line: 2746, column: 49, scope: !12878)
!12951 = !DILocation(line: 2746, column: 59, scope: !12878)
!12952 = !DILocation(line: 2746, column: 14, scope: !12878)
!12953 = !DILocation(line: 2746, column: 12, scope: !12878)
!12954 = !DILocation(line: 2747, column: 7, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12878, file: !3, line: 2747, column: 7)
!12956 = !DILocation(line: 2747, column: 7, scope: !12878)
!12957 = !DILocation(line: 2748, column: 41, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12955, file: !3, line: 2747, column: 17)
!12959 = !DILocation(line: 2748, column: 51, scope: !12958)
!12960 = !DILocation(line: 2748, column: 59, scope: !12958)
!12961 = !DILocation(line: 2748, column: 4, scope: !12958)
!12962 = !DILocation(line: 2749, column: 3, scope: !12958)
!12963 = !DILocation(line: 2751, column: 14, scope: !12878)
!12964 = !DILocation(line: 2751, column: 23, scope: !12878)
!12965 = !DILocation(line: 2751, column: 10, scope: !12878)
!12966 = distinct !{!12966, !12873, !12967}
!12967 = !DILocation(line: 2752, column: 2, scope: !12856)
!12968 = !DILocation(line: 2754, column: 9, scope: !12856)
!12969 = !DILocation(line: 2754, column: 2, scope: !12856)
!12970 = distinct !DISubprogram(name: "mesh_separate_loose", scope: !3, file: !3, line: 2757, type: !12834, scopeLine: 2758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!12971 = !DILocalVariable(name: "bmain", arg: 1, scope: !12970, file: !3, line: 2757, type: !8036)
!12972 = !DILocation(line: 2757, column: 39, scope: !12970)
!12973 = !DILocalVariable(name: "scene", arg: 2, scope: !12970, file: !3, line: 2757, type: !5145)
!12974 = !DILocation(line: 2757, column: 53, scope: !12970)
!12975 = !DILocalVariable(name: "base_old", arg: 3, scope: !12970, file: !3, line: 2757, type: !8118)
!12976 = !DILocation(line: 2757, column: 66, scope: !12970)
!12977 = !DILocalVariable(name: "bm_old", arg: 4, scope: !12970, file: !3, line: 2757, type: !3610)
!12978 = !DILocation(line: 2757, column: 83, scope: !12970)
!12979 = !DILocalVariable(name: "i", scope: !12970, file: !3, line: 2759, type: !135)
!12980 = !DILocation(line: 2759, column: 6, scope: !12970)
!12981 = !DILocalVariable(name: "e", scope: !12970, file: !3, line: 2760, type: !1418)
!12982 = !DILocation(line: 2760, column: 10, scope: !12970)
!12983 = !DILocalVariable(name: "v_seed", scope: !12970, file: !3, line: 2761, type: !1354)
!12984 = !DILocation(line: 2761, column: 10, scope: !12970)
!12985 = !DILocalVariable(name: "walker", scope: !12970, file: !3, line: 2762, type: !12986)
!12986 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMWalker", file: !1311, line: 72, baseType: !12987)
!12987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMWalker", file: !1311, line: 45, size: 960, elements: !12988)
!12988 = !{!12989, !12990, !12995, !12999, !13000, !13001, !13003, !13004, !13005, !13006, !13007, !13008, !13009, !13010, !13011, !13013, !13016, !13017}
!12989 = !DIDerivedType(tag: DW_TAG_member, name: "begin_htype", scope: !12987, file: !1311, line: 46, baseType: !1365, size: 8)
!12990 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !12987, file: !1311, line: 47, baseType: !12991, size: 64, offset: 64)
!12991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12992, size: 64)
!12992 = !DISubroutineType(types: !12993)
!12993 = !{null, !12994, !1343}
!12994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12987, size: 64)
!12995 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !12987, file: !1311, line: 48, baseType: !12996, size: 64, offset: 128)
!12996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12997, size: 64)
!12997 = !DISubroutineType(types: !12998)
!12998 = !{!1343, !12994}
!12999 = !DIDerivedType(tag: DW_TAG_member, name: "yield", scope: !12987, file: !1311, line: 49, baseType: !12996, size: 64, offset: 192)
!13000 = !DIDerivedType(tag: DW_TAG_member, name: "structsize", scope: !12987, file: !1311, line: 50, baseType: !135, size: 32, offset: 256)
!13001 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !12987, file: !1311, line: 51, baseType: !13002, size: 32, offset: 288)
!13002 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMWOrder", file: !1311, line: 37, baseType: !1310)
!13003 = !DIDerivedType(tag: DW_TAG_member, name: "valid_mask", scope: !12987, file: !1311, line: 52, baseType: !135, size: 32, offset: 320)
!13004 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !12987, file: !1311, line: 55, baseType: !135, size: 32, offset: 352)
!13005 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !12987, file: !1311, line: 57, baseType: !3610, size: 64, offset: 384)
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "worklist", scope: !12987, file: !1311, line: 58, baseType: !4471, size: 64, offset: 448)
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12987, file: !1311, line: 59, baseType: !1490, size: 128, offset: 512)
!13008 = !DIDerivedType(tag: DW_TAG_member, name: "mask_vert", scope: !12987, file: !1311, line: 63, baseType: !1373, size: 16, offset: 640)
!13009 = !DIDerivedType(tag: DW_TAG_member, name: "mask_edge", scope: !12987, file: !1311, line: 64, baseType: !1373, size: 16, offset: 656)
!13010 = !DIDerivedType(tag: DW_TAG_member, name: "mask_face", scope: !12987, file: !1311, line: 65, baseType: !1373, size: 16, offset: 672)
!13011 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12987, file: !1311, line: 67, baseType: !13012, size: 32, offset: 704)
!13012 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMWFlag", file: !1311, line: 42, baseType: !1315)
!13013 = !DIDerivedType(tag: DW_TAG_member, name: "visit_set", scope: !12987, file: !1311, line: 69, baseType: !13014, size: 64, offset: 768)
!13014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13015, size: 64)
!13015 = !DICompositeType(tag: DW_TAG_structure_type, name: "GSet", file: !3602, line: 176, flags: DIFlagFwdDecl)
!13016 = !DIDerivedType(tag: DW_TAG_member, name: "visit_set_alt", scope: !12987, file: !1311, line: 70, baseType: !13014, size: 64, offset: 832)
!13017 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !12987, file: !1311, line: 71, baseType: !135, size: 32, offset: 896)
!13018 = !DILocation(line: 2762, column: 11, scope: !12970)
!13019 = !DILocalVariable(name: "result", scope: !12970, file: !3, line: 2763, type: !2530)
!13020 = !DILocation(line: 2763, column: 7, scope: !12970)
!13021 = !DILocalVariable(name: "max_iter", scope: !12970, file: !3, line: 2764, type: !135)
!13022 = !DILocation(line: 2764, column: 6, scope: !12970)
!13023 = !DILocation(line: 2764, column: 17, scope: !12970)
!13024 = !DILocation(line: 2764, column: 25, scope: !12970)
!13025 = !DILocation(line: 2767, column: 33, scope: !12970)
!13026 = !DILocation(line: 2767, column: 2, scope: !12970)
!13027 = !DILocation(line: 2774, column: 9, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !12970, file: !3, line: 2774, column: 2)
!13029 = !DILocation(line: 2774, column: 7, scope: !13028)
!13030 = !DILocation(line: 2774, column: 14, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13028, file: !3, line: 2774, column: 2)
!13032 = !DILocation(line: 2774, column: 18, scope: !13031)
!13033 = !DILocation(line: 2774, column: 16, scope: !13031)
!13034 = !DILocation(line: 2774, column: 2, scope: !13028)
!13035 = !DILocalVariable(name: "tot", scope: !13036, file: !3, line: 2775, type: !135)
!13036 = distinct !DILexicalBlock(scope: !13031, file: !3, line: 2774, column: 33)
!13037 = !DILocation(line: 2775, column: 7, scope: !13036)
!13038 = !DILocation(line: 2777, column: 29, scope: !13036)
!13039 = !DILocation(line: 2777, column: 12, scope: !13036)
!13040 = !DILocation(line: 2777, column: 10, scope: !13036)
!13041 = !DILocation(line: 2780, column: 7, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 2780, column: 7)
!13043 = !DILocation(line: 2780, column: 14, scope: !13042)
!13044 = !DILocation(line: 2780, column: 7, scope: !13036)
!13045 = !DILocation(line: 2781, column: 4, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !13042, file: !3, line: 2780, column: 23)
!13047 = !DILocation(line: 2785, column: 8, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 2785, column: 7)
!13049 = !DILocation(line: 2785, column: 7, scope: !13036)
!13050 = !DILocation(line: 2785, column: 50, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13048, file: !3, line: 2785, column: 48)
!13052 = !DILocation(line: 2785, column: 95, scope: !13051)
!13053 = !DILocation(line: 2785, column: 99, scope: !13051)
!13054 = !DILocation(line: 2789, column: 21, scope: !13036)
!13055 = !DILocation(line: 2789, column: 3, scope: !13036)
!13056 = !DILocation(line: 2794, column: 31, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 2794, column: 3)
!13058 = !DILocation(line: 2794, column: 12, scope: !13057)
!13059 = !DILocation(line: 2794, column: 10, scope: !13057)
!13060 = !DILocation(line: 2794, column: 8, scope: !13057)
!13061 = !DILocation(line: 2794, column: 40, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13057, file: !3, line: 2794, column: 3)
!13063 = !DILocation(line: 2794, column: 3, scope: !13057)
!13064 = !DILocation(line: 2795, column: 9, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13066, file: !3, line: 2795, column: 8)
!13066 = distinct !DILexicalBlock(scope: !13062, file: !3, line: 2794, column: 66)
!13067 = !DILocation(line: 2795, column: 8, scope: !13066)
!13068 = !DILocation(line: 2795, column: 50, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13065, file: !3, line: 2795, column: 48)
!13070 = !DILocation(line: 2795, column: 94, scope: !13069)
!13071 = !DILocation(line: 2795, column: 98, scope: !13069)
!13072 = !DILocation(line: 2796, column: 9, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13066, file: !3, line: 2796, column: 8)
!13074 = !DILocation(line: 2796, column: 8, scope: !13066)
!13075 = !DILocation(line: 2796, column: 50, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13073, file: !3, line: 2796, column: 48)
!13077 = !DILocation(line: 2796, column: 94, scope: !13076)
!13078 = !DILocation(line: 2796, column: 98, scope: !13076)
!13079 = !DILocation(line: 2797, column: 3, scope: !13066)
!13080 = !DILocation(line: 2794, column: 47, scope: !13062)
!13081 = !DILocation(line: 2794, column: 45, scope: !13062)
!13082 = !DILocation(line: 2794, column: 3, scope: !13062)
!13083 = distinct !{!13083, !13063, !13084}
!13084 = !DILocation(line: 2797, column: 3, scope: !13057)
!13085 = !DILocation(line: 2798, column: 3, scope: !13036)
!13086 = !DILocation(line: 2800, column: 7, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 2800, column: 7)
!13088 = !DILocation(line: 2800, column: 15, scope: !13087)
!13089 = !DILocation(line: 2800, column: 26, scope: !13087)
!13090 = !DILocation(line: 2800, column: 23, scope: !13087)
!13091 = !DILocation(line: 2800, column: 7, scope: !13036)
!13092 = !DILocation(line: 2802, column: 4, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13087, file: !3, line: 2800, column: 31)
!13094 = !DILocation(line: 2807, column: 28, scope: !13036)
!13095 = !DILocation(line: 2807, column: 3, scope: !13036)
!13096 = !DILocation(line: 2810, column: 35, scope: !13036)
!13097 = !DILocation(line: 2810, column: 42, scope: !13036)
!13098 = !DILocation(line: 2810, column: 49, scope: !13036)
!13099 = !DILocation(line: 2810, column: 59, scope: !13036)
!13100 = !DILocation(line: 2810, column: 14, scope: !13036)
!13101 = !DILocation(line: 2810, column: 67, scope: !13036)
!13102 = !DILocation(line: 2810, column: 10, scope: !13036)
!13103 = !DILocation(line: 2811, column: 2, scope: !13036)
!13104 = !DILocation(line: 2774, column: 29, scope: !13031)
!13105 = !DILocation(line: 2774, column: 2, scope: !13031)
!13106 = distinct !{!13106, !13034, !13107}
!13107 = !DILocation(line: 2811, column: 2, scope: !13028)
!13108 = !DILocation(line: 2813, column: 9, scope: !12970)
!13109 = !DILocation(line: 2813, column: 2, scope: !12970)
!13110 = distinct !DISubprogram(name: "mesh_separate_tagged", scope: !3, file: !3, line: 2555, type: !13111, scopeLine: 2556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!13111 = !DISubroutineType(types: !13112)
!13112 = !{!8118, !8036, !5145, !8118, !3610}
!13113 = !DILocalVariable(name: "bmain", arg: 1, scope: !13110, file: !3, line: 2555, type: !8036)
!13114 = !DILocation(line: 2555, column: 41, scope: !13110)
!13115 = !DILocalVariable(name: "scene", arg: 2, scope: !13110, file: !3, line: 2555, type: !5145)
!13116 = !DILocation(line: 2555, column: 55, scope: !13110)
!13117 = !DILocalVariable(name: "base_old", arg: 3, scope: !13110, file: !3, line: 2555, type: !8118)
!13118 = !DILocation(line: 2555, column: 68, scope: !13110)
!13119 = !DILocalVariable(name: "bm_old", arg: 4, scope: !13110, file: !3, line: 2555, type: !3610)
!13120 = !DILocation(line: 2555, column: 85, scope: !13110)
!13121 = !DILocalVariable(name: "base_new", scope: !13110, file: !3, line: 2557, type: !8118)
!13122 = !DILocation(line: 2557, column: 8, scope: !13110)
!13123 = !DILocalVariable(name: "obedit", scope: !13110, file: !3, line: 2558, type: !4127)
!13124 = !DILocation(line: 2558, column: 10, scope: !13110)
!13125 = !DILocation(line: 2558, column: 19, scope: !13110)
!13126 = !DILocation(line: 2558, column: 29, scope: !13110)
!13127 = !DILocalVariable(name: "bm_new", scope: !13110, file: !3, line: 2559, type: !3610)
!13128 = !DILocation(line: 2559, column: 9, scope: !13110)
!13129 = !DILocation(line: 2561, column: 11, scope: !13110)
!13130 = !DILocation(line: 2561, column: 9, scope: !13110)
!13131 = !DILocation(line: 2562, column: 32, scope: !13110)
!13132 = !DILocation(line: 2562, column: 2, scope: !13110)
!13133 = !DILocation(line: 2564, column: 19, scope: !13110)
!13134 = !DILocation(line: 2564, column: 27, scope: !13110)
!13135 = !DILocation(line: 2564, column: 35, scope: !13110)
!13136 = !DILocation(line: 2564, column: 43, scope: !13110)
!13137 = !DILocation(line: 2564, column: 50, scope: !13110)
!13138 = !DILocation(line: 2564, column: 2, scope: !13110)
!13139 = !DILocation(line: 2565, column: 19, scope: !13110)
!13140 = !DILocation(line: 2565, column: 27, scope: !13110)
!13141 = !DILocation(line: 2565, column: 35, scope: !13110)
!13142 = !DILocation(line: 2565, column: 43, scope: !13110)
!13143 = !DILocation(line: 2565, column: 50, scope: !13110)
!13144 = !DILocation(line: 2565, column: 2, scope: !13110)
!13145 = !DILocation(line: 2566, column: 19, scope: !13110)
!13146 = !DILocation(line: 2566, column: 27, scope: !13110)
!13147 = !DILocation(line: 2566, column: 35, scope: !13110)
!13148 = !DILocation(line: 2566, column: 43, scope: !13110)
!13149 = !DILocation(line: 2566, column: 50, scope: !13110)
!13150 = !DILocation(line: 2566, column: 2, scope: !13110)
!13151 = !DILocation(line: 2567, column: 19, scope: !13110)
!13152 = !DILocation(line: 2567, column: 27, scope: !13110)
!13153 = !DILocation(line: 2567, column: 35, scope: !13110)
!13154 = !DILocation(line: 2567, column: 43, scope: !13110)
!13155 = !DILocation(line: 2567, column: 50, scope: !13110)
!13156 = !DILocation(line: 2567, column: 2, scope: !13110)
!13157 = !DILocation(line: 2569, column: 30, scope: !13110)
!13158 = !DILocation(line: 2569, column: 38, scope: !13110)
!13159 = !DILocation(line: 2569, column: 71, scope: !13110)
!13160 = !DILocation(line: 2569, column: 2, scope: !13110)
!13161 = !DILocation(line: 2570, column: 30, scope: !13110)
!13162 = !DILocation(line: 2570, column: 38, scope: !13110)
!13163 = !DILocation(line: 2570, column: 71, scope: !13110)
!13164 = !DILocation(line: 2570, column: 2, scope: !13110)
!13165 = !DILocation(line: 2571, column: 30, scope: !13110)
!13166 = !DILocation(line: 2571, column: 38, scope: !13110)
!13167 = !DILocation(line: 2571, column: 71, scope: !13110)
!13168 = !DILocation(line: 2571, column: 2, scope: !13110)
!13169 = !DILocation(line: 2572, column: 30, scope: !13110)
!13170 = !DILocation(line: 2572, column: 38, scope: !13110)
!13171 = !DILocation(line: 2572, column: 71, scope: !13110)
!13172 = !DILocation(line: 2572, column: 2, scope: !13110)
!13173 = !DILocation(line: 2574, column: 37, scope: !13110)
!13174 = !DILocation(line: 2574, column: 44, scope: !13110)
!13175 = !DILocation(line: 2574, column: 51, scope: !13110)
!13176 = !DILocation(line: 2574, column: 13, scope: !13110)
!13177 = !DILocation(line: 2574, column: 11, scope: !13110)
!13178 = !DILocation(line: 2576, column: 17, scope: !13110)
!13179 = !DILocation(line: 2576, column: 27, scope: !13110)
!13180 = !DILocation(line: 2576, column: 48, scope: !13110)
!13181 = !DILocation(line: 2576, column: 35, scope: !13110)
!13182 = !DILocation(line: 2576, column: 71, scope: !13110)
!13183 = !DILocation(line: 2576, column: 58, scope: !13110)
!13184 = !DILocation(line: 2576, column: 57, scope: !13110)
!13185 = !DILocation(line: 2576, column: 2, scope: !13110)
!13186 = !DILocation(line: 2578, column: 24, scope: !13110)
!13187 = !DILocation(line: 2578, column: 2, scope: !13110)
!13188 = !DILocation(line: 2580, column: 15, scope: !13110)
!13189 = !DILocation(line: 2581, column: 60, scope: !13110)
!13190 = !DILocation(line: 2580, column: 2, scope: !13110)
!13191 = !DILocation(line: 2582, column: 15, scope: !13110)
!13192 = !DILocation(line: 2582, column: 2, scope: !13110)
!13193 = !DILocation(line: 2588, column: 33, scope: !13110)
!13194 = !DILocation(line: 2588, column: 2, scope: !13110)
!13195 = !DILocation(line: 2590, column: 25, scope: !13110)
!13196 = !DILocation(line: 2590, column: 2, scope: !13110)
!13197 = !DILocation(line: 2592, column: 19, scope: !13110)
!13198 = !DILocation(line: 2592, column: 27, scope: !13110)
!13199 = !DILocation(line: 2592, column: 37, scope: !13110)
!13200 = !DILocation(line: 2592, column: 45, scope: !13110)
!13201 = !DILocation(line: 2592, column: 2, scope: !13110)
!13202 = !DILocation(line: 2594, column: 15, scope: !13110)
!13203 = !DILocation(line: 2594, column: 2, scope: !13110)
!13204 = !DILocation(line: 2595, column: 11, scope: !13110)
!13205 = !DILocation(line: 2595, column: 21, scope: !13110)
!13206 = !DILocation(line: 2595, column: 29, scope: !13110)
!13207 = !DILocation(line: 2595, column: 3, scope: !13110)
!13208 = !DILocation(line: 2595, column: 36, scope: !13110)
!13209 = !DILocation(line: 2595, column: 48, scope: !13110)
!13210 = !DILocation(line: 2597, column: 9, scope: !13110)
!13211 = !DILocation(line: 2597, column: 2, scope: !13110)
!13212 = distinct !DISubprogram(name: "mesh_separate_material_assign_mat_nr", scope: !3, file: !3, line: 2654, type: !13213, scopeLine: 2655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!13213 = !DISubroutineType(types: !13214)
!13214 = !{null, !4127, !5013}
!13215 = !DILocalVariable(name: "ob", arg: 1, scope: !13212, file: !3, line: 2654, type: !4127)
!13216 = !DILocation(line: 2654, column: 58, scope: !13212)
!13217 = !DILocalVariable(name: "mat_nr", arg: 2, scope: !13212, file: !3, line: 2654, type: !5013)
!13218 = !DILocation(line: 2654, column: 74, scope: !13212)
!13219 = !DILocalVariable(name: "obdata", scope: !13212, file: !3, line: 2656, type: !1447)
!13220 = !DILocation(line: 2656, column: 6, scope: !13212)
!13221 = !DILocation(line: 2656, column: 15, scope: !13212)
!13222 = !DILocation(line: 2656, column: 19, scope: !13212)
!13223 = !DILocalVariable(name: "matarar", scope: !13212, file: !3, line: 2658, type: !13224)
!13224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13225, size: 64)
!13225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9961, size: 64)
!13226 = !DILocation(line: 2658, column: 14, scope: !13212)
!13227 = !DILocalVariable(name: "totcolp", scope: !13212, file: !3, line: 2659, type: !13228)
!13228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5013, size: 64)
!13229 = !DILocation(line: 2659, column: 15, scope: !13212)
!13230 = !DILocation(line: 2661, column: 28, scope: !13212)
!13231 = !DILocation(line: 2661, column: 12, scope: !13212)
!13232 = !DILocation(line: 2661, column: 10, scope: !13212)
!13233 = !DILocation(line: 2662, column: 28, scope: !13212)
!13234 = !DILocation(line: 2662, column: 12, scope: !13212)
!13235 = !DILocation(line: 2662, column: 10, scope: !13212)
!13236 = !DILocation(line: 2664, column: 7, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13212, file: !3, line: 2664, column: 6)
!13238 = !DILocation(line: 2664, column: 15, scope: !13237)
!13239 = !DILocation(line: 2664, column: 18, scope: !13237)
!13240 = !DILocation(line: 0, scope: !13237)
!13241 = !DILocation(line: 2664, column: 27, scope: !13237)
!13242 = !DILocation(line: 2664, column: 6, scope: !13212)
!13243 = !DILocation(line: 2666, column: 3, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13237, file: !3, line: 2664, column: 33)
!13245 = !DILocation(line: 2669, column: 7, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !13212, file: !3, line: 2669, column: 6)
!13247 = !DILocation(line: 2669, column: 6, scope: !13246)
!13248 = !DILocation(line: 2669, column: 6, scope: !13212)
!13249 = !DILocalVariable(name: "ma_ob", scope: !13250, file: !3, line: 2670, type: !9961)
!13250 = distinct !DILexicalBlock(scope: !13246, file: !3, line: 2669, column: 16)
!13251 = !DILocation(line: 2670, column: 13, scope: !13250)
!13252 = !DILocalVariable(name: "ma_obdata", scope: !13250, file: !3, line: 2671, type: !9961)
!13253 = !DILocation(line: 2671, column: 13, scope: !13250)
!13254 = !DILocalVariable(name: "matbit", scope: !13250, file: !3, line: 2672, type: !1365)
!13255 = !DILocation(line: 2672, column: 8, scope: !13250)
!13256 = !DILocation(line: 2674, column: 7, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13250, file: !3, line: 2674, column: 7)
!13258 = !DILocation(line: 2674, column: 16, scope: !13257)
!13259 = !DILocation(line: 2674, column: 20, scope: !13257)
!13260 = !DILocation(line: 2674, column: 14, scope: !13257)
!13261 = !DILocation(line: 2674, column: 7, scope: !13250)
!13262 = !DILocation(line: 2675, column: 12, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13257, file: !3, line: 2674, column: 28)
!13264 = !DILocation(line: 2675, column: 16, scope: !13263)
!13265 = !DILocation(line: 2675, column: 20, scope: !13263)
!13266 = !DILocation(line: 2675, column: 10, scope: !13263)
!13267 = !DILocation(line: 2676, column: 13, scope: !13263)
!13268 = !DILocation(line: 2676, column: 17, scope: !13263)
!13269 = !DILocation(line: 2676, column: 25, scope: !13263)
!13270 = !DILocation(line: 2676, column: 11, scope: !13263)
!13271 = !DILocation(line: 2677, column: 3, scope: !13263)
!13272 = !DILocation(line: 2679, column: 10, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13257, file: !3, line: 2678, column: 8)
!13274 = !DILocation(line: 2680, column: 11, scope: !13273)
!13275 = !DILocation(line: 2683, column: 7, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13250, file: !3, line: 2683, column: 7)
!13277 = !DILocation(line: 2683, column: 17, scope: !13276)
!13278 = !DILocation(line: 2683, column: 16, scope: !13276)
!13279 = !DILocation(line: 2683, column: 14, scope: !13276)
!13280 = !DILocation(line: 2683, column: 7, scope: !13250)
!13281 = !DILocation(line: 2684, column: 19, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !13276, file: !3, line: 2683, column: 26)
!13283 = !DILocation(line: 2684, column: 18, scope: !13282)
!13284 = !DILocation(line: 2684, column: 28, scope: !13282)
!13285 = !DILocation(line: 2684, column: 17, scope: !13282)
!13286 = !DILocation(line: 2684, column: 15, scope: !13282)
!13287 = !DILocation(line: 2685, column: 3, scope: !13282)
!13288 = !DILocation(line: 2687, column: 14, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13276, file: !3, line: 2686, column: 8)
!13290 = !DILocation(line: 2690, column: 25, scope: !13250)
!13291 = !DILocation(line: 2690, column: 3, scope: !13250)
!13292 = !DILocation(line: 2691, column: 30, scope: !13250)
!13293 = !DILocation(line: 2691, column: 3, scope: !13250)
!13294 = !DILocation(line: 2692, column: 26, scope: !13250)
!13295 = !DILocation(line: 2692, column: 3, scope: !13250)
!13296 = !DILocation(line: 2694, column: 16, scope: !13250)
!13297 = !DILocation(line: 2694, column: 3, scope: !13250)
!13298 = !DILocation(line: 2694, column: 7, scope: !13250)
!13299 = !DILocation(line: 2694, column: 14, scope: !13250)
!13300 = !DILocation(line: 2695, column: 20, scope: !13250)
!13301 = !DILocation(line: 2695, column: 3, scope: !13250)
!13302 = !DILocation(line: 2695, column: 7, scope: !13250)
!13303 = !DILocation(line: 2695, column: 18, scope: !13250)
!13304 = !DILocation(line: 2696, column: 19, scope: !13250)
!13305 = !DILocation(line: 2696, column: 5, scope: !13250)
!13306 = !DILocation(line: 2696, column: 4, scope: !13250)
!13307 = !DILocation(line: 2696, column: 3, scope: !13250)
!13308 = !DILocation(line: 2696, column: 17, scope: !13250)
!13309 = !DILocation(line: 2697, column: 2, scope: !13250)
!13310 = !DILocation(line: 2699, column: 25, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13246, file: !3, line: 2698, column: 7)
!13312 = !DILocation(line: 2699, column: 3, scope: !13311)
!13313 = !DILocation(line: 2700, column: 30, scope: !13311)
!13314 = !DILocation(line: 2700, column: 3, scope: !13311)
!13315 = !DILocation(line: 2701, column: 26, scope: !13311)
!13316 = !DILocation(line: 2701, column: 3, scope: !13311)
!13317 = !DILocation(line: 2703, column: 1, scope: !13212)
!13318 = distinct !DISubprogram(name: "bm_mesh_hflag_flush_vert", scope: !3, file: !3, line: 2612, type: !13319, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!13319 = !DISubroutineType(types: !13320)
!13320 = !{null, !3610, !3576}
!13321 = !DILocalVariable(name: "bm", arg: 1, scope: !13318, file: !3, line: 2612, type: !3610)
!13322 = !DILocation(line: 2612, column: 45, scope: !13318)
!13323 = !DILocalVariable(name: "hflag", arg: 2, scope: !13318, file: !3, line: 2612, type: !3576)
!13324 = !DILocation(line: 2612, column: 60, scope: !13318)
!13325 = !DILocalVariable(name: "e", scope: !13318, file: !3, line: 2614, type: !1418)
!13326 = !DILocation(line: 2614, column: 10, scope: !13318)
!13327 = !DILocalVariable(name: "l_iter", scope: !13318, file: !3, line: 2615, type: !1402)
!13328 = !DILocation(line: 2615, column: 10, scope: !13318)
!13329 = !DILocalVariable(name: "l_first", scope: !13318, file: !3, line: 2616, type: !1402)
!13330 = !DILocation(line: 2616, column: 10, scope: !13318)
!13331 = !DILocalVariable(name: "f", scope: !13318, file: !3, line: 2617, type: !1420)
!13332 = !DILocation(line: 2617, column: 10, scope: !13318)
!13333 = !DILocalVariable(name: "eiter", scope: !13318, file: !3, line: 2619, type: !4456)
!13334 = !DILocation(line: 2619, column: 9, scope: !13318)
!13335 = !DILocalVariable(name: "fiter", scope: !13318, file: !3, line: 2620, type: !4456)
!13336 = !DILocation(line: 2620, column: 9, scope: !13318)
!13337 = !DILocalVariable(name: "ok", scope: !13318, file: !3, line: 2622, type: !2530)
!13338 = !DILocation(line: 2622, column: 7, scope: !13318)
!13339 = !DILocation(line: 2624, column: 2, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13318, file: !3, line: 2624, column: 2)
!13341 = !DILocation(line: 2624, column: 2, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13340, file: !3, line: 2624, column: 2)
!13343 = !DILocation(line: 2625, column: 7, scope: !13344)
!13344 = distinct !DILexicalBlock(scope: !13345, file: !3, line: 2625, column: 7)
!13345 = distinct !DILexicalBlock(scope: !13342, file: !3, line: 2624, column: 49)
!13346 = !DILocation(line: 2625, column: 39, scope: !13344)
!13347 = !DILocation(line: 2626, column: 7, scope: !13344)
!13348 = !DILocation(line: 2625, column: 7, scope: !13345)
!13349 = !DILocation(line: 2628, column: 4, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13344, file: !3, line: 2627, column: 3)
!13351 = !DILocation(line: 2629, column: 3, scope: !13350)
!13352 = !DILocation(line: 2631, column: 4, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13344, file: !3, line: 2630, column: 8)
!13354 = !DILocation(line: 2633, column: 2, scope: !13345)
!13355 = distinct !{!13355, !13339, !13356}
!13356 = !DILocation(line: 2633, column: 2, scope: !13340)
!13357 = !DILocation(line: 2634, column: 2, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13318, file: !3, line: 2634, column: 2)
!13359 = !DILocation(line: 2634, column: 2, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13358, file: !3, line: 2634, column: 2)
!13361 = !DILocation(line: 2635, column: 6, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13360, file: !3, line: 2634, column: 49)
!13363 = !DILocation(line: 2636, column: 22, scope: !13362)
!13364 = !DILocation(line: 2636, column: 20, scope: !13362)
!13365 = !DILocation(line: 2636, column: 10, scope: !13362)
!13366 = !DILocation(line: 2637, column: 3, scope: !13362)
!13367 = !DILocation(line: 2638, column: 9, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13369, file: !3, line: 2638, column: 8)
!13369 = distinct !DILexicalBlock(scope: !13362, file: !3, line: 2637, column: 6)
!13370 = !DILocation(line: 2638, column: 8, scope: !13369)
!13371 = !DILocation(line: 2639, column: 8, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13368, file: !3, line: 2638, column: 46)
!13373 = !DILocation(line: 2640, column: 5, scope: !13372)
!13374 = !DILocation(line: 2642, column: 3, scope: !13369)
!13375 = !DILocation(line: 2642, column: 22, scope: !13362)
!13376 = !DILocation(line: 2642, column: 30, scope: !13362)
!13377 = !DILocation(line: 2642, column: 20, scope: !13362)
!13378 = !DILocation(line: 2642, column: 39, scope: !13362)
!13379 = !DILocation(line: 2642, column: 36, scope: !13362)
!13380 = distinct !{!13380, !13366, !13381}
!13381 = !DILocation(line: 2642, column: 46, scope: !13362)
!13382 = !DILocation(line: 2644, column: 3, scope: !13362)
!13383 = !DILocation(line: 2645, column: 2, scope: !13362)
!13384 = distinct !{!13384, !13357, !13385}
!13385 = !DILocation(line: 2645, column: 2, scope: !13358)
!13386 = !DILocation(line: 2646, column: 1, scope: !13318)
!13387 = distinct !DISubprogram(name: "min_ii", scope: !12807, file: !12807, line: 211, type: !13388, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!13388 = !DISubroutineType(types: !13389)
!13389 = !{!135, !135, !135}
!13390 = !DILocalVariable(name: "a", arg: 1, scope: !13387, file: !12807, line: 211, type: !135)
!13391 = !DILocation(line: 211, column: 24, scope: !13387)
!13392 = !DILocalVariable(name: "b", arg: 2, scope: !13387, file: !12807, line: 211, type: !135)
!13393 = !DILocation(line: 211, column: 31, scope: !13387)
!13394 = !DILocation(line: 213, column: 10, scope: !13387)
!13395 = !DILocation(line: 213, column: 14, scope: !13387)
!13396 = !DILocation(line: 213, column: 12, scope: !13387)
!13397 = !DILocation(line: 213, column: 9, scope: !13387)
!13398 = !DILocation(line: 213, column: 19, scope: !13387)
!13399 = !DILocation(line: 213, column: 23, scope: !13387)
!13400 = !DILocation(line: 213, column: 2, scope: !13387)
!13401 = distinct !DISubprogram(name: "mod_i", scope: !12807, file: !12807, line: 178, type: !13388, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!13402 = !DILocalVariable(name: "i", arg: 1, scope: !13401, file: !12807, line: 178, type: !135)
!13403 = !DILocation(line: 178, column: 23, scope: !13401)
!13404 = !DILocalVariable(name: "n", arg: 2, scope: !13401, file: !12807, line: 178, type: !135)
!13405 = !DILocation(line: 178, column: 30, scope: !13401)
!13406 = !DILocation(line: 180, column: 10, scope: !13401)
!13407 = !DILocation(line: 180, column: 14, scope: !13401)
!13408 = !DILocation(line: 180, column: 12, scope: !13401)
!13409 = !DILocation(line: 180, column: 18, scope: !13401)
!13410 = !DILocation(line: 180, column: 16, scope: !13401)
!13411 = !DILocation(line: 180, column: 23, scope: !13401)
!13412 = !DILocation(line: 180, column: 21, scope: !13401)
!13413 = !DILocation(line: 180, column: 2, scope: !13401)
!13414 = distinct !DISubprogram(name: "edbm_fill_grid_prepare", scope: !3, file: !3, line: 3000, type: !13415, scopeLine: 3001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!13415 = !DISubroutineType(types: !13416)
!13416 = !{null, !3610, !135, !10685, !2530}
!13417 = !DILocalVariable(name: "bm", arg: 1, scope: !13414, file: !3, line: 3000, type: !3610)
!13418 = !DILocation(line: 3000, column: 43, scope: !13414)
!13419 = !DILocalVariable(name: "offset", arg: 2, scope: !13414, file: !3, line: 3000, type: !135)
!13420 = !DILocation(line: 3000, column: 51, scope: !13414)
!13421 = !DILocalVariable(name: "r_span", arg: 3, scope: !13414, file: !3, line: 3000, type: !10685)
!13422 = !DILocation(line: 3000, column: 64, scope: !13414)
!13423 = !DILocalVariable(name: "span_calc", arg: 4, scope: !13414, file: !3, line: 3000, type: !2530)
!13424 = !DILocation(line: 3000, column: 77, scope: !13414)
!13425 = !DILocalVariable(name: "e", scope: !13414, file: !3, line: 3002, type: !1418)
!13426 = !DILocation(line: 3002, column: 10, scope: !13414)
!13427 = !DILocalVariable(name: "iter", scope: !13414, file: !3, line: 3003, type: !4456)
!13428 = !DILocation(line: 3003, column: 9, scope: !13414)
!13429 = !DILocalVariable(name: "count", scope: !13414, file: !3, line: 3004, type: !135)
!13430 = !DILocation(line: 3004, column: 6, scope: !13414)
!13431 = !DILocalVariable(name: "span", scope: !13414, file: !3, line: 3005, type: !135)
!13432 = !DILocation(line: 3005, column: 6, scope: !13414)
!13433 = !DILocation(line: 3005, column: 14, scope: !13414)
!13434 = !DILocation(line: 3005, column: 13, scope: !13414)
!13435 = !DILocalVariable(name: "eloops", scope: !13414, file: !3, line: 3007, type: !1490)
!13436 = !DILocation(line: 3007, column: 11, scope: !13414)
!13437 = !DILocalVariable(name: "el_store", scope: !13414, file: !3, line: 3008, type: !13438)
!13438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13439, size: 64)
!13439 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdgeLoopStore", file: !13440, line: 32, flags: DIFlagFwdDecl)
!13440 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_edgeloop.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13441 = !DILocation(line: 3008, column: 26, scope: !13414)
!13442 = !DILocation(line: 3012, column: 2, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13414, file: !3, line: 3012, column: 2)
!13444 = !DILocation(line: 3012, column: 2, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13443, file: !3, line: 3012, column: 2)
!13446 = !DILocation(line: 3013, column: 3, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13445, file: !3, line: 3012, column: 48)
!13448 = !DILocation(line: 3014, column: 2, scope: !13447)
!13449 = distinct !{!13449, !13442, !13450}
!13450 = !DILocation(line: 3014, column: 2, scope: !13443)
!13451 = !DILocation(line: 3016, column: 33, scope: !13414)
!13452 = !DILocation(line: 3016, column: 73, scope: !13414)
!13453 = !DILocation(line: 3016, column: 10, scope: !13414)
!13454 = !DILocation(line: 3016, column: 8, scope: !13414)
!13455 = !DILocation(line: 3017, column: 20, scope: !13414)
!13456 = !DILocation(line: 3017, column: 13, scope: !13414)
!13457 = !DILocation(line: 3017, column: 11, scope: !13414)
!13458 = !DILocation(line: 3019, column: 6, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13414, file: !3, line: 3019, column: 6)
!13460 = !DILocation(line: 3019, column: 12, scope: !13459)
!13461 = !DILocation(line: 3019, column: 17, scope: !13459)
!13462 = !DILocation(line: 3019, column: 42, scope: !13459)
!13463 = !DILocation(line: 3019, column: 20, scope: !13459)
!13464 = !DILocation(line: 3019, column: 52, scope: !13459)
!13465 = !DILocation(line: 3019, column: 79, scope: !13459)
!13466 = !DILocation(line: 3019, column: 56, scope: !13459)
!13467 = !DILocation(line: 3019, column: 89, scope: !13459)
!13468 = !DILocation(line: 3019, column: 94, scope: !13459)
!13469 = !DILocation(line: 3019, column: 6, scope: !13414)
!13470 = !DILocalVariable(name: "verts_len", scope: !13471, file: !3, line: 3021, type: !4052)
!13471 = distinct !DILexicalBlock(scope: !13459, file: !3, line: 3019, column: 100)
!13472 = !DILocation(line: 3021, column: 13, scope: !13471)
!13473 = !DILocation(line: 3021, column: 48, scope: !13471)
!13474 = !DILocation(line: 3021, column: 25, scope: !13471)
!13475 = !DILocalVariable(name: "verts", scope: !13471, file: !3, line: 3022, type: !1956)
!13476 = !DILocation(line: 3022, column: 13, scope: !13471)
!13477 = !DILocation(line: 3022, column: 43, scope: !13471)
!13478 = !DILocation(line: 3022, column: 21, scope: !13471)
!13479 = !DILocalVariable(name: "v_act", scope: !13471, file: !3, line: 3023, type: !1354)
!13480 = !DILocation(line: 3023, column: 11, scope: !13471)
!13481 = !DILocation(line: 3023, column: 43, scope: !13471)
!13482 = !DILocation(line: 3023, column: 19, scope: !13471)
!13483 = !DILocalVariable(name: "v_act_link", scope: !13471, file: !3, line: 3024, type: !13484)
!13484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13485, size: 64)
!13485 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkData", file: !1491, line: 66, baseType: !13486)
!13486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkData", file: !1491, line: 63, size: 192, elements: !13487)
!13487 = !{!13488, !13490, !13491}
!13488 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13486, file: !1491, line: 64, baseType: !13489, size: 64)
!13489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13486, size: 64)
!13490 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13486, file: !1491, line: 64, baseType: !13489, size: 64, offset: 64)
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13486, file: !1491, line: 65, baseType: !1343, size: 64, offset: 128)
!13492 = !DILocation(line: 3024, column: 13, scope: !13471)
!13493 = !DILocalVariable(name: "edges", scope: !13471, file: !3, line: 3025, type: !3556)
!13494 = !DILocation(line: 3025, column: 12, scope: !13471)
!13495 = !DILocation(line: 3025, column: 20, scope: !13471)
!13496 = !DILocation(line: 3025, column: 49, scope: !13471)
!13497 = !DILocation(line: 3025, column: 47, scope: !13471)
!13498 = !DILocalVariable(name: "i", scope: !13471, file: !3, line: 3026, type: !135)
!13499 = !DILocation(line: 3026, column: 7, scope: !13471)
!13500 = !DILocation(line: 3028, column: 7, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13471, file: !3, line: 3028, column: 7)
!13502 = !DILocation(line: 3028, column: 13, scope: !13501)
!13503 = !DILocation(line: 3028, column: 42, scope: !13501)
!13504 = !DILocation(line: 3028, column: 49, scope: !13501)
!13505 = !DILocation(line: 3028, column: 30, scope: !13501)
!13506 = !DILocation(line: 3028, column: 28, scope: !13501)
!13507 = !DILocation(line: 3028, column: 7, scope: !13471)
!13508 = !DILocation(line: 3030, column: 3, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13501, file: !3, line: 3028, column: 84)
!13510 = !DILocalVariable(name: "v_link", scope: !13511, file: !3, line: 3033, type: !13484)
!13511 = distinct !DILexicalBlock(scope: !13501, file: !3, line: 3031, column: 8)
!13512 = !DILocation(line: 3033, column: 14, scope: !13511)
!13513 = !DILocalVariable(name: "v_link_best", scope: !13511, file: !3, line: 3033, type: !13484)
!13514 = !DILocation(line: 3033, column: 23, scope: !13511)
!13515 = !DILocalVariable(name: "angle_best", scope: !13511, file: !3, line: 3034, type: !1344)
!13516 = !DILocation(line: 3034, column: 10, scope: !13511)
!13517 = !DILocation(line: 3035, column: 18, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13511, file: !3, line: 3035, column: 4)
!13519 = !DILocation(line: 3035, column: 25, scope: !13518)
!13520 = !DILocation(line: 3035, column: 16, scope: !13518)
!13521 = !DILocation(line: 3035, column: 9, scope: !13518)
!13522 = !DILocation(line: 3035, column: 32, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13518, file: !3, line: 3035, column: 4)
!13524 = !DILocation(line: 3035, column: 4, scope: !13518)
!13525 = !DILocalVariable(name: "angle", scope: !13526, file: !3, line: 3036, type: !4150)
!13526 = distinct !DILexicalBlock(scope: !13523, file: !3, line: 3035, column: 63)
!13527 = !DILocation(line: 3036, column: 17, scope: !13526)
!13528 = !DILocation(line: 3036, column: 55, scope: !13526)
!13529 = !DILocation(line: 3036, column: 63, scope: !13526)
!13530 = !DILocation(line: 3036, column: 25, scope: !13526)
!13531 = !DILocation(line: 3037, column: 10, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13526, file: !3, line: 3037, column: 9)
!13533 = !DILocation(line: 3037, column: 18, scope: !13532)
!13534 = !DILocation(line: 3037, column: 16, scope: !13532)
!13535 = !DILocation(line: 3037, column: 30, scope: !13532)
!13536 = !DILocation(line: 3037, column: 34, scope: !13532)
!13537 = !DILocation(line: 3037, column: 46, scope: !13532)
!13538 = !DILocation(line: 3037, column: 9, scope: !13526)
!13539 = !DILocation(line: 3038, column: 19, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13532, file: !3, line: 3037, column: 56)
!13541 = !DILocation(line: 3038, column: 17, scope: !13540)
!13542 = !DILocation(line: 3039, column: 20, scope: !13540)
!13543 = !DILocation(line: 3039, column: 18, scope: !13540)
!13544 = !DILocation(line: 3040, column: 5, scope: !13540)
!13545 = !DILocation(line: 3041, column: 4, scope: !13526)
!13546 = !DILocation(line: 3035, column: 49, scope: !13523)
!13547 = !DILocation(line: 3035, column: 57, scope: !13523)
!13548 = !DILocation(line: 3035, column: 47, scope: !13523)
!13549 = !DILocation(line: 3035, column: 4, scope: !13523)
!13550 = distinct !{!13550, !13524, !13551}
!13551 = !DILocation(line: 3041, column: 4, scope: !13518)
!13552 = !DILocation(line: 3043, column: 17, scope: !13511)
!13553 = !DILocation(line: 3043, column: 15, scope: !13511)
!13554 = !DILocation(line: 3044, column: 12, scope: !13511)
!13555 = !DILocation(line: 3044, column: 24, scope: !13511)
!13556 = !DILocation(line: 3044, column: 10, scope: !13511)
!13557 = !DILocation(line: 3047, column: 7, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13471, file: !3, line: 3047, column: 7)
!13559 = !DILocation(line: 3047, column: 14, scope: !13558)
!13560 = !DILocation(line: 3047, column: 7, scope: !13471)
!13561 = !DILocation(line: 3048, column: 30, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 3047, column: 20)
!13563 = !DILocation(line: 3048, column: 37, scope: !13562)
!13564 = !DILocation(line: 3048, column: 17, scope: !13562)
!13565 = !DILocation(line: 3048, column: 15, scope: !13562)
!13566 = !DILocation(line: 3049, column: 12, scope: !13562)
!13567 = !DILocation(line: 3049, column: 24, scope: !13562)
!13568 = !DILocation(line: 3049, column: 10, scope: !13562)
!13569 = !DILocation(line: 3050, column: 3, scope: !13562)
!13570 = !DILocation(line: 3053, column: 29, scope: !13471)
!13571 = !DILocation(line: 3053, column: 36, scope: !13471)
!13572 = !DILocation(line: 3053, column: 3, scope: !13471)
!13573 = !DILocation(line: 3054, column: 25, scope: !13471)
!13574 = !DILocation(line: 3054, column: 35, scope: !13471)
!13575 = !DILocation(line: 3054, column: 3, scope: !13471)
!13576 = !DILocation(line: 3057, column: 7, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13471, file: !3, line: 3057, column: 7)
!13578 = !DILocation(line: 3057, column: 7, scope: !13471)
!13579 = !DILocalVariable(name: "ele_sort", scope: !13580, file: !3, line: 3065, type: !13581)
!13580 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 3057, column: 18)
!13581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13582, size: 64)
!13582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SortPointerByFloat", file: !13583, line: 35, size: 128, elements: !13584)
!13583 = !DIFile(filename: "blender/source/blender/blenlib/BLI_sort_utils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13584 = !{!13585, !13586}
!13585 = !DIDerivedType(tag: DW_TAG_member, name: "sort_value", scope: !13582, file: !13583, line: 36, baseType: !1344, size: 32)
!13586 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13582, file: !13583, line: 37, baseType: !1343, size: 64, offset: 64)
!13587 = !DILocation(line: 3065, column: 31, scope: !13580)
!13588 = !DILocation(line: 3065, column: 42, scope: !13580)
!13589 = !DILocation(line: 3065, column: 74, scope: !13580)
!13590 = !DILocation(line: 3065, column: 72, scope: !13580)
!13591 = !DILocalVariable(name: "v_link", scope: !13580, file: !3, line: 3066, type: !13484)
!13592 = !DILocation(line: 3066, column: 14, scope: !13580)
!13593 = !DILocation(line: 3067, column: 18, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13580, file: !3, line: 3067, column: 4)
!13595 = !DILocation(line: 3067, column: 25, scope: !13594)
!13596 = !DILocation(line: 3067, column: 16, scope: !13594)
!13597 = !DILocation(line: 3067, column: 34, scope: !13594)
!13598 = !DILocation(line: 3067, column: 9, scope: !13594)
!13599 = !DILocation(line: 3067, column: 39, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 3067, column: 4)
!13601 = !DILocation(line: 3067, column: 4, scope: !13594)
!13602 = !DILocalVariable(name: "v", scope: !13603, file: !3, line: 3068, type: !1354)
!13603 = distinct !DILexicalBlock(scope: !13600, file: !3, line: 3067, column: 75)
!13604 = !DILocation(line: 3068, column: 13, scope: !13603)
!13605 = !DILocation(line: 3068, column: 17, scope: !13603)
!13606 = !DILocation(line: 3068, column: 25, scope: !13603)
!13607 = !DILocalVariable(name: "angle", scope: !13603, file: !3, line: 3069, type: !4150)
!13608 = !DILocation(line: 3069, column: 17, scope: !13603)
!13609 = !DILocation(line: 3069, column: 55, scope: !13603)
!13610 = !DILocation(line: 3069, column: 25, scope: !13603)
!13611 = !DILocation(line: 3070, column: 30, scope: !13603)
!13612 = !DILocation(line: 3070, column: 5, scope: !13603)
!13613 = !DILocation(line: 3070, column: 14, scope: !13603)
!13614 = !DILocation(line: 3070, column: 17, scope: !13603)
!13615 = !DILocation(line: 3070, column: 28, scope: !13603)
!13616 = !DILocation(line: 3071, column: 24, scope: !13603)
!13617 = !DILocation(line: 3071, column: 5, scope: !13603)
!13618 = !DILocation(line: 3071, column: 14, scope: !13603)
!13619 = !DILocation(line: 3071, column: 17, scope: !13603)
!13620 = !DILocation(line: 3071, column: 22, scope: !13603)
!13621 = !DILocation(line: 3073, column: 5, scope: !13603)
!13622 = !DILocation(line: 3074, column: 4, scope: !13603)
!13623 = !DILocation(line: 3067, column: 56, scope: !13600)
!13624 = !DILocation(line: 3067, column: 64, scope: !13600)
!13625 = !DILocation(line: 3067, column: 54, scope: !13600)
!13626 = !DILocation(line: 3067, column: 71, scope: !13600)
!13627 = !DILocation(line: 3067, column: 4, scope: !13600)
!13628 = distinct !{!13628, !13601, !13629}
!13629 = !DILocation(line: 3074, column: 4, scope: !13594)
!13630 = !DILocation(line: 3076, column: 10, scope: !13580)
!13631 = !DILocation(line: 3076, column: 20, scope: !13580)
!13632 = !DILocation(line: 3076, column: 4, scope: !13580)
!13633 = !DILocation(line: 3078, column: 11, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13580, file: !3, line: 3078, column: 4)
!13635 = !DILocation(line: 3078, column: 9, scope: !13634)
!13636 = !DILocation(line: 3078, column: 16, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13634, file: !3, line: 3078, column: 4)
!13638 = !DILocation(line: 3078, column: 18, scope: !13637)
!13639 = !DILocation(line: 3078, column: 4, scope: !13634)
!13640 = !DILocalVariable(name: "v", scope: !13641, file: !3, line: 3079, type: !1354)
!13641 = distinct !DILexicalBlock(scope: !13637, file: !3, line: 3078, column: 28)
!13642 = !DILocation(line: 3079, column: 13, scope: !13641)
!13643 = !DILocation(line: 3079, column: 17, scope: !13641)
!13644 = !DILocation(line: 3079, column: 26, scope: !13641)
!13645 = !DILocation(line: 3079, column: 29, scope: !13641)
!13646 = !DILocation(line: 3080, column: 5, scope: !13641)
!13647 = !DILocation(line: 3081, column: 4, scope: !13641)
!13648 = !DILocation(line: 3078, column: 24, scope: !13637)
!13649 = !DILocation(line: 3078, column: 4, scope: !13637)
!13650 = distinct !{!13650, !13639, !13651}
!13651 = !DILocation(line: 3081, column: 4, scope: !13634)
!13652 = !DILocation(line: 3084, column: 18, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13580, file: !3, line: 3084, column: 4)
!13654 = !DILocation(line: 3084, column: 25, scope: !13653)
!13655 = !DILocation(line: 3084, column: 16, scope: !13653)
!13656 = !DILocation(line: 3084, column: 34, scope: !13653)
!13657 = !DILocation(line: 3084, column: 9, scope: !13653)
!13658 = !DILocation(line: 3084, column: 39, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13653, file: !3, line: 3084, column: 4)
!13660 = !DILocation(line: 3084, column: 43, scope: !13659)
!13661 = !DILocation(line: 3084, column: 53, scope: !13659)
!13662 = !DILocation(line: 3084, column: 41, scope: !13659)
!13663 = !DILocation(line: 3084, column: 4, scope: !13653)
!13664 = !DILocalVariable(name: "v", scope: !13665, file: !3, line: 3085, type: !1354)
!13665 = distinct !DILexicalBlock(scope: !13659, file: !3, line: 3084, column: 86)
!13666 = !DILocation(line: 3085, column: 13, scope: !13665)
!13667 = !DILocation(line: 3085, column: 17, scope: !13665)
!13668 = !DILocation(line: 3085, column: 25, scope: !13665)
!13669 = !DILocation(line: 3086, column: 9, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13665, file: !3, line: 3086, column: 9)
!13671 = !DILocation(line: 3086, column: 9, scope: !13665)
!13672 = !DILocation(line: 3087, column: 10, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13674, file: !3, line: 3087, column: 10)
!13674 = distinct !DILexicalBlock(scope: !13670, file: !3, line: 3086, column: 44)
!13675 = !DILocation(line: 3087, column: 15, scope: !13673)
!13676 = !DILocation(line: 3087, column: 12, scope: !13673)
!13677 = !DILocation(line: 3087, column: 10, scope: !13674)
!13678 = !DILocation(line: 3088, column: 14, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 3087, column: 22)
!13680 = !DILocation(line: 3088, column: 12, scope: !13679)
!13681 = !DILocation(line: 3089, column: 7, scope: !13679)
!13682 = !DILocation(line: 3091, column: 5, scope: !13674)
!13683 = !DILocation(line: 3092, column: 4, scope: !13665)
!13684 = !DILocation(line: 3084, column: 67, scope: !13659)
!13685 = !DILocation(line: 3084, column: 75, scope: !13659)
!13686 = !DILocation(line: 3084, column: 65, scope: !13659)
!13687 = !DILocation(line: 3084, column: 82, scope: !13659)
!13688 = !DILocation(line: 3084, column: 4, scope: !13659)
!13689 = distinct !{!13689, !13663, !13690}
!13690 = !DILocation(line: 3092, column: 4, scope: !13653)
!13691 = !DILocation(line: 3093, column: 4, scope: !13580)
!13692 = !DILocation(line: 3093, column: 14, scope: !13580)
!13693 = !DILocation(line: 3094, column: 3, scope: !13580)
!13694 = !DILocation(line: 3099, column: 10, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13471, file: !3, line: 3099, column: 3)
!13696 = !DILocation(line: 3099, column: 8, scope: !13695)
!13697 = !DILocation(line: 3099, column: 15, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13695, file: !3, line: 3099, column: 3)
!13699 = !DILocation(line: 3099, column: 19, scope: !13698)
!13700 = !DILocation(line: 3099, column: 17, scope: !13698)
!13701 = !DILocation(line: 3099, column: 3, scope: !13695)
!13702 = !DILocation(line: 3100, column: 4, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13698, file: !3, line: 3099, column: 30)
!13704 = !DILocation(line: 3101, column: 4, scope: !13703)
!13705 = !DILocation(line: 3102, column: 3, scope: !13703)
!13706 = !DILocation(line: 3099, column: 26, scope: !13698)
!13707 = !DILocation(line: 3099, column: 3, scope: !13698)
!13708 = distinct !{!13708, !13701, !13709}
!13709 = !DILocation(line: 3102, column: 3, scope: !13695)
!13710 = !DILocation(line: 3103, column: 3, scope: !13471)
!13711 = !DILocation(line: 3103, column: 13, scope: !13471)
!13712 = !DILocation(line: 3104, column: 2, scope: !13471)
!13713 = !DILocation(line: 3107, column: 2, scope: !13414)
!13714 = !DILocation(line: 3109, column: 12, scope: !13414)
!13715 = !DILocation(line: 3109, column: 3, scope: !13414)
!13716 = !DILocation(line: 3109, column: 10, scope: !13414)
!13717 = !DILocation(line: 3110, column: 1, scope: !13414)
!13718 = distinct !DISubprogram(name: "bm_edge_test_fill_grid_cb", scope: !3, file: !3, line: 2976, type: !13719, scopeLine: 2977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{!2530, !1418, !1343}
!13721 = !DILocalVariable(name: "e", arg: 1, scope: !13718, file: !3, line: 2976, type: !1418)
!13722 = !DILocation(line: 2976, column: 47, scope: !13718)
!13723 = !DILocalVariable(name: "UNUSED_bm_v", arg: 2, scope: !13718, file: !3, line: 2976, type: !1343)
!13724 = !DILocation(line: 2976, column: 56, scope: !13718)
!13725 = !DILocation(line: 2978, column: 9, scope: !13718)
!13726 = !DILocation(line: 2978, column: 2, scope: !13718)
!13727 = distinct !DISubprogram(name: "edbm_fill_grid_vert_tag_angle", scope: !3, file: !3, line: 2981, type: !13728, scopeLine: 2982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!13728 = !DISubroutineType(types: !13729)
!13729 = !{!1344, !1354}
!13730 = !DILocalVariable(name: "v", arg: 1, scope: !13727, file: !3, line: 2981, type: !1354)
!13731 = !DILocation(line: 2981, column: 52, scope: !13727)
!13732 = !DILocalVariable(name: "iter", scope: !13727, file: !3, line: 2983, type: !4456)
!13733 = !DILocation(line: 2983, column: 9, scope: !13727)
!13734 = !DILocalVariable(name: "e_iter", scope: !13727, file: !3, line: 2984, type: !1418)
!13735 = !DILocation(line: 2984, column: 10, scope: !13727)
!13736 = !DILocalVariable(name: "v_pair", scope: !13727, file: !3, line: 2985, type: !13737)
!13737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1354, size: 128, elements: !1965)
!13738 = !DILocation(line: 2985, column: 10, scope: !13727)
!13739 = !DILocalVariable(name: "i", scope: !13727, file: !3, line: 2986, type: !135)
!13740 = !DILocation(line: 2986, column: 6, scope: !13727)
!13741 = !DILocation(line: 2987, column: 2, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13727, file: !3, line: 2987, column: 2)
!13743 = !DILocation(line: 2987, column: 2, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13742, file: !3, line: 2987, column: 2)
!13745 = !DILocation(line: 2988, column: 7, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13747, file: !3, line: 2988, column: 7)
!13747 = distinct !DILexicalBlock(scope: !13744, file: !3, line: 2987, column: 52)
!13748 = !DILocation(line: 2988, column: 7, scope: !13747)
!13749 = !DILocation(line: 2989, column: 37, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13746, file: !3, line: 2988, column: 47)
!13751 = !DILocation(line: 2989, column: 45, scope: !13750)
!13752 = !DILocation(line: 2989, column: 18, scope: !13750)
!13753 = !DILocation(line: 2989, column: 12, scope: !13750)
!13754 = !DILocation(line: 2989, column: 4, scope: !13750)
!13755 = !DILocation(line: 2989, column: 16, scope: !13750)
!13756 = !DILocation(line: 2990, column: 3, scope: !13750)
!13757 = !DILocation(line: 2991, column: 2, scope: !13747)
!13758 = distinct !{!13758, !13741, !13759}
!13759 = !DILocation(line: 2991, column: 2, scope: !13742)
!13760 = !DILocation(line: 2994, column: 42, scope: !13727)
!13761 = !DILocation(line: 2994, column: 53, scope: !13727)
!13762 = !DILocation(line: 2994, column: 57, scope: !13727)
!13763 = !DILocation(line: 2994, column: 60, scope: !13727)
!13764 = !DILocation(line: 2994, column: 64, scope: !13727)
!13765 = !DILocation(line: 2994, column: 75, scope: !13727)
!13766 = !DILocation(line: 2994, column: 29, scope: !13727)
!13767 = !DILocation(line: 2994, column: 27, scope: !13727)
!13768 = !DILocation(line: 2994, column: 9, scope: !13727)
!13769 = !DILocation(line: 2994, column: 2, scope: !13727)
!13770 = distinct !DISubprogram(name: "sort_bmelem_flag", scope: !3, file: !3, line: 3885, type: !13771, scopeLine: 3889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!13771 = !DISubroutineType(types: !13772)
!13772 = !{null, !5145, !4127, !6762, !9706, !4052, !4052, !4052, !4052, !13773}
!13773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!13774 = !DILocalVariable(name: "scene", arg: 1, scope: !13770, file: !3, line: 3885, type: !5145)
!13775 = !DILocation(line: 3885, column: 37, scope: !13770)
!13776 = !DILocalVariable(name: "ob", arg: 2, scope: !13770, file: !3, line: 3885, type: !4127)
!13777 = !DILocation(line: 3885, column: 52, scope: !13770)
!13778 = !DILocalVariable(name: "v3d", arg: 3, scope: !13770, file: !3, line: 3886, type: !6762)
!13779 = !DILocation(line: 3886, column: 38, scope: !13770)
!13780 = !DILocalVariable(name: "rv3d", arg: 4, scope: !13770, file: !3, line: 3886, type: !9706)
!13781 = !DILocation(line: 3886, column: 57, scope: !13770)
!13782 = !DILocalVariable(name: "types", arg: 5, scope: !13770, file: !3, line: 3887, type: !4052)
!13783 = !DILocation(line: 3887, column: 40, scope: !13770)
!13784 = !DILocalVariable(name: "flag", arg: 6, scope: !13770, file: !3, line: 3887, type: !4052)
!13785 = !DILocation(line: 3887, column: 57, scope: !13770)
!13786 = !DILocalVariable(name: "action", arg: 7, scope: !13770, file: !3, line: 3887, type: !4052)
!13787 = !DILocation(line: 3887, column: 73, scope: !13770)
!13788 = !DILocalVariable(name: "reverse", arg: 8, scope: !13770, file: !3, line: 3888, type: !4052)
!13789 = !DILocation(line: 3888, column: 40, scope: !13770)
!13790 = !DILocalVariable(name: "seed", arg: 9, scope: !13770, file: !3, line: 3888, type: !13773)
!13791 = !DILocation(line: 3888, column: 68, scope: !13770)
!13792 = !DILocalVariable(name: "em", scope: !13770, file: !3, line: 3890, type: !4133)
!13793 = !DILocation(line: 3890, column: 14, scope: !13770)
!13794 = !DILocation(line: 3890, column: 44, scope: !13770)
!13795 = !DILocation(line: 3890, column: 19, scope: !13770)
!13796 = !DILocalVariable(name: "ve", scope: !13770, file: !3, line: 3892, type: !1354)
!13797 = !DILocation(line: 3892, column: 10, scope: !13770)
!13798 = !DILocalVariable(name: "ed", scope: !13770, file: !3, line: 3893, type: !1418)
!13799 = !DILocation(line: 3893, column: 10, scope: !13770)
!13800 = !DILocalVariable(name: "fa", scope: !13770, file: !3, line: 3894, type: !1420)
!13801 = !DILocation(line: 3894, column: 10, scope: !13770)
!13802 = !DILocalVariable(name: "iter", scope: !13770, file: !3, line: 3895, type: !4456)
!13803 = !DILocation(line: 3895, column: 9, scope: !13770)
!13804 = !DILocalVariable(name: "pblock", scope: !13770, file: !3, line: 3899, type: !13805)
!13805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1836, size: 192, elements: !1376)
!13806 = !DILocation(line: 3899, column: 8, scope: !13770)
!13807 = !DILocalVariable(name: "pb", scope: !13770, file: !3, line: 3899, type: !1836)
!13808 = !DILocation(line: 3899, column: 41, scope: !13770)
!13809 = !DILocalVariable(name: "sblock", scope: !13770, file: !3, line: 3900, type: !13810)
!13810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13811, size: 192, elements: !1376)
!13811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13812, size: 64)
!13812 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMElemSort", file: !3, line: 3875, baseType: !13813)
!13813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMElemSort", file: !3, line: 3872, size: 64, elements: !13814)
!13814 = !{!13815, !13816}
!13815 = !DIDerivedType(tag: DW_TAG_member, name: "srt", scope: !13813, file: !3, line: 3873, baseType: !1344, size: 32)
!13816 = !DIDerivedType(tag: DW_TAG_member, name: "org_idx", scope: !13813, file: !3, line: 3874, baseType: !135, size: 32, offset: 32)
!13817 = !DILocation(line: 3900, column: 14, scope: !13770)
!13818 = !DILocalVariable(name: "sb", scope: !13770, file: !3, line: 3900, type: !13811)
!13819 = !DILocation(line: 3900, column: 47, scope: !13770)
!13820 = !DILocalVariable(name: "map", scope: !13770, file: !3, line: 3901, type: !13821)
!13821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2396, size: 192, elements: !1376)
!13822 = !DILocation(line: 3901, column: 16, scope: !13770)
!13823 = !DILocalVariable(name: "mp", scope: !13770, file: !3, line: 3901, type: !2396)
!13824 = !DILocation(line: 3901, column: 46, scope: !13770)
!13825 = !DILocalVariable(name: "totelem", scope: !13770, file: !3, line: 3902, type: !2561)
!13826 = !DILocation(line: 3902, column: 6, scope: !13770)
!13827 = !DILocalVariable(name: "affected", scope: !13770, file: !3, line: 3903, type: !2561)
!13828 = !DILocation(line: 3903, column: 6, scope: !13770)
!13829 = !DILocalVariable(name: "i", scope: !13770, file: !3, line: 3904, type: !135)
!13830 = !DILocation(line: 3904, column: 6, scope: !13770)
!13831 = !DILocalVariable(name: "j", scope: !13770, file: !3, line: 3904, type: !135)
!13832 = !DILocation(line: 3904, column: 9, scope: !13770)
!13833 = !DILocation(line: 3906, column: 8, scope: !13834)
!13834 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 3906, column: 6)
!13835 = !DILocation(line: 3906, column: 14, scope: !13834)
!13836 = !DILocation(line: 3906, column: 17, scope: !13834)
!13837 = !DILocation(line: 3906, column: 22, scope: !13834)
!13838 = !DILocation(line: 3906, column: 25, scope: !13834)
!13839 = !DILocation(line: 3906, column: 6, scope: !13770)
!13840 = !DILocation(line: 3907, column: 3, scope: !13834)
!13841 = !DILocation(line: 3909, column: 6, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 3909, column: 6)
!13843 = !DILocation(line: 3909, column: 12, scope: !13842)
!13844 = !DILocation(line: 3909, column: 6, scope: !13770)
!13845 = !DILocation(line: 3910, column: 16, scope: !13842)
!13846 = !DILocation(line: 3910, column: 20, scope: !13842)
!13847 = !DILocation(line: 3910, column: 24, scope: !13842)
!13848 = !DILocation(line: 3910, column: 3, scope: !13842)
!13849 = !DILocation(line: 3910, column: 14, scope: !13842)
!13850 = !DILocation(line: 3911, column: 6, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 3911, column: 6)
!13852 = !DILocation(line: 3911, column: 12, scope: !13851)
!13853 = !DILocation(line: 3911, column: 6, scope: !13770)
!13854 = !DILocation(line: 3912, column: 16, scope: !13851)
!13855 = !DILocation(line: 3912, column: 20, scope: !13851)
!13856 = !DILocation(line: 3912, column: 24, scope: !13851)
!13857 = !DILocation(line: 3912, column: 3, scope: !13851)
!13858 = !DILocation(line: 3912, column: 14, scope: !13851)
!13859 = !DILocation(line: 3913, column: 6, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 3913, column: 6)
!13861 = !DILocation(line: 3913, column: 12, scope: !13860)
!13862 = !DILocation(line: 3913, column: 6, scope: !13770)
!13863 = !DILocation(line: 3914, column: 16, scope: !13860)
!13864 = !DILocation(line: 3914, column: 20, scope: !13860)
!13865 = !DILocation(line: 3914, column: 24, scope: !13860)
!13866 = !DILocation(line: 3914, column: 3, scope: !13860)
!13867 = !DILocation(line: 3914, column: 14, scope: !13860)
!13868 = !DILocation(line: 3916, column: 6, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 3916, column: 6)
!13870 = !DILocation(line: 3916, column: 6, scope: !13770)
!13871 = !DILocalVariable(name: "mat", scope: !13872, file: !3, line: 3917, type: !1854)
!13872 = distinct !DILexicalBlock(scope: !13869, file: !3, line: 3916, column: 52)
!13873 = !DILocation(line: 3917, column: 9, scope: !13872)
!13874 = !DILocalVariable(name: "fact", scope: !13872, file: !3, line: 3918, type: !1344)
!13875 = !DILocation(line: 3918, column: 9, scope: !13872)
!13876 = !DILocation(line: 3918, column: 16, scope: !13872)
!13877 = !DILocalVariable(name: "coidx", scope: !13872, file: !3, line: 3919, type: !135)
!13878 = !DILocation(line: 3919, column: 7, scope: !13872)
!13879 = !DILocation(line: 3919, column: 16, scope: !13872)
!13880 = !DILocation(line: 3919, column: 23, scope: !13872)
!13881 = !DILocation(line: 3919, column: 15, scope: !13872)
!13882 = !DILocation(line: 3921, column: 15, scope: !13872)
!13883 = !DILocation(line: 3921, column: 20, scope: !13872)
!13884 = !DILocation(line: 3921, column: 26, scope: !13872)
!13885 = !DILocation(line: 3921, column: 35, scope: !13872)
!13886 = !DILocation(line: 3921, column: 39, scope: !13872)
!13887 = !DILocation(line: 3921, column: 3, scope: !13872)
!13888 = !DILocation(line: 3923, column: 7, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13872, file: !3, line: 3923, column: 7)
!13890 = !DILocation(line: 3923, column: 7, scope: !13872)
!13891 = !DILocation(line: 3924, column: 21, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13889, file: !3, line: 3923, column: 19)
!13893 = !DILocation(line: 3924, column: 48, scope: !13892)
!13894 = !DILocation(line: 3924, column: 46, scope: !13892)
!13895 = !DILocation(line: 3924, column: 9, scope: !13892)
!13896 = !DILocation(line: 3924, column: 19, scope: !13892)
!13897 = !DILocation(line: 3924, column: 7, scope: !13892)
!13898 = !DILocation(line: 3925, column: 21, scope: !13892)
!13899 = !DILocation(line: 3925, column: 54, scope: !13892)
!13900 = !DILocation(line: 3925, column: 52, scope: !13892)
!13901 = !DILocation(line: 3925, column: 9, scope: !13892)
!13902 = !DILocation(line: 3925, column: 19, scope: !13892)
!13903 = !DILocation(line: 3925, column: 7, scope: !13892)
!13904 = !DILocation(line: 3927, column: 4, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13892, file: !3, line: 3927, column: 4)
!13906 = !DILocation(line: 3927, column: 4, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13905, file: !3, line: 3927, column: 4)
!13908 = !DILocation(line: 3928, column: 9, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13910, file: !3, line: 3928, column: 9)
!13910 = distinct !DILexicalBlock(scope: !13907, file: !3, line: 3927, column: 64)
!13911 = !DILocation(line: 3928, column: 9, scope: !13910)
!13912 = !DILocalVariable(name: "co", scope: !13913, file: !3, line: 3929, type: !1375)
!13913 = distinct !DILexicalBlock(scope: !13909, file: !3, line: 3928, column: 38)
!13914 = !DILocation(line: 3929, column: 12, scope: !13913)
!13915 = !DILocation(line: 3930, column: 18, scope: !13913)
!13916 = !DILocation(line: 3930, column: 22, scope: !13913)
!13917 = !DILocation(line: 3930, column: 27, scope: !13913)
!13918 = !DILocation(line: 3930, column: 31, scope: !13913)
!13919 = !DILocation(line: 3930, column: 6, scope: !13913)
!13920 = !DILocation(line: 3932, column: 6, scope: !13913)
!13921 = !DILocation(line: 3932, column: 9, scope: !13913)
!13922 = !DILocation(line: 3932, column: 12, scope: !13913)
!13923 = !DILocation(line: 3933, column: 32, scope: !13913)
!13924 = !DILocation(line: 3933, column: 6, scope: !13913)
!13925 = !DILocation(line: 3933, column: 9, scope: !13913)
!13926 = !DILocation(line: 3933, column: 22, scope: !13913)
!13927 = !DILocation(line: 3933, column: 30, scope: !13913)
!13928 = !DILocation(line: 3934, column: 33, scope: !13913)
!13929 = !DILocation(line: 3934, column: 30, scope: !13913)
!13930 = !DILocation(line: 3934, column: 42, scope: !13913)
!13931 = !DILocation(line: 3934, column: 40, scope: !13913)
!13932 = !DILocation(line: 3934, column: 6, scope: !13913)
!13933 = !DILocation(line: 3934, column: 9, scope: !13913)
!13934 = !DILocation(line: 3934, column: 20, scope: !13913)
!13935 = !DILocation(line: 3934, column: 24, scope: !13913)
!13936 = !DILocation(line: 3934, column: 28, scope: !13913)
!13937 = !DILocation(line: 3935, column: 5, scope: !13913)
!13938 = !DILocation(line: 3937, column: 6, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13909, file: !3, line: 3936, column: 10)
!13940 = !DILocation(line: 3937, column: 9, scope: !13939)
!13941 = !DILocation(line: 3937, column: 12, scope: !13939)
!13942 = !DILocation(line: 3939, column: 4, scope: !13910)
!13943 = distinct !{!13943, !13904, !13944}
!13944 = !DILocation(line: 3939, column: 4, scope: !13905)
!13945 = !DILocation(line: 3940, column: 3, scope: !13892)
!13946 = !DILocation(line: 3942, column: 7, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13872, file: !3, line: 3942, column: 7)
!13948 = !DILocation(line: 3942, column: 7, scope: !13872)
!13949 = !DILocation(line: 3943, column: 21, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13947, file: !3, line: 3942, column: 19)
!13951 = !DILocation(line: 3943, column: 48, scope: !13950)
!13952 = !DILocation(line: 3943, column: 46, scope: !13950)
!13953 = !DILocation(line: 3943, column: 9, scope: !13950)
!13954 = !DILocation(line: 3943, column: 19, scope: !13950)
!13955 = !DILocation(line: 3943, column: 7, scope: !13950)
!13956 = !DILocation(line: 3944, column: 21, scope: !13950)
!13957 = !DILocation(line: 3944, column: 54, scope: !13950)
!13958 = !DILocation(line: 3944, column: 52, scope: !13950)
!13959 = !DILocation(line: 3944, column: 9, scope: !13950)
!13960 = !DILocation(line: 3944, column: 19, scope: !13950)
!13961 = !DILocation(line: 3944, column: 7, scope: !13950)
!13962 = !DILocation(line: 3946, column: 4, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13950, file: !3, line: 3946, column: 4)
!13964 = !DILocation(line: 3946, column: 4, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13963, file: !3, line: 3946, column: 4)
!13966 = !DILocation(line: 3947, column: 9, scope: !13967)
!13967 = distinct !DILexicalBlock(scope: !13968, file: !3, line: 3947, column: 9)
!13968 = distinct !DILexicalBlock(scope: !13965, file: !3, line: 3946, column: 64)
!13969 = !DILocation(line: 3947, column: 9, scope: !13968)
!13970 = !DILocalVariable(name: "co", scope: !13971, file: !3, line: 3948, type: !1375)
!13971 = distinct !DILexicalBlock(scope: !13967, file: !3, line: 3947, column: 38)
!13972 = !DILocation(line: 3948, column: 12, scope: !13971)
!13973 = !DILocation(line: 3949, column: 18, scope: !13971)
!13974 = !DILocation(line: 3949, column: 22, scope: !13971)
!13975 = !DILocation(line: 3949, column: 26, scope: !13971)
!13976 = !DILocation(line: 3949, column: 30, scope: !13971)
!13977 = !DILocation(line: 3949, column: 34, scope: !13971)
!13978 = !DILocation(line: 3949, column: 38, scope: !13971)
!13979 = !DILocation(line: 3949, column: 42, scope: !13971)
!13980 = !DILocation(line: 3949, column: 6, scope: !13971)
!13981 = !DILocation(line: 3950, column: 16, scope: !13971)
!13982 = !DILocation(line: 3950, column: 21, scope: !13971)
!13983 = !DILocation(line: 3950, column: 6, scope: !13971)
!13984 = !DILocation(line: 3952, column: 6, scope: !13971)
!13985 = !DILocation(line: 3952, column: 9, scope: !13971)
!13986 = !DILocation(line: 3952, column: 12, scope: !13971)
!13987 = !DILocation(line: 3953, column: 32, scope: !13971)
!13988 = !DILocation(line: 3953, column: 6, scope: !13971)
!13989 = !DILocation(line: 3953, column: 9, scope: !13971)
!13990 = !DILocation(line: 3953, column: 22, scope: !13971)
!13991 = !DILocation(line: 3953, column: 30, scope: !13971)
!13992 = !DILocation(line: 3954, column: 33, scope: !13971)
!13993 = !DILocation(line: 3954, column: 30, scope: !13971)
!13994 = !DILocation(line: 3954, column: 42, scope: !13971)
!13995 = !DILocation(line: 3954, column: 40, scope: !13971)
!13996 = !DILocation(line: 3954, column: 6, scope: !13971)
!13997 = !DILocation(line: 3954, column: 9, scope: !13971)
!13998 = !DILocation(line: 3954, column: 20, scope: !13971)
!13999 = !DILocation(line: 3954, column: 24, scope: !13971)
!14000 = !DILocation(line: 3954, column: 28, scope: !13971)
!14001 = !DILocation(line: 3955, column: 5, scope: !13971)
!14002 = !DILocation(line: 3957, column: 6, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !13967, file: !3, line: 3956, column: 10)
!14004 = !DILocation(line: 3957, column: 9, scope: !14003)
!14005 = !DILocation(line: 3957, column: 12, scope: !14003)
!14006 = !DILocation(line: 3959, column: 4, scope: !13968)
!14007 = distinct !{!14007, !13962, !14008}
!14008 = !DILocation(line: 3959, column: 4, scope: !13963)
!14009 = !DILocation(line: 3960, column: 3, scope: !13950)
!14010 = !DILocation(line: 3962, column: 7, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !13872, file: !3, line: 3962, column: 7)
!14012 = !DILocation(line: 3962, column: 7, scope: !13872)
!14013 = !DILocation(line: 3963, column: 21, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !14011, file: !3, line: 3962, column: 19)
!14015 = !DILocation(line: 3963, column: 48, scope: !14014)
!14016 = !DILocation(line: 3963, column: 46, scope: !14014)
!14017 = !DILocation(line: 3963, column: 9, scope: !14014)
!14018 = !DILocation(line: 3963, column: 19, scope: !14014)
!14019 = !DILocation(line: 3963, column: 7, scope: !14014)
!14020 = !DILocation(line: 3964, column: 21, scope: !14014)
!14021 = !DILocation(line: 3964, column: 54, scope: !14014)
!14022 = !DILocation(line: 3964, column: 52, scope: !14014)
!14023 = !DILocation(line: 3964, column: 9, scope: !14014)
!14024 = !DILocation(line: 3964, column: 19, scope: !14014)
!14025 = !DILocation(line: 3964, column: 7, scope: !14014)
!14026 = !DILocation(line: 3966, column: 4, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14014, file: !3, line: 3966, column: 4)
!14028 = !DILocation(line: 3966, column: 4, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14027, file: !3, line: 3966, column: 4)
!14030 = !DILocation(line: 3967, column: 9, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14032, file: !3, line: 3967, column: 9)
!14032 = distinct !DILexicalBlock(scope: !14029, file: !3, line: 3966, column: 64)
!14033 = !DILocation(line: 3967, column: 9, scope: !14032)
!14034 = !DILocalVariable(name: "co", scope: !14035, file: !3, line: 3968, type: !1375)
!14035 = distinct !DILexicalBlock(scope: !14031, file: !3, line: 3967, column: 38)
!14036 = !DILocation(line: 3968, column: 12, scope: !14035)
!14037 = !DILocation(line: 3969, column: 31, scope: !14035)
!14038 = !DILocation(line: 3969, column: 35, scope: !14035)
!14039 = !DILocation(line: 3969, column: 6, scope: !14035)
!14040 = !DILocation(line: 3970, column: 16, scope: !14035)
!14041 = !DILocation(line: 3970, column: 21, scope: !14035)
!14042 = !DILocation(line: 3970, column: 6, scope: !14035)
!14043 = !DILocation(line: 3972, column: 6, scope: !14035)
!14044 = !DILocation(line: 3972, column: 9, scope: !14035)
!14045 = !DILocation(line: 3972, column: 12, scope: !14035)
!14046 = !DILocation(line: 3973, column: 32, scope: !14035)
!14047 = !DILocation(line: 3973, column: 6, scope: !14035)
!14048 = !DILocation(line: 3973, column: 9, scope: !14035)
!14049 = !DILocation(line: 3973, column: 22, scope: !14035)
!14050 = !DILocation(line: 3973, column: 30, scope: !14035)
!14051 = !DILocation(line: 3974, column: 33, scope: !14035)
!14052 = !DILocation(line: 3974, column: 30, scope: !14035)
!14053 = !DILocation(line: 3974, column: 42, scope: !14035)
!14054 = !DILocation(line: 3974, column: 40, scope: !14035)
!14055 = !DILocation(line: 3974, column: 6, scope: !14035)
!14056 = !DILocation(line: 3974, column: 9, scope: !14035)
!14057 = !DILocation(line: 3974, column: 20, scope: !14035)
!14058 = !DILocation(line: 3974, column: 24, scope: !14035)
!14059 = !DILocation(line: 3974, column: 28, scope: !14035)
!14060 = !DILocation(line: 3975, column: 5, scope: !14035)
!14061 = !DILocation(line: 3977, column: 6, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14031, file: !3, line: 3976, column: 10)
!14063 = !DILocation(line: 3977, column: 9, scope: !14062)
!14064 = !DILocation(line: 3977, column: 12, scope: !14062)
!14065 = !DILocation(line: 3979, column: 4, scope: !14032)
!14066 = distinct !{!14066, !14026, !14067}
!14067 = !DILocation(line: 3979, column: 4, scope: !14027)
!14068 = !DILocation(line: 3980, column: 3, scope: !14014)
!14069 = !DILocation(line: 3981, column: 2, scope: !13872)
!14070 = !DILocation(line: 3983, column: 11, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !13869, file: !3, line: 3983, column: 11)
!14072 = !DILocation(line: 3983, column: 18, scope: !14071)
!14073 = !DILocation(line: 3983, column: 11, scope: !13869)
!14074 = !DILocalVariable(name: "cur", scope: !14075, file: !3, line: 3984, type: !1375)
!14075 = distinct !DILexicalBlock(scope: !14071, file: !3, line: 3983, column: 42)
!14076 = !DILocation(line: 3984, column: 9, scope: !14075)
!14077 = !DILocalVariable(name: "mat", scope: !14075, file: !3, line: 3985, type: !1854)
!14078 = !DILocation(line: 3985, column: 9, scope: !14075)
!14079 = !DILocalVariable(name: "fact", scope: !14075, file: !3, line: 3986, type: !1344)
!14080 = !DILocation(line: 3986, column: 9, scope: !14075)
!14081 = !DILocation(line: 3986, column: 16, scope: !14075)
!14082 = !DILocation(line: 3988, column: 7, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !14075, file: !3, line: 3988, column: 7)
!14084 = !DILocation(line: 3988, column: 11, scope: !14083)
!14085 = !DILocation(line: 3988, column: 14, scope: !14083)
!14086 = !DILocation(line: 3988, column: 19, scope: !14083)
!14087 = !DILocation(line: 3988, column: 7, scope: !14075)
!14088 = !DILocation(line: 3989, column: 15, scope: !14083)
!14089 = !DILocation(line: 3989, column: 20, scope: !14083)
!14090 = !DILocation(line: 3989, column: 25, scope: !14083)
!14091 = !DILocation(line: 3989, column: 4, scope: !14083)
!14092 = !DILocation(line: 3991, column: 15, scope: !14083)
!14093 = !DILocation(line: 3991, column: 20, scope: !14083)
!14094 = !DILocation(line: 3991, column: 27, scope: !14083)
!14095 = !DILocation(line: 3991, column: 4, scope: !14083)
!14096 = !DILocation(line: 3992, column: 16, scope: !14075)
!14097 = !DILocation(line: 3992, column: 21, scope: !14075)
!14098 = !DILocation(line: 3992, column: 25, scope: !14075)
!14099 = !DILocation(line: 3992, column: 3, scope: !14075)
!14100 = !DILocation(line: 3993, column: 13, scope: !14075)
!14101 = !DILocation(line: 3993, column: 18, scope: !14075)
!14102 = !DILocation(line: 3993, column: 3, scope: !14075)
!14103 = !DILocation(line: 3995, column: 7, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !14075, file: !3, line: 3995, column: 7)
!14105 = !DILocation(line: 3995, column: 7, scope: !14075)
!14106 = !DILocation(line: 3996, column: 21, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14104, file: !3, line: 3995, column: 19)
!14108 = !DILocation(line: 3996, column: 48, scope: !14107)
!14109 = !DILocation(line: 3996, column: 46, scope: !14107)
!14110 = !DILocation(line: 3996, column: 9, scope: !14107)
!14111 = !DILocation(line: 3996, column: 19, scope: !14107)
!14112 = !DILocation(line: 3996, column: 7, scope: !14107)
!14113 = !DILocation(line: 3997, column: 21, scope: !14107)
!14114 = !DILocation(line: 3997, column: 54, scope: !14107)
!14115 = !DILocation(line: 3997, column: 52, scope: !14107)
!14116 = !DILocation(line: 3997, column: 9, scope: !14107)
!14117 = !DILocation(line: 3997, column: 19, scope: !14107)
!14118 = !DILocation(line: 3997, column: 7, scope: !14107)
!14119 = !DILocation(line: 3999, column: 4, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14107, file: !3, line: 3999, column: 4)
!14121 = !DILocation(line: 3999, column: 4, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14120, file: !3, line: 3999, column: 4)
!14123 = !DILocation(line: 4000, column: 9, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14125, file: !3, line: 4000, column: 9)
!14125 = distinct !DILexicalBlock(scope: !14122, file: !3, line: 3999, column: 64)
!14126 = !DILocation(line: 4000, column: 9, scope: !14125)
!14127 = !DILocation(line: 4001, column: 6, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14124, file: !3, line: 4000, column: 38)
!14129 = !DILocation(line: 4001, column: 9, scope: !14128)
!14130 = !DILocation(line: 4001, column: 12, scope: !14128)
!14131 = !DILocation(line: 4002, column: 32, scope: !14128)
!14132 = !DILocation(line: 4002, column: 6, scope: !14128)
!14133 = !DILocation(line: 4002, column: 9, scope: !14128)
!14134 = !DILocation(line: 4002, column: 22, scope: !14128)
!14135 = !DILocation(line: 4002, column: 30, scope: !14128)
!14136 = !DILocation(line: 4003, column: 47, scope: !14128)
!14137 = !DILocation(line: 4003, column: 52, scope: !14128)
!14138 = !DILocation(line: 4003, column: 56, scope: !14128)
!14139 = !DILocation(line: 4003, column: 30, scope: !14128)
!14140 = !DILocation(line: 4003, column: 62, scope: !14128)
!14141 = !DILocation(line: 4003, column: 60, scope: !14128)
!14142 = !DILocation(line: 4003, column: 6, scope: !14128)
!14143 = !DILocation(line: 4003, column: 9, scope: !14128)
!14144 = !DILocation(line: 4003, column: 20, scope: !14128)
!14145 = !DILocation(line: 4003, column: 24, scope: !14128)
!14146 = !DILocation(line: 4003, column: 28, scope: !14128)
!14147 = !DILocation(line: 4004, column: 5, scope: !14128)
!14148 = !DILocation(line: 4006, column: 6, scope: !14149)
!14149 = distinct !DILexicalBlock(scope: !14124, file: !3, line: 4005, column: 10)
!14150 = !DILocation(line: 4006, column: 9, scope: !14149)
!14151 = !DILocation(line: 4006, column: 12, scope: !14149)
!14152 = !DILocation(line: 4008, column: 4, scope: !14125)
!14153 = distinct !{!14153, !14119, !14154}
!14154 = !DILocation(line: 4008, column: 4, scope: !14120)
!14155 = !DILocation(line: 4009, column: 3, scope: !14107)
!14156 = !DILocation(line: 4011, column: 7, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14075, file: !3, line: 4011, column: 7)
!14158 = !DILocation(line: 4011, column: 7, scope: !14075)
!14159 = !DILocation(line: 4012, column: 21, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14157, file: !3, line: 4011, column: 19)
!14161 = !DILocation(line: 4012, column: 48, scope: !14160)
!14162 = !DILocation(line: 4012, column: 46, scope: !14160)
!14163 = !DILocation(line: 4012, column: 9, scope: !14160)
!14164 = !DILocation(line: 4012, column: 19, scope: !14160)
!14165 = !DILocation(line: 4012, column: 7, scope: !14160)
!14166 = !DILocation(line: 4013, column: 21, scope: !14160)
!14167 = !DILocation(line: 4013, column: 54, scope: !14160)
!14168 = !DILocation(line: 4013, column: 52, scope: !14160)
!14169 = !DILocation(line: 4013, column: 9, scope: !14160)
!14170 = !DILocation(line: 4013, column: 19, scope: !14160)
!14171 = !DILocation(line: 4013, column: 7, scope: !14160)
!14172 = !DILocation(line: 4015, column: 4, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !14160, file: !3, line: 4015, column: 4)
!14174 = !DILocation(line: 4015, column: 4, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 4015, column: 4)
!14176 = !DILocation(line: 4016, column: 9, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14178, file: !3, line: 4016, column: 9)
!14178 = distinct !DILexicalBlock(scope: !14175, file: !3, line: 4015, column: 64)
!14179 = !DILocation(line: 4016, column: 9, scope: !14178)
!14180 = !DILocalVariable(name: "co", scope: !14181, file: !3, line: 4017, type: !1375)
!14181 = distinct !DILexicalBlock(scope: !14177, file: !3, line: 4016, column: 38)
!14182 = !DILocation(line: 4017, column: 12, scope: !14181)
!14183 = !DILocation(line: 4018, column: 18, scope: !14181)
!14184 = !DILocation(line: 4018, column: 22, scope: !14181)
!14185 = !DILocation(line: 4018, column: 26, scope: !14181)
!14186 = !DILocation(line: 4018, column: 30, scope: !14181)
!14187 = !DILocation(line: 4018, column: 34, scope: !14181)
!14188 = !DILocation(line: 4018, column: 38, scope: !14181)
!14189 = !DILocation(line: 4018, column: 42, scope: !14181)
!14190 = !DILocation(line: 4018, column: 6, scope: !14181)
!14191 = !DILocation(line: 4020, column: 6, scope: !14181)
!14192 = !DILocation(line: 4020, column: 9, scope: !14181)
!14193 = !DILocation(line: 4020, column: 12, scope: !14181)
!14194 = !DILocation(line: 4021, column: 32, scope: !14181)
!14195 = !DILocation(line: 4021, column: 6, scope: !14181)
!14196 = !DILocation(line: 4021, column: 9, scope: !14181)
!14197 = !DILocation(line: 4021, column: 22, scope: !14181)
!14198 = !DILocation(line: 4021, column: 30, scope: !14181)
!14199 = !DILocation(line: 4022, column: 47, scope: !14181)
!14200 = !DILocation(line: 4022, column: 52, scope: !14181)
!14201 = !DILocation(line: 4022, column: 30, scope: !14181)
!14202 = !DILocation(line: 4022, column: 58, scope: !14181)
!14203 = !DILocation(line: 4022, column: 56, scope: !14181)
!14204 = !DILocation(line: 4022, column: 6, scope: !14181)
!14205 = !DILocation(line: 4022, column: 9, scope: !14181)
!14206 = !DILocation(line: 4022, column: 20, scope: !14181)
!14207 = !DILocation(line: 4022, column: 24, scope: !14181)
!14208 = !DILocation(line: 4022, column: 28, scope: !14181)
!14209 = !DILocation(line: 4023, column: 5, scope: !14181)
!14210 = !DILocation(line: 4025, column: 6, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14177, file: !3, line: 4024, column: 10)
!14212 = !DILocation(line: 4025, column: 9, scope: !14211)
!14213 = !DILocation(line: 4025, column: 12, scope: !14211)
!14214 = !DILocation(line: 4027, column: 4, scope: !14178)
!14215 = distinct !{!14215, !14172, !14216}
!14216 = !DILocation(line: 4027, column: 4, scope: !14173)
!14217 = !DILocation(line: 4028, column: 3, scope: !14160)
!14218 = !DILocation(line: 4030, column: 7, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14075, file: !3, line: 4030, column: 7)
!14220 = !DILocation(line: 4030, column: 7, scope: !14075)
!14221 = !DILocation(line: 4031, column: 21, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14219, file: !3, line: 4030, column: 19)
!14223 = !DILocation(line: 4031, column: 48, scope: !14222)
!14224 = !DILocation(line: 4031, column: 46, scope: !14222)
!14225 = !DILocation(line: 4031, column: 9, scope: !14222)
!14226 = !DILocation(line: 4031, column: 19, scope: !14222)
!14227 = !DILocation(line: 4031, column: 7, scope: !14222)
!14228 = !DILocation(line: 4032, column: 21, scope: !14222)
!14229 = !DILocation(line: 4032, column: 54, scope: !14222)
!14230 = !DILocation(line: 4032, column: 52, scope: !14222)
!14231 = !DILocation(line: 4032, column: 9, scope: !14222)
!14232 = !DILocation(line: 4032, column: 19, scope: !14222)
!14233 = !DILocation(line: 4032, column: 7, scope: !14222)
!14234 = !DILocation(line: 4034, column: 4, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14222, file: !3, line: 4034, column: 4)
!14236 = !DILocation(line: 4034, column: 4, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14235, file: !3, line: 4034, column: 4)
!14238 = !DILocation(line: 4035, column: 9, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14240, file: !3, line: 4035, column: 9)
!14240 = distinct !DILexicalBlock(scope: !14237, file: !3, line: 4034, column: 64)
!14241 = !DILocation(line: 4035, column: 9, scope: !14240)
!14242 = !DILocalVariable(name: "co", scope: !14243, file: !3, line: 4036, type: !1375)
!14243 = distinct !DILexicalBlock(scope: !14239, file: !3, line: 4035, column: 38)
!14244 = !DILocation(line: 4036, column: 12, scope: !14243)
!14245 = !DILocation(line: 4037, column: 31, scope: !14243)
!14246 = !DILocation(line: 4037, column: 35, scope: !14243)
!14247 = !DILocation(line: 4037, column: 6, scope: !14243)
!14248 = !DILocation(line: 4039, column: 6, scope: !14243)
!14249 = !DILocation(line: 4039, column: 9, scope: !14243)
!14250 = !DILocation(line: 4039, column: 12, scope: !14243)
!14251 = !DILocation(line: 4040, column: 32, scope: !14243)
!14252 = !DILocation(line: 4040, column: 6, scope: !14243)
!14253 = !DILocation(line: 4040, column: 9, scope: !14243)
!14254 = !DILocation(line: 4040, column: 22, scope: !14243)
!14255 = !DILocation(line: 4040, column: 30, scope: !14243)
!14256 = !DILocation(line: 4041, column: 47, scope: !14243)
!14257 = !DILocation(line: 4041, column: 52, scope: !14243)
!14258 = !DILocation(line: 4041, column: 30, scope: !14243)
!14259 = !DILocation(line: 4041, column: 58, scope: !14243)
!14260 = !DILocation(line: 4041, column: 56, scope: !14243)
!14261 = !DILocation(line: 4041, column: 6, scope: !14243)
!14262 = !DILocation(line: 4041, column: 9, scope: !14243)
!14263 = !DILocation(line: 4041, column: 20, scope: !14243)
!14264 = !DILocation(line: 4041, column: 24, scope: !14243)
!14265 = !DILocation(line: 4041, column: 28, scope: !14243)
!14266 = !DILocation(line: 4042, column: 5, scope: !14243)
!14267 = !DILocation(line: 4044, column: 6, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14239, file: !3, line: 4043, column: 10)
!14269 = !DILocation(line: 4044, column: 9, scope: !14268)
!14270 = !DILocation(line: 4044, column: 12, scope: !14268)
!14271 = !DILocation(line: 4046, column: 4, scope: !14240)
!14272 = distinct !{!14272, !14234, !14273}
!14273 = !DILocation(line: 4046, column: 4, scope: !14235)
!14274 = !DILocation(line: 4047, column: 3, scope: !14222)
!14275 = !DILocation(line: 4048, column: 2, scope: !14075)
!14276 = !DILocation(line: 4051, column: 11, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14071, file: !3, line: 4051, column: 11)
!14278 = !DILocation(line: 4051, column: 18, scope: !14277)
!14279 = !DILocation(line: 4051, column: 34, scope: !14277)
!14280 = !DILocation(line: 4051, column: 37, scope: !14277)
!14281 = !DILocation(line: 4051, column: 11, scope: !14071)
!14282 = !DILocation(line: 4052, column: 20, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14277, file: !3, line: 4051, column: 49)
!14284 = !DILocation(line: 4052, column: 47, scope: !14283)
!14285 = !DILocation(line: 4052, column: 45, scope: !14283)
!14286 = !DILocation(line: 4052, column: 8, scope: !14283)
!14287 = !DILocation(line: 4052, column: 18, scope: !14283)
!14288 = !DILocation(line: 4052, column: 6, scope: !14283)
!14289 = !DILocation(line: 4053, column: 20, scope: !14283)
!14290 = !DILocation(line: 4053, column: 53, scope: !14283)
!14291 = !DILocation(line: 4053, column: 51, scope: !14283)
!14292 = !DILocation(line: 4053, column: 8, scope: !14283)
!14293 = !DILocation(line: 4053, column: 18, scope: !14283)
!14294 = !DILocation(line: 4053, column: 6, scope: !14283)
!14295 = !DILocation(line: 4055, column: 3, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14283, file: !3, line: 4055, column: 3)
!14297 = !DILocation(line: 4055, column: 3, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14296, file: !3, line: 4055, column: 3)
!14299 = !DILocation(line: 4056, column: 8, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14301, file: !3, line: 4056, column: 8)
!14301 = distinct !DILexicalBlock(scope: !14298, file: !3, line: 4055, column: 63)
!14302 = !DILocation(line: 4056, column: 8, scope: !14301)
!14303 = !DILocalVariable(name: "srt", scope: !14304, file: !3, line: 4059, type: !1344)
!14304 = distinct !DILexicalBlock(scope: !14300, file: !3, line: 4056, column: 37)
!14305 = !DILocation(line: 4059, column: 11, scope: !14304)
!14306 = !DILocation(line: 4059, column: 17, scope: !14304)
!14307 = !DILocation(line: 4059, column: 44, scope: !14304)
!14308 = !DILocation(line: 4059, column: 48, scope: !14304)
!14309 = !DILocation(line: 4059, column: 42, scope: !14304)
!14310 = !DILocation(line: 4059, column: 27, scope: !14304)
!14311 = !DILocation(line: 4059, column: 65, scope: !14304)
!14312 = !DILocation(line: 4059, column: 69, scope: !14304)
!14313 = !DILocation(line: 4059, column: 58, scope: !14304)
!14314 = !DILocation(line: 4060, column: 5, scope: !14304)
!14315 = !DILocation(line: 4060, column: 8, scope: !14304)
!14316 = !DILocation(line: 4060, column: 11, scope: !14304)
!14317 = !DILocation(line: 4061, column: 31, scope: !14304)
!14318 = !DILocation(line: 4061, column: 5, scope: !14304)
!14319 = !DILocation(line: 4061, column: 8, scope: !14304)
!14320 = !DILocation(line: 4061, column: 21, scope: !14304)
!14321 = !DILocation(line: 4061, column: 29, scope: !14304)
!14322 = !DILocation(line: 4063, column: 29, scope: !14304)
!14323 = !DILocation(line: 4063, column: 43, scope: !14304)
!14324 = !DILocation(line: 4063, column: 36, scope: !14304)
!14325 = !DILocation(line: 4063, column: 33, scope: !14304)
!14326 = !DILocation(line: 4063, column: 65, scope: !14304)
!14327 = !DILocation(line: 4063, column: 58, scope: !14304)
!14328 = !DILocation(line: 4063, column: 55, scope: !14304)
!14329 = !DILocation(line: 4063, column: 5, scope: !14304)
!14330 = !DILocation(line: 4063, column: 8, scope: !14304)
!14331 = !DILocation(line: 4063, column: 19, scope: !14304)
!14332 = !DILocation(line: 4063, column: 23, scope: !14304)
!14333 = !DILocation(line: 4063, column: 27, scope: !14304)
!14334 = !DILocation(line: 4065, column: 4, scope: !14304)
!14335 = !DILocation(line: 4067, column: 5, scope: !14336)
!14336 = distinct !DILexicalBlock(scope: !14300, file: !3, line: 4066, column: 9)
!14337 = !DILocation(line: 4067, column: 8, scope: !14336)
!14338 = !DILocation(line: 4067, column: 11, scope: !14336)
!14339 = !DILocation(line: 4069, column: 3, scope: !14301)
!14340 = distinct !{!14340, !14295, !14341}
!14341 = !DILocation(line: 4069, column: 3, scope: !14296)
!14342 = !DILocation(line: 4070, column: 2, scope: !14283)
!14343 = !DILocation(line: 4072, column: 11, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14277, file: !3, line: 4072, column: 11)
!14345 = !DILocation(line: 4072, column: 18, scope: !14344)
!14346 = !DILocation(line: 4072, column: 11, scope: !14277)
!14347 = !DILocalVariable(name: "tbuf", scope: !14348, file: !3, line: 4073, type: !13821)
!14348 = distinct !DILexicalBlock(scope: !14344, file: !3, line: 4072, column: 35)
!14349 = !DILocation(line: 4073, column: 17, scope: !14348)
!14350 = !DILocalVariable(name: "tb", scope: !14348, file: !3, line: 4073, type: !2396)
!14351 = !DILocation(line: 4073, column: 48, scope: !14348)
!14352 = !DILocation(line: 4075, column: 7, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14348, file: !3, line: 4075, column: 7)
!14354 = !DILocation(line: 4075, column: 7, scope: !14348)
!14355 = !DILocation(line: 4076, column: 19, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14353, file: !3, line: 4075, column: 19)
!14357 = !DILocation(line: 4076, column: 45, scope: !14356)
!14358 = !DILocation(line: 4076, column: 43, scope: !14356)
!14359 = !DILocation(line: 4076, column: 9, scope: !14356)
!14360 = !DILocation(line: 4076, column: 17, scope: !14356)
!14361 = !DILocation(line: 4076, column: 7, scope: !14356)
!14362 = !DILocation(line: 4077, column: 18, scope: !14356)
!14363 = !DILocation(line: 4077, column: 44, scope: !14356)
!14364 = !DILocation(line: 4077, column: 42, scope: !14356)
!14365 = !DILocation(line: 4077, column: 9, scope: !14356)
!14366 = !DILocation(line: 4077, column: 16, scope: !14356)
!14367 = !DILocation(line: 4077, column: 7, scope: !14356)
!14368 = !DILocation(line: 4079, column: 4, scope: !14369)
!14369 = distinct !DILexicalBlock(scope: !14356, file: !3, line: 4079, column: 4)
!14370 = !DILocation(line: 4079, column: 4, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14369, file: !3, line: 4079, column: 4)
!14372 = !DILocation(line: 4080, column: 9, scope: !14373)
!14373 = distinct !DILexicalBlock(scope: !14374, file: !3, line: 4080, column: 9)
!14374 = distinct !DILexicalBlock(scope: !14371, file: !3, line: 4079, column: 64)
!14375 = !DILocation(line: 4080, column: 9, scope: !14374)
!14376 = !DILocation(line: 4081, column: 26, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14373, file: !3, line: 4080, column: 38)
!14378 = !DILocation(line: 4081, column: 6, scope: !14377)
!14379 = !DILocation(line: 4081, column: 9, scope: !14377)
!14380 = !DILocation(line: 4081, column: 20, scope: !14377)
!14381 = !DILocation(line: 4081, column: 24, scope: !14377)
!14382 = !DILocation(line: 4082, column: 5, scope: !14377)
!14383 = !DILocation(line: 4084, column: 12, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14373, file: !3, line: 4083, column: 10)
!14385 = !DILocation(line: 4084, column: 7, scope: !14384)
!14386 = !DILocation(line: 4084, column: 10, scope: !14384)
!14387 = !DILocation(line: 4085, column: 8, scope: !14384)
!14388 = !DILocation(line: 4087, column: 4, scope: !14374)
!14389 = distinct !{!14389, !14368, !14390}
!14390 = !DILocation(line: 4087, column: 4, scope: !14369)
!14391 = !DILocation(line: 4088, column: 3, scope: !14356)
!14392 = !DILocation(line: 4090, column: 7, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14348, file: !3, line: 4090, column: 7)
!14394 = !DILocation(line: 4090, column: 7, scope: !14348)
!14395 = !DILocation(line: 4091, column: 19, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14393, file: !3, line: 4090, column: 19)
!14397 = !DILocation(line: 4091, column: 45, scope: !14396)
!14398 = !DILocation(line: 4091, column: 43, scope: !14396)
!14399 = !DILocation(line: 4091, column: 9, scope: !14396)
!14400 = !DILocation(line: 4091, column: 17, scope: !14396)
!14401 = !DILocation(line: 4091, column: 7, scope: !14396)
!14402 = !DILocation(line: 4092, column: 18, scope: !14396)
!14403 = !DILocation(line: 4092, column: 44, scope: !14396)
!14404 = !DILocation(line: 4092, column: 42, scope: !14396)
!14405 = !DILocation(line: 4092, column: 9, scope: !14396)
!14406 = !DILocation(line: 4092, column: 16, scope: !14396)
!14407 = !DILocation(line: 4092, column: 7, scope: !14396)
!14408 = !DILocation(line: 4094, column: 4, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14396, file: !3, line: 4094, column: 4)
!14410 = !DILocation(line: 4094, column: 4, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14409, file: !3, line: 4094, column: 4)
!14412 = !DILocation(line: 4095, column: 9, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14414, file: !3, line: 4095, column: 9)
!14414 = distinct !DILexicalBlock(scope: !14411, file: !3, line: 4094, column: 64)
!14415 = !DILocation(line: 4095, column: 9, scope: !14414)
!14416 = !DILocation(line: 4096, column: 26, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14413, file: !3, line: 4095, column: 38)
!14418 = !DILocation(line: 4096, column: 6, scope: !14417)
!14419 = !DILocation(line: 4096, column: 9, scope: !14417)
!14420 = !DILocation(line: 4096, column: 20, scope: !14417)
!14421 = !DILocation(line: 4096, column: 24, scope: !14417)
!14422 = !DILocation(line: 4097, column: 5, scope: !14417)
!14423 = !DILocation(line: 4099, column: 12, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !14413, file: !3, line: 4098, column: 10)
!14425 = !DILocation(line: 4099, column: 7, scope: !14424)
!14426 = !DILocation(line: 4099, column: 10, scope: !14424)
!14427 = !DILocation(line: 4100, column: 8, scope: !14424)
!14428 = !DILocation(line: 4102, column: 4, scope: !14414)
!14429 = distinct !{!14429, !14408, !14430}
!14430 = !DILocation(line: 4102, column: 4, scope: !14409)
!14431 = !DILocation(line: 4103, column: 3, scope: !14396)
!14432 = !DILocation(line: 4105, column: 7, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14348, file: !3, line: 4105, column: 7)
!14434 = !DILocation(line: 4105, column: 7, scope: !14348)
!14435 = !DILocation(line: 4106, column: 19, scope: !14436)
!14436 = distinct !DILexicalBlock(scope: !14433, file: !3, line: 4105, column: 19)
!14437 = !DILocation(line: 4106, column: 45, scope: !14436)
!14438 = !DILocation(line: 4106, column: 43, scope: !14436)
!14439 = !DILocation(line: 4106, column: 9, scope: !14436)
!14440 = !DILocation(line: 4106, column: 17, scope: !14436)
!14441 = !DILocation(line: 4106, column: 7, scope: !14436)
!14442 = !DILocation(line: 4107, column: 18, scope: !14436)
!14443 = !DILocation(line: 4107, column: 44, scope: !14436)
!14444 = !DILocation(line: 4107, column: 42, scope: !14436)
!14445 = !DILocation(line: 4107, column: 9, scope: !14436)
!14446 = !DILocation(line: 4107, column: 16, scope: !14436)
!14447 = !DILocation(line: 4107, column: 7, scope: !14436)
!14448 = !DILocation(line: 4109, column: 4, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14436, file: !3, line: 4109, column: 4)
!14450 = !DILocation(line: 4109, column: 4, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14449, file: !3, line: 4109, column: 4)
!14452 = !DILocation(line: 4110, column: 9, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !14454, file: !3, line: 4110, column: 9)
!14454 = distinct !DILexicalBlock(scope: !14451, file: !3, line: 4109, column: 64)
!14455 = !DILocation(line: 4110, column: 9, scope: !14454)
!14456 = !DILocation(line: 4111, column: 26, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14453, file: !3, line: 4110, column: 38)
!14458 = !DILocation(line: 4111, column: 6, scope: !14457)
!14459 = !DILocation(line: 4111, column: 9, scope: !14457)
!14460 = !DILocation(line: 4111, column: 20, scope: !14457)
!14461 = !DILocation(line: 4111, column: 24, scope: !14457)
!14462 = !DILocation(line: 4112, column: 5, scope: !14457)
!14463 = !DILocation(line: 4114, column: 12, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14453, file: !3, line: 4113, column: 10)
!14465 = !DILocation(line: 4114, column: 7, scope: !14464)
!14466 = !DILocation(line: 4114, column: 10, scope: !14464)
!14467 = !DILocation(line: 4115, column: 8, scope: !14464)
!14468 = !DILocation(line: 4117, column: 4, scope: !14454)
!14469 = distinct !{!14469, !14448, !14470}
!14470 = !DILocation(line: 4117, column: 4, scope: !14449)
!14471 = !DILocation(line: 4118, column: 3, scope: !14436)
!14472 = !DILocation(line: 4120, column: 10, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14348, file: !3, line: 4120, column: 3)
!14474 = !DILocation(line: 4120, column: 8, scope: !14473)
!14475 = !DILocation(line: 4120, column: 16, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14473, file: !3, line: 4120, column: 3)
!14477 = !DILocation(line: 4120, column: 3, scope: !14473)
!14478 = !DILocalVariable(name: "tot", scope: !14479, file: !3, line: 4121, type: !135)
!14479 = distinct !DILexicalBlock(scope: !14476, file: !3, line: 4120, column: 22)
!14480 = !DILocation(line: 4121, column: 8, scope: !14479)
!14481 = !DILocation(line: 4121, column: 22, scope: !14479)
!14482 = !DILocation(line: 4121, column: 14, scope: !14479)
!14483 = !DILocalVariable(name: "aff", scope: !14479, file: !3, line: 4122, type: !135)
!14484 = !DILocation(line: 4122, column: 8, scope: !14479)
!14485 = !DILocation(line: 4122, column: 23, scope: !14479)
!14486 = !DILocation(line: 4122, column: 14, scope: !14479)
!14487 = !DILocation(line: 4123, column: 14, scope: !14479)
!14488 = !DILocation(line: 4123, column: 9, scope: !14479)
!14489 = !DILocation(line: 4123, column: 7, scope: !14479)
!14490 = !DILocation(line: 4124, column: 13, scope: !14479)
!14491 = !DILocation(line: 4124, column: 9, scope: !14479)
!14492 = !DILocation(line: 4124, column: 7, scope: !14479)
!14493 = !DILocation(line: 4125, column: 10, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14479, file: !3, line: 4125, column: 8)
!14495 = !DILocation(line: 4125, column: 13, scope: !14494)
!14496 = !DILocation(line: 4125, column: 16, scope: !14494)
!14497 = !DILocation(line: 4125, column: 8, scope: !14479)
!14498 = !DILocation(line: 4126, column: 5, scope: !14494)
!14499 = distinct !{!14499, !14477, !14500}
!14500 = !DILocation(line: 4148, column: 3, scope: !14473)
!14501 = !DILocation(line: 4127, column: 8, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14479, file: !3, line: 4127, column: 8)
!14503 = !DILocation(line: 4127, column: 8, scope: !14479)
!14504 = !DILocation(line: 4128, column: 5, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14502, file: !3, line: 4127, column: 27)
!14506 = !DILocation(line: 4128, column: 15, scope: !14505)
!14507 = !DILocation(line: 4129, column: 5, scope: !14505)
!14508 = !DILocation(line: 4129, column: 15, scope: !14505)
!14509 = !DILocation(line: 4130, column: 9, scope: !14505)
!14510 = !DILocation(line: 4130, column: 5, scope: !14505)
!14511 = !DILocation(line: 4130, column: 12, scope: !14505)
!14512 = !DILocation(line: 4131, column: 5, scope: !14505)
!14513 = !DILocation(line: 4133, column: 8, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14479, file: !3, line: 4133, column: 8)
!14515 = !DILocation(line: 4133, column: 8, scope: !14479)
!14516 = !DILocation(line: 4134, column: 12, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14514, file: !3, line: 4133, column: 17)
!14518 = !DILocation(line: 4134, column: 18, scope: !14517)
!14519 = !DILocation(line: 4134, column: 24, scope: !14517)
!14520 = !DILocation(line: 4134, column: 22, scope: !14517)
!14521 = !DILocation(line: 4134, column: 15, scope: !14517)
!14522 = !DILocation(line: 4134, column: 5, scope: !14517)
!14523 = !DILocation(line: 4134, column: 30, scope: !14517)
!14524 = !DILocation(line: 4134, column: 34, scope: !14517)
!14525 = !DILocation(line: 4134, column: 38, scope: !14517)
!14526 = !DILocation(line: 4135, column: 4, scope: !14517)
!14527 = !DILocation(line: 4137, column: 12, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !14514, file: !3, line: 4136, column: 9)
!14529 = !DILocation(line: 4137, column: 17, scope: !14528)
!14530 = !DILocation(line: 4137, column: 15, scope: !14528)
!14531 = !DILocation(line: 4137, column: 5, scope: !14528)
!14532 = !DILocation(line: 4137, column: 22, scope: !14528)
!14533 = !DILocation(line: 4137, column: 27, scope: !14528)
!14534 = !DILocation(line: 4137, column: 33, scope: !14528)
!14535 = !DILocation(line: 4137, column: 31, scope: !14528)
!14536 = !DILocation(line: 4137, column: 26, scope: !14528)
!14537 = !DILocation(line: 4137, column: 38, scope: !14528)
!14538 = !DILocation(line: 4138, column: 10, scope: !14528)
!14539 = !DILocation(line: 4138, column: 8, scope: !14528)
!14540 = !DILocation(line: 4139, column: 24, scope: !14528)
!14541 = !DILocation(line: 4139, column: 19, scope: !14528)
!14542 = !DILocation(line: 4139, column: 14, scope: !14528)
!14543 = !DILocation(line: 4139, column: 10, scope: !14528)
!14544 = !DILocation(line: 4139, column: 17, scope: !14528)
!14545 = !DILocation(line: 4139, column: 8, scope: !14528)
!14546 = !DILocation(line: 4140, column: 15, scope: !14528)
!14547 = !DILocation(line: 4140, column: 10, scope: !14528)
!14548 = !DILocation(line: 4140, column: 5, scope: !14528)
!14549 = !DILocation(line: 4140, column: 13, scope: !14528)
!14550 = !DILocation(line: 4144, column: 13, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14479, file: !3, line: 4144, column: 4)
!14552 = !DILocation(line: 4144, column: 11, scope: !14551)
!14553 = !DILocation(line: 4144, column: 28, scope: !14551)
!14554 = !DILocation(line: 4144, column: 23, scope: !14551)
!14555 = !DILocation(line: 4144, column: 33, scope: !14551)
!14556 = !DILocation(line: 4144, column: 31, scope: !14551)
!14557 = !DILocation(line: 4144, column: 37, scope: !14551)
!14558 = !DILocation(line: 4144, column: 21, scope: !14551)
!14559 = !DILocation(line: 4144, column: 9, scope: !14551)
!14560 = !DILocation(line: 4144, column: 43, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14551, file: !3, line: 4144, column: 4)
!14562 = !DILocation(line: 4144, column: 4, scope: !14551)
!14563 = !DILocation(line: 4145, column: 15, scope: !14564)
!14564 = distinct !DILexicalBlock(scope: !14561, file: !3, line: 4144, column: 53)
!14565 = !DILocation(line: 4145, column: 5, scope: !14564)
!14566 = !DILocation(line: 4145, column: 9, scope: !14564)
!14567 = !DILocation(line: 4145, column: 8, scope: !14564)
!14568 = !DILocation(line: 4145, column: 13, scope: !14564)
!14569 = !DILocation(line: 4146, column: 4, scope: !14564)
!14570 = !DILocation(line: 4144, column: 49, scope: !14561)
!14571 = !DILocation(line: 4144, column: 4, scope: !14561)
!14572 = distinct !{!14572, !14562, !14573}
!14573 = !DILocation(line: 4146, column: 4, scope: !14551)
!14574 = !DILocation(line: 4147, column: 4, scope: !14479)
!14575 = !DILocation(line: 4147, column: 19, scope: !14479)
!14576 = !DILocation(line: 4147, column: 14, scope: !14479)
!14577 = !DILocation(line: 4120, column: 3, scope: !14476)
!14578 = !DILocation(line: 4149, column: 2, scope: !14348)
!14579 = !DILocation(line: 4151, column: 11, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14344, file: !3, line: 4151, column: 11)
!14581 = !DILocation(line: 4151, column: 18, scope: !14580)
!14582 = !DILocation(line: 4151, column: 11, scope: !14344)
!14583 = !DILocation(line: 4152, column: 7, scope: !14584)
!14584 = distinct !DILexicalBlock(scope: !14585, file: !3, line: 4152, column: 7)
!14585 = distinct !DILexicalBlock(scope: !14580, file: !3, line: 4151, column: 36)
!14586 = !DILocation(line: 4152, column: 7, scope: !14585)
!14587 = !DILocalVariable(name: "rng", scope: !14588, file: !3, line: 4155, type: !14589)
!14588 = distinct !DILexicalBlock(scope: !14584, file: !3, line: 4152, column: 19)
!14589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14590, size: 64)
!14590 = !DIDerivedType(tag: DW_TAG_typedef, name: "RNG", file: !14591, line: 41, baseType: !14592)
!14591 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!14592 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG", file: !14591, line: 40, flags: DIFlagFwdDecl)
!14593 = !DILocation(line: 4155, column: 9, scope: !14588)
!14594 = !DILocation(line: 4155, column: 35, scope: !14588)
!14595 = !DILocation(line: 4155, column: 15, scope: !14588)
!14596 = !DILocation(line: 4156, column: 21, scope: !14588)
!14597 = !DILocation(line: 4156, column: 48, scope: !14588)
!14598 = !DILocation(line: 4156, column: 46, scope: !14588)
!14599 = !DILocation(line: 4156, column: 9, scope: !14588)
!14600 = !DILocation(line: 4156, column: 19, scope: !14588)
!14601 = !DILocation(line: 4156, column: 7, scope: !14588)
!14602 = !DILocation(line: 4157, column: 21, scope: !14588)
!14603 = !DILocation(line: 4157, column: 54, scope: !14588)
!14604 = !DILocation(line: 4157, column: 52, scope: !14588)
!14605 = !DILocation(line: 4157, column: 9, scope: !14588)
!14606 = !DILocation(line: 4157, column: 19, scope: !14588)
!14607 = !DILocation(line: 4157, column: 7, scope: !14588)
!14608 = !DILocation(line: 4159, column: 4, scope: !14609)
!14609 = distinct !DILexicalBlock(scope: !14588, file: !3, line: 4159, column: 4)
!14610 = !DILocation(line: 4159, column: 4, scope: !14611)
!14611 = distinct !DILexicalBlock(scope: !14609, file: !3, line: 4159, column: 4)
!14612 = !DILocation(line: 4160, column: 9, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14614, file: !3, line: 4160, column: 9)
!14614 = distinct !DILexicalBlock(scope: !14611, file: !3, line: 4159, column: 64)
!14615 = !DILocation(line: 4160, column: 9, scope: !14614)
!14616 = !DILocation(line: 4161, column: 6, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14613, file: !3, line: 4160, column: 38)
!14618 = !DILocation(line: 4161, column: 9, scope: !14617)
!14619 = !DILocation(line: 4161, column: 12, scope: !14617)
!14620 = !DILocation(line: 4162, column: 32, scope: !14617)
!14621 = !DILocation(line: 4162, column: 6, scope: !14617)
!14622 = !DILocation(line: 4162, column: 9, scope: !14617)
!14623 = !DILocation(line: 4162, column: 22, scope: !14617)
!14624 = !DILocation(line: 4162, column: 30, scope: !14617)
!14625 = !DILocation(line: 4163, column: 48, scope: !14617)
!14626 = !DILocation(line: 4163, column: 30, scope: !14617)
!14627 = !DILocation(line: 4163, column: 6, scope: !14617)
!14628 = !DILocation(line: 4163, column: 9, scope: !14617)
!14629 = !DILocation(line: 4163, column: 20, scope: !14617)
!14630 = !DILocation(line: 4163, column: 24, scope: !14617)
!14631 = !DILocation(line: 4163, column: 28, scope: !14617)
!14632 = !DILocation(line: 4164, column: 5, scope: !14617)
!14633 = !DILocation(line: 4166, column: 6, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14613, file: !3, line: 4165, column: 10)
!14635 = !DILocation(line: 4166, column: 9, scope: !14634)
!14636 = !DILocation(line: 4166, column: 12, scope: !14634)
!14637 = !DILocation(line: 4168, column: 4, scope: !14614)
!14638 = distinct !{!14638, !14608, !14639}
!14639 = !DILocation(line: 4168, column: 4, scope: !14609)
!14640 = !DILocation(line: 4170, column: 17, scope: !14588)
!14641 = !DILocation(line: 4170, column: 4, scope: !14588)
!14642 = !DILocation(line: 4171, column: 3, scope: !14588)
!14643 = !DILocation(line: 4173, column: 7, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !14585, file: !3, line: 4173, column: 7)
!14645 = !DILocation(line: 4173, column: 7, scope: !14585)
!14646 = !DILocalVariable(name: "rng", scope: !14647, file: !3, line: 4174, type: !14589)
!14647 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 4173, column: 19)
!14648 = !DILocation(line: 4174, column: 9, scope: !14647)
!14649 = !DILocation(line: 4174, column: 35, scope: !14647)
!14650 = !DILocation(line: 4174, column: 15, scope: !14647)
!14651 = !DILocation(line: 4175, column: 21, scope: !14647)
!14652 = !DILocation(line: 4175, column: 48, scope: !14647)
!14653 = !DILocation(line: 4175, column: 46, scope: !14647)
!14654 = !DILocation(line: 4175, column: 9, scope: !14647)
!14655 = !DILocation(line: 4175, column: 19, scope: !14647)
!14656 = !DILocation(line: 4175, column: 7, scope: !14647)
!14657 = !DILocation(line: 4176, column: 21, scope: !14647)
!14658 = !DILocation(line: 4176, column: 54, scope: !14647)
!14659 = !DILocation(line: 4176, column: 52, scope: !14647)
!14660 = !DILocation(line: 4176, column: 9, scope: !14647)
!14661 = !DILocation(line: 4176, column: 19, scope: !14647)
!14662 = !DILocation(line: 4176, column: 7, scope: !14647)
!14663 = !DILocation(line: 4178, column: 4, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14647, file: !3, line: 4178, column: 4)
!14665 = !DILocation(line: 4178, column: 4, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14664, file: !3, line: 4178, column: 4)
!14667 = !DILocation(line: 4179, column: 9, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !14669, file: !3, line: 4179, column: 9)
!14669 = distinct !DILexicalBlock(scope: !14666, file: !3, line: 4178, column: 64)
!14670 = !DILocation(line: 4179, column: 9, scope: !14669)
!14671 = !DILocation(line: 4180, column: 6, scope: !14672)
!14672 = distinct !DILexicalBlock(scope: !14668, file: !3, line: 4179, column: 38)
!14673 = !DILocation(line: 4180, column: 9, scope: !14672)
!14674 = !DILocation(line: 4180, column: 12, scope: !14672)
!14675 = !DILocation(line: 4181, column: 32, scope: !14672)
!14676 = !DILocation(line: 4181, column: 6, scope: !14672)
!14677 = !DILocation(line: 4181, column: 9, scope: !14672)
!14678 = !DILocation(line: 4181, column: 22, scope: !14672)
!14679 = !DILocation(line: 4181, column: 30, scope: !14672)
!14680 = !DILocation(line: 4182, column: 48, scope: !14672)
!14681 = !DILocation(line: 4182, column: 30, scope: !14672)
!14682 = !DILocation(line: 4182, column: 6, scope: !14672)
!14683 = !DILocation(line: 4182, column: 9, scope: !14672)
!14684 = !DILocation(line: 4182, column: 20, scope: !14672)
!14685 = !DILocation(line: 4182, column: 24, scope: !14672)
!14686 = !DILocation(line: 4182, column: 28, scope: !14672)
!14687 = !DILocation(line: 4183, column: 5, scope: !14672)
!14688 = !DILocation(line: 4185, column: 6, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14668, file: !3, line: 4184, column: 10)
!14690 = !DILocation(line: 4185, column: 9, scope: !14689)
!14691 = !DILocation(line: 4185, column: 12, scope: !14689)
!14692 = !DILocation(line: 4187, column: 4, scope: !14669)
!14693 = distinct !{!14693, !14663, !14694}
!14694 = !DILocation(line: 4187, column: 4, scope: !14664)
!14695 = !DILocation(line: 4189, column: 17, scope: !14647)
!14696 = !DILocation(line: 4189, column: 4, scope: !14647)
!14697 = !DILocation(line: 4190, column: 3, scope: !14647)
!14698 = !DILocation(line: 4192, column: 7, scope: !14699)
!14699 = distinct !DILexicalBlock(scope: !14585, file: !3, line: 4192, column: 7)
!14700 = !DILocation(line: 4192, column: 7, scope: !14585)
!14701 = !DILocalVariable(name: "rng", scope: !14702, file: !3, line: 4193, type: !14589)
!14702 = distinct !DILexicalBlock(scope: !14699, file: !3, line: 4192, column: 19)
!14703 = !DILocation(line: 4193, column: 9, scope: !14702)
!14704 = !DILocation(line: 4193, column: 35, scope: !14702)
!14705 = !DILocation(line: 4193, column: 15, scope: !14702)
!14706 = !DILocation(line: 4194, column: 21, scope: !14702)
!14707 = !DILocation(line: 4194, column: 48, scope: !14702)
!14708 = !DILocation(line: 4194, column: 46, scope: !14702)
!14709 = !DILocation(line: 4194, column: 9, scope: !14702)
!14710 = !DILocation(line: 4194, column: 19, scope: !14702)
!14711 = !DILocation(line: 4194, column: 7, scope: !14702)
!14712 = !DILocation(line: 4195, column: 21, scope: !14702)
!14713 = !DILocation(line: 4195, column: 54, scope: !14702)
!14714 = !DILocation(line: 4195, column: 52, scope: !14702)
!14715 = !DILocation(line: 4195, column: 9, scope: !14702)
!14716 = !DILocation(line: 4195, column: 19, scope: !14702)
!14717 = !DILocation(line: 4195, column: 7, scope: !14702)
!14718 = !DILocation(line: 4197, column: 4, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14702, file: !3, line: 4197, column: 4)
!14720 = !DILocation(line: 4197, column: 4, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14719, file: !3, line: 4197, column: 4)
!14722 = !DILocation(line: 4198, column: 9, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14724, file: !3, line: 4198, column: 9)
!14724 = distinct !DILexicalBlock(scope: !14721, file: !3, line: 4197, column: 64)
!14725 = !DILocation(line: 4198, column: 9, scope: !14724)
!14726 = !DILocation(line: 4199, column: 6, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !14723, file: !3, line: 4198, column: 38)
!14728 = !DILocation(line: 4199, column: 9, scope: !14727)
!14729 = !DILocation(line: 4199, column: 12, scope: !14727)
!14730 = !DILocation(line: 4200, column: 32, scope: !14727)
!14731 = !DILocation(line: 4200, column: 6, scope: !14727)
!14732 = !DILocation(line: 4200, column: 9, scope: !14727)
!14733 = !DILocation(line: 4200, column: 22, scope: !14727)
!14734 = !DILocation(line: 4200, column: 30, scope: !14727)
!14735 = !DILocation(line: 4201, column: 48, scope: !14727)
!14736 = !DILocation(line: 4201, column: 30, scope: !14727)
!14737 = !DILocation(line: 4201, column: 6, scope: !14727)
!14738 = !DILocation(line: 4201, column: 9, scope: !14727)
!14739 = !DILocation(line: 4201, column: 20, scope: !14727)
!14740 = !DILocation(line: 4201, column: 24, scope: !14727)
!14741 = !DILocation(line: 4201, column: 28, scope: !14727)
!14742 = !DILocation(line: 4202, column: 5, scope: !14727)
!14743 = !DILocation(line: 4204, column: 6, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14723, file: !3, line: 4203, column: 10)
!14745 = !DILocation(line: 4204, column: 9, scope: !14744)
!14746 = !DILocation(line: 4204, column: 12, scope: !14744)
!14747 = !DILocation(line: 4206, column: 4, scope: !14724)
!14748 = distinct !{!14748, !14718, !14749}
!14749 = !DILocation(line: 4206, column: 4, scope: !14719)
!14750 = !DILocation(line: 4208, column: 17, scope: !14702)
!14751 = !DILocation(line: 4208, column: 4, scope: !14702)
!14752 = !DILocation(line: 4209, column: 3, scope: !14702)
!14753 = !DILocation(line: 4210, column: 2, scope: !14585)
!14754 = !DILocation(line: 4212, column: 11, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14580, file: !3, line: 4212, column: 11)
!14756 = !DILocation(line: 4212, column: 18, scope: !14755)
!14757 = !DILocation(line: 4212, column: 11, scope: !14580)
!14758 = !DILocation(line: 4213, column: 7, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14760, file: !3, line: 4213, column: 7)
!14760 = distinct !DILexicalBlock(scope: !14755, file: !3, line: 4212, column: 34)
!14761 = !DILocation(line: 4213, column: 7, scope: !14760)
!14762 = !DILocation(line: 4214, column: 21, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14759, file: !3, line: 4213, column: 19)
!14764 = !DILocation(line: 4214, column: 48, scope: !14763)
!14765 = !DILocation(line: 4214, column: 46, scope: !14763)
!14766 = !DILocation(line: 4214, column: 9, scope: !14763)
!14767 = !DILocation(line: 4214, column: 19, scope: !14763)
!14768 = !DILocation(line: 4214, column: 7, scope: !14763)
!14769 = !DILocation(line: 4215, column: 21, scope: !14763)
!14770 = !DILocation(line: 4215, column: 54, scope: !14763)
!14771 = !DILocation(line: 4215, column: 52, scope: !14763)
!14772 = !DILocation(line: 4215, column: 9, scope: !14763)
!14773 = !DILocation(line: 4215, column: 19, scope: !14763)
!14774 = !DILocation(line: 4215, column: 7, scope: !14763)
!14775 = !DILocation(line: 4217, column: 4, scope: !14776)
!14776 = distinct !DILexicalBlock(scope: !14763, file: !3, line: 4217, column: 4)
!14777 = !DILocation(line: 4217, column: 4, scope: !14778)
!14778 = distinct !DILexicalBlock(scope: !14776, file: !3, line: 4217, column: 4)
!14779 = !DILocation(line: 4218, column: 9, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14781, file: !3, line: 4218, column: 9)
!14781 = distinct !DILexicalBlock(scope: !14778, file: !3, line: 4217, column: 64)
!14782 = !DILocation(line: 4218, column: 9, scope: !14781)
!14783 = !DILocation(line: 4219, column: 6, scope: !14784)
!14784 = distinct !DILexicalBlock(scope: !14780, file: !3, line: 4218, column: 38)
!14785 = !DILocation(line: 4219, column: 9, scope: !14784)
!14786 = !DILocation(line: 4219, column: 12, scope: !14784)
!14787 = !DILocation(line: 4220, column: 32, scope: !14784)
!14788 = !DILocation(line: 4220, column: 6, scope: !14784)
!14789 = !DILocation(line: 4220, column: 9, scope: !14784)
!14790 = !DILocation(line: 4220, column: 22, scope: !14784)
!14791 = !DILocation(line: 4220, column: 30, scope: !14784)
!14792 = !DILocation(line: 4221, column: 38, scope: !14784)
!14793 = !DILocation(line: 4221, column: 37, scope: !14784)
!14794 = !DILocation(line: 4221, column: 30, scope: !14784)
!14795 = !DILocation(line: 4221, column: 6, scope: !14784)
!14796 = !DILocation(line: 4221, column: 9, scope: !14784)
!14797 = !DILocation(line: 4221, column: 20, scope: !14784)
!14798 = !DILocation(line: 4221, column: 24, scope: !14784)
!14799 = !DILocation(line: 4221, column: 28, scope: !14784)
!14800 = !DILocation(line: 4222, column: 5, scope: !14784)
!14801 = !DILocation(line: 4224, column: 6, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14780, file: !3, line: 4223, column: 10)
!14803 = !DILocation(line: 4224, column: 9, scope: !14802)
!14804 = !DILocation(line: 4224, column: 12, scope: !14802)
!14805 = !DILocation(line: 4226, column: 4, scope: !14781)
!14806 = distinct !{!14806, !14775, !14807}
!14807 = !DILocation(line: 4226, column: 4, scope: !14776)
!14808 = !DILocation(line: 4227, column: 3, scope: !14763)
!14809 = !DILocation(line: 4229, column: 7, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14760, file: !3, line: 4229, column: 7)
!14811 = !DILocation(line: 4229, column: 7, scope: !14760)
!14812 = !DILocation(line: 4230, column: 21, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14810, file: !3, line: 4229, column: 19)
!14814 = !DILocation(line: 4230, column: 48, scope: !14813)
!14815 = !DILocation(line: 4230, column: 46, scope: !14813)
!14816 = !DILocation(line: 4230, column: 9, scope: !14813)
!14817 = !DILocation(line: 4230, column: 19, scope: !14813)
!14818 = !DILocation(line: 4230, column: 7, scope: !14813)
!14819 = !DILocation(line: 4231, column: 21, scope: !14813)
!14820 = !DILocation(line: 4231, column: 54, scope: !14813)
!14821 = !DILocation(line: 4231, column: 52, scope: !14813)
!14822 = !DILocation(line: 4231, column: 9, scope: !14813)
!14823 = !DILocation(line: 4231, column: 19, scope: !14813)
!14824 = !DILocation(line: 4231, column: 7, scope: !14813)
!14825 = !DILocation(line: 4233, column: 4, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14813, file: !3, line: 4233, column: 4)
!14827 = !DILocation(line: 4233, column: 4, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !14826, file: !3, line: 4233, column: 4)
!14829 = !DILocation(line: 4234, column: 9, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 4234, column: 9)
!14831 = distinct !DILexicalBlock(scope: !14828, file: !3, line: 4233, column: 64)
!14832 = !DILocation(line: 4234, column: 9, scope: !14831)
!14833 = !DILocation(line: 4235, column: 6, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14830, file: !3, line: 4234, column: 38)
!14835 = !DILocation(line: 4235, column: 9, scope: !14834)
!14836 = !DILocation(line: 4235, column: 12, scope: !14834)
!14837 = !DILocation(line: 4236, column: 32, scope: !14834)
!14838 = !DILocation(line: 4236, column: 6, scope: !14834)
!14839 = !DILocation(line: 4236, column: 9, scope: !14834)
!14840 = !DILocation(line: 4236, column: 22, scope: !14834)
!14841 = !DILocation(line: 4236, column: 30, scope: !14834)
!14842 = !DILocation(line: 4237, column: 38, scope: !14834)
!14843 = !DILocation(line: 4237, column: 37, scope: !14834)
!14844 = !DILocation(line: 4237, column: 30, scope: !14834)
!14845 = !DILocation(line: 4237, column: 6, scope: !14834)
!14846 = !DILocation(line: 4237, column: 9, scope: !14834)
!14847 = !DILocation(line: 4237, column: 20, scope: !14834)
!14848 = !DILocation(line: 4237, column: 24, scope: !14834)
!14849 = !DILocation(line: 4237, column: 28, scope: !14834)
!14850 = !DILocation(line: 4238, column: 5, scope: !14834)
!14851 = !DILocation(line: 4240, column: 6, scope: !14852)
!14852 = distinct !DILexicalBlock(scope: !14830, file: !3, line: 4239, column: 10)
!14853 = !DILocation(line: 4240, column: 9, scope: !14852)
!14854 = !DILocation(line: 4240, column: 12, scope: !14852)
!14855 = !DILocation(line: 4242, column: 4, scope: !14831)
!14856 = distinct !{!14856, !14825, !14857}
!14857 = !DILocation(line: 4242, column: 4, scope: !14826)
!14858 = !DILocation(line: 4243, column: 3, scope: !14813)
!14859 = !DILocation(line: 4245, column: 7, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14760, file: !3, line: 4245, column: 7)
!14861 = !DILocation(line: 4245, column: 7, scope: !14760)
!14862 = !DILocation(line: 4246, column: 21, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14860, file: !3, line: 4245, column: 19)
!14864 = !DILocation(line: 4246, column: 48, scope: !14863)
!14865 = !DILocation(line: 4246, column: 46, scope: !14863)
!14866 = !DILocation(line: 4246, column: 9, scope: !14863)
!14867 = !DILocation(line: 4246, column: 19, scope: !14863)
!14868 = !DILocation(line: 4246, column: 7, scope: !14863)
!14869 = !DILocation(line: 4247, column: 21, scope: !14863)
!14870 = !DILocation(line: 4247, column: 54, scope: !14863)
!14871 = !DILocation(line: 4247, column: 52, scope: !14863)
!14872 = !DILocation(line: 4247, column: 9, scope: !14863)
!14873 = !DILocation(line: 4247, column: 19, scope: !14863)
!14874 = !DILocation(line: 4247, column: 7, scope: !14863)
!14875 = !DILocation(line: 4249, column: 4, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14863, file: !3, line: 4249, column: 4)
!14877 = !DILocation(line: 4249, column: 4, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14876, file: !3, line: 4249, column: 4)
!14879 = !DILocation(line: 4250, column: 9, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !3, line: 4250, column: 9)
!14881 = distinct !DILexicalBlock(scope: !14878, file: !3, line: 4249, column: 64)
!14882 = !DILocation(line: 4250, column: 9, scope: !14881)
!14883 = !DILocation(line: 4251, column: 6, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14880, file: !3, line: 4250, column: 38)
!14885 = !DILocation(line: 4251, column: 9, scope: !14884)
!14886 = !DILocation(line: 4251, column: 12, scope: !14884)
!14887 = !DILocation(line: 4252, column: 32, scope: !14884)
!14888 = !DILocation(line: 4252, column: 6, scope: !14884)
!14889 = !DILocation(line: 4252, column: 9, scope: !14884)
!14890 = !DILocation(line: 4252, column: 22, scope: !14884)
!14891 = !DILocation(line: 4252, column: 30, scope: !14884)
!14892 = !DILocation(line: 4253, column: 38, scope: !14884)
!14893 = !DILocation(line: 4253, column: 37, scope: !14884)
!14894 = !DILocation(line: 4253, column: 30, scope: !14884)
!14895 = !DILocation(line: 4253, column: 6, scope: !14884)
!14896 = !DILocation(line: 4253, column: 9, scope: !14884)
!14897 = !DILocation(line: 4253, column: 20, scope: !14884)
!14898 = !DILocation(line: 4253, column: 24, scope: !14884)
!14899 = !DILocation(line: 4253, column: 28, scope: !14884)
!14900 = !DILocation(line: 4254, column: 5, scope: !14884)
!14901 = !DILocation(line: 4256, column: 6, scope: !14902)
!14902 = distinct !DILexicalBlock(scope: !14880, file: !3, line: 4255, column: 10)
!14903 = !DILocation(line: 4256, column: 9, scope: !14902)
!14904 = !DILocation(line: 4256, column: 12, scope: !14902)
!14905 = !DILocation(line: 4258, column: 4, scope: !14881)
!14906 = distinct !{!14906, !14875, !14907}
!14907 = !DILocation(line: 4258, column: 4, scope: !14876)
!14908 = !DILocation(line: 4259, column: 3, scope: !14863)
!14909 = !DILocation(line: 4260, column: 2, scope: !14760)
!14910 = !DILocation(line: 4265, column: 6, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 4265, column: 6)
!14912 = !DILocation(line: 4265, column: 18, scope: !14911)
!14913 = !DILocation(line: 4265, column: 23, scope: !14911)
!14914 = !DILocation(line: 4265, column: 26, scope: !14911)
!14915 = !DILocation(line: 4265, column: 38, scope: !14911)
!14916 = !DILocation(line: 4265, column: 43, scope: !14911)
!14917 = !DILocation(line: 4265, column: 46, scope: !14911)
!14918 = !DILocation(line: 4265, column: 58, scope: !14911)
!14919 = !DILocation(line: 4265, column: 6, scope: !13770)
!14920 = !DILocation(line: 4266, column: 10, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14922, file: !3, line: 4266, column: 3)
!14922 = distinct !DILexicalBlock(scope: !14911, file: !3, line: 4265, column: 64)
!14923 = !DILocation(line: 4266, column: 8, scope: !14921)
!14924 = !DILocation(line: 4266, column: 16, scope: !14925)
!14925 = distinct !DILexicalBlock(scope: !14921, file: !3, line: 4266, column: 3)
!14926 = !DILocation(line: 4266, column: 3, scope: !14921)
!14927 = !DILocation(line: 4267, column: 15, scope: !14928)
!14928 = distinct !DILexicalBlock(scope: !14929, file: !3, line: 4267, column: 8)
!14929 = distinct !DILexicalBlock(scope: !14925, file: !3, line: 4266, column: 22)
!14930 = !DILocation(line: 4267, column: 8, scope: !14928)
!14931 = !DILocation(line: 4267, column: 8, scope: !14929)
!14932 = !DILocation(line: 4268, column: 5, scope: !14928)
!14933 = !DILocation(line: 4268, column: 22, scope: !14928)
!14934 = !DILocation(line: 4268, column: 15, scope: !14928)
!14935 = !DILocation(line: 4269, column: 15, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14929, file: !3, line: 4269, column: 8)
!14937 = !DILocation(line: 4269, column: 8, scope: !14936)
!14938 = !DILocation(line: 4269, column: 8, scope: !14929)
!14939 = !DILocation(line: 4270, column: 5, scope: !14936)
!14940 = !DILocation(line: 4270, column: 22, scope: !14936)
!14941 = !DILocation(line: 4270, column: 15, scope: !14936)
!14942 = !DILocation(line: 4271, column: 12, scope: !14943)
!14943 = distinct !DILexicalBlock(scope: !14929, file: !3, line: 4271, column: 8)
!14944 = !DILocation(line: 4271, column: 8, scope: !14943)
!14945 = !DILocation(line: 4271, column: 8, scope: !14929)
!14946 = !DILocation(line: 4272, column: 5, scope: !14943)
!14947 = !DILocation(line: 4272, column: 19, scope: !14943)
!14948 = !DILocation(line: 4272, column: 15, scope: !14943)
!14949 = !DILocation(line: 4266, column: 3, scope: !14925)
!14950 = distinct !{!14950, !14926, !14951}
!14951 = !DILocation(line: 4273, column: 3, scope: !14921)
!14952 = !DILocation(line: 4274, column: 3, scope: !14922)
!14953 = !DILocation(line: 4278, column: 9, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 4278, column: 2)
!14955 = !DILocation(line: 4278, column: 7, scope: !14954)
!14956 = !DILocation(line: 4278, column: 15, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14954, file: !3, line: 4278, column: 2)
!14958 = !DILocation(line: 4278, column: 2, scope: !14954)
!14959 = !DILocation(line: 4279, column: 15, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14957, file: !3, line: 4278, column: 21)
!14961 = !DILocation(line: 4279, column: 8, scope: !14960)
!14962 = !DILocation(line: 4279, column: 6, scope: !14960)
!14963 = !DILocation(line: 4280, column: 15, scope: !14960)
!14964 = !DILocation(line: 4280, column: 8, scope: !14960)
!14965 = !DILocation(line: 4280, column: 6, scope: !14960)
!14966 = !DILocation(line: 4281, column: 7, scope: !14967)
!14967 = distinct !DILexicalBlock(scope: !14960, file: !3, line: 4281, column: 7)
!14968 = !DILocation(line: 4281, column: 10, scope: !14967)
!14969 = !DILocation(line: 4281, column: 13, scope: !14967)
!14970 = !DILocation(line: 4281, column: 16, scope: !14967)
!14971 = !DILocation(line: 4281, column: 24, scope: !14967)
!14972 = !DILocation(line: 4281, column: 20, scope: !14967)
!14973 = !DILocation(line: 4281, column: 7, scope: !14960)
!14974 = !DILocalVariable(name: "p_blk", scope: !14975, file: !3, line: 4282, type: !3575)
!14975 = distinct !DILexicalBlock(scope: !14967, file: !3, line: 4281, column: 28)
!14976 = !DILocation(line: 4282, column: 16, scope: !14975)
!14977 = !DILocalVariable(name: "s_blk", scope: !14975, file: !3, line: 4283, type: !13811)
!14978 = !DILocation(line: 4283, column: 16, scope: !14975)
!14979 = !DILocalVariable(name: "tot", scope: !14975, file: !3, line: 4284, type: !135)
!14980 = !DILocation(line: 4284, column: 8, scope: !14975)
!14981 = !DILocation(line: 4284, column: 22, scope: !14975)
!14982 = !DILocation(line: 4284, column: 14, scope: !14975)
!14983 = !DILocalVariable(name: "aff", scope: !14975, file: !3, line: 4285, type: !135)
!14984 = !DILocation(line: 4285, column: 8, scope: !14975)
!14985 = !DILocation(line: 4285, column: 23, scope: !14975)
!14986 = !DILocation(line: 4285, column: 14, scope: !14975)
!14987 = !DILocation(line: 4287, column: 10, scope: !14975)
!14988 = !DILocation(line: 4287, column: 14, scope: !14975)
!14989 = !DILocation(line: 4287, column: 4, scope: !14975)
!14990 = !DILocation(line: 4289, column: 18, scope: !14975)
!14991 = !DILocation(line: 4289, column: 44, scope: !14975)
!14992 = !DILocation(line: 4289, column: 42, scope: !14975)
!14993 = !DILocation(line: 4289, column: 13, scope: !14975)
!14994 = !DILocation(line: 4289, column: 9, scope: !14975)
!14995 = !DILocation(line: 4289, column: 16, scope: !14975)
!14996 = !DILocation(line: 4289, column: 7, scope: !14975)
!14997 = !DILocation(line: 4290, column: 12, scope: !14975)
!14998 = !DILocation(line: 4290, column: 17, scope: !14975)
!14999 = !DILocation(line: 4290, column: 15, scope: !14975)
!15000 = !DILocation(line: 4290, column: 21, scope: !14975)
!15001 = !DILocation(line: 4290, column: 10, scope: !14975)
!15002 = !DILocation(line: 4291, column: 12, scope: !14975)
!15003 = !DILocation(line: 4291, column: 17, scope: !14975)
!15004 = !DILocation(line: 4291, column: 15, scope: !14975)
!15005 = !DILocation(line: 4291, column: 21, scope: !14975)
!15006 = !DILocation(line: 4291, column: 10, scope: !14975)
!15007 = !DILocation(line: 4292, column: 13, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !14975, file: !3, line: 4292, column: 4)
!15009 = !DILocation(line: 4292, column: 11, scope: !15008)
!15010 = !DILocation(line: 4292, column: 9, scope: !15008)
!15011 = !DILocation(line: 4292, column: 19, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !15008, file: !3, line: 4292, column: 4)
!15013 = !DILocation(line: 4292, column: 4, scope: !15008)
!15014 = !DILocation(line: 4293, column: 10, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !15016, file: !3, line: 4293, column: 9)
!15016 = distinct !DILexicalBlock(scope: !15012, file: !3, line: 4292, column: 32)
!15017 = !DILocation(line: 4293, column: 9, scope: !15015)
!15018 = !DILocation(line: 4293, column: 9, scope: !15016)
!15019 = !DILocation(line: 4294, column: 14, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 4293, column: 17)
!15021 = !DILocation(line: 4294, column: 6, scope: !15020)
!15022 = !DILocation(line: 4294, column: 9, scope: !15020)
!15023 = !DILocation(line: 4294, column: 12, scope: !15020)
!15024 = !DILocation(line: 4295, column: 5, scope: !15020)
!15025 = !DILocation(line: 4297, column: 27, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 4296, column: 10)
!15027 = !DILocation(line: 4297, column: 6, scope: !15026)
!15028 = !DILocation(line: 4297, column: 9, scope: !15026)
!15029 = !DILocation(line: 4297, column: 16, scope: !15026)
!15030 = !DILocation(line: 4297, column: 25, scope: !15026)
!15031 = !DILocation(line: 4298, column: 11, scope: !15026)
!15032 = !DILocation(line: 4300, column: 4, scope: !15016)
!15033 = !DILocation(line: 4292, column: 28, scope: !15012)
!15034 = !DILocation(line: 4292, column: 4, scope: !15012)
!15035 = distinct !{!15035, !15013, !15036}
!15036 = !DILocation(line: 4300, column: 4, scope: !15008)
!15037 = !DILocation(line: 4301, column: 3, scope: !14975)
!15038 = !DILocation(line: 4302, column: 7, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !14960, file: !3, line: 4302, column: 7)
!15040 = !DILocation(line: 4302, column: 7, scope: !14960)
!15041 = !DILocation(line: 4303, column: 4, scope: !15039)
!15042 = !DILocation(line: 4303, column: 14, scope: !15039)
!15043 = !DILocation(line: 4304, column: 7, scope: !15044)
!15044 = distinct !DILexicalBlock(scope: !14960, file: !3, line: 4304, column: 7)
!15045 = !DILocation(line: 4304, column: 7, scope: !14960)
!15046 = !DILocation(line: 4305, column: 4, scope: !15044)
!15047 = !DILocation(line: 4305, column: 14, scope: !15044)
!15048 = !DILocation(line: 4278, column: 2, scope: !14957)
!15049 = distinct !{!15049, !14958, !15050}
!15050 = !DILocation(line: 4306, column: 2, scope: !14954)
!15051 = !DILocation(line: 4308, column: 16, scope: !13770)
!15052 = !DILocation(line: 4308, column: 20, scope: !13770)
!15053 = !DILocation(line: 4308, column: 24, scope: !13770)
!15054 = !DILocation(line: 4308, column: 32, scope: !13770)
!15055 = !DILocation(line: 4308, column: 40, scope: !13770)
!15056 = !DILocation(line: 4308, column: 2, scope: !13770)
!15057 = !DILocation(line: 4311, column: 9, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 4311, column: 2)
!15059 = !DILocation(line: 4311, column: 7, scope: !15058)
!15060 = !DILocation(line: 4311, column: 15, scope: !15061)
!15061 = distinct !DILexicalBlock(scope: !15058, file: !3, line: 4311, column: 2)
!15062 = !DILocation(line: 4311, column: 2, scope: !15058)
!15063 = !DILocation(line: 4312, column: 11, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15065, file: !3, line: 4312, column: 7)
!15065 = distinct !DILexicalBlock(scope: !15061, file: !3, line: 4311, column: 21)
!15066 = !DILocation(line: 4312, column: 7, scope: !15064)
!15067 = !DILocation(line: 4312, column: 7, scope: !15065)
!15068 = !DILocation(line: 4313, column: 4, scope: !15064)
!15069 = !DILocation(line: 4313, column: 18, scope: !15064)
!15070 = !DILocation(line: 4313, column: 14, scope: !15064)
!15071 = !DILocation(line: 4311, column: 2, scope: !15061)
!15072 = distinct !{!15072, !15062, !15073}
!15073 = !DILocation(line: 4314, column: 2, scope: !15058)
!15074 = !DILocation(line: 4315, column: 1, scope: !13770)
!15075 = distinct !DISubprogram(name: "len_squared_v3v3", scope: !12011, file: !12011, line: 727, type: !15076, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!15076 = !DISubroutineType(types: !15077)
!15077 = !{!1344, !7396, !7396}
!15078 = !DILocalVariable(name: "a", arg: 1, scope: !15075, file: !12011, line: 727, type: !7396)
!15079 = !DILocation(line: 727, column: 44, scope: !15075)
!15080 = !DILocalVariable(name: "b", arg: 2, scope: !15075, file: !12011, line: 727, type: !7396)
!15081 = !DILocation(line: 727, column: 62, scope: !15075)
!15082 = !DILocalVariable(name: "d", scope: !15075, file: !12011, line: 729, type: !1375)
!15083 = !DILocation(line: 729, column: 8, scope: !15075)
!15084 = !DILocation(line: 731, column: 14, scope: !15075)
!15085 = !DILocation(line: 731, column: 17, scope: !15075)
!15086 = !DILocation(line: 731, column: 20, scope: !15075)
!15087 = !DILocation(line: 731, column: 2, scope: !15075)
!15088 = !DILocation(line: 732, column: 18, scope: !15075)
!15089 = !DILocation(line: 732, column: 21, scope: !15075)
!15090 = !DILocation(line: 732, column: 9, scope: !15075)
!15091 = !DILocation(line: 732, column: 2, scope: !15075)
!15092 = distinct !DISubprogram(name: "bmelemsort_comp", scope: !3, file: !3, line: 3877, type: !15093, scopeLine: 3878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!15093 = !DISubroutineType(types: !15094)
!15094 = !{!135, !15095, !15095}
!15095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15096, size: 64)
!15096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15097 = !DILocalVariable(name: "v1", arg: 1, scope: !15092, file: !3, line: 3877, type: !15095)
!15098 = !DILocation(line: 3877, column: 40, scope: !15092)
!15099 = !DILocalVariable(name: "v2", arg: 2, scope: !15092, file: !3, line: 3877, type: !15095)
!15100 = !DILocation(line: 3877, column: 56, scope: !15092)
!15101 = !DILocalVariable(name: "x1", scope: !15092, file: !3, line: 3879, type: !15102)
!15102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15103, size: 64)
!15103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13812)
!15104 = !DILocation(line: 3879, column: 20, scope: !15092)
!15105 = !DILocation(line: 3879, column: 25, scope: !15092)
!15106 = !DILocalVariable(name: "x2", scope: !15092, file: !3, line: 3879, type: !15102)
!15107 = !DILocation(line: 3879, column: 30, scope: !15092)
!15108 = !DILocation(line: 3879, column: 35, scope: !15092)
!15109 = !DILocation(line: 3881, column: 10, scope: !15092)
!15110 = !DILocation(line: 3881, column: 14, scope: !15092)
!15111 = !DILocation(line: 3881, column: 20, scope: !15092)
!15112 = !DILocation(line: 3881, column: 24, scope: !15092)
!15113 = !DILocation(line: 3881, column: 18, scope: !15092)
!15114 = !DILocation(line: 3881, column: 32, scope: !15092)
!15115 = !DILocation(line: 3881, column: 36, scope: !15092)
!15116 = !DILocation(line: 3881, column: 42, scope: !15092)
!15117 = !DILocation(line: 3881, column: 46, scope: !15092)
!15118 = !DILocation(line: 3881, column: 40, scope: !15092)
!15119 = !DILocation(line: 3881, column: 29, scope: !15092)
!15120 = !DILocation(line: 3881, column: 2, scope: !15092)
!15121 = distinct !DISubprogram(name: "dot_v3v3", scope: !12011, file: !12011, line: 619, type: !15076, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!15122 = !DILocalVariable(name: "a", arg: 1, scope: !15121, file: !12011, line: 619, type: !7396)
!15123 = !DILocation(line: 619, column: 36, scope: !15121)
!15124 = !DILocalVariable(name: "b", arg: 2, scope: !15121, file: !12011, line: 619, type: !7396)
!15125 = !DILocation(line: 619, column: 54, scope: !15121)
!15126 = !DILocation(line: 621, column: 9, scope: !15121)
!15127 = !DILocation(line: 621, column: 16, scope: !15121)
!15128 = !DILocation(line: 621, column: 14, scope: !15121)
!15129 = !DILocation(line: 621, column: 23, scope: !15121)
!15130 = !DILocation(line: 621, column: 30, scope: !15121)
!15131 = !DILocation(line: 621, column: 28, scope: !15121)
!15132 = !DILocation(line: 621, column: 21, scope: !15121)
!15133 = !DILocation(line: 621, column: 37, scope: !15121)
!15134 = !DILocation(line: 621, column: 44, scope: !15121)
!15135 = !DILocation(line: 621, column: 42, scope: !15121)
!15136 = !DILocation(line: 621, column: 35, scope: !15121)
!15137 = !DILocation(line: 621, column: 2, scope: !15121)
!15138 = distinct !DISubprogram(name: "edbm_sort_elements_draw_check_prop", scope: !3, file: !3, line: 4359, type: !15139, scopeLine: 4360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!15139 = !DISubroutineType(types: !15140)
!15140 = !{!2530, !6934, !3977}
!15141 = !DILocalVariable(name: "ptr", arg: 1, scope: !15138, file: !3, line: 4359, type: !6934)
!15142 = !DILocation(line: 4359, column: 60, scope: !15138)
!15143 = !DILocalVariable(name: "prop", arg: 2, scope: !15138, file: !3, line: 4359, type: !3977)
!15144 = !DILocation(line: 4359, column: 78, scope: !15138)
!15145 = !DILocalVariable(name: "prop_id", scope: !15138, file: !3, line: 4361, type: !3575)
!15146 = !DILocation(line: 4361, column: 14, scope: !15138)
!15147 = !DILocation(line: 4361, column: 48, scope: !15138)
!15148 = !DILocation(line: 4361, column: 24, scope: !15138)
!15149 = !DILocalVariable(name: "action", scope: !15138, file: !3, line: 4362, type: !4052)
!15150 = !DILocation(line: 4362, column: 12, scope: !15138)
!15151 = !DILocation(line: 4362, column: 34, scope: !15138)
!15152 = !DILocation(line: 4362, column: 21, scope: !15138)
!15153 = !DILocation(line: 4365, column: 6, scope: !15154)
!15154 = distinct !DILexicalBlock(scope: !15138, file: !3, line: 4365, column: 6)
!15155 = !DILocation(line: 4365, column: 6, scope: !15138)
!15156 = !DILocation(line: 4366, column: 7, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15158, file: !3, line: 4366, column: 7)
!15158 = distinct !DILexicalBlock(scope: !15154, file: !3, line: 4365, column: 30)
!15159 = !DILocation(line: 4366, column: 14, scope: !15157)
!15160 = !DILocation(line: 4366, column: 7, scope: !15158)
!15161 = !DILocation(line: 4367, column: 4, scope: !15157)
!15162 = !DILocation(line: 4369, column: 4, scope: !15157)
!15163 = !DILocation(line: 4373, column: 6, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15138, file: !3, line: 4373, column: 6)
!15165 = !DILocation(line: 4373, column: 6, scope: !15138)
!15166 = !DILocation(line: 4374, column: 7, scope: !15167)
!15167 = distinct !DILexicalBlock(scope: !15168, file: !3, line: 4374, column: 7)
!15168 = distinct !DILexicalBlock(scope: !15164, file: !3, line: 4373, column: 33)
!15169 = !DILocation(line: 4374, column: 7, scope: !15168)
!15170 = !DILocation(line: 4375, column: 4, scope: !15167)
!15171 = !DILocation(line: 4377, column: 4, scope: !15167)
!15172 = !DILocation(line: 4380, column: 2, scope: !15138)
!15173 = !DILocation(line: 4381, column: 1, scope: !15138)
!15174 = distinct !DISubprogram(name: "edbm_bridge_tag_boundary_edges", scope: !3, file: !3, line: 4516, type: !11271, scopeLine: 4517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4028)
!15175 = !DILocalVariable(name: "bm", arg: 1, scope: !15174, file: !3, line: 4516, type: !3610)
!15176 = !DILocation(line: 4516, column: 50, scope: !15174)
!15177 = !DILocalVariable(name: "iter", scope: !15174, file: !3, line: 4519, type: !4456)
!15178 = !DILocation(line: 4519, column: 9, scope: !15174)
!15179 = !DILocalVariable(name: "f", scope: !15174, file: !3, line: 4520, type: !1420)
!15180 = !DILocation(line: 4520, column: 10, scope: !15174)
!15181 = !DILocalVariable(name: "e", scope: !15174, file: !3, line: 4521, type: !1418)
!15182 = !DILocation(line: 4521, column: 10, scope: !15174)
!15183 = !DILocalVariable(name: "totface_del", scope: !15174, file: !3, line: 4522, type: !135)
!15184 = !DILocation(line: 4522, column: 6, scope: !15174)
!15185 = !DILocation(line: 4524, column: 33, scope: !15174)
!15186 = !DILocation(line: 4524, column: 2, scope: !15174)
!15187 = !DILocation(line: 4526, column: 2, scope: !15188)
!15188 = distinct !DILexicalBlock(scope: !15174, file: !3, line: 4526, column: 2)
!15189 = !DILocation(line: 4526, column: 2, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15188, file: !3, line: 4526, column: 2)
!15191 = !DILocation(line: 4527, column: 7, scope: !15192)
!15192 = distinct !DILexicalBlock(scope: !15193, file: !3, line: 4527, column: 7)
!15193 = distinct !DILexicalBlock(scope: !15190, file: !3, line: 4526, column: 48)
!15194 = !DILocation(line: 4527, column: 7, scope: !15193)
!15195 = !DILocation(line: 4528, column: 24, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15197, file: !3, line: 4528, column: 8)
!15197 = distinct !DILexicalBlock(scope: !15192, file: !3, line: 4527, column: 45)
!15198 = !DILocation(line: 4528, column: 8, scope: !15196)
!15199 = !DILocation(line: 4528, column: 27, scope: !15196)
!15200 = !DILocation(line: 4528, column: 50, scope: !15196)
!15201 = !DILocation(line: 4528, column: 30, scope: !15196)
!15202 = !DILocation(line: 4528, column: 8, scope: !15197)
!15203 = !DILocation(line: 4529, column: 5, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15196, file: !3, line: 4528, column: 54)
!15205 = !DILocation(line: 4530, column: 4, scope: !15204)
!15206 = !DILocalVariable(name: "fiter", scope: !15207, file: !3, line: 4532, type: !4456)
!15207 = distinct !DILexicalBlock(scope: !15196, file: !3, line: 4531, column: 9)
!15208 = !DILocation(line: 4532, column: 12, scope: !15207)
!15209 = !DILocalVariable(name: "is_all_sel", scope: !15207, file: !3, line: 4533, type: !2530)
!15210 = !DILocation(line: 4533, column: 10, scope: !15207)
!15211 = !DILocation(line: 4535, column: 5, scope: !15212)
!15212 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 4535, column: 5)
!15213 = !DILocation(line: 4535, column: 5, scope: !15214)
!15214 = distinct !DILexicalBlock(scope: !15212, file: !3, line: 4535, column: 5)
!15215 = !DILocation(line: 4536, column: 10, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15217, file: !3, line: 4536, column: 10)
!15217 = distinct !DILexicalBlock(scope: !15214, file: !3, line: 4535, column: 51)
!15218 = !DILocation(line: 4536, column: 10, scope: !15217)
!15219 = !DILocation(line: 4538, column: 12, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15221, file: !3, line: 4538, column: 11)
!15221 = distinct !DILexicalBlock(scope: !15216, file: !3, line: 4536, column: 48)
!15222 = !DILocation(line: 4538, column: 11, scope: !15221)
!15223 = !DILocation(line: 4539, column: 8, scope: !15224)
!15224 = distinct !DILexicalBlock(scope: !15220, file: !3, line: 4538, column: 47)
!15225 = !DILocation(line: 4540, column: 19, scope: !15224)
!15226 = !DILocation(line: 4541, column: 7, scope: !15224)
!15227 = !DILocation(line: 4542, column: 6, scope: !15221)
!15228 = !DILocation(line: 4544, column: 18, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !15216, file: !3, line: 4543, column: 11)
!15230 = !DILocation(line: 4546, column: 5, scope: !15217)
!15231 = distinct !{!15231, !15211, !15232}
!15232 = !DILocation(line: 4546, column: 5, scope: !15212)
!15233 = !DILocation(line: 4548, column: 9, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 4548, column: 9)
!15235 = !DILocation(line: 4548, column: 20, scope: !15234)
!15236 = !DILocation(line: 4548, column: 9, scope: !15207)
!15237 = !DILocation(line: 4549, column: 6, scope: !15238)
!15238 = distinct !DILexicalBlock(scope: !15234, file: !3, line: 4548, column: 30)
!15239 = !DILocation(line: 4550, column: 5, scope: !15238)
!15240 = !DILocation(line: 4552, column: 3, scope: !15197)
!15241 = !DILocation(line: 4553, column: 2, scope: !15193)
!15242 = distinct !{!15242, !15187, !15243}
!15243 = !DILocation(line: 4553, column: 2, scope: !15188)
!15244 = !DILocation(line: 4555, column: 9, scope: !15174)
!15245 = !DILocation(line: 4555, column: 2, scope: !15174)
